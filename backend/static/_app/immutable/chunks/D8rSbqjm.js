import{e as i}from"./Cx1AvSPh.js";const s=async(a,e)=>{let n=null;const o=await fetch(`${i}/functions/create`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${a}`},body:JSON.stringify({...e})}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(n=t.detail,console.error(t),null));if(n)throw n;return o},l=async(a="")=>{let e=null;const n=await fetch(`${i}/functions/`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${a}`}}).then(async o=>{if(!o.ok)throw await o.json();return o.json()}).then(o=>o).catch(o=>(e=o.detail,console.error(o),null));if(e)throw e;return n},u=async(a="",e)=>{let n=null;const o=await fetch(`${i}/functions/load/url`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${a}`},body:JSON.stringify({url:e})}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(n=t.detail,console.error(t),null));if(n)throw n;return o},h=async(a="")=>{let e=null;const n=await fetch(`${i}/functions/export`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${a}`}}).then(async o=>{if(!o.ok)throw await o.json();return o.json()}).then(o=>o).catch(o=>(e=o.detail,console.error(o),null));if(e)throw e;return n},p=async(a,e)=>{let n=null;const o=await fetch(`${i}/functions/id/${e}`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${a}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(n=t.detail,console.error(t),null));if(n)throw n;return o},d=async(a,e,n)=>{let o=null;const t=await fetch(`${i}/functions/id/${e}/update`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${a}`},body:JSON.stringify({...n})}).then(async r=>{if(!r.ok)throw await r.json();return r.json()}).then(r=>r).catch(r=>(o=r.detail,console.error(r),null));if(o)throw o;return t},f=async(a,e)=>{let n=null;const o=await fetch(`${i}/functions/id/${e}/delete`,{method:"DELETE",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${a}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(n=t.detail,console.error(t),null));if(n)throw n;return o},y=async(a,e)=>{let n=null;const o=await fetch(`${i}/functions/id/${e}/toggle`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${a}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(n=t.detail,console.error(t),null));if(n)throw n;return o},j=async(a,e)=>{let n=null;const o=await fetch(`${i}/functions/id/${e}/toggle/global`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${a}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(n=t.detail,console.error(t),null));if(n)throw n;return o},w=async(a,e)=>{let n=null;const o=await fetch(`${i}/functions/id/${e}/valves`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${a}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(n=t.detail,console.error(t),null));if(n)throw n;return o},$=async(a,e)=>{let n=null;const o=await fetch(`${i}/functions/id/${e}/valves/spec`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${a}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(n=t.detail,console.error(t),null));if(n)throw n;return o},T=async(a,e,n)=>{let o=null;const t=await fetch(`${i}/functions/id/${e}/valves/update`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${a}`},body:JSON.stringify({...n})}).then(async r=>{if(!r.ok)throw await r.json();return r.json()}).then(r=>r).catch(r=>(o=r.detail,console.error(r),null));if(o)throw o;return t},B=async(a,e)=>{let n=null;const o=await fetch(`${i}/functions/id/${e}/valves/user`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${a}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(n=t.detail,console.error(t),null));if(n)throw n;return o},g=async(a,e)=>{let n=null;const o=await fetch(`${i}/functions/id/${e}/valves/user/spec`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${a}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(n=t.detail,console.error(t),null));if(n)throw n;return o},m=async(a,e,n)=>{let o=null;const t=await fetch(`${i}/functions/id/${e}/valves/user/update`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${a}`},body:JSON.stringify({...n})}).then(async r=>{if(!r.ok)throw await r.json();return r.json()}).then(r=>r).catch(r=>(o=r.detail,console.error(r),null));if(o)throw o;return t};export{p as a,w as b,s as c,$ as d,T as e,f,l as g,y as h,h as i,B as j,g as k,u as l,m,j as t,d as u};
//# sourceMappingURL=D8rSbqjm.js.map
