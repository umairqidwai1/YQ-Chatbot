import{A as i}from"./Cx1AvSPh.js";const l=async a=>{let o=null;const n=await fetch(`${i}/config`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${a}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.error(t),o=t.detail,null));if(o)throw o;return n},h=async(a,o)=>{let n=null;const t=await fetch(`${i}/config/update`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${a}`},body:JSON.stringify({...o})}).then(async e=>{if(!e.ok)throw await e.json();return e.json()}).catch(e=>(console.error(e),n=e.detail,null));if(n)throw n;return t},u=async(a,o,n)=>{const t=new FormData;t.append("file",o),n&&t.append("language",n);let e=null;const s=await fetch(`${i}/transcriptions`,{method:"POST",headers:{Accept:"application/json",authorization:`Bearer ${a}`},body:t}).then(async r=>{if(!r.ok)throw await r.json();return r.json()}).catch(r=>(e=r.detail,console.error(r),null));if(e)throw e;return s},d=async(a="",o="alloy",n="",t)=>{let e=null;const s=await fetch(`${i}/speech`,{method:"POST",headers:{Authorization:`Bearer ${a}`,"Content-Type":"application/json"},body:JSON.stringify({input:n,voice:o,...t})}).then(async r=>{if(!r.ok)throw await r.json();return r}).catch(r=>(e=r.detail,console.error(r),null));if(e)throw e;return s},p=async(a="")=>{let o=null;const n=await fetch(`${i}/models`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${a}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(o=t.detail,console.error(t),null));if(o)throw o;return n},f=async(a="")=>{let o=null;const n=await fetch(`${i}/voices`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${a}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(o=t.detail,console.error(t),null));if(o)throw o;return n};export{p as a,f as b,l as g,d as s,u as t,h as u};
//# sourceMappingURL=C7z_5WAu.js.map
