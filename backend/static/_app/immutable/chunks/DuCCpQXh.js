import{g as p,h as l}from"./BmtUElco.js";const f=async(i="")=>{let e=null;const o=await fetch(`${l}/config`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...i&&{authorization:`Bearer ${i}`}}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).catch(n=>(console.error(n),"detail"in n?e=n.detail:e="Server connection failed",null));if(e)throw e;return o},w=async(i="",e)=>{let o=null;const n=await fetch(`${l}/config/update`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...i&&{authorization:`Bearer ${i}`}},body:JSON.stringify({...e})}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.error(t),"detail"in t?o=t.detail:o="Server connection failed",null));if(o)throw o;return n},d=async(i,e)=>{let o=null;const n=await fetch(`${i}/models`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>{var a;return o=`OpenAI: ${((a=t==null?void 0:t.error)==null?void 0:a.message)??"Network Problem"}`,[]});if(o)throw o;return n},y=async(i,e)=>{let o=null;const n=await fetch(`${l}/models${typeof e=="number"?`/${e}`:""}`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...i&&{authorization:`Bearer ${i}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>{var a;return o=`OpenAI: ${((a=t==null?void 0:t.error)==null?void 0:a.message)??"Network Problem"}`,[]});if(o)throw o;return n},j=async(i="",e={},o=!1)=>{const{url:n,key:t,config:a}=e;if(!n)throw"OpenAI: URL is required";let c=null,h=null;if(o){if(h=await fetch(`${n}/models`,{method:"GET",headers:{Accept:"application/json",Authorization:`Bearer ${t}`,"Content-Type":"application/json"}}).then(async r=>{if(!r.ok)throw await r.json();return r.json()}).catch(r=>{var s;return c=`OpenAI: ${((s=r==null?void 0:r.error)==null?void 0:s.message)??"Network Problem"}`,[]}),c)throw c}else if(h=await fetch(`${l}/verify`,{method:"POST",headers:{Accept:"application/json",Authorization:`Bearer ${i}`,"Content-Type":"application/json"},body:JSON.stringify({url:n,key:t,config:a})}).then(async r=>{if(!r.ok)throw await r.json();return r.json()}).catch(r=>{var s;return c=`OpenAI: ${((s=r==null?void 0:r.error)==null?void 0:s.message)??"Network Problem"}`,[]}),c)throw c;return h},m=async(i="",e,o=`${p}/api`)=>{const n=new AbortController;let t=null;const a=await fetch(`${o}/chat/completions`,{signal:n.signal,method:"POST",headers:{Authorization:`Bearer ${i}`,"Content-Type":"application/json"},body:JSON.stringify(e)}).catch(c=>(console.error(c),t=c,null));if(t)throw t;return[a,n]},A=async(i="",e,o=`${p}/api`)=>{let n=null;const t=await fetch(`${o}/chat/completions`,{method:"POST",headers:{Authorization:`Bearer ${i}`,"Content-Type":"application/json"},body:JSON.stringify(e)}).then(async a=>{if(!a.ok)throw await a.json();return a.json()}).catch(a=>(n=`${(a==null?void 0:a.detail)??a}`,null));if(n)throw n;return t};export{y as a,d as b,m as c,A as d,f as g,w as u,j as v};
//# sourceMappingURL=DuCCpQXh.js.map
