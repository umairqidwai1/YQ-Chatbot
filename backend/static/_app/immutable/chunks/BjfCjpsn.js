import{e as i}from"./Cx1AvSPh.js";const s=async(r,a,t,e)=>{let n=null;const o=await fetch(`${i}/knowledge/create`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${r}`},body:JSON.stringify({name:a,description:t,access_control:e})}).then(async c=>{if(!c.ok)throw await c.json();return c.json()}).catch(c=>(n=c.detail,console.error(c),null));if(n)throw n;return o},h=async(r="")=>{let a=null;const t=await fetch(`${i}/knowledge/`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${r}`}}).then(async e=>{if(!e.ok)throw await e.json();return e.json()}).then(e=>e).catch(e=>(a=e.detail,console.error(e),null));if(a)throw a;return t},d=async(r="")=>{let a=null;const t=await fetch(`${i}/knowledge/list`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${r}`}}).then(async e=>{if(!e.ok)throw await e.json();return e.json()}).then(e=>e).catch(e=>(a=e.detail,console.error(e),null));if(a)throw a;return t},u=async(r,a)=>{let t=null;const e=await fetch(`${i}/knowledge/${a}`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${r}`}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).then(n=>n).catch(n=>(t=n.detail,console.error(n),null));if(t)throw t;return e},p=async(r,a,t)=>{let e=null;const n=await fetch(`${i}/knowledge/${a}/update`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${r}`},body:JSON.stringify({name:t!=null&&t.name?t.name:void 0,description:t!=null&&t.description?t.description:void 0,data:t!=null&&t.data?t.data:void 0,access_control:t.access_control})}).then(async o=>{if(!o.ok)throw await o.json();return o.json()}).then(o=>o).catch(o=>(e=o.detail,console.error(o),null));if(e)throw e;return n},w=async(r,a,t)=>{let e=null;const n=await fetch(`${i}/knowledge/${a}/file/add`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${r}`},body:JSON.stringify({file_id:t})}).then(async o=>{if(!o.ok)throw await o.json();return o.json()}).then(o=>o).catch(o=>(e=o.detail,console.error(o),null));if(e)throw e;return n},y=async(r,a,t)=>{let e=null;const n=await fetch(`${i}/knowledge/${a}/file/update`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${r}`},body:JSON.stringify({file_id:t})}).then(async o=>{if(!o.ok)throw await o.json();return o.json()}).then(o=>o).catch(o=>(e=o.detail,console.error(o),null));if(e)throw e;return n},j=async(r,a,t)=>{let e=null;const n=await fetch(`${i}/knowledge/${a}/file/remove`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${r}`},body:JSON.stringify({file_id:t})}).then(async o=>{if(!o.ok)throw await o.json();return o.json()}).then(o=>o).catch(o=>(e=o.detail,console.error(o),null));if(e)throw e;return n},g=async(r,a)=>{let t=null;const e=await fetch(`${i}/knowledge/${a}/reset`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${r}`}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).then(n=>n).catch(n=>(t=n.detail,console.error(n),null));if(t)throw t;return e},$=async(r,a)=>{let t=null;const e=await fetch(`${i}/knowledge/${a}/delete`,{method:"DELETE",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${r}`}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).then(n=>n).catch(n=>(t=n.detail,console.error(n),null));if(t)throw t;return e},f=async r=>{let a=null;const t=await fetch(`${i}/knowledge/reindex`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${r}`}}).then(async e=>{if(!e.ok)throw await e.json();return e.json()}).catch(e=>(a=e.detail,console.error(e),null));if(a)throw a;return t};export{d as a,u as b,s as c,$ as d,w as e,j as f,h as g,p as h,f as i,g as r,y as u};
//# sourceMappingURL=BjfCjpsn.js.map
