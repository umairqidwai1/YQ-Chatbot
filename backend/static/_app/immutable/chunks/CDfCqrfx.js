import{e as s}from"./BmtUElco.js";import{g as h}from"./DB_xkffJ.js";const d=async(e,o)=>{let a=null;const n=await fetch(`${s}/chats/new`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${e}`},body:JSON.stringify({chat:o})}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(a=t,console.error(t),null));if(a)throw a;return n},w=async(e,o,a,n,t)=>{let r=null;const c=await fetch(`${s}/chats/import`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${e}`},body:JSON.stringify({chat:o,meta:a??{},pinned:n,folder_id:t})}).then(async i=>{if(!i.ok)throw await i.json();return i.json()}).catch(i=>(r=i,console.error(i),null));if(r)throw r;return c},y=async(e="",o=null)=>{let a=null;const n=new URLSearchParams;o!==null&&n.append("page",`${o}`);const t=await fetch(`${s}/chats/?${n.toString()}`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async r=>{if(!r.ok)throw await r.json();return r.json()}).then(r=>r).catch(r=>(a=r,console.error(r),null));if(a)throw a;return t.map(r=>({...r,time_range:h(r.updated_at)}))},j=async(e="",o,a=1,n)=>{let t=null;const r=new URLSearchParams;r.append("page",`${a}`),n&&Object.entries(n).forEach(([i,l])=>{l!=null&&r.append(i,l.toString())});const c=await fetch(`${s}/chats/list/user/${o}?${r.toString()}`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async i=>{if(!i.ok)throw await i.json();return i.json()}).then(i=>i).catch(i=>(t=i,console.error(i),null));if(t)throw t;return c.map(i=>({...i,time_range:h(i.updated_at)}))},f=async(e="",o=1,a)=>{let n=null;const t=new URLSearchParams;t.append("page",`${o}`),a&&Object.entries(a).forEach(([c,i])=>{i!=null&&t.append(c,i.toString())});const r=await fetch(`${s}/chats/archived?${t.toString()}`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async c=>{if(!c.ok)throw await c.json();return c.json()}).then(c=>c).catch(c=>(n=c,console.error(c),null));if(n)throw n;return r.map(c=>({...c,time_range:h(c.updated_at)}))},$=async e=>{let o=null;const a=await fetch(`${s}/chats/all`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).then(n=>n).catch(n=>(o=n,console.error(n),null));if(o)throw o;return a},T=async(e,o,a=1)=>{let n=null;const t=new URLSearchParams;t.append("text",o),t.append("page",`${a}`);const r=await fetch(`${s}/chats/search?${t.toString()}`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async c=>{if(!c.ok)throw await c.json();return c.json()}).then(c=>c).catch(c=>(n=c,console.error(c),null));if(n)throw n;return r.map(c=>({...c,time_range:h(c.updated_at)}))},m=async(e,o)=>{let a=null;const n=await fetch(`${s}/chats/folder/${o}`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(a=t,console.error(t),null));if(a)throw a;return n},C=async e=>{let o=null;const a=await fetch(`${s}/chats/all/archived`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).then(n=>n).catch(n=>(o=n,console.error(n),null));if(o)throw o;return a},B=async e=>{let o=null;const a=await fetch(`${s}/chats/all/db`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).then(n=>n).catch(n=>(o=n,console.error(n),null));if(o)throw o;return a},g=async e=>{let o=null;const a=await fetch(`${s}/chats/all/tags`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).then(n=>n).catch(n=>(o=n,console.error(n),null));if(o)throw o;return a},A=async(e="")=>{let o=null;const a=await fetch(`${s}/chats/pinned`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).then(n=>n).catch(n=>(o=n,console.error(n),null));if(o)throw o;return a.map(n=>({...n,time_range:h(n.updated_at)}))},S=async(e,o)=>{let a=null;const n=await fetch(`${s}/chats/${o}`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(a=t.detail,console.error(t),null));if(a)throw a;return n},z=async(e,o)=>{let a=null;const n=await fetch(`${s}/chats/share/${o}`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(a=t,console.error(t),null));if(a)throw a;return n},E=async(e,o)=>{let a=null;const n=await fetch(`${s}/chats/${o}/pinned`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(a=t,"detail"in t?a=t.detail:a=t,console.error(t),null));if(a)throw a;return n},P=async(e,o)=>{let a=null;const n=await fetch(`${s}/chats/${o}/pin`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(a=t,"detail"in t?a=t.detail:a=t,console.error(t),null));if(a)throw a;return n},I=async(e,o,a)=>{let n=null;const t=await fetch(`${s}/chats/${o}/clone`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}},body:JSON.stringify({...a&&{title:a}})}).then(async r=>{if(!r.ok)throw await r.json();return r.json()}).then(r=>r).catch(r=>(n=r,"detail"in r?n=r.detail:n=r,console.error(r),null));if(n)throw n;return t},O=async(e,o)=>{let a=null;const n=await fetch(`${s}/chats/${o}/clone/shared`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(a=t,"detail"in t?a=t.detail:a=t,console.error(t),null));if(a)throw a;return n},_=async(e,o)=>{let a=null;const n=await fetch(`${s}/chats/${o}/share`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(a=t,console.error(t),null));if(a)throw a;return n},G=async(e,o,a)=>{let n=null;const t=await fetch(`${s}/chats/${o}/folder`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}},body:JSON.stringify({folder_id:a})}).then(async r=>{if(!r.ok)throw await r.json();return r.json()}).then(r=>r).catch(r=>(n=r,console.error(r),null));if(n)throw n;return t},L=async(e,o)=>{let a=null;const n=await fetch(`${s}/chats/${o}/archive`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(a=t,console.error(t),null));if(a)throw a;return n},b=async(e,o)=>{let a=null;const n=await fetch(`${s}/chats/${o}/share`,{method:"DELETE",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(a=t,console.error(t),null));if(a)throw a;return n},N=async(e,o,a)=>{let n=null;const t=await fetch(`${s}/chats/${o}`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}},body:JSON.stringify({chat:a})}).then(async r=>{if(!r.ok)throw await r.json();return r.json()}).then(r=>r).catch(r=>(n=r,console.error(r),null));if(n)throw n;return t},U=async(e,o)=>{let a=null;const n=await fetch(`${s}/chats/${o}`,{method:"DELETE",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(a=t.detail,console.error(t),null));if(a)throw a;return n},v=async(e,o)=>{let a=null;const n=await fetch(`${s}/chats/${o}/tags`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(a=t,console.error(t),null));if(a)throw a;return n},J=async(e,o,a)=>{let n=null;const t=await fetch(`${s}/chats/${o}/tags`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}},body:JSON.stringify({name:a})}).then(async r=>{if(!r.ok)throw await r.json();return r.json()}).then(r=>r).catch(r=>(n=r.detail,console.error(r),null));if(n)throw n;return t},R=async(e,o,a)=>{let n=null;const t=await fetch(`${s}/chats/${o}/tags`,{method:"DELETE",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}},body:JSON.stringify({name:a})}).then(async r=>{if(!r.ok)throw await r.json();return r.json()}).then(r=>r).catch(r=>(n=r,console.error(r),null));if(n)throw n;return t},x=async e=>{let o=null;const a=await fetch(`${s}/chats/`,{method:"DELETE",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).then(n=>n).catch(n=>(o=n.detail,console.error(n),null));if(o)throw o;return a},D=async e=>{let o=null;const a=await fetch(`${s}/chats/archive/all`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).then(n=>n).catch(n=>(o=n.detail,console.error(n),null));if(o)throw o;return a};export{D as A,x as B,d as C,v as a,J as b,O as c,U as d,g as e,R as f,z as g,S as h,b as i,y as j,j as k,B as l,f as m,C as n,L as o,E as p,A as q,I as r,_ as s,P as t,N as u,m as v,w,G as x,T as y,$ as z};
//# sourceMappingURL=CDfCqrfx.js.map
