import{e as i}from"./Cx1AvSPh.js";const u=async a=>{let o=null;const n=await fetch(`${i}/auths/admin/details`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${a}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.error(t),o=t.detail,null));if(o)throw o;return n},d=async a=>{let o=null;const n=await fetch(`${i}/auths/admin/config`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${a}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.error(t),o=t.detail,null));if(o)throw o;return n},p=async(a,o)=>{let n=null;const t=await fetch(`${i}/auths/admin/config`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${a}`},body:JSON.stringify(o)}).then(async e=>{if(!e.ok)throw await e.json();return e.json()}).catch(e=>(console.error(e),n=e.detail,null));if(n)throw n;return t},y=async a=>{let o=null;const n=await fetch(`${i}/auths/`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${a}`},credentials:"include"}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.error(t),o=t.detail,null));if(o)throw o;return n},f=async(a,o)=>{let n=null;const t=await fetch(`${i}/auths/ldap`,{method:"POST",headers:{"Content-Type":"application/json"},credentials:"include",body:JSON.stringify({user:a,password:o})}).then(async e=>{if(!e.ok)throw await e.json();return e.json()}).catch(e=>(console.error(e),n=e.detail,null));if(n)throw n;return t},w=async(a="")=>{let o=null;const n=await fetch(`${i}/auths/admin/config/ldap`,{method:"GET",headers:{"Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.error(t),o=t.detail,null));if(o)throw o;return n},j=async(a="",o)=>{let n=null;const t=await fetch(`${i}/auths/admin/config/ldap`,{method:"POST",headers:{"Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}},body:JSON.stringify({enable_ldap:o})}).then(async e=>{if(!e.ok)throw await e.json();return e.json()}).catch(e=>(console.error(e),n=e.detail,null));if(n)throw n;return t},g=async(a="")=>{let o=null;const n=await fetch(`${i}/auths/admin/config/ldap/server`,{method:"GET",headers:{"Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.error(t),o=t.detail,null));if(o)throw o;return n},T=async(a="",o)=>{let n=null;const t=await fetch(`${i}/auths/admin/config/ldap/server`,{method:"POST",headers:{"Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}},body:JSON.stringify(o)}).then(async e=>{if(!e.ok)throw await e.json();return e.json()}).catch(e=>(console.error(e),n=e.detail,null));if(n)throw n;return t},m=async(a,o)=>{let n=null;const t=await fetch(`${i}/auths/signin`,{method:"POST",headers:{"Content-Type":"application/json"},credentials:"include",body:JSON.stringify({email:a,password:o})}).then(async e=>{if(!e.ok)throw await e.json();return e.json()}).catch(e=>(console.error(e),n=e.detail,null));if(n)throw n;return t},$=async(a,o,n,t)=>{let e=null;const r=await fetch(`${i}/auths/signup`,{method:"POST",headers:{"Content-Type":"application/json"},credentials:"include",body:JSON.stringify({name:a,email:o,password:n,profile_image_url:t})}).then(async s=>{if(!s.ok)throw await s.json();return s.json()}).catch(s=>(console.error(s),e=s.detail,null));if(e)throw e;return r},S=async()=>{let a=null;const o=await fetch(`${i}/auths/signout`,{method:"GET",headers:{"Content-Type":"application/json"},credentials:"include"}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).catch(n=>(console.error(n),a=n.detail,null));if(a)throw a;return o},C=async(a,o,n,t,e="pending",r=null)=>{let s=null;const l=await fetch(`${i}/auths/add`,{method:"POST",headers:{"Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}},body:JSON.stringify({name:o,email:n,password:t,role:e,...r&&{profile_image_url:r}})}).then(async c=>{if(!c.ok)throw await c.json();return c.json()}).catch(c=>(console.error(c),s=c.detail,null));if(s)throw s;return l},O=async(a,o,n)=>{let t=null;const e=await fetch(`${i}/auths/update/profile`,{method:"POST",headers:{"Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}},body:JSON.stringify({name:o,profile_image_url:n})}).then(async r=>{if(!r.ok)throw await r.json();return r.json()}).catch(r=>(console.error(r),t=r.detail,null));if(t)throw t;return e},k=async(a,o,n)=>{let t=null;const e=await fetch(`${i}/auths/update/password`,{method:"POST",headers:{"Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}},body:JSON.stringify({password:o,new_password:n})}).then(async r=>{if(!r.ok)throw await r.json();return r.json()}).catch(r=>(console.error(r),t=r.detail,null));if(t)throw t;return e},B=async a=>{let o=null;const n=await fetch(`${i}/auths/api_key`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${a}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.error(t),o=t.detail,null));if(o)throw o;return n.api_key},P=async a=>{let o=null;const n=await fetch(`${i}/auths/api_key`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${a}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.error(t),o=t.detail,null));if(o)throw o;return n.api_key};export{$ as a,S as b,C as c,d,g as e,w as f,y as g,p as h,j as i,T as j,k,f as l,P as m,O as n,B as o,u as p,m as u};
//# sourceMappingURL=BVEAbItY.js.map
