import{e as l}from"./BmtUElco.js";const s=async(r,o,e)=>{const n=new FormData;n.append("file",o),e&&n.append("metadata",JSON.stringify(e));let t=null;const a=await fetch(`${l}/files/`,{method:"POST",headers:{Accept:"application/json",authorization:`Bearer ${r}`},body:n}).then(async i=>{if(!i.ok)throw await i.json();return i.json()}).catch(i=>(t=i.detail,console.error(i),null));if(t)throw t;return a},h=async(r,o)=>{let e=null;const n=await fetch(`${l}/files/${o}`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${r}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(e=t.detail,console.error(t),null));if(e)throw e;return n},u=async(r,o,e)=>{let n=null;const t=await fetch(`${l}/files/${o}/data/content/update`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${r}`},body:JSON.stringify({content:e})}).then(async a=>{if(!a.ok)throw await a.json();return a.json()}).then(a=>a).catch(a=>(n=a.detail,console.error(a),null));if(n)throw n;return t},p=async(r,o)=>{let e=null;const n=await fetch(`${l}/files/${o}`,{method:"DELETE",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${r}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(e=t.detail,console.error(t),null));if(e)throw e;return n},d=async r=>{let o=null;const e=await fetch(`${l}/files/all`,{method:"DELETE",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${r}`}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).then(n=>n).catch(n=>(o=n.detail,console.error(n),null));if(o)throw o;return e};export{u as a,p as b,d,h as g,s as u};
//# sourceMappingURL=-zWpWX4S.js.map
