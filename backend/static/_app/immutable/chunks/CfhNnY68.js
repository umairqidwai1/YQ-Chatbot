import{e as c}from"./BmtUElco.js";const h=async(s="",r)=>{let o=null;const a=await fetch(`${c}/channels/create`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${s}`},body:JSON.stringify({...r})}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(o=t.detail,console.error(t),null));if(o)throw o;return a},u=async(s="")=>{let r=null;const o=await fetch(`${c}/channels/`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${s}`}}).then(async a=>{if(!a.ok)throw await a.json();return a.json()}).then(a=>a).catch(a=>(r=a.detail,console.error(a),null));if(r)throw r;return o},p=async(s="",r)=>{let o=null;const a=await fetch(`${c}/channels/${r}`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${s}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(o=t.detail,console.error(t),null));if(o)throw o;return a},d=async(s="",r,o)=>{let a=null;const t=await fetch(`${c}/channels/${r}/update`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${s}`},body:JSON.stringify({...o})}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).then(n=>n).catch(n=>(a=n.detail,console.error(n),null));if(a)throw a;return t},y=async(s="",r)=>{let o=null;const a=await fetch(`${c}/channels/${r}/delete`,{method:"DELETE",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${s}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(o=t.detail,console.error(t),null));if(o)throw o;return a},w=async(s="",r,o=0,a=50)=>{let t=null;const n=await fetch(`${c}/channels/${r}/messages?skip=${o}&limit=${a}`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${s}`}}).then(async e=>{if(!e.ok)throw await e.json();return e.json()}).then(e=>e).catch(e=>(t=e.detail,console.error(e),null));if(t)throw t;return n},j=async(s="",r,o,a=0,t=50)=>{let n=null;const e=await fetch(`${c}/channels/${r}/messages/${o}/thread?skip=${a}&limit=${t}`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${s}`}}).then(async i=>{if(!i.ok)throw await i.json();return i.json()}).then(i=>i).catch(i=>(n=i.detail,console.error(i),null));if(n)throw n;return e},f=async(s="",r,o)=>{let a=null;const t=await fetch(`${c}/channels/${r}/messages/post`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${s}`},body:JSON.stringify({...o})}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).then(n=>n).catch(n=>(a=n.detail,console.error(n),null));if(a)throw a;return t},$=async(s="",r,o,a)=>{let t=null;const n=await fetch(`${c}/channels/${r}/messages/${o}/update`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${s}`},body:JSON.stringify({...a})}).then(async e=>{if(!e.ok)throw await e.json();return e.json()}).then(e=>e).catch(e=>(t=e.detail,console.error(e),null));if(t)throw t;return n},m=async(s="",r,o,a)=>{let t=null;const n=await fetch(`${c}/channels/${r}/messages/${o}/reactions/add`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${s}`},body:JSON.stringify({name:a})}).then(async e=>{if(!e.ok)throw await e.json();return e.json()}).then(e=>e).catch(e=>(t=e.detail,console.error(e),null));if(t)throw t;return n},T=async(s="",r,o,a)=>{let t=null;const n=await fetch(`${c}/channels/${r}/messages/${o}/reactions/remove`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${s}`},body:JSON.stringify({name:a})}).then(async e=>{if(!e.ok)throw await e.json();return e.json()}).then(e=>e).catch(e=>(t=e.detail,console.error(e),null));if(t)throw t;return n},g=async(s="",r,o)=>{let a=null;const t=await fetch(`${c}/channels/${r}/messages/${o}/delete`,{method:"DELETE",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${s}`}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).then(n=>n).catch(n=>(a=n.detail,console.error(n),null));if(a)throw a;return t};export{m as a,p as b,w as c,g as d,y as e,d as f,j as g,u as h,h as i,T as r,f as s,$ as u};
//# sourceMappingURL=CfhNnY68.js.map
