var X1=Object.defineProperty;var Z1=(T,k,A)=>k in T?X1(T,k,{enumerable:!0,configurable:!0,writable:!0,value:A}):T[k]=A;var We=(T,k,A)=>Z1(T,typeof k!="symbol"?k+"":k,A);var ud={},Pp={"./node_modules/onnxruntime-web/dist/ort-wasm-simd-threaded.jsep.wasm":(T,k,A)=>{T.exports=A.p+"ort-wasm-simd-threaded.jsep.wasm"},"./node_modules/onnxruntime-web/dist/ort.bundle.min.mjs?46eb":(T,k,A)=>{T.exports=A.p+"ort.bundle.min.mjs"},"?2ce3":()=>{},"?7a2c":()=>{},"?a42a":()=>{},"?2b25":()=>{},"?569f":()=>{},"?3f59":()=>{},"?154a":()=>{},"./node_modules/@huggingface/jinja/dist/index.js":(T,k,A)=>{A.r(k),A.d(k,{Environment:()=>zt,Interpreter:()=>Wt,Template:()=>Pe,parse:()=>Se,tokenize:()=>R});var w=Object.freeze({Text:"Text",NumericLiteral:"NumericLiteral",BooleanLiteral:"BooleanLiteral",NullLiteral:"NullLiteral",StringLiteral:"StringLiteral",Identifier:"Identifier",Equals:"Equals",OpenParen:"OpenParen",CloseParen:"CloseParen",OpenStatement:"OpenStatement",CloseStatement:"CloseStatement",OpenExpression:"OpenExpression",CloseExpression:"CloseExpression",OpenSquareBracket:"OpenSquareBracket",CloseSquareBracket:"CloseSquareBracket",OpenCurlyBracket:"OpenCurlyBracket",CloseCurlyBracket:"CloseCurlyBracket",Comma:"Comma",Dot:"Dot",Colon:"Colon",Pipe:"Pipe",CallOperator:"CallOperator",AdditiveBinaryOperator:"AdditiveBinaryOperator",MultiplicativeBinaryOperator:"MultiplicativeBinaryOperator",ComparisonBinaryOperator:"ComparisonBinaryOperator",UnaryOperator:"UnaryOperator",Set:"Set",If:"If",For:"For",In:"In",Is:"Is",NotIn:"NotIn",Else:"Else",EndIf:"EndIf",ElseIf:"ElseIf",EndFor:"EndFor",And:"And",Or:"Or",Not:"UnaryOperator",Macro:"Macro",EndMacro:"EndMacro"}),F=Object.freeze({set:w.Set,for:w.For,in:w.In,is:w.Is,if:w.If,else:w.Else,endif:w.EndIf,elif:w.ElseIf,endfor:w.EndFor,and:w.And,or:w.Or,not:w.Not,"not in":w.NotIn,macro:w.Macro,endmacro:w.EndMacro,true:w.BooleanLiteral,false:w.BooleanLiteral,none:w.NullLiteral,True:w.BooleanLiteral,False:w.BooleanLiteral,None:w.NullLiteral}),Y=class{constructor(X,ge){this.value=X,this.type=ge}};function U(X){return/\w/.test(X)}function H(X){return/[0-9]/.test(X)}var z=[["{%",w.OpenStatement],["%}",w.CloseStatement],["{{",w.OpenExpression],["}}",w.CloseExpression],["(",w.OpenParen],[")",w.CloseParen],["{",w.OpenCurlyBracket],["}",w.CloseCurlyBracket],["[",w.OpenSquareBracket],["]",w.CloseSquareBracket],[",",w.Comma],[".",w.Dot],[":",w.Colon],["|",w.Pipe],["<=",w.ComparisonBinaryOperator],[">=",w.ComparisonBinaryOperator],["==",w.ComparisonBinaryOperator],["!=",w.ComparisonBinaryOperator],["<",w.ComparisonBinaryOperator],[">",w.ComparisonBinaryOperator],["+",w.AdditiveBinaryOperator],["-",w.AdditiveBinaryOperator],["*",w.MultiplicativeBinaryOperator],["/",w.MultiplicativeBinaryOperator],["%",w.MultiplicativeBinaryOperator],["=",w.Equals]],N=new Map([["n",`
`],["t","	"],["r","\r"],["b","\b"],["f","\f"],["v","\v"],["'","'"],['"','"'],["\\","\\"]]);function D(X,ge={}){return X.endsWith(`
`)&&(X=X.slice(0,-1)),X=X.replace(/{#.*?#}/gs,"{##}"),ge.lstrip_blocks&&(X=X.replace(/^[ \t]*({[#%])/gm,"$1")),ge.trim_blocks&&(X=X.replace(/([#%]})\n/g,"$1")),X.replace(/{##}/g,"").replace(/-%}\s*/g,"%}").replace(/\s*{%-/g,"{%").replace(/-}}\s*/g,"}}").replace(/\s*{{-/g,"{{")}function R(X,ge={}){var Dt,Ht,Vt;const fe=[],He=D(X,ge);let ct=0;const kt=sr=>{let nr="";for(;sr(He[ct]);){if(He[ct]==="\\"){if(++ct,ct>=He.length)throw new SyntaxError("Unexpected end of input");const lr=He[ct++],Fr=N.get(lr);if(Fr===void 0)throw new SyntaxError(`Unexpected escaped character: ${lr}`);nr+=Fr;continue}if(nr+=He[ct++],ct>=He.length)throw new SyntaxError("Unexpected end of input")}return nr};e:for(;ct<He.length;){const sr=(Dt=fe.at(-1))==null?void 0:Dt.type;if(sr===void 0||sr===w.CloseStatement||sr===w.CloseExpression){let lr="";for(;ct<He.length&&!(He[ct]==="{"&&(He[ct+1]==="%"||He[ct+1]==="{"));)lr+=He[ct++];if(lr.length>0){fe.push(new Y(lr,w.Text));continue}}kt(lr=>/\s/.test(lr));const nr=He[ct];if(nr==="-"||nr==="+"){const lr=(Ht=fe.at(-1))==null?void 0:Ht.type;if(lr===w.Text||lr===void 0)throw new SyntaxError(`Unexpected character: ${nr}`);switch(lr){case w.Identifier:case w.NumericLiteral:case w.BooleanLiteral:case w.NullLiteral:case w.StringLiteral:case w.CloseParen:case w.CloseSquareBracket:break;default:{++ct;const Fr=kt(H);fe.push(new Y(`${nr}${Fr}`,Fr.length>0?w.NumericLiteral:w.UnaryOperator));continue}}}for(const[lr,Fr]of z)if(He.slice(ct,ct+lr.length)===lr){fe.push(new Y(lr,Fr)),ct+=lr.length;continue e}if(nr==="'"||nr==='"'){++ct;const lr=kt(Fr=>Fr!==nr);fe.push(new Y(lr,w.StringLiteral)),++ct;continue}if(H(nr)){const lr=kt(H);fe.push(new Y(lr,w.NumericLiteral));continue}if(U(nr)){const lr=kt(U),Fr=Object.hasOwn(F,lr)?F[lr]:w.Identifier;Fr===w.In&&((Vt=fe.at(-1))==null?void 0:Vt.type)===w.Not?(fe.pop(),fe.push(new Y("not in",w.NotIn))):fe.push(new Y(lr,Fr));continue}throw new SyntaxError(`Unexpected character: ${nr}`)}return fe}var Q=class{constructor(){We(this,"type","Statement")}},J=class extends Q{constructor(ge){super();We(this,"type","Program");this.body=ge}},oe=class extends Q{constructor(ge,fe,He){super();We(this,"type","If");this.test=ge,this.body=fe,this.alternate=He}},be=class extends Q{constructor(ge,fe,He,ct){super();We(this,"type","For");this.loopvar=ge,this.iterable=fe,this.body=He,this.defaultBlock=ct}},Ie=class extends Q{constructor(ge,fe){super();We(this,"type","Set");this.assignee=ge,this.value=fe}},ee=class extends Q{constructor(ge,fe,He){super();We(this,"type","Macro");this.name=ge,this.args=fe,this.body=He}},re=class extends Q{constructor(){super(...arguments);We(this,"type","Expression")}},ce=class extends re{constructor(ge,fe,He){super();We(this,"type","MemberExpression");this.object=ge,this.property=fe,this.computed=He}},g=class extends re{constructor(ge,fe){super();We(this,"type","CallExpression");this.callee=ge,this.args=fe}},I=class extends re{constructor(ge){super();We(this,"type","Identifier");this.value=ge}},e=class extends re{constructor(ge){super();We(this,"type","Literal");this.value=ge}},u=class extends e{constructor(){super(...arguments);We(this,"type","NumericLiteral")}},B=class extends e{constructor(){super(...arguments);We(this,"type","StringLiteral")}},ue=class extends e{constructor(){super(...arguments);We(this,"type","BooleanLiteral")}},G=class extends e{constructor(){super(...arguments);We(this,"type","NullLiteral")}},K=class extends e{constructor(){super(...arguments);We(this,"type","ArrayLiteral")}},Ve=class extends e{constructor(){super(...arguments);We(this,"type","TupleLiteral")}},ve=class extends e{constructor(){super(...arguments);We(this,"type","ObjectLiteral")}},Re=class extends re{constructor(ge,fe,He){super();We(this,"type","BinaryExpression");this.operator=ge,this.left=fe,this.right=He}},Ke=class extends re{constructor(ge,fe){super();We(this,"type","FilterExpression");this.operand=ge,this.filter=fe}},nt=class extends re{constructor(ge,fe){super();We(this,"type","SelectExpression");this.iterable=ge,this.test=fe}},Ct=class extends re{constructor(ge,fe,He){super();We(this,"type","TestExpression");this.operand=ge,this.negate=fe,this.test=He}},ht=class extends re{constructor(ge,fe){super();We(this,"type","UnaryExpression");this.operator=ge,this.argument=fe}},et=class extends re{constructor(ge=void 0,fe=void 0,He=void 0){super();We(this,"type","SliceExpression");this.start=ge,this.stop=fe,this.step=He}},ze=class extends re{constructor(ge,fe){super();We(this,"type","KeywordArgumentExpression");this.key=ge,this.value=fe}};function Se(X){const ge=new J([]);let fe=0;function He(tr,Qr){const jr=X[fe++];if(!jr||jr.type!==tr)throw new Error(`Parser Error: ${Qr}. ${jr.type} !== ${tr}.`);return jr}function ct(){switch(X[fe].type){case w.Text:return Ht();case w.OpenStatement:return Vt();case w.OpenExpression:return sr();default:throw new SyntaxError(`Unexpected token type: ${X[fe].type}`)}}function kt(...tr){return fe+tr.length<=X.length&&tr.some((Qr,jr)=>Qr!==X[fe+jr].type)}function Dt(...tr){return fe+tr.length<=X.length&&tr.every((Qr,jr)=>Qr===X[fe+jr].type)}function Ht(){return new B(He(w.Text,"Expected text token").value)}function Vt(){He(w.OpenStatement,"Expected opening statement token");let tr;switch(X[fe].type){case w.Set:++fe,tr=nr(),He(w.CloseStatement,"Expected closing statement token");break;case w.If:++fe,tr=lr(),He(w.OpenStatement,"Expected {% token"),He(w.EndIf,"Expected endif token"),He(w.CloseStatement,"Expected %} token");break;case w.Macro:++fe,tr=Fr(),He(w.OpenStatement,"Expected {% token"),He(w.EndMacro,"Expected endmacro token"),He(w.CloseStatement,"Expected %} token");break;case w.For:++fe,tr=Gs(),He(w.OpenStatement,"Expected {% token"),He(w.EndFor,"Expected endfor token"),He(w.CloseStatement,"Expected %} token");break;default:throw new SyntaxError(`Unknown statement type: ${X[fe].type}`)}return tr}function sr(){He(w.OpenExpression,"Expected opening expression token");const tr=Cs();return He(w.CloseExpression,"Expected closing expression token"),tr}function nr(){const tr=Cs();if(Dt(w.Equals)){++fe;const Qr=nr();return new Ie(tr,Qr)}return tr}function lr(){var Vs,xn,Ss,Ls,Xa,_a,Tn,Ms;const tr=Cs();He(w.CloseStatement,"Expected closing statement token");const Qr=[],jr=[];for(;!(((Vs=X[fe])==null?void 0:Vs.type)===w.OpenStatement&&(((xn=X[fe+1])==null?void 0:xn.type)===w.ElseIf||((Ss=X[fe+1])==null?void 0:Ss.type)===w.Else||((Ls=X[fe+1])==null?void 0:Ls.type)===w.EndIf));)Qr.push(ct());if(((Xa=X[fe])==null?void 0:Xa.type)===w.OpenStatement&&((_a=X[fe+1])==null?void 0:_a.type)!==w.EndIf)if(++fe,Dt(w.ElseIf))He(w.ElseIf,"Expected elseif token"),jr.push(lr());else for(He(w.Else,"Expected else token"),He(w.CloseStatement,"Expected closing statement token");!(((Tn=X[fe])==null?void 0:Tn.type)===w.OpenStatement&&((Ms=X[fe+1])==null?void 0:Ms.type)===w.EndIf);)jr.push(ct());return new oe(tr,Qr,jr)}function Fr(){const tr=sa();if(tr.type!=="Identifier")throw new SyntaxError("Expected identifier following macro statement");const Qr=Es();He(w.CloseStatement,"Expected closing statement token");const jr=[];for(;kt(w.OpenStatement,w.EndMacro);)jr.push(ct());return new ee(tr,Qr,jr)}function ns(tr=!1){const Qr=tr?sa:Cs,jr=[Qr()],Vs=Dt(w.Comma);for(;Vs&&(++fe,jr.push(Qr()),!!Dt(w.Comma)););return Vs?new Ve(jr):jr[0]}function Gs(){const tr=ns(!0);if(!(tr instanceof I||tr instanceof Ve))throw new SyntaxError(`Expected identifier/tuple for the loop variable, got ${tr.type} instead`);He(w.In,"Expected `in` keyword following loop variable");const Qr=Cs();He(w.CloseStatement,"Expected closing statement token");const jr=[];for(;kt(w.OpenStatement,w.EndFor)&&kt(w.OpenStatement,w.Else);)jr.push(ct());const Vs=[];if(Dt(w.OpenStatement,w.Else))for(++fe,++fe,He(w.CloseStatement,"Expected closing statement token");kt(w.OpenStatement,w.EndFor);)Vs.push(ct());return new be(tr,Qr,jr,Vs)}function Cs(){return Ks()}function Ks(){const tr=is();if(Dt(w.If)){++fe;const Qr=is();if(Dt(w.Else)){++fe;const jr=is();return new oe(Qr,[tr],[jr])}else return new nt(tr,Qr)}return tr}function is(){let tr=wn();for(;Dt(w.Or);){const Qr=X[fe];++fe;const jr=wn();tr=new Re(Qr,tr,jr)}return tr}function wn(){let tr=oa();for(;Dt(w.And);){const Qr=X[fe];++fe;const jr=oa();tr=new Re(Qr,tr,jr)}return tr}function oa(){let tr;for(;Dt(w.Not);){const Qr=X[fe];++fe;const jr=oa();tr=new ht(Qr,jr)}return tr??Ea()}function Ea(){let tr=gr();for(;Dt(w.ComparisonBinaryOperator)||Dt(w.In)||Dt(w.NotIn);){const Qr=X[fe];++fe;const jr=gr();tr=new Re(Qr,tr,jr)}return tr}function gr(){let tr=ln();for(;Dt(w.AdditiveBinaryOperator);){const Qr=X[fe];++fe;const jr=ln();tr=new Re(Qr,tr,jr)}return tr}function Wr(){const tr=In(sa());return Dt(w.OpenParen)?vr(tr):tr}function vr(tr){let Qr=new g(tr,Es());return Qr=In(Qr),Dt(w.OpenParen)&&(Qr=vr(Qr)),Qr}function Es(){He(w.OpenParen,"Expected opening parenthesis for arguments list");const tr=pn();return He(w.CloseParen,"Expected closing parenthesis for arguments list"),tr}function pn(){const tr=[];for(;!Dt(w.CloseParen);){let Qr=Cs();if(Dt(w.Equals)){if(++fe,!(Qr instanceof I))throw new SyntaxError("Expected identifier for keyword argument");const jr=Cs();Qr=new ze(Qr,jr)}tr.push(Qr),Dt(w.Comma)&&++fe}return tr}function Ba(){const tr=[];let Qr=!1;for(;!Dt(w.CloseSquareBracket);)Dt(w.Colon)?(tr.push(void 0),++fe,Qr=!0):(tr.push(Cs()),Dt(w.Colon)&&(++fe,Qr=!0));if(tr.length===0)throw new SyntaxError("Expected at least one argument for member/slice expression");if(Qr){if(tr.length>3)throw new SyntaxError("Expected 0-3 arguments for slice expression");return new et(...tr)}return tr[0]}function In(tr){for(;Dt(w.Dot)||Dt(w.OpenSquareBracket);){const Qr=X[fe];++fe;let jr;const Vs=Qr.type!==w.Dot;if(Vs)jr=Ba(),He(w.CloseSquareBracket,"Expected closing square bracket");else if(jr=sa(),jr.type!=="Identifier")throw new SyntaxError("Expected identifier following dot operator");tr=new ce(tr,jr,Vs)}return tr}function ln(){let tr=hn();for(;Dt(w.MultiplicativeBinaryOperator);){const Qr=X[fe];++fe;const jr=hn();tr=new Re(Qr,tr,jr)}return tr}function hn(){let tr=kn();for(;Dt(w.Is);){++fe;const Qr=Dt(w.Not);Qr&&++fe;let jr=sa();if(jr instanceof ue?jr=new I(jr.value.toString()):jr instanceof G&&(jr=new I("none")),!(jr instanceof I))throw new SyntaxError("Expected identifier for the test");tr=new Ct(tr,Qr,jr)}return tr}function kn(){let tr=Wr();for(;Dt(w.Pipe);){++fe;let Qr=sa();if(!(Qr instanceof I))throw new SyntaxError("Expected identifier for the filter");Dt(w.OpenParen)&&(Qr=vr(Qr)),tr=new Ke(tr,Qr)}return tr}function sa(){const tr=X[fe];switch(tr.type){case w.NumericLiteral:return++fe,new u(Number(tr.value));case w.StringLiteral:return++fe,new B(tr.value);case w.BooleanLiteral:return++fe,new ue(tr.value.toLowerCase()==="true");case w.NullLiteral:return++fe,new G(null);case w.Identifier:return++fe,new I(tr.value);case w.OpenParen:{++fe;const Qr=ns();if(X[fe].type!==w.CloseParen)throw new SyntaxError(`Expected closing parenthesis, got ${X[fe].type} instead`);return++fe,Qr}case w.OpenSquareBracket:{++fe;const Qr=[];for(;!Dt(w.CloseSquareBracket);)Qr.push(Cs()),Dt(w.Comma)&&++fe;return++fe,new K(Qr)}case w.OpenCurlyBracket:{++fe;const Qr=new Map;for(;!Dt(w.CloseCurlyBracket);){const jr=Cs();He(w.Colon,"Expected colon between key and value in object literal");const Vs=Cs();Qr.set(jr,Vs),Dt(w.Comma)&&++fe}return++fe,new ve(Qr)}default:throw new SyntaxError(`Unexpected token: ${tr.type}`)}}for(;fe<X.length;)ge.body.push(ct());return ge}function xe(X,ge,fe=1){ge===void 0&&(ge=X,X=0);const He=[];for(let ct=X;ct<ge;ct+=fe)He.push(ct);return He}function Me(X,ge,fe,He=1){const ct=Math.sign(He);ct>=0?(ge=(ge??(ge=0))<0?Math.max(X.length+ge,0):Math.min(ge,X.length),fe=(fe??(fe=X.length))<0?Math.max(X.length+fe,0):Math.min(fe,X.length)):(ge=(ge??(ge=X.length-1))<0?Math.max(X.length+ge,-1):Math.min(ge,X.length-1),fe=(fe??(fe=-1))<-1?Math.max(X.length+fe,-1):Math.min(fe,X.length-1));const kt=[];for(let Dt=ge;ct*Dt<ct*fe;Dt+=He)kt.push(X[Dt]);return kt}function ft(X){return X.replace(/\b\w/g,ge=>ge.toUpperCase())}var gt=class{constructor(X=void 0){We(this,"type","RuntimeValue");We(this,"value");We(this,"builtins",new Map);this.value=X}__bool__(){return new bt(!!this.value)}},_t=class extends gt{constructor(){super(...arguments);We(this,"type","NumericValue")}},Je=class extends gt{constructor(){super(...arguments);We(this,"type","StringValue");We(this,"builtins",new Map([["upper",new $e(()=>new Je(this.value.toUpperCase()))],["lower",new $e(()=>new Je(this.value.toLowerCase()))],["strip",new $e(()=>new Je(this.value.trim()))],["title",new $e(()=>new Je(ft(this.value)))],["length",new _t(this.value.length)],["rstrip",new $e(()=>new Je(this.value.trimEnd()))],["lstrip",new $e(()=>new Je(this.value.trimStart()))],["split",new $e(ge=>{const fe=ge[0]??new It;if(!(fe instanceof Je||fe instanceof It))throw new Error("sep argument must be a string or null");const He=ge[1]??new _t(-1);if(!(He instanceof _t))throw new Error("maxsplit argument must be a number");let ct=[];if(fe instanceof It){const kt=this.value.trimStart();for(const{0:Dt,index:Ht}of kt.matchAll(/\S+/g)){if(He.value!==-1&&ct.length>=He.value&&Ht!==void 0){ct.push(Dt+kt.slice(Ht+Dt.length));break}ct.push(Dt)}}else{if(fe.value==="")throw new Error("empty separator");ct=this.value.split(fe.value),He.value!==-1&&ct.length>He.value&&ct.push(ct.splice(He.value).join(fe.value))}return new it(ct.map(kt=>new Je(kt)))})]]))}},bt=class extends gt{constructor(){super(...arguments);We(this,"type","BooleanValue")}},rt=class extends gt{constructor(){super(...arguments);We(this,"type","ObjectValue");We(this,"builtins",new Map([["get",new $e(([ge,fe])=>{if(!(ge instanceof Je))throw new Error(`Object key must be a string: got ${ge.type}`);return this.value.get(ge.value)??fe??new It})],["items",new $e(()=>new it(Array.from(this.value.entries()).map(([ge,fe])=>new it([new Je(ge),fe]))))]]))}__bool__(){return new bt(this.value.size>0)}},Ne=class extends rt{constructor(){super(...arguments);We(this,"type","KeywordArgumentsValue")}},it=class extends gt{constructor(){super(...arguments);We(this,"type","ArrayValue");We(this,"builtins",new Map([["length",new _t(this.value.length)]]))}__bool__(){return new bt(this.value.length>0)}},Et=class extends it{constructor(){super(...arguments);We(this,"type","TupleValue")}},$e=class extends gt{constructor(){super(...arguments);We(this,"type","FunctionValue")}},It=class extends gt{constructor(){super(...arguments);We(this,"type","NullValue")}},Tt=class extends gt{constructor(){super(...arguments);We(this,"type","UndefinedValue")}},zt=class{constructor(X){We(this,"variables",new Map([["namespace",new $e(X=>{if(X.length===0)return new rt(new Map);if(X.length!==1||!(X[0]instanceof rt))throw new Error("`namespace` expects either zero arguments or a single object argument");return X[0]})]]));We(this,"tests",new Map([["boolean",X=>X.type==="BooleanValue"],["callable",X=>X instanceof $e],["odd",X=>{if(X.type!=="NumericValue")throw new Error(`Cannot apply test "odd" to type: ${X.type}`);return X.value%2!==0}],["even",X=>{if(X.type!=="NumericValue")throw new Error(`Cannot apply test "even" to type: ${X.type}`);return X.value%2===0}],["false",X=>X.type==="BooleanValue"&&!X.value],["true",X=>X.type==="BooleanValue"&&X.value],["none",X=>X.type==="NullValue"],["string",X=>X.type==="StringValue"],["number",X=>X.type==="NumericValue"],["integer",X=>X.type==="NumericValue"&&Number.isInteger(X.value)],["iterable",X=>X.type==="ArrayValue"||X.type==="StringValue"],["mapping",X=>X.type==="ObjectValue"],["lower",X=>{const ge=X.value;return X.type==="StringValue"&&ge===ge.toLowerCase()}],["upper",X=>{const ge=X.value;return X.type==="StringValue"&&ge===ge.toUpperCase()}],["none",X=>X.type==="NullValue"],["defined",X=>X.type!=="UndefinedValue"],["undefined",X=>X.type==="UndefinedValue"],["equalto",(X,ge)=>X.value===ge.value],["eq",(X,ge)=>X.value===ge.value]]));this.parent=X}set(X,ge){return this.declareVariable(X,pe(ge))}declareVariable(X,ge){if(this.variables.has(X))throw new SyntaxError(`Variable already declared: ${X}`);return this.variables.set(X,ge),ge}setVariable(X,ge){return this.variables.set(X,ge),ge}resolve(X){if(this.variables.has(X))return this;if(this.parent)return this.parent.resolve(X);throw new Error(`Unknown variable: ${X}`)}lookupVariable(X){try{return this.resolve(X).variables.get(X)??new Tt}catch{return new Tt}}},Wt=class{constructor(X){We(this,"global");this.global=X??new zt}run(X){return this.evaluate(X,this.global)}evaluateBinaryExpression(X,ge){const fe=this.evaluate(X.left,ge);switch(X.operator.value){case"and":return fe.__bool__().value?this.evaluate(X.right,ge):fe;case"or":return fe.__bool__().value?fe:this.evaluate(X.right,ge)}const He=this.evaluate(X.right,ge);switch(X.operator.value){case"==":return new bt(fe.value==He.value);case"!=":return new bt(fe.value!=He.value)}if(fe instanceof Tt||He instanceof Tt)throw new Error("Cannot perform operation on undefined values");if(fe instanceof It||He instanceof It)throw new Error("Cannot perform operation on null values");if(fe instanceof _t&&He instanceof _t)switch(X.operator.value){case"+":return new _t(fe.value+He.value);case"-":return new _t(fe.value-He.value);case"*":return new _t(fe.value*He.value);case"/":return new _t(fe.value/He.value);case"%":return new _t(fe.value%He.value);case"<":return new bt(fe.value<He.value);case">":return new bt(fe.value>He.value);case">=":return new bt(fe.value>=He.value);case"<=":return new bt(fe.value<=He.value)}else if(fe instanceof it&&He instanceof it)switch(X.operator.value){case"+":return new it(fe.value.concat(He.value))}else if(He instanceof it){const ct=He.value.find(kt=>kt.value===fe.value)!==void 0;switch(X.operator.value){case"in":return new bt(ct);case"not in":return new bt(!ct)}}if(fe instanceof Je||He instanceof Je)switch(X.operator.value){case"+":return new Je(fe.value.toString()+He.value.toString())}if(fe instanceof Je&&He instanceof Je)switch(X.operator.value){case"in":return new bt(He.value.includes(fe.value));case"not in":return new bt(!He.value.includes(fe.value))}if(fe instanceof Je&&He instanceof rt)switch(X.operator.value){case"in":return new bt(He.value.has(fe.value));case"not in":return new bt(!He.value.has(fe.value))}throw new SyntaxError(`Unknown operator "${X.operator.value}" between ${fe.type} and ${He.type}`)}evaluateArguments(X,ge){const fe=[],He=new Map;for(const ct of X)if(ct.type==="KeywordArgumentExpression"){const kt=ct;He.set(kt.key.value,this.evaluate(kt.value,ge))}else{if(He.size>0)throw new Error("Positional arguments must come before keyword arguments");fe.push(this.evaluate(ct,ge))}return[fe,He]}evaluateFilterExpression(X,ge){const fe=this.evaluate(X.operand,ge);if(X.filter.type==="Identifier"){const He=X.filter;if(He.value==="tojson")return new Je(Ut(fe));if(fe instanceof it)switch(He.value){case"list":return fe;case"first":return fe.value[0];case"last":return fe.value[fe.value.length-1];case"length":return new _t(fe.value.length);case"reverse":return new it(fe.value.reverse());case"sort":return new it(fe.value.sort((ct,kt)=>{if(ct.type!==kt.type)throw new Error(`Cannot compare different types: ${ct.type} and ${kt.type}`);switch(ct.type){case"NumericValue":return ct.value-kt.value;case"StringValue":return ct.value.localeCompare(kt.value);default:throw new Error(`Cannot compare type: ${ct.type}`)}}));case"join":return new Je(fe.value.map(ct=>ct.value).join(""));default:throw new Error(`Unknown ArrayValue filter: ${He.value}`)}else if(fe instanceof Je)switch(He.value){case"length":return new _t(fe.value.length);case"upper":return new Je(fe.value.toUpperCase());case"lower":return new Je(fe.value.toLowerCase());case"title":return new Je(ft(fe.value));case"capitalize":return new Je(fe.value.charAt(0).toUpperCase()+fe.value.slice(1));case"trim":return new Je(fe.value.trim());case"indent":return new Je(fe.value.split(`
`).map((ct,kt)=>kt===0||ct.length===0?ct:"    "+ct).join(`
`));case"join":case"string":return fe;default:throw new Error(`Unknown StringValue filter: ${He.value}`)}else if(fe instanceof _t)switch(He.value){case"abs":return new _t(Math.abs(fe.value));default:throw new Error(`Unknown NumericValue filter: ${He.value}`)}else if(fe instanceof rt)switch(He.value){case"items":return new it(Array.from(fe.value.entries()).map(([ct,kt])=>new it([new Je(ct),kt])));case"length":return new _t(fe.value.size);default:throw new Error(`Unknown ObjectValue filter: ${He.value}`)}throw new Error(`Cannot apply filter "${He.value}" to type: ${fe.type}`)}else if(X.filter.type==="CallExpression"){const He=X.filter;if(He.callee.type!=="Identifier")throw new Error(`Unknown filter: ${He.callee.type}`);const ct=He.callee.value;if(ct==="tojson"){const[,kt]=this.evaluateArguments(He.args,ge),Dt=kt.get("indent")??new It;if(!(Dt instanceof _t||Dt instanceof It))throw new Error("If set, indent must be a number");return new Je(Ut(fe,Dt.value))}else if(ct==="join"){let kt;if(fe instanceof Je)kt=Array.from(fe.value);else if(fe instanceof it)kt=fe.value.map(sr=>sr.value);else throw new Error(`Cannot apply filter "${ct}" to type: ${fe.type}`);const[Dt,Ht]=this.evaluateArguments(He.args,ge),Vt=Dt.at(0)??Ht.get("separator")??new Je("");if(!(Vt instanceof Je))throw new Error("separator must be a string");return new Je(kt.join(Vt.value))}if(fe instanceof it){switch(ct){case"selectattr":case"rejectattr":{const kt=ct==="selectattr";if(fe.value.some(lr=>!(lr instanceof rt)))throw new Error(`\`${ct}\` can only be applied to array of objects`);if(He.args.some(lr=>lr.type!=="StringLiteral"))throw new Error(`arguments of \`${ct}\` must be strings`);const[Dt,Ht,Vt]=He.args.map(lr=>this.evaluate(lr,ge));let sr;if(Ht){const lr=ge.tests.get(Ht.value);if(!lr)throw new Error(`Unknown test: ${Ht.value}`);sr=lr}else sr=(...lr)=>lr[0].__bool__().value;const nr=fe.value.filter(lr=>{const Fr=lr.value.get(Dt.value),ns=Fr?sr(Fr,Vt):!1;return kt?ns:!ns});return new it(nr)}case"map":{const[,kt]=this.evaluateArguments(He.args,ge);if(kt.has("attribute")){const Dt=kt.get("attribute");if(!(Dt instanceof Je))throw new Error("attribute must be a string");const Ht=kt.get("default"),Vt=fe.value.map(sr=>{if(!(sr instanceof rt))throw new Error("items in map must be an object");return sr.value.get(Dt.value)??Ht??new Tt});return new it(Vt)}else throw new Error("`map` expressions without `attribute` set are not currently supported.")}}throw new Error(`Unknown ArrayValue filter: ${ct}`)}else if(fe instanceof Je){switch(ct){case"indent":{const[kt,Dt]=this.evaluateArguments(He.args,ge),Ht=kt.at(0)??Dt.get("width")??new _t(4);if(!(Ht instanceof _t))throw new Error("width must be a number");const Vt=kt.at(1)??Dt.get("first")??new bt(!1),sr=kt.at(2)??Dt.get("blank")??new bt(!1),nr=fe.value.split(`
`),lr=" ".repeat(Ht.value),Fr=nr.map((ns,Gs)=>!Vt.value&&Gs===0||!sr.value&&ns.length===0?ns:lr+ns);return new Je(Fr.join(`
`))}}throw new Error(`Unknown StringValue filter: ${ct}`)}else throw new Error(`Cannot apply filter "${ct}" to type: ${fe.type}`)}throw new Error(`Unknown filter: ${X.filter.type}`)}evaluateTestExpression(X,ge){const fe=this.evaluate(X.operand,ge),He=ge.tests.get(X.test.value);if(!He)throw new Error(`Unknown test: ${X.test.value}`);const ct=He(fe);return new bt(X.negate?!ct:ct)}evaluateUnaryExpression(X,ge){const fe=this.evaluate(X.argument,ge);switch(X.operator.value){case"not":return new bt(!fe.value);default:throw new SyntaxError(`Unknown operator: ${X.operator.value}`)}}evalProgram(X,ge){return this.evaluateBlock(X.body,ge)}evaluateBlock(X,ge){let fe="";for(const He of X){const ct=this.evaluate(He,ge);ct.type!=="NullValue"&&ct.type!=="UndefinedValue"&&(fe+=ct.value)}return new Je(fe)}evaluateIdentifier(X,ge){return ge.lookupVariable(X.value)}evaluateCallExpression(X,ge){const[fe,He]=this.evaluateArguments(X.args,ge);He.size>0&&fe.push(new Ne(He));const ct=this.evaluate(X.callee,ge);if(ct.type!=="FunctionValue")throw new Error(`Cannot call something that is not a function: got ${ct.type}`);return ct.value(fe,ge)}evaluateSliceExpression(X,ge,fe){if(!(X instanceof it||X instanceof Je))throw new Error("Slice object must be an array or string");const He=this.evaluate(ge.start,fe),ct=this.evaluate(ge.stop,fe),kt=this.evaluate(ge.step,fe);if(!(He instanceof _t||He instanceof Tt))throw new Error("Slice start must be numeric or undefined");if(!(ct instanceof _t||ct instanceof Tt))throw new Error("Slice stop must be numeric or undefined");if(!(kt instanceof _t||kt instanceof Tt))throw new Error("Slice step must be numeric or undefined");return X instanceof it?new it(Me(X.value,He.value,ct.value,kt.value)):new Je(Me(Array.from(X.value),He.value,ct.value,kt.value).join(""))}evaluateMemberExpression(X,ge){const fe=this.evaluate(X.object,ge);let He;if(X.computed){if(X.property.type==="SliceExpression")return this.evaluateSliceExpression(fe,X.property,ge);He=this.evaluate(X.property,ge)}else He=new Je(X.property.value);let ct;if(fe instanceof rt){if(!(He instanceof Je))throw new Error(`Cannot access property with non-string: got ${He.type}`);ct=fe.value.get(He.value)??fe.builtins.get(He.value)}else if(fe instanceof it||fe instanceof Je)if(He instanceof _t)ct=fe.value.at(He.value),fe instanceof Je&&(ct=new Je(fe.value.at(He.value)));else if(He instanceof Je)ct=fe.builtins.get(He.value);else throw new Error(`Cannot access property with non-string/non-number: got ${He.type}`);else{if(!(He instanceof Je))throw new Error(`Cannot access property with non-string: got ${He.type}`);ct=fe.builtins.get(He.value)}return ct instanceof gt?ct:new Tt}evaluateSet(X,ge){const fe=this.evaluate(X.value,ge);if(X.assignee.type==="Identifier"){const He=X.assignee.value;ge.setVariable(He,fe)}else if(X.assignee.type==="MemberExpression"){const He=X.assignee,ct=this.evaluate(He.object,ge);if(!(ct instanceof rt))throw new Error("Cannot assign to member of non-object");if(He.property.type!=="Identifier")throw new Error("Cannot assign to member with non-identifier property");ct.value.set(He.property.value,fe)}else throw new Error(`Invalid LHS inside assignment expression: ${JSON.stringify(X.assignee)}`);return new It}evaluateIf(X,ge){const fe=this.evaluate(X.test,ge);return this.evaluateBlock(fe.__bool__().value?X.body:X.alternate,ge)}evaluateFor(X,ge){const fe=new zt(ge);let He,ct;if(X.iterable.type==="SelectExpression"){const sr=X.iterable;ct=this.evaluate(sr.iterable,fe),He=sr.test}else ct=this.evaluate(X.iterable,fe);if(!(ct instanceof it))throw new Error(`Expected iterable type in for loop: got ${ct.type}`);const kt=[],Dt=[];for(let sr=0;sr<ct.value.length;++sr){const nr=new zt(fe),lr=ct.value[sr];let Fr;if(X.loopvar.type==="Identifier")Fr=ns=>ns.setVariable(X.loopvar.value,lr);else if(X.loopvar.type==="TupleLiteral"){const ns=X.loopvar;if(lr.type!=="ArrayValue")throw new Error(`Cannot unpack non-iterable type: ${lr.type}`);const Gs=lr;if(ns.value.length!==Gs.value.length)throw new Error(`Too ${ns.value.length>Gs.value.length?"few":"many"} items to unpack`);Fr=Cs=>{for(let Ks=0;Ks<ns.value.length;++Ks){if(ns.value[Ks].type!=="Identifier")throw new Error(`Cannot unpack non-identifier type: ${ns.value[Ks].type}`);Cs.setVariable(ns.value[Ks].value,Gs.value[Ks])}}}else throw new Error(`Invalid loop variable(s): ${X.loopvar.type}`);He&&(Fr(nr),!this.evaluate(He,nr).__bool__().value)||(kt.push(lr),Dt.push(Fr))}let Ht="",Vt=!0;for(let sr=0;sr<kt.length;++sr){const nr=new Map([["index",new _t(sr+1)],["index0",new _t(sr)],["revindex",new _t(kt.length-sr)],["revindex0",new _t(kt.length-sr-1)],["first",new bt(sr===0)],["last",new bt(sr===kt.length-1)],["length",new _t(kt.length)],["previtem",sr>0?kt[sr-1]:new Tt],["nextitem",sr<kt.length-1?kt[sr+1]:new Tt]]);fe.setVariable("loop",new rt(nr)),Dt[sr](fe);const lr=this.evaluateBlock(X.body,fe);Ht+=lr.value,Vt=!1}if(Vt){const sr=this.evaluateBlock(X.defaultBlock,fe);Ht+=sr.value}return new Je(Ht)}evaluateMacro(X,ge){return ge.setVariable(X.name.value,new $e((fe,He)=>{var Dt;const ct=new zt(He);fe=fe.slice();let kt;((Dt=fe.at(-1))==null?void 0:Dt.type)==="KeywordArgumentsValue"&&(kt=fe.pop());for(let Ht=0;Ht<X.args.length;++Ht){const Vt=X.args[Ht],sr=fe[Ht];if(Vt.type==="Identifier"){const nr=Vt;if(!sr)throw new Error(`Missing positional argument: ${nr.value}`);ct.setVariable(nr.value,sr)}else if(Vt.type==="KeywordArgumentExpression"){const nr=Vt,lr=sr??(kt==null?void 0:kt.value.get(nr.key.value))??this.evaluate(nr.value,ct);ct.setVariable(nr.key.value,lr)}else throw new Error(`Unknown argument type: ${Vt.type}`)}return this.evaluateBlock(X.body,ct)})),new It}evaluate(X,ge){if(X===void 0)return new Tt;switch(X.type){case"Program":return this.evalProgram(X,ge);case"Set":return this.evaluateSet(X,ge);case"If":return this.evaluateIf(X,ge);case"For":return this.evaluateFor(X,ge);case"Macro":return this.evaluateMacro(X,ge);case"NumericLiteral":return new _t(Number(X.value));case"StringLiteral":return new Je(X.value);case"BooleanLiteral":return new bt(X.value);case"NullLiteral":return new It(X.value);case"ArrayLiteral":return new it(X.value.map(fe=>this.evaluate(fe,ge)));case"TupleLiteral":return new Et(X.value.map(fe=>this.evaluate(fe,ge)));case"ObjectLiteral":{const fe=new Map;for(const[He,ct]of X.value){const kt=this.evaluate(He,ge);if(!(kt instanceof Je))throw new Error(`Object keys must be strings: got ${kt.type}`);fe.set(kt.value,this.evaluate(ct,ge))}return new rt(fe)}case"Identifier":return this.evaluateIdentifier(X,ge);case"CallExpression":return this.evaluateCallExpression(X,ge);case"MemberExpression":return this.evaluateMemberExpression(X,ge);case"UnaryExpression":return this.evaluateUnaryExpression(X,ge);case"BinaryExpression":return this.evaluateBinaryExpression(X,ge);case"FilterExpression":return this.evaluateFilterExpression(X,ge);case"TestExpression":return this.evaluateTestExpression(X,ge);default:throw new SyntaxError(`Unknown node type: ${X.type}`)}}};function pe(X){switch(typeof X){case"number":return new _t(X);case"string":return new Je(X);case"boolean":return new bt(X);case"undefined":return new Tt;case"object":return X===null?new It:Array.isArray(X)?new it(X.map(pe)):new rt(new Map(Object.entries(X).map(([ge,fe])=>[ge,pe(fe)])));case"function":return new $e((ge,fe)=>{const He=X(...ge.map(ct=>ct.value))??null;return pe(He)});default:throw new Error(`Cannot convert to runtime value: ${X}`)}}function Ut(X,ge,fe){const He=fe??0;switch(X.type){case"NullValue":case"UndefinedValue":return"null";case"NumericValue":case"StringValue":case"BooleanValue":return JSON.stringify(X.value);case"ArrayValue":case"ObjectValue":{const ct=ge?" ".repeat(ge):"",kt=`
`+ct.repeat(He),Dt=kt+ct;if(X.type==="ArrayValue"){const Ht=X.value.map(Vt=>Ut(Vt,ge,He+1));return ge?`[${Dt}${Ht.join(`,${Dt}`)}${kt}]`:`[${Ht.join(", ")}]`}else{const Ht=Array.from(X.value.entries()).map(([Vt,sr])=>{const nr=`"${Vt}": ${Ut(sr,ge,He+1)}`;return ge?`${Dt}${nr}`:nr});return ge?`{${Ht.join(",")}${kt}}`:`{${Ht.join(", ")}}`}}default:throw new Error(`Cannot convert to JSON: ${X.type}`)}}var Pe=class{constructor(X){We(this,"parsed");const ge=R(X,{lstrip_blocks:!0,trim_blocks:!0});this.parsed=Se(ge)}render(X){const ge=new zt;if(ge.set("false",!1),ge.set("true",!0),ge.set("raise_exception",ct=>{throw new Error(ct)}),ge.set("range",xe),X)for(const[ct,kt]of Object.entries(X))ge.set(ct,kt);return new Wt(ge).run(this.parsed).value}}},"./node_modules/onnxruntime-common/dist/esm/backend-impl.js":(T,k,A)=>{A.r(k),A.d(k,{registerBackend:()=>Y,resolveBackendAndExecutionProviders:()=>H});const w=new Map,F=[],Y=(z,N,D)=>{if(N&&typeof N.init=="function"&&typeof N.createInferenceSessionHandler=="function"){const R=w.get(z);if(R===void 0)w.set(z,{backend:N,priority:D});else{if(R.priority>D)return;if(R.priority===D&&R.backend!==N)throw new Error(`cannot register backend "${z}" using priority ${D}`)}if(D>=0){const Q=F.indexOf(z);Q!==-1&&F.splice(Q,1);for(let J=0;J<F.length;J++)if(w.get(F[J]).priority<=D){F.splice(J,0,z);return}F.push(z)}return}throw new TypeError("not a valid backend")},U=async z=>{const N=w.get(z);if(!N)return"backend not found.";if(N.initialized)return N.backend;if(N.aborted)return N.error;{const D=!!N.initPromise;try{return D||(N.initPromise=N.backend.init(z)),await N.initPromise,N.initialized=!0,N.backend}catch(R){return D||(N.error=`${R}`,N.aborted=!0),N.error}finally{delete N.initPromise}}},H=async z=>{const N=z.executionProviders||[],D=N.map(Ie=>typeof Ie=="string"?Ie:Ie.name),R=D.length===0?F:D;let Q;const J=[],oe=new Set;for(const Ie of R){const ee=await U(Ie);typeof ee=="string"?J.push({name:Ie,err:ee}):(Q||(Q=ee),Q===ee&&oe.add(Ie))}if(!Q)throw new Error(`no available backend found. ERR: ${J.map(Ie=>`[${Ie.name}] ${Ie.err}`).join(", ")}`);for(const{name:Ie,err:ee}of J)D.includes(Ie)&&console.warn(`removing requested execution provider "${Ie}" from session options because it is not available: ${ee}`);const be=N.filter(Ie=>oe.has(typeof Ie=="string"?Ie:Ie.name));return[Q,new Proxy(z,{get:(Ie,ee)=>ee==="executionProviders"?be:Reflect.get(Ie,ee)})]}},"./node_modules/onnxruntime-common/dist/esm/backend.js":(T,k,A)=>{A.r(k),A.d(k,{registerBackend:()=>w.registerBackend});var w=A("./node_modules/onnxruntime-common/dist/esm/backend-impl.js")},"./node_modules/onnxruntime-common/dist/esm/env-impl.js":(T,k,A)=>{A.r(k),A.d(k,{env:()=>Y});var w=A("./node_modules/onnxruntime-common/dist/esm/version.js");let F="warning";const Y={wasm:{},webgl:{},webgpu:{},versions:{common:w.version},set logLevel(U){if(U!==void 0){if(typeof U!="string"||["verbose","info","warning","error","fatal"].indexOf(U)===-1)throw new Error(`Unsupported logging level: ${U}`);F=U}},get logLevel(){return F}};Object.defineProperty(Y,"logLevel",{enumerable:!0})},"./node_modules/onnxruntime-common/dist/esm/env.js":(T,k,A)=>{A.r(k),A.d(k,{env:()=>F});var w=A("./node_modules/onnxruntime-common/dist/esm/env-impl.js");const F=w.env},"./node_modules/onnxruntime-common/dist/esm/index.js":(T,k,A)=>{A.r(k),A.d(k,{InferenceSession:()=>Y.InferenceSession,TRACE:()=>H.TRACE,TRACE_FUNC_BEGIN:()=>H.TRACE_FUNC_BEGIN,TRACE_FUNC_END:()=>H.TRACE_FUNC_END,Tensor:()=>U.Tensor,TrainingSession:()=>z.TrainingSession,env:()=>F.env,registerBackend:()=>w.registerBackend});var w=A("./node_modules/onnxruntime-common/dist/esm/backend.js"),F=A("./node_modules/onnxruntime-common/dist/esm/env.js"),Y=A("./node_modules/onnxruntime-common/dist/esm/inference-session.js"),U=A("./node_modules/onnxruntime-common/dist/esm/tensor.js");A("./node_modules/onnxruntime-common/dist/esm/tensor-conversion.js"),A("./node_modules/onnxruntime-common/dist/esm/tensor-factory.js");var H=A("./node_modules/onnxruntime-common/dist/esm/trace.js");A("./node_modules/onnxruntime-common/dist/esm/onnx-model.js"),A("./node_modules/onnxruntime-common/dist/esm/onnx-value.js");var z=A("./node_modules/onnxruntime-common/dist/esm/training-session.js")},"./node_modules/onnxruntime-common/dist/esm/inference-session-impl.js":(T,k,A)=>{A.r(k),A.d(k,{InferenceSession:()=>U});var w=A("./node_modules/onnxruntime-common/dist/esm/backend-impl.js"),F=A("./node_modules/onnxruntime-common/dist/esm/tensor.js"),Y=A("./node_modules/onnxruntime-common/dist/esm/trace.js");class U{constructor(z){this.handler=z}async run(z,N,D){(0,Y.TRACE_FUNC_BEGIN)();const R={};let Q={};if(typeof z!="object"||z===null||z instanceof F.Tensor||Array.isArray(z))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let J=!0;if(typeof N=="object"){if(N===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(N instanceof F.Tensor)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(N)){if(N.length===0)throw new TypeError("'fetches' cannot be an empty array.");J=!1;for(const Ie of N){if(typeof Ie!="string")throw new TypeError("'fetches' must be a string array or an object.");if(this.outputNames.indexOf(Ie)===-1)throw new RangeError(`'fetches' contains invalid output name: ${Ie}.`);R[Ie]=null}if(typeof D=="object"&&D!==null)Q=D;else if(typeof D<"u")throw new TypeError("'options' must be an object.")}else{let Ie=!1;const ee=Object.getOwnPropertyNames(N);for(const re of this.outputNames)if(ee.indexOf(re)!==-1){const ce=N[re];(ce===null||ce instanceof F.Tensor)&&(Ie=!0,J=!1,R[re]=ce)}if(Ie){if(typeof D=="object"&&D!==null)Q=D;else if(typeof D<"u")throw new TypeError("'options' must be an object.")}else Q=N}}else if(typeof N<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(const Ie of this.inputNames)if(typeof z[Ie]>"u")throw new Error(`input '${Ie}' is missing in 'feeds'.`);if(J)for(const Ie of this.outputNames)R[Ie]=null;const oe=await this.handler.run(z,R,Q),be={};for(const Ie in oe)if(Object.hasOwnProperty.call(oe,Ie)){const ee=oe[Ie];ee instanceof F.Tensor?be[Ie]=ee:be[Ie]=new F.Tensor(ee.type,ee.data,ee.dims)}return(0,Y.TRACE_FUNC_END)(),be}async release(){return this.handler.dispose()}static async create(z,N,D,R){(0,Y.TRACE_FUNC_BEGIN)();let Q,J={};if(typeof z=="string"){if(Q=z,typeof N=="object"&&N!==null)J=N;else if(typeof N<"u")throw new TypeError("'options' must be an object.")}else if(z instanceof Uint8Array){if(Q=z,typeof N=="object"&&N!==null)J=N;else if(typeof N<"u")throw new TypeError("'options' must be an object.")}else if(z instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&z instanceof SharedArrayBuffer){const ee=z;let re=0,ce=z.byteLength;if(typeof N=="object"&&N!==null)J=N;else if(typeof N=="number"){if(re=N,!Number.isSafeInteger(re))throw new RangeError("'byteOffset' must be an integer.");if(re<0||re>=ee.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${ee.byteLength}).`);if(ce=z.byteLength-re,typeof D=="number"){if(ce=D,!Number.isSafeInteger(ce))throw new RangeError("'byteLength' must be an integer.");if(ce<=0||re+ce>ee.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${ee.byteLength-re}].`);if(typeof R=="object"&&R!==null)J=R;else if(typeof R<"u")throw new TypeError("'options' must be an object.")}else if(typeof D<"u")throw new TypeError("'byteLength' must be a number.")}else if(typeof N<"u")throw new TypeError("'options' must be an object.");Q=new Uint8Array(ee,re,ce)}else throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");const[oe,be]=await(0,w.resolveBackendAndExecutionProviders)(J),Ie=await oe.createInferenceSessionHandler(Q,be);return(0,Y.TRACE_FUNC_END)(),new U(Ie)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}}},"./node_modules/onnxruntime-common/dist/esm/inference-session.js":(T,k,A)=>{A.r(k),A.d(k,{InferenceSession:()=>F});var w=A("./node_modules/onnxruntime-common/dist/esm/inference-session-impl.js");const F=w.InferenceSession},"./node_modules/onnxruntime-common/dist/esm/onnx-model.js":(T,k,A)=>{A.r(k)},"./node_modules/onnxruntime-common/dist/esm/onnx-value.js":(T,k,A)=>{A.r(k)},"./node_modules/onnxruntime-common/dist/esm/tensor-conversion-impl.js":(T,k,A)=>{A.r(k),A.d(k,{tensorToDataURL:()=>w,tensorToImageData:()=>F});const w=(Y,U)=>{const H=typeof document<"u"?document.createElement("canvas"):new OffscreenCanvas(1,1);H.width=Y.dims[3],H.height=Y.dims[2];const z=H.getContext("2d");if(z!=null){let N,D;(U==null?void 0:U.tensorLayout)!==void 0&&U.tensorLayout==="NHWC"?(N=Y.dims[2],D=Y.dims[3]):(N=Y.dims[3],D=Y.dims[2]);const R=(U==null?void 0:U.format)!==void 0?U.format:"RGB",Q=U==null?void 0:U.norm;let J,oe;Q===void 0||Q.mean===void 0?J=[255,255,255,255]:typeof Q.mean=="number"?J=[Q.mean,Q.mean,Q.mean,Q.mean]:(J=[Q.mean[0],Q.mean[1],Q.mean[2],0],Q.mean[3]!==void 0&&(J[3]=Q.mean[3])),Q===void 0||Q.bias===void 0?oe=[0,0,0,0]:typeof Q.bias=="number"?oe=[Q.bias,Q.bias,Q.bias,Q.bias]:(oe=[Q.bias[0],Q.bias[1],Q.bias[2],0],Q.bias[3]!==void 0&&(oe[3]=Q.bias[3]));const be=D*N;let Ie=0,ee=be,re=be*2,ce=-1;R==="RGBA"?(Ie=0,ee=be,re=be*2,ce=be*3):R==="RGB"?(Ie=0,ee=be,re=be*2):R==="RBG"&&(Ie=0,re=be,ee=be*2);for(let g=0;g<D;g++)for(let I=0;I<N;I++){const e=(Y.data[Ie++]-oe[0])*J[0],u=(Y.data[ee++]-oe[1])*J[1],B=(Y.data[re++]-oe[2])*J[2],ue=ce===-1?255:(Y.data[ce++]-oe[3])*J[3];z.fillStyle="rgba("+e+","+u+","+B+","+ue+")",z.fillRect(I,g,1,1)}if("toDataURL"in H)return H.toDataURL();throw new Error("toDataURL is not supported")}else throw new Error("Can not access image data")},F=(Y,U)=>{const H=typeof document<"u"?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d");let z;if(H!=null){let N,D,R;(U==null?void 0:U.tensorLayout)!==void 0&&U.tensorLayout==="NHWC"?(N=Y.dims[2],D=Y.dims[1],R=Y.dims[3]):(N=Y.dims[3],D=Y.dims[2],R=Y.dims[1]);const Q=U!==void 0&&U.format!==void 0?U.format:"RGB",J=U==null?void 0:U.norm;let oe,be;J===void 0||J.mean===void 0?oe=[255,255,255,255]:typeof J.mean=="number"?oe=[J.mean,J.mean,J.mean,J.mean]:(oe=[J.mean[0],J.mean[1],J.mean[2],255],J.mean[3]!==void 0&&(oe[3]=J.mean[3])),J===void 0||J.bias===void 0?be=[0,0,0,0]:typeof J.bias=="number"?be=[J.bias,J.bias,J.bias,J.bias]:(be=[J.bias[0],J.bias[1],J.bias[2],0],J.bias[3]!==void 0&&(be[3]=J.bias[3]));const Ie=D*N;if(U!==void 0&&(U.format!==void 0&&R===4&&U.format!=="RGBA"||R===3&&U.format!=="RGB"&&U.format!=="BGR"))throw new Error("Tensor format doesn't match input tensor dims");const ee=4;let re=0,ce=1,g=2,I=3,e=0,u=Ie,B=Ie*2,ue=-1;Q==="RGBA"?(e=0,u=Ie,B=Ie*2,ue=Ie*3):Q==="RGB"?(e=0,u=Ie,B=Ie*2):Q==="RBG"&&(e=0,B=Ie,u=Ie*2),z=H.createImageData(N,D);for(let G=0;G<D*N;re+=ee,ce+=ee,g+=ee,I+=ee,G++)z.data[re]=(Y.data[e++]-be[0])*oe[0],z.data[ce]=(Y.data[u++]-be[1])*oe[1],z.data[g]=(Y.data[B++]-be[2])*oe[2],z.data[I]=ue===-1?255:(Y.data[ue++]-be[3])*oe[3]}else throw new Error("Can not access image data");return z}},"./node_modules/onnxruntime-common/dist/esm/tensor-conversion.js":(T,k,A)=>{A.r(k)},"./node_modules/onnxruntime-common/dist/esm/tensor-factory-impl.js":(T,k,A)=>{A.r(k),A.d(k,{bufferToTensor:()=>F,tensorFromGpuBuffer:()=>H,tensorFromImage:()=>Y,tensorFromMLTensor:()=>z,tensorFromPinnedBuffer:()=>N,tensorFromTexture:()=>U});var w=A("./node_modules/onnxruntime-common/dist/esm/tensor-impl.js");const F=(D,R)=>{if(D===void 0)throw new Error("Image buffer must be defined");if(R.height===void 0||R.width===void 0)throw new Error("Image height and width must be defined");if(R.tensorLayout==="NHWC")throw new Error("NHWC Tensor layout is not supported yet");const{height:Q,width:J}=R,oe=R.norm??{mean:255,bias:0};let be,Ie;typeof oe.mean=="number"?be=[oe.mean,oe.mean,oe.mean,oe.mean]:be=[oe.mean[0],oe.mean[1],oe.mean[2],oe.mean[3]??255],typeof oe.bias=="number"?Ie=[oe.bias,oe.bias,oe.bias,oe.bias]:Ie=[oe.bias[0],oe.bias[1],oe.bias[2],oe.bias[3]??0];const ee=R.format!==void 0?R.format:"RGBA",re=R.tensorFormat!==void 0&&R.tensorFormat!==void 0?R.tensorFormat:"RGB",ce=Q*J,g=re==="RGBA"?new Float32Array(ce*4):new Float32Array(ce*3);let I=4,e=0,u=1,B=2,ue=3,G=0,K=ce,Ve=ce*2,ve=-1;ee==="RGB"&&(I=3,e=0,u=1,B=2,ue=-1),re==="RGBA"?ve=ce*3:re==="RBG"?(G=0,Ve=ce,K=ce*2):re==="BGR"&&(Ve=0,K=ce,G=ce*2);for(let Ke=0;Ke<ce;Ke++,e+=I,B+=I,u+=I,ue+=I)g[G++]=(D[e]+Ie[0])/be[0],g[K++]=(D[u]+Ie[1])/be[1],g[Ve++]=(D[B]+Ie[2])/be[2],ve!==-1&&ue!==-1&&(g[ve++]=(D[ue]+Ie[3])/be[3]);return re==="RGBA"?new w.Tensor("float32",g,[1,4,Q,J]):new w.Tensor("float32",g,[1,3,Q,J])},Y=async(D,R)=>{const Q=typeof HTMLImageElement<"u"&&D instanceof HTMLImageElement,J=typeof ImageData<"u"&&D instanceof ImageData,oe=typeof ImageBitmap<"u"&&D instanceof ImageBitmap,be=typeof D=="string";let Ie,ee=R??{};const re=()=>{if(typeof document<"u")return document.createElement("canvas");if(typeof OffscreenCanvas<"u")return new OffscreenCanvas(1,1);throw new Error("Canvas is not supported")},ce=g=>typeof HTMLCanvasElement<"u"&&g instanceof HTMLCanvasElement||g instanceof OffscreenCanvas?g.getContext("2d"):null;if(Q){const g=re();g.width=D.width,g.height=D.height;const I=ce(g);if(I!=null){let e=D.height,u=D.width;if(R!==void 0&&R.resizedHeight!==void 0&&R.resizedWidth!==void 0&&(e=R.resizedHeight,u=R.resizedWidth),R!==void 0){if(ee=R,R.tensorFormat!==void 0)throw new Error("Image input config format must be RGBA for HTMLImageElement");ee.tensorFormat="RGBA",ee.height=e,ee.width=u}else ee.tensorFormat="RGBA",ee.height=e,ee.width=u;I.drawImage(D,0,0),Ie=I.getImageData(0,0,u,e).data}else throw new Error("Can not access image data")}else if(J){let g,I;if(R!==void 0&&R.resizedWidth!==void 0&&R.resizedHeight!==void 0?(g=R.resizedHeight,I=R.resizedWidth):(g=D.height,I=D.width),R!==void 0&&(ee=R),ee.format="RGBA",ee.height=g,ee.width=I,R!==void 0){const e=re();e.width=I,e.height=g;const u=ce(e);if(u!=null)u.putImageData(D,0,0),Ie=u.getImageData(0,0,I,g).data;else throw new Error("Can not access image data")}else Ie=D.data}else if(oe){if(R===void 0)throw new Error("Please provide image config with format for Imagebitmap");const g=re();g.width=D.width,g.height=D.height;const I=ce(g);if(I!=null){const e=D.height,u=D.width;return I.drawImage(D,0,0,u,e),Ie=I.getImageData(0,0,u,e).data,ee.height=e,ee.width=u,F(Ie,ee)}else throw new Error("Can not access image data")}else{if(be)return new Promise((g,I)=>{const e=re(),u=ce(e);if(!D||!u)return I();const B=new Image;B.crossOrigin="Anonymous",B.src=D,B.onload=()=>{e.width=B.width,e.height=B.height,u.drawImage(B,0,0,e.width,e.height);const ue=u.getImageData(0,0,e.width,e.height);ee.height=e.height,ee.width=e.width,g(F(ue.data,ee))}});throw new Error("Input data provided is not supported - aborted tensor creation")}if(Ie!==void 0)return F(Ie,ee);throw new Error("Input data provided is not supported - aborted tensor creation")},U=(D,R)=>{const{width:Q,height:J,download:oe,dispose:be}=R,Ie=[1,J,Q,4];return new w.Tensor({location:"texture",type:"float32",texture:D,dims:Ie,download:oe,dispose:be})},H=(D,R)=>{const{dataType:Q,dims:J,download:oe,dispose:be}=R;return new w.Tensor({location:"gpu-buffer",type:Q??"float32",gpuBuffer:D,dims:J,download:oe,dispose:be})},z=(D,R)=>{const{dataType:Q,dims:J,download:oe,dispose:be}=R;return new w.Tensor({location:"ml-tensor",type:Q??"float32",mlTensor:D,dims:J,download:oe,dispose:be})},N=(D,R,Q)=>new w.Tensor({location:"cpu-pinned",type:D,data:R,dims:Q??[R.length]})},"./node_modules/onnxruntime-common/dist/esm/tensor-factory.js":(T,k,A)=>{A.r(k)},"./node_modules/onnxruntime-common/dist/esm/tensor-impl-type-mapping.js":(T,k,A)=>{A.r(k),A.d(k,{NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP:()=>F,NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP:()=>w,checkTypedArray:()=>U});const w=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array],["int4",Uint8Array],["uint4",Uint8Array]]),F=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]);let Y=!1;const U=()=>{if(!Y){Y=!0;const H=typeof BigInt64Array<"u"&&BigInt64Array.from,z=typeof BigUint64Array<"u"&&BigUint64Array.from,N=typeof Float16Array<"u"&&Float16Array.from;H&&(w.set("int64",BigInt64Array),F.set(BigInt64Array,"int64")),z&&(w.set("uint64",BigUint64Array),F.set(BigUint64Array,"uint64")),N?(w.set("float16",Float16Array),F.set(Float16Array,"float16")):w.set("float16",Uint16Array)}}},"./node_modules/onnxruntime-common/dist/esm/tensor-impl.js":(T,k,A)=>{A.r(k),A.d(k,{Tensor:()=>H});var w=A("./node_modules/onnxruntime-common/dist/esm/tensor-conversion-impl.js"),F=A("./node_modules/onnxruntime-common/dist/esm/tensor-factory-impl.js"),Y=A("./node_modules/onnxruntime-common/dist/esm/tensor-impl-type-mapping.js"),U=A("./node_modules/onnxruntime-common/dist/esm/tensor-utils-impl.js");class H{constructor(N,D,R){(0,Y.checkTypedArray)();let Q,J;if(typeof N=="object"&&"location"in N)switch(this.dataLocation=N.location,Q=N.type,J=N.dims,N.location){case"cpu-pinned":{const be=Y.NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.get(Q);if(!be)throw new TypeError(`unsupported type "${Q}" to create tensor from pinned buffer`);if(!(N.data instanceof be))throw new TypeError(`buffer should be of type ${be.name}`);this.cpuData=N.data;break}case"texture":{if(Q!=="float32")throw new TypeError(`unsupported type "${Q}" to create tensor from texture`);this.gpuTextureData=N.texture,this.downloader=N.download,this.disposer=N.dispose;break}case"gpu-buffer":{if(Q!=="float32"&&Q!=="float16"&&Q!=="int32"&&Q!=="int64"&&Q!=="uint32"&&Q!=="uint8"&&Q!=="bool"&&Q!=="uint4"&&Q!=="int4")throw new TypeError(`unsupported type "${Q}" to create tensor from gpu buffer`);this.gpuBufferData=N.gpuBuffer,this.downloader=N.download,this.disposer=N.dispose;break}case"ml-tensor":{if(Q!=="float32"&&Q!=="float16"&&Q!=="int32"&&Q!=="int64"&&Q!=="uint32"&&Q!=="uint64"&&Q!=="int8"&&Q!=="uint8"&&Q!=="bool")throw new TypeError(`unsupported type "${Q}" to create tensor from MLTensor`);this.mlTensorData=N.mlTensor,this.downloader=N.download,this.disposer=N.dispose;break}default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let be,Ie;if(typeof N=="string")if(Q=N,Ie=R,N==="string"){if(!Array.isArray(D))throw new TypeError("A string tensor's data must be a string array.");be=D}else{const ee=Y.NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.get(N);if(ee===void 0)throw new TypeError(`Unsupported tensor type: ${N}.`);if(Array.isArray(D)){if(N==="float16"&&ee===Uint16Array||N==="uint4"||N==="int4")throw new TypeError(`Creating a ${N} tensor from number array is not supported. Please use ${ee.name} as data.`);N==="uint64"||N==="int64"?be=ee.from(D,BigInt):be=ee.from(D)}else if(D instanceof ee)be=D;else if(D instanceof Uint8ClampedArray)if(N==="uint8")be=Uint8Array.from(D);else throw new TypeError("A Uint8ClampedArray tensor's data must be type of uint8");else throw new TypeError(`A ${Q} tensor's data must be type of ${ee}`)}else if(Ie=D,Array.isArray(N)){if(N.length===0)throw new TypeError("Tensor type cannot be inferred from an empty array.");const ee=typeof N[0];if(ee==="string")Q="string",be=N;else if(ee==="boolean")Q="bool",be=Uint8Array.from(N);else throw new TypeError(`Invalid element type of data array: ${ee}.`)}else if(N instanceof Uint8ClampedArray)Q="uint8",be=Uint8Array.from(N);else{const ee=Y.NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.get(N.constructor);if(ee===void 0)throw new TypeError(`Unsupported type for tensor data: ${N.constructor}.`);Q=ee,be=N}if(Ie===void 0)Ie=[be.length];else if(!Array.isArray(Ie))throw new TypeError("A tensor's dims must be a number array");J=Ie,this.cpuData=be,this.dataLocation="cpu"}const oe=(0,U.calculateSize)(J);if(this.cpuData&&oe!==this.cpuData.length&&!((Q==="uint4"||Q==="int4")&&Math.ceil(oe/2)===this.cpuData.length))throw new Error(`Tensor's size(${oe}) does not match data length(${this.cpuData.length}).`);this.type=Q,this.dims=J,this.size=oe}static async fromImage(N,D){return(0,F.tensorFromImage)(N,D)}static fromTexture(N,D){return(0,F.tensorFromTexture)(N,D)}static fromGpuBuffer(N,D){return(0,F.tensorFromGpuBuffer)(N,D)}static fromMLTensor(N,D){return(0,F.tensorFromMLTensor)(N,D)}static fromPinnedBuffer(N,D,R){return(0,F.tensorFromPinnedBuffer)(N,D,R)}toDataURL(N){return(0,w.tensorToDataURL)(this,N)}toImageData(N){return(0,w.tensorToImageData)(this,N)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}get mlTensor(){if(this.ensureValid(),!this.mlTensorData)throw new Error("The data is not stored as a WebNN MLTensor.");return this.mlTensorData}async getData(N){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":case"ml-tensor":{if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;const D=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=D,N&&this.disposer&&(this.disposer(),this.disposer=void 0),D}finally{this.isDownloading=!1}}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.mlTensorData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if(this.dataLocation==="none")throw new Error("The tensor is disposed.")}reshape(N){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return(0,U.tensorReshape)(this,N)}}},"./node_modules/onnxruntime-common/dist/esm/tensor-utils-impl.js":(T,k,A)=>{A.r(k),A.d(k,{calculateSize:()=>F,tensorReshape:()=>Y});var w=A("./node_modules/onnxruntime-common/dist/esm/tensor-impl.js");const F=U=>{let H=1;for(let z=0;z<U.length;z++){const N=U[z];if(typeof N!="number"||!Number.isSafeInteger(N))throw new TypeError(`dims[${z}] must be an integer, got: ${N}`);if(N<0)throw new RangeError(`dims[${z}] must be a non-negative integer, got: ${N}`);H*=N}return H},Y=(U,H)=>{switch(U.location){case"cpu":return new w.Tensor(U.type,U.data,H);case"cpu-pinned":return new w.Tensor({location:"cpu-pinned",data:U.data,type:U.type,dims:H});case"texture":return new w.Tensor({location:"texture",texture:U.texture,type:U.type,dims:H});case"gpu-buffer":return new w.Tensor({location:"gpu-buffer",gpuBuffer:U.gpuBuffer,type:U.type,dims:H});case"ml-tensor":return new w.Tensor({location:"ml-tensor",mlTensor:U.mlTensor,type:U.type,dims:H});default:throw new Error(`tensorReshape: tensor location ${U.location} is not supported`)}}},"./node_modules/onnxruntime-common/dist/esm/tensor.js":(T,k,A)=>{A.r(k),A.d(k,{Tensor:()=>F});var w=A("./node_modules/onnxruntime-common/dist/esm/tensor-impl.js");const F=w.Tensor},"./node_modules/onnxruntime-common/dist/esm/trace.js":(T,k,A)=>{A.r(k),A.d(k,{TRACE:()=>F,TRACE_FUNC_BEGIN:()=>U,TRACE_FUNC_END:()=>H});var w=A("./node_modules/onnxruntime-common/dist/esm/env-impl.js");const F=(z,N)=>{(typeof w.env.trace>"u"?!w.env.wasm.trace:!w.env.trace)||console.timeStamp(`${z}::ORT::${N}`)},Y=(z,N)=>{var Q;const D=((Q=new Error().stack)==null?void 0:Q.split(/\r\n|\r|\n/g))||[];let R=!1;for(let J=0;J<D.length;J++){if(R&&!D[J].includes("TRACE_FUNC")){let oe=`FUNC_${z}::${D[J].trim().split(" ")[1]}`;N&&(oe+=`::${N}`),F("CPU",oe);return}D[J].includes("TRACE_FUNC")&&(R=!0)}},U=z=>{(typeof w.env.trace>"u"?!w.env.wasm.trace:!w.env.trace)||Y("BEGIN",z)},H=z=>{(typeof w.env.trace>"u"?!w.env.wasm.trace:!w.env.trace)||Y("END",z)}},"./node_modules/onnxruntime-common/dist/esm/training-session-impl.js":(T,k,A)=>{A.r(k),A.d(k,{TrainingSession:()=>U});var w=A("./node_modules/onnxruntime-common/dist/esm/backend-impl.js"),F=A("./node_modules/onnxruntime-common/dist/esm/tensor.js");const Y="Training backend could not be resolved. Make sure you're using the correct configuration & WebAssembly files.";class U{constructor(z,N,D){this.handler=z,this.hasOptimizerModel=N,this.hasEvalModel=D}get trainingInputNames(){return this.handler.inputNames}get trainingOutputNames(){return this.handler.outputNames}get evalInputNames(){if(this.hasEvalModel)return this.handler.evalInputNames;throw new Error("This training session has no evalModel loaded.")}get evalOutputNames(){if(this.hasEvalModel)return this.handler.evalOutputNames;throw new Error("This training session has no evalModel loaded.")}static async create(z,N){const D=z.evalModel||"",R=z.optimizerModel||"",Q=N||{},[J,oe]=await(0,w.resolveBackendAndExecutionProviders)(Q);if(J.createTrainingSessionHandler){const be=await J.createTrainingSessionHandler(z.checkpointState,z.trainModel,D,R,oe);return new U(be,!!z.optimizerModel,!!z.evalModel)}else throw new Error(Y)}typeNarrowingForRunStep(z,N,D,R,Q){const J={};let oe={};if(typeof D!="object"||D===null||D instanceof F.Tensor||Array.isArray(D))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let be=!0;if(typeof R=="object"){if(R===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(R instanceof F.Tensor)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(R)){if(R.length===0)throw new TypeError("'fetches' cannot be an empty array.");be=!1;for(const Ie of R){if(typeof Ie!="string")throw new TypeError("'fetches' must be a string array or an object.");if(N.indexOf(Ie)===-1)throw new RangeError(`'fetches' contains invalid output name: ${Ie}.`);J[Ie]=null}if(typeof Q=="object"&&Q!==null)oe=Q;else if(typeof Q<"u")throw new TypeError("'options' must be an object.")}else{let Ie=!1;const ee=Object.getOwnPropertyNames(R);for(const re of N)if(ee.indexOf(re)!==-1){const ce=R[re];(ce===null||ce instanceof F.Tensor)&&(Ie=!0,be=!1,J[re]=ce)}if(Ie){if(typeof Q=="object"&&Q!==null)oe=Q;else if(typeof Q<"u")throw new TypeError("'options' must be an object.")}else oe=R}}else if(typeof R<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(const Ie of z)if(typeof D[Ie]>"u")throw new Error(`input '${Ie}' is missing in 'feeds'.`);if(be)for(const Ie of N)J[Ie]=null;return[J,oe]}convertHandlerReturnTypeToMapOfTensors(z){const N={};for(const D in z)if(Object.hasOwnProperty.call(z,D)){const R=z[D];R instanceof F.Tensor?N[D]=R:N[D]=new F.Tensor(R.type,R.data,R.dims)}return N}async lazyResetGrad(){await this.handler.lazyResetGrad()}async runTrainStep(z,N,D){const[R,Q]=this.typeNarrowingForRunStep(this.trainingInputNames,this.trainingOutputNames,z,N,D),J=await this.handler.runTrainStep(z,R,Q);return this.convertHandlerReturnTypeToMapOfTensors(J)}async runOptimizerStep(z){if(this.hasOptimizerModel)await this.handler.runOptimizerStep(z||{});else throw new Error("This TrainingSession has no OptimizerModel loaded.")}async runEvalStep(z,N,D){if(this.hasEvalModel){const[R,Q]=this.typeNarrowingForRunStep(this.evalInputNames,this.evalOutputNames,z,N,D),J=await this.handler.runEvalStep(z,R,Q);return this.convertHandlerReturnTypeToMapOfTensors(J)}else throw new Error("This TrainingSession has no EvalModel loaded.")}async getParametersSize(z=!0){return this.handler.getParametersSize(z)}async loadParametersBuffer(z,N=!0){const D=await this.getParametersSize(N);if(z.length!==4*D)throw new Error("Size of the buffer passed into loadParametersBuffer must match the number of parameters in the model. Please use getParametersSize method to check.");return this.handler.loadParametersBuffer(z,N)}async getContiguousParameters(z=!0){return this.handler.getContiguousParameters(z)}async release(){return this.handler.dispose()}}},"./node_modules/onnxruntime-common/dist/esm/training-session.js":(T,k,A)=>{A.r(k),A.d(k,{TrainingSession:()=>F});var w=A("./node_modules/onnxruntime-common/dist/esm/training-session-impl.js");const F=w.TrainingSession},"./node_modules/onnxruntime-common/dist/esm/version.js":(T,k,A)=>{A.r(k),A.d(k,{version:()=>w});const w="1.20.1"},"./node_modules/onnxruntime-web/dist/ort.bundle.min.mjs?3a96":(T,k,A)=>{A.r(k),A.d(k,{InferenceSession:()=>Ut,TRACE:()=>Et,TRACE_FUNC_BEGIN:()=>It,TRACE_FUNC_END:()=>Tt,Tensor:()=>Ne,default:()=>V,env:()=>B,registerBackend:()=>oe});/*!
 * ONNX Runtime Web v1.21.0-dev.20250206-d981b153d3
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */var w=Object.defineProperty,F=Object.getOwnPropertyDescriptor,Y=Object.getOwnPropertyNames,U=Object.prototype.hasOwnProperty,H=(n=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(n,{get:(l,p)=>(typeof require<"u"?require:l)[p]}):n)(function(n){if(typeof require<"u")return require.apply(this,arguments);throw Error('Dynamic require of "'+n+'" is not supported')}),z=(n,l)=>()=>(n&&(l=n(n=0)),l),N=(n,l)=>{for(var p in l)w(n,p,{get:l[p],enumerable:!0})},D=(n,l,p,b)=>{if(l&&typeof l=="object"||typeof l=="function")for(let C of Y(l))!U.call(n,C)&&C!==p&&w(n,C,{get:()=>l[C],enumerable:!(b=F(l,C))||b.enumerable});return n},R=n=>D(w({},"__esModule",{value:!0}),n),Q,J,oe,be,Ie,ee=z(()=>{Q=new Map,J=[],oe=(n,l,p)=>{if(l&&typeof l.init=="function"&&typeof l.createInferenceSessionHandler=="function"){let b=Q.get(n);if(b===void 0)Q.set(n,{backend:l,priority:p});else{if(b.priority>p)return;if(b.priority===p&&b.backend!==l)throw new Error(`cannot register backend "${n}" using priority ${p}`)}if(p>=0){let C=J.indexOf(n);C!==-1&&J.splice(C,1);for(let E=0;E<J.length;E++)if(Q.get(J[E]).priority<=p){J.splice(E,0,n);return}J.push(n)}return}throw new TypeError("not a valid backend")},be=async n=>{let l=Q.get(n);if(!l)return"backend not found.";if(l.initialized)return l.backend;if(l.aborted)return l.error;{let p=!!l.initPromise;try{return p||(l.initPromise=l.backend.init(n)),await l.initPromise,l.initialized=!0,l.backend}catch(b){return p||(l.error=`${b}`,l.aborted=!0),l.error}finally{delete l.initPromise}}},Ie=async n=>{let l=n.executionProviders||[],p=l.map(L=>typeof L=="string"?L:L.name),b=p.length===0?J:p,C,E=[],v=new Set;for(let L of b){let W=await be(L);typeof W=="string"?E.push({name:L,err:W}):(C||(C=W),C===W&&v.add(L))}if(!C)throw new Error(`no available backend found. ERR: ${E.map(L=>`[${L.name}] ${L.err}`).join(", ")}`);for(let{name:L,err:W}of E)p.includes(L)&&console.warn(`removing requested execution provider "${L}" from session options because it is not available: ${W}`);let x=l.filter(L=>v.has(typeof L=="string"?L:L.name));return[C,new Proxy(n,{get:(L,W)=>W==="executionProviders"?x:Reflect.get(L,W)})]}}),re=z(()=>{ee()}),ce,g=z(()=>{ce="1.21.0-dev.20250206-d981b153d3"}),I,e,u=z(()=>{g(),I="warning",e={wasm:{},webgl:{},webgpu:{},versions:{common:ce},set logLevel(n){if(n!==void 0){if(typeof n!="string"||["verbose","info","warning","error","fatal"].indexOf(n)===-1)throw new Error(`Unsupported logging level: ${n}`);I=n}},get logLevel(){return I}},Object.defineProperty(e,"logLevel",{enumerable:!0})}),B,ue=z(()=>{u(),B=e}),G,K,Ve=z(()=>{G=(n,l)=>{let p=typeof document<"u"?document.createElement("canvas"):new OffscreenCanvas(1,1);p.width=n.dims[3],p.height=n.dims[2];let b=p.getContext("2d");if(b!=null){let C,E;(l==null?void 0:l.tensorLayout)!==void 0&&l.tensorLayout==="NHWC"?(C=n.dims[2],E=n.dims[3]):(C=n.dims[3],E=n.dims[2]);let v=(l==null?void 0:l.format)!==void 0?l.format:"RGB",x=l==null?void 0:l.norm,L,W;x===void 0||x.mean===void 0?L=[255,255,255,255]:typeof x.mean=="number"?L=[x.mean,x.mean,x.mean,x.mean]:(L=[x.mean[0],x.mean[1],x.mean[2],0],x.mean[3]!==void 0&&(L[3]=x.mean[3])),x===void 0||x.bias===void 0?W=[0,0,0,0]:typeof x.bias=="number"?W=[x.bias,x.bias,x.bias,x.bias]:(W=[x.bias[0],x.bias[1],x.bias[2],0],x.bias[3]!==void 0&&(W[3]=x.bias[3]));let te=E*C,$=0,j=te,le=te*2,me=-1;v==="RGBA"?($=0,j=te,le=te*2,me=te*3):v==="RGB"?($=0,j=te,le=te*2):v==="RBG"&&($=0,le=te,j=te*2);for(let _e=0;_e<E;_e++)for(let Ee=0;Ee<C;Ee++){let Fe=(n.data[$++]-W[0])*L[0],Ye=(n.data[j++]-W[1])*L[1],dt=(n.data[le++]-W[2])*L[2],mt=me===-1?255:(n.data[me++]-W[3])*L[3];b.fillStyle="rgba("+Fe+","+Ye+","+dt+","+mt+")",b.fillRect(Ee,_e,1,1)}if("toDataURL"in p)return p.toDataURL();throw new Error("toDataURL is not supported")}else throw new Error("Can not access image data")},K=(n,l)=>{let p=typeof document<"u"?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d"),b;if(p!=null){let C,E,v;(l==null?void 0:l.tensorLayout)!==void 0&&l.tensorLayout==="NHWC"?(C=n.dims[2],E=n.dims[1],v=n.dims[3]):(C=n.dims[3],E=n.dims[2],v=n.dims[1]);let x=l!==void 0&&l.format!==void 0?l.format:"RGB",L=l==null?void 0:l.norm,W,te;L===void 0||L.mean===void 0?W=[255,255,255,255]:typeof L.mean=="number"?W=[L.mean,L.mean,L.mean,L.mean]:(W=[L.mean[0],L.mean[1],L.mean[2],255],L.mean[3]!==void 0&&(W[3]=L.mean[3])),L===void 0||L.bias===void 0?te=[0,0,0,0]:typeof L.bias=="number"?te=[L.bias,L.bias,L.bias,L.bias]:(te=[L.bias[0],L.bias[1],L.bias[2],0],L.bias[3]!==void 0&&(te[3]=L.bias[3]));let $=E*C;if(l!==void 0&&(l.format!==void 0&&v===4&&l.format!=="RGBA"||v===3&&l.format!=="RGB"&&l.format!=="BGR"))throw new Error("Tensor format doesn't match input tensor dims");let j=4,le=0,me=1,_e=2,Ee=3,Fe=0,Ye=$,dt=$*2,mt=-1;x==="RGBA"?(Fe=0,Ye=$,dt=$*2,mt=$*3):x==="RGB"?(Fe=0,Ye=$,dt=$*2):x==="RBG"&&(Fe=0,dt=$,Ye=$*2),b=p.createImageData(C,E);for(let xt=0;xt<E*C;le+=j,me+=j,_e+=j,Ee+=j,xt++)b.data[le]=(n.data[Fe++]-te[0])*W[0],b.data[me]=(n.data[Ye++]-te[1])*W[1],b.data[_e]=(n.data[dt++]-te[2])*W[2],b.data[Ee]=mt===-1?255:(n.data[mt++]-te[3])*W[3]}else throw new Error("Can not access image data");return b}}),ve,Re,Ke,nt,Ct,ht,et=z(()=>{rt(),ve=(n,l)=>{if(n===void 0)throw new Error("Image buffer must be defined");if(l.height===void 0||l.width===void 0)throw new Error("Image height and width must be defined");if(l.tensorLayout==="NHWC")throw new Error("NHWC Tensor layout is not supported yet");let{height:p,width:b}=l,C=l.norm??{mean:255,bias:0},E,v;typeof C.mean=="number"?E=[C.mean,C.mean,C.mean,C.mean]:E=[C.mean[0],C.mean[1],C.mean[2],C.mean[3]??255],typeof C.bias=="number"?v=[C.bias,C.bias,C.bias,C.bias]:v=[C.bias[0],C.bias[1],C.bias[2],C.bias[3]??0];let x=l.format!==void 0?l.format:"RGBA",L=l.tensorFormat!==void 0&&l.tensorFormat!==void 0?l.tensorFormat:"RGB",W=p*b,te=L==="RGBA"?new Float32Array(W*4):new Float32Array(W*3),$=4,j=0,le=1,me=2,_e=3,Ee=0,Fe=W,Ye=W*2,dt=-1;x==="RGB"&&($=3,j=0,le=1,me=2,_e=-1),L==="RGBA"?dt=W*3:L==="RBG"?(Ee=0,Ye=W,Fe=W*2):L==="BGR"&&(Ye=0,Fe=W,Ee=W*2);for(let mt=0;mt<W;mt++,j+=$,me+=$,le+=$,_e+=$)te[Ee++]=(n[j]+v[0])/E[0],te[Fe++]=(n[le]+v[1])/E[1],te[Ye++]=(n[me]+v[2])/E[2],dt!==-1&&_e!==-1&&(te[dt++]=(n[_e]+v[3])/E[3]);return L==="RGBA"?new bt("float32",te,[1,4,p,b]):new bt("float32",te,[1,3,p,b])},Re=async(n,l)=>{let p=typeof HTMLImageElement<"u"&&n instanceof HTMLImageElement,b=typeof ImageData<"u"&&n instanceof ImageData,C=typeof ImageBitmap<"u"&&n instanceof ImageBitmap,E=typeof n=="string",v,x=l??{},L=()=>{if(typeof document<"u")return document.createElement("canvas");if(typeof OffscreenCanvas<"u")return new OffscreenCanvas(1,1);throw new Error("Canvas is not supported")},W=te=>typeof HTMLCanvasElement<"u"&&te instanceof HTMLCanvasElement||te instanceof OffscreenCanvas?te.getContext("2d"):null;if(p){let te=L();te.width=n.width,te.height=n.height;let $=W(te);if($!=null){let j=n.height,le=n.width;if(l!==void 0&&l.resizedHeight!==void 0&&l.resizedWidth!==void 0&&(j=l.resizedHeight,le=l.resizedWidth),l!==void 0){if(x=l,l.tensorFormat!==void 0)throw new Error("Image input config format must be RGBA for HTMLImageElement");x.tensorFormat="RGBA",x.height=j,x.width=le}else x.tensorFormat="RGBA",x.height=j,x.width=le;$.drawImage(n,0,0),v=$.getImageData(0,0,le,j).data}else throw new Error("Can not access image data")}else if(b){let te,$;if(l!==void 0&&l.resizedWidth!==void 0&&l.resizedHeight!==void 0?(te=l.resizedHeight,$=l.resizedWidth):(te=n.height,$=n.width),l!==void 0&&(x=l),x.format="RGBA",x.height=te,x.width=$,l!==void 0){let j=L();j.width=$,j.height=te;let le=W(j);if(le!=null)le.putImageData(n,0,0),v=le.getImageData(0,0,$,te).data;else throw new Error("Can not access image data")}else v=n.data}else if(C){if(l===void 0)throw new Error("Please provide image config with format for Imagebitmap");let te=L();te.width=n.width,te.height=n.height;let $=W(te);if($!=null){let j=n.height,le=n.width;return $.drawImage(n,0,0,le,j),v=$.getImageData(0,0,le,j).data,x.height=j,x.width=le,ve(v,x)}else throw new Error("Can not access image data")}else{if(E)return new Promise((te,$)=>{let j=L(),le=W(j);if(!n||!le)return $();let me=new Image;me.crossOrigin="Anonymous",me.src=n,me.onload=()=>{j.width=me.width,j.height=me.height,le.drawImage(me,0,0,j.width,j.height);let _e=le.getImageData(0,0,j.width,j.height);x.height=j.height,x.width=j.width,te(ve(_e.data,x))}});throw new Error("Input data provided is not supported - aborted tensor creation")}if(v!==void 0)return ve(v,x);throw new Error("Input data provided is not supported - aborted tensor creation")},Ke=(n,l)=>{let{width:p,height:b,download:C,dispose:E}=l,v=[1,b,p,4];return new bt({location:"texture",type:"float32",texture:n,dims:v,download:C,dispose:E})},nt=(n,l)=>{let{dataType:p,dims:b,download:C,dispose:E}=l;return new bt({location:"gpu-buffer",type:p??"float32",gpuBuffer:n,dims:b,download:C,dispose:E})},Ct=(n,l)=>{let{dataType:p,dims:b,download:C,dispose:E}=l;return new bt({location:"ml-tensor",type:p??"float32",mlTensor:n,dims:b,download:C,dispose:E})},ht=(n,l,p)=>new bt({location:"cpu-pinned",type:n,data:l,dims:p??[l.length]})}),ze,Se,xe,Me,ft=z(()=>{ze=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array],["int4",Uint8Array],["uint4",Uint8Array]]),Se=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]),xe=!1,Me=()=>{if(!xe){xe=!0;let n=typeof BigInt64Array<"u"&&BigInt64Array.from,l=typeof BigUint64Array<"u"&&BigUint64Array.from,p=typeof Float16Array<"u"&&Float16Array.from;n&&(ze.set("int64",BigInt64Array),Se.set(BigInt64Array,"int64")),l&&(ze.set("uint64",BigUint64Array),Se.set(BigUint64Array,"uint64")),p?(ze.set("float16",Float16Array),Se.set(Float16Array,"float16")):ze.set("float16",Uint16Array)}}}),gt,_t,Je=z(()=>{rt(),gt=n=>{let l=1;for(let p=0;p<n.length;p++){let b=n[p];if(typeof b!="number"||!Number.isSafeInteger(b))throw new TypeError(`dims[${p}] must be an integer, got: ${b}`);if(b<0)throw new RangeError(`dims[${p}] must be a non-negative integer, got: ${b}`);l*=b}return l},_t=(n,l)=>{switch(n.location){case"cpu":return new bt(n.type,n.data,l);case"cpu-pinned":return new bt({location:"cpu-pinned",data:n.data,type:n.type,dims:l});case"texture":return new bt({location:"texture",texture:n.texture,type:n.type,dims:l});case"gpu-buffer":return new bt({location:"gpu-buffer",gpuBuffer:n.gpuBuffer,type:n.type,dims:l});case"ml-tensor":return new bt({location:"ml-tensor",mlTensor:n.mlTensor,type:n.type,dims:l});default:throw new Error(`tensorReshape: tensor location ${n.location} is not supported`)}}}),bt,rt=z(()=>{Ve(),et(),ft(),Je(),bt=class{constructor(n,l,p){Me();let b,C;if(typeof n=="object"&&"location"in n)switch(this.dataLocation=n.location,b=n.type,C=n.dims,n.location){case"cpu-pinned":{let v=ze.get(b);if(!v)throw new TypeError(`unsupported type "${b}" to create tensor from pinned buffer`);if(!(n.data instanceof v))throw new TypeError(`buffer should be of type ${v.name}`);this.cpuData=n.data;break}case"texture":{if(b!=="float32")throw new TypeError(`unsupported type "${b}" to create tensor from texture`);this.gpuTextureData=n.texture,this.downloader=n.download,this.disposer=n.dispose;break}case"gpu-buffer":{if(b!=="float32"&&b!=="float16"&&b!=="int32"&&b!=="int64"&&b!=="uint32"&&b!=="uint8"&&b!=="bool"&&b!=="uint4"&&b!=="int4")throw new TypeError(`unsupported type "${b}" to create tensor from gpu buffer`);this.gpuBufferData=n.gpuBuffer,this.downloader=n.download,this.disposer=n.dispose;break}case"ml-tensor":{if(b!=="float32"&&b!=="float16"&&b!=="int32"&&b!=="int64"&&b!=="uint32"&&b!=="uint64"&&b!=="int8"&&b!=="uint8"&&b!=="bool"&&b!=="uint4"&&b!=="int4")throw new TypeError(`unsupported type "${b}" to create tensor from MLTensor`);this.mlTensorData=n.mlTensor,this.downloader=n.download,this.disposer=n.dispose;break}default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let v,x;if(typeof n=="string")if(b=n,x=p,n==="string"){if(!Array.isArray(l))throw new TypeError("A string tensor's data must be a string array.");v=l}else{let L=ze.get(n);if(L===void 0)throw new TypeError(`Unsupported tensor type: ${n}.`);if(Array.isArray(l)){if(n==="float16"&&L===Uint16Array||n==="uint4"||n==="int4")throw new TypeError(`Creating a ${n} tensor from number array is not supported. Please use ${L.name} as data.`);n==="uint64"||n==="int64"?v=L.from(l,BigInt):v=L.from(l)}else if(l instanceof L)v=l;else if(l instanceof Uint8ClampedArray)if(n==="uint8")v=Uint8Array.from(l);else throw new TypeError("A Uint8ClampedArray tensor's data must be type of uint8");else throw new TypeError(`A ${b} tensor's data must be type of ${L}`)}else if(x=l,Array.isArray(n)){if(n.length===0)throw new TypeError("Tensor type cannot be inferred from an empty array.");let L=typeof n[0];if(L==="string")b="string",v=n;else if(L==="boolean")b="bool",v=Uint8Array.from(n);else throw new TypeError(`Invalid element type of data array: ${L}.`)}else if(n instanceof Uint8ClampedArray)b="uint8",v=Uint8Array.from(n);else{let L=Se.get(n.constructor);if(L===void 0)throw new TypeError(`Unsupported type for tensor data: ${n.constructor}.`);b=L,v=n}if(x===void 0)x=[v.length];else if(!Array.isArray(x))throw new TypeError("A tensor's dims must be a number array");C=x,this.cpuData=v,this.dataLocation="cpu"}let E=gt(C);if(this.cpuData&&E!==this.cpuData.length&&!((b==="uint4"||b==="int4")&&Math.ceil(E/2)===this.cpuData.length))throw new Error(`Tensor's size(${E}) does not match data length(${this.cpuData.length}).`);this.type=b,this.dims=C,this.size=E}static async fromImage(n,l){return Re(n,l)}static fromTexture(n,l){return Ke(n,l)}static fromGpuBuffer(n,l){return nt(n,l)}static fromMLTensor(n,l){return Ct(n,l)}static fromPinnedBuffer(n,l,p){return ht(n,l,p)}toDataURL(n){return G(this,n)}toImageData(n){return K(this,n)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}get mlTensor(){if(this.ensureValid(),!this.mlTensorData)throw new Error("The data is not stored as a WebNN MLTensor.");return this.mlTensorData}async getData(n){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":case"ml-tensor":{if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;let l=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=l,n&&this.disposer&&(this.disposer(),this.disposer=void 0),l}finally{this.isDownloading=!1}}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.mlTensorData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if(this.dataLocation==="none")throw new Error("The tensor is disposed.")}reshape(n){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return _t(this,n)}}}),Ne,it=z(()=>{rt(),Ne=bt}),Et,$e,It,Tt,zt=z(()=>{u(),Et=(n,l)=>{(typeof e.trace>"u"?!e.wasm.trace:!e.trace)||console.timeStamp(`${n}::ORT::${l}`)},$e=(n,l)=>{var C;let p=((C=new Error().stack)==null?void 0:C.split(/\r\n|\r|\n/g))||[],b=!1;for(let E=0;E<p.length;E++){if(b&&!p[E].includes("TRACE_FUNC")){let v=`FUNC_${n}::${p[E].trim().split(" ")[1]}`;l&&(v+=`::${l}`),Et("CPU",v);return}p[E].includes("TRACE_FUNC")&&(b=!0)}},It=n=>{(typeof e.trace>"u"?!e.wasm.trace:!e.trace)||$e("BEGIN",n)},Tt=n=>{(typeof e.trace>"u"?!e.wasm.trace:!e.trace)||$e("END",n)}}),Wt,pe=z(()=>{ee(),it(),zt(),Wt=class Dp{constructor(l){this.handler=l}async run(l,p,b){It();let C={},E={};if(typeof l!="object"||l===null||l instanceof Ne||Array.isArray(l))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let v=!0;if(typeof p=="object"){if(p===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(p instanceof Ne)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(p)){if(p.length===0)throw new TypeError("'fetches' cannot be an empty array.");v=!1;for(let W of p){if(typeof W!="string")throw new TypeError("'fetches' must be a string array or an object.");if(this.outputNames.indexOf(W)===-1)throw new RangeError(`'fetches' contains invalid output name: ${W}.`);C[W]=null}if(typeof b=="object"&&b!==null)E=b;else if(typeof b<"u")throw new TypeError("'options' must be an object.")}else{let W=!1,te=Object.getOwnPropertyNames(p);for(let $ of this.outputNames)if(te.indexOf($)!==-1){let j=p[$];(j===null||j instanceof Ne)&&(W=!0,v=!1,C[$]=j)}if(W){if(typeof b=="object"&&b!==null)E=b;else if(typeof b<"u")throw new TypeError("'options' must be an object.")}else E=p}}else if(typeof p<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let W of this.inputNames)if(typeof l[W]>"u")throw new Error(`input '${W}' is missing in 'feeds'.`);if(v)for(let W of this.outputNames)C[W]=null;let x=await this.handler.run(l,C,E),L={};for(let W in x)if(Object.hasOwnProperty.call(x,W)){let te=x[W];te instanceof Ne?L[W]=te:L[W]=new Ne(te.type,te.data,te.dims)}return Tt(),L}async release(){return this.handler.dispose()}static async create(l,p,b,C){It();let E,v={};if(typeof l=="string"){if(E=l,typeof p=="object"&&p!==null)v=p;else if(typeof p<"u")throw new TypeError("'options' must be an object.")}else if(l instanceof Uint8Array){if(E=l,typeof p=="object"&&p!==null)v=p;else if(typeof p<"u")throw new TypeError("'options' must be an object.")}else if(l instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&l instanceof SharedArrayBuffer){let te=l,$=0,j=l.byteLength;if(typeof p=="object"&&p!==null)v=p;else if(typeof p=="number"){if($=p,!Number.isSafeInteger($))throw new RangeError("'byteOffset' must be an integer.");if($<0||$>=te.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${te.byteLength}).`);if(j=l.byteLength-$,typeof b=="number"){if(j=b,!Number.isSafeInteger(j))throw new RangeError("'byteLength' must be an integer.");if(j<=0||$+j>te.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${te.byteLength-$}].`);if(typeof C=="object"&&C!==null)v=C;else if(typeof C<"u")throw new TypeError("'options' must be an object.")}else if(typeof b<"u")throw new TypeError("'byteLength' must be a number.")}else if(typeof p<"u")throw new TypeError("'options' must be an object.");E=new Uint8Array(te,$,j)}else throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");let[x,L]=await Ie(v),W=await x.createInferenceSessionHandler(E,L);return Tt(),new Dp(W)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}}}),Ut,Pe=z(()=>{pe(),Ut=Wt}),X=z(()=>{}),ge=z(()=>{}),fe=z(()=>{}),He=z(()=>{}),ct={};N(ct,{InferenceSession:()=>Ut,TRACE:()=>Et,TRACE_FUNC_BEGIN:()=>It,TRACE_FUNC_END:()=>Tt,Tensor:()=>Ne,env:()=>B,registerBackend:()=>oe});var kt=z(()=>{re(),ue(),Pe(),it(),X(),ge(),zt(),fe(),He()}),Dt=z(()=>{}),Ht={};N(Ht,{default:()=>nr});var Vt,sr,nr,lr=z(()=>{var n;sd(),Xa(),kn(),Vt="ort-wasm-proxy-worker",sr=((n=globalThis.self)==null?void 0:n.name)===Vt,sr&&(self.onmessage=l=>{let{type:p,in:b}=l.data;try{switch(p){case"init-wasm":Ss(b.wasm).then(()=>{Wo(b).then(()=>{postMessage({type:p})},C=>{postMessage({type:p,err:C})})},C=>{postMessage({type:p,err:C})});break;case"init-ep":{let{epName:C,env:E}=b;UA(E,C).then(()=>{postMessage({type:p})},v=>{postMessage({type:p,err:v})});break}case"copy-from":{let{buffer:C}=b,E=HA(C);postMessage({type:p,out:E});break}case"create":{let{model:C,options:E}=b;e0(C,E).then(v=>{postMessage({type:p,out:v})},v=>{postMessage({type:p,err:v})});break}case"release":Ao(b),postMessage({type:p});break;case"run":{let{sessionId:C,inputIndices:E,inputs:v,outputIndices:x,options:L}=b;Oi(C,E,v,x,new Array(x.length).fill(null),L).then(W=>{W.some(te=>te[3]!=="cpu")?postMessage({type:p,err:"Proxy does not support non-cpu tensor location."}):postMessage({type:p,out:W},vl([...v,...W]))},W=>{postMessage({type:p,err:W})});break}case"end-profiling":Xn(b),postMessage({type:p});break;default:}}catch(C){postMessage({type:p,err:C})}}),nr=sr?null:l=>new Worker(l??oa,{type:"module",name:Vt})}),Fr={};N(Fr,{default:()=>Cs});var ns,Gs,Cs,Ks=z(()=>{var n;Gs=(ns=import.meta.url,async function(l={}){function p(){return Sr.buffer!=bs.buffer&&Va(),bs}function b(){return Sr.buffer!=bs.buffer&&Va(),vs}function C(){return Sr.buffer!=bs.buffer&&Va(),Ys}function E(){return Sr.buffer!=bs.buffer&&Va(),Er}function v(){return Sr.buffer!=bs.buffer&&Va(),Kr}function x(){return Sr.buffer!=bs.buffer&&Va(),js}function L(){return Sr.buffer!=bs.buffer&&Va(),Ds}function W(){return Sr.buffer!=bs.buffer&&Va(),Ml}var te,$,j=Object.assign({},l),le=new Promise((O,ne)=>{te=O,$=ne}),me=typeof window=="object",_e=typeof importScripts=="function",Ee=_e&&self.name=="em-pthread";j.mountExternalData=(O,ne)=>{O.startsWith("./")&&(O=O.substring(2)),(j.Fb||(j.Fb=new Map)).set(O,ne)},j.unmountExternalData=()=>{delete j.Fb};var Fe=globalThis.SharedArrayBuffer??new WebAssembly.Memory({initial:0,maximum:0,shared:!0}).buffer.constructor;let Ye=()=>{let O=(we,De,Ze)=>(...Bt)=>{let er=Z0,dr=De==null?void 0:De();Bt=we(...Bt);let Ot=De==null?void 0:De();return dr!==Ot&&(we=Ot,Ze(dr),De=Ze=null),Z0!=er?new Promise((Dr,ts)=>{Ag={resolve:Dr,reject:ts}}):Bt},ne=we=>async(...De)=>{var Ze;try{if(j.Gb)throw Error("Session already started");let Bt=j.Gb={hc:De[0],errors:[]},er=await we(...De);if(j.Gb!==Bt)throw Error("Session mismatch");(Ze=j.Hb)==null||Ze.flush();let dr=Bt.errors;if(0<dr.length){let Ot=await Promise.all(dr);if(Ot=Ot.filter(Dr=>Dr),0<Ot.length)throw Error(Ot.join(`
`))}return er}finally{j.Gb=null}};j._OrtCreateSession=O(j._OrtCreateSession,()=>j._OrtCreateSession,we=>j._OrtCreateSession=we),j._OrtRun=ne(O(j._OrtRun,()=>j._OrtRun,we=>j._OrtRun=we)),j._OrtRunWithBinding=ne(O(j._OrtRunWithBinding,()=>j._OrtRunWithBinding,we=>j._OrtRunWithBinding=we)),j._OrtBindInput=O(j._OrtBindInput,()=>j._OrtBindInput,we=>j._OrtBindInput=we),Ye=void 0};j.jsepInit=(O,ne)=>{if(Ye==null||Ye(),O==="webgpu"){[j.Hb,j.Vb,j.Zb,j.Ob,j.Yb,j.kb,j.$b,j.cc,j.Wb,j.Xb,j.ac]=ne;let we=j.Hb;j.jsepRegisterBuffer=(De,Ze,Bt,er)=>we.registerBuffer(De,Ze,Bt,er),j.jsepGetBuffer=De=>we.getBuffer(De),j.jsepCreateDownloader=(De,Ze,Bt)=>we.createDownloader(De,Ze,Bt),j.jsepOnCreateSession=De=>{we.onCreateSession(De)},j.jsepOnReleaseSession=De=>{we.onReleaseSession(De)},j.jsepOnRunStart=De=>we.onRunStart(De),j.dc=(De,Ze)=>{we.upload(De,Ze)}}else if(O==="webnn"){[j.Hb,j.bc,j.Pb,j.jsepEnsureTensor,j.ec,j.jsepDownloadTensor]=ne,j.jsepReleaseTensorId=j.Pb;let we=j.Hb;j.jsepOnRunStart=De=>we.onRunStart(De),j.jsepRegisterMLContext=(De,Ze)=>{we.registerMLContext(De,Ze)},j.jsepOnReleaseSession=De=>{we.onReleaseSession(De)},j.jsepCreateMLTensorDownloader=(De,Ze)=>we.createMLTensorDownloader(De,Ze),j.jsepRegisterMLTensor=(De,Ze,Bt)=>we.registerMLTensor(De,Ze,Bt),j.jsepCreateMLContext=De=>we.createMLContext(De),j.jsepRegisterMLConstant=(De,Ze,Bt,er,dr)=>we.registerMLConstant(De,Ze,Bt,er,dr,j.Fb)}};var dt,mt,xt=Object.assign({},j),jt=(O,ne)=>{throw ne},Gt="";(me||_e)&&(_e?Gt=self.location.href:typeof document<"u"&&document.currentScript&&(Gt=document.currentScript.src),ns&&(Gt=ns),Gt=Gt.startsWith("blob:")?"":Gt.substr(0,Gt.replace(/[?#].*/,"").lastIndexOf("/")+1),_e&&(mt=O=>{var ne=new XMLHttpRequest;return ne.open("GET",O,!1),ne.responseType="arraybuffer",ne.send(null),new Uint8Array(ne.response)}),dt=(O,ne,we)=>{var De=new XMLHttpRequest;De.open("GET",O,!0),De.responseType="arraybuffer",De.onload=()=>{De.status==200||De.status==0&&De.response?ne(De.response):we()},De.onerror=we,De.send(null)});var Zt,ar=console.log.bind(console),St=console.error.bind(console),kr=ar,fr=St;if(Object.assign(j,xt),xt=null,Ee){let O=function(ne){try{var we=ne.data,De=we.cmd;if(De==="load"){let Ze=[];self.onmessage=Bt=>Ze.push(Bt),self.startWorker=()=>{postMessage({cmd:"loaded"});for(let Bt of Ze)O(Bt);self.onmessage=O};for(let Bt of we.handlers)j[Bt]&&!j[Bt].proxy||(j[Bt]=(...er)=>{postMessage({Nb:"callHandler",pc:Bt,args:er})},Bt=="print"&&(kr=j[Bt]),Bt=="printErr"&&(fr=j[Bt]));Sr=we.wasmMemory,Va(),ur(we.wasmModule)}else if(De==="run"){I2(we.pthread_ptr,0,0,1,0,0),ig(we.pthread_ptr),Ng(),zg(),Jr||(w2(),Jr=!0);try{Lg(we.start_routine,we.arg)}catch(Ze){if(Ze!="unwind")throw Ze}}else De==="cancel"?ld()&&Id(-1):we.target!=="setimmediate"&&(De==="checkMailbox"?Jr&&A2():De&&(fr(`worker: received unknown command ${De}`),fr(we)))}catch(Ze){throw Cg(),Ze}};var ur,Jr=!1;fr=function(...ne){ne=ne.join(" "),console.error(ne)},self.alert=function(...ne){postMessage({Nb:"alert",text:ne.join(" "),rc:ld()})},j.instantiateWasm=(ne,we)=>new Promise(De=>{ur=Ze=>{Ze=new WebAssembly.Instance(Ze,Zd()),we(Ze),De()}}),self.onunhandledrejection=ne=>{throw ne.reason||ne},self.onmessage=O}j.wasmBinary&&(Zt=j.wasmBinary);var Sr,As,Xs,bs,vs,Ys,Er,Kr,js,Ds,va,_i,Ml,qi=!1;function Va(){var O=Sr.buffer;j.HEAP8=bs=new Int8Array(O),j.HEAP16=Ys=new Int16Array(O),j.HEAPU8=vs=new Uint8Array(O),j.HEAPU16=Er=new Uint16Array(O),j.HEAP32=Kr=new Int32Array(O),j.HEAPU32=js=new Uint32Array(O),j.HEAPF32=Ds=new Float32Array(O),j.HEAPF64=Ml=new Float64Array(O),j.HEAP64=va=new BigInt64Array(O),j.HEAPU64=_i=new BigUint64Array(O)}if(!Ee){if(!((Sr=new WebAssembly.Memory({initial:256,maximum:65536,shared:!0})).buffer instanceof Fe))throw fr("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),Error("bad memory");Va()}var ni=[],xo=[],vd=[],Ju=0,md=null;function N2(){if(--Ju==0&&md){var O=md;md=null,O()}}function lu(O){throw fr(O="Aborted("+O+")"),qi=!0,Xs=1,O=new WebAssembly.RuntimeError(O+". Build with -sASSERTIONS for more info."),$(O),O}var Kd,qd=O=>O.startsWith("data:application/octet-stream;base64,"),Sg=O=>O.startsWith("file://");function Gg(O){if(O==Kd&&Zt)return new Uint8Array(Zt);if(mt)return mt(O);throw"both async and sync fetching of the wasm failed"}function Xd(O,ne,we){return function(De){if(!Zt&&(me||_e)){if(typeof fetch=="function"&&!Sg(De))return fetch(De,{credentials:"same-origin"}).then(Ze=>{if(!Ze.ok)throw`failed to load wasm binary file at '${De}'`;return Ze.arrayBuffer()}).catch(()=>Gg(De));if(dt)return new Promise((Ze,Bt)=>{dt(De,er=>Ze(new Uint8Array(er)),Bt)})}return Promise.resolve().then(()=>Gg(De))}(O).then(De=>WebAssembly.instantiate(De,ne)).then(we,De=>{fr(`failed to asynchronously prepare wasm: ${De}`),lu(De)})}function Zd(){return{a:{O:Rn,Aa:ad,b:ii,aa:j2,B:W2,qa:U2,Y:Y2,_:K2,ra:q2,oa:X2,ha:Z2,na:J2,L:$2,Z:uu,W:jg,pa:r0,X:n2,va:Vg,F:tg,Q:El,P:vf,E:xf,u:Mf,q:Ef,G:Bf,A:ag,R:o2,ua:Ff,ka:ng,U:l2,ba:zf,H:Of,ja:ig,ta:u2,t:Kg,Ba:d2,x:Nf,o:Lf,m:Xg,c:rg,n:jf,k:Uf,w:Hf,p:Yf,f:Kf,s:qf,l:Xf,e:Zf,j:bd,i:$g,g:ef,d:Jf,ea:$f,fa:cg,ga:rf,ca:sf,da:af,T:ep,h:of,D:tp,I:rp,M:sp,y:ap,sa:m2,V:Dd,v:Af,z:lf,N:np,S:ip,za:cf,ya:uf,la:df,ma:fg,$:r2,C:pg,K:hg,ia:gf,J:pf,a:Sr,xa:t2,wa:ks,r:hf}}}var Jd={916868:(O,ne,we,De,Ze)=>{if(j===void 0||!j.Fb)return 1;if((O=Cn(Number(O>>>0))).startsWith("./")&&(O=O.substring(2)),!(O=j.Fb.get(O)))return 2;if(ne=Number(ne>>>0),we=Number(we>>>0),De=Number(De>>>0),ne+we>O.byteLength)return 3;try{let Bt=O.subarray(ne,ne+we);switch(Ze){case 0:b().set(Bt,De>>>0);break;case 1:j.dc(De,Bt);break;default:return 4}return 0}catch{return 4}},917583:(O,ne,we)=>{j.ec(O,b().subarray(ne>>>0,ne+we>>>0))},917646:()=>j.bc(),917687:O=>{j.Pb(O)},917723:()=>{j.Wb()},917754:()=>{j.Xb()},917783:()=>{j.ac()},917808:O=>j.Vb(O),917841:O=>j.Zb(O),917873:(O,ne,we)=>{j.Ob(Number(O),Number(ne),Number(we),!0)},917936:(O,ne,we)=>{j.Ob(Number(O),Number(ne),Number(we))},917993:()=>typeof wasmOffsetConverter<"u",918050:O=>{j.kb("Abs",O,void 0)},918101:O=>{j.kb("Neg",O,void 0)},918152:O=>{j.kb("Floor",O,void 0)},918205:O=>{j.kb("Ceil",O,void 0)},918257:O=>{j.kb("Reciprocal",O,void 0)},918315:O=>{j.kb("Sqrt",O,void 0)},918367:O=>{j.kb("Exp",O,void 0)},918418:O=>{j.kb("Erf",O,void 0)},918469:O=>{j.kb("Sigmoid",O,void 0)},918524:(O,ne,we)=>{j.kb("HardSigmoid",O,{alpha:ne,beta:we})},918603:O=>{j.kb("Log",O,void 0)},918654:O=>{j.kb("Sin",O,void 0)},918705:O=>{j.kb("Cos",O,void 0)},918756:O=>{j.kb("Tan",O,void 0)},918807:O=>{j.kb("Asin",O,void 0)},918859:O=>{j.kb("Acos",O,void 0)},918911:O=>{j.kb("Atan",O,void 0)},918963:O=>{j.kb("Sinh",O,void 0)},919015:O=>{j.kb("Cosh",O,void 0)},919067:O=>{j.kb("Asinh",O,void 0)},919120:O=>{j.kb("Acosh",O,void 0)},919173:O=>{j.kb("Atanh",O,void 0)},919226:O=>{j.kb("Tanh",O,void 0)},919278:O=>{j.kb("Not",O,void 0)},919329:(O,ne,we)=>{j.kb("Clip",O,{min:ne,max:we})},919398:O=>{j.kb("Clip",O,void 0)},919450:(O,ne)=>{j.kb("Elu",O,{alpha:ne})},919508:O=>{j.kb("Gelu",O,void 0)},919560:O=>{j.kb("Relu",O,void 0)},919612:(O,ne)=>{j.kb("LeakyRelu",O,{alpha:ne})},919676:(O,ne)=>{j.kb("ThresholdedRelu",O,{alpha:ne})},919746:(O,ne)=>{j.kb("Cast",O,{to:ne})},919804:O=>{j.kb("Add",O,void 0)},919855:O=>{j.kb("Sub",O,void 0)},919906:O=>{j.kb("Mul",O,void 0)},919957:O=>{j.kb("Div",O,void 0)},920008:O=>{j.kb("Pow",O,void 0)},920059:O=>{j.kb("Equal",O,void 0)},920112:O=>{j.kb("Greater",O,void 0)},920167:O=>{j.kb("GreaterOrEqual",O,void 0)},920229:O=>{j.kb("Less",O,void 0)},920281:O=>{j.kb("LessOrEqual",O,void 0)},920340:(O,ne,we,De,Ze)=>{j.kb("ReduceMean",O,{keepDims:!!ne,noopWithEmptyAxes:!!we,axes:De?Array.from(v().subarray(Number(De)>>>0,Number(Ze)>>>0)):[]})},920515:(O,ne,we,De,Ze)=>{j.kb("ReduceMax",O,{keepDims:!!ne,noopWithEmptyAxes:!!we,axes:De?Array.from(v().subarray(Number(De)>>>0,Number(Ze)>>>0)):[]})},920689:(O,ne,we,De,Ze)=>{j.kb("ReduceMin",O,{keepDims:!!ne,noopWithEmptyAxes:!!we,axes:De?Array.from(v().subarray(Number(De)>>>0,Number(Ze)>>>0)):[]})},920863:(O,ne,we,De,Ze)=>{j.kb("ReduceProd",O,{keepDims:!!ne,noopWithEmptyAxes:!!we,axes:De?Array.from(v().subarray(Number(De)>>>0,Number(Ze)>>>0)):[]})},921038:(O,ne,we,De,Ze)=>{j.kb("ReduceSum",O,{keepDims:!!ne,noopWithEmptyAxes:!!we,axes:De?Array.from(v().subarray(Number(De)>>>0,Number(Ze)>>>0)):[]})},921212:(O,ne,we,De,Ze)=>{j.kb("ReduceL1",O,{keepDims:!!ne,noopWithEmptyAxes:!!we,axes:De?Array.from(v().subarray(Number(De)>>>0,Number(Ze)>>>0)):[]})},921385:(O,ne,we,De,Ze)=>{j.kb("ReduceL2",O,{keepDims:!!ne,noopWithEmptyAxes:!!we,axes:De?Array.from(v().subarray(Number(De)>>>0,Number(Ze)>>>0)):[]})},921558:(O,ne,we,De,Ze)=>{j.kb("ReduceLogSum",O,{keepDims:!!ne,noopWithEmptyAxes:!!we,axes:De?Array.from(v().subarray(Number(De)>>>0,Number(Ze)>>>0)):[]})},921735:(O,ne,we,De,Ze)=>{j.kb("ReduceSumSquare",O,{keepDims:!!ne,noopWithEmptyAxes:!!we,axes:De?Array.from(v().subarray(Number(De)>>>0,Number(Ze)>>>0)):[]})},921915:(O,ne,we,De,Ze)=>{j.kb("ReduceLogSumExp",O,{keepDims:!!ne,noopWithEmptyAxes:!!we,axes:De?Array.from(v().subarray(Number(De)>>>0,Number(Ze)>>>0)):[]})},922095:O=>{j.kb("Where",O,void 0)},922148:(O,ne,we)=>{j.kb("Transpose",O,{perm:ne?Array.from(v().subarray(Number(ne)>>>0,Number(we)>>>0)):[]})},922272:(O,ne,we,De)=>{j.kb("DepthToSpace",O,{blocksize:ne,mode:Cn(we),format:De?"NHWC":"NCHW"})},922405:(O,ne,we,De)=>{j.kb("DepthToSpace",O,{blocksize:ne,mode:Cn(we),format:De?"NHWC":"NCHW"})},922538:(O,ne,we,De,Ze,Bt,er,dr,Ot,Dr,ts,ra,Oa,pr,xa)=>{j.kb("ConvTranspose",O,{format:Ot?"NHWC":"NCHW",autoPad:ne,dilations:[we],group:De,kernelShape:[Ze],pads:[Bt,er],strides:[dr],wIsConst:()=>!!p()[Dr>>>0],outputPadding:ts?Array.from(v().subarray(Number(ts)>>>0,Number(ra)>>>0)):[],outputShape:Oa?Array.from(v().subarray(Number(Oa)>>>0,Number(pr)>>>0)):[],activation:Cn(xa)})},922971:(O,ne,we,De,Ze,Bt,er,dr,Ot,Dr,ts,ra,Oa,pr)=>{j.kb("ConvTranspose",O,{format:dr?"NHWC":"NCHW",autoPad:ne,dilations:Array.from(v().subarray(Number(we)>>>0,2+(Number(we)>>>0)>>>0)),group:De,kernelShape:Array.from(v().subarray(Number(Ze)>>>0,2+(Number(Ze)>>>0)>>>0)),pads:Array.from(v().subarray(Number(Bt)>>>0,4+(Number(Bt)>>>0)>>>0)),strides:Array.from(v().subarray(Number(er)>>>0,2+(Number(er)>>>0)>>>0)),wIsConst:()=>!!p()[Ot>>>0],outputPadding:Dr?Array.from(v().subarray(Number(Dr)>>>0,Number(ts)>>>0)):[],outputShape:ra?Array.from(v().subarray(Number(ra)>>>0,Number(Oa)>>>0)):[],activation:Cn(pr)})},923632:(O,ne,we,De,Ze,Bt,er,dr,Ot,Dr,ts,ra,Oa,pr,xa)=>{j.kb("ConvTranspose",O,{format:Ot?"NHWC":"NCHW",autoPad:ne,dilations:[we],group:De,kernelShape:[Ze],pads:[Bt,er],strides:[dr],wIsConst:()=>!!p()[Dr>>>0],outputPadding:ts?Array.from(v().subarray(Number(ts)>>>0,Number(ra)>>>0)):[],outputShape:Oa?Array.from(v().subarray(Number(Oa)>>>0,Number(pr)>>>0)):[],activation:Cn(xa)})},924065:(O,ne,we,De,Ze,Bt,er,dr,Ot,Dr,ts,ra,Oa,pr)=>{j.kb("ConvTranspose",O,{format:dr?"NHWC":"NCHW",autoPad:ne,dilations:Array.from(v().subarray(Number(we)>>>0,2+(Number(we)>>>0)>>>0)),group:De,kernelShape:Array.from(v().subarray(Number(Ze)>>>0,2+(Number(Ze)>>>0)>>>0)),pads:Array.from(v().subarray(Number(Bt)>>>0,4+(Number(Bt)>>>0)>>>0)),strides:Array.from(v().subarray(Number(er)>>>0,2+(Number(er)>>>0)>>>0)),wIsConst:()=>!!p()[Ot>>>0],outputPadding:Dr?Array.from(v().subarray(Number(Dr)>>>0,Number(ts)>>>0)):[],outputShape:ra?Array.from(v().subarray(Number(ra)>>>0,Number(Oa)>>>0)):[],activation:Cn(pr)})},924726:(O,ne)=>{j.kb("GlobalAveragePool",O,{format:ne?"NHWC":"NCHW"})},924817:(O,ne,we,De,Ze,Bt,er,dr,Ot,Dr,ts,ra,Oa,pr)=>{j.kb("AveragePool",O,{format:pr?"NHWC":"NCHW",auto_pad:ne,ceil_mode:we,count_include_pad:De,storage_order:Ze,dilations:Bt?Array.from(v().subarray(Number(Bt)>>>0,Number(er)>>>0)):[],kernel_shape:dr?Array.from(v().subarray(Number(dr)>>>0,Number(Ot)>>>0)):[],pads:Dr?Array.from(v().subarray(Number(Dr)>>>0,Number(ts)>>>0)):[],strides:ra?Array.from(v().subarray(Number(ra)>>>0,Number(Oa)>>>0)):[]})},925296:(O,ne)=>{j.kb("GlobalAveragePool",O,{format:ne?"NHWC":"NCHW"})},925387:(O,ne,we,De,Ze,Bt,er,dr,Ot,Dr,ts,ra,Oa,pr)=>{j.kb("AveragePool",O,{format:pr?"NHWC":"NCHW",auto_pad:ne,ceil_mode:we,count_include_pad:De,storage_order:Ze,dilations:Bt?Array.from(v().subarray(Number(Bt)>>>0,Number(er)>>>0)):[],kernel_shape:dr?Array.from(v().subarray(Number(dr)>>>0,Number(Ot)>>>0)):[],pads:Dr?Array.from(v().subarray(Number(Dr)>>>0,Number(ts)>>>0)):[],strides:ra?Array.from(v().subarray(Number(ra)>>>0,Number(Oa)>>>0)):[]})},925866:(O,ne)=>{j.kb("GlobalMaxPool",O,{format:ne?"NHWC":"NCHW"})},925953:(O,ne,we,De,Ze,Bt,er,dr,Ot,Dr,ts,ra,Oa,pr)=>{j.kb("MaxPool",O,{format:pr?"NHWC":"NCHW",auto_pad:ne,ceil_mode:we,count_include_pad:De,storage_order:Ze,dilations:Bt?Array.from(v().subarray(Number(Bt)>>>0,Number(er)>>>0)):[],kernel_shape:dr?Array.from(v().subarray(Number(dr)>>>0,Number(Ot)>>>0)):[],pads:Dr?Array.from(v().subarray(Number(Dr)>>>0,Number(ts)>>>0)):[],strides:ra?Array.from(v().subarray(Number(ra)>>>0,Number(Oa)>>>0)):[]})},926428:(O,ne)=>{j.kb("GlobalMaxPool",O,{format:ne?"NHWC":"NCHW"})},926515:(O,ne,we,De,Ze,Bt,er,dr,Ot,Dr,ts,ra,Oa,pr)=>{j.kb("MaxPool",O,{format:pr?"NHWC":"NCHW",auto_pad:ne,ceil_mode:we,count_include_pad:De,storage_order:Ze,dilations:Bt?Array.from(v().subarray(Number(Bt)>>>0,Number(er)>>>0)):[],kernel_shape:dr?Array.from(v().subarray(Number(dr)>>>0,Number(Ot)>>>0)):[],pads:Dr?Array.from(v().subarray(Number(Dr)>>>0,Number(ts)>>>0)):[],strides:ra?Array.from(v().subarray(Number(ra)>>>0,Number(Oa)>>>0)):[]})},926990:(O,ne,we,De,Ze)=>{j.kb("Gemm",O,{alpha:ne,beta:we,transA:De,transB:Ze})},927094:O=>{j.kb("MatMul",O,void 0)},927148:(O,ne,we,De)=>{j.kb("ArgMax",O,{keepDims:!!ne,selectLastIndex:!!we,axis:De})},927256:(O,ne,we,De)=>{j.kb("ArgMin",O,{keepDims:!!ne,selectLastIndex:!!we,axis:De})},927364:(O,ne)=>{j.kb("Softmax",O,{axis:ne})},927427:(O,ne)=>{j.kb("Concat",O,{axis:ne})},927487:(O,ne,we,De,Ze)=>{j.kb("Split",O,{axis:ne,numOutputs:we,splitSizes:De?Array.from(v().subarray(Number(De)>>>0,Number(Ze)>>>0)):[]})},927643:O=>{j.kb("Expand",O,void 0)},927697:(O,ne)=>{j.kb("Gather",O,{axis:Number(ne)})},927768:(O,ne)=>{j.kb("GatherElements",O,{axis:Number(ne)})},927847:(O,ne)=>{j.kb("GatherND",O,{batch_dims:Number(ne)})},927926:(O,ne,we,De,Ze,Bt,er,dr,Ot,Dr,ts)=>{j.kb("Resize",O,{antialias:ne,axes:we?Array.from(v().subarray(Number(we)>>>0,Number(De)>>>0)):[],coordinateTransformMode:Cn(Ze),cubicCoeffA:Bt,excludeOutside:er,extrapolationValue:dr,keepAspectRatioPolicy:Cn(Ot),mode:Cn(Dr),nearestMode:Cn(ts)})},928288:(O,ne,we,De,Ze,Bt,er)=>{j.kb("Slice",O,{starts:ne?Array.from(v().subarray(Number(ne)>>>0,Number(we)>>>0)):[],ends:De?Array.from(v().subarray(Number(De)>>>0,Number(Ze)>>>0)):[],axes:Bt?Array.from(v().subarray(Number(Bt)>>>0,Number(er)>>>0)):[]})},928552:O=>{j.kb("Tile",O,void 0)},928604:(O,ne,we)=>{j.kb("InstanceNormalization",O,{epsilon:ne,format:we?"NHWC":"NCHW"})},928718:(O,ne,we)=>{j.kb("InstanceNormalization",O,{epsilon:ne,format:we?"NHWC":"NCHW"})},928832:O=>{j.kb("Range",O,void 0)},928885:(O,ne)=>{j.kb("Einsum",O,{equation:Cn(ne)})},928966:(O,ne,we,De,Ze)=>{j.kb("Pad",O,{mode:ne,value:we,pads:De?Array.from(v().subarray(Number(De)>>>0,Number(Ze)>>>0)):[]})},929109:(O,ne,we,De,Ze,Bt)=>{j.kb("BatchNormalization",O,{epsilon:ne,momentum:we,spatial:!!Ze,trainingMode:!!De,format:Bt?"NHWC":"NCHW"})},929278:(O,ne,we,De,Ze,Bt)=>{j.kb("BatchNormalization",O,{epsilon:ne,momentum:we,spatial:!!Ze,trainingMode:!!De,format:Bt?"NHWC":"NCHW"})},929447:(O,ne,we)=>{j.kb("CumSum",O,{exclusive:Number(ne),reverse:Number(we)})},929544:(O,ne,we)=>{j.kb("DequantizeLinear",O,{axis:ne,blockSize:we})},929634:(O,ne,we,De,Ze)=>{j.kb("GridSample",O,{align_corners:ne,mode:Cn(we),padding_mode:Cn(De),format:Ze?"NHWC":"NCHW"})},929804:(O,ne,we,De,Ze)=>{j.kb("GridSample",O,{align_corners:ne,mode:Cn(we),padding_mode:Cn(De),format:Ze?"NHWC":"NCHW"})},929974:(O,ne,we,De,Ze,Bt,er,dr,Ot)=>{j.kb("Attention",O,{numHeads:ne,isUnidirectional:we,maskFilterValue:De,scale:Ze,doRotary:Bt,qkvHiddenSizes:er?Array.from(v().subarray(Number(dr)>>>0,Number(dr)+er>>>0)):[],pastPresentShareBuffer:!!Ot})},930246:O=>{j.kb("BiasAdd",O,void 0)},930301:O=>{j.kb("BiasSplitGelu",O,void 0)},930362:O=>{j.kb("FastGelu",O,void 0)},930418:(O,ne,we,De,Ze,Bt,er,dr,Ot,Dr,ts,ra,Oa,pr,xa,fi)=>{j.kb("Conv",O,{format:ra?"NHWC":"NCHW",auto_pad:ne,dilations:we?Array.from(v().subarray(Number(we)>>>0,Number(De)>>>0)):[],group:Ze,kernel_shape:Bt?Array.from(v().subarray(Number(Bt)>>>0,Number(er)>>>0)):[],pads:dr?Array.from(v().subarray(Number(dr)>>>0,Number(Ot)>>>0)):[],strides:Dr?Array.from(v().subarray(Number(Dr)>>>0,Number(ts)>>>0)):[],w_is_const:()=>!!p()[Number(Oa)>>>0],activation:Cn(pr),activation_params:xa?Array.from(L().subarray(Number(xa)>>>0,Number(fi)>>>0)):[]})},931002:O=>{j.kb("Gelu",O,void 0)},931054:(O,ne,we,De,Ze,Bt,er,dr,Ot)=>{j.kb("GroupQueryAttention",O,{numHeads:ne,kvNumHeads:we,scale:De,softcap:Ze,doRotary:Bt,rotaryInterleaved:er,smoothSoftmax:dr,localWindowSize:Ot})},931271:(O,ne,we,De)=>{j.kb("LayerNormalization",O,{axis:ne,epsilon:we,simplified:!!De})},931382:(O,ne,we,De)=>{j.kb("LayerNormalization",O,{axis:ne,epsilon:we,simplified:!!De})},931493:(O,ne,we,De,Ze,Bt)=>{j.kb("MatMulNBits",O,{k:ne,n:we,accuracyLevel:De,bits:Ze,blockSize:Bt})},931620:(O,ne,we,De,Ze,Bt)=>{j.kb("MultiHeadAttention",O,{numHeads:ne,isUnidirectional:we,maskFilterValue:De,scale:Ze,doRotary:Bt})},931779:(O,ne)=>{j.kb("QuickGelu",O,{alpha:ne})},931843:(O,ne,we,De,Ze)=>{j.kb("RotaryEmbedding",O,{interleaved:!!ne,numHeads:we,rotaryEmbeddingDim:De,scale:Ze})},931982:(O,ne,we)=>{j.kb("SkipLayerNormalization",O,{epsilon:ne,simplified:!!we})},932084:(O,ne,we)=>{j.kb("SkipLayerNormalization",O,{epsilon:ne,simplified:!!we})},932186:(O,ne,we,De)=>{j.kb("GatherBlockQuantized",O,{gatherAxis:ne,quantizeAxis:we,blockSize:De})},932307:O=>{j.$b(O)},932341:(O,ne)=>j.cc(Number(O),Number(ne),j.Gb.hc,j.Gb.errors)};function ad(O,ne,we){return Td(async()=>{await j.Yb(Number(O),Number(ne),Number(we))})}function Rn(){return typeof wasmOffsetConverter<"u"}function xd(O){this.name="ExitStatus",this.message=`Program terminated with exit(${O})`,this.status=O}var $d=O=>{O.terminate(),O.onmessage=()=>{}},e2=O=>{cu.length==0&&(Qg(),Og(cu[0]));var ne=cu.pop();if(!ne)return 6;$u.push(ne),YA[O.Bb]=ne,ne.Bb=O.Bb;var we={cmd:"run",start_routine:O.ic,arg:O.Rb,pthread_ptr:O.Bb};return ne.postMessage(we,O.nc),0},wA=0,en=(O,ne,...we)=>{for(var De=2*we.length,Ze=y2(),Bt=k2(8*De),er=Bt>>>3,dr=0;dr<we.length;dr++){var Ot=we[dr];typeof Ot=="bigint"?(va[er+2*dr]=1n,va[er+2*dr+1]=Ot):(va[er+2*dr]=0n,W()[er+2*dr+1>>>0]=Ot)}return O=zd(O,0,De,Bt,ne),Qd(Ze),O};function t2(O){if(Ee)return en(0,1,O);if(Xs=O,!(0<wA)){for(var ne of $u)$d(ne);for(ne of cu)$d(ne);cu=[],$u=[],YA=[],qi=!0}jt(0,new xd(O))}function t0(O){if(Ee)return en(1,0,O);r2(O)}var r2=O=>{if(Xs=O,Ee)throw t0(O),"unwind";t2(O)},cu=[],$u=[],L2=[],YA={},Fg=O=>{var ne=O.Bb;delete YA[ne],cu.push(O),$u.splice($u.indexOf(O),1),O.Bb=0,Od(ne)};function zg(){L2.forEach(O=>O())}var Og=O=>new Promise(ne=>{O.onmessage=Ze=>{var Bt=(Ze=Ze.data).cmd;if(Ze.targetThread&&Ze.targetThread!=ld()){var er=YA[Ze.targetThread];er?er.postMessage(Ze,Ze.transferList):fr(`Internal error! Worker sent a message "${Bt}" to target pthread ${Ze.targetThread}, but that thread no longer exists!`)}else Bt==="checkMailbox"?A2():Bt==="spawnThread"?e2(Ze):Bt==="cleanupThread"?Fg(YA[Ze.thread]):Bt==="killThread"?(Ze=Ze.thread,Bt=YA[Ze],delete YA[Ze],$d(Bt),Od(Ze),$u.splice($u.indexOf(Bt),1),Bt.Bb=0):Bt==="cancelThread"?YA[Ze.thread].postMessage({cmd:"cancel"}):Bt==="loaded"?(O.loaded=!0,ne(O)):Bt==="alert"?alert(`Thread ${Ze.threadId}: ${Ze.text}`):Ze.target==="setimmediate"?O.postMessage(Ze):Bt==="callHandler"?j[Ze.handler](...Ze.args):Bt&&fr(`worker sent an unknown command ${Bt}`)},O.onerror=Ze=>{throw fr(`worker sent an error! ${Ze.filename}:${Ze.lineno}: ${Ze.message}`),Ze};var we,De=[];for(we of[])j.hasOwnProperty(we)&&De.push(we);O.postMessage({cmd:"load",handlers:De,wasmMemory:Sr,wasmModule:As})});function Qg(){var O=new Worker(import.meta.url.startsWith("file:")?new URL(A("./node_modules/onnxruntime-web/dist/ort.bundle.min.mjs?46eb"),A.b):new URL(import.meta.url),{type:"module",workerData:"em-pthread",name:"em-pthread"});cu.push(O)}var Md=O=>{for(;0<O.length;)O.shift()(j)},Ng=()=>{var O=ld(),ne=x()[O+52>>>2>>>0];O=x()[O+56>>>2>>>0],Ig(ne,ne-O),Qd(ne)},Lg=(O,ne)=>{wA=0,O=kg(O,ne),0<wA?Xs=O:Id(O)};class Rg{constructor(ne){this.Kb=ne-24}}function ii(O,ne,we){var De=new Rg(O>>>=0);throw ne>>>=0,we>>>=0,x()[De.Kb+16>>>2>>>0]=0,x()[De.Kb+4>>>2>>>0]=ne,x()[De.Kb+8>>>2>>>0]=we,O}function R2(O,ne,we,De){return Ee?en(2,1,O,ne,we,De):j2(O,ne,we,De)}function j2(O,ne,we,De){if(O>>>=0,ne>>>=0,we>>>=0,De>>>=0,Fe===void 0)return fr("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var Ze=[];return Ee&&Ze.length===0?R2(O,ne,we,De):(O={ic:we,Bb:O,Rb:De,nc:Ze},Ee?(O.Nb="spawnThread",postMessage(O,Ze),0):e2(O))}var s2=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,V2=(O,ne,we)=>{var De=(ne>>>=0)+we;for(we=ne;O[we]&&!(we>=De);)++we;if(16<we-ne&&O.buffer&&s2)return s2.decode(O.buffer instanceof Fe?O.slice(ne,we):O.subarray(ne,we));for(De="";ne<we;){var Ze=O[ne++];if(128&Ze){var Bt=63&O[ne++];if((224&Ze)==192)De+=String.fromCharCode((31&Ze)<<6|Bt);else{var er=63&O[ne++];65536>(Ze=(240&Ze)==224?(15&Ze)<<12|Bt<<6|er:(7&Ze)<<18|Bt<<12|er<<6|63&O[ne++])?De+=String.fromCharCode(Ze):(Ze-=65536,De+=String.fromCharCode(55296|Ze>>10,56320|1023&Ze))}}else De+=String.fromCharCode(Ze)}return De},Cn=(O,ne)=>(O>>>=0)?V2(b(),O,ne):"";function W2(O,ne,we){return Ee?en(3,1,O,ne,we):0}function U2(O,ne){if(Ee)return en(4,1,O,ne)}var a2=O=>{for(var ne=0,we=0;we<O.length;++we){var De=O.charCodeAt(we);127>=De?ne++:2047>=De?ne+=2:55296<=De&&57343>=De?(ne+=4,++we):ne+=3}return ne},H2=(O,ne,we,De)=>{if(!(0<De))return 0;var Ze=we>>>=0;De=we+De-1;for(var Bt=0;Bt<O.length;++Bt){var er=O.charCodeAt(Bt);if(55296<=er&&57343>=er&&(er=65536+((1023&er)<<10)|1023&O.charCodeAt(++Bt)),127>=er){if(we>=De)break;ne[we++>>>0]=er}else{if(2047>=er){if(we+1>=De)break;ne[we++>>>0]=192|er>>6}else{if(65535>=er){if(we+2>=De)break;ne[we++>>>0]=224|er>>12}else{if(we+3>=De)break;ne[we++>>>0]=240|er>>18,ne[we++>>>0]=128|er>>12&63}ne[we++>>>0]=128|er>>6&63}ne[we++>>>0]=128|63&er}}return ne[we>>>0]=0,we-Ze},nd=(O,ne,we)=>H2(O,b(),ne,we);function Y2(O,ne){if(Ee)return en(5,1,O,ne)}function K2(O,ne,we){if(Ee)return en(6,1,O,ne,we)}function q2(O,ne,we){return Ee?en(7,1,O,ne,we):0}function X2(O,ne){if(Ee)return en(8,1,O,ne)}function Z2(O,ne,we){if(Ee)return en(9,1,O,ne,we)}function J2(O,ne,we,De){if(Ee)return en(10,1,O,ne,we,De)}function $2(O,ne,we,De){if(Ee)return en(11,1,O,ne,we,De)}function uu(O,ne,we,De){if(Ee)return en(12,1,O,ne,we,De)}function jg(O){if(Ee)return en(13,1,O)}function r0(O,ne){if(Ee)return en(14,1,O,ne)}function n2(O,ne,we){if(Ee)return en(15,1,O,ne,we)}var i2,Mo,Vg=()=>{lu("")},K0=O=>{for(var ne="";b()[O>>>0];)ne+=i2[b()[O++>>>0]];return ne},q0={},eg={};function s0(O,ne,we={}){if(!("argPackAdvance"in ne))throw new TypeError("registerType registeredInstance requires argPackAdvance");return function(De,Ze,Bt={}){var er=Ze.name;if(!De)throw new Mo(`type "${er}" must have a positive integer typeid pointer`);if(eg.hasOwnProperty(De)){if(Bt.Tb)return;throw new Mo(`Cannot register type '${er}' twice`)}eg[De]=Ze,q0.hasOwnProperty(De)&&(Ze=q0[De],delete q0[De],Ze.forEach(dr=>dr()))}(O,ne,we)}var X0=(O,ne,we)=>{switch(ne){case 1:return we?De=>p()[De>>>0]:De=>b()[De>>>0];case 2:return we?De=>C()[De>>>1>>>0]:De=>E()[De>>>1>>>0];case 4:return we?De=>v()[De>>>2>>>0]:De=>x()[De>>>2>>>0];case 8:return we?De=>va[De>>>3]:De=>_i[De>>>3];default:throw new TypeError(`invalid integer width (${ne}): ${O}`)}};function tg(O,ne,we){we>>>=0,s0(O>>>=0,{name:ne=K0(ne>>>0),fromWireType:De=>De,toWireType:function(De,Ze){if(typeof Ze!="bigint"&&typeof Ze!="number")throw Ze=Ze===null?"null":(De=typeof Ze)=="object"||De==="array"||De==="function"?Ze.toString():""+Ze,new TypeError(`Cannot convert "${Ze}" to ${this.name}`);return typeof Ze=="number"&&(Ze=BigInt(Ze)),Ze},argPackAdvance:vi,readValueFromPointer:X0(ne,we,ne.indexOf("u")==-1),Eb:null})}var vi=8;function El(O,ne,we,De){s0(O>>>=0,{name:ne=K0(ne>>>0),fromWireType:function(Ze){return!!Ze},toWireType:function(Ze,Bt){return Bt?we:De},argPackAdvance:vi,readValueFromPointer:function(Ze){return this.fromWireType(b()[Ze>>>0])},Eb:null})}var Ed=[],du=[];function rg(O){9<(O>>>=0)&&--du[O+1]==0&&(du[O]=void 0,Ed.push(O))}var KA=O=>{if(!O)throw new Mo("Cannot use deleted val. handle = "+O);return du[O]},Bl=O=>{switch(O){case void 0:return 2;case null:return 4;case!0:return 6;case!1:return 8;default:let ne=Ed.pop()||du.length;return du[ne]=O,du[ne+1]=1,ne}};function sg(O){return this.fromWireType(x()[O>>>2>>>0])}var _f={name:"emscripten::val",fromWireType:O=>{var ne=KA(O);return rg(O),ne},toWireType:(O,ne)=>Bl(ne),argPackAdvance:vi,readValueFromPointer:sg,Eb:null};function vf(O){return s0(O>>>0,_f)}var Wg=(O,ne)=>{switch(ne){case 4:return function(we){return this.fromWireType(L()[we>>>2>>>0])};case 8:return function(we){return this.fromWireType(W()[we>>>3>>>0])};default:throw new TypeError(`invalid float width (${ne}): ${O}`)}};function xf(O,ne,we){we>>>=0,s0(O>>>=0,{name:ne=K0(ne>>>0),fromWireType:De=>De,toWireType:(De,Ze)=>Ze,argPackAdvance:vi,readValueFromPointer:Wg(ne,we),Eb:null})}function Mf(O,ne,we,De,Ze){if(O>>>=0,we>>>=0,ne=K0(ne>>>0),Ze===-1&&(Ze=4294967295),Ze=dr=>dr,De===0){var Bt=32-8*we;Ze=dr=>dr<<Bt>>>Bt}var er=ne.includes("unsigned")?function(dr,Ot){return Ot>>>0}:function(dr,Ot){return Ot};s0(O,{name:ne,fromWireType:Ze,toWireType:er,argPackAdvance:vi,readValueFromPointer:X0(ne,we,De!==0),Eb:null})}function Ef(O,ne,we){function De(Bt){var er=x()[Bt>>>2>>>0];return Bt=x()[Bt+4>>>2>>>0],new Ze(p().buffer,Bt,er)}var Ze=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][ne];s0(O>>>=0,{name:we=K0(we>>>0),fromWireType:De,argPackAdvance:vi,readValueFromPointer:De},{Tb:!0})}function Bf(O,ne){O>>>=0;var we=(ne=K0(ne>>>0))==="std::string";s0(O,{name:ne,fromWireType:function(De){var Ze=x()[De>>>2>>>0],Bt=De+4;if(we)for(var er=Bt,dr=0;dr<=Ze;++dr){var Ot=Bt+dr;if(dr==Ze||b()[Ot>>>0]==0){if(er=Cn(er,Ot-er),Dr===void 0)var Dr=er;else Dr+="\0",Dr+=er;er=Ot+1}}else{for(Dr=Array(Ze),dr=0;dr<Ze;++dr)Dr[dr]=String.fromCharCode(b()[Bt+dr>>>0]);Dr=Dr.join("")}return Tl(De),Dr},toWireType:function(De,Ze){Ze instanceof ArrayBuffer&&(Ze=new Uint8Array(Ze));var Bt=typeof Ze=="string";if(!(Bt||Ze instanceof Uint8Array||Ze instanceof Uint8ClampedArray||Ze instanceof Int8Array))throw new Mo("Cannot pass non-string to std::string");var er=we&&Bt?a2(Ze):Ze.length,dr=cd(4+er+1),Ot=dr+4;if(x()[dr>>>2>>>0]=er,we&&Bt)nd(Ze,Ot,er+1);else if(Bt)for(Bt=0;Bt<er;++Bt){var Dr=Ze.charCodeAt(Bt);if(255<Dr)throw Tl(Ot),new Mo("String has UTF-16 code units that do not fit in 8 bits");b()[Ot+Bt>>>0]=Dr}else for(Bt=0;Bt<er;++Bt)b()[Ot+Bt>>>0]=Ze[Bt];return De!==null&&De.push(Tl,dr),dr},argPackAdvance:vi,readValueFromPointer:sg,Eb(De){Tl(De)}})}var Ug=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,Tf=(O,ne)=>{for(var we=O>>1,De=we+ne/2;!(we>=De)&&E()[we>>>0];)++we;if(32<(we<<=1)-O&&Ug)return Ug.decode(b().slice(O,we));for(we="",De=0;!(De>=ne/2);++De){var Ze=C()[O+2*De>>>1>>>0];if(Ze==0)break;we+=String.fromCharCode(Ze)}return we},Pf=(O,ne,we)=>{if(we??(we=2147483647),2>we)return 0;var De=ne;we=(we-=2)<2*O.length?we/2:O.length;for(var Ze=0;Ze<we;++Ze){var Bt=O.charCodeAt(Ze);C()[ne>>>1>>>0]=Bt,ne+=2}return C()[ne>>>1>>>0]=0,ne-De},Df=O=>2*O.length,Sf=(O,ne)=>{for(var we=0,De="";!(we>=ne/4);){var Ze=v()[O+4*we>>>2>>>0];if(Ze==0)break;++we,65536<=Ze?(Ze-=65536,De+=String.fromCharCode(55296|Ze>>10,56320|1023&Ze)):De+=String.fromCharCode(Ze)}return De},Gf=(O,ne,we)=>{if(ne>>>=0,we??(we=2147483647),4>we)return 0;var De=ne;we=De+we-4;for(var Ze=0;Ze<O.length;++Ze){var Bt=O.charCodeAt(Ze);if(55296<=Bt&&57343>=Bt&&(Bt=65536+((1023&Bt)<<10)|1023&O.charCodeAt(++Ze)),v()[ne>>>2>>>0]=Bt,(ne+=4)+4>we)break}return v()[ne>>>2>>>0]=0,ne-De},Hg=O=>{for(var ne=0,we=0;we<O.length;++we){var De=O.charCodeAt(we);55296<=De&&57343>=De&&++we,ne+=4}return ne};function ag(O,ne,we){if(O>>>=0,ne>>>=0,we=K0(we>>>=0),ne===2)var De=Tf,Ze=Pf,Bt=Df,er=dr=>E()[dr>>>1>>>0];else ne===4&&(De=Sf,Ze=Gf,Bt=Hg,er=dr=>x()[dr>>>2>>>0]);s0(O,{name:we,fromWireType:dr=>{for(var Ot,Dr=x()[dr>>>2>>>0],ts=dr+4,ra=0;ra<=Dr;++ra){var Oa=dr+4+ra*ne;ra!=Dr&&er(Oa)!=0||(ts=De(ts,Oa-ts),Ot===void 0?Ot=ts:(Ot+="\0",Ot+=ts),ts=Oa+ne)}return Tl(dr),Ot},toWireType:(dr,Ot)=>{if(typeof Ot!="string")throw new Mo(`Cannot pass non-string to C++ string type ${we}`);var Dr=Bt(Ot),ts=cd(4+Dr+ne);return x()[ts>>>2>>>0]=Dr/ne,Ze(Ot,ts+4,Dr+ne),dr!==null&&dr.push(Tl,ts),ts},argPackAdvance:vi,readValueFromPointer:sg,Eb(dr){Tl(dr)}})}function o2(O,ne){s0(O>>>=0,{Ub:!0,name:ne=K0(ne>>>0),argPackAdvance:0,fromWireType:()=>{},toWireType:()=>{}})}var Ff=()=>1;function ng(O){I2(O>>>0,!_e,1,!me,131072,!1),zg()}var Yg=O=>{if(!qi)try{if(O(),!(0<wA))try{Ee?Id(Xs):r2(Xs)}catch(ne){ne instanceof xd||ne=="unwind"||jt(0,ne)}}catch(ne){ne instanceof xd||ne=="unwind"||jt(0,ne)}};function ig(O){O>>>=0,typeof Atomics.oc=="function"&&(Atomics.oc(v(),O>>>2,O).value.then(A2),O+=128,Atomics.store(v(),O>>>2,1))}var A2=()=>{var O=ld();O&&(ig(O),Yg(wg))};function l2(O,ne){(O>>>=0)==ne>>>0?setTimeout(A2):Ee?postMessage({targetThread:O,cmd:"checkMailbox"}):(O=YA[O])&&O.postMessage({cmd:"checkMailbox"})}var c2=[];function zf(O,ne,we,De,Ze){for(ne>>>=0,De/=2,c2.length=De,we=Ze>>>0>>>3,Ze=0;Ze<De;Ze++)c2[Ze]=va[we+2*Ze]?va[we+2*Ze+1]:W()[we+2*Ze+1>>>0];return(ne?Jd[ne]:wd[O])(...c2)}function Of(O){O>>>=0,Ee?postMessage({cmd:"cleanupThread",thread:O}):Fg(YA[O])}function u2(O){}var a0=(O,ne)=>{var we=eg[O];if(we===void 0)throw O=Gd(O),we=K0(O),Tl(O),new Mo(`${ne} has unknown type ${we}`);return we},n0=(O,ne,we)=>{var De=[];return O=O.toWireType(De,we),De.length&&(x()[ne>>>2>>>0]=Bl(De)),O};function Kg(O,ne,we){return ne>>>=0,we>>>=0,O=KA(O>>>0),ne=a0(ne,"emval::as"),n0(ne,we,O)}function d2(O,ne){return ne>>>=0,O=KA(O>>>0),(ne=a0(ne,"emval::as")).toWireType(null,O)}var Bd=O=>{try{O()}catch(ne){lu(ne)}},gu=0,Z0=null,g2=0,f2=[],og={},qg={},p2=0,Ag=null,Qf=[];function Td(O){return function(ne){if(!qi){if(gu===0){var we=!1,De=!1;ne((Ze=0)=>{if(!qi&&(g2=Ze,we=!0,De)){gu=2,Bd(()=>Oe(Z0)),typeof Browser<"u"&&Browser.Lb.Sb&&Browser.Lb.resume(),Ze=!1;try{var Bt=function(){var Ot=v()[Z0+8>>>2>>>0];return Ot=fs[qg[Ot]],--wA,Ot()}()}catch(Ot){Bt=Ot,Ze=!0}var er=!1;if(!Z0){var dr=Ag;dr&&(Ag=null,(Ze?dr.reject:dr.resolve)(Bt),er=!0)}if(Ze&&!er)throw Bt}}),De=!0,we||(gu=1,Z0=function(){var Ze=cd(65548),Bt=Ze+12;x()[Ze>>>2>>>0]=Bt,x()[Ze+4>>>2>>>0]=Bt+65536,Bt=f2[0];var er=og[Bt];return er===void 0&&(er=p2++,og[Bt]=er,qg[er]=Bt),Bt=er,v()[Ze+8>>>2>>>0]=Bt,Ze}(),typeof Browser<"u"&&Browser.Lb.Sb&&Browser.Lb.pause(),Bd(()=>Z(Z0)))}else gu===2?(gu=0,Bd(Xe),Tl(Z0),Z0=null,Qf.forEach(Yg)):lu(`invalid state: ${gu}`);return g2}}(ne=>{O().then(ne)})}function Nf(O){return O>>>=0,Td(()=>(O=KA(O)).then(Bl))}var Pd=[];function Lf(O,ne,we,De){return we>>>=0,De>>>=0,(O=Pd[O>>>0])(null,ne=KA(ne>>>0),we,De)}var Rf={},h2=O=>{var ne=Rf[O];return ne===void 0?K0(O):ne};function Xg(O,ne,we,De,Ze){return we>>>=0,De>>>=0,Ze>>>=0,(O=Pd[O>>>0])(ne=KA(ne>>>0),ne[we=h2(we)],De,Ze)}var Zg=()=>typeof globalThis=="object"?globalThis:Function("return this")();function jf(O){return(O>>>=0)==0?Bl(Zg()):(O=h2(O),Bl(Zg()[O]))}var Vf=O=>{var ne=Pd.length;return Pd.push(O),ne},Wf=(O,ne)=>{for(var we=Array(O),De=0;De<O;++De)we[De]=a0(x()[ne+4*De>>>2>>>0],"parameter "+De);return we},Jg=(O,ne)=>Object.defineProperty(ne,"name",{value:O});function Uf(O,ne,we){var De=(ne=Wf(O,ne>>>0)).shift();O--;var Ze=`return function (obj, func, destructorsRef, args) {
`,Bt=0,er=[];we===0&&er.push("obj");for(var dr=["retType"],Ot=[De],Dr=0;Dr<O;++Dr)er.push("arg"+Dr),dr.push("argType"+Dr),Ot.push(ne[Dr]),Ze+=`  var arg${Dr} = argType${Dr}.readValueFromPointer(args${Bt?"+"+Bt:""});
`,Bt+=ne[Dr].argPackAdvance;return Ze+=`  var rv = ${we===1?"new func":"func.call"}(${er.join(", ")});
`,De.Ub||(dr.push("emval_returnValue"),Ot.push(n0),Ze+=`  return emval_returnValue(retType, destructorsRef, rv);
`),dr.push(Ze+`};
`),O=function(ts){var ra=Function;if(!(ra instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof ra} which is not a function`);var Oa=Jg(ra.name||"unknownFunctionName",function(){});return Oa.prototype=ra.prototype,Oa=new Oa,(ts=ra.apply(Oa,ts))instanceof Object?ts:Oa}(dr)(...Ot),we=`methodCaller<(${ne.map(ts=>ts.name).join(", ")}) => ${De.name}>`,Vf(Jg(we,O))}function Hf(O){return O=h2(O>>>0),Bl(j[O])}function Yf(O,ne){return ne>>>=0,O=KA(O>>>0),ne=KA(ne),Bl(O[ne])}function Kf(O){9<(O>>>=0)&&(du[O+1]+=1)}function qf(){return Bl([])}function Xf(O){O=KA(O>>>0);for(var ne=Array(O.length),we=0;we<O.length;we++)ne[we]=O[we];return Bl(ne)}function Zf(O){return Bl(h2(O>>>0))}function bd(){return Bl({})}function $g(O){for(var ne=KA(O>>>=0);ne.length;){var we=ne.pop();ne.pop()(we)}rg(O)}function ef(O,ne,we){ne>>>=0,we>>>=0,O=KA(O>>>0),ne=KA(ne),we=KA(we),O[ne]=we}function Jf(O,ne){return ne>>>=0,O=(O=a0(O>>>0,"_emval_take_value")).readValueFromPointer(ne),Bl(O)}function $f(O,ne){O=-9007199254740992>O||9007199254740992<O?NaN:Number(O),ne>>>=0,O=new Date(1e3*O),v()[ne>>>2>>>0]=O.getUTCSeconds(),v()[ne+4>>>2>>>0]=O.getUTCMinutes(),v()[ne+8>>>2>>>0]=O.getUTCHours(),v()[ne+12>>>2>>>0]=O.getUTCDate(),v()[ne+16>>>2>>>0]=O.getUTCMonth(),v()[ne+20>>>2>>>0]=O.getUTCFullYear()-1900,v()[ne+24>>>2>>>0]=O.getUTCDay(),O=(O.getTime()-Date.UTC(O.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,v()[ne+28>>>2>>>0]=O}var id=O=>O%4==0&&(O%100!=0||O%400==0),lg=[0,31,60,91,121,152,182,213,244,274,305,335],tf=[0,31,59,90,120,151,181,212,243,273,304,334];function cg(O,ne){O=-9007199254740992>O||9007199254740992<O?NaN:Number(O),ne>>>=0,O=new Date(1e3*O),v()[ne>>>2>>>0]=O.getSeconds(),v()[ne+4>>>2>>>0]=O.getMinutes(),v()[ne+8>>>2>>>0]=O.getHours(),v()[ne+12>>>2>>>0]=O.getDate(),v()[ne+16>>>2>>>0]=O.getMonth(),v()[ne+20>>>2>>>0]=O.getFullYear()-1900,v()[ne+24>>>2>>>0]=O.getDay();var we=(id(O.getFullYear())?lg:tf)[O.getMonth()]+O.getDate()-1|0;v()[ne+28>>>2>>>0]=we,v()[ne+36>>>2>>>0]=-60*O.getTimezoneOffset(),we=new Date(O.getFullYear(),6,1).getTimezoneOffset();var De=new Date(O.getFullYear(),0,1).getTimezoneOffset();O=0|(we!=De&&O.getTimezoneOffset()==Math.min(De,we)),v()[ne+32>>>2>>>0]=O}function rf(O){O>>>=0;var ne=new Date(v()[O+20>>>2>>>0]+1900,v()[O+16>>>2>>>0],v()[O+12>>>2>>>0],v()[O+8>>>2>>>0],v()[O+4>>>2>>>0],v()[O>>>2>>>0],0),we=v()[O+32>>>2>>>0],De=ne.getTimezoneOffset(),Ze=new Date(ne.getFullYear(),6,1).getTimezoneOffset(),Bt=new Date(ne.getFullYear(),0,1).getTimezoneOffset(),er=Math.min(Bt,Ze);return 0>we?v()[O+32>>>2>>>0]=+(Ze!=Bt&&er==De):0<we!=(er==De)&&(Ze=Math.max(Bt,Ze),ne.setTime(ne.getTime()+6e4*((0<we?er:Ze)-De))),v()[O+24>>>2>>>0]=ne.getDay(),we=(id(ne.getFullYear())?lg:tf)[ne.getMonth()]+ne.getDate()-1|0,v()[O+28>>>2>>>0]=we,v()[O>>>2>>>0]=ne.getSeconds(),v()[O+4>>>2>>>0]=ne.getMinutes(),v()[O+8>>>2>>>0]=ne.getHours(),v()[O+12>>>2>>>0]=ne.getDate(),v()[O+16>>>2>>>0]=ne.getMonth(),v()[O+20>>>2>>>0]=ne.getYear(),O=ne.getTime(),BigInt(isNaN(O)?-1:O/1e3)}function sf(O,ne,we,De,Ze,Bt,er){return Ee?en(16,1,O,ne,we,De,Ze,Bt,er):-52}function af(O,ne,we,De,Ze,Bt){if(Ee)return en(17,1,O,ne,we,De,Ze,Bt)}function ep(O,ne,we,De){O>>>=0,ne>>>=0,we>>>=0,De>>>=0;var Ze=new Date().getFullYear(),Bt=new Date(Ze,0,1),er=new Date(Ze,6,1);Ze=Bt.getTimezoneOffset();var dr=er.getTimezoneOffset(),Ot=Math.max(Ze,dr);x()[O>>>2>>>0]=60*Ot,v()[ne>>>2>>>0]=+(Ze!=dr),Bt=(O=Dr=>Dr.toLocaleTimeString(void 0,{hour12:!1,timeZoneName:"short"}).split(" ")[1])(Bt),er=O(er),dr<Ze?(nd(Bt,we,17),nd(er,De,17)):(nd(Bt,De,17),nd(er,we,17))}var ug=[],nf=(O,ne)=>{ug.length=0;for(var we;we=b()[O++>>>0];){var De=we!=105;ne+=(De&=we!=112)&&ne%8?4:0,ug.push(we==112?x()[ne>>>2>>>0]:we==106?va[ne>>>3]:we==105?v()[ne>>>2>>>0]:W()[ne>>>3>>>0]),ne+=De?8:4}return ug};function of(O,ne,we){return O>>>=0,ne=nf(ne>>>0,we>>>0),Jd[O](...ne)}function tp(O,ne,we){return O>>>=0,ne=nf(ne>>>0,we>>>0),Jd[O](...ne)}var rp=()=>{},sp=()=>Date.now();function ap(O,ne){return fr(Cn(O>>>0,ne>>>0))}var Af,m2=()=>{throw wA+=1,"unwind"};function Dd(){return 4294901760}Af=()=>performance.timeOrigin+performance.now();var lf=()=>navigator.hardwareConcurrency;function np(){return lu("Cannot use emscripten_pc_get_function without -sUSE_OFFSET_CONVERTER"),0}function ip(O){O>>>=0;var ne=b().length;if(O<=ne||4294901760<O)return!1;for(var we=1;4>=we;we*=2){var De=ne*(1+.2/we);De=Math.min(De,O+100663296);var Ze=Math;De=Math.max(O,De);e:{Ze=(Ze.min.call(Ze,4294901760,De+(65536-De%65536)%65536)-Sr.buffer.byteLength+65535)/65536;try{Sr.grow(Ze),Va();var Bt=1;break e}catch{}Bt=void 0}if(Bt)return!0}return!1}var Cd=()=>(lu("Cannot use convertFrameToPC (needed by __builtin_return_address) without -sUSE_OFFSET_CONVERTER"),0),od={},dg=O=>{O.forEach(ne=>{Cd()})};function cf(){var O=Error().stack.toString().split(`
`);return O[0]=="Error"&&O.shift(),dg(O),od.Qb=Cd(),od.fc=O,od.Qb}function uf(O,ne,we){if(O>>>=0,ne>>>=0,od.Qb==O)var De=od.fc;else(De=Error().stack.toString().split(`
`))[0]=="Error"&&De.shift(),dg(De);for(var Ze=3;De[Ze]&&Cd()!=O;)++Ze;for(O=0;O<we&&De[O+Ze];++O)v()[ne+4*O>>>2>>>0]=Cd();return O}var b2,C2={},gg=()=>{if(!b2){var O,ne={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:"./this.program"};for(O in C2)C2[O]===void 0?delete ne[O]:ne[O]=C2[O];var we=[];for(O in ne)we.push(`${O}=${ne[O]}`);b2=we}return b2};function df(O,ne){if(Ee)return en(18,1,O,ne);O>>>=0,ne>>>=0;var we=0;return gg().forEach((De,Ze)=>{var Bt=ne+we;for(Ze=x()[O+4*Ze>>>2>>>0]=Bt,Bt=0;Bt<De.length;++Bt)p()[Ze++>>>0]=De.charCodeAt(Bt);p()[Ze>>>0]=0,we+=De.length+1}),0}function fg(O,ne){if(Ee)return en(19,1,O,ne);O>>>=0,ne>>>=0;var we=gg();x()[O>>>2>>>0]=we.length;var De=0;return we.forEach(Ze=>De+=Ze.length+1),x()[ne>>>2>>>0]=De,0}function pg(O){return Ee?en(20,1,O):52}function hg(O,ne,we,De){return Ee?en(21,1,O,ne,we,De):52}function gf(O,ne,we,De){return Ee?en(22,1,O,ne,we,De):70}var ff=[null,[],[]];function pf(O,ne,we,De){if(Ee)return en(23,1,O,ne,we,De);ne>>>=0,we>>>=0,De>>>=0;for(var Ze=0,Bt=0;Bt<we;Bt++){var er=x()[ne>>>2>>>0],dr=x()[ne+4>>>2>>>0];ne+=8;for(var Ot=0;Ot<dr;Ot++){var Dr=b()[er+Ot>>>0],ts=ff[O];Dr===0||Dr===10?((O===1?kr:fr)(V2(ts,0)),ts.length=0):ts.push(Dr)}Ze+=dr}return x()[De>>>2>>>0]=Ze,0}var mg=[31,29,31,30,31,30,31,31,30,31,30,31],Sd=[31,28,31,30,31,30,31,31,30,31,30,31],op=(O,ne)=>{p().set(O,ne>>>0)};function ks(O,ne,we,De){function Ze(pr,xa,fi){for(pr=typeof pr=="number"?pr.toString():pr||"";pr.length<xa;)pr=fi[0]+pr;return pr}function Bt(pr,xa){return Ze(pr,xa,"0")}function er(pr,xa){function fi(wp){return 0>wp?-1:0<wp?1:0}var Nd;return(Nd=fi(pr.getFullYear()-xa.getFullYear()))===0&&(Nd=fi(pr.getMonth()-xa.getMonth()))===0&&(Nd=fi(pr.getDate()-xa.getDate())),Nd}function dr(pr){switch(pr.getDay()){case 0:return new Date(pr.getFullYear()-1,11,29);case 1:return pr;case 2:return new Date(pr.getFullYear(),0,3);case 3:return new Date(pr.getFullYear(),0,2);case 4:return new Date(pr.getFullYear(),0,1);case 5:return new Date(pr.getFullYear()-1,11,31);case 6:return new Date(pr.getFullYear()-1,11,30)}}function Ot(pr){var xa=pr.Cb;for(pr=new Date(new Date(pr.Db+1900,0,1).getTime());0<xa;){var fi=pr.getMonth(),Nd=(id(pr.getFullYear())?mg:Sd)[fi];if(!(xa>Nd-pr.getDate())){pr.setDate(pr.getDate()+xa);break}xa-=Nd-pr.getDate()+1,pr.setDate(1),11>fi?pr.setMonth(fi+1):(pr.setMonth(0),pr.setFullYear(pr.getFullYear()+1))}return fi=new Date(pr.getFullYear()+1,0,4),xa=dr(new Date(pr.getFullYear(),0,4)),fi=dr(fi),0>=er(xa,pr)?0>=er(fi,pr)?pr.getFullYear()+1:pr.getFullYear():pr.getFullYear()-1}O>>>=0,ne>>>=0,we>>>=0,De>>>=0;var Dr=x()[De+40>>>2>>>0];for(var ts in De={lc:v()[De>>>2>>>0],kc:v()[De+4>>>2>>>0],Ib:v()[De+8>>>2>>>0],Mb:v()[De+12>>>2>>>0],Jb:v()[De+16>>>2>>>0],Db:v()[De+20>>>2>>>0],vb:v()[De+24>>>2>>>0],Cb:v()[De+28>>>2>>>0],sc:v()[De+32>>>2>>>0],jc:v()[De+36>>>2>>>0],mc:Dr?Cn(Dr):""},we=Cn(we),Dr={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"})we=we.replace(new RegExp(ts,"g"),Dr[ts]);var ra="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),Oa="January February March April May June July August September October November December".split(" ");for(ts in Dr={"%a":pr=>ra[pr.vb].substring(0,3),"%A":pr=>ra[pr.vb],"%b":pr=>Oa[pr.Jb].substring(0,3),"%B":pr=>Oa[pr.Jb],"%C":pr=>Bt((pr.Db+1900)/100|0,2),"%d":pr=>Bt(pr.Mb,2),"%e":pr=>Ze(pr.Mb,2," "),"%g":pr=>Ot(pr).toString().substring(2),"%G":Ot,"%H":pr=>Bt(pr.Ib,2),"%I":pr=>((pr=pr.Ib)==0?pr=12:12<pr&&(pr-=12),Bt(pr,2)),"%j":pr=>{for(var xa=0,fi=0;fi<=pr.Jb-1;xa+=(id(pr.Db+1900)?mg:Sd)[fi++]);return Bt(pr.Mb+xa,3)},"%m":pr=>Bt(pr.Jb+1,2),"%M":pr=>Bt(pr.kc,2),"%n":()=>`
`,"%p":pr=>0<=pr.Ib&&12>pr.Ib?"AM":"PM","%S":pr=>Bt(pr.lc,2),"%t":()=>"	","%u":pr=>pr.vb||7,"%U":pr=>Bt(Math.floor((pr.Cb+7-pr.vb)/7),2),"%V":pr=>{var xa=Math.floor((pr.Cb+7-(pr.vb+6)%7)/7);if(2>=(pr.vb+371-pr.Cb-2)%7&&xa++,xa)xa==53&&((fi=(pr.vb+371-pr.Cb)%7)==4||fi==3&&id(pr.Db)||(xa=1));else{xa=52;var fi=(pr.vb+7-pr.Cb-1)%7;(fi==4||fi==5&&id(pr.Db%400-1))&&xa++}return Bt(xa,2)},"%w":pr=>pr.vb,"%W":pr=>Bt(Math.floor((pr.Cb+7-(pr.vb+6)%7)/7),2),"%y":pr=>(pr.Db+1900).toString().substring(2),"%Y":pr=>pr.Db+1900,"%z":pr=>{var xa=0<=(pr=pr.jc);return pr=Math.abs(pr)/60,(xa?"+":"-")+("0000"+(pr/60*100+pr%60)).slice(-4)},"%Z":pr=>pr.mc,"%%":()=>"%"},we=we.replace(/%%/g,"\0\0"),Dr)we.includes(ts)&&(we=we.replace(new RegExp(ts,"g"),Dr[ts](De)));return ts=function(pr){var xa=Array(a2(pr)+1);return H2(pr,xa,0,xa.length),xa}(we=we.replace(/\0\0/g,"%")),ts.length>ne?0:(op(ts,O),ts.length-1)}function hf(O,ne,we,De){return ks(O>>>0,ne>>>0,we>>>0,De>>>0)}Ee||function(){for(var O=j.numThreads-1;O--;)Qg();ni.unshift(()=>{Ju++,function(ne){Ee?ne():Promise.all(cu.map(Og)).then(ne)}(()=>N2())})}();for(var bg=Array(256),Ad=0;256>Ad;++Ad)bg[Ad]=String.fromCharCode(Ad);i2=bg,Mo=j.BindingError=class extends Error{constructor(O){super(O),this.name="BindingError"}},j.InternalError=class extends Error{constructor(O){super(O),this.name="InternalError"}},du.push(0,1,void 0,1,null,1,!0,1,!1,1),j.count_emval_handles=()=>du.length/2-5-Ed.length;var wd=[t2,t0,R2,W2,U2,Y2,K2,q2,X2,Z2,J2,$2,uu,jg,r0,n2,sf,af,df,fg,pg,hg,gf,pf],fs=function(){function O(we,De){return fs=we.exports,fs=function(){var Ze=fs,Bt={};for(let[er,dr]of Object.entries(Ze))Bt[er]=typeof dr=="function"?(...Ot)=>{f2.push(er);try{return dr(...Ot)}finally{qi||(f2.pop(),Z0&&gu===1&&f2.length===0&&(gu=0,wA+=1,Bd(Ce),typeof Fibers<"u"&&Fibers.tc()))}}:dr;return Bt}(),fs=function(){var Ze=fs,Bt=dr=>Ot=>dr(Ot)>>>0,er=dr=>()=>dr()>>>0;return(Ze=Object.assign({},Ze)).Da=Bt(Ze.Da),Ze.gb=er(Ze.gb),Ze.ib=Bt(Ze.ib),Ze.emscripten_main_runtime_thread_id=er(Ze.emscripten_main_runtime_thread_id),Ze.tb=Bt(Ze.tb),Ze.ub=er(Ze.ub),Ze}(),L2.push(fs.jb),xo.unshift(fs.Ca),As=De,N2(),fs}var ne=Zd();if(Ju++,j.instantiateWasm)try{return j.instantiateWasm(ne,O)}catch(we){fr(`Module.instantiateWasm callback failed with error: ${we}`),$(we)}return Kd||(Kd=j.locateFile?qd("ort-wasm-simd-threaded.jsep.wasm")?"ort-wasm-simd-threaded.jsep.wasm":j.locateFile?j.locateFile("ort-wasm-simd-threaded.jsep.wasm",Gt):Gt+"ort-wasm-simd-threaded.jsep.wasm":new URL(A("./node_modules/onnxruntime-web/dist/ort-wasm-simd-threaded.jsep.wasm"),A.b).href),function(we,De){var Ze=Kd;return Zt||typeof WebAssembly.instantiateStreaming!="function"||qd(Ze)||Sg(Ze)||typeof fetch!="function"?Xd(Ze,we,De):fetch(Ze,{credentials:"same-origin"}).then(Bt=>WebAssembly.instantiateStreaming(Bt,we).then(De,function(er){return fr(`wasm streaming compile failed: ${er}`),fr("falling back to ArrayBuffer instantiation"),Xd(Ze,we,De)}))}(ne,function(we){O(we.instance,we.module)}).catch($),{}}(),Gd=O=>(Gd=fs.Da)(O),w2=()=>(w2=fs.Ea)();j._OrtInit=(O,ne)=>(j._OrtInit=fs.Fa)(O,ne),j._OrtGetLastError=(O,ne)=>(j._OrtGetLastError=fs.Ga)(O,ne),j._OrtCreateSessionOptions=(O,ne,we,De,Ze,Bt,er,dr,Ot,Dr)=>(j._OrtCreateSessionOptions=fs.Ha)(O,ne,we,De,Ze,Bt,er,dr,Ot,Dr),j._OrtAppendExecutionProvider=(O,ne)=>(j._OrtAppendExecutionProvider=fs.Ia)(O,ne),j._OrtAddFreeDimensionOverride=(O,ne,we)=>(j._OrtAddFreeDimensionOverride=fs.Ja)(O,ne,we),j._OrtAddSessionConfigEntry=(O,ne,we)=>(j._OrtAddSessionConfigEntry=fs.Ka)(O,ne,we),j._OrtReleaseSessionOptions=O=>(j._OrtReleaseSessionOptions=fs.La)(O),j._OrtCreateSession=(O,ne,we)=>(j._OrtCreateSession=fs.Ma)(O,ne,we),j._OrtReleaseSession=O=>(j._OrtReleaseSession=fs.Na)(O),j._OrtGetInputOutputCount=(O,ne,we)=>(j._OrtGetInputOutputCount=fs.Oa)(O,ne,we),j._OrtGetInputName=(O,ne)=>(j._OrtGetInputName=fs.Pa)(O,ne),j._OrtGetOutputName=(O,ne)=>(j._OrtGetOutputName=fs.Qa)(O,ne),j._OrtFree=O=>(j._OrtFree=fs.Ra)(O),j._OrtCreateTensor=(O,ne,we,De,Ze,Bt)=>(j._OrtCreateTensor=fs.Sa)(O,ne,we,De,Ze,Bt),j._OrtGetTensorData=(O,ne,we,De,Ze)=>(j._OrtGetTensorData=fs.Ta)(O,ne,we,De,Ze),j._OrtReleaseTensor=O=>(j._OrtReleaseTensor=fs.Ua)(O),j._OrtCreateRunOptions=(O,ne,we,De)=>(j._OrtCreateRunOptions=fs.Va)(O,ne,we,De),j._OrtAddRunConfigEntry=(O,ne,we)=>(j._OrtAddRunConfigEntry=fs.Wa)(O,ne,we),j._OrtReleaseRunOptions=O=>(j._OrtReleaseRunOptions=fs.Xa)(O),j._OrtCreateBinding=O=>(j._OrtCreateBinding=fs.Ya)(O),j._OrtBindInput=(O,ne,we)=>(j._OrtBindInput=fs.Za)(O,ne,we),j._OrtBindOutput=(O,ne,we,De)=>(j._OrtBindOutput=fs._a)(O,ne,we,De),j._OrtClearBoundOutputs=O=>(j._OrtClearBoundOutputs=fs.$a)(O),j._OrtReleaseBinding=O=>(j._OrtReleaseBinding=fs.ab)(O),j._OrtRunWithBinding=(O,ne,we,De,Ze)=>(j._OrtRunWithBinding=fs.bb)(O,ne,we,De,Ze),j._OrtRun=(O,ne,we,De,Ze,Bt,er,dr)=>(j._OrtRun=fs.cb)(O,ne,we,De,Ze,Bt,er,dr),j._OrtEndProfiling=O=>(j._OrtEndProfiling=fs.db)(O),j._JsepOutput=(O,ne,we)=>(j._JsepOutput=fs.eb)(O,ne,we),j._JsepGetNodeName=O=>(j._JsepGetNodeName=fs.fb)(O);var Fd,ld=()=>(ld=fs.gb)(),Tl=j._free=O=>(Tl=j._free=fs.hb)(O),cd=j._malloc=O=>(cd=j._malloc=fs.ib)(O),I2=(O,ne,we,De,Ze,Bt)=>(I2=fs.lb)(O,ne,we,De,Ze,Bt),Cg=()=>(Cg=fs.mb)(),zd=(O,ne,we,De,Ze)=>(zd=fs.nb)(O,ne,we,De,Ze),Od=O=>(Od=fs.ob)(O),Id=O=>(Id=fs.pb)(O),wg=()=>(wg=fs.qb)(),Ig=(O,ne)=>(Ig=fs.rb)(O,ne),Qd=O=>(Qd=fs.sb)(O),k2=O=>(k2=fs.tb)(O),y2=()=>(y2=fs.ub)(),kg=j.dynCall_ii=(O,ne)=>(kg=j.dynCall_ii=fs.wb)(O,ne),Z=O=>(Z=fs.xb)(O),Ce=()=>(Ce=fs.yb)(),Oe=O=>(Oe=fs.zb)(O),Xe=()=>(Xe=fs.Ab)();function lt(){0<Ju||(Ee?(te(j),Ee||Md(xo),startWorker(j)):(Md(ni),0<Ju||Fd||(Fd=!0,j.calledRun=!0,qi||(Ee||Md(xo),te(j),Ee||Md(vd)))))}return j.___start_em_js=932469,j.___stop_em_js=932715,j.stackSave=()=>y2(),j.stackRestore=O=>Qd(O),j.stackAlloc=O=>k2(O),j.setValue=function(O,ne,we="i8"){switch(we.endsWith("*")&&(we="*"),we){case"i1":case"i8":p()[O>>>0]=ne;break;case"i16":C()[O>>>1>>>0]=ne;break;case"i32":v()[O>>>2>>>0]=ne;break;case"i64":va[O>>>3]=BigInt(ne);break;case"float":L()[O>>>2>>>0]=ne;break;case"double":W()[O>>>3>>>0]=ne;break;case"*":x()[O>>>2>>>0]=ne;break;default:lu(`invalid type for setValue: ${we}`)}},j.getValue=function(O,ne="i8"){switch(ne.endsWith("*")&&(ne="*"),ne){case"i1":case"i8":return p()[O>>>0];case"i16":return C()[O>>>1>>>0];case"i32":return v()[O>>>2>>>0];case"i64":return va[O>>>3];case"float":return L()[O>>>2>>>0];case"double":return W()[O>>>3>>>0];case"*":return x()[O>>>2>>>0];default:lu(`invalid type for getValue: ${ne}`)}},j.UTF8ToString=Cn,j.stringToUTF8=nd,j.lengthBytesUTF8=a2,md=function O(){Fd||lt(),Fd||(md=O)},lt(),j.PTR_SIZE=4,le}),Cs=Gs,((n=globalThis.self)==null?void 0:n.name)==="em-pthread"&&Gs()}),is,wn,oa,Ea,gr,Wr,vr,Es,pn,Ba,In,ln,hn,kn=z(()=>{Dt(),is=typeof location>"u"?void 0:location.origin,wn=()=>{var n;return(n=import.meta.url)!=null&&n.startsWith("file:")?new URL(new URL(A("./node_modules/onnxruntime-web/dist/ort.bundle.min.mjs?46eb"),A.b).href,is).href:import.meta.url},oa=wn(),Ea=()=>{if(oa&&!oa.startsWith("blob:"))return oa.substring(0,oa.lastIndexOf("/")+1)},gr=(n,l)=>{try{let p=l??oa;return(p?new URL(n,p):new URL(n)).origin===is}catch{return!1}},Wr=(n,l)=>{let p=l??oa;try{return(p?new URL(n,p):new URL(n)).href}catch{return}},vr=(n,l)=>`${l??"./"}${n}`,Es=async n=>{let l=await(await fetch(n,{credentials:"same-origin"})).blob();return URL.createObjectURL(l)},pn=async n=>(await import(n)).default,Ba=(lr(),R(Ht)).default,In=async()=>{if(!oa)throw new Error("Failed to load proxy worker: cannot determine the script source URL.");if(gr(oa))return[void 0,Ba()];let n=await Es(oa);return[n,Ba(n)]},ln=(Ks(),R(Fr)).default,hn=async(n,l,p)=>{if(!n&&!l&&ln&&oa&&gr(oa))return[void 0,ln];{let b="ort-wasm-simd-threaded.jsep.mjs",C=n??Wr(b,l),E=p&&C&&!gr(C,l),v=E?await Es(C):C??vr(b,l);return[E?v:void 0,await pn(v)]}}}),sa,tr,Qr,jr,Vs,xn,Ss,Ls,Xa=z(()=>{kn(),tr=!1,Qr=!1,jr=!1,Vs=()=>{if(typeof SharedArrayBuffer>"u")return!1;try{return typeof MessageChannel<"u"&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}},xn=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},Ss=async n=>{if(tr)return Promise.resolve();if(Qr)throw new Error("multiple calls to 'initializeWebAssembly()' detected.");if(jr)throw new Error("previous call to 'initializeWebAssembly()' failed.");Qr=!0;let l=n.initTimeout,p=n.numThreads;if(!xn())throw new Error("WebAssembly SIMD is not supported in the current environment.");let b=Vs();p>1&&!b&&(typeof self<"u"&&!self.crossOriginIsolated&&console.warn("env.wasm.numThreads is set to "+p+", but this will not work unless you enable crossOriginIsolated mode. See https://web.dev/cross-origin-isolation-guide/ for more info."),console.warn("WebAssembly multi-threading is not supported in the current environment. Falling back to single-threading."),n.numThreads=p=1);let C=n.wasmPaths,E=typeof C=="string"?C:void 0,v=C==null?void 0:C.mjs,x=(v==null?void 0:v.href)??v,L=C==null?void 0:C.wasm,W=(L==null?void 0:L.href)??L,te=n.wasmBinary,[$,j]=await hn(x,E,p>1),le=!1,me=[];if(l>0&&me.push(new Promise(_e=>{setTimeout(()=>{le=!0,_e()},l)})),me.push(new Promise((_e,Ee)=>{let Fe={numThreads:p};if(te)Fe.wasmBinary=te;else if(W||E)Fe.locateFile=Ye=>W??E+Ye;else if(x&&x.indexOf("blob:")!==0)Fe.locateFile=Ye=>new URL(Ye,x).href;else if($){let Ye=Ea();Ye&&(Fe.locateFile=dt=>Ye+dt)}j(Fe).then(Ye=>{Qr=!1,tr=!0,sa=Ye,_e(),$&&URL.revokeObjectURL($)},Ye=>{Qr=!1,jr=!0,Ee(Ye)})})),await Promise.race(me),le)throw new Error(`WebAssembly backend initializing failed due to timeout: ${l}ms`)},Ls=()=>{if(tr&&sa)return sa;throw new Error("WebAssembly is not initialized yet.")}}),_a,Tn,Ms,Mi=z(()=>{Xa(),_a=(n,l)=>{let p=Ls(),b=p.lengthBytesUTF8(n)+1,C=p._malloc(b);return p.stringToUTF8(n,C,b),l.push(C),C},Tn=(n,l,p,b)=>{if(typeof n=="object"&&n!==null){if(p.has(n))throw new Error("Circular reference in options");p.add(n)}Object.entries(n).forEach(([C,E])=>{let v=l?l+C:C;if(typeof E=="object")Tn(E,v+".",p,b);else if(typeof E=="string"||typeof E=="number")b(v,E.toString());else if(typeof E=="boolean")b(v,E?"1":"0");else throw new Error(`Can't handle extra config type: ${typeof E}`)})},Ms=n=>{let l=Ls(),p=l.stackSave();try{let b=l.PTR_SIZE,C=l.stackAlloc(2*b);l._OrtGetLastError(C,C+b);let E=Number(l.getValue(C,b===4?"i32":"i64")),v=l.getValue(C+b,"*"),x=v?l.UTF8ToString(v):"";throw new Error(`${n} ERROR_CODE: ${E}, ERROR_MESSAGE: ${x}`)}finally{l.stackRestore(p)}}}),Ma,Jn=z(()=>{Xa(),Mi(),Ma=n=>{let l=Ls(),p=0,b=[],C=n||{};try{if((n==null?void 0:n.logSeverityLevel)===void 0)C.logSeverityLevel=2;else if(typeof n.logSeverityLevel!="number"||!Number.isInteger(n.logSeverityLevel)||n.logSeverityLevel<0||n.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${n.logSeverityLevel}`);if((n==null?void 0:n.logVerbosityLevel)===void 0)C.logVerbosityLevel=0;else if(typeof n.logVerbosityLevel!="number"||!Number.isInteger(n.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${n.logVerbosityLevel}`);(n==null?void 0:n.terminate)===void 0&&(C.terminate=!1);let E=0;return(n==null?void 0:n.tag)!==void 0&&(E=_a(n.tag,b)),p=l._OrtCreateRunOptions(C.logSeverityLevel,C.logVerbosityLevel,!!C.terminate,E),p===0&&Ms("Can't create run options."),(n==null?void 0:n.extra)!==void 0&&Tn(n.extra,"",new WeakSet,(v,x)=>{let L=_a(v,b),W=_a(x,b);l._OrtAddRunConfigEntry(p,L,W)!==0&&Ms(`Can't set a run config entry: ${v} - ${x}.`)}),[p,b]}catch(E){throw p!==0&&l._OrtReleaseRunOptions(p),b.forEach(v=>l._free(v)),E}}}),$n,Ei,Pn,Dn,ma,Bi=z(()=>{Xa(),Mi(),$n=n=>{switch(n){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${n}`)}},Ei=n=>{switch(n){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${n}`)}},Pn=n=>{n.extra||(n.extra={}),n.extra.session||(n.extra.session={});let l=n.extra.session;l.use_ort_model_bytes_directly||(l.use_ort_model_bytes_directly="1"),n.executionProviders&&n.executionProviders.some(p=>(typeof p=="string"?p:p.name)==="webgpu")&&(n.enableMemPattern=!1)},Dn=(n,l,p)=>{for(let b of l){let C=typeof b=="string"?b:b.name;switch(C){case"webnn":if(C="WEBNN",typeof b!="string"){let v=b==null?void 0:b.deviceType;if(v){let x=_a("deviceType",p),L=_a(v,p);Ls()._OrtAddSessionConfigEntry(n,x,L)!==0&&Ms(`Can't set a session config entry: 'deviceType' - ${v}.`)}}break;case"webgpu":if(C="JS",typeof b!="string"){let v=b;if(v!=null&&v.preferredLayout){if(v.preferredLayout!=="NCHW"&&v.preferredLayout!=="NHWC")throw new Error(`preferredLayout must be either 'NCHW' or 'NHWC': ${v.preferredLayout}`);let x=_a("preferredLayout",p),L=_a(v.preferredLayout,p);Ls()._OrtAddSessionConfigEntry(n,x,L)!==0&&Ms(`Can't set a session config entry: 'preferredLayout' - ${v.preferredLayout}.`)}}break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${C}`)}let E=_a(C,p);Ls()._OrtAppendExecutionProvider(n,E)!==0&&Ms(`Can't append execution provider: ${C}.`)}},ma=n=>{let l=Ls(),p=0,b=[],C=n||{};Pn(C);try{let E=$n(C.graphOptimizationLevel??"all"),v=Ei(C.executionMode??"sequential"),x=typeof C.logId=="string"?_a(C.logId,b):0,L=C.logSeverityLevel??2;if(!Number.isInteger(L)||L<0||L>4)throw new Error(`log serverity level is not valid: ${L}`);let W=C.logVerbosityLevel??0;if(!Number.isInteger(W)||W<0||W>4)throw new Error(`log verbosity level is not valid: ${W}`);let te=typeof C.optimizedModelFilePath=="string"?_a(C.optimizedModelFilePath,b):0;if(p=l._OrtCreateSessionOptions(E,!!C.enableCpuMemArena,!!C.enableMemPattern,v,!!C.enableProfiling,0,x,L,W,te),p===0&&Ms("Can't create session options."),C.executionProviders&&Dn(p,C.executionProviders,b),C.enableGraphCapture!==void 0){if(typeof C.enableGraphCapture!="boolean")throw new Error(`enableGraphCapture must be a boolean value: ${C.enableGraphCapture}`);let $=_a("enableGraphCapture",b),j=_a(C.enableGraphCapture.toString(),b);l._OrtAddSessionConfigEntry(p,$,j)!==0&&Ms(`Can't set a session config entry: 'enableGraphCapture' - ${C.enableGraphCapture}.`)}if(C.freeDimensionOverrides)for(let[$,j]of Object.entries(C.freeDimensionOverrides)){if(typeof $!="string")throw new Error(`free dimension override name must be a string: ${$}`);if(typeof j!="number"||!Number.isInteger(j)||j<0)throw new Error(`free dimension override value must be a non-negative integer: ${j}`);let le=_a($,b);l._OrtAddFreeDimensionOverride(p,le,j)!==0&&Ms(`Can't set a free dimension override: ${$} - ${j}.`)}return C.extra!==void 0&&Tn(C.extra,"",new WeakSet,($,j)=>{let le=_a($,b),me=_a(j,b);l._OrtAddSessionConfigEntry(p,le,me)!==0&&Ms(`Can't set a session config entry: ${$} - ${j}.`)}),[p,b]}catch(E){throw p!==0&&l._OrtReleaseSessionOptions(p)!==0&&Ms("Can't release session options."),b.forEach(v=>l._free(v)),E}}}),Vn,Sn,cn,ei,ti,ri,ds,ys,qr=z(()=>{Vn=n=>{switch(n){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;case"int4":return 22;case"uint4":return 21;default:throw new Error(`unsupported data type: ${n}`)}},Sn=n=>{switch(n){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";case 22:return"int4";case 21:return"uint4";default:throw new Error(`unsupported data type: ${n}`)}},cn=(n,l)=>{let p=[-1,4,1,1,2,2,4,8,-1,1,2,8,4,8,-1,-1,-1,-1,-1,-1,-1,.5,.5][n],b=typeof l=="number"?l:l.reduce((C,E)=>C*E,1);return p>0?Math.ceil(b*p):void 0},ei=n=>{switch(n){case"float16":return typeof Float16Array<"u"&&Float16Array.from?Float16Array:Uint16Array;case"float32":return Float32Array;case"uint8":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"bool":return Uint8Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${n}`)}},ti=n=>{switch(n){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${n}`)}},ri=n=>n==="float32"||n==="float16"||n==="int32"||n==="int64"||n==="uint32"||n==="uint8"||n==="bool"||n==="uint4"||n==="int4",ds=n=>n==="float32"||n==="float16"||n==="int32"||n==="int64"||n==="uint32"||n==="uint64"||n==="int8"||n==="uint8"||n==="bool"||n==="uint4"||n==="int4",ys=n=>{switch(n){case"none":return 0;case"cpu":return 1;case"cpu-pinned":return 2;case"texture":return 3;case"gpu-buffer":return 4;case"ml-tensor":return 5;default:throw new Error(`unsupported data location: ${n}`)}}}),pi,Ai=z(()=>{Dt(),pi=async n=>{if(typeof n=="string"){let l=await fetch(n);if(!l.ok)throw new Error(`failed to load external data file: ${n}`);let p=l.headers.get("Content-Length"),b=p?parseInt(p,10):0;if(b<1073741824)return new Uint8Array(await l.arrayBuffer());{if(!l.body)throw new Error(`failed to load external data file: ${n}, no response body.`);let C=l.body.getReader(),E;try{E=new ArrayBuffer(b)}catch(x){if(x instanceof RangeError){let L=Math.ceil(b/65536);E=new WebAssembly.Memory({initial:L,maximum:L}).buffer}else throw x}let v=0;for(;;){let{done:x,value:L}=await C.read();if(x)break;let W=L.byteLength;new Uint8Array(E,v,W).set(L),v+=W}return new Uint8Array(E,0,b)}}else return n instanceof Blob?new Uint8Array(await n.arrayBuffer()):n instanceof Uint8Array?n:new Uint8Array(n)}}),hi,Wn,Gn,qt,Qe,ut,wt,tt=z(()=>{qr(),hi=["V","I","W","E","F"],Wn=(n,l)=>{console.log(`[${hi[n]},${new Date().toISOString()}]${l}`)},Qe=(n,l)=>{Gn=n,qt=l},ut=(n,l)=>{let p=ti(n),b=ti(Gn);p>=b&&Wn(p,typeof l=="function"?l():l)},wt=(...n)=>{qt&&ut(...n)}}),Ae,Ge=z(()=>{qr(),Ae=(n,l)=>new(ei(l))(n)}),at=z(()=>{}),Le,vt,Pt,ir,yr,hr,xr,Gr,wr,_r=z(()=>{tt(),at(),Le=new Map([[64,250],[128,200],[256,200],[512,200],[2048,230],[4096,200],[8192,50],[16384,50],[32768,50],[65536,50],[131072,50],[262144,50],[524288,50],[1048576,50],[2097152,30],[4194304,20],[8388608,10],[12582912,10],[16777216,10],[26214400,15],[33554432,22],[44236800,2],[58982400,6],[67108864,6],[134217728,6],[167772160,6]]),vt=[],Pt=n=>Math.ceil(Number(n)/16)*16,ir=n=>{for(let l=0;l<vt.length;l++){let p=vt[l];if(n<=p)return p}return Math.ceil(n/16)*16},yr=1,hr=()=>yr++,xr=async(n,l,p,b)=>{let C=Pt(p),E=n.device.createBuffer({size:C,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});try{let v=n.getCommandEncoder();n.endComputePass(),v.copyBufferToBuffer(l,0,E,0,C),n.flush(),await E.mapAsync(GPUMapMode.READ);let x=E.getMappedRange();if(b){let L=b();return L.set(new Uint8Array(x,0,p)),L}else return new Uint8Array(x.slice(0,p))}finally{E.destroy()}},Gr=class{constructor(n){this.backend=n,this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.buffersPending=[],this.capturedPendingBuffers=new Map;for(let[l]of Le)vt.push(l),this.freeBuffers.set(l,[]),this.freeUniformBuffers.set(l,[]);this.sessionCount=0}upload(n,l){let p=l.buffer,b=l.byteOffset,C=l.byteLength,E=Pt(C),v=this.storageCache.get(n);if(!v)throw new Error("gpu data for uploading does not exist");if(Number(v.originalSize)!==C)throw new Error(`inconsistent data size. gpu data size=${v.originalSize}, data size=${C}`);let x=this.backend.device.createBuffer({mappedAtCreation:!0,size:E,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),L=x.getMappedRange();new Uint8Array(L).set(new Uint8Array(p,b,C)),x.unmap();let W=this.backend.device.createCommandEncoder();W.copyBufferToBuffer(x,0,v.gpuData.buffer,0,E),this.backend.device.queue.submit([W.finish()]),x.destroy(),wt("verbose",()=>`[WebGPU] GpuDataManager.upload(id=${n})`)}memcpy(n,l){let p=this.storageCache.get(n);if(!p)throw new Error("source gpu data for memcpy does not exist");let b=this.storageCache.get(l);if(!b)throw new Error("destination gpu data for memcpy does not exist");if(p.originalSize!==b.originalSize)throw new Error("inconsistent source and destination gpu data size");let C=Pt(p.originalSize),E=this.backend.getCommandEncoder();this.backend.endComputePass(),E.copyBufferToBuffer(p.gpuData.buffer,0,b.gpuData.buffer,0,C)}registerExternalBuffer(n,l,p){let b;if(p){if(b=p[0],n===p[1])return wt("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${l}) => id=${b}, buffer is the same, skip.`),b;if(this.backend.capturedCommandList.has(this.backend.currentSessionId))throw new Error(`Registering a different external buffer under graph capture mode is not supported yet.
             Please use the previous external buffer!`)}else b=hr();return this.storageCache.set(b,{gpuData:{id:b,type:0,buffer:n},originalSize:l}),wt("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${l}) => id=${b}, registered.`),b}unregisterExternalBuffer(n){n!==void 0&&(this.storageCache.delete(n),wt("verbose",()=>`[WebGPU] GpuDataManager.unregisterExternalBuffer() => id=${n}`))}create(n,l=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){let p=ir(n),b,C=(l&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE,E=(l&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM;if(C||E){let x=(C?this.freeBuffers:this.freeUniformBuffers).get(p);x?x.length>0?b=x.pop():b=this.backend.device.createBuffer({size:p,usage:l}):b=this.backend.device.createBuffer({size:p,usage:l})}else b=this.backend.device.createBuffer({size:p,usage:l});let v={id:hr(),type:0,buffer:b};return this.storageCache.set(v.id,{gpuData:v,originalSize:Number(n)}),wt("verbose",()=>`[WebGPU] GpuDataManager.create(size=${n}) => id=${v.id}`),v}get(n){var l;return(l=this.storageCache.get(n))==null?void 0:l.gpuData}release(n){let l=typeof n=="bigint"?Number(n):n,p=this.storageCache.get(l);if(!p){if(this.storageCache.size===0)return 0;throw new Error("releasing data does not exist")}return wt("verbose",()=>`[WebGPU] GpuDataManager.release(id=${l}), gpuDataId=${p.gpuData.id}`),this.storageCache.delete(l),this.buffersPending.push(p.gpuData.buffer),p.originalSize}async download(n,l){let p=this.storageCache.get(Number(n));if(!p)throw new Error("data does not exist");await xr(this.backend,p.gpuData.buffer,p.originalSize,l)}refreshPendingBuffers(){if(this.buffersPending.length!==0)if(this.backend.sessionStatus==="default"){for(let n of this.buffersPending){let l=Le.get(n.size);if((n.usage&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE){let p=this.freeBuffers.get(n.size)||[];l===void 0||p.length>=l?n.destroy():p.push(n)}else if((n.usage&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM){let p=this.freeUniformBuffers.get(n.size)||[];l===void 0||p.length>=l?n.destroy():p.push(n)}else n.destroy()}this.buffersPending=[]}else{let n=this.capturedPendingBuffers.get(this.backend.currentSessionId);n||(n=[],this.capturedPendingBuffers.set(this.backend.currentSessionId,n));for(let l of this.buffersPending)n.push(l);this.buffersPending=[]}}dispose(){this.freeBuffers.forEach(n=>{n.forEach(l=>{l.destroy()})}),this.freeUniformBuffers.forEach(n=>{n.forEach(l=>{l.destroy()})}),this.storageCache.forEach(n=>{n.gpuData.buffer.destroy()}),this.capturedPendingBuffers.forEach(n=>{n.forEach(l=>{l.destroy()})}),this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.capturedPendingBuffers=new Map}onCreateSession(){this.sessionCount+=1}onReleaseSession(n){let l=this.capturedPendingBuffers.get(n);l&&(l.forEach(p=>{p.destroy()}),this.capturedPendingBuffers.delete(n)),this.sessionCount-=1,this.sessionCount===0&&(wt("warning",()=>"[WebGPU] Clearing webgpu buffer cache"),this.storageCache.forEach(p=>{p.gpuData.buffer.destroy()}),this.storageCache=new Map)}},wr=(...n)=>new Gr(...n)}),gs,Xr,hs=z(()=>{gs=class{constructor(n){Object.assign(this,n)}get cacheKey(){return this.key||(this.key=Object.getOwnPropertyNames(this).sort().map(n=>`${this[n]}`).join(";")),this.key}},Xr=n=>new gs(n)}),Bs,Or,Kt,rr,Lr,Rs,Ws,Vr=z(()=>{Bs=class{static calcMatMulShape(n,l){return n[1]!==l[0]?void 0:[n[0],l[1]]}},Or=class{static calcShape(n,l,p=!1){let b=n.length,C=l.length;if(b===0)return l;if(C===0)return n;let E=Math.max(n.length,l.length),v=new Array(E);if(p){if(b<2||C<2)return;let x=Bs.calcMatMulShape([n[b-2],n[b-1]],[l[C-2],l[C-1]]);if(x===void 0)return;[v[E-2],v[E-1]]=x}for(let x=p?3:1;x<=E;x++){let L=b-x<0?1:n[b-x],W=C-x<0?1:l[C-x];if(L!==W&&L>1&&W>1)return;let te=Math.max(L,W);if(L&&W)v[E-x]=Math.max(L,W);else{if(te>1)return;v[E-x]=0}}return v}static isValidBroadcast(n,l){let p=n.length,b=l.length;if(p>b)return!1;for(let C=1;C<=p;C++)if(n[p-C]!==1&&n[p-C]!==l[b-C])return!1;return!0}},Kt=class bf{static size(l){return bf.getSizeFromDimensionRange(l,0,l.length)}static convertShape(l,p=4){let b=l.length;if(b===0)return[];let C=new Array(b),E=b-1;for(;E>=0;){if(l[E]%p===0){C[E]=l[E]/p;break}if(p%l[E]!==0)throw new Error("cannot convert shape");C[E]=1,p/=l[E],E--}for(E--;E>=0;E--)C[E]=l[E];return C}static sizeFromDimension(l,p){if(p<0||p>l.length)throw new Error(`invalid dimension of ${p} for sizeFromDimension as Tensor has ${l.length} dimensions.`);return bf.getSizeFromDimensionRange(l,p,l.length)}static sizeToDimension(l,p){if(p<0||p>l.length)throw new Error(`invalid dimension of ${p} for sizeToDimension as Tensor has ${l.length} dimensions.`);return bf.getSizeFromDimensionRange(l,0,p)}static getSizeFromDimensionRange(l,p,b){let C=1;for(let E=p;E<b;E++){if(l[E]<0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains negative values in them.");C*=Number(l[E])}return C}static computeStrides(l){let p=l.length;if(p===0)return[];if(p===1)return[1];let b=new Array(p);b[p-1]=1,b[p-2]=l[p-1];for(let C=p-3;C>=0;--C)b[C]=b[C+1]*l[C+1];return b}static normalizeAxis(l,p){if(l<-p&&l>=p)throw new Error("unsupported axis for this operation.");return l<0?l+p:l}static normalizeAxes(l,p){return l.map(b=>this.normalizeAxis(b,p??l.length))}static sortBasedOnPerm(l,p){return p?p.map(b=>l[b]):l.slice().reverse()}static padShape(l,p){let b=l.length;return l.map((C,E)=>C+p[E]+p[E+b])}static areEqual(l,p){return l.length!==p.length?!1:l.every((b,C)=>b===p[C])}},rr=class vg{static adjustPoolAttributes(l,p,b,C,E,v){if(!l&&b.length!==p.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(l)for(let x=0;x<p.length-2;x++)x>=b.length?b.push(p[x+2]):b[x]=p[x+2];for(let x=0;x<b.length;x++)if(x<C.length){if(C[x]<0)throw new Error("strides should be greater than or equal to 1")}else C.push(1);for(let x=0;x<b.length;x++)if(x<E.length){if(E[x]<0)throw new Error("dilations should be greater than or equal to 1")}else E.push(1);for(let x=0;x<b.length*2;x++)if(x<v.length){if(v[x]<0)throw new Error("pad should be greater than or equal to 1")}else v.push(0);for(let x=0;x<b.length;x++){if(b[x]<=0)throw new Error("kernel shapes need to be greater than 0");if(v[x]>=b[x]||v[x+b.length]>=b[x])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(l,p,b,C,E,v,x){if(x){if(E.length!==2*(l.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(p.length!==l.length-2)throw new Error("length of strides should be the length of data dimensions");if(C.length!==l.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let L=0;L<l.length-2;L++)vg.adjustPadAndReturnShape(l[L+(v?1:2)],p[L],b[L],C[L],E,L,L+l.length-2,x)}}static computePoolOutputShape(l,p,b,C,E,v,x){if(p.length<=0)throw new Error("input shape must be of size greater than 0");let L=[p[0],p[1]];return vg.computeShapeHelper(l,p,L,b,C,E,v,x),L}static computeConvOutputShape(l,p,b,C,E,v,x){if(l.length<=0||p.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let L=[l[0],p[0]];return vg.computeShapeHelper(!1,l,L,b,C,E,v,x),L}static computeShapeHelper(l,p,b,C,E,v,x,L){if(l)for(let W=0;W<p.length-2;W++)b.push(1);else for(let W=0;W<p.length-2;W++)b.push(vg.adjustPadAndReturnShape(p[W+2],C[W],E[W],v[W],x,W,W+p.length-2,L))}static adjustPadAndReturnShape(l,p,b,C,E,v,x,L){let W=b*(C-1)+1;if(L&&L!=="NOTSET")switch(L){case"VALID":return E[v]=0,E[x]=0,Math.floor((l-W)/p+1);case"SAME_LOWER":case"SAME_UPPER":if(b!==1)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let te=((l+p-1)/p-1)*p+C-l;return E[v]=Math.floor(L==="SAME_LOWER"?(te+1)/2:te/2),E[x]=te-E[v],Math.floor((l+te-C)/p+1)}default:throw new Error("Unsupported AutoPad type")}else return Math.floor((l+E[v]+E[x]-W)/p+1)}},Lr=class{static getShapeOfGemmResult(n,l,p,b,C){if(n.length!==2||p.length!==2)throw new Error("shape need to be of size 2");let E,v,x;l?(E=n[1],v=n[0]):(E=n[0],v=n[1]);let L=-1;if(b?(x=p[0],L=1):(x=p[1],L=0),p[L]!==v)throw new Error("dimension mismatch");if(E<=0||x<=0||v<=0)throw new Error("invalid shape specified");if(C&&!Or.isValidBroadcast(C,[E,x]))throw new Error("gemm: invalid bias shape for broadcast");return[E,x,v]}},Rs=-34028234663852886e22,Ws=34028234663852886e22}),Js,qs,es,_s,Rr,cs,Da,Us,Ua,Ir,Sa,or,ss,qA,kA,XA,lo,ws=z(()=>{qr(),Vr(),Js=64,qs=(n,l)=>{if(l===3)throw new Error("vec3 has same alignment as vec4, use vec4 instead");switch(Number(n)){case 10:return l>1?`vec${l}<f16>`:"f16";case 1:return l>1?`vec${l}<f32>`:"f32";case 6:return l>1?`vec${l}<i32>`:"i32";case 12:return l>1?`vec${l}<u32>`:"u32";case 7:if(l>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","i32"];case 13:if(l>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","u32"];case 9:if(l!==4)throw new Error("bool must be vec4");return["u32","vec4<bool>"];case 22:return"i32";case 21:return"u32";default:throw new Error(`Unknown data type: ${n}`)}},es=(n,l=1)=>{let p=qs(n,l);return typeof p=="string"?p:p[0]},_s=(n,l=1)=>{let p=qs(n,l);return typeof p=="string"?p:p[1]},Rr=(...n)=>{let l=[];return n.forEach(p=>{p.length!==0&&l.push({type:12,data:p},{type:12,data:Kt.computeStrides(p)})}),l},cs=n=>n%4===0?4:n%2===0?2:1,Da=(n="f32",l,p="0")=>!l||l===1?`${n}(${p})`:`vec${l}<${n}>(${p})`,Us=(n,l,p)=>n==="f32"?p:l===1?`f32(${p})`:`vec${l}<f32>(${p})`,Ua=(n,l)=>l===4?`(${n}.x + ${n}.y + ${n}.z + ${n}.w)`:l===2?`(${n}.x + ${n}.y)`:l===3?`(${n}.x + ${n}.y + ${n}.z)`:n,Ir=(n,l,p,b)=>n.startsWith("uniforms.")&&p>4?typeof l=="string"?b==="f16"?`${n}[(${l}) / 8][(${l}) % 8 / 4][(${l}) % 8 % 4]`:`${n}[(${l}) / 4][(${l}) % 4]`:b==="f16"?`${n}[${Math.floor(l/8)}][${Math.floor(l%8/4)}][${l%8%4}]`:`${n}[${Math.floor(l/4)}][${l%4}]`:p>1?`${n}[${l}]`:n,Sa=(n,l,p,b,C)=>{let E=typeof p=="number",v=E?p:p.length,x=[...new Array(v).keys()],L=v<2?"u32":v<=4?`vec${v}<u32>`:`array<u32, ${v}>`,W=qs(l,C),te=typeof W=="string"?W:W[1],$=typeof W=="string"?W:W[0],j={indices:L,value:te,storage:$,tensor:l},le=Er=>typeof Er=="string"?Er:`${Er}u`,me={offsetToIndices:!1,indicesToOffset:!1,broadcastedIndicesToOffset:!1,set:!1,setByIndices:!1,get:!1,getByIndices:!1},_e=E?"uniforms.":"",Ee=`${_e}${n}_shape`,Fe=`${_e}${n}_strides`,Ye="";for(let Er=0;Er<v-1;Er++)Ye+=`
    let dim${Er} = current / ${Ir(Fe,Er,v)};
    let rest${Er} = current % ${Ir(Fe,Er,v)};
    indices[${Er}] = dim${Er};
    current = rest${Er};
    `;Ye+=`indices[${v-1}] = current;`;let dt=v<2?"":`
  fn o2i_${n}(offset: u32) -> ${j.indices} {
    var indices: ${j.indices};
    var current = offset;
    ${Ye}
    return indices;
  }`,mt=Er=>(me.offsetToIndices=!0,v<2?Er:`o2i_${n}(${Er})`),xt=[];if(v>=2)for(let Er=v-1;Er>=0;Er--)xt.push(`${Ir(Fe,Er,v)} * (indices[${Er}])`);let jt=v<2?"":`
  fn i2o_${n}(indices: ${j.indices}) -> u32 {
    return ${xt.join("+")};
  }`,Gt=Er=>(me.indicesToOffset=!0,v<2?Er:`i2o_${n}(${Er})`),Zt=(...Er)=>v===0?"0u":`${j.indices}(${Er.map(le).join(",")})`,ar=(Er,Kr)=>v<2?`${Er}`:`${Ir(Er,Kr,v)}`,St=(Er,Kr,js)=>v<2?`${Er}=${js};`:`${Ir(Er,Kr,v)}=${js};`,kr={},fr=(Er,Kr)=>{me.broadcastedIndicesToOffset=!0;let js=`${Kr.name}broadcastedIndicesTo${n}Offset`;if(js in kr)return`${js}(${Er})`;let Ds=[];for(let va=v-1;va>=0;va--){let _i=Kr.indicesGet("outputIndices",va+Kr.rank-v);Ds.push(`${ar(Fe,va)} * (${_i} % ${ar(Ee,va)})`)}return kr[js]=`fn ${js}(outputIndices: ${Kr.type.indices}) -> u32 {
             return ${Ds.length>0?Ds.join("+"):"0u"};
           }`,`${js}(${Er})`},ur=(Er,Kr)=>(()=>{if(j.storage===j.value)return`${n}[${Er}]=${Kr};`;if(j.storage==="vec2<u32>"&&j.value==="i32")return`${n}[${Er}]=vec2<u32>(u32(${Kr}), select(0u, 0xFFFFFFFFu, ${Kr} < 0));`;if(j.storage==="vec2<u32>"&&j.value==="u32")return`${n}[${Er}]=vec2<u32>(u32(${Kr}), 0u);`;if(j.storage==="u32"&&j.value==="vec4<bool>")return`${n}[${Er}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${Kr}));`;throw new Error(`not supported combination of storage type ${j.storage} and value type ${j.value} yet`)})(),Jr=Er=>(()=>{if(j.storage===j.value)return`${n}[${Er}]`;if(j.storage==="vec2<u32>"&&j.value==="i32")return`i32(${n}[${Er}].x)`;if(j.storage==="vec2<u32>"&&j.value==="u32")return`u32(${n}[${Er}].x)`;if(j.storage==="u32"&&j.value==="vec4<bool>")return`vec4<bool>(bool(${n}[${Er}] & 0xFFu), bool(${n}[${Er}] & 0xFF00u), bool(${n}[${Er}] & 0xFF0000u), bool(${n}[${Er}] & 0xFF000000u))`;throw new Error(`not supported combination of storage type ${j.storage} and value type ${j.value} yet`)})(),Sr=v<2?"":`
  fn get_${n}ByIndices(indices: ${j.indices}) -> ${te} {
    return ${Jr(`i2o_${n}(indices)`)};
  }`,As=v<2?"":(()=>{let Er=x.map(js=>`d${js}: u32`).join(", "),Kr=x.map(js=>`d${js}`).join(", ");return`
  fn get_${n}(${Er}) -> ${te} {
    return get_${n}ByIndices(${Zt(Kr)});
  }`})(),Xs=(...Er)=>{if(Er.length!==v)throw new Error(`indices length must be ${v}`);let Kr=Er.map(le).join(",");return v===0?Jr("0u"):v===1?Jr(Kr[0]):(me.get=!0,me.getByIndices=!0,me.indicesToOffset=!0,`get_${n}(${Kr})`)},bs=Er=>v<2?Jr(Er):(me.getByIndices=!0,me.indicesToOffset=!0,`get_${n}ByIndices(${Er})`),vs=v<2?"":`
  fn set_${n}ByIndices(indices: ${j.indices}, value: ${te}) {
    ${ur(`i2o_${n}(indices)`,"value")}
  }`,Ys=v<2?"":(()=>{let Er=x.map(js=>`d${js}: u32`).join(", "),Kr=x.map(js=>`d${js}`).join(", ");return`
  fn set_${n}(${Er}, value: ${te}) {
    set_${n}ByIndices(${Zt(Kr)}, value);
  }`})();return{impl:()=>{let Er=[],Kr=!1;return me.offsetToIndices&&(Er.push(dt),Kr=!0),me.indicesToOffset&&(Er.push(jt),Kr=!0),me.broadcastedIndicesToOffset&&(Object.values(kr).forEach(js=>Er.push(js)),Kr=!0),me.set&&(Er.push(Ys),Kr=!0),me.setByIndices&&(Er.push(vs),Kr=!0),me.get&&(Er.push(As),Kr=!0),me.getByIndices&&(Er.push(Sr),Kr=!0),!E&&Kr&&Er.unshift(`const ${Ee} = ${j.indices}(${p.join(",")});`,`const ${Fe} = ${j.indices}(${Kt.computeStrides(p).join(",")});`),Er.join(`
`)},type:j,offsetToIndices:mt,indicesToOffset:Gt,broadcastedIndicesToOffset:fr,indices:Zt,indicesGet:ar,indicesSet:St,set:(...Er)=>{if(Er.length!==v+1)throw new Error(`indices length must be ${v}`);let Kr=Er[v];if(typeof Kr!="string")throw new Error("value must be string");let js=Er.slice(0,v).map(le).join(",");return v===0?ur("0u",Kr):v===1?ur(js[0],Kr):(me.set=!0,me.setByIndices=!0,me.indicesToOffset=!0,`set_${n}(${js}, ${Kr})`)},setByOffset:ur,setByIndices:(Er,Kr)=>v<2?ur(Er,Kr):(me.setByIndices=!0,me.indicesToOffset=!0,`set_${n}ByIndices(${Er}, ${Kr});`),get:Xs,getByOffset:Jr,getByIndices:bs,usage:b,name:n,strides:Fe,shape:Ee,rank:v}},or=(n,l,p,b=1)=>Sa(n,l,p,"input",b),ss=(n,l,p,b=1)=>Sa(n,l,p,"output",b),qA=(n,l,p)=>Sa(n,l,p,"atomicOutput",1),kA=(n,l,p,b=1)=>Sa(n,l,p,"internal",b),XA=class{constructor(n,l){this.normalizedDispatchGroup=n,this.limits=l,this.internalVariables=[],this.variables=[],this.uniforms=[],this.variableIndex=0}guardAgainstOutOfBoundsWorkgroupSizes(n){return`if (global_idx >= ${typeof n=="number"?`${n}u`:n}) { return; }`}mainStart(n=Js){let l=typeof n=="number"?n:n[0],p=typeof n=="number"?1:n[1],b=typeof n=="number"?1:n[2];if(l>this.limits.maxComputeWorkgroupSizeX||p>this.limits.maxComputeWorkgroupSizeY||b>this.limits.maxComputeWorkgroupSizeZ)throw new Error(`workgroup size [${l}, ${p}, ${b}] exceeds the maximum workgroup size [${this.limits.maxComputeWorkgroupSizeX}, ${this.limits.maxComputeWorkgroupSizeY}, ${this.limits.maxComputeWorkgroupSizeZ}].`);if(l*p*b>this.limits.maxComputeInvocationsPerWorkgroup)throw new Error(`workgroup size [${l}, ${p}, ${b}] exceeds the maximum workgroup invocations ${this.limits.maxComputeInvocationsPerWorkgroup}.`);let C=this.normalizedDispatchGroup[1]===1&&this.normalizedDispatchGroup[2]===1,E=C?`@builtin(global_invocation_id) global_id : vec3<u32>,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(local_invocation_index) local_idx : u32,
    @builtin(local_invocation_id) local_id : vec3<u32>`:`@builtin(global_invocation_id) global_id : vec3<u32>,
                                             @builtin(local_invocation_id) local_id : vec3<u32>,
    @builtin(local_invocation_index) local_idx : u32,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(num_workgroups) num_workgroups : vec3<u32>`,v=C?`let global_idx = global_id.x;
         let workgroup_index = workgroup_id.x;`:`let workgroup_index = workgroup_id.z * num_workgroups[0] * num_workgroups[1] +
             workgroup_id.y * num_workgroups[0] + workgroup_id.x;
         let global_idx = workgroup_index * ${l*p*b}u + local_idx;`;return`@compute @workgroup_size(${l}, ${p}, ${b})
  fn main(${E}) {
    ${v}
  `}appendVariableUniforms(n){n.rank!==0&&(n.shape.startsWith("uniforms.")&&this.uniforms.push({name:n.shape.replace("uniforms.",""),type:"u32",length:n.rank}),n.strides.startsWith("uniforms.")&&this.uniforms.push({name:n.strides.replace("uniforms.",""),type:"u32",length:n.rank}))}declareVariable(n,l){if(n.usage==="internal")throw new Error("cannot use internal variable with declareVariable(). use registerInternalVariables() instead.");this.variables.push(n),this.appendVariableUniforms(n);let p=n.usage==="input"?"read":"read_write",b=n.usage==="atomicOutput"?"atomic<i32>":n.type.storage;return`@group(0) @binding(${l}) var<storage, ${p}> ${n.name}: array<${b}>;`}declareVariables(...n){return n.map(l=>this.declareVariable(l,this.variableIndex++)).join(`
`)}registerInternalVariable(n){if(n.usage!=="internal")throw new Error("cannot use input or output variable with registerInternalVariable(). use declareVariables() instead.");this.internalVariables.push(n),this.appendVariableUniforms(n)}registerInternalVariables(...n){return n.forEach(l=>this.registerInternalVariable(l)),this}registerUniform(n,l,p=1){return this.uniforms.push({name:n,type:l,length:p}),this}registerUniforms(n){return this.uniforms=this.uniforms.concat(n),this}uniformDeclaration(){if(this.uniforms.length===0)return"";let n=[];for(let{name:l,type:p,length:b}of this.uniforms)if(b&&b>4)p==="f16"?n.push(`@align(16) ${l}:array<mat2x4<${p}>, ${Math.ceil(b/8)}>`):n.push(`${l}:array<vec4<${p}>, ${Math.ceil(b/4)}>`);else{let C=b==null||b===1?p:`vec${b}<${p}>`;n.push(`${l}:${C}`)}return`
      struct Uniforms { ${n.join(", ")} };
      @group(0) @binding(${this.variableIndex}) var<uniform> uniforms: Uniforms;`}get additionalImplementations(){return this.uniformDeclaration()+this.variables.map(n=>n.impl()).join(`
`)+this.internalVariables.map(n=>n.impl()).join(`
`)}get variablesInfo(){if(this.uniforms.length===0)return;let n=l=>[12,10,1,6][["u32","f16","f32","i32"].indexOf(l)];return this.uniforms.map(l=>[n(l.type),l.length??1])}},lo=(n,l)=>new XA(n,l)}),ZA,Eo,Mn,tn,Hr,yn,Un,Uo,Ho,Ni=z(()=>{qr(),Vr(),hs(),ws(),ZA=(n,l)=>{if(!n||n.length!==1)throw new Error("Transpose requires 1 input.");if(l.length!==0&&l.length!==n[0].dims.length)throw new Error(`perm size ${l.length} does not match input rank ${n[0].dims.length}`)},Eo=(n,l)=>l.length!==0?l:[...new Array(n).keys()].reverse(),Mn=(n,l)=>Kt.sortBasedOnPerm(n,Eo(n.length,l)),tn=(n,l,p,b)=>{let C=`fn perm(i: ${b.type.indices}) -> ${p.type.indices} {
    var a: ${p.type.indices};`;for(let E=0;E<l;++E)C+=`a[${n[E]}]=i[${E}];`;return C+="return a;}"},Hr=(n,l)=>{let p=[],b=[];for(let C=0;C<n.length;++C)n[C]!==1&&p.push(n[C]),n[l[C]]!==1&&b.push(l[C]);return{newShape:p,newPerm:b}},yn=(n,l)=>{let p=0;for(let b=0;b<n.length;++b)if(l[n[b]]!==1){if(n[b]<p)return!1;p=n[b]}return!0},Un=(n,l)=>{let p=n.dataType,b=n.dims.length,C=Eo(b,l),E=Mn(n.dims,C),v=n.dims,x=E,L=b<2||yn(C,n.dims),W;if(L)return W=me=>{let _e=or("input",p,v,4),Ee=ss("output",p,x,4);return`
  ${me.registerUniform("output_size","u32").declareVariables(_e,Ee)}
  ${me.mainStart()}
    ${me.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    output[global_idx] = input[global_idx];
  }`},{name:"TransposeCopy",shaderCache:{inputDependencies:["type"]},getRunData:()=>{let me=Kt.size(E);return{outputs:[{dims:E,dataType:n.dataType}],dispatchGroup:{x:Math.ceil(me/64/4)},programUniforms:[{type:12,data:Math.ceil(me/4)}]}},getShaderSource:W};let{newShape:te,newPerm:$}=Hr(n.dims,C),j=Kt.areEqual($,[2,3,1]),le=Kt.areEqual($,[3,1,2]);if(te.length===2||j||le){v=j?[te[0],te[1]*te[2]]:le?[te[0]*te[1],te[2]]:te,x=[v[1],v[0]];let me=16;return W=_e=>{let Ee=or("a",p,v.length),Fe=ss("output",p,x.length);return`
  ${_e.registerUniform("output_size","u32").declareVariables(Ee,Fe)}
  var<workgroup> tile : array<array<${Fe.type.value}, ${me+1}>, ${me}>;
  ${_e.mainStart([me,me,1])}
    let stride = (uniforms.output_shape[1] - 1) / ${me} + 1;
    let workgroup_id_x = workgroup_index % stride;
    let workgroup_id_y = workgroup_index / stride;
    let input_col = workgroup_id_y * ${me}u + local_id.x;
    let input_row = workgroup_id_x * ${me}u + local_id.y;
    if (input_row < uniforms.a_shape[0] && input_col < uniforms.a_shape[1]) {
      tile[local_id.y][local_id.x] = ${Ee.getByIndices(`${Ee.type.indices}(input_row, input_col)`)};
    }
    workgroupBarrier();

    let output_col = workgroup_id_x * ${me}u + local_id.x;
    let output_row = workgroup_id_y * ${me}u + local_id.y;
    if (output_row < uniforms.output_shape[0] && output_col < uniforms.output_shape[1]) {
      ${Fe.setByIndices(`${Fe.type.indices}(output_row, output_col)`,"tile[local_id.x][local_id.y]")}
    }
  }`},{name:"TransposeShared",shaderCache:{inputDependencies:["type"]},getRunData:()=>{let _e=Kt.size(E);return{outputs:[{dims:E,dataType:n.dataType}],dispatchGroup:{x:Math.ceil(x[1]/me),y:Math.ceil(x[0]/me)},programUniforms:[{type:12,data:_e},...Rr(v,x)]}},getShaderSource:W}}return W=me=>{let _e=or("a",p,v.length),Ee=ss("output",p,x.length);return`
  ${me.registerUniform("output_size","u32").declareVariables(_e,Ee)}

  ${tn(C,b,_e,Ee)}

  ${me.mainStart()}
    ${me.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let indices = ${Ee.offsetToIndices("global_idx")};
    let aIndices = perm(indices);

    ${Ee.setByOffset("global_idx",_e.getByIndices("aIndices"))}
  }`},{name:"Transpose",shaderCache:{hint:`${l}`,inputDependencies:["rank"]},getRunData:()=>{let me=Kt.size(E);return{outputs:[{dims:E,dataType:n.dataType}],dispatchGroup:{x:Math.ceil(me/64)},programUniforms:[{type:12,data:me},...Rr(v,x)]}},getShaderSource:W}},Uo=(n,l)=>{ZA(n.inputs,l.perm),n.compute(Un(n.inputs[0],l.perm))},Ho=n=>Xr({perm:n.perm})}),Yo,yA,Dl,Fn,aa,Bo,To,_n,Li,mi,Hn,Ri,Xi,JA,_A,$A,Br,ji,Nr,vA,Ko,En=z(()=>{qr(),Vr(),ws(),ps(),Ni(),Yo={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate * candidate",logSumExp:"bestValue + exp(candidate)",l1:"bestValue + abs(candidate)",l2:"bestValue + candidate * candidate",logSum:"bestValue + candidate"},yA={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate",logSumExp:"bestValue + candidate",l1:"bestValue + candidate",l2:"bestValue + candidate",logSum:"bestValue + candidate"},Dl={max:"_A[offset]",min:"_A[offset]",mean:"0",sum:"0",prod:"1",sumSquare:"0",logSumExp:"0",l1:"0",l2:"0",logSum:"0"},Fn={max:"bestValue",min:"bestValue",sum:"bestValue",prod:"bestValue",sumSquare:"bestValue",logSumExp:"log(bestValue)",l1:"bestValue",l2:"sqrt(bestValue)",logSum:"log(bestValue)"},aa=(n,l)=>{let p=[];for(let b=l-n;b<l;++b)p.push(b);return p},Bo=(n,l)=>{let p=[],b=n.length;for(let E=0;E<b;E++)l.indexOf(E)===-1&&p.push(n[E]);let C=l.map(E=>n[E]);return[p,C]},To=(n,l)=>{let p=n.length+l.length,b=[],C=0;for(let E=0;E<p;E++)l.indexOf(E)===-1?b.push(n[C++]):b.push(1);return b},_n=(n,l)=>{for(let p=0;p<n.length;++p)if(n[n.length-p-1]!==l-1-p)return!1;return!0},Li=(n,l)=>{let p=[];if(!_n(n,l)){for(let b=0;b<l;++b)n.indexOf(b)===-1&&p.push(b);n.forEach(b=>p.push(b))}return p},mi=(n,l,p,b,C,E,v)=>{let x=p[0].dims,L=Kt.size(E),W=Kt.size(v),te=or("_A",p[0].dataType,x),$=ss("output",C,E),j=64;L===1&&(j=256);let le=`
          var<workgroup> aBestValues : array<f32, ${j}>;
       `,me=_e=>`
        ${_e.registerUniform("reduceSize","u32").declareVariables(te,$)}
        ${le}
        fn DIV_CEIL(a : u32, b : u32) -> u32 {
          return ((a - 1u) / b + 1u);
         }
         ${_e.mainStart(j)}

          let outputIndex = global_idx / ${j};
          let offset = outputIndex * uniforms.reduceSize;

          var bestValue = f32(${Dl[b]});
          let Length = uniforms.reduceSize;
          for (var k = local_idx; k < Length; k = k + ${j}) {
           let candidate = f32(${te.getByOffset("offset + k")});
           bestValue = ${Yo[b]};
          }
          aBestValues[local_idx] = bestValue;
          workgroupBarrier();

         var reduceSize = min(Length, ${j}u);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (local_idx < currentSize) {
            let candidate = aBestValues[local_idx + interval];
            bestValue = ${yA[b]};
            aBestValues[local_idx] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (local_idx == 0u) {
          ${$.setByOffset("outputIndex",`${b==="mean"?`${$.type.storage}(bestValue / f32(uniforms.reduceSize))`:`${$.type.storage}(${Fn[b]})`}`)};
         }
        }`;return{name:n,shaderCache:{hint:`${l};${j}`,inputDependencies:["type"]},getShaderSource:me,getRunData:()=>({outputs:[{dims:E,dataType:C}],dispatchGroup:{x:L},programUniforms:[{type:12,data:W}]})}},Hn=(n,l,p,b)=>{let C=n.inputs.length===1?p:qo(n.inputs,p),E=C.axes;E.length===0&&!C.noopWithEmptyAxes&&(E=n.inputs[0].dims.map((le,me)=>me));let v=Kt.normalizeAxes(E,n.inputs[0].dims.length),x=v,L=n.inputs[0],W=Li(x,n.inputs[0].dims.length);W.length>0&&(L=n.compute(Un(n.inputs[0],W),{inputs:[0],outputs:[-1]})[0],x=aa(x.length,L.dims.length));let[te,$]=Bo(L.dims,x),j=te;C.keepDims&&(j=To(te,v)),n.compute(mi(l,C.cacheKey,[L],b,n.inputs[0].dataType,j,$),{inputs:[L]})},Ri=(n,l)=>{Hn(n,"ReduceMeanShared",l,"mean")},Xi=(n,l)=>{Hn(n,"ReduceL1Shared",l,"l1")},JA=(n,l)=>{Hn(n,"ReduceL2Shared",l,"l2")},_A=(n,l)=>{Hn(n,"ReduceLogSumExpShared",l,"logSumExp")},$A=(n,l)=>{Hn(n,"ReduceMaxShared",l,"max")},Br=(n,l)=>{Hn(n,"ReduceMinShared",l,"min")},ji=(n,l)=>{Hn(n,"ReduceProdShared",l,"prod")},Nr=(n,l)=>{Hn(n,"ReduceSumShared",l,"sum")},vA=(n,l)=>{Hn(n,"ReduceSumSquareShared",l,"sumSquare")},Ko=(n,l)=>{Hn(n,"ReduceLogSumShared",l,"logSum")}}),Ga,Vi,Zi,qo,ia,xA,el,Wi,Ji,tl,Xo,$i,zr,li,Zo,zn,Ti,Jo,rl,sl,Po,al,nl,La,il,ol,ps=z(()=>{qr(),Vr(),hs(),ws(),En(),Ga=n=>{if(!n||n.length===0||n.length>2)throw new Error("Reduce op requires 1 or 2 inputs.");if(n.length===2&&n[1].dims.length!==1)throw new Error("Invalid axes input dims.")},Vi=n=>["","",`var value = ${n.getByIndices("input_indices")};`,""],Zi=(n,l,p,b,C,E,v=!1,x=!1)=>{let L=[],W=p[0].dims,te=W.length,$=Kt.normalizeAxes(C,te),j=!x&&$.length===0;W.forEach((_e,Ee)=>{j||$.indexOf(Ee)>=0?v&&L.push(1):L.push(_e)});let le=L.length,me=Kt.size(L);return{name:n,shaderCache:l,getShaderSource:_e=>{let Ee=[],Fe=or("_A",p[0].dataType,te),Ye=ss("output",E,le),dt=b(Fe,Ye,$),mt=dt[2];for(let xt=0,jt=0;xt<te;xt++)j||$.indexOf(xt)>=0?(v&&jt++,mt=`for(var j${xt}: u32 = 0; j${xt} < ${W[xt]}; j${xt}++) {
                  ${dt[2].includes("last_index")?`let last_index = j${xt};`:""}
                  ${Fe.indicesSet("input_indices",xt,`j${xt}`)}
                  ${mt}
                }`):(Ee.push(`${Fe.indicesSet("input_indices",xt,Ye.indicesGet("output_indices",jt))};`),jt++);return`

        ${_e.registerUniform("output_size","u32").declareVariables(Fe,Ye)}

        ${_e.mainStart()}
          ${_e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          var input_indices: ${Fe.type.indices};
          let output_indices = ${Ye.offsetToIndices("global_idx")};

          ${Ee.join(`
`)}
          ${dt[0]}       // init ops for reduce max/min
          ${dt[1]}
          ${mt}
          ${dt[3]}
          ${dt.length===4?Ye.setByOffset("global_idx","value"):dt.slice(4).join(`
`)}
        }`},getRunData:()=>({outputs:[{dims:L,dataType:E}],dispatchGroup:{x:Math.ceil(me/64)},programUniforms:[{type:12,data:me},...Rr(W,L)]})}},qo=(n,l)=>{let p=[];return n[1].dims[0]>0&&n[1].getBigInt64Array().forEach(b=>p.push(Number(b))),Xr({axes:p,keepDims:l.keepDims,noopWithEmptyAxes:l.noopWithEmptyAxes})},ia=(n,l,p,b)=>{let C=n.inputs,E=C.length===1?p:qo(C,p);n.compute(Zi(l,{hint:E.cacheKey,inputDependencies:["rank"]},[C[0]],E.noopWithEmptyAxes&&E.axes.length===0?Vi:b,E.axes,C[0].dataType,E.keepDims,E.noopWithEmptyAxes),{inputs:[0]})},xA=(n,l)=>{Ga(n.inputs),ia(n,"ReduceLogSum",l,(p,b)=>[`var value = ${b.type.storage}(0);`,"",`value += ${p.getByIndices("input_indices")};`,"value = log(value);"])},el=(n,l)=>{Ga(n.inputs),ia(n,"ReduceL1",l,(p,b)=>[`var value = ${b.type.storage}(0);`,"",`value += abs(${p.getByIndices("input_indices")});`,""])},Wi=(n,l)=>{Ga(n.inputs),ia(n,"ReduceL2",l,(p,b)=>[`var t = ${b.type.value}(0); var value = ${b.type.value}(0);`,"",`t = ${p.getByIndices("input_indices")}; value += (t * t);`,"value = sqrt(value);"])},Ji=(n,l)=>{Ga(n.inputs),ia(n,"ReduceLogSumExp",l,(p,b)=>[`var value = ${b.type.storage}(0);`,"",`value += exp(${p.getByIndices("input_indices")});`,"value = log(value);"])},tl=(n,l)=>{Ga(n.inputs),ia(n,"ReduceMax",l,(p,b,C)=>{let E=[];for(let v=0;v<p.rank;v++)(C.indexOf(v)>=0||C.length===0)&&E.push(p.indicesSet("input_indices",v,0));return[`${E.join(`
`)}`,`var value = ${p.getByIndices("input_indices")};`,`value = max(value, ${p.getByIndices("input_indices")});`,""]})},Xo=(n,l)=>{Ga(n.inputs),ia(n,"ReduceMean",l,(p,b,C)=>{let E=1;for(let v=0;v<p.rank;v++)(C.indexOf(v)>=0||C.length===0)&&(E*=n.inputs[0].dims[v]);return["var sum = f32(0);","",`sum += f32(${p.getByIndices("input_indices")});`,`let value = ${b.type.value}(sum / ${E});`]})},$i=(n,l)=>{Ga(n.inputs),ia(n,"ReduceMin",l,(p,b,C)=>{let E=[];for(let v=0;v<p.rank;v++)(C.indexOf(v)>=0||C.length===0)&&E.push(`input_indices[${v}] = 0;`);return[`${E.join(`
`)}`,`var value = ${p.getByIndices("input_indices")};`,`value = min(value, ${p.getByIndices("input_indices")});`,""]})},zr=(n,l)=>{Ga(n.inputs),ia(n,"ReduceProd",l,(p,b)=>[`var value = ${b.type.storage}(1);`,"",`value *= ${p.getByIndices("input_indices")};`,""])},li=(n,l)=>{Ga(n.inputs),ia(n,"ReduceSum",l,(p,b)=>[`var value = ${b.type.storage}(0);`,"",`value += ${p.getByIndices("input_indices")};`,""])},Zo=(n,l)=>{Ga(n.inputs),ia(n,"ReduceSumSquare",l,(p,b)=>[`var t = ${b.type.value}(0); var value = ${b.type.value}(0);`,"",`t = ${p.getByIndices("input_indices")}; value += t * t;`,""])},zn=(n,l,p)=>{if(l.length===0)return p;let b=1,C=1;for(let E=0;E<l.length;E++)l.indexOf(E)===-1?b*=n[E]:C*=n[E];return C<32&&b>1024},Ti=(n,l)=>{zn(n.inputs[0].dims,l.axes,l.noopWithEmptyAxes)?Xo(n,l):Ri(n,l)},Jo=(n,l)=>{zn(n.inputs[0].dims,l.axes,l.noopWithEmptyAxes)?el(n,l):Xi(n,l)},rl=(n,l)=>{zn(n.inputs[0].dims,l.axes,l.noopWithEmptyAxes)?Wi(n,l):JA(n,l)},sl=(n,l)=>{zn(n.inputs[0].dims,l.axes,l.noopWithEmptyAxes)?Ji(n,l):_A(n,l)},Po=(n,l)=>{zn(n.inputs[0].dims,l.axes,l.noopWithEmptyAxes)?tl(n,l):$A(n,l)},al=(n,l)=>{zn(n.inputs[0].dims,l.axes,l.noopWithEmptyAxes)?$i(n,l):Br(n,l)},nl=(n,l)=>{zn(n.inputs[0].dims,l.axes,l.noopWithEmptyAxes)?zr(n,l):ji(n,l)},La=(n,l)=>{zn(n.inputs[0].dims,l.axes,l.noopWithEmptyAxes)?li(n,l):Nr(n,l)},il=(n,l)=>{zn(n.inputs[0].dims,l.axes,l.noopWithEmptyAxes)?Zo(n,l):vA(n,l)},ol=(n,l)=>{zn(n.inputs[0].dims,l.axes,l.noopWithEmptyAxes)?xA(n,l):Ko(n,l)}}),Fs,MA,ci,EA,mn=z(()=>{qr(),hs(),ps(),Fs=n=>{if(!n||n.length===0||n.length>2)throw new Error("ArgMinMaxOp op requires 1 or 2 inputs.");if(n[0].dataType!==1)throw new Error("Invalid input type.")},MA=(n,l)=>{Fs(n.inputs);let p=(b,C,E)=>{let v=[];for(let x=0;x<b.rank;x++)(E.indexOf(x)>=0||E.length===0)&&v.push(`input_indices[${x}] = 0;`);return[`${v.join(`
`)}`,`var value = ${b.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${b.getByIndices("input_indices")} ${l.selectLastIndex>0?"<=":"<"} value) {
         value = ${b.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",C.setByOffset("global_idx","best_index")]};n.compute(Zi("ArgMin",{hint:l.cacheKey,inputDependencies:["rank"]},[n.inputs[0]],p,[l.axis],7,l.keepDims),{inputs:[0]})},ci=(n,l)=>{Fs(n.inputs);let p=(b,C,E)=>{let v=[];for(let x=0;x<b.rank;x++)(E.indexOf(x)>=0||E.length===0)&&v.push(`input_indices[${x}] = 0;`);return[`${v.join(`
`)}`,`var value = ${b.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${b.getByIndices("input_indices")} ${l.selectLastIndex>0?">=":">"} value) {
         value = ${b.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",C.setByOffset("global_idx","best_index")]};n.compute(Zi("argMax",{hint:l.cacheKey,inputDependencies:["rank"]},[n.inputs[0]],p,[l.axis],7,l.keepDims),{inputs:[0]})},EA=n=>Xr(n)}),bi,Za,Pi,Do,BA,So,Go,Ta,co=z(()=>{qr(),Vr(),at(),ws(),bi=(n,l)=>{let p=n[0],b=n[1],C=n[2],E=n[3],v=n[4],x=n[5];if(v&&x)throw new Error("Attention cannot have both past and attention_bias");if(p.dims.length!==3)throw new Error('Input "input" must have 3 dimensions');let L=p.dims[0],W=p.dims[1],te=p.dims[2];if(C.dims.length!==1)throw new Error('Input "bias" is expected to have 1 dimensions');if(b.dims.length!==2)throw new Error('Input "weights" is expected to have 2 dimensions');if(b.dims[0]!==te)throw new Error("Input 1 dimension 0 should have same length as dimension 2 of input 0");if(C.dims[0]!==b.dims[1])throw new Error('Input "bias" dimension 0 should have same length as dimension 1 of input "weights"');let $=C.dims[0]/3,j=$,le=j;if(l.qkvHiddenSizes.length>0){if(l.qkvHiddenSizes.length!==3)throw new Error("qkv_hidden_sizes attribute should have 3 elements");for(let dt of l.qkvHiddenSizes)if(dt%l.numHeads!==0)throw new Error("qkv_hidden_sizes should be divisible by num_heads");$=l.qkvHiddenSizes[0],j=l.qkvHiddenSizes[1],le=l.qkvHiddenSizes[2]}let me=W;if($!==j)throw new Error("qkv_hidden_sizes first element should be same as the second");if(C.dims[0]!==$+j+le)throw new Error('Input "bias" dimension 0 should have same length as sum of Q/K/V hidden sizes');let _e=0;if(v){if(j!==le)throw new Error('Input "past" expect k_hidden_size == v_hidden_size');if(v.dims.length!==5)throw new Error('Input "past" must have 5 dimensions');if(v.dims[0]!==2)throw new Error('Input "past" first dimension must be 2');if(v.dims[1]!==L)throw new Error('Input "past" second dimension must be batch_size');if(v.dims[2]!==l.numHeads)throw new Error('Input "past" third dimension must be num_heads');if(v.dims[4]!==j/l.numHeads)throw new Error('Input "past" fifth dimension must be k_hidden_size / num_heads');l.pastPresentShareBuffer||(_e=v.dims[3])}let Ee=me+_e,Fe=-1,Ye=0;if(E)throw new Error("Mask not supported");if(v)throw new Error("past is not supported");if(x){if(x.dims.length!==4)throw new Error('Input "attention_bias" must have 4 dimensions');if(x.dims[0]!==L||x.dims[1]!==l.numHeads||x.dims[2]!==W||x.dims[3]!==Ee)throw new Error('Expect "attention_bias" shape (batch_size, num_heads, sequence_length, total_sequence_length)')}return{batchSize:L,sequenceLength:W,pastSequenceLength:_e,kvSequenceLength:me,totalSequenceLength:Ee,maxSequenceLength:Fe,inputHiddenSize:te,hiddenSize:$,vHiddenSize:le,headSize:Math.floor($/l.numHeads),vHeadSize:Math.floor(le/l.numHeads),numHeads:l.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:l.maskFilterValue,maskType:Ye,scale:l.scale,broadcastResPosBias:!1,passPastInKv:!1,qkvFormat:1}},Za=(n,l,p)=>l&&n?`
      let total_sequence_length_input = u32(${l.getByOffset("0")});
      let present_sequence_length = max(total_sequence_length_input, uniforms.past_sequence_length);
      let is_subsequent_prompt: bool = sequence_length > 1 && sequence_length != total_sequence_length_input;
      let is_first_prompt: bool = is_subsequent_prompt == false && sequence_length == total_sequence_length_input;
      total_sequence_length = u32(${n==null?void 0:n.getByOffset("batchIdx")}) + 1;
      var past_sequence_length: u32 = 0;
      if (is_first_prompt == false) {
        past_sequence_length = total_sequence_length - sequence_length;
      }
       `:`
    ${p?"let past_sequence_length = uniforms.past_sequence_length":""};
    let present_sequence_length = total_sequence_length;
    `,Pi=(n,l,p,b,C,E,v,x)=>{let L=cs(v?1:E),W=64,te=E/L;te<W&&(W=32);let $=Math.ceil(E/L/W),j=[{type:12,data:l},{type:12,data:p},{type:12,data:b},{type:12,data:C},{type:12,data:te},{type:12,data:$}],le=es(n.dataType,L),me=_s(1,L),_e=["type"];v&&_e.push("type"),x&&_e.push("type");let Ee=Fe=>{let Ye=ss("x",n.dataType,n.dims,L),dt=[Ye],mt=v?or("seq_lens",v.dataType,v.dims):void 0;mt&&dt.push(mt);let xt=x?or("total_sequence_length_input",x.dataType,x.dims):void 0;xt&&dt.push(xt);let jt=_s(n.dataType),Gt=[{name:"batch_size",type:"u32"},{name:"num_heads",type:"u32"},{name:"past_sequence_length",type:"u32"},{name:"sequence_length",type:"u32"},{name:"total_sequence_length",type:"u32"},{name:"elements_per_thread",type:"u32"}];return`
  var<workgroup> thread_max: array<f32, ${W}>;
  var<workgroup> thread_sum: array<f32, ${W}>;
  ${Fe.registerUniforms(Gt).declareVariables(...dt)}
  ${Fe.mainStart([W,1,1])}
    let batchIdx = workgroup_id.z / uniforms.num_heads;
    let headIdx = workgroup_id.z % uniforms.num_heads;
    let sequence_length = uniforms.sequence_length;
    var total_sequence_length = uniforms.total_sequence_length;
    ${Za(mt,xt,!1)}
    let local_offset = local_idx * uniforms.elements_per_thread;
    let offset = (global_idx / ${W}) * uniforms.total_sequence_length + local_offset;
    let seq_causal_length = ${v?"u32(past_sequence_length + workgroup_id.y + 1)":"total_sequence_length"};
    var thread_max_vector = ${me}(-3.402823e+38f);
    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
      thread_max_vector = max(${me}(x[offset + i]), thread_max_vector);
    }
    thread_max[local_idx] = ${(()=>{switch(L){case 1:return"thread_max_vector";case 2:return"max(thread_max_vector.x, thread_max_vector.y)";case 4:return"max(max(thread_max_vector.x, thread_max_vector.y), max(thread_max_vector.z, thread_max_vector.w))";default:throw new Error(`Unsupported components: ${L}`)}})()};
    workgroupBarrier();

    var max_value =  f32(-3.402823e+38f);
    for (var i = 0u; i < ${W}; i++) {
      max_value = max(thread_max[i], max_value);
    }

    var sum_vector = ${me}(0);
    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
      sum_vector += exp(${me}(x[offset + i]) - max_value);
    }
    thread_sum[local_idx] = ${(()=>{switch(L){case 1:return"sum_vector";case 2:return"sum_vector.x + sum_vector.y";case 4:return"sum_vector.x + sum_vector.y + sum_vector.z + sum_vector.w";default:throw new Error(`Unsupported components: ${L}`)}})()};
    workgroupBarrier();

    var sum: f32 = 0;
    for (var i = 0u; i < ${W}; i++) {
      sum += thread_sum[i];
    }

    if (sum == 0) {
      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
        x[offset + i] = ${Ye.type.value}(${jt}(1.0) / ${jt}(seq_causal_length));
      }
    } else {
      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
        var f32input = ${me}(x[offset + i]);
        x[offset + i] = ${Ye.type.value}(exp(f32input - max_value) / sum);
      }
    }
      ${v?`
        for (var total_seq_id: u32 = seq_causal_length; total_seq_id + local_offset < uniforms.total_sequence_length; total_seq_id++) {
          x[offset + total_seq_id] = ${Ye.type.value}(${jt}(0));
        }`:""};
  }`};return{name:"AttentionProbsSoftmax",shaderCache:{hint:`${W};${le};${L}`,inputDependencies:_e},getShaderSource:Ee,getRunData:()=>({outputs:[],dispatchGroup:{x:Math.ceil(E/W),y:C,z:l*p},programUniforms:j})}},Do=(n,l,p,b,C,E,v,x,L)=>{let W=v+E.kvSequenceLength,te=[E.batchSize,E.numHeads,E.sequenceLength,W],$=n>1&&b,j=E.kvNumHeads?E.kvNumHeads:E.numHeads,le=$?[E.batchSize,j,W,E.headSize]:void 0,me=E.nReps?E.nReps:1,_e=E.scale===0?1/Math.sqrt(E.headSize):E.scale,Ee=cs(E.headSize),Fe=E.headSize/Ee,Ye=12,dt={x:Math.ceil(W/Ye),y:Math.ceil(E.sequenceLength/Ye),z:E.batchSize*E.numHeads},mt=[{type:12,data:E.sequenceLength},{type:12,data:Fe},{type:12,data:W},{type:12,data:E.numHeads},{type:12,data:E.headSize},{type:1,data:_e},{type:12,data:v},{type:12,data:E.kvSequenceLength},{type:12,data:me}],xt=$&&b&&Kt.size(b.dims)>0,jt=["type","type"];xt&&jt.push("type"),C&&jt.push("type"),x&&jt.push("type"),L&&jt.push("type");let Gt=[{dims:te,dataType:l.dataType,gpuDataType:0}];$&&Gt.push({dims:le,dataType:l.dataType,gpuDataType:0});let Zt=ar=>{let St=or("q",l.dataType,l.dims,Ee),kr=or("key",p.dataType,p.dims,Ee),fr=[St,kr];if(xt){let vs=or("past_key",b.dataType,b.dims,Ee);fr.push(vs)}C&&fr.push(or("attention_bias",C.dataType,C.dims));let ur=x?or("seq_lens",x.dataType,x.dims):void 0;ur&&fr.push(ur);let Jr=L?or("total_sequence_length_input",L.dataType,L.dims):void 0;Jr&&fr.push(Jr);let Sr=ss("output",l.dataType,te),As=[Sr];$&&As.push(ss("present_key",l.dataType,le,Ee));let Xs=_s(1,Ee),bs=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"alpha",type:"f32"},{name:"past_sequence_length",type:"u32"},{name:"kv_sequence_length",type:"u32"},{name:"n_reps",type:"u32"}];return`
  const TILE_SIZE = ${Ye}u;

  var<workgroup> tileQ: array<${St.type.storage}, ${Ye*Ye}>;
  var<workgroup> tileK: array<${St.type.storage}, ${Ye*Ye}>;
  ${ar.registerUniforms(bs).declareVariables(...fr,...As)}
  ${ar.mainStart([Ye,Ye,1])}
    // x holds the N and y holds the M
    let headIdx = workgroup_id.z % uniforms.num_heads;
    let kvHeadIdx = ${me===1?"headIdx":"headIdx / uniforms.n_reps"};
    let kv_num_heads = ${me===1?"uniforms.num_heads":"uniforms.num_heads / uniforms.n_reps"};
    let batchIdx = workgroup_id.z / uniforms.num_heads;
    let m = workgroup_id.y * TILE_SIZE;
    let n = workgroup_id.x * TILE_SIZE;
    let sequence_length = uniforms.M;
    var total_sequence_length = uniforms.N;
    ${Za(ur,Jr,!0)}
    let absKvHeadIdx = batchIdx * kv_num_heads + kvHeadIdx;
    let qOffset = workgroup_id.z * uniforms.M * uniforms.K + m * uniforms.K;
    ${xt&&$?"let pastKeyOffset = absKvHeadIdx * uniforms.past_sequence_length * uniforms.K;":""};
    let kOffset = absKvHeadIdx * uniforms.kv_sequence_length * uniforms.K;
    ${$?"let presentKeyOffset = absKvHeadIdx * uniforms.N * uniforms.K;":""}
    var value = ${Xs}(0);
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (global_id.y < uniforms.M && w + local_id.x < uniforms.K) {
        tileQ[TILE_SIZE * local_id.y + local_id.x] = q[qOffset + local_id.y * uniforms.K + w + local_id.x];
      }
      if (n + local_id.y < uniforms.N && w + local_id.x < uniforms.K) {
        var idx = TILE_SIZE * local_id.y + local_id.x;
      ${xt&&$?`
              if (n + local_id.y < past_sequence_length) {
                tileK[idx] = past_key[pastKeyOffset + (n + local_id.y) * uniforms.K + w + local_id.x];
              } else if (n + local_id.y - past_sequence_length < uniforms.kv_sequence_length) {
                tileK[idx] = key[kOffset + (n + local_id.y - past_sequence_length) * uniforms.K + w + local_id.x];
              }`:`
          if (n + local_id.y < uniforms.kv_sequence_length) {
            tileK[idx] = key[kOffset + (n + local_id.y) * uniforms.K + w + local_id.x];
          }`}
      ${$?`if (n + local_id.y < present_sequence_length) {
        present_key[presentKeyOffset + (n + local_id.y) * uniforms.K + w + local_id.x] = tileK[idx];
      }`:""}
      }
      workgroupBarrier();

      for (var k: u32 = 0u; k < TILE_SIZE && w+k < uniforms.K; k++) {
          value += ${Xs}(tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * local_id.x + k]);
      }

      workgroupBarrier();
    }

    if (global_id.y < uniforms.M && global_id.x < total_sequence_length) {
      let headOffset = workgroup_id.z * uniforms.M * uniforms.N;
      let outputIdx = headOffset + global_id.y * uniforms.N + global_id.x;
      var sum: f32 = ${(()=>{switch(Ee){case 1:return"value";case 2:return"value.x + value.y";case 4:return"value.x + value.y + value.z + value.w";default:throw new Error(`Unsupported components: ${Ee}`)}})()};
        output[outputIdx] = ${Sr.type.value} (sum * uniforms.alpha) + ${C?"attention_bias[outputIdx]":"0.0"};
    }
  }`};return{name:"AttentionProbs",shaderCache:{hint:`${Ee};${C!==void 0};${b!==void 0};${n}`,inputDependencies:jt},getRunData:()=>({outputs:Gt,dispatchGroup:dt,programUniforms:mt}),getShaderSource:Zt}},BA=(n,l,p,b,C,E,v=void 0,x=void 0)=>{let L=E+C.kvSequenceLength,W=C.nReps?C.nReps:1,te=C.vHiddenSize*W,$=n>1&&b,j=C.kvNumHeads?C.kvNumHeads:C.numHeads,le=$?[C.batchSize,j,L,C.headSize]:void 0,me=[C.batchSize,C.sequenceLength,te],_e=12,Ee={x:Math.ceil(C.vHeadSize/_e),y:Math.ceil(C.sequenceLength/_e),z:C.batchSize*C.numHeads},Fe=[{type:12,data:C.sequenceLength},{type:12,data:L},{type:12,data:C.vHeadSize},{type:12,data:C.numHeads},{type:12,data:C.headSize},{type:12,data:te},{type:12,data:E},{type:12,data:C.kvSequenceLength},{type:12,data:W}],Ye=$&&b&&Kt.size(b.dims)>0,dt=["type","type"];Ye&&dt.push("type"),v&&dt.push("type"),x&&dt.push("type");let mt=[{dims:me,dataType:l.dataType,gpuDataType:0}];$&&mt.push({dims:le,dataType:l.dataType,gpuDataType:0});let xt=jt=>{let Gt=or("probs",l.dataType,l.dims),Zt=or("v",p.dataType,p.dims),ar=[Gt,Zt];Ye&&ar.push(or("past_value",b.dataType,b.dims));let St=v?or("seq_lens",v.dataType,v.dims):void 0;v&&ar.push(St);let kr=x?or("total_sequence_length_input",x.dataType,x.dims):void 0;x&&ar.push(kr);let fr=[ss("output",l.dataType,me)];$&&fr.push(ss("present_value",l.dataType,le));let ur=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"v_hidden_size",type:"u32"},{name:"past_sequence_length",type:"u32"},{name:"kv_sequence_length",type:"u32"},{name:"n_reps",type:"u32"}];return`
  const TILE_SIZE = ${_e}u;
  var<workgroup> tileQ: array<${Gt.type.value}, ${_e*_e}>;
  var<workgroup> tileV: array<${Gt.type.value}, ${_e*_e}>;
  ${jt.registerUniforms(ur).declareVariables(...ar,...fr)}
  ${jt.mainStart([_e,_e,1])}
   let headIdx = workgroup_id.z % uniforms.num_heads;
   let batchIdx = workgroup_id.z / uniforms.num_heads;
   let kvHeadIdx = ${W===1?"headIdx":"headIdx / uniforms.n_reps"};
   let kv_num_heads = ${W===1?"uniforms.num_heads":"uniforms.num_heads / uniforms.n_reps"};
   let m = global_id.y;
   let n = global_id.x;
   let sequence_length = uniforms.M;
   var total_sequence_length = uniforms.K;
   ${Za(St,kr,!0)}
   let offsetA = workgroup_id.z * uniforms.M * uniforms.K + m * uniforms.K;
   let absKvHeadIdx = batchIdx * kv_num_heads + kvHeadIdx; // kvHeadIdx is relative to the batch
   ${Ye&&$?"let pastValueOffset = absKvHeadIdx * uniforms.N * uniforms.past_sequence_length + n;":""};
   let vOffset = absKvHeadIdx * uniforms.N * uniforms.kv_sequence_length + n;
   ${$?"let presentValueOffset = absKvHeadIdx * uniforms.N * uniforms.K + n;":""}
   var value = ${Gt.type.storage}(0);
   for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (m < uniforms.M && w + local_id.x < uniforms.K) {
        tileQ[TILE_SIZE * local_id.y + local_id.x] = probs[offsetA + w + local_id.x];
      }
      if (n < uniforms.N && w + local_id.y < uniforms.K) {
        var idx = TILE_SIZE * local_id.y + local_id.x;
        ${Ye&&$?`
        if (w + local_id.y < past_sequence_length) {
          tileV[idx] = past_value[pastValueOffset + (w + local_id.y) * uniforms.N];
        } else if (w + local_id.y - past_sequence_length < uniforms.kv_sequence_length) {
          tileV[idx] = v[vOffset + (w + local_id.y - past_sequence_length) * uniforms.N];
        }
      `:`
            if (w + local_id.y < uniforms.kv_sequence_length) {
              tileV[idx] = v[vOffset + (w + local_id.y) * uniforms.N];
            }`}
        ${$?`
            if (w + local_id.y < present_sequence_length) {
          present_value[presentValueOffset + (w + local_id.y) * uniforms.N] = tileV[idx];
        }`:""}
      }
     workgroupBarrier();
     for (var k: u32 = 0u; k < TILE_SIZE && w+k < total_sequence_length; k++) {
       value += tileQ[TILE_SIZE * local_id.y + k] * tileV[TILE_SIZE * k + local_id.x];
     }
     workgroupBarrier();
   }

   // we need to transpose output from BNSH_v to BSND_v
   if (m < uniforms.M && n < uniforms.N) {
     let outputIdx = batchIdx * uniforms.M * uniforms.v_hidden_size + m * uniforms.v_hidden_size
       + headIdx * uniforms.N + n;
     output[outputIdx] = value;
   }
  }`};return{name:"AttentionScore",shaderCache:{hint:`${b!==void 0};${n}`,inputDependencies:dt},getRunData:()=>({outputs:mt,dispatchGroup:Ee,programUniforms:Fe}),getShaderSource:xt}},So=(n,l,p,b,C,E,v,x,L,W,te=void 0,$=void 0)=>{let j=Math.min(n.outputCount,1+(v?1:0)+(x?1:0)),le=j>1?W.pastSequenceLength:0,me=le+W.kvSequenceLength,_e=L&&Kt.size(L.dims)>0?L:void 0,Ee=[l,p];j>1&&v&&Kt.size(v.dims)>0&&Ee.push(v),_e&&Ee.push(_e),te&&Ee.push(te),$&&Ee.push($);let Fe=n.compute(Do(j,l,p,v,_e,W,le,te,$),{inputs:Ee,outputs:j>1?[-1,1]:[-1]})[0];n.compute(Pi(Fe,W.batchSize,W.numHeads,le,W.sequenceLength,me,te,$),{inputs:te&&$?[Fe,te,$]:[Fe],outputs:[]});let Ye=[Fe,b];j>1&&x&&Kt.size(x.dims)>0&&Ye.push(x),te&&Ye.push(te),$&&Ye.push($),n.compute(BA(j,Fe,b,x,W,le,te,$),{inputs:Ye,outputs:j>1?[0,2]:[0]})},Go=(n,l)=>{let p=[l.batchSize,l.numHeads,l.sequenceLength,l.headSize],b=l.sequenceLength,C=l.inputHiddenSize,E=l.headSize,v=12,x={x:Math.ceil(l.headSize/v),y:Math.ceil(l.sequenceLength/v),z:l.batchSize*l.numHeads},L=[n.inputs[0],n.inputs[1],n.inputs[2]],W=[{type:12,data:b},{type:12,data:C},{type:12,data:E},{type:12,data:l.numHeads},{type:12,data:l.headSize},{type:12,data:l.hiddenSize},{type:12,data:l.hiddenSize+l.hiddenSize+l.vHiddenSize}],te=$=>{let j=ss("output_q",L[0].dataType,p),le=ss("output_k",L[0].dataType,p),me=ss("output_v",L[0].dataType,p),_e=or("input",L[0].dataType,L[0].dims),Ee=or("weight",L[1].dataType,L[1].dims),Fe=or("bias",L[2].dataType,L[2].dims),Ye=_e.type.storage,dt=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"hidden_size",type:"u32"},{name:"ldb",type:"u32"}];return`
  const TILE_SIZE = ${v}u;
  var<workgroup> tileInput: array<${Ye}, ${v*v}>;
  var<workgroup> tileWeightQ: array<${Ye}, ${v*v}>;
  var<workgroup> tileWeightK: array<${Ye}, ${v*v}>;
  var<workgroup> tileWeightV: array<${Ye}, ${v*v}>;
  ${$.registerUniforms(dt).declareVariables(_e,Ee,Fe,j,le,me)}
  ${$.mainStart([v,v,1])}
    let batchIndex = workgroup_id.z / uniforms.num_heads;
    let headNumber = workgroup_id.z % uniforms.num_heads;
    let m = global_id.y;
    let n = global_id.x;

    let inputOffset = batchIndex * (uniforms.M * uniforms.K) + m * uniforms.K;
    let biasOffsetQ = headNumber * uniforms.head_size;
    let biasOffsetK = uniforms.hidden_size + biasOffsetQ;
    let biasOffsetV = uniforms.hidden_size + biasOffsetK;

    var valueQ = ${Ye}(0);
    var valueK = ${Ye}(0);
    var valueV = ${Ye}(0);
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (m < uniforms.M && w + local_id.x < uniforms.K) {
        tileInput[TILE_SIZE * local_id.y + local_id.x] = input[inputOffset + w + local_id.x];
      }
      if (n < uniforms.N && w + local_id.y < uniforms.K) {
        let offset = n + (w + local_id.y) * uniforms.ldb;
        tileWeightQ[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetQ + offset];
        tileWeightK[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetK + offset];
        tileWeightV[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetV + offset];
      }
      workgroupBarrier();
      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {
        let inputTileOffset = TILE_SIZE * local_id.y + k;
        let weightTileOffset = TILE_SIZE * k + local_id.x;
        valueQ += tileInput[inputTileOffset] * tileWeightQ[weightTileOffset];
        valueK += tileInput[inputTileOffset] * tileWeightK[weightTileOffset];
        valueV += tileInput[inputTileOffset] * tileWeightV[weightTileOffset];
      }

      workgroupBarrier();
    }

    let headOffset = (m * uniforms.N + n) % uniforms.head_size;
    valueQ += bias[headOffset + biasOffsetQ];
    valueK += bias[headOffset + biasOffsetK];
    valueV += bias[headOffset + biasOffsetV];

    let offset = workgroup_id.z * uniforms.M * uniforms.N;
    if (m < uniforms.M && n < uniforms.N) {
      let outputIdx = offset + m * uniforms.N + n;
      output_q[outputIdx] = valueQ;
      output_k[outputIdx] = valueK;
      output_v[outputIdx] = valueV;
    }
  }`};return n.compute({name:"AttentionPrepare",shaderCache:{inputDependencies:["type","type","type"]},getRunData:()=>({outputs:[{dims:p,dataType:n.inputs[0].dataType,gpuDataType:0},{dims:p,dataType:n.inputs[0].dataType,gpuDataType:0},{dims:p,dataType:n.inputs[0].dataType,gpuDataType:0}],dispatchGroup:x,programUniforms:W}),getShaderSource:te},{inputs:L,outputs:[-1,-1,-1]})},Ta=(n,l)=>{let p=bi(n.inputs,l),[b,C,E]=Go(n,p);return So(n,b,C,E,n.inputs[4],void 0,void 0,void 0,n.inputs[5],p)}}),$o,un,uo,Ci,Al=z(()=>{kt(),qr(),Vr(),hs(),ws(),$o=(n,l)=>{if(!n||n.length!==5)throw new Error("BatchNormalization requires 5 inputs");let p=(b,C,E)=>{let v=C.length;if(v!==b.length)throw new Error(`${E}: num dimensions != ${v}`);C.forEach((x,L)=>{if(x!==b[L])throw new Error(`${E}: dim[${L}] do not match`)})};if(n[0].dims.length>1){let b=l.format==="NHWC"?l.spatial?n[0].dims.slice(-1):n[0].dims.slice(-1).concat(n[0].dims.slice(1,n[0].dims.length-1)):n[0].dims.slice(1,l.spatial?2:void 0);p(n[1].dims,b,"Invalid input scale"),p(n[2].dims,b,"Invalid input B"),p(n[3].dims,b,"Invalid input mean"),p(n[4].dims,b,"Invalid input var")}else p(n[1].dims,[1],"Invalid input scale"),p(n[2].dims,[1],"Invalid input B"),p(n[3].dims,[1],"Invalid input mean"),p(n[4].dims,[1],"Invalid input var")},un=(n,l)=>{let{epsilon:p,spatial:b,format:C}=l,E=n[0].dims,v=b?cs(E[E.length-1]):1,x=C==="NHWC"&&E.length>1?v:1,L=Kt.size(E)/v,W=b,te=W?E.length:E,$=or("x",n[0].dataType,n[0].dims,v),j=or("scale",n[1].dataType,n[1].dims,x),le=or("bias",n[2].dataType,n[2].dims,x),me=or("inputMean",n[3].dataType,n[3].dims,x),_e=or("inputVar",n[4].dataType,n[4].dims,x),Ee=ss("y",n[0].dataType,te,v),Fe=()=>{let dt="";if(b)dt=`let cOffset = ${E.length===1?"0u":C==="NHWC"?`outputIndices[${E.length-1}] / ${v}`:"outputIndices[1]"};`;else if(C==="NCHW")dt=`
            ${Ee.indicesSet("outputIndices","0","0")}
            let cOffset = ${Ee.indicesToOffset("outputIndices")};`;else{dt=`var cIndices = ${j.type.indices}(0);
                       cIndices[0] = outputIndices[${E.length-1}];`;for(let mt=1;mt<j.rank;mt++)dt+=`cIndices[${mt}] = outputIndices[${mt}];`;dt+=`let cOffset = ${j.indicesToOffset("cIndices")};`}return dt},Ye=dt=>`
  const epsilon = ${p};
  ${dt.registerUniform("outputSize","u32").declareVariables($,j,le,me,_e,Ee)}
  ${dt.mainStart()}
  ${dt.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
    var outputIndices = ${Ee.offsetToIndices(`global_idx * ${v}`)};
    ${Fe()}
    let scale = ${j.getByOffset("cOffset")};
    let bias = ${le.getByOffset("cOffset")};
    let inputMean = ${me.getByOffset("cOffset")};
    let inputVar = ${_e.getByOffset("cOffset")};
    let x = ${$.getByOffset("global_idx")};
    let value = (x - inputMean) * inverseSqrt(inputVar + epsilon) * scale + bias;
    ${Ee.setByOffset("global_idx","value")}
  }`;return{name:"BatchNormalization",shaderCache:{hint:`${l.epsilon}_${l.format}_${b}_${v}`,inputDependencies:W?["rank","type","type","type","type"]:void 0},getShaderSource:Ye,getRunData:()=>({outputs:[{dims:n[0].dims,dataType:n[0].dataType}],dispatchGroup:{x:Math.ceil(L/64)},programUniforms:W?[{type:12,data:L},...Rr(E)]:[{type:12,data:L}]})}},uo=n=>Xr(n),Ci=(n,l)=>{let{inputs:p,outputCount:b}=n,C=uo({...l,outputCount:b});if(B.webgpu.validateInputContent&&$o(p,C),l.trainingMode)throw new Error("BatchNormalization trainingMode is not supported yet.");n.compute(un(p,C))}}),TA,eA,tA,Di=z(()=>{Vr(),ws(),TA=n=>{if(n[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![320,640,1280].includes(n[0].dims[2]))throw new Error("number of channels should be 320, 640 or 1280");if(n[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(n[0].dims[2]!==n[1].dims[0])throw new Error("last dimension of input and bias are not the same")},eA=n=>{let l=n[0].dims,p=n[0].dims[2],b=Kt.size(l)/4,C=n[0].dataType,E=or("input",C,l,4),v=or("bias",C,[p],4),x=or("residual",C,l,4),L=ss("output",C,l,4);return{name:"BiasAdd",getRunData:()=>({outputs:[{dims:l,dataType:n[0].dataType}],dispatchGroup:{x:Math.ceil(b/64)}}),getShaderSource:W=>`
  const channels = ${p}u / 4;
  ${W.declareVariables(E,v,x,L)}

  ${W.mainStart()}
    ${W.guardAgainstOutOfBoundsWorkgroupSizes(b)}
    let value = ${E.getByOffset("global_idx")}
      + ${v.getByOffset("global_idx % channels")} + ${x.getByOffset("global_idx")};
    ${L.setByOffset("global_idx","value")}
  }`}},tA=n=>{TA(n.inputs),n.compute(eA(n.inputs))}}),Fo,ea,PA,rA,Si,sA,Ra,DA,aA,go,On,zo,nA,ui,SA,Oo,fo,po,Qo,ll,GA,dn,No,gn,FA,iA,Yn,ba,zA,Gi,ho,cl,oA,OA,ul,wi,di,AA,eo,rn,na,mo,dl,Fi,Ui,Hi=z(()=>{qr(),Vr(),hs(),ws(),Fo=(n,l,p,b,C,E,v)=>{let x=Math.ceil(l/4),L="";typeof C=="string"?L=`${C}(a)`:L=C("a");let W=or("inputData",p,[x],4),te=ss("outputData",b,[x],4),$=[{name:"vec_size",type:"u32"}];return v&&$.push(...v),`
      ${n.registerUniforms($).declareVariables(W,te)}

  ${E??""}

  ${n.mainStart()}
    ${n.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}

    let a = ${W.getByOffset("global_idx")};
    ${te.setByOffset("global_idx",L)}
  }`},ea=(n,l,p,b,C,E=n.dataType,v,x)=>{let L=[{type:12,data:Math.ceil(Kt.size(n.dims)/4)}];return v&&L.push(...v),{name:l,shaderCache:{hint:C,inputDependencies:["type"]},getShaderSource:W=>Fo(W,Kt.size(n.dims),n.dataType,E,p,b,x),getRunData:W=>({outputs:[{dims:n.dims,dataType:E}],dispatchGroup:{x:Math.ceil(Kt.size(W[0].dims)/64/4)},programUniforms:L})}},PA=n=>{n.compute(ea(n.inputs[0],"Abs","abs"))},rA=n=>{n.compute(ea(n.inputs[0],"Acos","acos"))},Si=n=>{n.compute(ea(n.inputs[0],"Acosh","acosh"))},sA=n=>{n.compute(ea(n.inputs[0],"Asin","asin"))},Ra=n=>{n.compute(ea(n.inputs[0],"Asinh","asinh"))},DA=n=>{n.compute(ea(n.inputs[0],"Atan","atan"))},aA=n=>{n.compute(ea(n.inputs[0],"Atanh","atanh"))},go=n=>Xr(n),On=(n,l)=>{let p;switch(l.to){case 10:p="vec4<f16>";break;case 1:p="vec4<f32>";break;case 12:p="vec4<u32>";break;case 6:p="vec4<i32>";break;case 9:p="vec4<bool>";break;default:throw new RangeError(`not supported type (specified in attribute 'to' from 'Cast' operator): ${l.to}`)}n.compute(ea(n.inputs[0],"Cast",p,void 0,l.cacheKey,l.to))},zo=n=>{let l,p,b=n.length>=2&&n[1].data!==0,C=n.length>=3&&n[2].data!==0;switch(n[0].dataType){case 1:l=b?n[1].getFloat32Array()[0]:-34028234663852886e22,p=C?n[2].getFloat32Array()[0]:34028234663852886e22;break;case 10:l=b?n[1].getUint16Array()[0]:64511,p=C?n[2].getUint16Array()[0]:31743;break;default:throw new Error("Unsupport data type")}return Xr({min:l,max:p})},nA=(n,l)=>{let p=l||zo(n.inputs),b=_s(n.inputs[0].dataType);n.compute(ea(n.inputs[0],"Clip",C=>`clamp(${C}, vec4<${b}>(uniforms.min), vec4<${b}>(uniforms.max))`,void 0,p.cacheKey,void 0,[{type:n.inputs[0].dataType,data:p.min},{type:n.inputs[0].dataType,data:p.max}],[{name:"min",type:b},{name:"max",type:b}]),{inputs:[0]})},ui=n=>{n.compute(ea(n.inputs[0],"Ceil","ceil"))},SA=n=>{n.compute(ea(n.inputs[0],"Cos","cos"))},Oo=n=>{n.compute(ea(n.inputs[0],"Cosh","cosh"))},fo=n=>Xr(n),po=(n,l)=>{let p=_s(n.inputs[0].dataType);n.compute(ea(n.inputs[0],"Elu",b=>`elu_vf32(${b})`,`
  const elu_alpha_ = ${p}(${l.alpha});

  fn elu_f32(a: ${p}) -> ${p} {
  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);
  }

  fn elu_vf32(v: vec4<${p}>) -> vec4<${p}> {
  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));
  }`,l.cacheKey))},Qo=(n="f32")=>`
const r0: ${n} = 0.3275911;
const r1: ${n} = 0.254829592;
const r2: ${n} = -0.284496736;
const r3: ${n} = 1.421413741;
const r4: ${n} = -1.453152027;
const r5: ${n} = 1.061405429;

fn erf_vf32(v: vec4<${n}>) -> vec4<${n}> {
  let absv = abs(v);
  let x = 1.0 / (1.0 + r0 * absv);
  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));
}`,ll=n=>{let l=_s(n.inputs[0].dataType);n.compute(ea(n.inputs[0],"Erf",p=>`erf_vf32(${p})`,Qo(l)))},GA=n=>{n.compute(ea(n.inputs[0],"Exp","exp"))},dn=n=>{n.compute(ea(n.inputs[0],"Floor","floor"))},No=n=>{let l=_s(n.inputs[0].dataType);n.compute(ea(n.inputs[0],"Gelu",p=>`0.5 * ${p} * (1.0 + erf_vf32(${p} * 0.7071067811865475))`,Qo(l)))},gn=(n,l)=>{let p=_s(n.inputs[0].dataType);n.compute(ea(n.inputs[0],"LeakyRelu",b=>`select(leaky_relu_alpha_ * ${b}, ${b}, ${b} >= vec4<${p}>(0.0))`,`const leaky_relu_alpha_ = ${p}(${l.alpha});`,l.cacheKey))},FA=n=>{n.compute(ea(n.inputs[0],"Not",l=>`!${l}`))},iA=n=>{n.compute(ea(n.inputs[0],"Neg",l=>`-${l}`))},Yn=n=>{n.compute(ea(n.inputs[0],"Reciprocal",l=>`1.0/${l}`))},ba=n=>{let l=_s(n.inputs[0].dataType);n.compute(ea(n.inputs[0],"Relu",p=>`select(vec4<${l}>(0.0), ${p}, ${p} > vec4<${l}>(0.0))`))},zA=n=>{n.compute(ea(n.inputs[0],"Sigmoid",l=>`(1.0 / (1.0 + exp(-${l})))`))},Gi=n=>Xr(n),ho=(n,l)=>{let p=_s(n.inputs[0].dataType);n.compute(ea(n.inputs[0],"HardSigmoid",b=>`max(vec4<${p}>(0.0), min(vec4<${p}>(1.0), ${l.alpha} * ${b} + vec4<${p}>(${l.beta})))`,void 0,l.cacheKey))},cl=n=>{n.compute(ea(n.inputs[0],"Sin","sin"))},oA=n=>{n.compute(ea(n.inputs[0],"Sinh","sinh"))},OA=n=>{n.compute(ea(n.inputs[0],"Sqrt","sqrt"))},ul=n=>{n.compute(ea(n.inputs[0],"Tan","tan"))},wi=n=>`sign(${n}) * (1 - exp(-2 * abs(${n}))) / (1 + exp(-2 * abs(${n})))`,di=n=>{n.compute(ea(n.inputs[0],"Tanh",wi))},AA=(n="f32")=>`
const fast_gelu_a: ${n} = 0.5;
const fast_gelu_b: ${n} = 0.7978845608028654;
const fast_gelu_c: ${n} = 0.035677408136300125;

fn tanh_v(v: vec4<${n}>) -> vec4<${n}> {
  return ${wi("v")};
}
`,eo=n=>`(fast_gelu_a + fast_gelu_a * tanh_v(${n} * (fast_gelu_c * ${n} * ${n} + fast_gelu_b))) * ${n}`,rn=n=>{let l=_s(n.inputs[0].dataType);n.compute(ea(n.inputs[0],"FastGelu",eo,AA(l),void 0,n.inputs[0].dataType))},na=(n,l)=>{let p=_s(n.inputs[0].dataType);return n.compute(ea(n.inputs[0],"ThresholdedRelu",b=>`select(vec4<${p}>(0.0), ${b}, ${b} > thresholded_relu_alpha_)`,`const thresholded_relu_alpha_ = vec4<${p}>(${l.alpha});`,l.cacheKey)),0},mo=n=>{n.compute(ea(n.inputs[0],"Log","log"))},dl=(n,l)=>`
const alpha = vec4<${n}>(${l});
const one = ${n}(1.0);
const zero = ${n}(0.0);

fn quick_gelu_impl(x: vec4<${n}>) -> vec4<${n}> {
  let v = x *alpha;
  var x1 : vec4<${n}>;
  for (var i = 0; i < 4; i = i + 1) {
    if (v[i] >= zero) {
      x1[i] = one / (one + exp(-v[i]));
    } else {
      x1[i] = one - one / (one + exp(v[i]));
    }
  }
  return x * x1;
}
`,Fi=n=>`quick_gelu_impl(${n})`,Ui=(n,l)=>{let p=_s(n.inputs[0].dataType);n.compute(ea(n.inputs[0],"QuickGelu",Fi,dl(p,l.alpha),l.cacheKey,n.inputs[0].dataType))}}),QA,bn,NA,gl=z(()=>{Vr(),ws(),Hi(),QA=n=>{if(n[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![2560,5120,10240].includes(n[0].dims[2]))throw new Error("hidden state should be 2560, 5120 or 10240");if(n[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(n[0].dims[2]!==n[1].dims[0])throw new Error("last dimension of input and bias are not the same")},bn=n=>{let l=n[0].dims.slice();l[2]=l[2]/2;let p=or("input",n[0].dataType,n[0].dims,4),b=or("bias",n[0].dataType,[n[0].dims[2]],4),C=ss("output",n[0].dataType,l,4),E=Kt.size(l)/4,v=es(n[0].dataType);return{name:"BiasSplitGelu",getRunData:()=>({outputs:[{dims:l,dataType:n[0].dataType}],dispatchGroup:{x:Math.ceil(E/64)}}),getShaderSource:x=>`
  const M_SQRT2 = sqrt(2.0);
  const halfChannels = ${n[0].dims[2]/4/2}u;

  ${x.declareVariables(p,b,C)}

  ${Qo(v)}

  ${x.mainStart()}
    ${x.guardAgainstOutOfBoundsWorkgroupSizes(E)}
    let biasIdx = global_idx % halfChannels;
    let batchIndex = global_idx / halfChannels;
    let inputOffset = biasIdx + batchIndex * halfChannels * 2;
    let valueLeft = input[inputOffset] + bias[biasIdx];
    let valueRight = input[inputOffset + halfChannels] + bias[biasIdx + halfChannels];
    let geluRight = valueRight * 0.5 * (erf_vf32(valueRight / M_SQRT2) + 1);

    ${C.setByOffset("global_idx","valueLeft * geluRight")}
  }`}},NA=n=>{QA(n.inputs),n.compute(bn(n.inputs))}}),bo,Lo,Ca,lA,cA,to,fl,Co,os,t,r,s,a,i=z(()=>{qr(),Vr(),ws(),bo=(n,l,p,b,C,E,v,x,L,W,te,$)=>{let j,le;typeof x=="string"?j=le=(Ye,dt)=>`${x}((${Ye}),(${dt}))`:typeof x=="function"?j=le=x:(j=x.scalar,le=x.vector);let me=ss("outputData",te,b.length,4),_e=or("aData",L,l.length,4),Ee=or("bData",W,p.length,4),Fe;if(C)if(E){let Ye=Kt.size(l)===1,dt=Kt.size(p)===1,mt=l.length>0&&l[l.length-1]%4===0,xt=p.length>0&&p[p.length-1]%4===0;Ye||dt?Fe=me.setByOffset("global_idx",le(Ye?`${_e.type.value}(${_e.getByOffset("0")}.x)`:_e.getByOffset("global_idx"),dt?`${Ee.type.value}(${Ee.getByOffset("0")}.x)`:Ee.getByOffset("global_idx"))):Fe=`
            let outputIndices = ${me.offsetToIndices("global_idx * 4u")};
            let offsetA = ${_e.broadcastedIndicesToOffset("outputIndices",me)};
            let offsetB = ${Ee.broadcastedIndicesToOffset("outputIndices",me)};
            ${me.setByOffset("global_idx",le(v||mt?_e.getByOffset("offsetA / 4u"):`${_e.type.value}(${_e.getByOffset("offsetA / 4u")}[offsetA % 4u])`,v||xt?Ee.getByOffset("offsetB / 4u"):`${Ee.type.value}(${Ee.getByOffset("offsetB / 4u")}[offsetB % 4u])`))}
          `}else Fe=me.setByOffset("global_idx",le(_e.getByOffset("global_idx"),Ee.getByOffset("global_idx")));else{if(!E)throw new Error("no necessary to use scalar implementation for element-wise binary op implementation.");let Ye=(dt,mt,xt="")=>{let jt=`aData[indexA${mt}][componentA${mt}]`,Gt=`bData[indexB${mt}][componentB${mt}]`;return`
            let outputIndices${mt} = ${me.offsetToIndices(`global_idx * 4u + ${mt}u`)};
            let offsetA${mt} = ${_e.broadcastedIndicesToOffset(`outputIndices${mt}`,me)};
            let offsetB${mt} = ${Ee.broadcastedIndicesToOffset(`outputIndices${mt}`,me)};
            let indexA${mt} = offsetA${mt} / 4u;
            let indexB${mt} = offsetB${mt} / 4u;
            let componentA${mt} = offsetA${mt} % 4u;
            let componentB${mt} = offsetB${mt} % 4u;
            ${dt}[${mt}] = ${xt}(${j(jt,Gt)});
          `};te===9?Fe=`
            var data = vec4<u32>(0);
            ${Ye("data",0,"u32")}
            ${Ye("data",1,"u32")}
            ${Ye("data",2,"u32")}
            ${Ye("data",3,"u32")}
            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:Fe=`
            ${Ye("outputData[global_idx]",0)}
            ${Ye("outputData[global_idx]",1)}
            ${Ye("outputData[global_idx]",2)}
            ${Ye("outputData[global_idx]",3)}
          `}return`
        ${n.registerUniform("vec_size","u32").declareVariables(_e,Ee,me)}

        ${$??""}

        ${n.mainStart()}
        ${n.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${Fe}
      }`},Lo=(n,l,p,b,C,E,v=p.dataType)=>{let x=p.dims.map(_e=>Number(_e)??1),L=b.dims.map(_e=>Number(_e)??1),W=!Kt.areEqual(x,L),te=x,$=Kt.size(x),j=!1,le=!1,me=[W];if(W){let _e=Or.calcShape(x,L,!1);if(!_e)throw new Error("Can't perform binary op on the given tensors");te=_e.slice(),$=Kt.size(te);let Ee=Kt.size(x)===1,Fe=Kt.size(L)===1,Ye=x.length>0&&x[x.length-1]%4===0,dt=L.length>0&&L[L.length-1]%4===0;me.push(Ee),me.push(Fe),me.push(Ye),me.push(dt);let mt=1;for(let xt=1;xt<te.length;xt++){let jt=x[x.length-xt],Gt=L[L.length-xt];if(jt===Gt)mt*=jt;else break}mt%4===0?(le=!0,j=!0):(Ee||Fe||Ye||dt)&&(j=!0)}else j=!0;return me.push(j),{name:n,shaderCache:{hint:l+me.map(_e=>_e.toString()).join("_"),inputDependencies:["rank","rank"]},getShaderSource:_e=>bo(_e,x,L,te,j,W,le,C,p.dataType,b.dataType,v,E),getRunData:()=>({outputs:[{dims:te,dataType:v}],dispatchGroup:{x:Math.ceil($/64/4)},programUniforms:[{type:12,data:Math.ceil(Kt.size(te)/4)},...Rr(x,L,te)]})}},Ca=(n,l,p,b,C,E)=>{n.compute(Lo(l,C??"",n.inputs[0],n.inputs[1],p,b,E))},lA=n=>{Ca(n,"Add",(l,p)=>`${l}+${p}`)},cA=n=>{Ca(n,"Div",(l,p)=>`${l}/${p}`)},to=n=>{Ca(n,"Equal",{scalar:(l,p)=>`u32(${l}==${p})`,vector:(l,p)=>`vec4<u32>(${l}==${p})`},void 0,void 0,9)},fl=n=>{Ca(n,"Mul",(l,p)=>`${l}*${p}`)},Co=n=>{let l=or("input",n.inputs[0].dataType,n.inputs[0].dims).type.value;Ca(n,"Pow",{scalar:(p,b)=>`pow_custom(${p},${b})`,vector:(p,b)=>`pow_vector_custom(${p},${b})`},`
    fn pow_custom(a : ${l}, b : ${l}) -> ${l} {
      if (b == ${l}(0.0)) {
        return ${l}(1.0);
      } else if (a < ${l}(0.0) && f32(b) != floor(f32(b))) {
        return ${l}(pow(f32(a), f32(b))); // NaN
      }
      return select(sign(a), ${l}(1.0), round(f32(abs(b) % ${l}(2.0))) != 1.0) * ${l}(${l==="i32"?"round":""}(pow(f32(abs(a)), f32(b))));
    }
    fn pow_vector_custom(a : vec4<${l}>, b : vec4<${l}>) -> vec4<${l}> {
      // TODO: implement vectorized pow
      return vec4<${l}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));
    }
      `)},os=n=>{Ca(n,"Sub",(l,p)=>`${l}-${p}`)},t=n=>{Ca(n,"Greater",{scalar:(l,p)=>`u32(${l}>${p})`,vector:(l,p)=>`vec4<u32>(${l}>${p})`},void 0,void 0,9)},r=n=>{Ca(n,"Less",{scalar:(l,p)=>`u32(${l}<${p})`,vector:(l,p)=>`vec4<u32>(${l}<${p})`},void 0,void 0,9)},s=n=>{Ca(n,"GreaterOrEqual",{scalar:(l,p)=>`u32(${l}>=${p})`,vector:(l,p)=>`vec4<u32>(${l}>=${p})`},void 0,void 0,9)},a=n=>{Ca(n,"LessOrEqual",{scalar:(l,p)=>`u32(${l}<=${p})`,vector:(l,p)=>`vec4<u32>(${l}<=${p})`},void 0,void 0,9)}}),o,d,f,m,M,y,P=z(()=>{qr(),Vr(),hs(),ws(),o=(n,l)=>{if(!n||n.length<1)throw new Error("too few inputs");let p=0,b=n[p],C=b.dataType,E=b.dims.length;n.forEach((v,x)=>{if(x!==p){if(v.dataType!==C)throw new Error("input tensors should be one type");if(v.dims.length!==E)throw new Error("input tensors should have the same shape");v.dims.forEach((L,W)=>{if(W!==l&&L!==b.dims[W])throw new Error("non concat dimensions must match")})}})},d=(n,l)=>`
  fn calculateInputIndex(index: u32) -> u32 {
    let sizeInConcatAxis = array<u32, ${n}u>(${l});
    for (var i: u32 = 0u; i < ${n}; i += 1u ) {
      if (index < sizeInConcatAxis[i]) {
        return i;
      }
    }
    return ${n}u;
  }`,f=(n,l)=>{let p=n.length,b=[];for(let C=0;C<p;++C){let E=l.setByOffset("global_idx",n[C].getByIndices("indices"));p===1?b.push(E):C===0?b.push(`if (inputIndex == ${C}u) { ${E} }`):C===p-1?b.push(`else { ${E} }`):b.push(`else if (inputIndex == ${C}) { ${E} }`)}return b.join(`
`)},m=(n,l,p,b)=>{let C=Kt.size(p),E=new Array(n.length),v=new Array(n.length),x=0,L=[],W=[],te=[{type:12,data:C}];for(let _e=0;_e<n.length;++_e)x+=n[_e].dims[l],E[_e]=x,W.push(n[_e].dims.length),v[_e]=or(`input${_e}`,b,W[_e]),L.push("rank"),te.push({type:12,data:E[_e]});for(let _e=0;_e<n.length;++_e)te.push(...Rr(n[_e].dims));te.push(...Rr(p));let $=ss("output",b,p.length),j=$.indicesGet("indices",l),le=Array.from(Array(E.length).keys()).map(_e=>`uniforms.sizeInConcatAxis${_e}`).join(","),me=_e=>`

  ${(()=>{_e.registerUniform("outputSize","u32");for(let Ee=0;Ee<n.length;Ee++)_e.registerUniform(`sizeInConcatAxis${Ee}`,"u32");return _e.declareVariables(...v,$)})()}

  ${d(E.length,le)}

  ${_e.mainStart()}
    ${_e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

    var indices = ${$.offsetToIndices("global_idx")};

    let inputIndex = calculateInputIndex(${j});
    if (inputIndex != 0u) {
      let sizeInConcatAxis = array<u32, ${E.length}u>(${le});
      ${j} -= sizeInConcatAxis[inputIndex - 1u];
    }

    ${f(v,$)}
  }`;return{name:"Concat",shaderCache:{hint:`${l}`,inputDependencies:L},getRunData:()=>({outputs:[{dims:p,dataType:b}],dispatchGroup:{x:Math.ceil(C/64)},programUniforms:te}),getShaderSource:me}},M=(n,l)=>{let p=n.inputs,b=p[0].dims,C=Kt.normalizeAxis(l.axis,b.length);o(p,C);let E=b.slice();E[C]=p.reduce((x,L)=>x+(L.dims.length>C?L.dims[C]:0),0);let v=p.filter(x=>Kt.size(x.dims)>0);n.compute(m(v,C,E,p[0].dataType),{inputs:v})},y=n=>Xr({axis:n.axis})}),q,ae,de,ye,Be=z(()=>{qr(),Vr(),q=(n,l,p="f32")=>{switch(n.activation){case"Relu":return`value = max(value, ${l}(0.0));`;case"Sigmoid":return`value = (${l}(1.0) / (${l}(1.0) + exp(-value)));`;case"Clip":return`value = clamp(value, ${l}(${p}(uniforms.clip_min)), ${l}(${p}(uniforms.clip_max)));`;case"HardSigmoid":return`value = max(${l}(0.0), min(${l}(1.0), ${p}(uniforms.alpha) * value + ${p}(uniforms.beta)));`;case"LeakyRelu":return`value = select(${p}(uniforms.alpha) * value, value, value >= ${l}(0.0));`;case"Tanh":return`let e2x = exp(-2.0 * abs(value));
              value = sign(value) * (1.0 - e2x) / (1.0 + e2x);
        `;case"":return"";default:throw new Error(`Unsupported activation ${n.activation}`)}},ae=(n,l)=>{n.activation==="Clip"?l.push({type:1,data:n.clipMax},{type:1,data:n.clipMin}):n.activation==="HardSigmoid"?l.push({type:1,data:n.alpha},{type:1,data:n.beta}):n.activation==="LeakyRelu"&&l.push({type:1,data:n.alpha})},de=(n,l)=>{n.activation==="Clip"?l.push({name:"clip_max",type:"f32"},{name:"clip_min",type:"f32"}):n.activation==="HardSigmoid"?l.push({name:"alpha",type:"f32"},{name:"beta",type:"f32"}):n.activation==="LeakyRelu"&&l.push({name:"alpha",type:"f32"})},ye=n=>{let l=(n==null?void 0:n.activation)||"";if(l==="HardSigmoid"){let[p,b]=(n==null?void 0:n.activation_params)||[.2,.5];return{activation:l,alpha:p,beta:b}}else if(l==="Clip"){let[p,b]=(n==null?void 0:n.activation_params)||[Rs,Ws];return{activation:l,clipMax:b,clipMin:p}}else if(l==="LeakyRelu"){let[p]=(n==null?void 0:n.activation_params)||[.01];return{activation:l,alpha:p}}return{activation:l}}}),qe,ot,pt=z(()=>{qe=(n,l)=>{switch(n){case 1:return l;case 2:return`vec2<${l}>`;case 3:return`vec3<${l}>`;case 4:return`vec4<${l}>`;default:throw new Error(`${n}-component is not supported.`)}},ot=n=>`
      ${n?"value = value + getBiasByOutputCoords(coords);":""}
      `}),Mt,Ft=z(()=>{Mt=n=>`
fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
}
fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
    i32(${n}.x), i32(${n}.y), i32(${n}.z), 1));
}
`}),Lt,Xt,Ar=z(()=>{qr(),Vr(),ws(),Be(),Lt=(n,l,p,b,C)=>{let E=b-p;return`
      ${Array.from({length:p}).map((v,x)=>`
      if (${Ir(l.shape,x,l.rank)} != 1) {
        ${l.indicesSet(n,x,Ir(C,x+E,b))}
      } else {
        ${l.indicesSet(n,x,0)}
      }`).join("")}
`},Xt=(n,l,p,b,C=!1,E)=>{let v=n[0].dims,x=n[1].dims,L=v[v.length-2],W=x[x.length-1],te=v[v.length-1],$=cs(W),j=cs(te),le=cs(L),me=Kt.size(p)/$/le,_e=n.length>2,Ee=b?b.slice(0,-2):p.slice(0,-2),Fe=[Kt.size(Ee),L,W],Ye=[{type:12,data:me},{type:12,data:L},{type:12,data:W},{type:12,data:te}];ae(l,Ye),Ye.push(...Rr(Ee,v,x)),_e&&Ye.push(...Rr(n[2].dims)),Ye.push(...Rr(Fe));let dt=mt=>{let xt=kA("batch_dims",n[0].dataType,Ee.length),jt=or("a",n[0].dataType,v.length,j),Gt=or("b",n[1].dataType,x.length,$),Zt=ss("output",n[0].dataType,Fe.length,$),ar=es(Zt.type.tensor),St=q(l,Zt.type.value,ar),kr=[jt,Gt],fr="";if(_e){let Sr=C?$:1;kr.push(or("bias",n[2].dataType,n[2].dims.length,Sr)),fr=`${C?`value += bias[col / ${Sr}];`:`value += ${Zt.type.value}(bias[row + i]);`}`}let ur=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"}];de(l,ur);let Jr=()=>{let Sr=`var a_data: ${jt.type.value};`;for(let As=0;As<j;As++)Sr+=`
              let b_data${As} = b[(b_offset + (k + ${As}) * uniforms.N + col) / ${$}];`;for(let As=0;As<le;As++){Sr+=`a_data = a[(a_offset + (row + ${As}) * uniforms.K + k) / ${j}];`;for(let Xs=0;Xs<j;Xs++)Sr+=`
            values[${As}] = fma(${Gt.type.value}(a_data${j===1?"":`[${Xs}]`}), b_data${Xs}, values[${As}]);
`}return Sr};return`
  ${mt.registerUniforms(ur).registerInternalVariables(xt).declareVariables(...kr,Zt)}
  ${mt.mainStart()}
    ${mt.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let col = (global_idx % (uniforms.N / ${$})) * ${$};
    var index1 = global_idx / (uniforms.N / ${$});
    let stride1 = uniforms.M / ${le};
    let row = (index1 % stride1) * ${le};
    let batch = index1 / stride1;

    ${p.length===2?"":`let batch_indices = ${xt.offsetToIndices("batch")};`}

    var a_indices: ${jt.type.indices};
    ${Lt("a_indices",jt,jt.rank-2,xt.rank,"batch_indices")}
    ${jt.indicesSet("a_indices",jt.rank-2,0)}
    ${jt.indicesSet("a_indices",jt.rank-1,0)}
    let a_offset = ${jt.indicesToOffset("a_indices")};

    var b_indices: ${Gt.type.indices};
    ${Lt("b_indices",Gt,Gt.rank-2,xt.rank,"batch_indices")}
    ${Gt.indicesSet("b_indices",Gt.rank-2,0)}
    ${Gt.indicesSet("b_indices",Gt.rank-1,0)}
    let b_offset = ${Gt.indicesToOffset("b_indices")};
    var values: array<${Zt.type.value}, ${le}>;
    for (var k: u32 = 0u; k < uniforms.K; k = k + ${j}) {
      ${Jr()}
    }
    for (var i = 0u; i < ${le}u; i++) {
      var value = values[i];
      ${fr}
      ${St}
      let cur_indices = ${Zt.type.indices}(batch, row + i, col);
      let offset = ${Zt.indicesToOffset("cur_indices")};
      ${Zt.setByOffset(`offset / ${$}`,"value")};
    }
  }
  `};return{name:"MatMulNaive",shaderCache:{hint:`${l.activation};${$};${j};${le};${C}`,inputDependencies:_e?["rank","rank","rank"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:E?E(p):p,dataType:n[0].dataType}],dispatchGroup:{x:Math.ceil(me/64)},programUniforms:Ye}),getShaderSource:dt}}}),Mr,Tr,Yr,$r,ls,Ts,Hs,$s,ga=z(()=>{qr(),Vr(),ws(),Be(),Ar(),pt(),Mr=(n,l)=>n?`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          kStart + inputRow,
          globalRowStart / innerElementSize + inputCol${l?", batchIndices":""});
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          globalRow + innerRow,
          kStart / innerElementSize + inputCol${l?", batchIndices":""});
        `,Tr=(n,l)=>n?`
        let ACached0 = mm_Asub[k * innerElementSize][localRow];
        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];
        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];
        ${l===3?"":"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];"}
        for (var i = 0; i < rowPerThread; i = i + 1) {
          acc[i] = BCached0 * ACached0[i] + acc[i];
          acc[i] = BCached1 * ACached1[i] + acc[i];
          acc[i] = BCached2 * ACached2[i] + acc[i];
          ${l===3?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}
        }`:`
        for (var i = 0; i < rowPerThread; i = i + 1) {
          let ACached = mm_Asub[tileRow + i][k];
          acc[i] = BCached0 * ACached.x + acc[i];
          acc[i] = BCached1 * ACached.y + acc[i];
          acc[i] = BCached2 * ACached.z + acc[i];
          ${l===3?"":"acc[i] = BCached3 * ACached.w + acc[i];"}
        }`,Yr=(n,l,p="f32",b,C=!1,E=32,v=!1,x=32)=>{let L=l[1]*n[1],W=l[0]*n[0],te=C?L:E,$=C?E:L,j=te/l[0],le=E/l[1];if(!((C&&j===4&&n[1]===4||!C&&(j===3||j===4))&&te%l[0]===0&&E%l[1]===0&&n[0]===4))throw new Error(`If transposeA ${C} is true, innerElementSize ${j} and workPerThread[1] ${n[1]} must be 4.
      Otherwise, innerElementSize ${j} must be 3 or 4.
  tileAWidth ${te} must be divisible by workgroupSize[0]${l[0]}. tileInner ${E} must be divisible by workgroupSize[1] ${l[1]}. colPerThread ${n[0]} must be 4.`);return`
var<workgroup> mm_Asub: array<array<vec${j}<${p}>, ${te/j}>, ${$}>;
var<workgroup> mm_Bsub: array<array<vec4<${p}>, ${W/n[0]}>, ${E}>;

const rowPerThread = ${n[1]};
const colPerThread = ${n[0]};
const innerElementSize = ${j};
const tileInner = ${E};

@compute @workgroup_size(${l[0]}, ${l[1]}, ${l[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
  let localRow = i32(localId.y);
  let tileRow = localRow * rowPerThread;
  let tileCol = i32(localId.x);

  let globalRow =i32(globalId.y) * rowPerThread;
  let globalCol = i32(globalId.x);
  let batch = ${v?"0":"i32(globalId.z)"};
  ${b?`let batchIndices = ${b.offsetToIndices("u32(batch)")};`:""}
  let globalRowStart = i32(workgroupId.y) * ${L};

  let num_tiles = ${v?`${Math.ceil(x/E)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};
  var kStart = ${v?`i32(globalId.z) * ${x}`:"0"};

  var acc: array<vec4<${p}>, rowPerThread>;

  // Loop over shared dimension.
  let tileRowB = localRow * ${le};
  for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let inputRow = tileRow + innerRow;
          let inputCol = tileCol;
          ${Mr(C,b)}
      }

      // Load one tile of B into local memory.
      for (var innerRow = 0; innerRow < ${le}; innerRow = innerRow + 1) {
          let inputRow = tileRowB + innerRow;
          let inputCol = tileCol;
          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol${b?", batchIndices":""});
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {
          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];
          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];
          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];
          ${j===3?"":"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];"}

          ${Tr(C,j)}
      }

      workgroupBarrier();
  }

  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);
  }
}`},$r=(n,l)=>n?`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              kStart + inputRow,
              globalRowStart + inputCol${l?", batchIndices":""});
            `:`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              globalRowStart + inputRow,
              kStart + inputCol${l?", batchIndices":""});
            `,ls=n=>n?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];",Ts=(n,l,p="f32",b,C=!1,E=32,v=!1,x=32,L=!1)=>{let W=n[1]*l[1],te=n[0]*l[0],$=C?W:E,j=C?E:W;if(!(j%l[1]===0&&$%l[0]===0&&E%l[1]===0))throw new Error(`tileAHight ${j} must be divisible by workgroupSize[1]${l[1]}, tileAWidth ${$} must be divisible by workgroupSize[0]${l[0]}, tileInner ${E} must be divisible by workgroupSize[1]${l[1]}`);let le=j/l[1],me=$/l[0],_e=E/l[1],Ee=L?`
    let localRow = i32(localId.y);
    let localCol = i32(localId.x);
    let globalRowStart = i32(workgroupId.y) * ${W};
    let globalColStart = i32(workgroupId.x) * ${te};

    // Loop over shared dimension.
    for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var inputRow = localRow; inputRow < ${j}; inputRow = inputRow + ${l[1]}) {
        for (var inputCol = localCol; inputCol < ${$}; inputCol = inputCol + ${l[0]}) {
          ${$r(C,b)}
        }
      }
      // Load one tile of B into local memory.
      for (var inputRow = localRow; inputRow < ${E}; inputRow = inputRow + ${l[1]}) {
            for (var inputCol = localCol; inputCol < ${te}; inputCol = inputCol + ${l[0]}) {
          mm_Bsub[inputRow][inputCol] = mm_readB(batch,
            kStart + inputRow,
            globalColStart + inputCol${b?", batchIndices":""});
        }
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      var BCached : array<${p}, colPerThread>;
      for (var k = 0; k < tileInner; k = k + 1) {
        for (var inner = 0; inner < colPerThread; inner = inner + 1) {
          BCached[inner] = mm_Bsub[k][localCol + inner * ${l[0]}];
        }
        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let ACached = ${C?`mm_Asub[k][localRow + innerRow * ${l[1]}];`:`mm_Asub[localRow + innerRow * ${l[1]}][k];`}
          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
            acc[innerRow][innerCol] = acc[innerRow][innerCol] +
                ACached * BCached[innerCol];
          }
        }
      }
      workgroupBarrier();
    }
    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      let gRow = globalRowStart + localRow + innerRow * ${l[1]};
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        let gCol = globalColStart + localCol + innerCol * ${l[0]};
        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);
      }
    }
    `:`
let tileRow = i32(localId.y) * rowPerThread;
let tileCol = i32(localId.x) * colPerThread;

let globalRow = i32(globalId.y) * rowPerThread;
let globalCol = i32(globalId.x) * colPerThread;
let globalRowStart = i32(workgroupId.y) * ${W};

let tileRowA = i32(localId.y) * ${le};
let tileColA = i32(localId.x) * ${me};
let tileRowB = i32(localId.y) * ${_e};
// Loop over shared dimension.
for (var t = 0; t < num_tiles; t = t + 1) {
  // Load one tile of A into local memory.
  for (var innerRow = 0; innerRow < ${le}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < ${me}; innerCol = innerCol + 1) {
      let inputRow = tileRowA + innerRow;
      let inputCol = tileColA + innerCol;
      ${$r(C,b)}
    }
  }

  // Load one tile of B into local memory.
  for (var innerRow = 0; innerRow < ${_e}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
      let inputRow = tileRowB + innerRow;
      let inputCol = tileCol + innerCol;
      mm_Bsub[inputRow][inputCol] = mm_readB(batch,
        kStart + inputRow,
        globalCol + innerCol${b?", batchIndices":""});
    }
  }
  kStart = kStart + tileInner;
  workgroupBarrier();

  // Compute acc values for a single thread.
  var BCached : array<${p}, colPerThread>;
  for (var k = 0; k < tileInner; k = k + 1) {
    for (var inner = 0; inner < colPerThread; inner = inner + 1) {
      BCached[inner] = mm_Bsub[k][tileCol + inner];
    }

    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      ${ls(C)}
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];
      }
    }
  }

  workgroupBarrier();
}

for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
    mm_write(batch, globalRow + innerRow, globalCol + innerCol,
        acc[innerRow][innerCol]);
  }
}
`;return`
  var<workgroup> mm_Asub : array<array<${p}, ${$}>, ${j}>;
  var<workgroup> mm_Bsub : array<array<${p}, ${te}>, ${E}>;
  const rowPerThread = ${n[1]};
  const colPerThread = ${n[0]};
  const tileInner = ${E};

@compute @workgroup_size(${l[0]}, ${l[1]}, ${l[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
    let batch = ${v?"0":"i32(globalId.z)"};
    ${b?`let batchIndices = ${b.offsetToIndices("u32(batch)")};`:""}
    let num_tiles = ${v?`${Math.ceil(x/E)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};
    var kStart = ${v?`i32(globalId.z) * ${x}`:"0"};

    var acc : array<array<${p}, colPerThread>, rowPerThread>;
    ${Ee}
  }
`},Hs=(n,l,p,b,C=!1)=>{let[E,v,x,L]=b,W=es(b[0].type.tensor);return`
    fn mm_readA(batch: i32, row: i32, colIn: i32, batchIndices: ${E.type.indices}) -> ${qe(n,W)} {
      var value = ${qe(n,W)}(0.0);
      let col = colIn * ${n};
      if(row < uniforms.dim_a_outer && col < uniforms.dim_inner)
      {
        var aIndices: ${v.type.indices};
        ${Lt("aIndices",v,v.rank-2,E.rank,"batchIndices")}
        ${v.indicesSet("aIndices",v.rank-2,"u32(row)")}
        ${v.indicesSet("aIndices",v.rank-1,"u32(colIn)")}
        value = ${v.getByIndices("aIndices")};
      }
      return value;
    }

    fn mm_readB(batch: i32, row: i32, colIn: i32, batchIndices: ${E.type.indices}) -> ${qe(n,W)} {
      var value = ${qe(n,W)}(0.0);
      let col = colIn * ${n};
      if(row < uniforms.dim_inner && col < uniforms.dim_b_outer)
      {
        var bIndices: ${x.type.indices};
        ${Lt("bIndices",x,x.rank-2,E.rank,"batchIndices")}
        ${x.indicesSet("bIndices",x.rank-2,"u32(row)")}
        ${x.indicesSet("bIndices",x.rank-1,"u32(colIn)")}
        value = ${x.getByIndices("bIndices")};
      }
      return value;
    }

    fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${qe(n,W)}) {
      let col = colIn * ${n};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {
        var value = valueIn;
        let coords = vec3<i32>(batch, row, colIn);
        ${l?`value = value + ${C?"bias[colIn]":`${qe(n,W)}(bias[row])`};`:""}
        ${p}
        ${L.setByIndices("vec3<u32>(coords)","value")}
      }
    }
    `},$s=(n,l,p,b,C=!1,E)=>{let v=n[0].dims,x=n[1].dims,L=v.slice(0,-2),W=x.slice(0,-2),te=b?b.slice(0,-2):p.slice(0,-2),$=Kt.size(te),j=v[v.length-2],le=v[v.length-1],me=x[x.length-1],_e=le%4===0&&me%4===0,Ee=j<=8?[4,1,1]:[4,4,1],Fe=[8,8,1],Ye=[Math.ceil(me/Fe[0]/Ee[0]),Math.ceil(j/Fe[1]/Ee[1]),Math.ceil($/Fe[2]/Ee[2])],dt=_e?4:1,mt=[...L,j,le/dt],xt=mt.length,jt=[...W,le,me/dt],Gt=jt.length,Zt=[$,j,me/dt],ar=[{type:6,data:j},{type:6,data:me},{type:6,data:le}];ae(l,ar),ar.push(...Rr(te,mt,jt));let St=["rank","rank"],kr=n.length>2;kr&&(ar.push(...Rr(n[2].dims)),St.push("rank")),ar.push(...Rr(Zt));let fr=ur=>{let Jr=te.length,Sr=kA("batchDims",n[0].dataType,Jr,1),As=es(n[0].dataType),Xs=or("a",n[0].dataType,xt,dt),bs=or("b",n[1].dataType,Gt,dt),vs=ss("result",n[0].dataType,Zt.length,dt),Ys=[Xs,bs];if(kr){let va=C?dt:1;Ys.push(or("bias",n[2].dataType,n[2].dims.length,va))}let Er=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"}];de(l,Er);let Kr=es(vs.type.tensor),js=q(l,vs.type.value,Kr),Ds=Hs(dt,kr,js,[Sr,Xs,bs,vs],C);return`
  ${ur.registerUniforms(Er).registerInternalVariables(Sr).declareVariables(...Ys,vs)}
  ${Ds}
  ${_e?Yr(Ee,Fe,As,Sr):Ts(Ee,Fe,As,Sr)}
                   `};return{name:"MatMul",shaderCache:{hint:`${Ee};${l.activation};${_e};${C}`,inputDependencies:St},getRunData:()=>({outputs:[{dims:E?E(p):p,dataType:n[0].dataType}],dispatchGroup:{x:Ye[0],y:Ye[1],z:Ye[2]},programUniforms:ar}),getShaderSource:fr}}}),fa,Pa,Fa=z(()=>{qr(),tt(),ws(),Be(),pt(),Ft(),ga(),fa=(n,l,p,b,C=!1,E,v=4,x=4,L=4,W="f32")=>{let te=ar=>{switch(ar){case 1:return"resData = x[xIndex];";case 3:return`resData = vec3<${W}>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);`;case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${ar} is not supported.`)}},$=ar=>{switch(ar){case 1:return"return w[row * i32(uniforms.w_shape[3]) + colIn];";case 4:return"return w[row * i32(uniforms.w_shape[3]) / 4 + colIn];";default:throw new Error(`innerElementSize ${ar} is not supported.`)}},j=n?`
    let coord = vec4<i32>(batch, xRow, xCol, xCh);
    `:`
    let coord = vec4<i32>(batch, xCh, xRow, xCol);
    `,le=n?`
    let coords = vec4<i32>(
      batch,
      row / outWidth,
      row % outWidth,
      col);
    `:`
    let coords = vec4<i32>(
      batch,
      row,
      col / outWidth,
      col % outWidth);
    `,me=n?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",_e=n?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",Ee=n?"row":"col",Fe=n?"col":"row",Ye=`
    let inChannels = i32(uniforms.w_shape[2]);
    let outWidth = ${n?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
    let outRow = ${Ee} / outWidth;
    let outCol = ${Ee} % outWidth;

    let WRow = ${Fe} / (i32(uniforms.w_shape[1]) * inChannels);
    let WCol = ${Fe} / inChannels % i32(uniforms.w_shape[1]);
    let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];
    let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];
    let xCh = ${Fe} % inChannels;
    var resData = ${qe(v,W)}(0.0);
    // The bounds checking is always needed since we use it to pad zero for
    // the 'same' padding type.
    if (xRow >= 0 && xRow < ${me} && xCol >= 0 && xCol < ${_e}) {
      ${j}
      let xIndex = getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape));
      ${te(v)}
    }
    return resData;`,dt=n?l&&b?`
    let col = colIn * ${v};
    ${Ye}`:`
    let col = colIn * ${v};
    if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {
      ${Ye}
    }
    return ${qe(v,W)}(0.0);`:b&&p?`
    let col = colIn * ${v};
    ${Ye}`:`
    let col = colIn * ${v};
    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {
      ${Ye}
    }
    return ${qe(v,W)}(0.0);`,mt=n?b&&p?$(x):`
    let col = colIn * ${x};
    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {
      ${$(x)}
    }
    return ${qe(x,W)}(0.0);`:`
    let col = colIn * ${x};
    if (row < uniforms.dim_inner && col < uniforms.dim_a_outer) {
      ${$(x)}
    }
    return ${qe(x,W)}(0.0);`,xt=qe(L,W),jt=qe(n?v:x,W),Gt=qe(n?x:v,W),Zt=q(E,xt,W);return`
    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${jt} {
      ${n?dt:mt}
    }

    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${Gt} {
      ${n?mt:dt}
    }

    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${xt}) {
      let col = colIn * ${L};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer)
      {
      var value = valueIn;
      let outWidth = ${n?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      ${le}
      ${ot(C)}
      ${Zt}
      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
      }
    }`},Pa=(n,l,p,b,C,E,v,x,L)=>{let W=l.format==="NHWC",te=W?n[0].dims[3]:n[0].dims[1],$=p[0],j=W?p[2]:p[3],le=W?p[1]:p[2],me=W?p[3]:p[1],_e=W&&(te%4===0||te%3===0)&&me%4===0,Ee=W?me:j*le,Fe=W?j*le:me,Ye=[8,8,1],dt=b<=8?[4,1,1]:[4,4,1],mt=[Math.ceil(Ee/Ye[0]/dt[0]),Math.ceil(Fe/Ye[1]/dt[1]),Math.ceil($/Ye[2]/dt[2])];wt("verbose",()=>`[conv2d_mm_webgpu] dispatch = ${mt}`);let xt=_e?W&&te%4!==0?3:4:1,jt=Ye[1]*dt[1],Gt=Ye[0]*dt[0],Zt=Math.max(Ye[0]*xt,Ye[1]),ar=b%jt===0,St=C%Gt===0,kr=E%Zt===0,fr=_e?[xt,4,4]:[1,1,1],ur=[{type:6,data:b},{type:6,data:C},{type:6,data:E},{type:6,data:[l.pads[0],l.pads[1]]},{type:6,data:l.strides},{type:6,data:l.dilations}];ae(l,ur),ur.push(...Rr(n[0].dims,n[1].dims));let Jr=["rank","rank"];v&&(ur.push(...Rr(n[2].dims)),Jr.push("rank")),ur.push(...Rr(p));let Sr=As=>{let Xs=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"pad",type:"i32",length:2},{name:"stride",type:"i32",length:2},{name:"dilation",type:"i32",length:2}];de(l,Xs);let bs=_e?4:1,vs=es(n[0].dataType),Ys=`
      fn setOutputAtIndex(flatIndex : i32, value : ${_e?`vec4<${vs}>`:vs}) {
        result[flatIndex] = ${_e?`vec4<${vs}>`:vs}(value);
      }
      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${_e?`vec4<${vs}>`:vs}) {
        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));
        setOutputAtIndex(flatIndex ${_e?"/ 4":""}, value);
      }`,Er=or("x",n[0].dataType,n[0].dims.length,xt===3?1:xt),Kr=or("w",n[1].dataType,n[1].dims.length,bs),js=[Er,Kr],Ds=ss("result",n[0].dataType,p.length,bs);if(v){let va=or("bias",n[2].dataType,n[2].dims.length,bs);js.push(va),Ys+=`
        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${_e?`vec4<${vs}>`:vs} {
          return bias[coords.${W?"w":"y"}${_e?"/ 4":""}];
        }`}return`
        ${Mt("uniforms.result_strides")}
        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,
        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,
        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };
        ${As.registerUniforms(Xs).declareVariables(...js,Ds)}
        ${Ys}
        ${fa(W,ar,St,kr,v,l,fr[0],fr[1],fr[2],vs)}
        ${_e?Yr(dt,Ye,vs,void 0,!W,Zt):Ts(dt,Ye,vs,void 0,!W,Zt,!1,void 0,x)}`};return{name:"Conv2DMatMul",shaderCache:{hint:`${l.cacheKey};${xt};${_e};${ar};${St};${kr};${jt};${Gt};${Zt}`,inputDependencies:Jr},getRunData:()=>({outputs:[{dims:L?L(p):p,dataType:n[0].dataType}],dispatchGroup:{x:mt[0],y:mt[1],z:mt[2]},programUniforms:ur}),getShaderSource:Sr}}}),za,Ha,Ya,Ja,sn,vn,si,Ii,zi=z(()=>{qr(),tt(),Vr(),ws(),Be(),pt(),za=n=>{let l=1;for(let p=0;p<n.length;p++)l*=n[p];return l},Ha=n=>typeof n=="number"?[n,n,n]:n,Ya=(n,l)=>l<=1?n:n+(n-1)*(l-1),Ja=(n,l,p,b=1)=>{let C=Ya(l,b);return Math.floor((n[0]*(p-1)-p+C)/2)},sn=(n,l,p,b,C)=>{C==null&&(C=Ja(n,l[0],b[0]));let E=[0,0,0,p];for(let v=0;v<3;v++)n[v]+2*C>=l[v]&&(E[v]=Math.trunc((n[v]-l[v]+2*C)/b[v]+1));return E},vn=(n,l,p,b,C,E,v,x,L,W)=>{let te,$,j,le;if(n==="VALID"&&(n=0),typeof n=="number"){te={top:n,bottom:n,left:n,right:n,front:n,back:n};let me=sn([l,p,b,1],[x,L,W],1,[C,E,v],n);$=me[0],j=me[1],le=me[2]}else if(Array.isArray(n)){if(!n.every((_e,Ee,Fe)=>_e===Fe[0]))throw Error(`Unsupported padding parameter: ${n}`);te={top:n[0],bottom:n[1],left:n[2],right:n[3],front:n[4],back:n[5]};let me=sn([l,p,b,1],[x,L,W],1,[C,E,v],n[0]);$=me[0],j=me[1],le=me[2]}else if(n==="SAME_UPPER"){$=Math.ceil(l/C),j=Math.ceil(p/E),le=Math.ceil(b/v);let me=($-1)*C+x-l,_e=(j-1)*E+L-p,Ee=(le-1)*v+W-b,Fe=Math.floor(me/2),Ye=me-Fe,dt=Math.floor(_e/2),mt=_e-dt,xt=Math.floor(Ee/2),jt=Ee-xt;te={top:dt,bottom:mt,left:xt,right:jt,front:Fe,back:Ye}}else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:te,outDepth:$,outHeight:j,outWidth:le}},si=(n,l,p,b,C,E=!1,v="channelsLast")=>{let x,L,W,te,$;if(v==="channelsLast")[x,L,W,te,$]=n;else if(v==="channelsFirst")[x,$,L,W,te]=n;else throw new Error(`Unknown dataFormat ${v}`);let[j,,le,me,_e]=l,[Ee,Fe,Ye]=Ha(p),[dt,mt,xt]=Ha(b),jt=Ya(le,dt),Gt=Ya(me,mt),Zt=Ya(_e,xt),{padInfo:ar,outDepth:St,outHeight:kr,outWidth:fr}=vn(C,L,W,te,Ee,Fe,Ye,jt,Gt,Zt),ur=E?j*$:j,Jr=[0,0,0,0,0];return v==="channelsFirst"?Jr=[x,ur,St,kr,fr]:v==="channelsLast"&&(Jr=[x,St,kr,fr,ur]),{batchSize:x,dataFormat:v,inDepth:L,inHeight:W,inWidth:te,inChannels:$,outDepth:St,outHeight:kr,outWidth:fr,outChannels:ur,padInfo:ar,strideDepth:Ee,strideHeight:Fe,strideWidth:Ye,filterDepth:le,filterHeight:me,filterWidth:_e,effectiveFilterDepth:jt,effectiveFilterHeight:Gt,effectiveFilterWidth:Zt,dilationDepth:dt,dilationHeight:mt,dilationWidth:xt,inShape:n,outShape:Jr,filterShape:l}},Ii=(n,l,p,b,C,E)=>{let v=E==="channelsLast";v?n[0].dims[3]:n[0].dims[1];let x=[64,1,1],L={x:p.map((Ee,Fe)=>Fe)},W=[Math.ceil(za(L.x.map(Ee=>p[Ee]))/x[0]),1,1];wt("verbose",()=>`[conv3d_naive_webgpu] dispatch = ${W}`);let te=1,$=Kt.size(p),j=[{type:12,data:$},{type:12,data:b},{type:12,data:C},{type:12,data:l.strides},{type:12,data:l.dilations}];ae(l,j),j.push(...Rr(n[0].dims,n[1].dims));let le=["rank","rank"],me=n.length===3;me&&(j.push(...Rr(n[2].dims)),le.push("rank")),j.push(...Rr(p));let _e=Ee=>{let Fe=[{name:"output_size",type:"u32"},{name:"filter_dims",type:"u32",length:b.length},{name:"pads",type:"u32",length:C.length},{name:"strides",type:"u32",length:l.strides.length},{name:"dilations",type:"u32",length:l.dilations.length}];de(l,Fe);let Ye=1,dt=es(n[0].dataType),mt=or("x",n[0].dataType,n[0].dims.length,te),xt=or("W",n[1].dataType,n[1].dims.length,Ye),jt=[mt,xt],Gt=ss("result",n[0].dataType,p.length,Ye),Zt="";if(me){let kr=or("bias",n[2].dataType,n[2].dims.length,Ye);jt.push(kr),Zt+=`
        fn getBiasByOutputCoords(coords : array<u32, 5>) -> ${dt} {
          return bias[${v?Ir("coords",4,5):Ir("coords",1,5)}];
        }`}let ar=qe(te,dt),St=q(l,ar,dt);return`
            ${Zt}
            fn getX(d0 : u32, d1 : u32, d2 : u32, d3 : u32, d4 : u32) -> f32 {
              let aIndices = array<u32, 5>(d0, d1, d2, d3, d4);
              return ${mt.getByIndices("aIndices")};
            }
            fn getW(d0 : u32, d1 : u32, d2 : u32, d3 : u32, d4 : u32) -> f32 {
              let aIndices = array<u32, 5>(d0, d1, d2, d3, d4);
              return ${xt.getByIndices("aIndices")};
            }
          ${Ee.registerUniforms(Fe).declareVariables(...jt,Gt)}
          ${Ee.mainStart()}
          ${Ee.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
              let coords = ${Gt.offsetToIndices("global_idx")};
              let batch = ${Ir("coords",0,mt.rank)};
              let d2 = ${v?Ir("coords",mt.rank-1,mt.rank):Ir("coords",1,mt.rank)};
              let xFRCCorner = vec3<u32>(${v?Ir("coords",1,mt.rank):Ir("coords",2,mt.rank)},
              ${v?Ir("coords",2,mt.rank):Ir("coords",3,mt.rank)},
              ${v?Ir("coords",3,mt.rank):Ir("coords",4,mt.rank)}) * uniforms.strides - uniforms.pads;
              let xFCorner = xFRCCorner.x;
              let xRCorner = xFRCCorner.y;
              let xCCorner = xFRCCorner.z;
              let xShapeY = ${v?Ir("uniforms.x_shape",1,mt.rank):Ir("uniforms.x_shape",2,mt.rank)};
              let xShapeZ = ${v?Ir("uniforms.x_shape",2,mt.rank):Ir("uniforms.x_shape",3,mt.rank)};
              let xShapeW = ${v?Ir("uniforms.x_shape",3,mt.rank):Ir("uniforms.x_shape",4,mt.rank)};
              let xShapeU = ${v?Ir("uniforms.x_shape",4,mt.rank):Ir("uniforms.x_shape",1,mt.rank)};
              let inputDepthNearestVec4 = (xShapeU / 4) * 4;
              let inputDepthVec4Remainder = xShapeU % 4;

              var value = 0.0;
              for (var wF = 0u; wF < uniforms.filter_dims[0]; wF++) {
                let xF = xFCorner + wF * uniforms.dilations[0];
                if (xF < 0 || xF >= xShapeY) {
                  continue;
                }

                for (var wR = 0u; wR < uniforms.filter_dims[1]; wR++) {
                  let xR = xRCorner + wR * uniforms.dilations[1];
                  if (xR < 0 || xR >= xShapeZ) {
                    continue;
                  }

                  for (var wC = 0u; wC < uniforms.filter_dims[2]; wC++) {
                    let xC = xCCorner + wC * uniforms.dilations[2];
                    if (xC < 0 || xC >= xShapeW) {
                      continue;
                    }

                    for (var d1 = 0u; d1 < inputDepthNearestVec4; d1 += 4) {
                      ${v?`let xValues = vec4<f32>(
                               getX(batch, xF, xR, xC, d1),
                               getX(batch, xF, xR, xC, d1 + 1),
                               getX(batch, xF, xR, xC, d1 + 2),
                               getX(batch, xF, xR, xC, d1 + 3));
                            `:`let xValues = vec4<f32>(
                               getX(batch, d1, xF, xR, xC),
                               getX(batch, d1 + 1, xF, xR, xC),
                               getX(batch, d1 + 2, xF, xR, xC),
                               getX(batch, d1 + 3, xF, xR, xC));
                            `}
                            let wValues = vec4<f32>(
                              getW(d2, d1, wF, wR, wC),
                              getW(d2, d1 + 1, wF, wR, wC),
                              getW(d2, d1 + 2, wF, wR, wC),
                              getW(d2, d1 + 3, wF, wR, wC));
                      value += dot(xValues, wValues);
                    }
                    if (inputDepthVec4Remainder == 1) {
                        ${v?`value += getX(batch, xF, xR, xC, inputDepthNearestVec4)
                          * getW(d2, inputDepthNearestVec4, wF, wR, wC);`:`value += getX(batch, inputDepthNearestVec4, xF, xR, xC)
                          * getW(d2, inputDepthNearestVec4, wF, wR, wC);`}
                    } else if (inputDepthVec4Remainder == 2) {
                      ${v?`let xValues = vec2<f32>(
                        getX(batch, xF, xR, xC, inputDepthNearestVec4),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1));
                      `:`let xValues = vec2<f32>(
                        getX(batch, inputDepthNearestVec4, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 1, xF, xR, xC));
                    `}
                    let wValues = vec2<f32>(
                      getW(d2, inputDepthNearestVec4, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 1, wF, wR, wC));
                      value += dot(xValues, wValues);
                    } else if (inputDepthVec4Remainder == 3) {
                      ${v?`let xValues = vec3<f32>(
                        getX(batch, xF, xR, xC, inputDepthNearestVec4),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 2));
                      `:`let xValues = vec3<f32>(
                        getX(batch, inputDepthNearestVec4, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 1, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 2, xF, xR, xC));
                    `}
                    let wValues = vec3<f32>(
                      getW(d2, inputDepthNearestVec4, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 1, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 2, wF, wR, wC));
                      value += dot(xValues, wValues);
                    }
                  }
                }
              }
              ${me?"value = value + getBiasByOutputCoords(coords)":""};
              ${St}
              result[global_idx] = f32(value);
          }`};return{name:"Conv3DNaive",shaderCache:{hint:`${l.cacheKey};${v};${te};${me}`,inputDependencies:le},getRunData:()=>({outputs:[{dims:p,dataType:n[0].dataType}],dispatchGroup:{x:W[0],y:W[1],z:W[2]},programUniforms:j}),getShaderSource:_e}}}),Yi,Ro,ro=z(()=>{qr(),Vr(),ws(),Be(),Yi=(n,l,p,b)=>{let C=n.length>2,E=C?"value += b[output_channel];":"",v=n[0].dims,x=n[1].dims,L=l.format==="NHWC",W=L?p[3]:p[1],te=W/l.group,$=L&&te>=4?cs(W):1,j=Kt.size(p)/$,le=[{type:12,data:j},{type:12,data:l.dilations},{type:12,data:[l.strides[0],l.strides[1]]},{type:12,data:[l.pads[0],l.pads[1]]},{type:12,data:te}];ae(l,le),le.push(...Rr(v,[x[0],x[1],x[2],x[3]/$]));let me=C?["rank","rank","rank"]:["rank","rank"];le.push(...Rr([p[0],p[1],p[2],p[3]/$]));let _e=Ee=>{let Fe=ss("output",n[0].dataType,p.length,$),Ye=es(Fe.type.tensor),dt=q(l,Fe.type.value,Ye),mt=or("x",n[0].dataType,v.length),xt=or("w",n[1].dataType,x.length,$),jt=[mt,xt];C&&jt.push(or("b",n[2].dataType,n[2].dims,$));let Gt=[{name:"output_size",type:"u32"},{name:"dilations",type:"u32",length:l.dilations.length},{name:"strides",type:"u32",length:2},{name:"pads",type:"u32",length:2},{name:"output_channels_per_group",type:"u32"}];de(l,Gt);let Zt=L?`
      for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[0]; wHeight++) {
        let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];

        if (xHeight < 0u || xHeight >= uniforms.x_shape[1]) {
          continue;
        }

        for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[1]; wWidth++) {
          let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];
          if (xWidth < 0u || xWidth >= uniforms.x_shape[2]) {
            continue;
          }

          for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[2]; wInChannel++) {
            let input_channel = in_channel_offset + wInChannel;
            let xVal = ${mt.get("batch","xHeight","xWidth","input_channel")};
            let wVal = ${xt.get("wHeight","wWidth","wInChannel","output_channel")};
            value += xVal * wVal;
          }
        }
      }
      `:`
      for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[1]; wInChannel++) {
        let input_channel = in_channel_offset + wInChannel;
        for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[2]; wHeight++) {
          let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];

          if (xHeight < 0u || xHeight >= uniforms.x_shape[2]) {
            continue;
          }

          for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[3]; wWidth++) {
            let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];
            if (xWidth < 0u || xWidth >= uniforms.x_shape[3]) {
              continue;
            }

            let xVal = ${mt.get("batch","input_channel","xHeight","xWidth")};
            let wVal = ${xt.get("output_channel","wInChannel","wHeight","wWidth")};
            value += xVal * wVal;
          }
        }
      }
      `;return`
  ${Ee.registerUniforms(Gt).declareVariables(...jt,Fe)}

  ${Ee.mainStart()}
    ${Ee.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let outputIndices = ${Fe.offsetToIndices("global_idx")};
    let batch: u32 = outputIndices[0];
    let output_channel: u32 = outputIndices[${L?3:1}];
    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${L?1:2}], outputIndices[${L?2:3}]) * uniforms.strides - uniforms.pads;
    let group_id: u32 = output_channel * ${$} / uniforms.output_channels_per_group;
    var in_channel_offset = group_id * uniforms.w_shape[${L?2:1}];

    var value: ${Fe.type.value} = ${Fe.type.value}(0);
    ${Zt}
    ${E}
    ${dt}
    ${Fe.setByOffset("global_idx","value")}
  }`};return{name:"GroupedConv",shaderCache:{hint:`${l.cacheKey}_${$}`,inputDependencies:me},getRunData:()=>({outputs:[{dims:b?b(p):p,dataType:n[0].dataType}],dispatchGroup:{x:Math.ceil(j/64)},programUniforms:le}),getShaderSource:_e}},Ro=(n,l,p,b)=>{let C=n.length>2,E=cs(p[3]),v=cs(p[2]),x=Kt.size(p)/E/v,L=[n[0].dims[0],n[0].dims[1],n[0].dims[2],n[0].dims[3]/E],W=[n[1].dims[0],n[1].dims[1],n[1].dims[2],n[1].dims[3]/E],te=[p[0],p[1],p[2],p[3]/E],$=[{type:12,data:x},{type:6,data:[l.strides[0],l.strides[1]]},{type:6,data:[l.pads[0],l.pads[1]]}];ae(l,$),$.push(...Rr(L,W,te));let j=(v-1)*l.strides[1]+W[1],le=me=>{let _e=ss("output",n[0].dataType,te.length,E),Ee=es(_e.type.tensor),Fe=q(l,_e.type.value,Ee),Ye=or("x",n[0].dataType,L.length,E),dt=or("w",n[1].dataType,W.length,E),mt=[Ye,dt];C&&mt.push(or("b",n[2].dataType,n[2].dims,E));let xt=C?"value += b[output_channel];":"",jt=[{name:"output_size",type:"u32"},{name:"strides",type:"i32",length:2},{name:"pads",type:"i32",length:2}];return de(l,jt),`
  ${me.registerUniforms(jt).declareVariables(...mt,_e)}
  ${me.mainStart()}
    ${me.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let width0 = uniforms.output_shape[3];
    let output_channel = global_idx % width0;
    var index1 = global_idx / width0;
    let width1 = uniforms.output_shape[2] / ${v}u;
    let col = (index1 % width1) * ${v}u;
    index1 = index1 / width1;
    let row = index1 % uniforms.output_shape[1];
    let batch = index1 / uniforms.output_shape[1];

    let x_corner = vec2<i32>(i32(row), i32(col)) * uniforms.strides - uniforms.pads;

    var x_vals: array<${Ye.type.value}, ${j}>;
    var values: array<${_e.type.value}, ${v}>;
    let input_channel = output_channel;
    // Use constant instead of uniform can give better performance for w's height/width.
    for (var w_height: u32 = 0u; w_height < ${W[0]}; w_height++) {
      let x_height = x_corner.x + i32(w_height);
      if (x_height >= 0 && u32(x_height) < uniforms.x_shape[1]) {
        for (var i = 0; i < ${j}; i++) {
          let x_width = x_corner.y + i;
          if (x_width >= 0 && u32(x_width) < uniforms.x_shape[2]) {
            x_vals[i] = ${Ye.get("batch","u32(x_height)","u32(x_width)","input_channel")};
          } else {
            x_vals[i] = ${Ye.type.value}(0);
          }
        }
        for (var w_width: u32 = 0u; w_width < ${W[1]}; w_width++) {
          let w_val = ${dt.get("w_height","w_width","0","output_channel")};
          for (var i = 0u; i < ${v}u; i++) {
            values[i] = fma(x_vals[i * u32(uniforms.strides[1]) + w_width], w_val, values[i]);
          }
        }
      }
    }

    for (var i = 0u; i < ${v}u; i++) {
      var value = values[i];
      ${xt}
      ${Fe}
      ${_e.set("batch","row","col + i","output_channel","value")};
    }
  }`};return{name:"GroupedConv-Vectorize",shaderCache:{hint:`${l.cacheKey};${E};${v};${j};${W[0]};${W[1]}`,inputDependencies:C?["rank","rank","type"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:b?b(p):p,dataType:n[0].dataType}],dispatchGroup:{x:Math.ceil(x/64)},programUniforms:$}),getShaderSource:le}}}),wo,so,LA,uA,RA,Io,J0,$0,Sl,fu=z(()=>{Vr(),Fa(),zi(),ga(),ro(),Be(),Ar(),Ni(),wo=(n,l,p,b,C,E)=>{let v=n[0],x=n.slice(E?1:2,E?3:4),L=x.length,W=l[0],te=l.slice(2).map((j,le)=>j+(j-1)*(p[le]-1)),$=x.map((j,le)=>j+b[le]+b[le+L]).map((j,le)=>Math.floor((j-te[le]+C[le])/C[le]));return $.splice(0,0,v),$.splice(E?3:1,0,W),$},so=[2,3,1,0],LA=(n,l)=>{if(!n||n.length!==2&&n.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(n[0].dims.length>5)throw new Error("greater than 5D is not supported");if(n[0].dims.length!==n[1].dims.length)throw new Error("filter does not have same dimension as input");let p=n[0].dims[l.format==="NHWC"?n[0].dims.length-1:1],b=n[1].dims[1]*l.group;if(p!==b)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(n.length===3&&(n[2].dims.length!==1||n[1].dims[0]!==n[2].dims[0]))throw new Error("invalid bias");let C=n[0].dims.length-2;if(l.dilations.length!==C)throw new Error(`dilations should be ${C}D`);if(l.strides.length!==C)throw new Error(`strides should be ${C}D`);if(l.pads.length!==C*2)throw new Error(`pads should be ${C*2}D`);if(l.kernelShape.length!==0&&l.kernelShape.length!==n[1].dims.length-2)throw new Error("invalid kernel shape")},uA=(n,l)=>{let p=n.kernelShape.slice();p.length<l[1].dims.length-2&&p.push(...Array(l[1].dims.length-2-p.length).fill(0));for(let E=2;E<l[1].dims.length;++E)p[E-2]===0&&(p[E-2]=l[1].dims[E]);let b=n.pads.slice();rr.adjustPadsBasedOnAutoPad(l[0].dims,n.strides,n.dilations,p,b,n.format==="NHWC",n.autoPad);let C=Object.assign({},n);return Object.assign(C,{kernelShape:p,pads:b}),C},RA=n=>{let l=ye(n),p=n.format,b=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][n.auto_pad],C=n.dilations,E=n.group,v=n.kernel_shape,x=n.pads,L=n.strides,W=n.w_is_const();return{autoPad:b,format:p,dilations:C,group:E,kernelShape:v,pads:x,strides:L,wIsConst:W,...l,cacheKey:`${n.format};${l.activation};`}},Io=(n,l,p,b)=>{let C=p.format==="NHWC",E=wo(l[0].dims,l[1].dims,p.dilations,p.pads,p.strides,C);if(p.group!==1){let jt=[l[0]];if(C){let Gt=n.kernelCustomData.wT??n.compute(Un(l[1],so),{inputs:[1],outputs:[p.wIsConst?-2:-1]})[0];p.wIsConst&&!n.kernelCustomData.wT&&(n.kernelCustomData.wT=Gt),jt.push(Gt)}else jt.push(l[1]);l.length===3&&jt.push(l[2]),!n.adapterInfo.isArchitecture("ampere")&&C&&l[1].dims[0]===p.group&&l[1].dims[1]===1&&p.dilations[0]===1&&p.dilations[1]===1?n.compute(Ro(jt,p,E,b),{inputs:jt}):n.compute(Yi(jt,p,E,b),{inputs:jt});return}let v=l.length===3,x=l[0].dims[C?1:2],L=l[0].dims[C?2:3],W=l[0].dims[C?3:1],te=l[1].dims[2],$=l[1].dims[3],j=E[C?1:2],le=E[C?2:3],me=E[C?3:1],_e=C&&te===x&&$===L&&p.pads[0]===0&&p.pads[1]===0;if(_e||te===1&&$===1&&p.dilations[0]===1&&p.dilations[1]===1&&p.strides[0]===1&&p.strides[1]===1&&p.pads[0]===0&&p.pads[1]===0){let jt=E[0],Gt,Zt,ar,St=[];if(C){let ur=n.kernelCustomData.wT??n.compute(Un(l[1],so),{inputs:[1],outputs:[p.wIsConst?-2:-1]})[0];if(p.wIsConst&&!n.kernelCustomData.wT&&(n.kernelCustomData.wT=ur),_e){let Jr=x*L*W;Gt=l[0].reshape([1,jt,Jr]),Zt=ur.reshape([1,Jr,me]),ar=[1,jt,me]}else Gt=l[0].reshape([jt,x*L,W]),Zt=ur.reshape([1,W,me]),ar=[jt,j*le,me];St.push(Gt),St.push(Zt)}else Gt=l[0].reshape([jt,W,x*L]),Zt=l[1].reshape([1,me,W]),ar=[jt,me,j*le],St.push(Zt),St.push(Gt);v&&St.push(l[2]);let kr=ar[2],fr=St[0].dims[St[0].dims.length-1];kr<8&&fr<8?n.compute(Xt(St,p,E,ar,C,b),{inputs:St}):n.compute($s(St,p,E,ar,C,b),{inputs:St});return}let Ee=!0,Fe=n.kernelCustomData.wT??n.compute(Un(l[1],so),{inputs:[1],outputs:[p.wIsConst?-2:-1]})[0];p.wIsConst&&!n.kernelCustomData.wT&&(n.kernelCustomData.wT=Fe);let Ye=[l[0],Fe];v&&Ye.push(l[2]);let dt=C?j*le:me,mt=C?me:j*le,xt=te*$*W;n.compute(Pa(Ye,p,E,dt,mt,xt,v,Ee,b),{inputs:Ye})},J0=(n,l)=>{let p=l.format==="NHWC",b=[n.inputs[0].reshape(p?[n.inputs[0].dims[0],1,n.inputs[0].dims[1],n.inputs[0].dims[2]]:[n.inputs[0].dims[0],n.inputs[0].dims[1],1,n.inputs[0].dims[2]]),n.inputs[1].reshape([n.inputs[1].dims[0],n.inputs[1].dims[1],1,n.inputs[1].dims[2]])];n.inputs.length===3&&b.push(n.inputs[2]);let C=[0,l.pads[0],0,l.pads[1]],E=[1].concat(l.strides),v=[1].concat(l.dilations),x=[1].concat(l.kernelShape),L=uA({...l,pads:C,strides:E,dilations:v,kernelShape:x},b);Io(n,b,L,W=>p?[W[0],W[2],W[3]]:[W[0],W[1],W[3]])},$0=(n,l,p)=>{let b=p.format==="NHWC"?"channelsLast":"channelsFirst",C=uA(p,l),E=p.autoPad==="NOTSET"?p.pads:p.autoPad,v=si(l[0].dims,l[1].dims,p.strides,p.dilations,E,!1,b);n.compute(Ii(l,C,v.outShape,[v.filterDepth,v.filterHeight,v.filterWidth],[v.padInfo.front,v.padInfo.top,v.padInfo.left],b))},Sl=(n,l)=>{if(LA(n.inputs,l),n.inputs[0].dims.length===3)J0(n,l);else if(n.inputs[0].dims.length===5)$0(n,n.inputs,l);else{let p=uA(l,n.inputs);Io(n,n.inputs,p)}}}),ec,tc=z(()=>{qr(),tt(),Vr(),ws(),ec=(n,l,p)=>{let b=n.length>2,C=l.outputShape,E=l.format==="NHWC",v=l.group,x=n[1].dims,L=x[2]/v,W=x[3],te=E?cs(L):1,$=E?cs(W):1,j=E?W===1?te:$:1,le=Kt.size(C)/$,me=[Math.ceil(le/64),1,1];wt("verbose",()=>`[conv2d_backprop_webgpu] dispatch = ${me}`);let _e=["rank","rank"],Ee=[l.strides[0],l.strides[1]],Fe=[l.kernelShape[E?1:2],l.kernelShape[E?2:3]],Ye=[l.dilations[0],l.dilations[1]],dt=[Fe[0]+(l.dilations[0]<=1?0:(l.kernelShape[E?1:2]-1)*(l.dilations[0]-1)),Fe[1]+(l.dilations[1]<=1?0:(l.kernelShape[E?2:3]-1)*(l.dilations[1]-1))],mt=[dt[0]-1-Math.floor((l.pads[0]+l.pads[2])/2),dt[1]-1-Math.floor((l.pads[1]+l.pads[3])/2)],xt=[{type:12,data:le},{type:12,data:Ee},{type:12,data:Fe},{type:12,data:Ye},{type:12,data:dt},{type:6,data:mt},{type:12,data:L},{type:12,data:W},...Rr(n[0].dims,n[1].dims)];b&&(xt.push(...Rr(n[2].dims)),_e.push("rank")),xt.push(...Rr(C));let jt=Gt=>{let Zt=[{name:"output_size",type:"u32"},{name:"strides",type:"u32",length:Ee.length},{name:"filter_dims",type:"u32",length:Fe.length},{name:"dilations",type:"u32",length:Fe.length},{name:"effective_filter_dims",type:"u32",length:dt.length},{name:"pads",type:"i32",length:mt.length},{name:"input_channels_per_group",type:"u32"},{name:"output_channels_per_group",type:"u32"}],ar=es(n[0].dataType),St=E?1:2,kr=E?2:3,fr=E?3:1,ur=or("W",n[1].dataType,n[1].dims.length,j),Jr=or("Dy",n[0].dataType,n[0].dims.length,te),Sr=[Jr,ur];b&&Sr.push(or("bias",n[2].dataType,[C[fr]].length,$));let As=ss("result",n[0].dataType,C.length,$),Xs=()=>{let vs="";if(te===1)vs+=`
        let w_offset = ${ur.indicesToOffset(`${ur.type.indices}(u32(wRPerm), u32(wCPerm), inputChannel, wOutChannel)`)};
        let wValue = ${ur.getByOffset(`w_offset / ${j}`)};
        dotProd = dotProd + xValue * wValue;`;else if(W===1)vs+=`
          let wValue = ${ur.getByOffset(`${ur.indicesToOffset(`${ur.type.indices}(u32(wRPerm), u32(wCPerm), inputChannel, wOutChannel)`)} / ${j}`)};
          dotProd = dotProd + dot(xValue, wValue);`;else for(let Ys=0;Ys<te;Ys++)vs+=`
            let wValue${Ys} = ${ur.getByOffset(`${ur.indicesToOffset(`${ur.type.indices}(u32(wRPerm), u32(wCPerm), inputChannel + ${Ys}, wOutChannel)`)} / ${j}`)};
            dotProd = dotProd + xValue[${Ys}] * wValue${Ys};`;return vs},bs=`
            let outputIndices = ${As.offsetToIndices(`global_idx * ${$}`)};
            let batch = ${As.indicesGet("outputIndices",0)};
            let d1 = ${As.indicesGet("outputIndices",fr)};
            let r = ${As.indicesGet("outputIndices",St)};
            let c = ${As.indicesGet("outputIndices",kr)};
            let dyCorner = vec2<i32>(i32(r), i32(c)) - uniforms.pads;
            let dyRCorner = dyCorner.x;
            let dyCCorner = dyCorner.y;
            let groupId = d1 / uniforms.output_channels_per_group;
            let wOutChannel = d1 - groupId * uniforms.output_channels_per_group;
            // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
            // ? = to be determined. : = across all values in that axis.
            var dotProd = ${As.type.value}(0.0);
            var wR: u32 = 0;
            if (uniforms.dilations.x == 1) {
              // Minimum wR >= 0 that satisfies (dyRCorner + wR) % (uniforms.strides.x) == 0
              wR = u32(((dyRCorner + i32(uniforms.strides.x) - 1) / i32(uniforms.strides.x)) * i32(uniforms.strides.x) - dyRCorner);
            }
            for (; wR < uniforms.effective_filter_dims.x; wR = wR + 1) {
              if (wR % uniforms.dilations.x != 0) {
                continue;
              }
              let dyR = (${ar}(dyRCorner) + ${ar}(wR)) / ${ar}(uniforms.strides[0]);
              let wRPerm = uniforms.filter_dims.x - 1 - wR / uniforms.dilations.x;
              if (dyR < 0.0 || dyR >= ${ar}(uniforms.Dy_shape[${St}]) || fract(dyR) > 0.0 ||
                  wRPerm < 0) {
                continue;
              }
              let idyR: u32 = u32(dyR);
              var wC: u32 = 0;
              if (uniforms.dilations.y == 1) {
                // Minimum wC >= 0 that satisfies (dyCCorner + wC) % (uniforms.strides.y) == 0
                wC = u32(((dyCCorner + i32(uniforms.strides.y) - 1) / i32(uniforms.strides.y)) * i32(uniforms.strides.y) - dyCCorner);
              }

              for (; wC < uniforms.effective_filter_dims.y; wC = wC + 1) {
                if (wC % uniforms.dilations.y != 0) {
                  continue;
                }
                let dyC = (${ar}(dyCCorner) + ${ar}(wC)) / ${ar}(uniforms.strides.y);
                let wCPerm = uniforms.filter_dims.y - 1 - wC / uniforms.dilations.y;
                if (dyC < 0.0 || dyC >= ${ar}(uniforms.Dy_shape[${kr}]) ||
                    fract(dyC) > 0.0 || wCPerm < 0) {
                  continue;
                }
                let idyC: u32 = u32(dyC);
                var inputChannel = groupId * uniforms.input_channels_per_group;
                for (var d2: u32 = 0; d2 < uniforms.input_channels_per_group; d2 = d2 + ${te}) {
                  let xValue = ${E?Jr.getByOffset(`${Jr.indicesToOffset(`${Jr.type.indices}(batch, idyR, idyC, inputChannel)`)} / ${te}`):Jr.get("batch","inputChannel","idyR","idyC")};
                  ${Xs()}
                  inputChannel = inputChannel + ${te};
                }
                wC = wC + uniforms.strides.y - 1;
              }
              wR = wR + uniforms.strides[0] - 1;
            }
            let value = dotProd${b?` + bias[d1 / ${$}]`:""};
            ${As.setByOffset("global_idx","value")};
          `;return`
    ${Gt.registerUniforms(Zt).declareVariables(...Sr,As)}
      ${Gt.mainStart()}
      ${Gt.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")};
    ${bs}}`};return{name:"ConvTranspose2D",shaderCache:{hint:`${l.cacheKey};${te}${j}${$}${W===1}`,inputDependencies:_e},getRunData:()=>({dispatchGroup:{x:me[0],y:me[1],z:me[2]},outputs:[{dims:p?p(C):C,dataType:n[0].dataType}],programUniforms:xt}),getShaderSource:jt}}}),rc,i0,o0,A0,l0,sc,c0,Gl,ac,pu=z(()=>{tc(),Be(),Ni(),rc=(n,l,p,b,C,E)=>(n-1)*l+p+(b-1)*C+1-E,i0=(n,l,p,b,C)=>{let E=Math.floor(n/2);l==="SAME_UPPER"?(p[b]=E,p[C]=n-E):l==="SAME_LOWER"&&(p[b]=n-E,p[C]=E)},o0=(n,l,p,b,C,E,v,x,L,W)=>{let te=n.length-2,$=W.length===0;L.length<te&&L.push(...Array(te-L.length).fill(0));let j=n[0],le=l[x?3:1]*C;for(let me=0,_e=n.length-te-(x?1:0);me<te;++me,++_e){let Ee=n[_e],Fe=$?Ee*v[me]:W[me],Ye=rc(Ee,v[me],E[me],l[_e],p[me],Fe);i0(Ye,b,E,me,me+te),$&&W.push(v[me]*(Ee-1)+L[me]+(l[_e]-1)*p[me]+1-E[me]-E[me+te])}W.splice(0,0,j),W.splice(x?3:1,0,le)},A0=(n,l)=>{let p=n.kernelShape.slice();if(n.kernelShape.length===0||n.kernelShape.reduce(($,j)=>$*j,1)===0){p.length=0;for(let $=2;$<l[1].dims.length;++$)p.push(l[1].dims[$])}let b=n.format==="NHWC";p.splice(0,0,l[1].dims[0]),p.splice(b?3:1,0,l[1].dims[1]);let C=n.pads.slice(),E=n.outputShape.slice(),v=n.outputPadding.slice(),x=l[0].dims,L=n.dilations.slice();if(L.reduce(($,j)=>$+j,0)===0){let $=l[0].dims.length-2;L=new Array($).fill(1)}let W=n.strides.slice();if(W.reduce(($,j)=>$+j,0)===0){let $=l[0].dims.length-2;W=new Array($).fill(1)}o0(x,p,L,n.autoPad,n.group,C,W,b,v,E);let te=Object.assign({},n);return Object.assign(te,{kernelShape:p,pads:C,outputPadding:v,outputShape:E,dilations:L,strides:W}),te},l0=n=>{let l=ye(n),p=n.format,b=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][typeof n.autoPad>"u"?0:n.autoPad],C=n.dilations,E=n.group,v=n.kernelShape,x=n.pads,L=n.strides,W=n.wIsConst(),te=n.outputPadding,$=n.outputShape;return{autoPad:b,format:p,dilations:C,group:E,kernelShape:v,outputPadding:te,outputShape:$,pads:x,strides:L,wIsConst:W,...l,cacheKey:`${n.format};${l.activation};`}},sc=(n,l)=>{if(!n||n.length!==2&&n.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(n[0].dims.length!==4&&n[0].dims.length!==3)throw new Error("currently only support 2-dimensional conv");if(n[0].dims.length!==n[1].dims.length)throw new Error("filter does not have same dimension as input");let p=n[0].dims[l.format==="NHWC"?n[0].dims.length-1:1],b=n[1].dims[0];if(p!==b)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let C=n[1].dims[1]*l.group;if(n.length===3&&(n[2].dims.length!==1||n[2].dims[0]!==C))throw new Error("invalid bias");let E=n[0].dims.length-2;if(l.dilations.reduce((v,x)=>v+x,0)>0&&l.dilations.length!==E)throw new Error(`dilations should be ${E}D`);if(l.strides.reduce((v,x)=>v+x,0)>0&&l.strides.length!==E)throw new Error(`strides should be ${E}D`);if(l.pads.reduce((v,x)=>v+x,0)>0&&l.pads.length!==E*2)throw new Error(`pads should be ${E*2}D`);if(l.outputPadding.length!==E&&l.outputPadding.length!==0)throw new Error(`output_padding should be ${E}D`);if(l.kernelShape.reduce((v,x)=>v+x,0)>0&&l.kernelShape.length!==0&&l.kernelShape.length!==n[1].dims.length-2)throw new Error("invalid kernel shape");if(l.outputShape.length!==0&&l.outputShape.length!==n[0].dims.length-2)throw new Error("invalid output shape")},c0=(n,l,p,b)=>{let C=n.kernelCustomData.wT??n.compute(Un(l[1],[2,3,0,1]),{inputs:[1],outputs:[p.wIsConst?-2:-1]})[0];p.wIsConst&&!n.kernelCustomData.wT&&(n.kernelCustomData.wT=C);let E=[l[0],C];l.length===3&&E.push(l[2]),n.compute(ec(E,p,b),{inputs:E})},Gl=(n,l)=>{let p=l.format==="NHWC",b=[n.inputs[0].reshape(p?[n.inputs[0].dims[0],1,n.inputs[0].dims[1],n.inputs[0].dims[2]]:[n.inputs[0].dims[0],n.inputs[0].dims[1],1,n.inputs[0].dims[2]]),n.inputs[1].reshape([n.inputs[1].dims[0],n.inputs[1].dims[1],1,n.inputs[1].dims[2]])];n.inputs.length===3&&b.push(n.inputs[2]);let C=l.kernelShape;(C.length===0||C[0]===0)&&(C=[n.inputs[1].dims[2]]);let E=l.dilations;(E.length===0||E[0]===0)&&(E=[1]);let v=l.strides;(v.length===0||v[0]===0)&&(v=[1]);let x=l.pads;x.length===0&&(x=[0,0]),x=[0,x[0],0,x[1]],v=[1].concat(v),E=[1].concat(E),C=[1].concat(C);let L=l.outputPadding;L=[0].concat(L);let W=A0({...l,pads:x,strides:v,dilations:E,kernelShape:C,outputPadding:L},b);c0(n,b,W,te=>p?[te[0],te[2],te[3]]:[te[0],te[1],te[3]])},ac=(n,l)=>{if(sc(n.inputs,l),n.inputs[0].dims.length===3)Gl(n,l);else{let p=A0(l,n.inputs);c0(n,n.inputs,p)}}}),Fl,nc,ic,oc=z(()=>{qr(),Vr(),hs(),ws(),Fl=(n,l,p,b)=>{let C=Kt.size(l),E=l.length,v=or("input",n,E),x=ss("output",n,E),L=p.dataType===6?p.getInt32Array()[0]:Number(p.getBigInt64Array()[0]),W=Kt.normalizeAxis(L,E),te=$=>{let j=` i32(${v.indicesGet("inputIndices","uniforms.axis")}) `,le=Ir("uniforms.input_shape","uniforms.axis",E),me=b.reverse?j+(b.exclusive?" + 1":""):"0",_e=b.reverse?le:j+(b.exclusive?"":" + 1");return`
                ${$.registerUniform("outputSize","u32").registerUniform("axis","u32").declareVariables(v,x)}
                ${$.mainStart()}
                  ${$.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
                  var inputIndices = ${x.offsetToIndices("global_idx")};
                  var sum = ${x.type.value}(0);
                  let first : i32 = ${me};
                  let last : i32 = ${_e};
                  for (var i : i32 = first; i < last; i++) {
                    ${v.indicesSet("inputIndices","uniforms.axis","u32(i)")};
                    sum = sum + ${v.getByIndices("inputIndices")};
                  }
                  ${x.setByOffset("global_idx","sum")};
                }`};return{name:"CumSum",shaderCache:{hint:b.cacheKey,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:l,dataType:n}],dispatchGroup:{x:Math.ceil(C/64)},programUniforms:[{type:12,data:C},{type:12,data:W},...Rr(l,l)]}),getShaderSource:te}},nc=(n,l)=>{let p=n.inputs[0].dims,b=n.inputs[0].dataType,C=n.inputs[1];n.compute(Fl(b,p,C,l),{inputs:[0]})},ic=n=>{let l=n.exclusive===1,p=n.reverse===1;return Xr({exclusive:l,reverse:p})}}),Ac,Ki,ao,dA,gA,hu=z(()=>{qr(),Vr(),hs(),ws(),Ac=n=>{if(!n||n.length!==1)throw new Error("DepthToSpace requires 1 input.");if(n[0].dims.length!==4)throw new Error("DepthToSpace requires 4D input.")},Ki=(n,l,p,b)=>{let C=[];C.push(`fn perm(i: ${b.type.indices}) -> ${p.type.indices} {
    var a: ${p.type.indices};`);for(let E=0;E<l;++E)C.push(p.indicesSet("a",n[E],`i[${E}]`));return C.push("return a;}"),C.join(`
`)},ao=(n,l)=>{let p,b,C,E,v,x,L=l.format==="NHWC",W=l.blocksize,te=l.mode==="DCR";L?([p,b,C,E]=n.dims,v=te?[p,b,C,W,W,E/W**2]:[p,b,C,E/W**2,W,W],x=te?[0,1,3,2,4,5]:[0,1,4,2,5,3]):([p,b,C,E]=[n.dims[0],n.dims[2],n.dims[3],n.dims[1]],v=te?[p,W,W,E/W**2,b,C]:[p,E/W**2,W,W,b,C],x=te?[0,3,4,1,5,2]:[0,1,4,2,5,3]);let $=n.reshape(v),j=$.dims.length,le=n.dataType,me=or("a",le,j),_e=ss("output",le,j),Ee=Fe=>`
  ${Fe.registerUniform("output_size","u32").declareVariables(me,_e)}

  ${Ki(x,j,me,_e)}

  ${Fe.mainStart()}
    ${Fe.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let indices = ${_e.offsetToIndices("global_idx")};
    let aIndices = perm(indices);

    ${_e.setByOffset("global_idx",me.getByIndices("aIndices"))}
  }`;return{name:"DepthToSpace",shaderCache:{hint:`${n.dims};${l.blocksize};${l.mode}`,inputDependencies:["rank"]},getRunData:Fe=>{let Ye=L?[p,b*W,C*W,E/W**2]:[p,E/W**2,b*W,C*W],dt=Kt.size(Ye),mt=$.dims,xt=Kt.sortBasedOnPerm(mt,x);return{outputs:[{dims:Ye,dataType:Fe[0].dataType}],dispatchGroup:{x:Math.ceil(dt/64)},programUniforms:[{type:12,data:dt},...Rr(mt,xt)]}},getShaderSource:Ee}},dA=(n,l)=>{Ac(n.inputs),n.compute(ao(n.inputs[0],l))},gA=n=>Xr({blocksize:n.blocksize,mode:n.mode,format:n.format})}),zl,jA,Ol,lc,cc,u0,uc,d0,an,dc,gc,g0=z(()=>{qr(),Vr(),hs(),ws(),zl="[a-zA-Z]|\\.\\.\\.",jA="("+zl+")+",Ol="^"+jA+"$",lc="("+jA+",)*"+jA,cc="^"+lc+"$",u0=class{constructor(n=-1){this.symbolToIndices=new Map,this.inputIndex=n}addSymbol(n,l){let p=this.symbolToIndices.get(n);p===void 0?p=[l]:p.push(l),this.symbolToIndices.set(n,p)}},uc=class{constructor(n,l){var C;this.equation=l,this.hasEllipsis=!1,this.symbolToInfo=new Map,this.lhs=new Array,this.outputDims=[];let[p,b]=l.includes("->")?l.split("->",2):[l,""];if(!p.match(RegExp(cc)))throw new Error("Invalid LHS term");if(p.split(",").forEach((E,v)=>{let x=n[v].dims.slice();if(!E.match(RegExp(Ol)))throw new Error("Invalid LHS term");let L=this.processTerm(E,!0,x,v);this.lhs.push(L)}),b==="")b+=[...this.symbolToInfo.entries()].filter(([E,v])=>v.count===1||E==="...").map(([E])=>E).join("");else if(!b.match(RegExp(jA)))throw new Error("Invalid RHS");(C=b.match(RegExp(zl,"g")))==null||C.forEach(E=>{if(E==="...")this.outputDims=this.outputDims.concat(this.ellipsisDims);else{let v=this.symbolToInfo.get(E);if(v===void 0)throw new Error("Invalid RHS symbol");this.outputDims.push(v.dimValue)}}),this.rhs=this.processTerm(b,!1,this.outputDims)}addSymbol(n,l,p){let b=this.symbolToInfo.get(n);if(b!==void 0){if(b.dimValue!==l&&b.count!==1)throw new Error("Dimension mismatch");b.count++,b.inputIndices.push(p)}else b={count:1,dimValue:l,inputIndices:[p]};this.symbolToInfo.set(n,b)}processTerm(n,l,p,b=-1){let C=p.length,E=!1,v=[],x=0;if(!n.match(RegExp(Ol))&&!l&&n!=="")throw new Error("Invalid LHS term");let L=n.match(RegExp(zl,"g")),W=new u0(b);return L==null||L.forEach((te,$)=>{if(te==="..."){if(E)throw new Error("Only one ellipsis is allowed per input term");E=!0;let j=C-L.length+1;if(j<0)throw new Error("Ellipsis out of bounds");if(v=p.slice(x,x+j),this.hasEllipsis){if(this.ellipsisDims.length!==v.length||this.ellipsisDims.toString()!==v.toString())throw new Error("Ellipsis dimensions mismatch")}else if(l)this.hasEllipsis=!0,this.ellipsisDims=v;else throw new Error("Ellipsis must be specified in the LHS");for(let le=0;le<v.length;le++){let me=String.fromCharCode(48+le);W.addSymbol(me,$+le),this.addSymbol(me,p[x++],b)}}else W.addSymbol(te,$+(this.hasEllipsis?this.ellipsisDims.length-1:0)),this.addSymbol(te,p[x++],b)}),W}},d0=n=>n+"_max",an=(n,l,p,b)=>{let C=n.map(W=>W.length).map((W,te)=>or(`input${te}`,l,W)),E=Kt.size(b),v=ss("output",l,b.length),x=[...p.symbolToInfo.keys()].filter(W=>!p.rhs.symbolToIndices.has(W)),L=W=>{let te=[],$="var prod = 1.0;",j="var sum = 0.0;",le="sum += prod;",me=[],_e=[],Ee=[],Fe=[],Ye=p.symbolToInfo.size===p.rhs.symbolToIndices.size;p.symbolToInfo.forEach((mt,xt)=>{var jt;if(p.rhs.symbolToIndices.has(xt)){let Gt=(jt=p.rhs.symbolToIndices.get(xt))==null?void 0:jt[0];Gt!==void 0&&p.lhs.forEach((Zt,ar)=>{if(mt.inputIndices.includes(ar)){let St=Zt.symbolToIndices.get(xt);if(St===void 0)throw new Error("Invalid symbol error");St.forEach(kr=>{te.push(`${C[ar].indicesSet(`input${ar}Indices`,kr,v.indicesGet("outputIndices",Gt))}`)})}})}else p.lhs.forEach((Gt,Zt)=>{if(mt.inputIndices.includes(Zt)){let ar=Gt.symbolToIndices.get(xt);if(ar===void 0)throw new Error("Invalid symbol error");ar.forEach(St=>{me.push(`${C[Zt].indicesSet(`input${Zt}Indices`,St,`${xt}`)}`)}),Fe.push(`prod *= ${C[Zt].getByIndices(`input${Zt}Indices`)};`)}}),_e.push(`for(var ${xt}: u32 = 0; ${xt} < uniforms.${d0(xt)}; ${xt}++) {`),Ee.push("}")});let dt=Ye?[...te,`let sum = ${C.map((mt,xt)=>mt.getByIndices(`input${xt}Indices`)).join(" * ")};`]:[...te,j,..._e,...me,$,...Fe,le,...Ee];return`
            ${W.registerUniforms(x.map(mt=>({name:`${d0(mt)}`,type:"u32"}))).registerUniform("outputSize","u32").declareVariables(...C,v)}

            ${W.mainStart()}
            ${W.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
            var outputIndices = ${v.offsetToIndices("global_idx")};
            ${C.map((mt,xt)=>`var input${xt}Indices: ${C[xt].type.indices};`).join(`
`)}
            ${dt.join(`
`)};
            ${v.setByOffset("global_idx","sum")};
          }`};return{name:"Einsum",shaderCache:{hint:p.equation,inputDependencies:n.map(()=>"rank")},getRunData:()=>{let W=x.filter($=>p.symbolToInfo.has($)).map($=>{var j;return{type:12,data:((j=p.symbolToInfo.get($))==null?void 0:j.dimValue)||0}});W.push({type:12,data:E});let te=n.map(($,j)=>[...Rr($)]).reduce(($,j)=>$.concat(j),W);return te.push(...Rr(b)),{outputs:[{dims:b,dataType:l}],dispatchGroup:{x:Math.ceil(E/64)},programUniforms:te}},getShaderSource:L}},dc=(n,l)=>{let p=new uc(n.inputs,l.equation),b=p.outputDims,C=n.inputs.map((E,v)=>E.dims);n.compute(an(C,n.inputs[0].dataType,p,b))},gc=n=>{let l=n.equation.replace(/\s+/g,"");return Xr({equation:l})}}),fc,fA,jo,pc,hc,mu=z(()=>{qr(),Vr(),ws(),fc=n=>{if(!n||n.length!==2)throw new Error("Expand requires 2 input.");let l=n[0].dims,p=Array.from(n[1].getBigInt64Array(),Number),b=p.length<l.length?0:p.length-l.length,C=l.length<p.length?0:l.length-p.length;for(;b<p.length&&C<l.length;++b,++C)if(p[b]!==l[C]&&p[b]!==1&&l[C]!==1)throw new Error("Expand requires shape to be broadcastable to input")},fA=(n,l)=>{let p=n.length-l.length,b=[];for(let C=0;C<p;++C)b.push(n[C]);for(let C=0;C<l.length;++C)b.push(l[C]===1?n[C+p]:l[C]);return b},jo=(n,l)=>n.length>l.length?fA(n,l):fA(l,n),pc=n=>{let l=n[0].dims,p=Array.from(n[1].getBigInt64Array(),Number),b=jo(l,p),C=n[0].dataType,E=C===9||Kt.size(l)===1,v=C===9||l.length>0&&l[l.length-1]%4===0?4:1,x=E||b.length>0&&b[b.length-1]%4===0?4:1,L=Math.ceil(Kt.size(b)/x),W=$=>{let j=or("input",C,l.length,v),le=ss("output",C,b.length,x),me;if(C===9){let _e=(Ee,Fe,Ye="")=>`
          let outputIndices${Fe} = ${le.offsetToIndices(`outputOffset + ${Fe}u`)};
          let offset${Fe} = ${j.broadcastedIndicesToOffset(`outputIndices${Fe}`,le)};
          let index${Fe} = offset${Fe} / 4u;
          let component${Fe} = offset${Fe} % 4u;
          ${Ee}[${Fe}] = ${Ye}(${j.getByOffset(`index${Fe}`)}[component${Fe}]);
        `;me=`
        let outputOffset = global_idx * ${x};
        var data = vec4<u32>(0);
        ${_e("data",0,"u32")}
        ${_e("data",1,"u32")}
        ${_e("data",2,"u32")}
        ${_e("data",3,"u32")}
        ${le.setByOffset("global_idx","data")}
      }`}else me=`
        let outputIndices = ${le.offsetToIndices(`global_idx * ${x}`)};
        let inputOffset = ${j.broadcastedIndicesToOffset("outputIndices",le)};
        let data = ${le.type.value}(${j.getByOffset(`inputOffset / ${v}`)});
        ${le.setByOffset("global_idx","data")}
      }`;return`
    ${$.registerUniform("vec_size","u32").declareVariables(j,le)}
    ${$.mainStart()}
    ${$.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
    ${me}`},te=[{type:12,data:L},...Rr(l,b)];return{name:"Expand",shaderCache:{hint:`${b.length};${v}${x}`,inputDependencies:["rank"]},getShaderSource:W,getRunData:()=>({outputs:[{dims:b,dataType:n[0].dataType}],dispatchGroup:{x:Math.ceil(L/64)},programUniforms:te})}},hc=n=>{fc(n.inputs),n.compute(pc(n.inputs),{inputs:[0]})}}),Ql,Nl,bu=z(()=>{qr(),Vr(),ws(),Hi(),Ql=n=>{let l=n[0].dataType,p=Kt.size(n[0].dims),b=Kt.size(n[1].dims),C=b%4===0,E=v=>{let x=or("x",l,[1],4),L=or("bias",l,[1],4),W=ss("y",l,[1],4),te=[{name:"output_vec_size",type:"u32"},{name:"bias_size",type:"u32"}],$=le=>`
      let bias${le}_offset: u32 = (global_idx * 4 + ${le}) % uniforms.bias_size;
      let bias${le} = ${L.getByOffset(`bias${le}_offset / 4`)}[bias${le}_offset % 4];`,j=C?`
      let bias = ${L.getByOffset("global_idx % (uniforms.bias_size / 4)")};`:`${$(0)}${$(1)}${$(2)}${$(3)}
      let bias = ${x.type.value}(bias0, bias1, bias2, bias3);`;return`${v.registerUniforms(te).declareVariables(x,L,W)}

    ${AA(_s(l))}

    ${v.mainStart(Js)}
      ${v.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_vec_size")}

      let x = ${x.getByOffset("global_idx")};
      ${j}
      let x_in = x + bias;
      ${W.setByOffset("global_idx",eo("x_in"))}
    }`};return{name:"FastGeluWithBias",shaderCache:{hint:`${C}`,inputDependencies:["type","type"]},getShaderSource:E,getRunData:v=>({outputs:[{dims:v[0].dims,dataType:v[0].dataType}],programUniforms:[{type:12,data:Math.ceil(p/4)},{type:12,data:b}],dispatchGroup:{x:Math.ceil(p/Js/4)}})}},Nl=n=>{n.inputs.length<2||Kt.size(n.inputs[1].dims)===0?rn(n):n.compute(Ql(n.inputs))}}),mc,pl,bc,hl,Cu=z(()=>{qr(),Vr(),hs(),ws(),mc=n=>{if(!n||n.length!==2)throw new Error("Gather requires 2 inputs.")},pl=(n,l)=>{let p=n[0].dims,b=n[1].dims,C=p.length,E=Kt.normalizeAxis(l.axis,C),v=p.slice(0);v.splice(E,1,...b);let x=p[E],L=n[0].dataType===9?4:1,W=Math.ceil(Kt.size(v)/L),te=[{type:12,data:W},{type:6,data:x},{type:12,data:E},...Rr(n[0].dims,n[1].dims,v)],$=j=>{let le=or("data",n[0].dataType,n[0].dims.length,L),me=or("inputIndices",n[1].dataType,n[1].dims.length),_e=ss("output",n[0].dataType,v.length,L),Ee=Ye=>{let dt=b.length,mt=`var indicesIndices${Ye}  = ${me.type.indices}(0);`;for(let xt=0;xt<dt;xt++)mt+=`${dt>1?`indicesIndices${Ye}[${xt}]`:`indicesIndices${Ye}`} = ${v.length>1?`outputIndices${Ye}[uniforms.axis + ${xt}]`:`outputIndices${Ye}`};`;mt+=`
          var idx${Ye} = ${me.getByIndices(`indicesIndices${Ye}`)};
          if (idx${Ye} < 0) {
            idx${Ye} = idx${Ye} + uniforms.axisDimLimit;
          }
          var dataIndices${Ye} : ${le.type.indices};
        `;for(let xt=0,jt=0;xt<C;xt++)xt===E?(mt+=`${C>1?`dataIndices${Ye}[${xt}]`:`dataIndices${Ye}`} = u32(idx${Ye});`,jt+=dt):(mt+=`${C>1?`dataIndices${Ye}[${xt}]`:`dataIndices${Ye}`} = ${v.length>1?`outputIndices${Ye}[${jt}]`:`outputIndices${Ye}`};`,jt++);return mt},Fe;if(n[0].dataType===9){let Ye=(dt,mt,xt="")=>`
          let outputIndices${mt} = ${_e.offsetToIndices(`outputOffset + ${mt}u`)};
          ${Ee(mt)};
          let offset${mt} = ${le.indicesToOffset(`dataIndices${mt}`)};
          let index${mt} = offset${mt} / 4u;
          let component${mt} = offset${mt} % 4u;
          ${dt}[${mt}] = ${xt}(${le.getByOffset(`index${mt}`)}[component${mt}]);
        `;Fe=`
        let outputOffset = global_idx * ${L};
        var value = vec4<u32>(0);
        ${Ye("value",0,"u32")}
        ${Ye("value",1,"u32")}
        ${Ye("value",2,"u32")}
        ${Ye("value",3,"u32")}
        ${_e.setByOffset("global_idx","value")}
      `}else Fe=`
      let outputIndices = ${_e.offsetToIndices("global_idx")};
      ${Ee("")};
      let value = ${le.getByIndices("dataIndices")};
      ${_e.setByOffset("global_idx","value")};
      `;return`
      ${j.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(le,me,_e)}
      ${j.mainStart()}
        ${j.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        ${Fe}
      }`};return{name:"Gather",shaderCache:{hint:l.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:v,dataType:n[0].dataType}],dispatchGroup:{x:Math.ceil(W/64)},programUniforms:te}),getShaderSource:$}},bc=n=>Xr({axis:n.axis}),hl=(n,l)=>{let p=n.inputs;mc(p),n.compute(pl(n.inputs,l))}}),f0,Ll,ml,wu=z(()=>{qr(),Vr(),ws(),f0=(n,l,p,b,C,E,v,x,L)=>{let W=[{type:12,data:E},{type:12,data:b},{type:12,data:C},{type:12,data:p},{type:12,data:v},{type:12,data:x},{type:12,data:L}],te=[E];W.push(...Rr(l.dims,te));let $=j=>{let le=or("indices_data",l.dataType,l.dims.length),me=ss("input_slice_offsets_data",12,1,1),_e=[le,me],Ee=[{name:"output_size",type:"u32"},{name:"batch_dims",type:"u32"},{name:"input_dims",type:"u32",length:C.length},{name:"sizes_from_slice_dims_data",type:"u32",length:p.length},{name:"num_slices_per_batch",type:"u32"},{name:"input_batch_stride",type:"u32"},{name:"num_slice_dims",type:"u32"}];return`
  ${j.registerUniforms(Ee).declareVariables(..._e)}
  ${j.mainStart()}
    ${j.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let batch_idx = global_idx / uniforms.num_slices_per_batch;
    let base_offset = batch_idx * uniforms.input_batch_stride;

    let slice_indices_base_offset = global_idx * uniforms.num_slice_dims;
    var relative_slice_offset = 0;
    for (var dim_idx = 0u; dim_idx < uniforms.num_slice_dims; dim_idx ++) {
      var index = i32(indices_data[dim_idx + slice_indices_base_offset].x);
      let input_dim_idx = uniforms.batch_dims + dim_idx;
      if (index < 0) {
        ${C.length===1?"index += i32(uniforms.input_dims);":"index += i32(uniforms.input_dims[input_dim_idx]);"}
      }
      ${p.length===1?"relative_slice_offset += index * i32(uniforms.sizes_from_slice_dims_data);":"relative_slice_offset += index * i32(uniforms.sizes_from_slice_dims_data[dim_idx]);"}
    }

    input_slice_offsets_data[global_idx] =  base_offset + u32(relative_slice_offset);
  }`};return n.compute({name:"computeSliceOffsets",shaderCache:{hint:`${C.length}_${p.length}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:te,dataType:n.inputs[1].dataType}],dispatchGroup:{x:Math.ceil(E/64)},programUniforms:W}),getShaderSource:$},{inputs:[l],outputs:[-1]})[0]},Ll=(n,l)=>{let p=n.inputs,b=p[0].dims,C=p[0].dataType,E=p[1].dims,v=E[E.length-1],x=Kt.sizeToDimension(E,E.length-1),L=Kt.sizeFromDimension(b,l.batchDims+v),W=Kt.sizeToDimension(b,l.batchDims),te=Kt.sizeFromDimension(b,l.batchDims),$=x/W,j=new Array(v),le=L;for(let mt=0;mt<v;++mt)j[v-1-mt]=le,le*=b[l.batchDims+v-1-mt];let me=f0(n,p[1],j,l.batchDims,b,x,$,te,v),_e=l.batchDims+v;if(_e>b.length)throw new Error("last dimension of indices must not be larger than rank of input tensor");let Ee=E.slice(0,-1).concat(b.slice(_e)),Fe=Kt.size(Ee),Ye=[{type:12,data:Fe},{type:12,data:L},...Rr(p[0].dims,me.dims,Ee)],dt=mt=>{let xt=or("data",p[0].dataType,p[0].dims.length),jt=or("slice_offsets",12,me.dims.length),Gt=ss("output",p[0].dataType,Ee.length);return`
          ${mt.registerUniform("output_size","u32").registerUniform("slice_size","u32").declareVariables(xt,jt,Gt)}
            ${mt.mainStart()}
            ${mt.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          let slice_offset = slice_offsets[global_idx / uniforms.slice_size];
          output[global_idx] = data[u32(slice_offset) + global_idx % uniforms.slice_size];
        }`};n.compute({name:"GatherND",shaderCache:{hint:l.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:Ee,dataType:C}],dispatchGroup:{x:Math.ceil(Fe/64)},programUniforms:Ye}),getShaderSource:dt},{inputs:[p[0],me]})},ml=n=>({batchDims:n.batch_dims,cacheKey:""})}),Cc,Iu,wc,Rl,ku=z(()=>{qr(),Vr(),hs(),ws(),Cc=(n,l)=>{if(n.length<3||n.length>4)throw new Error("GatherBlockQuantized requires 3 or 4 inputs.");let p=Kt.normalizeAxis(l.quantizeAxis,n[0].dims.length),b=l.blockSize,C=n[0],E=n[2],v=n.length===4?n[3]:void 0;if(E.dims.length!==C.dims.length||!C.dims.map((x,L)=>L===p?Math.ceil(x/b)===E.dims[L]:x===E.dims[L]).reduce((x,L)=>x&&L,!0))throw new Error("Scales must have the same rank as the input tensor and the dims should match except on gatherAxis.");if(v){if(v.dataType!==C.dataType)throw new Error("Zero point must have the same data type as the input tensor.");if(v.dims.length!==E.dims.length||!v.dims.map((x,L)=>x===E.dims[L]).reduce((x,L)=>x&&L,!0))throw new Error("Zero point must have the same rank as the input tensor and the dims should match except on quantizeAxis.")}},Iu=(n,l)=>{let p=n[0].dims,b=n[1].dims,C=p.length,E=Kt.normalizeAxis(l.gatherAxis,C),v=Kt.normalizeAxis(l.quantizeAxis,C),x=p.slice(0);x.splice(E,1,...b);let L=Kt.size(x),W=n[2].dataType,te=n[0].dataType===22,$=[{type:12,data:L},{type:12,data:v},{type:12,data:E},{type:12,data:l.blockSize},...Rr(...n.map((le,me)=>le.dims),x)],j=le=>{let me=or("data",n[0].dataType,n[0].dims.length),_e=or("inputIndices",n[1].dataType,n[1].dims.length),Ee=or("scales",n[2].dataType,n[2].dims.length),Fe=n.length>3?or("zeroPoint",n[3].dataType,n[3].dims.length):void 0,Ye=ss("output",W,x.length),dt=[me,_e,Ee];Fe&&dt.push(Fe);let mt=[{name:"output_size",type:"u32"},{name:"quantize_axis",type:"u32"},{name:"gather_axis",type:"u32"},{name:"block_size",type:"u32"}];return`
        ${le.registerUniforms(mt).declareVariables(...dt,Ye)}
        ${le.mainStart()}
        let output_indices = ${Ye.offsetToIndices("global_idx")};
        var indices_indices = ${_e.type.indices}(0);
        ${b.length>1?`
          for (var i: u32 = 0; i < ${b.length}; i++) {
            let index = ${Ye.indicesGet("output_indices","uniforms.gather_axis + i")};
            ${_e.indicesSet("indices_indices","i","index")};
          }`:`indices_indices = ${Ye.indicesGet("output_indices","uniforms.gather_axis")};`};
        var data_indices = ${me.type.indices}(0);
        for (var i: u32 = 0; i < uniforms.gather_axis; i++) {
          let index = ${Ye.indicesGet("output_indices","i")};
          ${me.indicesSet("data_indices","i","index")};
        }
        var index_from_indices = ${_e.getByIndices("indices_indices")};
        if (index_from_indices < 0) {
          index_from_indices += ${p[E]};
        }
        ${me.indicesSet("data_indices","uniforms.gather_axis","u32(index_from_indices)")};
        for (var i = uniforms.gather_axis + 1; i < ${x.length}; i++) {
          let index = ${Ye.indicesGet("output_indices",`i + ${b.length} - 1`)};
          ${me.indicesSet("data_indices","i","index")};
        }
        let data_offset = ${me.indicesToOffset("data_indices")};
        let data_index = data_offset % 8;
        // Convert 4-bit packed data to 8-bit packed data.
        let packed_4bit_quantized_data = ${me.getByOffset("data_offset / 8")};
        let packed_8bit_quantized_data = (packed_4bit_quantized_data >> (4 * (data_index % 2))) & 0x0f0f0f0f;
        let quantized_data_vec = ${te?"unpack4xI8":"unpack4xU8"}(u32(packed_8bit_quantized_data));
        let quantized_data = quantized_data_vec[data_index / 2];
        var scale_indices = data_indices;
        let quantize_axis_index = ${Ee.indicesGet("data_indices","uniforms.quantize_axis")} / uniforms.block_size;
        ${Ee.indicesSet("scale_indices","uniforms.quantize_axis","quantize_axis_index")};
        var scale = ${Ee.getByIndices("scale_indices")};
        ${Fe?`
              let zero_point_indices = scale_indices;
              let zero_point_offset = ${Fe.indicesToOffset("zero_point_indices")};
              let zero_point_index = zero_point_offset % 8;
              let packed_4bit_zero_points = ${Fe.getByOffset("zero_point_offset / 8")};
              let packed_8bit_zero_points = (packed_4bit_zero_points >> (4 * (zero_point_index % 2))) & 0x0f0f0f0f;
              let zero_point_vec = ${te?"unpack4xI8":"unpack4xU8"}(u32(packed_8bit_zero_points));
              let zero_point = zero_point_vec[zero_point_index / 2];`:"var zero_point = 0"};
        let dequantized_data = ${_s(W)}(quantized_data - zero_point) * scale;
        ${Ye.setByOffset("global_idx","dequantized_data")};
    }`};return{name:"GatherBlockQuantized",shaderCache:{hint:`${l.cacheKey};${n.filter((le,me)=>me!==1).map(le=>le.dims.join("_")).join(";")}`,inputDependencies:Array.from({length:n.length},(le,me)=>"rank")},getRunData:()=>({outputs:[{dims:x,dataType:W}],dispatchGroup:{x:Math.ceil(L/64)},programUniforms:$}),getShaderSource:j}},wc=(n,l)=>{let p=n.inputs;Cc(p,l),n.compute(Iu(n.inputs,l))},Rl=n=>Xr({blockSize:n.blockSize,gatherAxis:n.gatherAxis,quantizeAxis:n.quantizeAxis})}),VA,Ic,yu,kc,_u=z(()=>{qr(),Vr(),hs(),ws(),VA=n=>{if(!n||n.length!==2)throw new Error("GatherElements requires 2 inputs.");if(n[0].dims.length<1)throw new Error("GatherElements requires that the data input be rank >= 1.");if(n[0].dims.length!==n[1].dims.length)throw new Error(`GatherElements requires that the data input and
                     indices input tensors be of same rank.`)},Ic=(n,l)=>{let p=n[0].dims,b=n[0].dataType,C=p.length,E=n[1].dims,v=n[1].dataType,x=Kt.normalizeAxis(l.axis,C),L=p[x],W=E.slice(0),te=Kt.size(W),$=or("input",b,C),j=or("indicesInput",v,E.length),le=ss("output",b,W.length),me=[{type:12,data:te},{type:6,data:L},{type:12,data:x}];return me.push(...Rr(p,E,W)),{name:"GatherElements",shaderCache:{inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:W,dataType:n[0].dataType}],dispatchGroup:{x:Math.ceil(te/64)},programUniforms:me}),getShaderSource:_e=>`
      ${_e.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables($,j,le)}
      ${_e.mainStart()}
      ${_e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

      let outputIndices = ${le.offsetToIndices("global_idx")};

      var idx = ${j.getByOffset("global_idx")};
      if (idx < 0) {
        idx = idx + uniforms.axisDimLimit;
      }
      var inputIndices = ${$.type.indices}(outputIndices);
      ${$.indicesSet("inputIndices","uniforms.axis","u32(idx)")};
      let value = ${$.getByIndices("inputIndices")};

      ${le.setByOffset("global_idx","value")};
  }`}},yu=n=>Xr({axis:n.axis}),kc=(n,l)=>{let p=n.inputs;VA(p),n.compute(Ic(n.inputs,l))}}),yc,WA,_c,jl,ed=z(()=>{qr(),Vr(),ws(),yc=n=>{if(!n)throw new Error("Input is missing");if(n.length<2||n.length>3)throw new Error("Invaid input number.");if(n.length===3&&n[2].dims.length>2)throw new Error("Invalid input shape of C");if(n[0].dataType!==n[1].dataType||n.length===3&&n[0].dataType!==n[2].dataType)throw new Error("Input types are mismatched")},WA=(n,l)=>{let p=n[0].dims.slice(),b=n[1].dims.slice(),[C,E,v]=Lr.getShapeOfGemmResult(p,l.transA,b,l.transB,n.length===3?n[2].dims:void 0),x=[C,E];if(!x)throw new Error("Can't use gemm on the given tensors");let L=16,W=Math.ceil(E/L),te=Math.ceil(C/L),$=!0,j=Kt.size(x),le=[{type:12,data:$?W:j},{type:12,data:C},{type:12,data:E},{type:12,data:v},{type:1,data:l.alpha},{type:1,data:l.beta}],me=["type","type"];n.length===3&&(le.push(...Rr(n[2].dims)),me.push("rank")),le.push(...Rr(x));let _e=Fe=>{let Ye="";l.transA&&l.transB?Ye="value += a[k * uniforms.M + m] * b[n * uniforms.K + k];":l.transA&&!l.transB?Ye="value += a[k * uniforms.M + m] * b[k * uniforms.N + n];":!l.transA&&l.transB?Ye="value += a[m * uniforms.K + k] * b[n * uniforms.K + k];":!l.transA&&!l.transB&&(Ye="value += a[m * uniforms.K + k] * b[k * uniforms.N + n];");let dt=l.alpha===1?"":"value *= uniforms.alpha;",mt=or("a",n[0].dataType,n[0].dims),xt=or("b",n[1].dataType,n[1].dims),jt=mt.type.value,Gt=null,Zt=[mt,xt];n.length===3&&(Gt=or("c",n[2].dataType,n[2].dims.length),Zt.push(Gt));let ar=ss("output",n[0].dataType,x.length);Zt.push(ar);let St=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"},{name:"alpha",type:"f32"},{name:"beta",type:"f32"}];return`
  ${Fe.registerUniforms(St).declareVariables(...Zt)}

  ${Fe.mainStart()}
    ${Fe.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let m = global_idx / uniforms.N;
    let n = global_idx % uniforms.N;

    var value = ${jt}(0);
    for (var k: u32 = 0u; k < uniforms.K; k++) {
      ${Ye}
    }

    ${dt}
    ${Gt!=null?`let cOffset = ${Gt.broadcastedIndicesToOffset("vec2(m, n)",ar)}; value += ${jt}(uniforms.beta) * ${Gt.getByOffset("cOffset")};`:""}
    output[global_idx] = value;
  }`},Ee=Fe=>{let Ye=or("a",n[0].dataType,n[0].dims),dt=or("b",n[1].dataType,n[1].dims),mt=null,xt=[Ye,dt];n.length===3&&(mt=or("c",n[2].dataType,n[2].dims.length),xt.push(mt));let jt=ss("output",n[0].dataType,x.length);xt.push(jt);let Gt=[{name:"num_tile_n",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"},{name:"alpha",type:"f32"},{name:"beta",type:"f32"}],Zt="",ar="";l.transA&&l.transB?(ar=`
      var col = tile_row_start + local_id.x;
      var row = k_start + local_id.y;
      if (col < uniforms.M && row < uniforms.K) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.M + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${Ye.type.value}(0);
      }

      col = k_start + local_id.x;
      row = tile_col_start + local_id.y;
      if (col < uniforms.K && row < uniforms.N) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.K + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${dt.type.value}(0);
      }
      `,Zt="value += tile_a[k][local_id.y] * tile_b[local_id.x][k];"):l.transA&&!l.transB?(ar=`
      var col = tile_row_start + local_id.x;
      var row = k_start + local_id.y;
      if (col < uniforms.M && row < uniforms.K) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.M + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${Ye.type.value}(0);
      }

      col = tile_col_start + local_id.x;
      row = k_start + local_id.y;
      if (col < uniforms.N && row < uniforms.K) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.N + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${dt.type.value}(0);
      }
      `,Zt="value += tile_a[k][local_id.y] * tile_b[k][local_id.x];"):!l.transA&&l.transB?(ar=`
      var col = k_start + local_id.x;
      var row = tile_row_start + local_id.y;
      if (col < uniforms.K && row < uniforms.M) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.K + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${Ye.type.value}(0);
      }

      col = k_start + local_id.x;
      row = tile_col_start + local_id.y;
      if (col < uniforms.K && row < uniforms.N) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.K + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${dt.type.value}(0);
      }
      `,Zt="value += tile_a[local_id.y][k] * tile_b[local_id.x][k];"):!l.transA&&!l.transB&&(ar=`
      var col = k_start + local_id.x;
      var row = tile_row_start + local_id.y;
      if (col < uniforms.K && row < uniforms.M) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.K + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${Ye.type.value}(0);
      }

      col = tile_col_start + local_id.x;
      row = k_start + local_id.y;
      if (col < uniforms.N && row < uniforms.K) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.N + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${dt.type.value}(0);
      }
      `,Zt="value += tile_a[local_id.y][k] * tile_b[k][local_id.x];");let St=l.alpha===1?"":"value *= uniforms.alpha;";return`
  ${Fe.registerUniforms(Gt).declareVariables(...xt)}
  var<workgroup> tile_a: array<array<${Ye.type.storage}, ${L}>, ${L}>;
  var<workgroup> tile_b: array<array<${dt.type.storage}, ${L}>, ${L}>;
  ${Fe.mainStart([L,L,1])}
    let tile_col_start = (workgroup_index % uniforms.num_tile_n) * ${L};
    let tile_row_start = (workgroup_index / uniforms.num_tile_n) * ${L};
    let num_tiles = (uniforms.K - 1) / ${L} + 1;
    var k_start = 0u;
    var value = ${jt.type.value}(0);
    for (var t: u32 = 0u; t < num_tiles; t++) {
      ${ar}
      k_start = k_start + ${L};
      workgroupBarrier();

      for (var k: u32 = 0u; k < ${L}; k++) {
        ${Zt}
      }
      workgroupBarrier();
    }

    ${St}
    let m = tile_row_start + local_id.y;
    let n = tile_col_start + local_id.x;
    ${mt!=null?`let cOffset = ${mt.broadcastedIndicesToOffset("vec2(m, n)",jt)}; value += ${jt.type.value}(uniforms.beta) * ${mt.getByOffset("cOffset")};`:""}
    if (m < uniforms.M && n < uniforms.N) {
      output[m * uniforms.N + n] = value;
    }
  }`};return $?{name:"GemmShared",shaderCache:{hint:`${l.cacheKey}`,inputDependencies:me},getRunData:()=>({outputs:[{dims:x,dataType:n[0].dataType}],dispatchGroup:{x:W*te},programUniforms:le}),getShaderSource:Ee}:{name:"Gemm",shaderCache:{hint:`${l.cacheKey}`,inputDependencies:me},getRunData:()=>({outputs:[{dims:x,dataType:n[0].dataType}],dispatchGroup:{x:Math.ceil(j/64)},programUniforms:le}),getShaderSource:_e}},_c=n=>{let l=n.transA,p=n.transB,b=n.alpha,C=n.beta;return{transA:l,transB:p,alpha:b,beta:C,cacheKey:`${n.transA};${n.transB};${n.alpha===1}`}},jl=(n,l)=>{yc(n.inputs),n.compute(WA(n.inputs,l))}}),no,ko,pA,hA,mA,p0,h0,m0,Vl,vc,xc,bl,b0,Mc,Wl=z(()=>{qr(),Vr(),hs(),ws(),[no,ko,pA,hA]=[0,1,2,3],mA=n=>{if(n[0].dims.length!==4)throw new Error("only 4-D tensor is supported.");if(n[0].dims.length!==n[1].dims.length)throw new Error("input dimensions must be equal to grid dimensions");if(n[0].dims.length-2!==n[1].dims[n[1].dims.length-1])throw new Error(`last dimension of grid must be equal to ${n[0].dims.length-2}`);if(n[0].dims[0]!==n[1].dims[0])throw new Error("grid batch size must match input batch size")},p0=`
  fn gs_get_cubic_coeffs(x: f32) -> vec4<f32> {
    let cubic_alpha = -0.75f;
    let x_abs = abs(x);
    var coeffs: vec4<f32>;
    coeffs[0] = (((cubic_alpha * (x_abs + 1) - 5 * cubic_alpha) * (x_abs + 1) + 8 * cubic_alpha) * (x_abs + 1) - 4 * cubic_alpha);
    coeffs[1] = (((cubic_alpha + 2) * x_abs - (cubic_alpha + 3)) * x_abs * x_abs + 1);
    coeffs[2] = (((cubic_alpha + 2) * (1 - x_abs) - (cubic_alpha + 3)) * (1 - x_abs) * (1 - x_abs) + 1);
    coeffs[3] = (((cubic_alpha * (2 - x_abs) - 5 * cubic_alpha) * (2 - x_abs) + 8 * cubic_alpha) * (2 - x_abs) - 4 * cubic_alpha);
    return coeffs;
  }
`,h0=n=>`
  fn gs_bicubic_interpolate(p: mat4x4<${n}>, x: f32, y: f32) -> ${n} {
    var v: vec4<f32>;
    var coeffs = gs_get_cubic_coeffs(x);
    for (var i = 0; i < 4; i++) {
      v[i] = coeffs[0] * p[i][0] + coeffs[1] * p[i][1] + coeffs[2] * p[i][2] + coeffs[3] * p[i][3];
    }
    coeffs = gs_get_cubic_coeffs(y);
    let pixel = ${n}(coeffs[0] * v[0] + coeffs[1] * v[1] + coeffs[2] * v[2] + coeffs[3] * v[3]);
    return pixel;
  }
`,m0=n=>`
  fn gs_denormalize(n: f32, length: i32) -> f32 {
    ${n.alignCorners===0?`
    // alignCorners: false => [-1, 1] to [-0.5, length - 0.5]
    return ((n + 1.0) * f32(length) - 1.0) / 2.0;
    `:`
    // alignCorners: true => [-1, 1] to [0, length - 1]
    return (n + 1.0) / 2.0 * (f32(length - 1));
    `}
  }
`,Vl=n=>`
  ${n.paddingMode==="reflection"?`
      fn gs_reflect(x: i32, x_min: f32, x_max: f32) -> u32 {
        var dx = 0.0;
        var fx = f32(x);
        let range = x_max - x_min;
        if (fx < x_min) {
          dx = x_min - fx;
          let n = u32(dx / range);
          let r = dx - f32(n) * range;
          if (n % 2 == 0) {
            fx = x_min + r;
          } else {
            fx = x_max - r;
          }
        } else if (fx > x_max) {
          dx = fx - x_max;
          let n = u32(dx / range);
          let r = dx - f32(n) * range;
          if (n % 2 == 0) {
            fx = x_max - r;
          } else {
            fx = x_min + r;
          }
        }
        return u32(fx);
      }`:""}
`,vc=(n,l,p)=>`
  fn pixel_at_grid(r: i32, c: i32, H: i32, W: i32, batch: u32, channel: u32, border: vec4<f32>) -> ${l} {
     var pixel = ${l}(0);
     var indices = vec4<u32>(0);
     indices[${no}] = batch;
     indices[${ko}] = channel;`+(()=>{switch(p.paddingMode){case"zeros":return`
          if (r >= 0 && r < H && c >=0 && c < W) {
            indices[${pA}] = u32(r);
            indices[${hA}] = u32(c);
          }
        `;case"border":return`
          indices[${pA}] = u32(clamp(r, 0, H - 1));
          indices[${hA}] = u32(clamp(c, 0, W - 1));
        `;case"reflection":return`
          indices[${pA}] = gs_reflect(r, border[1], border[3]);
          indices[${hA}] = gs_reflect(c, border[0], border[2]);
        `;default:throw new Error(`padding mode ${p.paddingMode} is not supported`)}})()+`
    return ${n.getByIndices("indices")};
  }
`,xc=(n,l,p)=>(()=>{switch(p.mode){case"nearest":return`
          let result = pixel_at_grid(i32(round(y)), i32(round(x)), H_in, W_in, indices[${no}], indices[${ko}], border);
        `;case"bilinear":return`
          let x1 = i32(floor(x));
          let y1 = i32(floor(y));
          let x2 = x1 + 1;
          let y2 = y1 + 1;

          let p11 = pixel_at_grid(y1, x1, H_in, W_in, indices[${no}], indices[${ko}], border);
          let p12 = pixel_at_grid(y1, x2, H_in, W_in, indices[${no}], indices[${ko}], border);
          let p21 = pixel_at_grid(y2, x1, H_in, W_in, indices[${no}], indices[${ko}], border);
          let p22 = pixel_at_grid(y2, x2, H_in, W_in, indices[${no}], indices[${ko}], border);

          let dx2 = ${l}(f32(x2) - x);
          let dx1 = ${l}(x - f32(x1));
          let dy2 = ${l}(f32(y2) - y);
          let dy1 = ${l}(y - f32(y1));
          let result = dy2 * (dx2 * p11 + dx1 * p12) + dy1 * (dx2 * p21 + dx1 * p22);
        `;case"bicubic":return`
          let x0 = i32(floor(x)) - 1;
          let y0 = i32(floor(y)) - 1;
          var p: mat4x4<${l}>;
          for (var h = 0; h < 4; h++) {
            for (var w = 0; w < 4; w++) {
              p[h][w] = pixel_at_grid(h + y0, w + x0, H_in, W_in, indices[${no}], indices[${ko}], border);
            }
          }

          let dx = x - f32(x0 + 1);
          let dy = y - f32(y0 + 1);
          let result = gs_bicubic_interpolate(p, dx, dy);
        `;default:throw new Error(`mode ${p.mode} is not supported`)}})()+`${n.setByOffset("global_idx","result")}`,bl=(n,l)=>{let p=or("x",n[0].dataType,n[0].dims.length),b=[n[1].dims[0],n[1].dims[1],n[1].dims[2]],C=or("grid",n[1].dataType,b.length,2),E=[n[0].dims[0],n[0].dims[1],n[1].dims[1],n[1].dims[2]];l.format==="NHWC"&&(E=[n[0].dims[0],n[1].dims[1],n[1].dims[2],n[0].dims[3]],[no,ko,pA,hA]=[0,3,1,2]);let v=ss("output",n[0].dataType,E.length),x=p.type.value,L=Kt.size(E),W=[{type:12,data:L},...Rr(n[0].dims,b,E)],te=$=>`
  ${$.registerUniform("output_size","u32").declareVariables(p,C,v)}
  ${p0}
  ${h0(x)}
  ${m0(l)}
  ${Vl(l)}
  ${vc(p,x,l)}

  ${$.mainStart()}
    ${$.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let H_in = i32(uniforms.x_shape[${pA}]);
      let W_in = i32(uniforms.x_shape[${hA}]);

      ${l.alignCorners===0?`
      let x_min = -0.5;
      let x_max = f32(W_in) - 0.5;
      let y_min = -0.5;
      let y_max = f32(H_in) - 0.5;
      `:`
      let x_min = 0.0;
      let x_max = f32(W_in) - 1.0;
      let y_min = 0.0;
      let y_max = f32(H_in) - 1.0;
      `};
      let border = vec4<f32>(x_min, y_min, x_max, y_max);

      let indices = ${v.offsetToIndices("global_idx")};
      var grid_indices = vec3<u32>(indices[${no}], indices[${pA}], indices[${hA}]);
      let nxy = ${C.getByIndices("grid_indices")};
      var x = gs_denormalize(f32(nxy[0]), W_in);
      var y = gs_denormalize(f32(nxy[1]), H_in);

      ${xc(v,x,l)}
  }`;return{name:"GridSample",shaderCache:{hint:`${l.cacheKey}`,inputDependencies:["type","type"]},getRunData:$=>{let j=Kt.size(E);return{outputs:[{dims:E,dataType:$[0].dataType}],dispatchGroup:{x:Math.ceil(j/64)},programUniforms:W}},getShaderSource:te}},b0=(n,l)=>{mA(n.inputs),n.compute(bl(n.inputs,l))},Mc=n=>Xr({alignCorners:n.align_corners,mode:n.mode,paddingMode:n.padding_mode,format:n.format})}),Kn,Ec,C0,Ul,w0,yo,vu,Bc=z(()=>{qr(),Vr(),hs(),at(),co(),ws(),Ni(),Kn=(n,l)=>n.length>l&&n[l].dims.length>0?n[l]:void 0,Ec=(n,l)=>{let p=n[0],b=Kn(n,1),C=Kn(n,2),E=Kn(n,3),v=Kn(n,4),x=Kn(n,5),L=Kn(n,6),W=Kn(n,7);if(p.dims.length!==3&&p.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let te=p.dims[0],$=p.dims[1],j=p.dims.length===3?p.dims[2]:l.numHeads*p.dims[4],le=$,me=0,_e=0,Ee=Math.floor(j/l.numHeads);if(L&&W&&Kt.size(L.dims)&&Kt.size(W.dims)){if(L.dims.length!==4)throw new Error('Input "past_key" is expected to have 4 dimensions');if(L.dims[0]!==te||L.dims[1]!==l.numHeads||L.dims[3]!==Ee)throw new Error('Input "past_key" shape (batch_size, num_heads, past_sequence_length, head_size)');if(W.dims[0]!==te||W.dims[1]!==l.numHeads||W.dims[3]!==Ee)throw new Error('Input "past_value" shape (batch_size, num_heads, past_sequence_length, head_size)');if(L.dims[2]!==W.dims[2])throw new Error('Input "past_key" and "past_value" shall have same dim 2 (past_sequence_length)');if(W.dims.length!==4)throw new Error('Input "past_value" is expected to have 4 dimensions');me=L.dims[2],_e=L.dims[2]}else if(L&&Kt.size(L.dims)||W&&Kt.size(W.dims))throw new Error('Input "past_key" and "past_value" shall be both present or both absent');let Fe;if(b&&Kt.size(b.dims)>0){if(p.dims.length!==3)throw new Error('Input "query" is expected to have 3 dimensions when key is given');if(b.dims.length<3||b.dims.length>5)throw new Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(p.dims[0]!==b.dims[0])throw new Error('Input "query" and "key" shall have same dim 0 (batch size)');if(b.dims.length===3){if(b.dims[2]!==p.dims[2])throw new Error('Input "query" and "key" shall have same dim 2 (hidden_size)');Fe=2,le=b.dims[1]}else if(b.dims.length===5){if(b.dims[2]!==l.numHeads||b.dims[3]!==2||b.dims[4]!==Ee)throw new Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(C)throw new Error('Expect "value" be none when "key" has packed kv format.');Fe=5,le=b.dims[1]}else{if(b.dims[1]!==l.numHeads||b.dims[3]!==Ee)throw new Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');Fe=0,le=b.dims[2]}}else{if(p.dims.length!==5)throw new Error('Input "query" is expected to have 5 dimensions when key is empty');if(p.dims[2]!==l.numHeads||p.dims[3]!==3)throw new Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');Fe=3}if(E&&Kt.size(E.dims)>0){if(E.dims.length!==1)throw new Error('Input "bias" is expected to have 1 dimension');if(b&&b.dims.length===5&&b.dims[3]===2)throw new Error("bias is not allowed for packed kv.")}let Ye=me+le,dt=0;if(v&&Kt.size(v.dims)>0){dt=8;let Gt=v.dims;throw Gt.length===1?Gt[0]===te?dt=1:Gt[0]===3*te+2&&(dt=3):Gt.length===2&&Gt[0]===te&&Gt[1]===Ye&&(dt=5),dt===8?new Error('Input "key_padding_mask" shape shall be (batch_size) or (batch_size, total_sequence_length)'):new Error("Mask not supported")}let mt=!1,xt=j;if(C&&Kt.size(C.dims)>0){if(C.dims.length!==3&&C.dims.length!==4)throw new Error('Input "value" is expected to have 3 or 4 dimensions');if(p.dims[0]!==C.dims[0])throw new Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(C.dims.length===3){if(le!==C.dims[1])throw new Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');xt=C.dims[2]}else{if(le!==C.dims[2])throw new Error('Input "key" and "value" shall have the same dim 2 (kv_sequence_length)');xt=C.dims[1]*C.dims[3],mt=!0}}let jt=!1;if(v&&Kt.size(v.dims)>0)throw new Error("Key padding mask is not supported");if(x&&Kt.size(x.dims)>0){if(x.dims.length!==4)throw new Error('Input "attention_bias" is expected to have 4 dimensions');if(x.dims[0]!==te||x.dims[1]!==l.numHeads||x.dims[2]!==$||x.dims[3]!==Ye)throw new Error('Expect "attention_bias" shape (batch_size, num_heads, sequence_length, total_sequence_length)')}return{batchSize:te,sequenceLength:$,pastSequenceLength:me,kvSequenceLength:le,totalSequenceLength:Ye,maxSequenceLength:_e,inputHiddenSize:0,hiddenSize:j,vHiddenSize:xt,headSize:Ee,vHeadSize:Math.floor(xt/l.numHeads),numHeads:l.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:l.maskFilterValue,maskType:dt,scale:l.scale,broadcastResPosBias:jt,passPastInKv:mt,qkvFormat:Fe}},C0=n=>Xr({...n}),Ul=Xr({perm:[0,2,1,3]}),w0=(n,l,p,b,C,E,v)=>{let x=[b,C,E],L=Kt.size(x),W=[{type:12,data:L},{type:12,data:v},{type:12,data:E}],te=$=>{let j=ss("qkv_with_bias",l.dataType,x),le=or("qkv",l.dataType,x),me=or("bias",p.dataType,x),_e=[{name:"output_size",type:"u32"},{name:"bias_offset",type:"u32"},{name:"hidden_size",type:"u32"}];return`
  ${$.registerUniforms(_e).declareVariables(le,me,j)}
  ${$.mainStart()}
    ${$.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let bias_offset_idx = (global_idx % uniforms.hidden_size) + uniforms.bias_offset;

    qkv_with_bias[global_idx] = qkv[global_idx] + bias[bias_offset_idx];
  }`};return n.compute({name:"MultiHeadAttentionAddBias",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:x,dataType:l.dataType,gpuDataType:0}],dispatchGroup:{x:Math.ceil(L/64)},programUniforms:W}),getShaderSource:te},{inputs:[l,p],outputs:[-1]})[0]},yo=(n,l,p,b,C,E,v,x)=>{let L=E;if(v&&Kt.size(v.dims)>0){if(b===1)throw new Error("AddBiasReshape is not implemented. Please export your model with packed QKV or KV");return L=w0(n,E,v,l,b,p*C,x),L=L.reshape([l,b,p,C]),p===1||b===1?L:n.compute(Un(L,Ul.perm),{inputs:[L],outputs:[-1]})[0]}else return E.dims.length===3&&(L=E.reshape([l,b,p,C])),p===1||b===1?L:n.compute(Un(L,Ul.perm),{inputs:[L],outputs:[-1]})[0]},vu=(n,l)=>{let p=Ec(n.inputs,l),b=n.inputs[0],C=Kn(n.inputs,1),E=Kn(n.inputs,2),v=Kn(n.inputs,3),x=Kn(n.inputs,4),L=Kn(n.inputs,5),W=Kn(n.inputs,6),te=Kn(n.inputs,7);if(b.dims.length===5)throw new Error("Packed QKV is not implemented");if((C==null?void 0:C.dims.length)===5)throw new Error("Packed KV is not implemented");let $=C&&E&&C.dims.length===4&&E.dims.length===4,j=yo(n,p.batchSize,p.numHeads,p.sequenceLength,p.headSize,b,v,0);if($)return So(n,j,C,E,x,void 0,W,te,L,p);if(!C||!E)throw new Error("key and value must be provided");let le=yo(n,p.batchSize,p.numHeads,p.kvSequenceLength,p.headSize,C,v,p.hiddenSize),me=yo(n,p.batchSize,p.numHeads,p.kvSequenceLength,p.vHeadSize,E,v,2*p.hiddenSize);So(n,j,le,me,x,void 0,W,te,L,p)}}),Tc,I0,k0,Hl,y0,Pc,Dc,Yl=z(()=>{qr(),Vr(),hs(),ws(),Tc=n=>{if(!n||n.length<1)throw new Error("too few inputs")},I0=(n,l)=>{let p=[],b=l.numOutputs;return n[1].dims[0]>0&&(n[1].getBigInt64Array().forEach(C=>p.push(Number(C))),b=p.length),Xr({numOutputs:b,axis:l.axis,splitSizes:p})},k0=n=>`
fn calculateOutputIndex(index: u32) -> u32 {
    for (var i: u32 = 0u; i < ${n}u; i += 1u ) {
    if (index < ${Ir("uniforms.size_in_split_axis","i",n)}) {
        return i;
    }
    }
    return ${n}u;
}`,Hl=n=>{let l=n.length,p=[];for(let b=0;b<l;++b){let C=n[b].setByIndices("indices","input[global_idx]");l===1?p.push(C):b===0?p.push(`if (output_number == ${b}u) { ${C} }`):b===l-1?p.push(`else { ${C} }`):p.push(`else if (output_number == ${b}) { ${C} }`)}return`
      fn writeBufferData(output_number: u32, indices: ${n[0].type.indices}, global_idx: u32) {
        ${p.join(`
`)}
      }`},y0=(n,l)=>{let p=n[0].dims,b=Kt.size(p),C=n[0].dataType,E=Kt.normalizeAxis(l.axis,p.length),v=new Array(l.numOutputs),x=or("input",C,p.length),L=new Array(l.numOutputs),W=[],te=[],$=0,j=[{type:12,data:b}];for(let me=0;me<l.numOutputs;me++){$+=l.splitSizes[me],L[me]=$;let _e=p.slice();_e[E]=l.splitSizes[me],te.push(_e),v[me]=ss(`output${me}`,C,_e.length),W.push({dims:te[me],dataType:n[0].dataType})}j.push({type:12,data:L},...Rr(p,...te));let le=me=>`
  ${me.registerUniform("input_size","u32").registerUniform("size_in_split_axis","u32",L.length).declareVariables(x,...v)}
  ${k0(L.length)}
  ${Hl(v)}

  ${me.mainStart()}
    ${me.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.input_size")}

    var indices = ${x.offsetToIndices("global_idx")};
    var index = ${x.indicesGet("indices",E)};
    let output_number = calculateOutputIndex(index);
    if (output_number != 0) {
      index -= ${Ir("uniforms.size_in_split_axis","output_number - 1u",L.length)};
      ${x.indicesSet("indices",E,"index")};
    }
    writeBufferData(output_number, indices, global_idx);
  }`;return{name:"Split",shaderCache:{hint:l.cacheKey,inputDependencies:["rank"]},getShaderSource:le,getRunData:()=>({outputs:W,dispatchGroup:{x:Math.ceil(b/64)},programUniforms:j})}},Pc=(n,l)=>{Tc(n.inputs);let p=n.inputs.length===1?l:I0(n.inputs,l);n.compute(y0(n.inputs,p),{inputs:[0]})},Dc=n=>{let l=n.axis,p=n.splitSizes,b=n.numOutputs<0?p.length:n.numOutputs;if(b!==p.length)throw new Error("numOutputs and splitSizes lengh must be equal");return Xr({axis:l,numOutputs:b,splitSizes:p})}}),xu,Mu,Cl,_0,Eu=z(()=>{hs(),co(),Bc(),Yl(),Ni(),xu=(n,l)=>{if(l.doRotary)throw new Error("GroupQuerryAttention do_rotary attribute is not supported");if(l.doRotary&&n.length<=7)throw new Error("cos_cache and sin_cache inputs are required if do_rotary is specified");let p=n[0],b=n[1],C=n[2],E=n[3],v=n[4];if(l.localWindowSize!==-1)throw new Error("Local attention is not supported");if(l.softcap!==0)throw new Error("Softcap is not supported");if(l.rotaryInterleaved!==0)throw new Error("Rotary interleaved is not supported");if(l.smoothSoftmax)throw new Error("Smooth softmax is not supported");if(p.dims.length!==3&&p.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let x=!1,L=p.dims[0],W=p.dims[1],te=p.dims.length===3?x?p.dims[2]/3:p.dims[2]:l.numHeads*p.dims[4],$=W,j=0,le=!b||b.dims.length===0,me=Math.floor(le?te/(l.numHeads+2*l.kvNumHeads):te/l.numHeads);le&&(te=me*l.numHeads);let _e=E&&E.dims.length!==0,Ee=v&&v.dims.length!==0;if(_e&&E.dims.length===4&&E.dims[0]===L&&E.dims[1]!==l.kvNumHeads&&E.dims[2]===l.kvNumHeads&&E.dims[3]===me)throw new Error("BSNH pastKey/pastValue is not supported");if(_e&&Ee){if(E.dims.length!==4)throw new Error('Input "past_key" is expected to have 4 dimensions');if(v.dims.length!==4)throw new Error('Input "past_value" is expected to have 4 dimensions');j=E.dims[2]}else if(_e||Ee)throw new Error('Input "past_key" and "past_value" shall be both present or both absent');let Fe=1;if(b&&b.dims.length>0){if(p.dims.length!==3)throw new Error('Input "query" is expected to have 3 dimensions when key is given');if(b.dims.length<3||b.dims.length>5)throw new Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(p.dims[0]!==b.dims[0])throw new Error('Input "query" and "key" shall have same dim 0 (batch size)');if(b.dims.length===3){if(p.dims[2]%b.dims[2]!==0)throw new Error('Dimension 2 of "query" should be a multiple of "key"');$=b.dims[1]}else if(b.dims.length===5){if(b.dims[2]!==l.numHeads||b.dims[3]!==2||b.dims[4]!==me)throw new Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(C)throw new Error('Expect "value" be none when "key" has packed kv format.');$=b.dims[1]}else{if(b.dims[1]!==l.numHeads||b.dims[3]!==me)throw new Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');$=b.dims[2]}}else{if(p.dims.length!==3&&p.dims.length!==5)throw new Error('Input "query" is expected to have 3 or 5 dimensions when key is empty');if(p.dims.length===5&&(p.dims[2]!==l.numHeads||p.dims[3]!==3))throw new Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');Fe=3}let Ye=0,dt=!1,mt=l.kvNumHeads?me*l.kvNumHeads:te;if(C&&C.dims.length>0){if(C.dims.length!==3&&C.dims.length!==4)throw new Error('Input "value" is expected to have 3 or 4 dimensions');if(p.dims[0]!==C.dims[0])throw new Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(C.dims.length===3){if($!==C.dims[1])throw new Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');mt=C.dims[2]}else{if($!==C.dims[2])throw new Error('Input "past_key" and "past_value" shall have the same dim 2 (kv_sequence_length)');mt=C.dims[1]*C.dims[3],dt=!0}}let xt=n.length>4?n[5]:void 0;if(xt&&xt.dims.length!==1&&xt.dims[0]!==L)throw new Error('Input "seqlens" is expected to have 1 dimension and the same dim 0 as batch_size');return{batchSize:L,sequenceLength:W,pastSequenceLength:j,kvSequenceLength:$,totalSequenceLength:-1,maxSequenceLength:-1,inputHiddenSize:0,hiddenSize:te,vHiddenSize:mt,headSize:me,vHeadSize:Math.floor(mt/l.kvNumHeads),numHeads:l.numHeads,kvNumHeads:l.kvNumHeads,nReps:l.numHeads/l.kvNumHeads,pastPresentShareBuffer:!1,maskType:Ye,scale:l.scale,broadcastResPosBias:!1,passPastInKv:dt,qkvFormat:Fe}},Mu=Xr({perm:[0,2,1,3]}),Cl=(n,l,p)=>{let b=l,C=p.kvNumHeads;return l.dims.length===3&&p.kvSequenceLength!==0&&(b=l.reshape([p.batchSize,p.kvSequenceLength,C,p.headSize]),b=n.compute(Un(b,Mu.perm),{inputs:[b],outputs:[-1]})[0]),b},_0=(n,l)=>{var Ee;let p=xu(n.inputs,l);if(n.inputs[0].dims.length===5)throw new Error("Packed QKV is not implemented");if(((Ee=n.inputs[1])==null?void 0:Ee.dims.length)===5)throw new Error("Packed KV is not implemented");let b=n.inputs[0],C=n.inputs[1]&&n.inputs[1].dims.length>0?n.inputs[1]:void 0,E=n.inputs[2]&&n.inputs[2].dims.length>0?n.inputs[2]:void 0,v=n.inputs[3]&&n.inputs[3].dims.length!==0?n.inputs[3]:void 0,x=n.inputs[4]&&n.inputs[4].dims.length!==0?n.inputs[4]:void 0,L=n.inputs.length>4?n.inputs[5]:void 0,W=n.inputs.length>5?n.inputs[6]:void 0,te=p.kvNumHeads?p.kvNumHeads:p.numHeads,$=Xr({axis:2,numOutputs:3,splitSizes:[p.numHeads*p.headSize,te*p.headSize,te*p.headSize]}),[j,le,me]=!C&&!E?n.compute(y0([b],$),{inputs:[b],outputs:[-1,-1,-1]}):[b,C,E],_e=yo(n,p.batchSize,p.numHeads,p.sequenceLength,p.headSize,j,void 0,0);So(n,_e,Cl(n,le,p),Cl(n,me,p),void 0,void 0,v,x,void 0,p,L,W)}}),Kl,v0,Bu,x0,M0=z(()=>{qr(),Vr(),Ni(),ws(),Kl=(n,l,p,b,C,E,v,x)=>{let L=cs(E),W=L===1?"f32":`vec${L}f`,te=L===1?"vec2f":`mat2x${L}f`,$=C*v,j=64;$===1&&(j=256);let le=[C,v,E/L],me=[C,v,2],_e=["rank","type","type"],Ee=[];Ee.push(...Rr(le,me));let Fe=Ye=>{let dt=or("x",l.dataType,3,L),mt=or("scale",p.dataType,p.dims),xt=or("bias",b.dataType,b.dims),jt=ss("output",1,3,2),Gt=[dt,mt,xt,jt];return`
  var<workgroup> workgroup_shared : array<${te}, ${j}>;
  const workgroup_size = ${j}u;
  ${Ye.declareVariables(...Gt)}
  ${Ye.mainStart(j)}
    let batch = workgroup_index / uniforms.x_shape[1];
    let channel = workgroup_index % uniforms.x_shape[1];
    let hight = uniforms.x_shape[2];
    // initialize workgroup memory
    var sum = ${W}(0);
    var squared_sum = ${W}(0);
    for (var h = local_idx; h < hight; h += workgroup_size) {
      let value = ${W}(${dt.get("batch","channel","h")});
      sum += value;
      squared_sum += value * value;
    }
    workgroup_shared[local_idx] = ${te}(sum, squared_sum);
    workgroupBarrier();

    for (var currSize = workgroup_size >> 1;  currSize > 0; currSize = currSize >> 1) {
      if (local_idx < currSize) {
        workgroup_shared[local_idx] = workgroup_shared[local_idx] + workgroup_shared[local_idx + currSize];
      }
      workgroupBarrier();
    }
    if (local_idx == 0) {
      let sum_final = ${Ua("workgroup_shared[0][0]",L)} / f32(hight * ${L});
      let squared_sum_final = ${Ua("workgroup_shared[0][1]",L)} / f32(hight * ${L});

      let inv_std_dev = inverseSqrt(squared_sum_final - sum_final * sum_final + f32(${x}));
      let channel_scale = inv_std_dev * f32(scale[channel]);
      let channel_shift = f32(bias[channel]) - sum_final * channel_scale;
      output[workgroup_index] = vec2f(channel_scale, channel_shift);
    }
  }`};return n.compute({name:"InstanceNormComputeChannelScaleShift",shaderCache:{hint:`${L};${x};${j}`,inputDependencies:_e},getRunData:()=>({outputs:[{dims:me,dataType:1}],dispatchGroup:{x:$},programUniforms:Ee}),getShaderSource:Fe},{inputs:[l,p,b],outputs:[-1]})[0]},v0=(n,l,p)=>{let b=l[0].dims,C=b,E=2,v=b[0],x=b[1],L=Kt.sizeFromDimension(b,E),W=cs(L),te=Kt.size(C)/W,$=Kl(n,l[0],l[1],l[2],v,L,x,p.epsilon),j=[v,x,L/W],le=[v,x],me=["type","none"],_e=Ee=>{let Fe=or("x",l[0].dataType,j.length,W),Ye=or("scale_shift",1,le.length,2),dt=ss("output",l[0].dataType,j.length,W),mt=[Fe,Ye,dt];return`
  ${Ee.registerUniform("output_size","u32").declareVariables(...mt)}
  ${Ee.mainStart()}
  ${Ee.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let outputIndices = ${dt.offsetToIndices("global_idx")};
      let batch = outputIndices[0];
      let channel = outputIndices[1];
      let scale_shift = ${Ye.getByIndices("vec2<u32>(batch, channel)")};
      let value = ${Fe.getByOffset("global_idx")} * ${dt.type.value}(scale_shift.x) + ${dt.type.value}(scale_shift.y);
      ${dt.setByOffset("global_idx","value")};
  }`};n.compute({name:"InstanceNormalization",shaderCache:{hint:`${W}`,inputDependencies:me},getRunData:()=>({outputs:[{dims:C,dataType:l[0].dataType}],dispatchGroup:{x:Math.ceil(te/64)},programUniforms:[{type:12,data:te},...Rr(j,le,j)]}),getShaderSource:_e},{inputs:[l[0],$]})},Bu=(n,l,p)=>{let b=l[0].dims,C=b,E=b[0],v=b[b.length-1],x=Kt.sizeFromDimension(b,1)/v,L=cs(v),W=Kt.size(C)/L,te=[{type:12,data:x},{type:12,data:Math.floor(v/L)}],$=["type","type"],j=!1,le=[0,b.length-1];for(let Fe=0;Fe<b.length-2;Fe++)j=j||b[Fe+1]!==1,le.push(Fe+1);j=j&&b[b.length-1]!==1;let me=j?n.compute(Un(n.inputs[0],le),{inputs:[n.inputs[0]],outputs:[-1]})[0]:n.inputs[0].reshape(Array.from({length:b.length},(Fe,Ye)=>b[le[Ye]])),_e=Kl(n,me,l[1],l[2],E,x,v,p.epsilon),Ee=Fe=>{let Ye=es(l[0].dataType),dt=L===1?"vec2f":`mat${L}x2f`,mt=Gt=>{let Zt=Gt===0?"x":"y",ar=L===1?"f32":`vec${L}f`;switch(L){case 1:return`${Ye}(${ar}(scale.${Zt}))`;case 2:return`vec2<${Ye}>(${ar}(scale[0].${Zt}, scale[1].${Zt}))`;case 4:return`vec4<${Ye}>(${ar}(scale[0].${Zt}, scale[1].${Zt}, scale[2].${Zt}, scale[3].${Zt}))`;default:throw new Error(`Not supported compoents ${L}`)}},xt=or("input",l[0].dataType,l[0].dims,L),jt=ss("output",l[0].dataType,C,L);return`
  @group(0) @binding(0) var<storage, read> input : array<${xt.type.storage}>;
  @group(0) @binding(1) var<storage, read> scale_input : array<${dt}>;
  @group(0) @binding(2) var<storage, read_write> output : array<${jt.type.storage}>;
  struct Uniforms {H: u32, C : u32};
  @group(0) @binding(3) var<uniform> uniforms: Uniforms;

  ${Fe.mainStart()}
    let current_image_number = global_idx / (uniforms.C * uniforms.H);
    let current_channel_number = global_idx % uniforms.C;

    let scale_offset = current_image_number * uniforms.C + current_channel_number;
    let scale = scale_input[scale_offset];
    output[global_idx] = fma(input[global_idx], ${mt(0)}, ${mt(1)});
  }`};n.compute({name:"InstanceNormalizationNHWC",shaderCache:{hint:`${L}`,inputDependencies:$},getRunData:()=>({outputs:[{dims:C,dataType:l[0].dataType}],dispatchGroup:{x:Math.ceil(W/64)},programUniforms:te}),getShaderSource:Ee},{inputs:[l[0],_e]})},x0=(n,l)=>{l.format==="NHWC"?Bu(n,n.inputs,l):v0(n,n.inputs,l)}}),Sc,Gc,ql,Tu=z(()=>{qr(),Vr(),ws(),Sc=n=>{if(!n||n.length<2)throw new Error("layerNorm requires at least 2 inputs.")},Gc=(n,l,p)=>{let b=l.simplified,C=n[0].dims,E=n[1],v=!b&&n[2],x=C,L=Kt.normalizeAxis(l.axis,C.length),W=Kt.sizeToDimension(C,L),te=Kt.sizeFromDimension(C,L),$=Kt.size(E.dims),j=v?Kt.size(v.dims):0;if($!==te||v&&j!==te)throw new Error(`Size of X.shape()[axis:] == ${te}.
       Size of scale and bias (if provided) must match this.
       Got scale size of ${$} and bias size of ${j}`);let le=[];for(let xt=0;xt<C.length;++xt)xt<L?le.push(C[xt]):le.push(1);let me=cs(te),_e=["type","type"],Ee=[{type:12,data:W},{type:1,data:te},{type:12,data:Math.floor(te/me)},{type:1,data:l.epsilon}];v&&_e.push("type");let Fe=p>1,Ye=p>2,dt=xt=>{let jt=es(n[0].dataType),Gt=[or("x",n[0].dataType,n[0].dims,me),or("scale",E.dataType,E.dims,me)];v&&Gt.push(or("bias",v.dataType,v.dims,me)),Gt.push(ss("output",n[0].dataType,x,me)),Fe&&Gt.push(ss("mean_data_output",1,le)),Ye&&Gt.push(ss("inv_std_output",1,le));let Zt=[{name:"norm_count",type:"u32"},{name:"norm_size",type:"f32"},{name:"norm_size_vectorized",type:"u32"},{name:"epsilon",type:"f32"}];return`
  ${xt.registerUniforms(Zt).declareVariables(...Gt)}
  ${xt.mainStart()}
    ${xt.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.norm_count")}
    let offset = global_idx * uniforms.norm_size_vectorized;
    var mean_vector = ${Da("f32",me)};
    var mean_square_vector = ${Da("f32",me)};

    for (var h: u32 = 0u; h < uniforms.norm_size_vectorized; h++) {
      let value = ${Us(jt,me,"x[h + offset]")};
      mean_vector += value;
      mean_square_vector += value * value;
    }
    let mean = ${Ua("mean_vector",me)} / uniforms.norm_size;
    let inv_std_dev = inverseSqrt(${Ua("mean_square_vector",me)} / uniforms.norm_size ${b?"":"- mean * mean"} + uniforms.epsilon);

    for (var j: u32 = 0; j < uniforms.norm_size_vectorized; j++) {
      let f32input = ${Us(jt,me,"x[j + offset]")};
      let f32scale = ${Us(jt,me,"scale[j]")};
      output[j + offset] = ${Gt[0].type.value}((f32input ${b?"":"- mean"}) * inv_std_dev * f32scale
        ${v?`+ ${Us(jt,me,"bias[j]")}`:""}
      );
    }

    ${Fe?"mean_data_output[global_idx] = mean":""};
    ${Ye?"inv_std_output[global_idx] = inv_std_dev":""};
  }`},mt=[{dims:x,dataType:n[0].dataType}];return Fe&&mt.push({dims:le,dataType:1}),Ye&&mt.push({dims:le,dataType:1}),{name:"LayerNormalization",shaderCache:{hint:`${me};${p};${b}`,inputDependencies:_e},getRunData:()=>({outputs:mt,dispatchGroup:{x:Math.ceil(W/64)},programUniforms:Ee}),getShaderSource:dt}},ql=(n,l)=>{Sc(n.inputs),n.compute(Gc(n.inputs,l,n.outputCount))}}),Fc,Xl,Pu=z(()=>{Vr(),Ar(),ga(),Fc=n=>{if(!n||n.length!==2)throw new Error("MatMul requires 2 inputs.");if(n[0].dims[n[0].dims.length-1]!==n[1].dims[n[1].dims.length-2])throw new Error("shared dimension does not match.")},Xl=n=>{Fc(n.inputs);let l=Or.calcShape(n.inputs[0].dims,n.inputs[1].dims,!0);if(!l)throw new Error("Can't use matmul on the given tensors");let p=l[l.length-1],b=n.inputs[0].dims[n.inputs[0].dims.length-1];if(p<8&&b<8)n.compute(Xt(n.inputs,{activation:""},l));else{let C=l[l.length-2],E=Kt.size(n.inputs[0].dims.slice(0,-2)),v=Kt.size(n.inputs[1].dims.slice(0,-2));if(E!==1&&C===1&&v===1){let x=n.inputs[0].reshape([1,E,b]),L=n.inputs[1].reshape([1,b,p]),W=[1,E,p],te=[x,L];n.compute($s(te,{activation:""},l,W),{inputs:te})}else n.compute($s(n.inputs,{activation:""},l))}}}),zc,E0,Oc,Qc,Nc,Lc=z(()=>{qr(),Vr(),hs(),ws(),zc=(n,l)=>{if(n.length<3||n.length>4)throw new Error("MatMulNBits requires 3 or 4 inputs");let p=n[0],b=p.dims.length;if(p.dims[b-1]!==l.k)throw new Error("The last dim of input shape does not match the k value");let C=Math.floor((l.k+l.blockSize-1)/l.blockSize),E=l.blockSize/8*l.bits,v=n[1];if(!Kt.areEqual(v.dims,[l.n,C,E]))throw new Error("The second inputs must be 3D tensor with shape N X nBlocksPerCol X blobSize");let x=n[2].dims;if(Kt.size(x)!==l.n*C)throw new Error("scales input size error.");if(n.length===4){let L=n[3].dims,W=l.bits>4?l.n*C:l.n*Math.floor((C+1)/2);if(Kt.size(L)!==W)throw new Error("zeroPoints input size error.")}},E0=(n,l)=>{let p=n[0].dims,b=p.length,C=p[b-2],E=l.k,v=l.n,x=p.slice(0,b-2),L=Kt.size(x),W=n[1].dims[2]/4,te=n[0].dataType,$=cs(l.k),j=cs(W),le=cs(v),me=x.concat([C,v]),_e=C>1&&v/le%2===0?2:1,Ee=Kt.size(me)/le/_e,Fe=64,Ye=[],dt=[L,C,E/$],mt=Kt.convertShape(n[1].dims).slice();mt.splice(-1,1,W/j),Ye.push(...Rr(dt)),Ye.push(...Rr(mt)),Ye.push(...Rr(n[2].dims)),n.length===4&&Ye.push(...Rr(Kt.convertShape(n[3].dims)));let xt=[L,C,v/le];Ye.push(...Rr(xt));let jt=Gt=>{let Zt=dt.length,ar=or("a",n[0].dataType,Zt,$),St=or("b",12,mt.length,j),kr=or("scales",n[2].dataType,n[2].dims.length),fr=[ar,St,kr],ur=n.length===4?or("zero_points",12,n[3].dims.length):void 0;ur&&fr.push(ur);let Jr=xt.length,Sr=ss("output",n[0].dataType,Jr,le),As=es(n[0].dataType),Xs=(()=>{switch($){case 1:return`array<${As}, 8>`;case 2:return`mat4x2<${As}>`;case 4:return`mat2x4<${As}>`;default:throw new Error(`${$}-component is not supported.`)}})(),bs=()=>{let Er=`
          // reuse a data
            var input_offset = ${ar.indicesToOffset(`${ar.type.indices}(batch, row, word_offset)`)};
            var a_data: ${Xs};
            for (var j: u32 = 0; j < ${8/$}; j++) {
              a_data[j] = ${ar.getByOffset("input_offset")};
              input_offset++;
            }
          `;for(let Kr=0;Kr<le*_e;Kr++)Er+=`
            b_value = ${j===1?`b${Kr}_data`:`b${Kr}_data[i]`};
            b_value_lower = unpack4xU8(b_value & b_mask);
            b_value_upper = unpack4xU8((b_value >> 4) & b_mask);
            b_quantized_values = ${Xs}(${Array.from({length:4},(js,Ds)=>`${As}(b_value_lower[${Ds}]), ${As}(b_value_upper[${Ds}])`).join(", ")});
            b_dequantized_values = ${$===1?`${Xs}(${Array.from({length:8},(js,Ds)=>`(b_quantized_values[${Ds}] - ${ur?`zero_point${Kr}`:"zero_point"}) * scale${Kr}`).join(", ")});`:`(b_quantized_values - ${Xs}(${Array(8).fill(`${ur?`zero_point${Kr}`:"zero_point"}`).join(",")})) * scale${Kr};`};
            workgroup_shared[local_id.x * ${_e} + ${Math.floor(Kr/le)}]${le>1?`[${Kr%le}]`:""} += ${Array.from({length:8/$},(js,Ds)=>`${$===1?`a_data[${Ds}] * b_dequantized_values[${Ds}]`:`dot(a_data[${Ds}], b_dequantized_values[${Ds}])`}`).join(" + ")};
          `;return Er},vs=()=>{let Er=`
            var col_index = col * ${le};
            ${ur?`
            let zero_point_bytes_per_col = (nBlocksPerCol + 1) / 2;
            var zero_point_byte_count: u32;
            var zero_point_word_index: u32;
            var zero_point_byte_offset: u32;
            let zero_point_nibble_offset: u32 = block & 0x1u;
            var zero_point_bits_offset: u32;
            var zero_point_word: u32;`:`
            // The default zero point is 8 for unsigned 4-bit quantization.
            let zero_point = ${As}(8);`}
            `;for(let Kr=0;Kr<le*_e;Kr++)Er+=`
            let scale${Kr} = ${kr.getByOffset("col_index * nBlocksPerCol + block")};
            ${ur?`
            zero_point_byte_count = col_index * zero_point_bytes_per_col + (block >> 0x1u);
            zero_point_word_index = zero_point_byte_count >> 0x2u;
            zero_point_byte_offset = zero_point_byte_count & 0x3u;
            zero_point_bits_offset = (zero_point_byte_offset << 3) + (zero_point_nibble_offset << 2);
            zero_point_word = ${ur.getByOffset("zero_point_word_index")} >> zero_point_bits_offset;
            let zero_point${Kr} = ${As}((zero_point_word) & 0xFu);`:""}
            col_index += 1;`;return Er},Ys=()=>{let Er=`col_index = col * ${le};`;for(let Kr=0;Kr<le*_e;Kr++)Er+=`
            let b${Kr}_data = ${St.getByIndices(`${St.type.indices}(col_index, block, word)`)};
            col_index += 1;`;return Er+=`
            var b_value: u32;
            let b_mask: u32 = 0x0F0F0F0Fu;
            var b_value_lower: vec4<u32>;
            var b_value_upper: vec4<u32>;
            var b_quantized_values: ${Xs};
            var b_dequantized_values: ${Xs};`,Er};return`
        var<workgroup> workgroup_shared: array<${Sr.type.value}, ${_e*Fe}>;
        ${Gt.declareVariables(...fr,Sr)}
        ${Gt.mainStart([Fe,1,1])}
          let output_indices = ${Sr.offsetToIndices(`(global_idx / ${Fe}) * ${_e}`)};
          let col = output_indices[2];
          let row = output_indices[1];
          let batch = output_indices[0];
          let nBlocksPerCol = uniforms.b_shape[1];

          for (var block = local_id.x; block < nBlocksPerCol; block += ${Fe}) {
            //process one block
            var word_offset: u32 = block * ${l.blockSize/$};
            ${vs()}
            for (var word: u32 = 0; word < ${W}; word += ${j}) {
              ${Ys()}
              for (var i: u32 = 0; i < ${j}; i++) {
                ${bs()}
                word_offset += ${8/$};
              }
            }
          }
          workgroupBarrier();

          if (local_id.x < ${_e}) {
            var output_value: ${Sr.type.value} = ${Sr.type.value}(0);
            var workgroup_shared_offset: u32 = local_id.x;
            for (var b: u32 = 0u; b < ${Fe}u; b++) {
              output_value += workgroup_shared[workgroup_shared_offset];
              workgroup_shared_offset += ${_e};
            }
            ${Sr.setByIndices(`${Sr.type.indices}(batch, row, col + local_id.x)`,"output_value")};
          }
        }`};return{name:"MatMulNBits",shaderCache:{hint:`${l.blockSize};${l.bits};${$};${j};${le};${_e};${Fe}`,inputDependencies:Array(n.length).fill("rank")},getRunData:()=>({outputs:[{dims:me,dataType:te}],dispatchGroup:{x:Ee},programUniforms:Ye}),getShaderSource:jt}},Oc=(n,l)=>{let p=n[0].dims,b=p.length,C=p[b-2],E=l.k,v=l.n,x=p.slice(0,b-2),L=Kt.size(x),W=n[1].dims[2]/4,te=n[0].dataType,$=cs(l.k),j=cs(W),le=x.concat([C,v]),me=128,_e=v%8===0?8:v%4===0?4:1,Ee=me/_e,Fe=Ee*j*8,Ye=Fe/$,dt=Fe/l.blockSize,mt=Kt.size(le)/_e,xt=[],jt=[L,C,E/$],Gt=Kt.convertShape(n[1].dims).slice();Gt.splice(-1,1,W/j),xt.push(...Rr(jt)),xt.push(...Rr(Gt)),xt.push(...Rr(n[2].dims)),n.length===4&&xt.push(...Rr(Kt.convertShape(n[3].dims)));let Zt=[L,C,v];xt.push(...Rr(Zt));let ar=St=>{let kr=jt.length,fr=or("a",n[0].dataType,kr,$),ur=or("b",12,Gt.length,j),Jr=or("scales",n[2].dataType,n[2].dims.length),Sr=[fr,ur,Jr],As=n.length===4?or("zero_points",12,n[3].dims.length):void 0;As&&Sr.push(As);let Xs=Zt.length,bs=ss("output",n[0].dataType,Xs),vs=es(n[0].dataType),Ys=()=>{switch($){case 1:return`
          let a_data0 = vec4<${vs}>(sub_a[word_offset], sub_a[word_offset + 1], sub_a[word_offset + 2], sub_a[word_offset + 3]);
          let a_data1 = vec4<${vs}>(sub_a[word_offset + 4], sub_a[word_offset + 5], sub_a[word_offset + 6], sub_a[word_offset + 7]);`;case 2:return`
          let a_data0 = vec4<${vs}>(sub_a[word_offset], sub_a[word_offset + 1]);
          let a_data1 = vec4<${vs}>(sub_a[word_offset + 2], sub_a[word_offset + 3]);`;case 4:return`
          let a_data0 = sub_a[word_offset];
          let a_data1 = sub_a[word_offset + 1];`;default:throw new Error(`${$}-component is not supported.`)}};return`
        var<workgroup> sub_a: array<${fr.type.value}, ${Ye}>;
        var<workgroup> inter_results: array<array<${bs.type.value}, ${Ee}>, ${_e}>;
        ${St.declareVariables(...Sr,bs)}
        ${St.mainStart([Ee,_e,1])}
          let output_indices = ${bs.offsetToIndices(`workgroup_index * ${_e}`)};
          let col = output_indices[2];
          let row = output_indices[1];
          let batch = output_indices[0];
          let n_blocks_per_col = uniforms.b_shape[1];
          let num_tiles =  (n_blocks_per_col - 1) / ${dt} + 1;

          // Loop over shared dimension.
          for (var tile: u32 = 0; tile < num_tiles; tile += 1) {
            let a_col_start = tile * ${Ye};
            // load one tile A data into shared memory.
            for (var a_offset = local_idx; a_offset < ${Ye}; a_offset += ${me})
            {
              let a_col = a_col_start + a_offset;
              if (a_col < uniforms.a_shape[2])
              {
                sub_a[a_offset] = ${fr.getByIndices(`${fr.type.indices}(batch, row, a_col)`)};
              } else {
                sub_a[a_offset] = ${fr.type.value}(0);
              }
            }
            workgroupBarrier();

            // each thread process one block
            let b_row = col + local_id.y;
            let block = tile * ${dt} + local_id.x;
            ${As?`
            let zero_point_bytes_per_col = (n_blocks_per_col + 1) / 2;
            let zero_point_byte_count = b_row * zero_point_bytes_per_col + (block >> 0x1u);
            let zero_point_word_index = zero_point_byte_count >> 0x2u;
            let zero_point_byte_offset = zero_point_byte_count & 0x3u;
            let zero_point_nibble_offset: u32 = block & 0x1u;
            let zero_point_bits_offset = (zero_point_byte_offset << 3) + (zero_point_nibble_offset << 2);
            let zero_point_word = ${As.getByOffset("zero_point_word_index")} >> zero_point_bits_offset;
            let zero_point = ${vs}((zero_point_word) & 0xFu);`:`
            // The default zero point is 8 for unsigned 4-bit quantization.
            let zero_point = ${vs}(8);`}
            let scale = ${Jr.getByOffset("b_row * n_blocks_per_col + block")};
            let b_data = ${ur.getByIndices(`${ur.type.indices}(b_row, block, 0)`)};
            var word_offset = local_id.x * ${l.blockSize/$};
            for (var i: u32 = 0; i < ${j}; i++) {
              ${Ys()}
              let b_value = ${j===1?"b_data":"b_data[i]"};
              let b_value_lower = unpack4xU8(b_value & 0x0F0F0F0Fu);
              let b_value_upper = unpack4xU8((b_value >> 4) & 0x0F0F0F0Fu);
              let b_quantized_values = mat2x4<${vs}>(${Array.from({length:4},(Er,Kr)=>`${vs}(b_value_lower[${Kr}]), ${vs}(b_value_upper[${Kr}])`).join(", ")});
              let b_dequantized_values = (b_quantized_values - mat2x4<${vs}>(${Array(8).fill("zero_point").join(",")})) * scale;
              inter_results[local_id.y][local_id.x] += ${Array.from({length:2},(Er,Kr)=>`${`dot(a_data${Kr}, b_dequantized_values[${Kr}])`}`).join(" + ")};
              word_offset += ${8/$};
            }
            workgroupBarrier();
          }

          if (local_idx < ${_e}) {
            var output_value: ${bs.type.value} = ${bs.type.value}(0);
            for (var b = 0u; b < ${Ee}; b++) {
              output_value += inter_results[local_idx][b];
            }
            if (col + local_idx < uniforms.output_shape[2])
            {
              ${bs.setByIndices(`${bs.type.indices}(batch, row, col + local_idx)`,"output_value")}
            }
          }
        }`};return{name:"BlockwiseMatMulNBits32",shaderCache:{hint:`${l.blockSize};${$};${j};${Ee};${_e}`,inputDependencies:Array(n.length).fill("rank")},getRunData:()=>({outputs:[{dims:le,dataType:te}],dispatchGroup:{x:mt},programUniforms:xt}),getShaderSource:ar}},Qc=(n,l)=>{zc(n.inputs,l),l.blockSize===32&&n.adapterInfo.isVendor("intel")&&n.adapterInfo.isArchitecture("gen-12lp")?n.compute(Oc(n.inputs,l)):n.compute(E0(n.inputs,l))},Nc=n=>Xr(n)}),Rc,jc,B0,Vc,Wc,Aa,Du,Zl,Uc,T0=z(()=>{qr(),Vr(),ws(),Rc=n=>{if(!n||n.length<1)throw new Error("Too few inputs");if(n[0].dataType!==1&&n[0].dataType!==10)throw new Error("Input type must be float or float16.");if(n.length>=2){let l=n[0].dims.length*2===n[1].dims[0];if(n.length===4&&(l=n[3].dims[0]*2===n[1].dims[0]),!l)throw new Error("The pads should be a 1D tensor of shape [2 * input_rank] or [2 * num_axes].")}},jc=(n,l,p)=>{let b="";for(let C=l-1;C>=0;--C)b+=`
            k = i32(${n.indicesGet("indices",C)}) - ${Ir("uniforms.pads",C,p)};
            if (k < 0) {
              break;
            }
            if (k >= i32(${Ir("uniforms.x_shape",C,l)})) {
              break;
            }
            offset += k * i32(${Ir("uniforms.x_strides",C,l)});
        `;return`
          value = ${n.type.value}(uniforms.constant_value);
          for (var i = 0; i < 1; i++) {
            var offset = 0;
            var k = 0;
            ${b}
            value = x[offset];
          }
      `},B0=(n,l,p)=>{let b="";for(let C=l-1;C>=0;--C)b+=`
                k = i32(${n.indicesGet("indices",C)}) - ${Ir("uniforms.pads",C,p)};
                if (k < 0) {
                  k = -k;
                }
                {
                  let _2n_1 = 2 * (i32(${Ir("uniforms.x_shape",C,l)}) - 1);
                  k = k % _2n_1;
                  if(k >= i32(${Ir("uniforms.x_shape",C,l)})) {
                    k = _2n_1 - k;
                  }
                }
                offset += k * i32(${Ir("uniforms.x_strides",C,l)});
            `;return`
              var offset = 0;
              var k = 0;
              ${b}
              value = x[offset];
          `},Vc=(n,l,p)=>{let b="";for(let C=l-1;C>=0;--C)b+=`
                k = i32(${n.indicesGet("indices",C)}) - ${Ir("uniforms.pads",C,p)};
                if (k < 0) {
                  k = 0;
                }
                if (k >= i32(${Ir("uniforms.x_shape",C,l)})) {
                  k = i32(${Ir("uniforms.x_shape",C,l)}) - 1;
                }
                offset += k * i32(${Ir("uniforms.x_strides",C,l)});
            `;return`
              var offset = 0;
              var k = 0;
              ${b}
              value = x[offset];
          `},Wc=(n,l,p)=>{let b="";for(let C=l-1;C>=0;--C)b+=`
                k = i32(${n.indicesGet("indices",C)}) - ${Ir("uniforms.pads",C,p)};
                if (k < 0)  {
                  k += i32(${Ir("uniforms.x_shape",C,l)}]);
                }
                if (k >= i32(${Ir("uniforms.x_shape",C,l)})) {
                  k -= i32(${Ir("uniforms.x_shape",C,l)});
                }
                offset += k * i32(${Ir("uniforms.x_strides",C,l)});
            `;return`
              var offset = 0;
              var k = 0;
              ${b}
              value = x[offset];
          `},Aa=(n,l,p)=>{switch(p.mode){case 0:return jc(n,l,p.pads.length);case 1:return B0(n,l,p.pads.length);case 2:return Vc(n,l,p.pads.length);case 3:return Wc(n,l,p.pads.length);default:throw new Error("Invalid mode")}},Du=(n,l)=>{let p=Kt.padShape(n[0].dims.slice(),l.pads),b=n[0].dims,C=Kt.size(p),E=[{type:12,data:C},{type:6,data:l.pads}],v=n.length>=3&&n[2].data;l.mode===0&&E.push({type:v?n[2].dataType:1,data:l.value}),E.push(...Rr(n[0].dims,p));let x=["rank"],L=W=>{let te=ss("output",n[0].dataType,p.length),$=or("x",n[0].dataType,b.length),j=$.type.value,le=Aa(te,b.length,l),me=[{name:"output_size",type:"u32"},{name:"pads",type:"i32",length:l.pads.length}];return l.mode===0&&me.push({name:"constant_value",type:v?j:"f32"}),`
            ${W.registerUniforms(me).declareVariables($,te)}
            ${W.mainStart()}
            ${W.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

            let indices = ${te.offsetToIndices("global_idx")};

            var value = ${j}(0);
            ${le}
            output[global_idx] = value;
        }`};return{name:"Pad",shaderCache:{hint:`${l.mode}${v}`,inputDependencies:x},getRunData:()=>({outputs:[{dims:p,dataType:n[0].dataType}],dispatchGroup:{x:Math.ceil(Kt.size(p)/64)},programUniforms:E}),getShaderSource:L}},Zl=(n,l)=>{if(n.length>1){let p=n[1].getBigInt64Array(),b=n.length>=3&&n[2].data?n[2].dataType===10?n[2].getUint16Array()[0]:n[2].getFloat32Array()[0]:0,C=n[0].dims.length,E=new Int32Array(2*C).fill(0);if(n.length>=4){let x=n[3].getBigInt64Array();for(let L=0;L<x.length;L++)E[Number(x[L])]=Number(p[L]),E[Number(x[L])+C]=Number(p[L+x.length])}else p.forEach((x,L)=>E[Number(L)]=Number(x));let v=[];return E.forEach(x=>v.push(x)),{mode:l.mode,value:b,pads:v}}else return l},Uc=(n,l)=>{Rc(n.inputs);let p=Zl(n.inputs,l);n.compute(Du(n.inputs,p),{inputs:[0]})}}),wl,la,Hc,Yc,P0,Jl,Su,D0,$l,S0,Kc,G0,Gu,qc,F0,z0,Fu,zu,Xc,Ou=z(()=>{kt(),qr(),Vr(),ws(),wl=n=>{if(B.webgpu.validateInputContent&&(!n||n.length!==1))throw new Error("Pool ops requires 1 input.")},la=(n,l,p)=>{let b=l.format==="NHWC",C=n.dims.slice();b&&C.splice(1,0,C.pop());let E=Object.hasOwnProperty.call(l,"dilations"),v=l.kernelShape.slice(),x=l.strides.slice(),L=E?l.dilations.slice():[],W=l.pads.slice();rr.adjustPoolAttributes(p,C,v,x,L,W);let te=rr.computePoolOutputShape(p,C,x,L,v,W,l.autoPad),$=Object.assign({},l);E?Object.assign($,{kernelShape:v,strides:x,pads:W,dilations:L,cacheKey:l.cacheKey}):Object.assign($,{kernelShape:v,strides:x,pads:W,cacheKey:l.cacheKey});let j=te.slice();return j.push(j.splice(1,1)[0]),[$,b?j:te]},Hc=(n,l)=>{let p=l.format==="NHWC",b=Kt.size(n),C=Kt.size(l.kernelShape),E=[{type:12,data:b},{type:12,data:C}],v=[{name:"outputSize",type:"u32"},{name:"kernelSize",type:"u32"}];if(l.kernelShape.length<=2){let x=l.kernelShape[l.kernelShape.length-1],L=l.strides[l.strides.length-1],W=l.pads[l.pads.length/2-1],te=l.pads[l.pads.length-1],$=!!(W+te);E.push({type:12,data:x},{type:12,data:L},{type:12,data:W},{type:12,data:te}),v.push({name:"kw",type:"u32"},{name:"sw",type:"u32"},{name:"pwStart",type:"u32"},{name:"pwEnd",type:"u32"});let j=!1;if(l.kernelShape.length===2){let le=l.kernelShape[l.kernelShape.length-2],me=l.strides[l.strides.length-2],_e=l.pads[l.pads.length/2-2],Ee=l.pads[l.pads.length-2];j=!!(_e+Ee),E.push({type:12,data:le},{type:12,data:me},{type:12,data:_e},{type:12,data:Ee}),v.push({name:"kh",type:"u32"},{name:"sh",type:"u32"},{name:"phStart",type:"u32"},{name:"phEnd",type:"u32"})}return[E,v,!0,$,j]}else{if(p)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let x=Kt.computeStrides(l.kernelShape);E.push({type:12,data:x},{type:12,data:l.pads},{type:12,data:l.strides}),v.push({name:"kernelStrides",type:"u32",length:x.length},{name:"pads",type:"u32",length:l.pads.length},{name:"strides",type:"u32",length:l.strides.length});let L=l.pads.reduce((W,te)=>W+te);return[E,v,!!L,!1,!1]}},Yc=(n,l,p,b,C,E,v,x,L,W,te,$)=>{let j=C.format==="NHWC",le=l.type.value,me=ss("output",l.type.tensor,b);if(C.kernelShape.length<=2){let _e="",Ee="",Fe="",Ye=p-(j?2:1);if(te?_e=`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${Ye}] = indices[${Ye}] * uniforms.sw - uniforms.pwStart + i;
                  if (xIndices[${Ye}] < 0 || xIndices[${Ye}]
                      >= uniforms.x_shape[${Ye}]) {
                    pad++;
                    continue;
                  }
                  let x_val = x[${l.indicesToOffset("xIndices")}];
                  ${E}
                }`:_e=`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${Ye}] = indices[${Ye}] * uniforms.sw - uniforms.pwStart + i;
                  let x_val = x[${l.indicesToOffset("xIndices")}];
                  ${E}
                }`,C.kernelShape.length===2){let dt=p-(j?3:2);$?Ee=`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${dt}] = indices[${dt}] * uniforms.sh - uniforms.phStart + j;
                  if (xIndices[${dt}] < 0 || xIndices[${dt}] >= uniforms.x_shape[${dt}]) {
                    pad += i32(uniforms.kw);
                    continue;
                  }
              `:Ee=`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${dt}] = indices[${dt}] * uniforms.sh - uniforms.phStart + j;
                `,Fe=`
              }
            `}return`
            ${n.registerUniforms(L).declareVariables(l,me)}

            ${n.mainStart()}
              ${n.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

              let indices = ${me.offsetToIndices("global_idx")};
              var xIndices = ${me.offsetToIndices("global_idx")};

              var value = ${le}(${x});
              var pad = 0;
              ${Ee}
              ${_e}
              ${Fe}
              ${v}

              output[global_idx] = value;
            }`}else{if(j)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let _e=C.kernelShape.length,Ee=C.pads.length,Fe="";return W?Fe=`
                if (xIndices[j] >= uniforms.x_shape[j]) {
                  pad++;
                  isPad = true;
                  break;
                }
              }
              if (!isPad) {
                let x_val = x[${l.indicesToOffset("xIndices")}];
                ${E}
              }`:Fe=`
              }
              let x_val = x[${l.indicesToOffset("xIndices")}];
              ${E}
            `,`
            ${n.registerUniforms(L).declareVariables(l,me)}

            ${n.mainStart()}
              ${n.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
              let indices = ${me.offsetToIndices("global_idx")};
              var xIndices = ${me.offsetToIndices("global_idx")};

              var offsets: array<u32, ${_e}>;

              var value = ${le}(${x});
              var pad = 0;
              var isPad = false;

              for (var i: u32 = 0u; i < uniforms.kernelSize; i++) {
                var offset = i;
                for (var j = 0u; j < ${_e-1}u; j++) {
                  offsets[j] = offset / ${Ir("uniforms.kernelStrides","j",_e)};
                  offset -= offsets[j] * ${Ir("uniforms.kernelStrides","j",_e)};
                }
                offsets[${_e-1}] = offset;

                isPad = false;
                for (var j = ${p-_e}u; j < ${p}u; j++) {
                  xIndices[j] = indices[j] * ${Ir("uniforms.strides",`j - ${p-_e}u`,_e)}
                    + offsets[j - ${p-_e}u] - ${Ir("uniforms.pads","j - 2u",Ee)};
                  ${Fe}
              }
              ${v}

              output[global_idx] = value;
            }`}},P0=n=>`${n.format};${n.ceilMode};${n.autoPad};${n.kernelShape.length}`,Jl=n=>`${P0(n)};${n.countIncludePad}`,Su=n=>`${P0(n)};${n.storageOrder};${n.dilations}`,D0=n=>({format:n.format,autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][n.auto_pad],ceilMode:n.ceil_mode,kernelShape:n.kernel_shape,strides:n.strides,pads:n.pads}),$l=(n,l,p,b)=>{let[C,E]=la(l,b,p),v=or("x",l.dataType,l.dims.length),x=v.type.value,L="value += x_val;",W="";C.countIncludePad?W+=`value /= ${x}(uniforms.kernelSize);`:W+=`value /= ${x}(i32(uniforms.kernelSize) - pad);`;let[te,$,j,le,me]=Hc(E,C);te.push(...Rr(l.dims,E));let _e=["rank"];return{name:n,shaderCache:{hint:`${b.cacheKey};${j};${le};${me}`,inputDependencies:_e},getRunData:()=>({outputs:[{dims:E,dataType:l.dataType}],dispatchGroup:{x:Math.ceil(Kt.size(E)/64)},programUniforms:te}),getShaderSource:Ee=>Yc(Ee,v,l.dims.length,E.length,C,L,W,0,$,j,le,me)}},S0=n=>{let l=n.count_include_pad!==0,p=D0(n);if(p.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");let b={countIncludePad:l,...p,cacheKey:""};return{...b,cacheKey:Jl(b)}},Kc=(n,l)=>{wl(n.inputs),n.compute($l("AveragePool",n.inputs[0],!1,l))},G0={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[]},Gu=n=>{let l=n.format;return{format:l,...G0,cacheKey:l}},qc=(n,l)=>{wl(n.inputs),n.compute($l("GlobalAveragePool",n.inputs[0],!0,l))},F0=(n,l,p,b)=>{let[C,E]=la(l,b,p),v=`
      value = max(x_val, value);
    `,x="",L=or("x",l.dataType,l.dims.length),W=["rank"],[te,$,j,le,me]=Hc(E,C);return te.push(...Rr(l.dims,E)),{name:n,shaderCache:{hint:`${b.cacheKey};${j};${le};${me}`,inputDependencies:W},getRunData:()=>({outputs:[{dims:E,dataType:l.dataType}],dispatchGroup:{x:Math.ceil(Kt.size(E)/64)},programUniforms:te}),getShaderSource:_e=>Yc(_e,L,l.dims.length,E.length,C,v,x,l.dataType===10?-65504:-1e5,$,j,le,me)}},z0=(n,l)=>{wl(n.inputs),n.compute(F0("MaxPool",n.inputs[0],!1,l))},Fu=n=>{let l=n.storage_order,p=n.dilations,b=D0(n);if(l!==0)throw new Error("column major storage order is not yet supported for MaxPool");if(b.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");let C={storageOrder:l,dilations:p,...b,cacheKey:""};return{...C,cacheKey:Su(C)}},zu=n=>{let l=n.format;return{format:l,...G0,cacheKey:l}},Xc=(n,l)=>{wl(n.inputs),n.compute(F0("GlobalMaxPool",n.inputs[0],!0,l))}}),Zc,Jc,$c,eu,Qu=z(()=>{qr(),Vr(),hs(),ws(),Zc=(n,l)=>{if(n.length<2||n.length>3)throw new Error("DequantizeLinear requires 2 or 3 inputs.");if(n.length===3&&n[1].dims===n[2].dims)throw new Error("x-scale and x-zero-point must have the same shape.");if(n.length===3&&n[0].dataType!==n[2].dataType)throw new Error("x and x-zero-point must have the same data type.");if(n[0].dataType===6&&n.length>2)throw new Error("In the case of dequantizing int32 there is no zero point.");if(n[1].dims.length!==0&&n[1].dims.length!==1&&n[1].dims.length!==n[0].dims.length)throw new Error("scale input must be a scalar, a 1D tensor, or have the same rank as the input tensor.");if(n.length>2){if(n[0].dataType!==n[2].dataType)throw new Error("x and x-zero-point must have the same data type.");if(n[1].dims.length!==n[2].dims.length)throw new Error("scale and zero-point inputs must have the same rank.");if(!n[1].dims.map((p,b)=>p===n[2].dims[b]).reduce((p,b)=>p&&b,!0))throw new Error("scale and zero-point inputs must have the same shape.")}if(l.blockSize>0){if(n[1].dims.length===0||n[1].dims.length===1&&n[1].dims[0]===1)throw new Error("blockSize must be set only for block quantization.");if(!n[1].dims.map((C,E)=>E===l.axis||C===n[0].dims[E]).reduce((C,E)=>C&&E,!0))throw new Error("For block qunatization, scale input shape to match the input shape except for the axis");if(n[1].dims.length!==n[0].dims.length)throw new Error("For block qunatization the scale input rank must be the same as the x rank.");let p=n[0].dims[l.axis],b=n[1].dims[l.axis];if(l.blockSize<Math.ceil(p/b)||l.blockSize>Math.ceil(p/(b-1)-1))throw new Error("blockSize must be with in the range [ceil(dI / Si), ceil(dI / (Si - 1) - 1)].")}},Jc=(n,l)=>{let p=Kt.normalizeAxis(l.axis,n[0].dims.length),b=n[0].dataType,C=b===3,E=n[0].dims,v=n[1].dataType,x=Kt.size(E),L=b===3||b===2,W=L?[Math.ceil(Kt.size(n[0].dims)/4)]:n[0].dims,te=n[1].dims,$=n.length>2?n[2]:void 0,j=$?L?[Math.ceil(Kt.size($.dims)/4)]:$.dims:void 0,le=te.length===0||te.length===1&&te[0]===1,me=le===!1&&te.length===1,_e=cs(x),Ee=le&&(!L||_e===4),Fe=Ee?_e:1,Ye=Ee&&!L?_e:1,dt=or("input",L?12:b,W.length,Ye),mt=or("scale",v,te.length),xt=$?or("zero_point",L?12:b,j.length):void 0,jt=ss("output",v,E.length,Fe),Gt=[dt,mt];xt&&Gt.push(xt);let Zt=[W,te];$&&Zt.push(j);let ar=[{type:12,data:x/Fe},{type:12,data:p},{type:12,data:l.blockSize},...Rr(...Zt,E)],St=kr=>{let fr=[{name:"output_size",type:"u32"},{name:"axis",type:"u32"},{name:"block_size",type:"u32"}];return`
      ${kr.registerUniforms(fr).declareVariables(...Gt,jt)}
      ${kr.mainStart()}
          ${kr.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          let output_indices = ${jt.offsetToIndices("global_idx")};

          // Set input x
          ${L?`
            let input = ${dt.getByOffset("global_idx / 4")};
            let x_vec = ${C?"unpack4xI8(input)":"unpack4xU8(input)"};
            let x_value = ${Fe===1?"x_vec[global_idx % 4]":"x_vec"};`:`let x_value = ${dt.getByOffset("global_idx")};`};

          // Set scale input
          ${le?`let scale_value= ${mt.getByOffset("0")}`:me?`
            let scale_index = ${jt.indicesGet("output_indices","uniforms.axis")};
            let scale_value= ${mt.getByOffset("scale_index")};`:`
            var scale_indices: ${mt.type.indices} = output_indices;
            let index = ${mt.indicesGet("scale_indices","uniforms.axis")} / uniforms.block_size;
            ${mt.indicesSet("scale_indices","uniforms.axis","index")};
            let scale_value= ${mt.getByIndices("scale_indices")};`};

          // Set zero-point input
          ${xt?le?L?`
                let zero_point_input = ${xt.getByOffset("0")};
                let zero_point_vec =  ${C?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value= zero_point_vec[0]`:`let zero_point_value = ${xt.getByOffset("0")}`:me?L?`
                let zero_point_index = ${jt.indicesGet("output_indices","uniforms.axis")};
                let zero_point_input = ${xt.getByOffset("zero_point_index / 4")};
                let zero_point_vec =  ${C?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value = zero_point_vec[zero_point_index % 4]`:`
                let zero_point_index = ${jt.indicesGet("output_indices","uniforms.axis")};
                let zero_point_value = ${xt.getByOffset("zero_point_index")};`:L?`
                let zero_point_offset = ${mt.indicesToOffset("scale_indices")};
                let zero_point_input = ${xt.getByOffset("zero_point_offset / 4")};
                let zero_point_vec = ${C?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value = zero_point_vec[zero_point_offset % 4];`:`let zero_point_value = ${xt.getByIndices("scale_indices")};`:`let zero_point_value = ${L?C?"i32":"u32":dt.type.value}(0);`};
      // Compute and write output
      ${jt.setByOffset("global_idx",`${jt.type.value}(x_value - zero_point_value) * scale_value`)};
      }`};return{name:"DequantizeLinear",shaderCache:{hint:l.cacheKey,inputDependencies:xt?["rank","rank","rank"]:["rank","rank"]},getShaderSource:St,getRunData:()=>({outputs:[{dims:E,dataType:v}],dispatchGroup:{x:Math.ceil(x/Fe/64),y:1,z:1},programUniforms:ar})}},$c=(n,l)=>{Zc(n.inputs,l),n.compute(Jc(n.inputs,l))},eu=n=>Xr({axis:n.axis,blockSize:n.blockSize})}),tu,O0,Q0,ru=z(()=>{kt(),qr(),ws(),tu=(n,l,p)=>{let b=n===l,C=n<l&&p<0,E=n>l&&p>0;if(b||C||E)throw new Error("Range these inputs' contents are invalid.")},O0=(n,l,p,b)=>{let C=Math.abs(Math.ceil((l-n)/p)),E=[C],v=C,x=[{type:12,data:v},{type:b,data:n},{type:b,data:p},...Rr(E)],L=W=>{let te=ss("output",b,E.length),$=te.type.value,j=[{name:"outputSize",type:"u32"},{name:"start",type:$},{name:"delta",type:$}];return`
        ${W.registerUniforms(j).declareVariables(te)}
        ${W.mainStart()}
        ${W.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        output[global_idx] = uniforms.start + ${$}(global_idx) * uniforms.delta;
      }`};return{name:"Range",shaderCache:{hint:`${b}`},getShaderSource:L,getRunData:()=>({outputs:[{dims:E,dataType:b}],dispatchGroup:{x:Math.ceil(v/64)},programUniforms:x})}},Q0=n=>{let l=0,p=0,b=0;n.inputs[0].dataType===6?(l=n.inputs[0].getInt32Array()[0],p=n.inputs[1].getInt32Array()[0],b=n.inputs[2].getInt32Array()[0]):n.inputs[0].dataType===1&&(l=n.inputs[0].getFloat32Array()[0],p=n.inputs[1].getFloat32Array()[0],b=n.inputs[2].getFloat32Array()[0]),B.webgpu.validateInputContent&&tu(l,p,b),n.compute(O0(l,p,b,n.inputs[0].dataType),{inputs:[]})}}),su,Nu,au,N0,Lu=z(()=>{qr(),Vr(),hs(),ws(),su=(n,l,p,b)=>{if(n!=="none"&&b!=="i32"&&b!=="u32"&&b!=="f32")throw new Error(`Input ${b} is not supported with reduction ${n}.`);let C=`{
                var oldValue = 0;
                loop {
                  let newValueF32 =`,E=`;
                  let newValue = bitcast<i32>(newValueF32);
                  let res = atomicCompareExchangeWeak(&${l}, oldValue, newValue);
                  if res.exchanged {
                    break;
                  }
                  oldValue = res.old_value;
                }
              }`;switch(n){case"none":return`${l}=${p};`;case"add":return b==="i32"||b==="u32"?`atomicAdd(&${l}, bitcast<${b}>(${p}));`:`
              ${C}bitcast<${b}>(oldValue) + (${p})${E}`;case"max":return b==="i32"||b==="u32"?`atomicMax(&${l}, bitcast<${b}>(${p}));`:`
                ${C}max(bitcast<f32>(oldValue), (${p}))${E}`;case"min":return b==="i32"||b==="u32"?`atomicMin(&${l}, bitcast<${b}>(${p}));`:`${C}min(bitcast<${b}>(oldValue), (${p}))${E}`;case"mul":return`${C}(bitcast<${b}>(oldValue) * (${p}))${E}`;default:throw new Error(`Reduction ${n} is not supported.`)}},Nu=(n,l)=>{let p=n[0].dims,b=n[1].dims,C=p,E=1,v=Math.ceil(Kt.size(b)/E),x=b[b.length-1],L=Kt.sizeFromDimension(p,x),W=[{type:12,data:v},{type:12,data:x},{type:12,data:L},...Rr(n[1].dims,n[2].dims,C)],te=$=>{let j=or("indices",n[1].dataType,n[1].dims.length),le=or("updates",n[2].dataType,n[2].dims.length,E),me=l.reduction!=="none"&&l.reduction!==""?qA("output",n[0].dataType,C.length):ss("output",n[0].dataType,C.length,E);return`
      ${$.registerUniform("output_size","u32").registerUniform("last_index_dimension","u32").registerUniform("num_updates_elements","u32").declareVariables(j,le,me)}
      ${$.mainStart()}
        ${$.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
  var data_offset = 0u;
  let indices_start = uniforms.last_index_dimension * global_idx;
  let indices_end = indices_start + uniforms.last_index_dimension;
  for (var i = indices_start; i < indices_end; i++) {
    var index = i32(indices[i].x);
    ${n[0].dims.length===1?`
    let element_count_dim = uniforms.output_strides;
    let dim_value = uniforms.output_shape;`:`
    let element_count_dim = uniforms.output_strides[i - indices_start];
    let dim_value = uniforms.output_shape[i - indices_start + uniforms.last_index_dimension];`}
    if (index >= 0) {
      if (index >= i32(dim_value)) {
        index = i32(dim_value - 1);
      }
    } else {
      if (index < -i32(dim_value)) {
        index = 0;
      } else {
        index += i32(dim_value);
      }
    }
    data_offset += u32((u32(index) * element_count_dim));
  }

  for (var i = 0u; i < uniforms.num_updates_elements; i++) {
    let value = updates[uniforms.num_updates_elements * global_idx + i];
    ${su(l.reduction,"output[data_offset + i]","value",me.type.value)}
  }

      }`};return{name:"ScatterND",shaderCache:{hint:`${l.cacheKey}_${l.reduction}`,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:C,dataType:n[0].dataType}],dispatchGroup:{x:Math.ceil(v/64)},programUniforms:W}),getShaderSource:te}},au=n=>Xr({reduction:n.reduction}),N0=(n,l)=>{n.compute(Nu(n.inputs,l),{inputs:[n.inputs[1],n.inputs[2]],outputs:[]})}}),Ru,L0,bA,R0,nu,ju,Is,iu,_o,ou,j0,Vu,Ka,Ps,zs,Vo,Wu,V0,Uu,W0,td=z(()=>{qr(),Vr(),hs(),ws(),Ru=(n,l)=>{if(n.every(p=>p>0||(()=>{throw new Error("Resize requires scales input values to be positive")})),n.length>0){if(l.mode==="linear"){if(!(n.length===2||n.length===3||n.length===4&&n[0]===1&&n[1]===1||n.length===4&&n[0]===1&&n[3]===1||n.length===5&&n[0]===1&&n[1]===1))throw new Error(`For linear mode, Resize requires scales to be 2D, 3D, 4D with either two outermost or one innermost and
            one outermost scale values equal to 1, or 5D with two outermost scale values equal to 1`)}else if(l.mode==="cubic"&&!(n.length===2||n.length===4&&n[0]===1&&n[1]===1||n.length===4&&n[0]===1&&n[3]===1))throw new Error("Resize requires scales input size to be 2 or 4 for cubic mode")}},L0=(n,l,p)=>{l.every(C=>C>=0&&C<p||(()=>{throw new Error("Resize requires axes input values to be positive and less than rank")}));let b=new Array(p).fill(1);return l.forEach((C,E)=>b[C]=n[E]),b},bA=(n,l,p,b,C,E)=>{let[v,x,L]=p>10?[1,2,3]:[-1,n.length>1?1:-1,-1],W=n[0].dims.length;if(v>0&&n.length>v&&n[v].dims.length>0)n[v].getFloat32Array().forEach(te=>E.push(te));else if(l.coordinateTransformMode==="tf_crop_and_resize")throw new Error("Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize");if(x>0&&n.length>x&&n[x].dims.length===1&&n[x].dims[0]>0){if(n[x].getFloat32Array().forEach(te=>b.push(te)),b.length!==0&&b.length!==W&&p>=18&&b.length!==l.axes.length)throw new Error("Resize requires scales input size to be same as input rank or axes size for opset 18 and up");Ru(b,l),l.axes.length>0&&L0(b,l.axes,W).forEach((te,$)=>b[$]=te)}if(L>0&&n.length>L&&n[L].dims.length===1&&n[L].dims[0]>0&&(n[L].getBigInt64Array().forEach(te=>C.push(Number(te))),C.length!==0&&C.length!==W&&p>=18&&C.length!==l.axes.length))throw new Error("Resize requires sizes input size to be same as input rank or axes size for opset 18 and up");if(l.axes.length>0){if(b.length!==0&&b.length!==l.axes.length)throw new Error('Resize requires "scales" input size to be of axes rank when axes attributes is specified');if(C.length!==0&&C.length!==l.axes.length)throw new Error('Resize requires "sizes" input size to be of rank axes rank when axes attributes is specified')}if(typeof b<"u"&&typeof C<"u"&&b.length>0&&C.length>W)throw new Error("Resize requires only of scales or sizes to be specified")},R0=(n,l,p,b)=>`
  // The whole part and the fractional part are calculated separately due to inaccuracy of floating
  // point division. As an example, f32(21) / f32(7) may evaluate to 2.99... instead of 3, causing an
  // offset-by-one error later in floor().
  let big = (${n}) * (${l});
  let whole = ${b}(big / (${p}));
  let fract = ${b}(big % (${p})) / ${b}(${p});
  return whole + fract;
`,nu=(n,l)=>`fn getOriginalCoordinateFromResizedCoordinate(xResized: u32, xScale: f32, lengthResized: u32,
     lengthOriginal: u32, roiStart: f32, roiEnd: f32) -> ${l} { `+(()=>{switch(n){case"asymmetric":return`
          if (xScale < 1.0 || floor(xScale) != xScale) {
            return ${l}(xResized) / ${l}(xScale);
          } else {
            ${R0("xResized","lengthOriginal","lengthResized",l)}
          }
        `;case"pytorch_half_pixel":return`if (lengthResized > 1) {
                    return (${l}(xResized) + 0.5) / ${l}(xScale) - 0.5;
                  } else {
                    return 0.0;
                  }`;case"tf_half_pixel_for_nn":return`return (${l}(xResized) + 0.5) / ${l}(xScale);`;case"align_corners":return`if (lengthResized == 1) {
                    return 0.0;
                  } else {
                    ${R0("xResized","lengthOriginal - 1","lengthResized - 1",l)}
                  }`;case"tf_crop_and_resize":return`if (lengthResized > 1) {
                    return ${l}(roiStart) * ${l}(lengthOriginal - 1) +
                        (${l}(xResized) * ${l}(roiEnd - roiStart) * ${l}(lengthOriginal - 1)) /
                        ${l}(lengthResized - 1);
                  } else {
                    return 0.5 * ${l}(roiStart + roiEnd) * ${l}(lengthOriginal - 1);
                  }`;case"half_pixel_symmetric":return`const outputWidth = ${l}xScale * ${l}(lengthResized);
                  const adjustment = ${l}(lengthResized) / outputWidth;
                  const center = ${l}(lengthOriginal) / 2;
                  const offset = center * (1 - adjustment);
                  return offset + ((${l}(xResized) + 0.5) / ${l}(xScale)) - 0.5;`;case"half_pixel":return`return ((${l}(xResized) + 0.5) / ${l}(xScale)) - 0.5;`;default:throw new Error(`Coordinate transform mode ${n} is not supported`)}})()+"}",ju=(n,l,p)=>`fn getNearestPixelFromOriginal(xOriginal: ${p}, isDownSample: bool) -> ${p} {`+(()=>{switch(n){case"round_prefer_ceil":return"if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }";case"floor":return"return floor(xOriginal);";case"ceil":return"return ceil(xOriginal);";case"round_prefer_floor":return"if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }";case"simple":default:if(l<11)return"if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }";throw new Error(`Nearest mode ${n} is not supported`)}})()+"}",Is=(n,l,p)=>{let b=new Array(p).fill(0).concat(new Array(p).fill(1)),C=n.length===0?b:n.slice();return l.length>0?(l.forEach((E,v)=>{b[E]=C[v],b[v+p]=C[l.length+v]}),b):C},iu=(n,l,p,b)=>{let C=[];if(p.length>0)if(b.length>0){if(n.forEach(E=>C.push(E)),Math.max(...b)>n.length)throw new Error("axes is out of bound");b.forEach((E,v)=>C[E]=p[v])}else p.forEach(E=>C.push(E));else{if(l.length===0)throw new Error("Resize requires either scales or sizes.");C=n.map((E,v)=>Math.round(E*l[v]))}return C},_o=(n,l,p)=>{let b=(()=>{switch(p.keepAspectRatioPolicy){case"not_larger":return p.axes.length>0?Math.min(...p.axes.map(E=>l[E]),Number.MAX_VALUE):Math.min(...l,Number.MAX_VALUE);case"not_smaller":return p.axes.length>0?Math.max(...p.axes.map(E=>l[E]),Number.MIN_VALUE):Math.max(...l,Number.MIN_VALUE);default:throw new Error(`Keep aspect ratio policy ${p.keepAspectRatioPolicy} is not supported`)}})();l.fill(1,0,l.length);let C=n.slice();return p.axes.length>0?(p.axes.forEach(E=>l[E]=b),p.axes.forEach(E=>C[E]=Math.round(n[E]*l[E]))):(l.fill(b,0,l.length),C.forEach((E,v)=>C[v]=Math.round(E*l[v]))),C},ou=(n,l,p,b,C)=>`
    fn calculateOriginalIndicesFromOutputIndices(output_indices: ${n.type.indices}) -> array<${n.type.value}, ${p.length}> {
      var original_indices: array<${n.type.value}, ${p.length}>;
      for (var i:u32 = 0; i < ${p.length}; i++) {
        var output_index = ${n.indicesGet("output_indices","i")};
        var scale = ${Ir("uniforms.scales","i",b)};
        var roi_low = ${Ir("uniforms.roi","i",C)};
        var roi_hi = ${Ir("uniforms.roi",`i + ${l.length}`,C)};
        if (scale == 1.0) {
          original_indices[i] = ${n.type.value}(output_index);
        } else {
          var input_shape_i = ${Ir("uniforms.input_shape","i",l.length)};
          var output_shape_i = ${Ir("uniforms.output_shape","i",p.length)};
          original_indices[i] = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                           input_shape_i, roi_low, roi_hi);
        }
      }
      return original_indices;
    }`,j0=(n,l,p,b,C,E,v)=>`
    fn calculateInputIndicesFromOutputIndices(output_indices: ${l.type.indices}) -> ${n.type.indices} {
      var input_indices: ${n.type.indices};
      for (var i:u32 = 0; i < ${b.length}; i++) {
        var output_index = ${l.indicesGet("output_indices","i")};
        var input_index: u32;
        var scale = ${Ir("uniforms.scales","i",C)};
        if (scale == 1.0) {
          input_index = output_index;
        } else {
          var roi_low = ${Ir("uniforms.roi","i",E)};
          var roi_hi = ${Ir("uniforms.roi",`i + ${p.length}`,E)};
          var input_shape_i = ${Ir("uniforms.input_shape","i",p.length)};
          var output_shape_i = ${Ir("uniforms.output_shape","i",b.length)};
          var original_idx = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                        input_shape_i, roi_low, roi_hi);
          if (!${v} || (original_idx >= 0 && original_idx < ${l.type.value}(input_shape_i))) {
            if (original_idx < 0) {
              input_index = 0;
            } else if (original_idx > ${l.type.value}(input_shape_i - 1)) {
              input_index = input_shape_i - 1;
            } else {
              input_index = u32(getNearestPixelFromOriginal(original_idx, scale < 1));
            }
          } else {
            input_index = u32(original_idx);
          }
        }
        ${n.indicesSet("input_indices","i","input_index")}
      }
      return input_indices;
    }`,Vu=(n,l)=>`
    fn checkInputIndices(input_indices: ${n.type.indices}) -> bool {
      for (var i:u32 = 0; i < ${l.length}; i++) {
        var input_index = ${n.indicesGet("input_indices","i")};
        if (input_index < 0 || input_index >= ${Ir("uniforms.input_shape","i",l.length)}) {
          return false;
        }
      }
      return true;
    }`,Ka=(n,l,p,b)=>n.rank>b?`
    ${n.indicesSet("input_indices",l,"channel")};
    ${n.indicesSet("input_indices",p,"batch")};
`:"",Ps=(n,l,p,b,C)=>{let[E,v,x,L]=p.length===2?[-1,0,1,-1]:[0,2,3,1],W=n.type.value;return`
    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> ${W} {
      var input_indices: ${n.type.indices};
      ${n.indicesSet("input_indices",v,`max(0, min(row, ${p[v]} - 1))`)};
      ${n.indicesSet("input_indices",x,`max(0, min(col, ${p[x]} - 1))`)};
      ${Ka(n,L,E,2)}
      return ${n.getByIndices("input_indices")};
    }

    fn bilinearInterpolation(output_indices: ${l.type.indices}) -> ${W} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var row:${W} = originalIndices[${v}];
      var col:${W} = originalIndices[${x}];
      ${b?`if (row < 0 || row > (${p[v]} - 1) || col < 0 || col > (${p[x]} - 1)) {
        return ${C};
      }`:""};
      row = max(0, min(row, ${p[v]} - 1));
      col = max(0, min(col, ${p[x]} - 1));
      var row1: u32 = u32(row);
      var col1: u32 = u32(col);
      var row2: u32 = u32(row + 1);
      var col2: u32 = u32(col + 1);
      var channel: u32 = ${p.length>2?`u32(originalIndices[${L}])`:"0"};
      var batch: u32 =  ${p.length>2?`u32(originalIndices[${E}])`:"0"};
      var x11: ${W} = getInputValue(batch, channel, row1, col1);
      var x12: ${W} = getInputValue(batch, channel, row1, col2);
      var x21: ${W} = getInputValue(batch, channel, row2, col1);
      var x22: ${W} = getInputValue(batch, channel, row2, col2);
      var dx1: ${W} = abs(row - ${W}(row1));
      var dx2: ${W} = abs(${W}(row2) - row);
      var dy1: ${W} = abs(col - ${W}(col1));
      var dy2: ${W} = abs(${W}(col2) - col);
      if (row1 == row2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (col1 == col2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);
    }`},zs=(n,l,p,b,C,E,v,x,L,W)=>{let te=p.length===2,[$,j]=te?[0,1]:[2,3],le=n.type.value,me=_e=>{let Ee=_e===$?"row":"col";return`
      fn ${Ee}CubicInterpolation(input_indices: ${n.type.indices}, output_indices: ${l.type.indices}) -> ${le} {
        var output_index = ${l.indicesGet("output_indices",_e)};
        var originalIdx: ${le} = getOriginalCoordinateFromResizedCoordinate(output_index, ${C[_e]},
        ${b[_e]}, ${p[_e]}, ${E[_e]}, ${E[_e]} + ${p.length});
        var fractOriginalIdx: ${le} = originalIdx - floor(originalIdx);
        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);

        if (${x} && (originalIdx < 0 || originalIdx > (${p[_e]} - 1))) {
          return ${L};
        }
        var data: array<${le}, 4> = array<${le}, 4>(0.0, 0.0, 0.0, 0.0);
        for (var i: i32 = -1; i < 3; i++) {
          var ${Ee}: ${le} = originalIdx + ${le}(i);
          if (${Ee} < 0 || ${Ee} >= ${p[_e]}) {
            ${W?`coefs[i + 1] = 0.0;
                        continue;`:x?`return ${L};`:`${Ee} = max(0, min(${Ee}, ${p[_e]} - 1));`};
          }
        var input_indices_copy: ${n.type.indices} = input_indices;
          ${n.indicesSet("input_indices_copy",_e,`u32(${Ee})`)};
          data[i + 1] = ${_e===$?n.getByIndices("input_indices_copy"):"rowCubicInterpolation(input_indices_copy, output_indices)"};
        }
        return cubicInterpolation1D(data, coefs);
      }`};return`
    ${me($)};
    ${me(j)};
  fn getCubicInterpolationCoefs(s: ${le}) -> array<${le}, 4> {
    var absS = abs(s);
    var coeffs: array<${le}, 4> = array<${le}, 4>(0.0, 0.0, 0.0, 0.0);
    var oneMinusAbsS: ${le} = 1.0 - absS;
    var twoMinusAbsS: ${le} = 2.0 - absS;
    var onePlusAbsS: ${le} = 1.0 + absS;
    coeffs[0] = ((${v} * onePlusAbsS - 5 * ${v}) * onePlusAbsS + 8 * ${v}) * onePlusAbsS - 4 * ${v};
    coeffs[1] = ((${v} + 2) * absS - (${v} + 3)) * absS * absS + 1;
    coeffs[2] = ((${v} + 2) * oneMinusAbsS - (${v} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;
    coeffs[3] = ((${v} * twoMinusAbsS - 5 * ${v}) * twoMinusAbsS + 8 * ${v}) * twoMinusAbsS - 4 * ${v};
    return coeffs;
  }

  fn cubicInterpolation1D(x: array<${le}, 4>, coefs: array<${le}, 4>) -> ${le} {
    var coefsSum: ${le} = coefs[0] + coefs[1] + coefs[2] + coefs[3];
    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;
  }

  fn bicubicInterpolation(output_indices: ${l.type.indices}) -> ${le} {
    var input_indices: ${n.type.indices} = output_indices;
    return colCubicInterpolation(input_indices, output_indices);
  }
    `},Vo=(n,l,p,b,C)=>{let[E,v,x,L,W]=p.length===3?[-1,0,1,2,-1]:[0,2,3,4,1],te=n.type.value;return`
    fn getInputValue(batch: u32, channel: u32, depth:u32, height: u32, width: u32) -> ${te} {
      var input_indices: ${n.type.indices};
      ${n.indicesSet("input_indices",v,`max(0, min(depth, ${p[v]} - 1))`)};
      ${n.indicesSet("input_indices",x,`max(0, min(height, ${p[x]} - 1))`)};
      ${n.indicesSet("input_indices",L,`max(0, min(width, ${p[L]} - 1))`)};
      ${Ka(n,W,E,3)}
      return ${n.getByIndices("input_indices")};
    }

    fn trilinearInterpolation(output_indices: ${l.type.indices}) -> ${te} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var depth:${te} = originalIndices[${v}];
      var height:${te} = originalIndices[${x}];
      var width:${te} = originalIndices[${L}];
      ${b?`if (depth < 0 || depth > (${p[v]} - 1) || height < 0 || height > (${p[x]} - 1) || width < 0 || (width > ${p[L]} - 1)) {
      return ${C};
        }`:""};

    depth = max(0, min(depth, ${p[v]} - 1));
      height = max(0, min(height, ${p[x]} - 1));
      width = max(0, min(width, ${p[L]} - 1));
      var depth1: u32 = u32(depth);
      var height1: u32 = u32(height);
      var width1: u32 = u32(width);
      var depth2: u32 = u32(depth + 1);
      var height2: u32 = u32(height + 1);
      var width2: u32 = u32(width + 1);
      var channel: u32 = ${p.length>3?`u32(originalIndices[${W}])`:"0"};
      var batch: u32 =  ${p.length>3?`u32(originalIndices[${E}])`:"0"};

      var x111: ${te} = getInputValue(batch, channel, depth1, height1, width1);
      var x112: ${te} = getInputValue(batch, channel, depth1, height1, width2);
      var x121: ${te} = getInputValue(batch, channel, depth1, height2, width1);
      var x122: ${te} = getInputValue(batch, channel, depth1, height2, width2);
      var x211: ${te} = getInputValue(batch, channel, depth2, height1, width1);
      var x212: ${te} = getInputValue(batch, channel, depth2, height1, width2);
      var x221: ${te} = getInputValue(batch, channel, depth2, height2, width1);
      var x222: ${te} = getInputValue(batch, channel, depth2, height2, width2);
      var dx1: ${te} = abs(depth - ${te}(depth1));
      var dx2: ${te} = abs(${te}(depth2) - depth);
      var dy1: ${te} = abs(height - ${te}(height1));
      var dy2: ${te} = abs(${te}(height2) - height);
      var dz1: ${te} = abs(width - ${te}(width1));
      var dz2: ${te} = abs(${te}(width2) - width);
      if (depth1 == depth2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (height1 == height2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      if (width1 == width2) {
        dz1 = 0.5;
        dz2 = 0.5;
      }
      return (x111 * dx2 * dy2 * dz2 + x112 * dx2 * dy2 * dz1 + x121 * dx2 * dy1 *dz2 + x122 * dx2 * dy1 * dz1 +
              x211 * dx1 * dy2 * dz2 + x212 * dx1 * dy2 * dz1 + x221 * dx1 * dy1 *dz2 + x222 * dx1 * dy1 * dz1);
    }`},Wu=(n,l,p,b,C,E)=>{let v=n.dims,x=Is(E,l.axes,v.length),L=iu(v,b,C,l.axes),W=b.slice();b.length===0&&(W=v.map((Ye,dt)=>Ye===0?1:L[dt]/Ye),l.keepAspectRatioPolicy!=="stretch"&&(L=_o(v,W,l)));let te=ss("output",n.dataType,L.length),$=or("input",n.dataType,v.length),j=Kt.size(L),le=v.length===L.length&&v.every((Ye,dt)=>Ye===L[dt]),me=l.coordinateTransformMode==="tf_crop_and_resize",_e=l.extrapolationValue,Ee=$.type.value,Fe=Ye=>`
      ${le?"":`
      ${nu(l.coordinateTransformMode,Ee)};
      ${(()=>{switch(l.mode){case"nearest":return`
              ${Vu($,v)};
              ${ju(l.nearestMode,p,Ee)};
              ${j0($,te,v,L,W.length,x.length,me)};
              `;case"linear":return`
              ${ou(te,v,L,W.length,x.length)};
              ${(()=>{if(v.length===2||v.length===4)return`${Ps($,te,v,me,_e)}`;if(v.length===3||v.length===5)return`${Vo($,te,v,me,_e)}`;throw Error("Linear mode only supports input dims 2, 3, 4 and 5 are supported in linear mode.")})()};
            `;case"cubic":return`
            ${(()=>{if(v.length===2||v.length===4)return`${zs($,te,v,L,W,x,l.cubicCoeffA,me,l.extrapolationValue,l.excludeOutside)}`;throw Error("Cubic mode only supports input dims 2 and 4 are supported in linear mode.")})()};
            `;default:throw Error("Invalid resize mode")}})()};
      `}
      ${Ye.registerUniform("output_size","u32").registerUniform("scales","f32",W.length).registerUniform("roi","f32",x.length).declareVariables($,te)}
      ${Ye.mainStart()}
        ${Ye.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
        ${le?"output[global_idx] = input[global_idx];":`
        let output_indices = ${te.offsetToIndices("global_idx")};
        var input_indices: ${$.type.indices};
        ${(()=>{switch(l.mode){case"nearest":return`input_indices = calculateInputIndicesFromOutputIndices(output_indices);
                if (checkInputIndices(input_indices)) {
                  output[global_idx] = ${$.getByIndices("input_indices")};
                } else {
                  output[global_idx] = ${l.extrapolationValue};
                }`;case"linear":return`output[global_idx] = ${v.length===2||v.length===4?"bilinearInterpolation":"trilinearInterpolation"}(output_indices);`;case"cubic":return"output[global_idx] = bicubicInterpolation(output_indices);";default:throw Error(`Unsupported resize mode: ${l.mode}`)}})()};
`}
      }`;return{name:"Resize",shaderCache:{hint:`${l.cacheKey}|${p}|${W.length>0?l.mode==="cubic"?W:W.length:""}|${C.length>0?C:""}|${x.length>0?x:""}|${le}|${l.mode==="nearest"?v.length:v}`,inputDependencies:["rank"]},getShaderSource:Fe,getRunData:()=>({outputs:[{dims:L,dataType:n.dataType}],dispatchGroup:{x:Math.ceil(j/64)},programUniforms:[{type:12,data:j},{type:1,data:W},{type:1,data:x},...Rr(v,L)]})}},V0=n=>{let l=n.customDataBuffer;return new Uint32Array(l,l.byteOffset,1)[0]},Uu=(n,l)=>{let p=[],b=[],C=[],E=V0(n);if(l.antialias!==0)throw Error("Only default value (0) for Antialias attribute is supported");bA(n.inputs,l,E,p,b,C),n.compute(Wu(n.inputs[0],l,E,p,b,C),{inputs:[0]})},W0=n=>{let l=n.antialias,p=n.axes,b=n.coordinateTransformMode,C=n.cubicCoeffA,E=n.excludeOutside!==0,v=n.extrapolationValue,x=n.keepAspectRatioPolicy,L=n.mode,W=n.nearestMode===""?"simple":n.nearestMode;return Xr({antialias:l,axes:p,coordinateTransformMode:b,cubicCoeffA:C,excludeOutside:E,extrapolationValue:v,keepAspectRatioPolicy:x,mode:L,nearestMode:W})}}),Hu,U0,Yu,rd=z(()=>{qr(),Vr(),hs(),ws(),Hu=(n,l)=>{let[p,b,C,E]=n,{numHeads:v,rotaryEmbeddingDim:x}=l;if(p.dims.length!==3&&p.dims.length!==4)throw new Error(`Input 'x' is expected to have 3 or 4 dimensions, got ${p.dims.length}`);if(!Kt.areEqual(b.dims,[])&&!Kt.areEqual(b.dims,[1])&&b.dims.length!==2)throw new Error(`Input 'position_ids' is expected to have 0, 1, or 2 dimensions, got ${b.dims.length}`);if(C.dims.length!==2)throw new Error(`Input 'cos_cache' is expected to have 2 dimensions, got ${C.dims.length}`);if(E.dims.length!==2)throw new Error(`Input 'sin_cache' is expected to have 2 dimensions, got ${E.dims.length}`);if(!Kt.areEqual(C.dims,E.dims))throw new Error("Inputs 'cos_cache' and 'sin_cache' are expected to have the same shape");if(x>0&&v===0)throw new Error("num_heads must be provided if rotary_embedding_dim is specified");let L=p.dims[0],W=p.dims[p.dims.length-2],te=C.dims[0],$=Kt.sizeFromDimension(p.dims,1)/W,j=x===0?C.dims[1]*2:$/v;if(x>j)throw new Error("rotary_embedding_dim must be less than or equal to head_size");if(b.dims.length===2){if(L!==b.dims[0])throw new Error(`Input 'position_ids' dimension 0 should be of size batch_size, got ${b.dims[0]}`);if(W!==b.dims[1])throw new Error(`Input 'position_ids' dimension 1 should be of size sequence_length, got ${b.dims[1]}`)}if(j/2!==C.dims[1]&&x/2!==C.dims[1])throw new Error(`Input 'cos_cache' dimension 1 should be same as head_size / 2 or rotary_embedding_dim / 2, got ${C.dims[1]}`);if(W>te)throw new Error("Updating cos_cache and sin_cache in RotaryEmbedding is not currently supported")},U0=(n,l)=>{let{interleaved:p,numHeads:b,rotaryEmbeddingDim:C,scale:E}=l,v=n[0].dims[0],x=Kt.sizeFromDimension(n[0].dims,1),L=n[0].dims[n[0].dims.length-2],W=x/L,te=n[2].dims[1],$=C===0?te*2:W/b,j=new Array(v,L,W/$,$-te),le=Kt.computeStrides(j),me=[{type:1,data:E},{type:12,data:j},{type:12,data:le},...n[0].dims.length===3?new Array({type:12,data:[x,W,$,1]}):[],...n[0].dims.length===4?new Array({type:12,data:[x,$,L*$,1]}):[],...Rr(n[0].dims,n[1].dims,n[2].dims,n[3].dims,n[0].dims)],_e=Ee=>{let Fe=or("input",n[0].dataType,n[0].dims.length),Ye=or("position_ids",n[1].dataType,n[1].dims.length),dt=or("cos_cache",n[2].dataType,n[2].dims.length),mt=or("sin_cache",n[3].dataType,n[3].dims.length),xt=ss("output",n[0].dataType,n[0].dims.length);return Ee.registerUniforms([{name:"scale",type:"f32"},{name:"global_shape",type:"u32",length:j.length},{name:"global_strides",type:"u32",length:le.length},{name:"input_output_strides",type:"u32",length:le.length}]),`
        ${Ee.declareVariables(Fe,Ye,dt,mt,xt)}

        ${Ee.mainStart(Js)}
          let half_rotary_emb_dim = uniforms.${dt.name}_shape[1];
          let bsnh = global_idx / uniforms.global_strides % uniforms.global_shape;
          let size = uniforms.global_shape[0] * uniforms.global_strides[0];
          ${Ee.guardAgainstOutOfBoundsWorkgroupSizes("size")}

          if (bsnh[3] < half_rotary_emb_dim) {
            let position_ids_idx =
                ${Ye.broadcastedIndicesToOffset("bsnh.xy",ss("",Ye.type.tensor,2))};
            let position_id =
                u32(${Ye.getByOffset("position_ids_idx")}) + select(0, bsnh[1], position_ids_idx == 0);
            let i = dot(bsnh, uniforms.input_output_strides) + select(0, bsnh[3], ${p});
            let j = i + select(half_rotary_emb_dim, 1, ${p});
            let re = ${Fe.getByOffset("i")} * ${dt.get("position_id","bsnh[3]")} -
                ${Fe.getByOffset("j")} * ${mt.get("position_id","bsnh[3]")};
            ${xt.setByOffset("i","re")}
            let im = ${Fe.getByOffset("i")} * ${mt.get("position_id","bsnh[3]")} +
                ${Fe.getByOffset("j")} * ${dt.get("position_id","bsnh[3]")};
            ${xt.setByOffset("j","im")}
          } else {
            let k = dot(bsnh, uniforms.input_output_strides) + half_rotary_emb_dim;
            ${xt.setByOffset("k",Fe.getByOffset("k"))}
          }
        }`};return{name:"RotaryEmbedding",shaderCache:{hint:Xr({interleaved:p}).cacheKey,inputDependencies:["rank","rank","rank","rank"]},getShaderSource:_e,getRunData:()=>({outputs:[{dims:n[0].dims,dataType:n[0].dataType}],dispatchGroup:{x:Math.ceil(Kt.size(j)/Js)},programUniforms:me})}},Yu=(n,l)=>{Hu(n.inputs,l),n.compute(U0(n.inputs,l))}}),Ku,CA,Au,Os=z(()=>{qr(),Vr(),ws(),Ku=n=>{if(!n||n.length<3)throw new Error("layerNorm requires at least 3 inputs.");let l=n[0],p=n[1],b=n[2];if(l.dataType!==p.dataType||l.dataType!==b.dataType)throw new Error("All inputs must have the same data type");if(l.dims.length!==3&&l.dims.length!==2)throw new Error("Input must be 2D or 3D");if(p.dims.length!==3&&p.dims.length!==2)throw new Error("Skip must be 2D or 3D");let C=l.dims[l.dims.length-1],E=l.dims[l.dims.length-2];if(p.dims[p.dims.length-1]!==C)throw new Error("Skip must have the same hidden size as input");if(p.dims[p.dims.length-2]!==E)throw new Error("Skip must have the same sequence length as input");if(b.dims.length!==1)throw new Error("Gamma must be 1D");if(b.dims[b.dims.length-1]!==C)throw new Error("Gamma must have the same hidden size as input");if(n.length>3){let v=n[3];if(v.dims.length!==1)throw new Error("Beta must be 1D");if(v.dims[v.dims.length-1]!==C)throw new Error("Beta must have the same hidden size as input")}if(n.length>4){let v=n[4];if(v.dims.length!==1)throw new Error("Bias must be 1D");if(v.dims[v.dims.length-1]!==C)throw new Error("Bias must have the same hidden size as input")}},CA=(n,l,p,b)=>{let C=l.simplified,E=n[0].dims,v=Kt.size(E),x=E,L=v,W=E.slice(-1)[0],te=b?E.slice(0,-1).concat(1):[],$=!C&&n.length>3,j=n.length>4,le=b&&p>1,me=b&&p>2,_e=p>3,Ee=64,Fe=cs(W),Ye=[{type:12,data:L},{type:12,data:Fe},{type:12,data:W},{type:1,data:l.epsilon}],dt=xt=>{let jt=[{name:"output_size",type:"u32"},{name:"components",type:"u32"},{name:"hidden_size",type:"u32"},{name:"epsilon",type:"f32"}],Gt=[or("x",n[0].dataType,n[0].dims,Fe),or("skip",n[1].dataType,n[1].dims,Fe),or("gamma",n[2].dataType,n[2].dims,Fe)];$&&Gt.push(or("beta",n[3].dataType,n[3].dims,Fe)),j&&Gt.push(or("bias",n[4].dataType,n[4].dims,Fe)),Gt.push(ss("output",n[0].dataType,x,Fe)),le&&Gt.push(ss("mean_output",1,te)),me&&Gt.push(ss("inv_std_output",1,te)),_e&&Gt.push(ss("input_skip_bias_sum",n[0].dataType,x,Fe));let Zt=es(n[0].dataType),ar=es(1,Fe);return`

      ${xt.registerUniforms(jt).declareVariables(...Gt)}
      var<workgroup> sum_shared : array<${ar}, ${Ee}>;
      var<workgroup> sum_squared_shared : array<${ar}, ${Ee}>;

      ${xt.mainStart([Ee,1,1])}
        let ix = local_id.x;
        let iy = global_id.x / ${Ee};

        let hidden_size_vectorized: u32 = uniforms.hidden_size / uniforms.components;
        var stride = hidden_size_vectorized / ${Ee};
        let offset = ix * stride + iy * hidden_size_vectorized;
        let offset1d = stride * ix;
        if (ix == ${Ee-1}) {
          stride = hidden_size_vectorized - stride * ix;
        }
        for (var i: u32 = 0; i < stride; i++) {
          let skip_value = skip[offset + i];
          let bias_value = ${j?"bias[offset1d + i]":Zt+"(0.0)"};
          let input_value = x[offset + i];
          let value = input_value + skip_value + bias_value;
          ${_e?"input_skip_bias_sum[offset + i] = value;":""}
          output[offset + i] = value;
          let f32_value = ${Us(Zt,Fe,"value")};
          sum_shared[ix] += f32_value;
          sum_squared_shared[ix] += f32_value * f32_value;
        }
        workgroupBarrier();

        var reduce_size : u32 = ${Ee};
        for (var curr_size = reduce_size >> 1;  curr_size > 0; curr_size = reduce_size >> 1) {
          reduce_size = curr_size + (reduce_size & 1);
          if (ix < curr_size) {
            sum_shared[ix] += sum_shared[ix + reduce_size];
            sum_squared_shared[ix] += sum_squared_shared[ix + reduce_size];
          }
          workgroupBarrier();
        }

        let sum = sum_shared[0];
        let square_sum = sum_squared_shared[0];
        let mean = ${Ua("sum",Fe)} / f32(uniforms.hidden_size);
        let inv_std_dev = inverseSqrt(${Ua("square_sum",Fe)} / f32(uniforms.hidden_size) ${C?"":"- mean * mean"} + uniforms.epsilon);
        ${le?"mean_output[global_idx] = mean;":""}
        ${me?"inv_std_output[global_idx] = inv_std_dev;":""}

        for (var i: u32 = 0; i < stride; i++) {
          output[offset + i] = (output[offset + i] ${C?"":`- ${Zt}(mean)`}) *
            ${Zt}(inv_std_dev) * gamma[offset1d + i]
            ${$?"+ beta[offset1d + i]":""};
        }
      }`},mt=[{dims:x,dataType:n[0].dataType}];return p>1&&mt.push({dims:te,dataType:1}),p>2&&mt.push({dims:te,dataType:1}),p>3&&mt.push({dims:E,dataType:n[0].dataType}),{name:"SkipLayerNormalization",shaderCache:{hint:`${Fe};${le};${me};${_e}`,inputDependencies:n.map((xt,jt)=>"type")},getShaderSource:dt,getRunData:()=>({outputs:mt,dispatchGroup:{x:Math.ceil(L/W)},programUniforms:Ye})}},Au=(n,l)=>{Ku(n.inputs);let p=[0];n.outputCount>1&&p.push(-3),n.outputCount>2&&p.push(-3),n.outputCount>3&&p.push(3),n.compute(CA(n.inputs,l,n.outputCount,!1),{outputs:p})}}),H0,$a,Qn,qn,Il,Qs,qu,Bn,he=z(()=>{qr(),Vr(),hs(),ws(),H0=(n,l)=>{if(!n||n.length<1)throw new Error("too few inputs");if(l.axes.length!==0){if(l.axes.length!==l.starts.length||l.axes.length!==l.ends.length)throw new Error("axes, starts and ends must have the same length")}else if(l.starts.length!==l.ends.length)throw new Error("starts and ends must have the same length");n.slice(1).forEach((p,b)=>{if(n[b+1].dataType!==6&&n[b+1].dataType!==7)throw new Error(`Input ${b} must be an array of int32 or int64`)})},$a=(n,l)=>{let p=[];if(n.length>l)if(n[l].dataType===7)n[l].getBigInt64Array().forEach(b=>p.push(Number(b)));else if(n[l].dataType===6)n[l].getInt32Array().forEach(b=>p.push(Number(b)));else throw new Error(`Input ${l} must be an array of int32 or int64`);return p},Qn=(n,l)=>{if(n.length>1){let p=$a(n,1),b=$a(n,2),C=$a(n,3);return C.length===0&&(C=[...Array(n[0].dims.length).keys()]),Xr({starts:p,ends:b,axes:C})}else return l},qn=(n,l,p,b,C)=>{let E=n;return n<0&&(E+=p[b[l]]),C[l]<0?Math.max(0,Math.min(E,p[b[l]]-1)):Math.max(0,Math.min(E,p[b[l]]))},Il=(n,l,p)=>`fn calculateInputIndices(output_indices: ${l.type.indices}) -> ${n.type.indices} {
          var input_indices: ${n.type.indices};
          var carry = 0u;
          for (var i = ${p.length}; i >= 0; i--) {
            let input_shape_i = ${Ir("uniforms.input_shape","i",p.length)};
            let steps_i = ${Ir("uniforms.steps","i",p.length)};
            let signs_i = ${Ir("uniforms.signs","i",p.length)};
            let starts_i = ${Ir("uniforms.starts","i",p.length)};
            var output_index = ${l.indicesGet("output_indices","i")};
            var input_index = output_index * steps_i + starts_i + carry;
            carry = input_index / input_shape_i;
            input_index = input_index % input_shape_i;
            if (signs_i < 0) {
              input_index = input_shape_i - input_index - 1u + starts_i;
            }
            ${n.indicesSet("input_indices","i","input_index")};
          }
          return input_indices;
      }`,Qs=(n,l)=>{let p=n[0].dims,b=Kt.size(p),C=l.axes.length>0?Kt.normalizeAxes(l.axes,p.length):[...Array(p.length).keys()],E=$a(n,4);E.forEach(Fe=>Fe!==0||(()=>{throw new Error("step cannot be 0")})),E.length===0&&(E=Array(C.length).fill(1));let v=l.starts.map((Fe,Ye)=>qn(Fe,Ye,p,C,E)),x=l.ends.map((Fe,Ye)=>qn(Fe,Ye,p,C,E));if(C.length!==v.length||C.length!==x.length)throw new Error("start, ends and axes should have the same number of elements");if(C.length!==p.length)for(let Fe=0;Fe<p.length;++Fe)C.includes(Fe)||(v.splice(Fe,0,0),x.splice(Fe,0,p[Fe]),E.splice(Fe,0,1));let L=E.map(Fe=>Math.sign(Fe));E.forEach((Fe,Ye,dt)=>{if(Fe<0){let mt=(x[Ye]-v[Ye])/Fe,xt=v[Ye],jt=xt+mt*E[Ye];v[Ye]=jt,x[Ye]=xt,dt[Ye]=-Fe}});let W=p.slice(0);C.forEach((Fe,Ye)=>{W[Fe]=Math.ceil((x[Fe]-v[Fe])/E[Fe])});let te={dims:W,dataType:n[0].dataType},$=ss("output",n[0].dataType,W.length),j=or("input",n[0].dataType,n[0].dims.length),le=Kt.size(W),me=[{name:"outputSize",type:"u32"},{name:"starts",type:"u32",length:v.length},{name:"signs",type:"i32",length:L.length},{name:"steps",type:"u32",length:E.length}],_e=[{type:12,data:le},{type:12,data:v},{type:6,data:L},{type:12,data:E},...Rr(n[0].dims,W)],Ee=Fe=>`
      ${Fe.registerUniforms(me).declareVariables(j,$)}
        ${Il(j,$,p)}
        ${Fe.mainStart()}
          ${Fe.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
          let output_indices = ${$.offsetToIndices("global_idx")};
          let input_indices = calculateInputIndices(output_indices);
          ${$.setByOffset("global_idx",j.getByIndices("input_indices"))}
      }`;return{name:"Slice",shaderCache:{hint:`${L.length}_${v.length}_${E.length}`,inputDependencies:["rank"]},getShaderSource:Ee,getRunData:()=>({outputs:[te],dispatchGroup:{x:Math.ceil(b/64)},programUniforms:_e})}},qu=(n,l)=>{H0(n.inputs,l);let p=Qn(n.inputs,l);n.compute(Qs(n.inputs,p),{inputs:[0]})},Bn=n=>{let l=n.starts,p=n.ends,b=n.axes;return Xr({starts:l,ends:p,axes:b})}}),Te,st,Qt,Jt,$t=z(()=>{qr(),Vr(),hs(),Ni(),ws(),Te=n=>{if(!n||n.length!==1)throw new Error("Softmax op requires 1 input.")},st=(n,l)=>{let p=n.inputs[0],b=p.dims,C=Kt.size(b),E=b.length,v=Kt.normalizeAxis(l.axis,E),x=v<b.length-1,L,W=[];x?(W=Array.from({length:E},(Gt,Zt)=>Zt),W[v]=E-1,W[E-1]=v,L=n.compute(Un(p,W),{inputs:[p],outputs:[-1]})[0]):L=p;let te=L.dims,$=te[E-1],j=C/$,le=cs($),me=$/le,_e=64;j===1&&(_e=256);let Ee=(Gt,Zt)=>Zt===4?`max(max(${Gt}.x, ${Gt}.y), max(${Gt}.z, ${Gt}.w))`:Zt===2?`max(${Gt}.x, ${Gt}.y)`:Zt===3?`max(max(${Gt}.x, ${Gt}.y), ${Gt}.z)`:Gt,Fe=or("x",L.dataType,L.dims,le),Ye=ss("result",L.dataType,L.dims,le),dt=Fe.type.value,mt=es(L.dataType)==="f32"?`var threadMax = ${dt}(-3.402823e+38f);`:`var threadMax = ${dt}(-65504.0h);`,xt=Gt=>`
      var<workgroup> rowMaxShared : ${dt};
      var<workgroup> rowSumShared : ${dt};
      var<workgroup> threadShared : array<${dt}, ${_e}>;

      fn getValue(row: i32, col: i32, row_stride: i32) -> ${dt} {
        let index = row * row_stride + col;
        return x[index];
      }

      fn setValue(row: i32, col: i32, row_stride: i32, value: ${dt}) {
        let index = row * row_stride + col;
        result[index] = value;
      }
      ${Gt.registerUniform("packedCols","i32").declareVariables(Fe,Ye)}
      ${Gt.mainStart(_e)}
        let gindex = i32(global_idx);
        let lindex = i32(local_idx);
        const wg = ${_e};
        let row = gindex / wg;
        let cols = uniforms.packedCols;
        let row_stride : i32 = uniforms.packedCols;

        // find the rows max
        ${mt}
        for (var col = lindex; col < cols; col += wg) {
          let value = getValue(row, col, row_stride);
          threadMax = max(threadMax, value);
        }
        if (lindex < cols) {
          threadShared[lindex] = threadMax;
        }
        workgroupBarrier();

        var reduceSize = min(cols, wg);
        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {
          reduceSize = currSize + (reduceSize & 1);
          if (lindex < currSize) {
            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowMaxShared = ${dt}(${Ee("threadShared[0]",le)});
        }
        workgroupBarrier();

        // find the rows sum
        var threadSum = ${dt}(0.0);
        for (var col = lindex; col < cols; col += wg) {
          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);
          threadSum += subExp;
        }
        threadShared[lindex] = threadSum;
        workgroupBarrier();

        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {
          if (lindex < currSize) {
            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowSumShared = ${dt}(${Ua("threadShared[0]",le)});
        }
        workgroupBarrier();

        // calculate final value for each element in the row
        for (var col = lindex; col < cols; col += wg) {
          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;
          setValue(row, col, row_stride, value);
        }
      }`,jt=n.compute({name:"Softmax",shaderCache:{hint:`${le};${_e}`,inputDependencies:["type"]},getRunData:()=>({outputs:[{dims:te,dataType:L.dataType}],dispatchGroup:{x:j},programUniforms:[{type:6,data:me}]}),getShaderSource:xt},{inputs:[L],outputs:[x?-1:0]})[0];x&&n.compute(Un(jt,W),{inputs:[jt]})},Qt=(n,l)=>{Te(n.inputs),st(n,l)},Jt=n=>Xr({axis:n.axis})}),ie,ke,Ue,yt,Nt,Rt=z(()=>{qr(),Vr(),ws(),ie=n=>Array.from(n.getBigInt64Array(),Number),ke=n=>{if(!n||n.length!==2)throw new Error("Tile requires 2 inputs.");if(n[0].dataType!==1&&n[0].dataType!==10&&n[0].dataType!==6&&n[0].dataType!==12)throw new Error("Tile only support float, float16, int32, and uint32 data types");if(n[1].dataType!==7)throw new Error("Tile `repeats` input should be of int64 data type");if(n[1].dims.length!==1)throw new Error("Tile `repeats` input should be 1-D");if(ie(n[1]).length!==n[0].dims.length)throw new Error("Tile `repeats` input should have same number of elements as rank of input data tensor")},Ue=(n,l)=>{let p=[];for(let b=0;b<n.length;++b)p.push(n[b]*l[b]);return p},yt=(n,l)=>{let p=n[0].dims,b=l??ie(n[1]),C=Ue(p,b),E=Kt.size(C),v=n[0].dataType,x=or("input",v,p.length),L=ss("output",v,C.length),W=te=>`
      const inputShape = ${x.indices(...p)};
      ${te.registerUniform("output_size","u32").declareVariables(x,L)}
      ${te.mainStart()}
      ${te.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let output_indices = ${L.offsetToIndices("global_idx")};
      var input_indices: ${x.type.indices};
      for (var i = 0; i < ${p.length}; i++) {
        let input_dim_i = ${x.indicesGet("uniforms.input_shape","i")};
        let input_dim_value = ${L.indicesGet("output_indices","i")}  % input_dim_i;

        ${x.indicesSet("input_indices","i","input_dim_value")}
      }
      ${L.setByOffset("global_idx",x.getByIndices("input_indices"))}
    }`;return{name:"Tile",shaderCache:{hint:`${b}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:C,dataType:n[0].dataType}],dispatchGroup:{x:Math.ceil(E/64)},programUniforms:[{type:12,data:E},...Rr(n[0].dims,C)]}),getShaderSource:W}},Nt=n=>{ke(n.inputs),n.compute(yt(n.inputs),{inputs:[0]})}}),Yt,cr,mr,br=z(()=>{qr(),Vr(),ws(),Yt=(n,l,p,b,C)=>{let E=ss("output_data",C,p.length,4),v=or("a_data",l[1].dataType,l[1].dims.length,4),x=or("b_data",l[2].dataType,l[2].dims.length,4),L=or("c_data",l[0].dataType,l[0].dims.length,4),W,te=($,j,le)=>`select(${j}, ${$}, ${le})`;if(!b)W=E.setByOffset("global_idx",te(v.getByOffset("global_idx"),x.getByOffset("global_idx"),L.getByOffset("global_idx")));else{let $=(j,le,me="")=>{let _e=`a_data[index_a${le}][component_a${le}]`,Ee=`b_data[index_b${le}][component_b${le}]`,Fe=`bool(c_data[index_c${le}] & (0xffu << (component_c${le} * 8)))`;return`
            let output_indices${le} = ${E.offsetToIndices(`global_idx * 4u + ${le}u`)};
            let offset_a${le} = ${v.broadcastedIndicesToOffset(`output_indices${le}`,E)};
            let offset_b${le} = ${x.broadcastedIndicesToOffset(`output_indices${le}`,E)};
            let offset_c${le} = ${L.broadcastedIndicesToOffset(`output_indices${le}`,E)};
            let index_a${le} = offset_a${le} / 4u;
            let index_b${le} = offset_b${le} / 4u;
            let index_c${le} = offset_c${le} / 4u;
            let component_a${le} = offset_a${le} % 4u;
            let component_b${le} = offset_b${le} % 4u;
            let component_c${le} = offset_c${le} % 4u;
            ${j}[${le}] = ${me}(${te(_e,Ee,Fe)});
          `};C===9?W=`
            var data = vec4<u32>(0);
            ${$("data",0,"u32")}
            ${$("data",1,"u32")}
            ${$("data",2,"u32")}
            ${$("data",3,"u32")}
            output_data[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:W=`
            ${$("output_data[global_idx]",0)}
            ${$("output_data[global_idx]",1)}
            ${$("output_data[global_idx]",2)}
            ${$("output_data[global_idx]",3)}
          `}return`
        ${n.registerUniform("vec_size","u32").declareVariables(L,v,x,E)}
        ${n.mainStart()}
        ${n.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${W}
      }`},cr=n=>{let l=n[1].dims,p=n[2].dims,b=n[0].dims,C=n[1].dataType,E=!(Kt.areEqual(l,p)&&Kt.areEqual(p,b)),v=l,x=Kt.size(l);if(E){let W=Or.calcShape(Or.calcShape(l,p,!1),b,!1);if(!W)throw new Error("Can't perform where op on the given tensors");v=W,x=Kt.size(v)}let L=Math.ceil(x/4);return{name:"Where",shaderCache:{inputDependencies:["rank","rank","rank"]},getShaderSource:W=>Yt(W,n,v,E,C),getRunData:()=>({outputs:[{dims:v,dataType:C}],dispatchGroup:{x:Math.ceil(x/64/4)},programUniforms:[{type:12,data:L},...Rr(b,l,p,v)]})}},mr=n=>{n.compute(cr(n.inputs))}}),Cr,Pr=z(()=>{mn(),co(),Al(),Di(),gl(),i(),P(),fu(),pu(),oc(),hu(),g0(),mu(),bu(),Cu(),wu(),ku(),_u(),ed(),Wl(),Eu(),M0(),Tu(),Pu(),Lc(),Bc(),T0(),Ou(),Qu(),ru(),Lu(),ps(),td(),rd(),Os(),he(),$t(),Yl(),Rt(),Ni(),Hi(),br(),Cr=new Map([["Abs",[PA]],["Acos",[rA]],["Acosh",[Si]],["Add",[lA]],["ArgMax",[ci,EA]],["ArgMin",[MA,EA]],["Asin",[sA]],["Asinh",[Ra]],["Atan",[DA]],["Atanh",[aA]],["Attention",[Ta]],["AveragePool",[Kc,S0]],["BatchNormalization",[Ci]],["BiasAdd",[tA]],["BiasSplitGelu",[NA]],["Cast",[On,go]],["Ceil",[ui]],["Clip",[nA]],["Concat",[M,y]],["Conv",[Sl,RA]],["ConvTranspose",[ac,l0]],["Cos",[SA]],["Cosh",[Oo]],["CumSum",[nc,ic]],["DepthToSpace",[dA,gA]],["DequantizeLinear",[$c,eu]],["Div",[cA]],["Einsum",[dc,gc]],["Elu",[po,fo]],["Equal",[to]],["Erf",[ll]],["Exp",[GA]],["Expand",[hc]],["FastGelu",[Nl]],["Floor",[dn]],["FusedConv",[Sl,RA]],["Gather",[hl,bc]],["GatherElements",[kc,yu]],["GatherBlockQuantized",[wc,Rl]],["GatherND",[Ll,ml]],["Gelu",[No]],["Gemm",[jl,_c]],["GlobalAveragePool",[qc,Gu]],["GlobalMaxPool",[Xc,zu]],["Greater",[t]],["GreaterOrEqual",[s]],["GridSample",[b0,Mc]],["GroupQueryAttention",[_0]],["HardSigmoid",[ho,Gi]],["InstanceNormalization",[x0]],["LayerNormalization",[ql]],["LeakyRelu",[gn,fo]],["Less",[r]],["LessOrEqual",[a]],["Log",[mo]],["MatMul",[Xl]],["MatMulNBits",[Qc,Nc]],["MaxPool",[z0,Fu]],["Mul",[fl]],["MultiHeadAttention",[vu,C0]],["Neg",[iA]],["Not",[FA]],["Pad",[Uc]],["Pow",[Co]],["QuickGelu",[Ui,fo]],["Range",[Q0]],["Reciprocal",[Yn]],["ReduceMin",[al]],["ReduceMean",[Ti]],["ReduceMax",[Po]],["ReduceSum",[La]],["ReduceProd",[nl]],["ReduceL1",[Jo]],["ReduceL2",[rl]],["ReduceLogSum",[ol]],["ReduceLogSumExp",[sl]],["ReduceSumSquare",[il]],["Relu",[ba]],["Resize",[Uu,W0]],["RotaryEmbedding",[Yu]],["ScatterND",[N0,au]],["Sigmoid",[zA]],["Sin",[cl]],["Sinh",[oA]],["Slice",[qu,Bn]],["SkipLayerNormalization",[Au]],["Split",[Pc,Dc]],["Sqrt",[OA]],["Softmax",[Qt,Jt]],["Sub",[os]],["Tan",[ul]],["Tanh",[di]],["ThresholdedRelu",[na,fo]],["Tile",[Nt]],["Transpose",[Uo,Ho]],["Where",[mr]]])}),Zr,ms=z(()=>{kt(),tt(),ws(),Zr=class{constructor(n){this.backend=n,this.repo=new Map,this.attributesBound=!1}getArtifact(n){return this.repo.get(n)}setArtifact(n,l){this.repo.set(n,l)}run(n,l,p,b,C){It(n.programInfo.name);let E=this.backend.device,v=this.backend.getComputePassEncoder();this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2);let x=[];for(let W of l)x.push({binding:x.length,resource:{buffer:W.buffer}});for(let W of p)x.push({binding:x.length,resource:{buffer:W.buffer}});C&&x.push({binding:x.length,resource:C});let L=E.createBindGroup({layout:n.computePipeline.getBindGroupLayout(0),entries:x,label:n.programInfo.name});if(this.backend.sessionStatus==="capturing"){let W={kernelId:this.backend.currentKernelId,computePipeline:n.computePipeline,bindGroup:L,dispatchGroup:b};this.backend.capturedCommandList.get(this.backend.currentSessionId).push(W)}v.setPipeline(n.computePipeline),v.setBindGroup(0,L),v.dispatchWorkgroups(...b),this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2+1),this.backend.pendingDispatchNumber++,(this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber||this.backend.queryType==="at-passes")&&this.backend.endComputePass(),this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber&&this.backend.flush(),Tt(n.programInfo.name)}dispose(){}build(n,l){It(n.name);let p=this.backend.device,b=[];[{feature:"shader-f16",extension:"f16"},{feature:"subgroups",extension:"subgroups"},{feature:"subgroups-f16",extension:"subgroups_f16"}].forEach(W=>{p.features.has(W.feature)&&b.push(`enable ${W.extension};`)});let C=lo(l,this.backend.device.limits),E=n.getShaderSource(C),v=`${b.join(`
`)}
${C.additionalImplementations}
${E}`,x=p.createShaderModule({code:v,label:n.name});wt("verbose",()=>`[WebGPU] ${n.name} shader code: ${v}`);let L=p.createComputePipeline({compute:{module:x,entryPoint:"main"},layout:"auto",label:n.name});return Tt(n.name),{programInfo:n,computePipeline:L,uniformVariablesInfo:C.variablesInfo}}normalizeDispatchGroupSize(n){let l=typeof n=="number"?n:n.x,p=typeof n=="number"?1:n.y||1,b=typeof n=="number"?1:n.z||1,C=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(l<=C&&p<=C&&b<=C)return[l,p,b];let E=l*p*b,v=Math.ceil(Math.sqrt(E));if(v>C){if(v=Math.ceil(Math.cbrt(E)),v>C)throw new Error("Total dispatch size exceeds WebGPU maximum.");return[v,v,v]}else return[v,v,1]}}}),Ur,rs,as,xs,Ns,ca=z(()=>{kt(),qr(),tt(),Ge(),_r(),Pr(),ms(),Ur=(n,l)=>{if(l.length!==n.length)throw new Error(`inputDependencies length ${l.length} is not equal to inputTensors length ${n.length}.`);let p=[];for(let b=0;b<n.length;++b){let C=n[b].dataType;switch(l[b]){case"none":{p.push("");break}case"type":{p.push(`${C}`);break}case"rank":{let E=n[b].dims.length;p.push(`${C};${E}`);break}case"dims":{let E=n[b].dims.join(",");p.push(`${C};${E}`);break}default:throw new Error(`unsupported input dependency: ${l[b]}`)}}return p.join("|")},rs=(n,l,p)=>{var C,E;let b=n.name;return(C=n.shaderCache)!=null&&C.hint&&(b+="["+n.shaderCache.hint+"]"),b+=":"+p+`:${Ur(l,((E=n.shaderCache)==null?void 0:E.inputDependencies)??new Array(l.length).fill("dims"))}`,b},as=class{constructor(n){n&&(this.architecture=n.architecture,this.vendor=n.vendor)}isArchitecture(n){return this.architecture===n}isVendor(n){return this.vendor===n}},xs=class{constructor(n){this.subgroupsSupported=n.features.has("subgroups"),this.subgroupsF16Supported=n.features.has("subgroups");let l=n.limits;!this.subgroupsSupported||!l.minSubgroupSize||!l.maxSubgroupSize?this.subgroupSizeRange=void 0:this.subgroupSizeRange=[l.minSubgroupSize,l.maxSubgroupSize]}},Ns=class{constructor(){this.currentSessionId=null,this.currentKernelId=null,this.commandEncoder=null,this.computePassEncoder=null,this.maxDispatchNumber=16,this.pendingDispatchNumber=0,this.pendingKernels=[],this.pendingQueries=new Map,this.sessionStatus="default",this.capturedCommandList=new Map,this.capturedPendingKernels=new Map,this.sessionExternalDataMapping=new Map}get currentKernelCustomData(){if(this.currentKernelId===null)throw new Error("currentKernelCustomData(): currentKernelId is null. (should not happen)");let n=this.kernelCustomData.get(this.currentKernelId);return n||(n={},this.kernelCustomData.set(this.currentKernelId,n)),n}async initialize(n,l){this.env=n;let p=[],b={requiredLimits:{maxComputeWorkgroupStorageSize:l.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:l.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:l.limits.maxStorageBufferBindingSize,maxBufferSize:l.limits.maxBufferSize,maxComputeInvocationsPerWorkgroup:l.limits.maxComputeInvocationsPerWorkgroup,maxComputeWorkgroupSizeX:l.limits.maxComputeWorkgroupSizeX,maxComputeWorkgroupSizeY:l.limits.maxComputeWorkgroupSizeY,maxComputeWorkgroupSizeZ:l.limits.maxComputeWorkgroupSizeZ},requiredFeatures:p},C=E=>l.features.has(E)&&p.push(E)&&!0;C("chromium-experimental-timestamp-query-inside-passes")||C("timestamp-query"),C("shader-f16"),C("subgroups")&&C("subgroups-f16"),this.device=await l.requestDevice(b),this.deviceInfo=new xs(this.device),this.adapterInfo=new as(l.info||await l.requestAdapterInfo()),this.gpuDataManager=wr(this),this.programManager=new Zr(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,Qe(n.logLevel,!!n.debug),this.device.onuncapturederror=E=>{E.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${E.error.message}`)},Object.defineProperty(this.env.webgpu,"device",{value:this.device,writable:!1,enumerable:!0,configurable:!1}),Object.defineProperty(this.env.webgpu,"adapter",{value:l,writable:!1,enumerable:!0,configurable:!1}),this.setQueryType()}dispose(){typeof this.querySet<"u"&&this.querySet.destroy(),this.gpuDataManager.dispose()}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder()),this.commandEncoder}getComputePassEncoder(){if(!this.computePassEncoder){let n=this.getCommandEncoder(),l={};this.queryType==="at-passes"&&(l.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:this.pendingDispatchNumber*2,endOfPassWriteIndex:this.pendingDispatchNumber*2+1}),this.computePassEncoder=n.beginComputePass(l)}return this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){if(!this.commandEncoder)return;It(),this.endComputePass();let n;this.queryType!=="none"&&(this.commandEncoder.resolveQuerySet(this.querySet,0,this.pendingDispatchNumber*2,this.queryResolveBuffer,0),n=this.device.createBuffer({size:this.pendingDispatchNumber*2*8,usage:GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST}),this.pendingQueries.set(n,this.pendingKernels),this.pendingKernels=[],this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,n,0,this.pendingDispatchNumber*2*8)),this.device.queue.submit([this.commandEncoder.finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0,this.queryType!=="none"&&n.mapAsync(GPUMapMode.READ).then(()=>{var b;let l=new BigUint64Array(n.getMappedRange()),p=this.pendingQueries.get(n);for(let C=0;C<l.length/2;C++){let E=p[C],v=E.kernelId,x=this.kernels.get(v),L=x.kernelType,W=x.kernelName,te=E.programName,$=E.inputTensorViews,j=E.outputTensorViews,le=l[C*2],me=l[C*2+1];typeof this.queryTimeBase>"u"&&(this.queryTimeBase=le);let _e=Number(le-this.queryTimeBase),Ee=Number(me-this.queryTimeBase);if(!Number.isSafeInteger(_e)||!Number.isSafeInteger(Ee))throw new RangeError("incorrect timestamp range");if((b=this.env.webgpu.profiling)!=null&&b.ondata)this.env.webgpu.profiling.ondata({version:1,inputsMetadata:$.map(Fe=>({dims:Fe.dims,dataType:Sn(Fe.dataType)})),outputsMetadata:j.map(Fe=>({dims:Fe.dims,dataType:Sn(Fe.dataType)})),kernelId:v,kernelType:L,kernelName:W,programName:te,startTime:_e,endTime:Ee});else{let Fe="";$.forEach((dt,mt)=>{Fe+=`input[${mt}]: [${dt.dims}] | ${Sn(dt.dataType)}, `});let Ye="";j.forEach((dt,mt)=>{Ye+=`output[${mt}]: [${dt.dims}] | ${Sn(dt.dataType)}, `}),console.log(`[profiling] kernel "${v}|${L}|${W}|${te}" ${Fe}${Ye}execution time: ${Ee-_e} ns`)}Et("GPU",`${te}::${le}::${me}`)}n.unmap(),this.pendingQueries.delete(n)}),Tt()}run(n,l,p,b,C,E){It(n.name);let v=[];for(let Ye=0;Ye<l.length;++Ye){let dt=l[Ye].data;if(dt===0)continue;let mt=this.gpuDataManager.get(dt);if(!mt)throw new Error(`no GPU data for input: ${dt}`);v.push(mt)}let{outputs:x,dispatchGroup:L,programUniforms:W}=n.getRunData(l),te=p.length===0?x.map((Ye,dt)=>dt):p;if(te.length!==x.length)throw new Error(`Output size ${te.length} must be equal to ${x.length}.`);let $=[],j=[];for(let Ye=0;Ye<x.length;++Ye){if(!Number.isInteger(te[Ye])||te[Ye]<-3||te[Ye]>=E)throw new Error(`Invalid output index: ${te[Ye]}`);if(te[Ye]===-3)continue;let dt=te[Ye]===-1,mt=te[Ye]===-2,xt=dt||mt?C(x[Ye].dataType,x[Ye].dims):b(te[Ye],x[Ye].dataType,x[Ye].dims);if($.push(xt),xt.data===0)continue;let jt=this.gpuDataManager.get(xt.data);if(!jt)throw new Error(`no GPU data for output: ${xt.data}`);if(dt&&this.temporaryData.push(jt),mt){let Gt=this.kernelPersistentData.get(this.currentKernelId);Gt||(Gt=[],this.kernelPersistentData.set(this.currentKernelId,Gt)),Gt.push(jt)}j.push(jt)}if(v.length!==l.length||j.length!==$.length){if(j.length===0)return Tt(n.name),$;throw new Error(`Program ${n.name} has zero-sized tensor(s) in inputs or outputs. This is not supported now.`)}let le;if(W){let Ye=0,dt=[];W.forEach(Gt=>{let Zt=typeof Gt.data=="number"?[Gt.data]:Gt.data;if(Zt.length===0)return;let ar=Gt.type===10?2:4,St,kr;Gt.type===10?(kr=Zt.length>4?16:Zt.length>2?8:Zt.length*ar,St=Zt.length>4?16:ar*Zt.length):(kr=Zt.length<=2?Zt.length*ar:16,St=16),Ye=Math.ceil(Ye/kr)*kr,dt.push(Ye);let fr=Gt.type===10?8:4;Ye+=Zt.length>4?Math.ceil(Zt.length/fr)*St:Zt.length*ar});let mt=16;Ye=Math.ceil(Ye/mt)*mt;let xt=new ArrayBuffer(Ye);W.forEach((Gt,Zt)=>{let ar=dt[Zt],St=typeof Gt.data=="number"?[Gt.data]:Gt.data;if(Gt.type===6)new Int32Array(xt,ar,St.length).set(St);else if(Gt.type===12)new Uint32Array(xt,ar,St.length).set(St);else if(Gt.type===10)new Uint16Array(xt,ar,St.length).set(St);else if(Gt.type===1)new Float32Array(xt,ar,St.length).set(St);else throw new Error(`Unsupported uniform type: ${Sn(Gt.type)}`)});let jt=this.gpuDataManager.create(Ye,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.device.queue.writeBuffer(jt.buffer,0,xt,0,Ye),this.gpuDataManager.release(jt.id),le={offset:0,size:Ye,buffer:jt.buffer}}let me=this.programManager.normalizeDispatchGroupSize(L),_e=me[1]===1&&me[2]===1,Ee=rs(n,l,_e),Fe=this.programManager.getArtifact(Ee);if(Fe||(Fe=this.programManager.build(n,me),this.programManager.setArtifact(Ee,Fe),wt("info",()=>`[artifact] key: ${Ee}, programName: ${n.name}`)),W&&Fe.uniformVariablesInfo){if(W.length!==Fe.uniformVariablesInfo.length)throw new Error(`Uniform variables count mismatch: expect ${Fe.uniformVariablesInfo.length}, got ${W.length} in program "${Fe.programInfo.name}".`);for(let Ye=0;Ye<W.length;Ye++){let dt=W[Ye],mt=dt.type,xt=typeof dt.data=="number"?1:dt.data.length,[jt,Gt]=Fe.uniformVariablesInfo[Ye];if(mt!==jt||xt!==Gt)throw new Error(`Uniform variable ${Ye} mismatch: expect type ${jt} with size ${Gt}, got type ${mt} with size ${xt} in program "${Fe.programInfo.name}".`)}}if(wt("info",()=>`[ProgramManager] run "${n.name}" (key=${Ee}) with ${me[0]}x${me[1]}x${me[2]}`),this.queryType!=="none"||this.sessionStatus==="capturing"){let Ye={kernelId:this.currentKernelId,programName:Fe.programInfo.name,inputTensorViews:l,outputTensorViews:$};this.pendingKernels.push(Ye),this.sessionStatus==="capturing"&&this.capturedPendingKernels.get(this.currentSessionId).push(Ye)}return this.programManager.run(Fe,v,j,me,le),Tt(n.name),$}upload(n,l){this.gpuDataManager.upload(n,l)}memcpy(n,l){this.gpuDataManager.memcpy(n,l)}async download(n,l){await this.gpuDataManager.download(n,l)}alloc(n){return this.gpuDataManager.create(n).id}free(n){return this.gpuDataManager.release(n)}createKernel(n,l,p,b){let C=Cr.get(n);if(!C)throw new Error(`kernel not implemented: ${n}`);let E={kernelType:n,kernelName:b,kernelEntry:C[0],attributes:[C[1],p]};this.kernels.set(l,E)}releaseKernel(n){let l=this.kernelPersistentData.get(n);if(l){for(let p of l)this.gpuDataManager.release(p.id);this.kernelPersistentData.delete(n)}this.kernelCustomData.delete(n),this.kernels.delete(n)}computeKernel(n,l,p){let b=this.kernels.get(n);if(!b)throw new Error(`kernel not created: ${n}`);let C=b.kernelType,E=b.kernelName,v=b.kernelEntry,x=b.attributes;if(this.currentKernelId!==null)throw new Error(`kernel "[${C}] ${E}" is not allowed to be called recursively`);this.currentKernelId=n,x[0]&&(x[1]=x[0](x[1]),x[0]=void 0),wt("info",()=>`[WebGPU] Start to run kernel "[${C}] ${E}"...`);let L=this.env.debug;this.temporaryData=[];try{return L&&this.device.pushErrorScope("validation"),v(l,x[1]),0}catch(W){return p.push(Promise.resolve(`[WebGPU] Kernel "[${C}] ${E}" failed. ${W}`)),1}finally{L&&p.push(this.device.popErrorScope().then(W=>W?`GPU validation error for kernel "[${C}] ${E}": ${W.message}`:null));for(let W of this.temporaryData)this.gpuDataManager.release(W.id);this.temporaryData=[],this.currentKernelId=null}}registerBuffer(n,l,p,b){let C=this.sessionExternalDataMapping.get(n);C||(C=new Map,this.sessionExternalDataMapping.set(n,C));let E=C.get(l),v=this.gpuDataManager.registerExternalBuffer(p,b,E);return C.set(l,[v,p]),v}unregisterBuffers(n){let l=this.sessionExternalDataMapping.get(n);l&&(l.forEach(p=>this.gpuDataManager.unregisterExternalBuffer(p[0])),this.sessionExternalDataMapping.delete(n))}getBuffer(n){let l=this.gpuDataManager.get(n);if(!l)throw new Error(`no GPU data for buffer: ${n}`);return l.buffer}createDownloader(n,l,p){return async()=>{let b=await xr(this,n,l);return Ae(b.buffer,p)}}writeTimestamp(n){this.queryType==="inside-passes"&&this.computePassEncoder.writeTimestamp(this.querySet,n)}setQueryType(){var n;this.queryType="none",(((n=this.env.webgpu.profiling)==null?void 0:n.mode)==="default"||(typeof this.env.trace>"u"?this.env.wasm.trace:this.env.trace))&&(this.device.features.has("chromium-experimental-timestamp-query-inside-passes")?this.queryType="inside-passes":this.device.features.has("timestamp-query")&&(this.queryType="at-passes"),this.queryType!=="none"&&typeof this.querySet>"u"&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.maxDispatchNumber*2}),this.queryResolveBuffer=this.device.createBuffer({size:this.maxDispatchNumber*2*8,usage:GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE})))}captureBegin(){wt("info","captureBegin"),this.capturedCommandList.get(this.currentSessionId)||this.capturedCommandList.set(this.currentSessionId,[]),this.capturedPendingKernels.get(this.currentSessionId)||this.capturedPendingKernels.set(this.currentSessionId,[]),this.flush(),this.sessionStatus="capturing"}captureEnd(){wt("info","captureEnd"),this.flush(),this.sessionStatus="default"}replay(){wt("info","replay"),this.sessionStatus="replaying";let n=this.capturedCommandList.get(this.currentSessionId),l=this.capturedPendingKernels.get(this.currentSessionId),p=n.length;this.pendingKernels=[];for(let b=0;b<p;b++){let C=this.getComputePassEncoder(),E=n[b];this.writeTimestamp(this.pendingDispatchNumber*2),C.setPipeline(E.computePipeline),C.setBindGroup(0,E.bindGroup),C.dispatchWorkgroups(...E.dispatchGroup),this.writeTimestamp(this.pendingDispatchNumber*2+1),this.pendingDispatchNumber++,this.queryType!=="none"&&this.pendingKernels.push(l[b]),(this.pendingDispatchNumber>=this.maxDispatchNumber||this.queryType==="at-passes")&&this.endComputePass(),this.pendingDispatchNumber>=this.maxDispatchNumber&&this.flush()}this.flush(),this.sessionStatus="default"}onCreateSession(){this.gpuDataManager.onCreateSession()}onReleaseSession(n){this.unregisterBuffers(n),this.capturedCommandList.has(n)&&this.capturedCommandList.delete(n),this.capturedPendingKernels.has(n)&&this.capturedPendingKernels.delete(n),this.gpuDataManager.onReleaseSession(n)}onRunStart(n){this.currentSessionId=n,this.setQueryType()}}}),pa,nn,ha,wa,qa,Nn,ua,Ln,Ia=z(()=>{tt(),pa=1,nn=()=>pa++,ha=new Map([["float32",32],["float16",16],["int32",32],["uint32",32],["int64",64],["uint64",64],["int8",8],["uint8",8],["int4",4],["uint4",4]]),wa=(n,l)=>{let p=ha.get(n);if(!p)throw new Error("Unsupported data type.");return l.length>0?Math.ceil(l.reduce((b,C)=>b*C)*p/8):0},qa=class{constructor(n){this.sessionId=n.sessionId,this.mlContext=n.context,this.mlTensor=n.tensor,this.dataType=n.dataType,this.tensorShape=n.shape}get tensor(){return this.mlTensor}get type(){return this.dataType}get shape(){return this.tensorShape}get byteLength(){return wa(this.dataType,this.tensorShape)}destroy(){wt("verbose",()=>"[WebNN] TensorWrapper.destroy"),this.mlTensor.destroy()}write(n){this.mlContext.writeTensor(this.mlTensor,n)}async read(n){return n?this.mlContext.readTensor(this.mlTensor,n):this.mlContext.readTensor(this.mlTensor)}canReuseTensor(n,l,p){return this.mlContext===n&&this.dataType===l&&this.tensorShape.length===p.length&&this.tensorShape.every((b,C)=>b===p[C])}},Nn=class{constructor(n,l){this.tensorManager=n,this.wrapper=l}get tensorWrapper(){return this.wrapper}releaseTensor(){this.tensorWrapper&&(this.tensorManager.releaseTensor(this.tensorWrapper),this.wrapper=void 0)}async ensureTensor(n,l,p,b){if(this.wrapper){if(this.wrapper.canReuseTensor(n,l,p))return this.wrapper.tensor;if(b){if(this.wrapper.byteLength!==wa(l,p))throw new Error("Unable to copy data to tensor with different size.");this.activeUpload=new Uint8Array(await this.wrapper.read())}this.tensorManager.releaseTensor(this.wrapper)}let C=typeof MLTensorUsage>"u"?void 0:MLTensorUsage.READ|MLTensorUsage.WRITE;return this.wrapper=await this.tensorManager.getCachedTensor(l,p,C,!0,!0),b&&this.activeUpload&&(this.wrapper.write(this.activeUpload),this.activeUpload=void 0),this.wrapper.tensor}upload(n){if(this.wrapper)if(n.byteLength===this.wrapper.byteLength){this.wrapper.write(n);return}else wt("verbose",()=>"Data size does not match tensor size. Releasing tensor."),this.releaseTensor();this.activeUpload?this.activeUpload.set(n):this.activeUpload=new Uint8Array(n)}async download(n){if(this.activeUpload)if(n){n instanceof ArrayBuffer?new Uint8Array(n).set(this.activeUpload):new Uint8Array(n.buffer,n.byteOffset,n.byteLength).set(this.activeUpload);return}else return this.activeUpload.buffer;if(!this.wrapper)throw new Error("Tensor has not been created.");return n?this.wrapper.read(n):this.wrapper.read()}},ua=class{constructor(n){this.backend=n,this.tensorTrackersById=new Map,this.freeTensors=[],this.externalTensors=new Set}reserveTensorId(){let n=nn();return this.tensorTrackersById.set(n,new Nn(this)),n}releaseTensorId(n){let l=this.tensorTrackersById.get(n);l&&(this.tensorTrackersById.delete(n),l.tensorWrapper&&this.releaseTensor(l.tensorWrapper))}async ensureTensor(n,l,p,b){wt("verbose",()=>`[WebNN] TensorManager.ensureTensor {tensorId: ${n}, dataType: ${l}, shape: ${p}, copyOld: ${b}}`);let C=this.tensorTrackersById.get(n);if(!C)throw new Error("Tensor not found.");return C.ensureTensor(this.backend.currentContext,l,p,b)}upload(n,l){let p=this.tensorTrackersById.get(n);if(!p)throw new Error("Tensor not found.");p.upload(l)}async download(n,l){wt("verbose",()=>`[WebNN] TensorManager.download {tensorId: ${n}, dstBuffer: ${l==null?void 0:l.byteLength}}`);let p=this.tensorTrackersById.get(n);if(!p)throw new Error("Tensor not found.");return p.download(l)}releaseTensorsForSession(n){for(let l of this.freeTensors)l.sessionId===n&&l.destroy();this.freeTensors=this.freeTensors.filter(l=>l.sessionId!==n)}registerTensor(n,l,p,b){let C=nn(),E=new qa({sessionId:this.backend.currentSessionId,context:n,tensor:l,dataType:p,shape:b});return this.tensorTrackersById.set(C,new Nn(this,E)),this.externalTensors.add(E),C}async getCachedTensor(n,l,p,b,C){let E=this.backend.currentSessionId,v=this.backend.currentContext;for(let[L,W]of this.freeTensors.entries())if(W.canReuseTensor(v,n,l)){wt("verbose",()=>`[WebNN] Reusing tensor {dataType: ${n}, shape: ${l}}`);let te=this.freeTensors.splice(L,1)[0];return te.sessionId=E,te}wt("verbose",()=>`[WebNN] MLContext.createTensor {dataType: ${n}, shape: ${l}}`);let x=await v.createTensor({dataType:n,shape:l,dimensions:l,usage:p,writable:b,readable:C});return new qa({sessionId:E,context:v,tensor:x,dataType:n,shape:l})}releaseTensor(n){this.externalTensors.has(n)&&this.externalTensors.delete(n),this.freeTensors.push(n)}},Ln=(...n)=>new ua(...n)}),ja,ki,io,kl=z(()=>{qr(),Xa(),Ge(),Ia(),tt(),ja=new Map([[1,"float32"],[10,"float16"],[6,"int32"],[12,"uint32"],[7,"int64"],[13,"uint64"],[22,"int4"],[21,"uint4"],[3,"int8"],[2,"uint8"],[9,"uint8"]]),ki=(n,l)=>{if(n===l)return!0;if(n===void 0||l===void 0)return!1;let p=Object.keys(n).sort(),b=Object.keys(l).sort();return p.length===b.length&&p.every((C,E)=>C===b[E]&&n[C]===l[C])},io=class{constructor(n){this.tensorManager=Ln(this),this.mlContextBySessionId=new Map,this.sessionIdsByMLContext=new Map,this.mlContextCache=[],Qe(n.logLevel,!!n.debug)}get currentSessionId(){if(this.activeSessionId===void 0)throw new Error("No active session");return this.activeSessionId}onRunStart(n){this.activeSessionId=n}async createMLContext(n){if(n instanceof GPUDevice){let p=this.mlContextCache.findIndex(b=>b.gpuDevice===n);if(p!==-1)return this.mlContextCache[p].mlContext;{let b=await navigator.ml.createContext(n);return this.mlContextCache.push({gpuDevice:n,mlContext:b}),b}}else if(n===void 0){let p=this.mlContextCache.findIndex(b=>b.options===void 0&&b.gpuDevice===void 0);if(p!==-1)return this.mlContextCache[p].mlContext;{let b=await navigator.ml.createContext();return this.mlContextCache.push({mlContext:b}),b}}let l=this.mlContextCache.findIndex(p=>ki(p.options,n));if(l!==-1)return this.mlContextCache[l].mlContext;{let p=await navigator.ml.createContext(n);return this.mlContextCache.push({options:n,mlContext:p}),p}}get currentContext(){let n=this.getMLContext(this.currentSessionId);if(!n)throw new Error(`No MLContext found for session ${this.currentSessionId}`);return n}registerMLContext(n,l){this.mlContextBySessionId.set(n,l);let p=this.sessionIdsByMLContext.get(l);p||(p=new Set,this.sessionIdsByMLContext.set(l,p)),p.add(n)}onReleaseSession(n){let l=this.mlContextBySessionId.get(n);if(!l)return;this.tensorManager.releaseTensorsForSession(n),this.mlContextBySessionId.delete(n);let p=this.sessionIdsByMLContext.get(l);if(p.delete(n),p.size===0){this.sessionIdsByMLContext.delete(l);let b=this.mlContextCache.findIndex(C=>C.mlContext===l);b!==-1&&this.mlContextCache.splice(b,1)}}getMLContext(n){return this.mlContextBySessionId.get(n)}reserveTensorId(){return this.tensorManager.reserveTensorId()}releaseTensorId(n){wt("verbose",()=>`[WebNN] releaseTensorId {tensorId: ${n}}`),this.tensorManager.releaseTensorId(n)}async ensureTensor(n,l,p,b){let C=ja.get(l);if(!C)throw new Error(`Unsupported ONNX data type: ${l}`);return this.tensorManager.ensureTensor(n,C,p,b)}uploadTensor(n,l){if(!Ls().shouldTransferToMLTensor)throw new Error("Trying to upload to a MLTensor while shouldTransferToMLTensor is false");wt("verbose",()=>`[WebNN] uploadTensor {tensorId: ${n}, data: ${l.byteLength}}`),this.tensorManager.upload(n,l)}async downloadTensor(n,l){return this.tensorManager.download(n,l)}createMLTensorDownloader(n,l){return async()=>{let p=await this.tensorManager.download(n);return Ae(p,l)}}registerMLTensor(n,l,p){let b=ja.get(l);if(!b)throw new Error(`Unsupported ONNX data type: ${l}`);let C=this.tensorManager.registerTensor(this.currentContext,n,b,p);return wt("verbose",()=>`[WebNN] registerMLTensor {tensor: ${n}, dataType: ${b}, dimensions: ${p}} -> {tensorId: ${C}}`),C}registerMLConstant(n,l,p,b,C,E){if(!E)throw new Error("External mounted files are not available.");let v=n;n.startsWith("./")&&(v=n.substring(2));let x=E.get(v);if(!x)throw new Error(`File with name ${v} not found in preloaded files.`);if(l+p>x.byteLength)throw new Error("Out of bounds: data offset and length exceed the external file data size.");let L=x.slice(l,l+p).buffer,W;switch(C.dataType){case"float32":W=new Float32Array(L);break;case"float16":W=new Uint16Array(L);break;case"int32":W=new Int32Array(L);break;case"uint32":W=new Uint32Array(L);break;case"int64":W=new BigInt64Array(L);break;case"uint64":W=new BigUint64Array(L);break;case"int8":W=new Int8Array(L);break;case"int4":case"uint4":case"uint8":W=new Uint8Array(L);break;default:throw new Error(`Unsupported data type: ${C.dataType} in creating WebNN Constant from external data.`)}return wt("verbose",()=>`[WebNN] registerMLConstant {dataType: ${C.dataType}, shape: ${C.shape}}}`),b.constant(C,W)}flush(){}}}),Y0={};N(Y0,{init:()=>ai});var ka,on,ai,yl=z(()=>{qr(),ca(),tt(),Vr(),kl(),ka=class Sp{constructor(l,p,b,C){this.module=l,this.dataType=p,this.data=b,this.dims=C}getFloat32Array(){if(this.dataType!==1)throw new Error("Invalid data type");let l=Kt.size(this.dims);return l===0?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,l)}getBigInt64Array(){if(this.dataType!==7)throw new Error("Invalid data type");let l=Kt.size(this.dims);return l===0?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,l)}getInt32Array(){if(this.dataType!==6)throw new Error("Invalid data type");let l=Kt.size(this.dims);return l===0?new Int32Array:new Int32Array(this.module.HEAP8.buffer,this.data,l)}getUint16Array(){if(this.dataType!==10&&this.dataType!==4)throw new Error("Invalid data type");let l=Kt.size(this.dims);return l===0?new Uint16Array:new Uint16Array(this.module.HEAP8.buffer,this.data,l)}reshape(l){if(Kt.size(l)!==Kt.size(this.dims))throw new Error("Invalid new shape");return new Sp(this.module,this.dataType,this.data,l)}},on=class{constructor(n,l,p){this.module=n,this.backend=l,this.customDataOffset=0,this.customDataSize=0,this.adapterInfo=l.adapterInfo,this.deviceInfo=l.deviceInfo;let b=n.PTR_SIZE,C=p/n.PTR_SIZE,E=b===4?"i32":"i64";this.opKernelContext=Number(n.getValue(b*C++,E));let v=Number(n.getValue(b*C++,E));this.outputCount=Number(n.getValue(b*C++,E)),this.customDataOffset=Number(n.getValue(b*C++,"*")),this.customDataSize=Number(n.getValue(b*C++,E));let x=[];for(let L=0;L<v;L++){let W=Number(n.getValue(b*C++,E)),te=Number(n.getValue(b*C++,"*")),$=Number(n.getValue(b*C++,E)),j=[];for(let le=0;le<$;le++)j.push(Number(n.getValue(b*C++,E)));x.push(new ka(n,W,te,j))}this.inputs=x}get kernelCustomData(){return this.backend.currentKernelCustomData}get customDataBuffer(){return this.module.HEAPU8.subarray(this.customDataOffset,this.customDataOffset+this.customDataSize)}compute(n,l){var v;let p=((v=l==null?void 0:l.inputs)==null?void 0:v.map(x=>typeof x=="number"?this.inputs[x]:x))??this.inputs,b=(l==null?void 0:l.outputs)??[],C=(x,L,W)=>new ka(this.module,L,this.output(x,W),W),E=(x,L)=>{let W=cn(x,L);if(!W)throw new Error(`Unsupported data type: ${x}`);let te=W>0?this.backend.gpuDataManager.create(W).id:0;return new ka(this.module,x,te,L)};return this.backend.run(n,p,b,C,E,this.outputCount)}output(n,l){let p=this.module.stackSave();try{let b=this.module.PTR_SIZE,C=b===4?"i32":"i64",E=this.module.stackAlloc((1+l.length)*b);this.module.setValue(E,l.length,C);for(let v=0;v<l.length;v++)this.module.setValue(E+b*(v+1),l[v],C);return this.module._JsepOutput(this.opKernelContext,n,E)}catch(b){throw new Error(`Failed to generate kernel's output[${n}] with dims [${l}]. If you are running with pre-allocated output, please make sure the output type/dims are correct. Error: ${b}`)}finally{this.module.stackRestore(p)}}},ai=async(n,l,p,b)=>{let C=l.jsepInit;if(!C)throw new Error("Failed to initialize JSEP. The WebAssembly module is not built with JSEP support.");if(n==="webgpu"){let E=new Ns;await E.initialize(p,b),C("webgpu",[E,v=>E.alloc(Number(v)),v=>E.free(v),(v,x,L,W=!1)=>{if(W)wt("verbose",()=>`[WebGPU] jsepCopyGpuToGpu: src=${Number(v)}, dst=${Number(x)}, size=${Number(L)}`),E.memcpy(Number(v),Number(x));else{wt("verbose",()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${Number(v)}, gpuDataId=${Number(x)}, size=${Number(L)}`);let te=l.HEAPU8.subarray(Number(v>>>0),Number(v>>>0)+Number(L));E.upload(Number(x),te)}},async(v,x,L)=>{wt("verbose",()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${v}, dataOffset=${x}, size=${L}`),await E.download(Number(v),()=>l.HEAPU8.subarray(Number(x)>>>0,Number(x+L)>>>0))},(v,x,L)=>E.createKernel(v,Number(x),L,l.UTF8ToString(l._JsepGetNodeName(Number(x)))),v=>E.releaseKernel(v),(v,x,L,W)=>{wt("verbose",()=>`[WebGPU] jsepRun: sessionHandle=${L}, kernel=${v}, contextDataOffset=${x}`);let te=new on(l,E,Number(x));return E.computeKernel(Number(v),te,W)},()=>E.captureBegin(),()=>E.captureEnd(),()=>E.replay()])}else{let E=new io(p);C("webnn",[E,()=>E.reserveTensorId(),v=>E.releaseTensorId(v),async(v,x,L,W)=>E.ensureTensor(v,x,L,W),(v,x)=>{E.uploadTensor(v,x)},async(v,x)=>E.downloadTensor(v,x)])}}}),vo,Wo,UA,oo,_l,HA,e0,Ao,gi,Oi,Xn,vl,sd=z(()=>{Jn(),Bi(),qr(),Xa(),Mi(),Ai(),vo=(n,l)=>{Ls()._OrtInit(n,l)!==0&&Ms("Can't initialize onnxruntime.")},Wo=async n=>{vo(n.wasm.numThreads,ti(n.logLevel))},UA=async(n,l)=>{{let p=(yl(),R(Y0)).init;if(l==="webgpu"){if(typeof navigator>"u"||!navigator.gpu)throw new Error("WebGPU is not supported in current environment");let b=n.webgpu.adapter;if(b){if(typeof b.limits!="object"||typeof b.features!="object"||typeof b.requestDevice!="function")throw new Error("Invalid GPU adapter set in `env.webgpu.adapter`. It must be a GPUAdapter object.")}else{let C=n.webgpu.powerPreference;if(C!==void 0&&C!=="low-power"&&C!=="high-performance")throw new Error(`Invalid powerPreference setting: "${C}"`);let E=n.webgpu.forceFallbackAdapter;if(E!==void 0&&typeof E!="boolean")throw new Error(`Invalid forceFallbackAdapter setting: "${E}"`);if(b=await navigator.gpu.requestAdapter({powerPreference:C,forceFallbackAdapter:E}),!b)throw new Error('Failed to get GPU adapter. You may need to enable flag "--enable-unsafe-webgpu" if you are using Chrome.')}await p("webgpu",Ls(),n,b)}if(l==="webnn"){if(typeof navigator>"u"||!navigator.ml)throw new Error("WebNN is not supported in current environment");await p("webnn",Ls(),n)}}},oo=new Map,_l=n=>{let l=Ls(),p=l.stackSave();try{let b=l.PTR_SIZE,C=l.stackAlloc(2*b);l._OrtGetInputOutputCount(n,C,C+b)!==0&&Ms("Can't get session input/output count.");let E=b===4?"i32":"i64";return[Number(l.getValue(C,E)),Number(l.getValue(C+b,E))]}finally{l.stackRestore(p)}},HA=n=>{let l=Ls(),p=l._malloc(n.byteLength);if(p===0)throw new Error(`Can't create a session. failed to allocate a buffer of size ${n.byteLength}.`);return l.HEAPU8.set(n,p),[p,n.byteLength]},e0=async(n,l)=>{var $,j,le;let p,b,C=Ls();Array.isArray(n)?[p,b]=n:n.buffer===C.HEAPU8.buffer?[p,b]=[n.byteOffset,n.byteLength]:[p,b]=HA(n);let E=0,v=0,x=0,L=[],W=[],te=[];try{if([v,L]=ma(l),(l==null?void 0:l.externalData)&&C.mountExternalData){let xt=[];for(let jt of l.externalData){let Gt=typeof jt=="string"?jt:jt.path;xt.push(pi(typeof jt=="string"?jt:jt.data).then(Zt=>{C.mountExternalData(Gt,Zt)}))}await Promise.all(xt)}for(let xt of(l==null?void 0:l.executionProviders)??[])if((typeof xt=="string"?xt:xt.name)==="webnn"){if(C.shouldTransferToMLTensor=!1,typeof xt!="string"){let jt=xt,Gt=jt==null?void 0:jt.context,Zt=jt==null?void 0:jt.gpuDevice,ar=jt==null?void 0:jt.deviceType,St=jt==null?void 0:jt.powerPreference;Gt?C.currentContext=Gt:Zt?C.currentContext=await C.jsepCreateMLContext(Zt):C.currentContext=await C.jsepCreateMLContext({deviceType:ar,powerPreference:St})}else C.currentContext=await C.jsepCreateMLContext();break}E=await C._OrtCreateSession(p,b,v),E===0&&Ms("Can't create a session."),($=C.jsepOnCreateSession)==null||$.call(C),C.currentContext&&(C.jsepRegisterMLContext(E,C.currentContext),C.currentContext=void 0,C.shouldTransferToMLTensor=!0);let[me,_e]=_l(E),Ee=!!(l!=null&&l.enableGraphCapture),Fe=[],Ye=[],dt=[];for(let xt=0;xt<me;xt++){let jt=C._OrtGetInputName(E,xt);jt===0&&Ms("Can't get an input name."),W.push(jt),Fe.push(C.UTF8ToString(jt))}for(let xt=0;xt<_e;xt++){let jt=C._OrtGetOutputName(E,xt);jt===0&&Ms("Can't get an output name."),te.push(jt);let Gt=C.UTF8ToString(jt);Ye.push(Gt);{if(Ee&&(l==null?void 0:l.preferredOutputLocation)===void 0){dt.push("gpu-buffer");continue}let Zt=typeof(l==null?void 0:l.preferredOutputLocation)=="string"?l.preferredOutputLocation:((j=l==null?void 0:l.preferredOutputLocation)==null?void 0:j[Gt])??"cpu";if(Zt!=="cpu"&&Zt!=="cpu-pinned"&&Zt!=="gpu-buffer"&&Zt!=="ml-tensor")throw new Error(`Not supported preferred output location: ${Zt}.`);if(Ee&&Zt!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${Zt}. Only 'gpu-buffer' location is supported when enableGraphCapture is true.`);dt.push(Zt)}}let mt=null;return dt.some(xt=>xt==="gpu-buffer"||xt==="ml-tensor")&&(x=C._OrtCreateBinding(E),x===0&&Ms("Can't create IO binding."),mt={handle:x,outputPreferredLocations:dt,outputPreferredLocationsEncoded:dt.map(xt=>ys(xt))}),oo.set(E,[E,W,te,mt,Ee,!1]),[E,Fe,Ye]}catch(me){throw W.forEach(_e=>C._OrtFree(_e)),te.forEach(_e=>C._OrtFree(_e)),x!==0&&C._OrtReleaseBinding(x)!==0&&Ms("Can't release IO binding."),E!==0&&C._OrtReleaseSession(E)!==0&&Ms("Can't release session."),me}finally{C._free(p),v!==0&&C._OrtReleaseSessionOptions(v)!==0&&Ms("Can't release session options."),L.forEach(me=>C._free(me)),(le=C.unmountExternalData)==null||le.call(C)}},Ao=n=>{var L;let l=Ls(),p=oo.get(n);if(!p)throw new Error(`cannot release session. invalid session id: ${n}`);let[b,C,E,v,x]=p;v&&(x&&l._OrtClearBoundOutputs(v.handle)!==0&&Ms("Can't clear bound outputs."),l._OrtReleaseBinding(v.handle)!==0&&Ms("Can't release IO binding.")),(L=l.jsepOnReleaseSession)==null||L.call(l,n),C.forEach(W=>l._OrtFree(W)),E.forEach(W=>l._OrtFree(W)),l._OrtReleaseSession(b)!==0&&Ms("Can't release session."),oo.delete(n)},gi=(n,l,p,b,C,E=!1)=>{if(!n){l.push(0);return}let v=Ls(),x=v.PTR_SIZE,L=n[0],W=n[1],te=n[3],$,j;if(L==="string"&&(te==="gpu-buffer"||te==="ml-tensor"))throw new Error("String tensor is not supported on GPU.");if(E&&te!=="gpu-buffer")throw new Error(`External buffer must be provided for input/output index ${C} when enableGraphCapture is true.`);if(te==="gpu-buffer"){let _e=n[2].gpuBuffer;j=cn(Vn(L),W);let Ee=v.jsepRegisterBuffer;if(!Ee)throw new Error('Tensor location "gpu-buffer" is not supported without using WebGPU.');$=Ee(b,C,_e,j)}else if(te==="ml-tensor"){let _e=n[2].mlTensor;j=cn(Vn(L),W);let Ee=v.jsepRegisterMLTensor;if(!Ee)throw new Error('Tensor location "ml-tensor" is not supported without using WebNN.');$=Ee(_e,Vn(L),W)}else{let _e=n[2];if(Array.isArray(_e)){j=x*_e.length,$=v._malloc(j),p.push($);for(let Ee=0;Ee<_e.length;Ee++){if(typeof _e[Ee]!="string")throw new TypeError(`tensor data at index ${Ee} is not a string`);v.setValue($+Ee*x,_a(_e[Ee],p),"*")}}else j=_e.byteLength,$=v._malloc(j),p.push($),v.HEAPU8.set(new Uint8Array(_e.buffer,_e.byteOffset,j),$)}let le=v.stackSave(),me=v.stackAlloc(4*W.length);try{W.forEach((Ee,Fe)=>v.setValue(me+Fe*x,Ee,x===4?"i32":"i64"));let _e=v._OrtCreateTensor(Vn(L),$,j,me,W.length,ys(te));_e===0&&Ms(`Can't create tensor for input/output. session=${b}, index=${C}.`),l.push(_e)}finally{v.stackRestore(le)}},Oi=async(n,l,p,b,C,E)=>{var kr,fr;let v=Ls(),x=v.PTR_SIZE,L=oo.get(n);if(!L)throw new Error(`cannot run inference. invalid session id: ${n}`);let W=L[0],te=L[1],$=L[2],j=L[3],le=L[4],me=L[5],_e=l.length,Ee=b.length,Fe=0,Ye=[],dt=[],mt=[],xt=[],jt=v.stackSave(),Gt=v.stackAlloc(_e*x),Zt=v.stackAlloc(_e*x),ar=v.stackAlloc(Ee*x),St=v.stackAlloc(Ee*x);try{(kr=v.jsepOnRunStart)==null||kr.call(v,W),[Fe,Ye]=Ma(E);for(let Sr=0;Sr<_e;Sr++)gi(p[Sr],dt,xt,n,l[Sr],le);for(let Sr=0;Sr<Ee;Sr++)gi(C[Sr],mt,xt,n,_e+b[Sr],le);for(let Sr=0;Sr<_e;Sr++)v.setValue(Gt+Sr*x,dt[Sr],"*"),v.setValue(Zt+Sr*x,te[l[Sr]],"*");for(let Sr=0;Sr<Ee;Sr++)v.setValue(ar+Sr*x,mt[Sr],"*"),v.setValue(St+Sr*x,$[b[Sr]],"*");if(j&&!me){let{handle:Sr,outputPreferredLocations:As,outputPreferredLocationsEncoded:Xs}=j;if(te.length!==_e)throw new Error(`input count from feeds (${_e}) is expected to be always equal to model's input count (${te.length}).`);for(let bs=0;bs<_e;bs++){let vs=l[bs];await v._OrtBindInput(Sr,te[vs],dt[bs])!==0&&Ms(`Can't bind input[${bs}] for session=${n}.`)}for(let bs=0;bs<Ee;bs++){let vs=b[bs];(fr=C[bs])!=null&&fr[3]?v._OrtBindOutput(Sr,$[vs],mt[bs],0)!==0&&Ms(`Can't bind pre-allocated output[${bs}] for session=${n}.`):v._OrtBindOutput(Sr,$[vs],0,Xs[vs])!==0&&Ms(`Can't bind output[${bs}] to ${As[bs]} for session=${n}.`)}oo.set(n,[W,te,$,j,le,!0])}let ur;j?ur=await v._OrtRunWithBinding(W,j.handle,Ee,ar,Fe):ur=await v._OrtRun(W,Zt,Gt,_e,St,Ee,ar,Fe),ur!==0&&Ms("failed to call OrtRun().");let Jr=[];for(let Sr=0;Sr<Ee;Sr++){let As=Number(v.getValue(ar+Sr*x,"*"));if(As===mt[Sr]){Jr.push(C[Sr]);continue}let Xs=v.stackSave(),bs=v.stackAlloc(4*x),vs=!1,Ys,Er=0;try{v._OrtGetTensorData(As,bs,bs+x,bs+2*x,bs+3*x)!==0&&Ms(`Can't access output tensor data on index ${Sr}.`);let Kr=x===4?"i32":"i64",js=Number(v.getValue(bs,Kr));Er=v.getValue(bs+x,"*");let Ds=v.getValue(bs+x*2,"*"),va=Number(v.getValue(bs+x*3,Kr)),_i=[];for(let Va=0;Va<va;Va++)_i.push(Number(v.getValue(Ds+Va*x,Kr)));v._OrtFree(Ds)!==0&&Ms("Can't free memory for tensor dims.");let Ml=_i.reduce((Va,ni)=>Va*ni,1);Ys=Sn(js);let qi=j==null?void 0:j.outputPreferredLocations[b[Sr]];if(Ys==="string"){if(qi==="gpu-buffer"||qi==="ml-tensor")throw new Error("String tensor is not supported on GPU.");let Va=[];for(let ni=0;ni<Ml;ni++){let xo=v.getValue(Er+ni*x,"*"),vd=v.getValue(Er+(ni+1)*x,"*"),Ju=ni===Ml-1?void 0:vd-xo;Va.push(v.UTF8ToString(xo,Ju))}Jr.push([Ys,_i,Va,"cpu"])}else if(qi==="gpu-buffer"&&Ml>0){let Va=v.jsepGetBuffer;if(!Va)throw new Error('preferredLocation "gpu-buffer" is not supported without using WebGPU.');let ni=Va(Er),xo=cn(js,Ml);if(xo===void 0||!ri(Ys))throw new Error(`Unsupported data type: ${Ys}`);vs=!0,Jr.push([Ys,_i,{gpuBuffer:ni,download:v.jsepCreateDownloader(ni,xo,Ys),dispose:()=>{v._OrtReleaseTensor(As)!==0&&Ms("Can't release tensor.")}},"gpu-buffer"])}else if(qi==="ml-tensor"&&Ml>0){let Va=v.jsepEnsureTensor;if(!Va)throw new Error('preferredLocation "ml-tensor" is not supported without using WebNN.');if(cn(js,Ml)===void 0||!ds(Ys))throw new Error(`Unsupported data type: ${Ys}`);let ni=await Va(Er,js,_i,!1);vs=!0,Jr.push([Ys,_i,{mlTensor:ni,download:v.jsepCreateMLTensorDownloader(Er,Ys),dispose:()=>{v.jsepReleaseTensorId(Er),v._OrtReleaseTensor(As)}},"ml-tensor"])}else{let Va=ei(Ys),ni=new Va(Ml);new Uint8Array(ni.buffer,ni.byteOffset,ni.byteLength).set(v.HEAPU8.subarray(Er,Er+ni.byteLength)),Jr.push([Ys,_i,ni,"cpu"])}}finally{v.stackRestore(Xs),Ys==="string"&&Er&&v._free(Er),vs||v._OrtReleaseTensor(As)}}return j&&!le&&(v._OrtClearBoundOutputs(j.handle)!==0&&Ms("Can't clear bound outputs."),oo.set(n,[W,te,$,j,le,!1])),Jr}finally{v.stackRestore(jt),dt.forEach(ur=>v._OrtReleaseTensor(ur)),mt.forEach(ur=>v._OrtReleaseTensor(ur)),xt.forEach(ur=>v._free(ur)),Fe!==0&&v._OrtReleaseRunOptions(Fe),Ye.forEach(ur=>v._free(ur))}},Xn=n=>{let l=Ls(),p=oo.get(n);if(!p)throw new Error("invalid session id");let b=p[0],C=l._OrtEndProfiling(b);C===0&&Ms("Can't get an profile file name."),l._OrtFree(C)},vl=n=>{let l=[];for(let p of n){let b=p[2];!Array.isArray(b)&&"buffer"in b&&l.push(b.buffer)}return l}}),xl,Qi,yi,Zn,hd,yd,Vd,_d,Xu,Zu,D2,S2,Wd,G2,F2,Bg,z2,O2,Tg=z(()=>{kt(),sd(),Xa(),kn(),xl=()=>!!B.wasm.proxy&&typeof document<"u",yi=!1,Zn=!1,hd=!1,_d=new Map,Xu=(n,l)=>{let p=_d.get(n);p?p.push(l):_d.set(n,[l])},Zu=()=>{if(yi||!Zn||hd||!Qi)throw new Error("worker not ready")},D2=n=>{switch(n.data.type){case"init-wasm":yi=!1,n.data.err?(hd=!0,Vd[1](n.data.err)):(Zn=!0,Vd[0]()),yd&&(URL.revokeObjectURL(yd),yd=void 0);break;case"init-ep":case"copy-from":case"create":case"release":case"run":case"end-profiling":{let l=_d.get(n.data.type);n.data.err?l.shift()[1](n.data.err):l.shift()[0](n.data.out);break}}},S2=async()=>{if(!Zn){if(yi)throw new Error("multiple calls to 'initWasm()' detected.");if(hd)throw new Error("previous call to 'initWasm()' failed.");if(yi=!0,xl())return new Promise((n,l)=>{Qi==null||Qi.terminate(),In().then(([p,b])=>{var C;try{Qi=b,Qi.onerror=v=>l(v),Qi.onmessage=D2,Vd=[n,l];let E={type:"init-wasm",in:B};!E.in.wasm.wasmPaths&&(p||(C=import.meta.url)!=null&&C.startsWith("file:"))&&(E.in.wasm.wasmPaths={wasm:new URL(A("./node_modules/onnxruntime-web/dist/ort-wasm-simd-threaded.jsep.wasm"),A.b).href}),Qi.postMessage(E),yd=p}catch(E){l(E)}},l)});try{await Ss(B.wasm),await Wo(B),Zn=!0}catch(n){throw hd=!0,n}finally{yi=!1}}},Wd=async n=>{if(xl())return Zu(),new Promise((l,p)=>{Xu("init-ep",[l,p]);let b={type:"init-ep",in:{epName:n,env:B}};Qi.postMessage(b)});await UA(B,n)},G2=async n=>xl()?(Zu(),new Promise((l,p)=>{Xu("copy-from",[l,p]);let b={type:"copy-from",in:{buffer:n}};Qi.postMessage(b,[n.buffer])})):HA(n),F2=async(n,l)=>{if(xl()){if(l!=null&&l.preferredOutputLocation)throw new Error('session option "preferredOutputLocation" is not supported for proxy.');return Zu(),new Promise((p,b)=>{Xu("create",[p,b]);let C={type:"create",in:{model:n,options:{...l}}},E=[];n instanceof Uint8Array&&E.push(n.buffer),Qi.postMessage(C,E)})}else return e0(n,l)},Bg=async n=>{if(xl())return Zu(),new Promise((l,p)=>{Xu("release",[l,p]);let b={type:"release",in:n};Qi.postMessage(b)});Ao(n)},z2=async(n,l,p,b,C,E)=>{if(xl()){if(p.some(v=>v[3]!=="cpu"))throw new Error("input tensor on GPU is not supported for proxy.");if(C.some(v=>v))throw new Error("pre-allocated output tensor is not supported for proxy.");return Zu(),new Promise((v,x)=>{Xu("run",[v,x]);let L=p,W={type:"run",in:{sessionId:n,inputIndices:l,inputs:L,outputIndices:b,options:E}};Qi.postMessage(W,vl(L))})}else return Oi(n,l,p,b,C,E)},O2=async n=>{if(xl())return Zu(),new Promise((l,p)=>{Xu("end-profiling",[l,p]);let b={type:"end-profiling",in:n};Qi.postMessage(b)});Xn(n)}}),Ud,Hd,Yd,Pg=z(()=>{kt(),Tg(),qr(),Dt(),Ai(),Ud=(n,l)=>{switch(n.location){case"cpu":return[n.type,n.dims,n.data,"cpu"];case"gpu-buffer":return[n.type,n.dims,{gpuBuffer:n.gpuBuffer},"gpu-buffer"];case"ml-tensor":return[n.type,n.dims,{mlTensor:n.mlTensor},"ml-tensor"];default:throw new Error(`invalid data location: ${n.location} for ${l()}`)}},Hd=n=>{switch(n[3]){case"cpu":return new Ne(n[0],n[2],n[1]);case"gpu-buffer":{let l=n[0];if(!ri(l))throw new Error(`not supported data type: ${l} for deserializing GPU tensor`);let{gpuBuffer:p,download:b,dispose:C}=n[2];return Ne.fromGpuBuffer(p,{dataType:l,dims:n[1],download:b,dispose:C})}case"ml-tensor":{let l=n[0];if(!ds(l))throw new Error(`not supported data type: ${l} for deserializing MLTensor tensor`);let{mlTensor:p,download:b,dispose:C}=n[2];return Ne.fromMLTensor(p,{dataType:l,dims:n[1],download:b,dispose:C})}default:throw new Error(`invalid data location: ${n[3]}`)}},Yd=class{async fetchModelAndCopyToWasmMemory(n){return G2(await pi(n))}async loadModel(n,l){It();let p;typeof n=="string"?p=await this.fetchModelAndCopyToWasmMemory(n):p=n,[this.sessionId,this.inputNames,this.outputNames]=await F2(p,l),Tt()}async dispose(){return Bg(this.sessionId)}async run(n,l,p){It();let b=[],C=[];Object.entries(n).forEach($=>{let j=$[0],le=$[1],me=this.inputNames.indexOf(j);if(me===-1)throw new Error(`invalid input '${j}'`);b.push(le),C.push(me)});let E=[],v=[];Object.entries(l).forEach($=>{let j=$[0],le=$[1],me=this.outputNames.indexOf(j);if(me===-1)throw new Error(`invalid output '${j}'`);E.push(le),v.push(me)});let x=b.map(($,j)=>Ud($,()=>`input "${this.inputNames[C[j]]}"`)),L=E.map(($,j)=>$?Ud($,()=>`output "${this.outputNames[v[j]]}"`):null),W=await z2(this.sessionId,C,x,v,L,p),te={};for(let $=0;$<W.length;$++)te[this.outputNames[v[$]]]=E[$]??Hd(W[$]);return Tt(),te}startProfiling(){}endProfiling(){O2(this.sessionId)}}}),Dg={};N(Dg,{OnnxruntimeWebAssemblyBackend:()=>c,initializeFlags:()=>Q2,wasmBackend:()=>h});var Q2,c,h,_=z(()=>{kt(),Tg(),Pg(),Q2=()=>{if((typeof B.wasm.initTimeout!="number"||B.wasm.initTimeout<0)&&(B.wasm.initTimeout=0),B.wasm.simd===!1&&console.warn('Deprecated property "env.wasm.simd" is set to false. non-SIMD build is no longer provided, and this setting will be ignored.'),typeof B.wasm.proxy!="boolean"&&(B.wasm.proxy=!1),typeof B.wasm.trace!="boolean"&&(B.wasm.trace=!1),typeof B.wasm.numThreads!="number"||!Number.isInteger(B.wasm.numThreads)||B.wasm.numThreads<=0)if(typeof self<"u"&&!self.crossOriginIsolated)B.wasm.numThreads=1;else{let n=typeof navigator>"u"?H("node:os").cpus().length:navigator.hardwareConcurrency;B.wasm.numThreads=Math.min(4,Math.ceil((n||1)/2))}},c=class{async init(n){Q2(),await S2(),await Wd(n)}async createInferenceSessionHandler(n,l){let p=new Yd;return await p.loadModel(n,l),Promise.resolve(p)}},h=new c});kt(),kt(),kt();var S="1.21.0-dev.20250206-d981b153d3",V=ct;{let n=(_(),R(Dg)).wasmBackend;oe("webgpu",n,5),oe("webnn",n,5),oe("cpu",n,10),oe("wasm",n,10)}Object.defineProperty(B.versions,"web",{value:S,enumerable:!0});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */},"./src/backends/onnx.js":(T,k,A)=>{var w;A.r(k),A.d(k,{Tensor:()=>H.Tensor,createInferenceSession:()=>Ie,deviceToExecutionProviders:()=>oe,isONNXProxy:()=>ce,isONNXTensor:()=>ee});var F=A("./src/env.js"),Y=A("?2ce3"),U=A("./node_modules/onnxruntime-web/dist/ort.bundle.min.mjs?3a96"),H=A("./node_modules/onnxruntime-common/dist/esm/index.js");const z=Object.freeze({auto:null,gpu:null,cpu:"cpu",wasm:"wasm",webgpu:"webgpu",cuda:"cuda",dml:"dml",webnn:{name:"webnn",deviceType:"cpu"},"webnn-npu":{name:"webnn",deviceType:"npu"},"webnn-gpu":{name:"webnn",deviceType:"gpu"},"webnn-cpu":{name:"webnn",deviceType:"cpu"}}),N=[];let D,R;const Q=Symbol.for("onnxruntime");if(Q in globalThis)R=globalThis[Q];else if(F.apis.IS_NODE_ENV){switch(R=Y??(w||(w=A.t(Y,2))),process.platform){case"win32":N.push("dml");break;case"linux":process.arch==="x64"&&N.push("cuda");break}N.push("cpu"),D=["cpu"]}else R=U,F.apis.IS_WEBNN_AVAILABLE&&N.push("webnn-npu","webnn-gpu","webnn-cpu","webnn"),F.apis.IS_WEBGPU_AVAILABLE&&N.push("webgpu"),N.push("wasm"),D=["wasm"];const J=R.InferenceSession;function oe(g=null){if(!g)return D;switch(g){case"auto":return N;case"gpu":return N.filter(I=>["webgpu","cuda","dml","webnn-gpu"].includes(I))}if(N.includes(g))return[z[g]??g];throw new Error(`Unsupported device: "${g}". Should be one of: ${N.join(", ")}.`)}let be=null;async function Ie(g,I,e){be&&await be;const u=J.create(g,I);be??(be=u);const B=await u;return B.config=e,B}function ee(g){return g instanceof R.Tensor}const re=R==null?void 0:R.env;re!=null&&re.wasm&&(re.wasm.wasmPaths=`https://cdn.jsdelivr.net/npm/@huggingface/transformers@${F.env.version}/dist/`,re.wasm.proxy=!1,(typeof crossOriginIsolated>"u"||!crossOriginIsolated)&&(re.wasm.numThreads=1)),re!=null&&re.webgpu&&(re.webgpu.powerPreference="high-performance");function ce(){var g;return(g=re==null?void 0:re.wasm)==null?void 0:g.proxy}F.env.backends.onnx=re},"./src/base/feature_extraction_utils.js":(T,k,A)=>{A.r(k),A.d(k,{FeatureExtractor:()=>U,validate_audio_inputs:()=>H});var w=A("./src/utils/constants.js"),F=A("./src/utils/generic.js"),Y=A("./src/utils/hub.js");class U extends F.Callable{constructor(N){super(),this.config=N}static async from_pretrained(N,D){const R=await(0,Y.getModelJSON)(N,w.FEATURE_EXTRACTOR_NAME,!0,D);return new this(R)}}function H(z,N){var D;if(!(z instanceof Float32Array||z instanceof Float64Array))throw new Error(`${N} expects input to be a Float32Array or a Float64Array, but got ${((D=z==null?void 0:z.constructor)==null?void 0:D.name)??typeof z} instead. If using the feature extractor directly, remember to use \`read_audio(url, sampling_rate)\` to obtain the raw audio data of the file/url.`)}},"./src/base/image_processors_utils.js":(T,k,A)=>{A.r(k),A.d(k,{ImageProcessor:()=>g,center_to_corners_format:()=>R,post_process_instance_segmentation:()=>ce,post_process_object_detection:()=>Q,post_process_panoptic_segmentation:()=>re,post_process_semantic_segmentation:()=>J});var w=A("./src/utils/generic.js"),F=A("./src/utils/tensor.js"),Y=A("./src/utils/maths.js");A("./src/utils/image.js");var U=A("./src/utils/core.js"),H=A("./src/utils/hub.js"),z=A("./src/utils/constants.js");function N(I,e,u=0,B=null){const ue=I/e;let G=(0,Y.bankers_round)(ue)*e;return B!==null&&G>B&&(G=Math.floor(ue)*e),G<u&&(G=Math.ceil(ue)*e),G}function D([I,e],u){return[Math.max(Math.floor(I/u),1)*u,Math.max(Math.floor(e/u),1)*u]}function R([I,e,u,B]){return[I-u/2,e-B/2,I+u/2,e+B/2]}function Q(I,e=.5,u=null,B=!1){const ue=I.logits,G=I.pred_boxes,[K,Ve,ve]=ue.dims;if(u!==null&&u.length!==K)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let Re=[];for(let Ke=0;Ke<K;++Ke){let nt=u!==null?u[Ke]:null,Ct={boxes:[],classes:[],scores:[]},ht=ue[Ke],et=G[Ke];for(let ze=0;ze<Ve;++ze){let Se=ht[ze],xe=[],Me;if(B){Me=Se.sigmoid().data;for(let ft=0;ft<Me.length;++ft)Me[ft]>e&&xe.push(ft)}else{let ft=(0,Y.max)(Se.data)[1];if(ft===ve-1||(Me=(0,Y.softmax)(Se.data),Me[ft]<e))continue;xe.push(ft)}for(const ft of xe){let gt=et[ze].data;gt=R(gt),nt!==null&&(gt=gt.map((_t,Je)=>_t*nt[(Je+1)%2])),Ct.boxes.push(gt),Ct.classes.push(ft),Ct.scores.push(Me[ft])}}Re.push(Ct)}return Re}function J(I,e=null){const u=I.logits,B=u.dims[0];if(e!==null&&e.length!==B)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");const ue=[];for(let G=0;G<B;++G){const K=e!==null?e[G]:null;let Ve=u[G];K!==null&&(Ve=(0,F.interpolate)(Ve,K,"bilinear",!1));const[ve,Re]=K??Ve.dims.slice(-2),Ke=new F.Tensor("int32",new Int32Array(ve*Re),[ve,Re]),nt=Ve[0].data,Ct=Ke.data;for(let ze=1;ze<Ve.dims[0];++ze){const Se=Ve[ze].data;for(let xe=0;xe<Se.length;++xe)Se[xe]>nt[xe]&&(nt[xe]=Se[xe],Ct[xe]=ze)}const ht=new Array(Ve.dims[0]);for(let ze=0;ze<Ct.length;++ze){const Se=Ct[ze];ht[Se]=Se}const et=ht.filter(ze=>ze!==void 0);ue.push({segmentation:Ke,labels:et})}return ue}function oe(I,e,u,B){const ue=[],G=[],K=[];for(let Ve=0;Ve<I.dims[0];++Ve){const ve=I[Ve],Re=e[Ve],Ke=(0,Y.max)(ve.data)[1];if(Ke===B)continue;const Ct=(0,Y.softmax)(ve.data)[Ke];Ct>u&&(ue.push(Re),G.push(Ct),K.push(Ke))}return[ue,G,K]}function be(I,e,u,B=.5,ue=.8){const G=[];let K=0,Ve=0;const ve=e[u].data;for(let Ke=0;Ke<I.length;++Ke)I[Ke]===u&&(G.push(Ke),++K),ve[Ke]>=B&&++Ve;let Re=K>0&&Ve>0;return Re&&(Re=K/Ve>ue),[Re,G]}function Ie(I,e,u,B,ue,G=null,K=null){const[Ve,ve]=K??I[0].dims,Re=new F.Tensor("int32",new Int32Array(Ve*ve),[Ve,ve]),Ke=[];if(K!==null)for(let ze=0;ze<I.length;++ze)I[ze]=(0,F.interpolate)(I[ze],K,"bilinear",!1);const nt=new Int32Array(I[0].data.length),Ct=new Float32Array(I[0].data.length);for(let ze=0;ze<I.length;++ze){let Se=e[ze];const xe=I[ze].data;for(let Me=0;Me<xe.length;++Me)xe[Me]*=Se,xe[Me]>Ct[Me]&&(nt[Me]=ze,Ct[Me]=xe[Me])}let ht=0;const et=Re.data;for(let ze=0;ze<u.length;++ze){const Se=u[ze],[xe,Me]=be(nt,I,ze,B,ue);if(xe){++ht;for(const ft of Me)et[ft]=ht;Ke.push({id:ht,label_id:Se,score:e[ze]})}}return[Re,Ke]}function ee(I,e,u=28,B=3136,ue=1003520){if(I<u||e<u)throw new Error(`height:${I} or width:${e} must be larger than factor:${u}`);if(Math.max(I,e)/Math.min(I,e)>200)throw new Error(`absolute aspect ratio must be smaller than 200, got ${Math.max(I,e)/Math.min(I,e)}`);let G=Math.round(I/u)*u,K=Math.round(e/u)*u;if(G*K>ue){const Ve=Math.sqrt(I*e/ue);G=Math.floor(I/Ve/u)*u,K=Math.floor(e/Ve/u)*u}else if(G*K<B){const Ve=Math.sqrt(B/(I*e));G=Math.ceil(I*Ve/u)*u,K=Math.ceil(e*Ve/u)*u}return[G,K]}function re(I,e=.5,u=.5,B=.8,ue=null,G=null){ue===null&&(console.warn("`label_ids_to_fuse` unset. No instance will be fused."),ue=new Set);const K=I.class_queries_logits??I.logits,ve=(I.masks_queries_logits??I.pred_masks).sigmoid();let[Re,Ke,nt]=K.dims;if(nt-=1,G!==null&&G.length!==Re)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let Ct=[];for(let ht=0;ht<Re;++ht){let et=G!==null?G[ht]:null,ze=K[ht],Se=ve[ht],[xe,Me,ft]=oe(ze,Se,e,nt);if(ft.length===0){let[Je,bt]=et??Se.dims.slice(-2),rt=new F.Tensor("int32",new Int32Array(Je*bt).fill(-1),[Je,bt]);Ct.push({segmentation:rt,segments_info:[]});continue}let[gt,_t]=Ie(xe,Me,ft,u,B,ue,et);Ct.push({segmentation:gt,segments_info:_t})}return Ct}function ce(I,e=.5,u=null){throw new Error("`post_process_instance_segmentation` is not yet implemented.")}class g extends w.Callable{constructor(e){super(),this.image_mean=e.image_mean??e.mean,this.image_std=e.image_std??e.std,this.resample=e.resample??2,this.do_rescale=e.do_rescale??!0,this.rescale_factor=e.rescale_factor??.00392156862745098,this.do_normalize=e.do_normalize,this.do_thumbnail=e.do_thumbnail,this.size=e.size??e.image_size,this.do_resize=e.do_resize??this.size!==void 0,this.size_divisibility=e.size_divisibility??e.size_divisor,this.do_center_crop=e.do_center_crop,this.crop_size=e.crop_size,this.do_convert_rgb=e.do_convert_rgb??!0,this.do_crop_margin=e.do_crop_margin,this.pad_size=e.pad_size,this.do_pad=e.do_pad,this.do_pad&&!this.pad_size&&this.size&&this.size.width!==void 0&&this.size.height!==void 0&&(this.pad_size=this.size),this.do_flip_channel_order=e.do_flip_channel_order??!1,this.config=e}async thumbnail(e,u,B=2){const ue=e.height,G=e.width,K=u.height,Ve=u.width;let ve=Math.min(ue,K),Re=Math.min(G,Ve);return ve===ue&&Re===G?e:(ue>G?Re=Math.floor(G*ve/ue):G>ue&&(ve=Math.floor(ue*Re/G)),await e.resize(Re,ve,{resample:B}))}async crop_margin(e,u=200){const B=e.clone().grayscale(),ue=(0,Y.min)(B.data)[0],K=(0,Y.max)(B.data)[0]-ue;if(K===0)return e;const Ve=u/255;let ve=B.width,Re=B.height,Ke=0,nt=0;const Ct=B.data;for(let ht=0;ht<B.height;++ht){const et=ht*B.width;for(let ze=0;ze<B.width;++ze)(Ct[et+ze]-ue)/K<Ve&&(ve=Math.min(ve,ze),Re=Math.min(Re,ht),Ke=Math.max(Ke,ze),nt=Math.max(nt,ht))}return e=await e.crop([ve,Re,Ke,nt]),e}pad_image(e,u,B,{mode:ue="constant",center:G=!1,constant_values:K=0}={}){const[Ve,ve,Re]=u;let Ke,nt;if(typeof B=="number"?(Ke=B,nt=B):B==="square"?Ke=nt=Math.max(Ve,ve):(Ke=B.width,nt=B.height),Ke!==ve||nt!==Ve){const Ct=new Float32Array(Ke*nt*Re);if(Array.isArray(K))for(let ze=0;ze<Ct.length;++ze)Ct[ze]=K[ze%Re];else K!==0&&Ct.fill(K);const[ht,et]=G?[Math.floor((Ke-ve)/2),Math.floor((nt-Ve)/2)]:[0,0];for(let ze=0;ze<Ve;++ze){const Se=(ze+et)*Ke,xe=ze*ve;for(let Me=0;Me<ve;++Me){const ft=(Se+Me+ht)*Re,gt=(xe+Me)*Re;for(let _t=0;_t<Re;++_t)Ct[ft+_t]=e[gt+_t]}}if(ue==="symmetric"){if(G)throw new Error("`center` padding is not supported when `mode` is set to `symmetric`.");const ze=Ve-1,Se=ve-1;for(let xe=0;xe<nt;++xe){const Me=xe*Ke,ft=(0,U.calculateReflectOffset)(xe,ze)*ve;for(let gt=0;gt<Ke;++gt){if(xe<Ve&&gt<ve)continue;const _t=(Me+gt)*Re,Je=(ft+(0,U.calculateReflectOffset)(gt,Se))*Re;for(let bt=0;bt<Re;++bt)Ct[_t+bt]=e[Je+bt]}}}e=Ct,u=[nt,Ke,Re]}return[e,u]}rescale(e){for(let u=0;u<e.length;++u)e[u]=this.rescale_factor*e[u]}get_resize_output_image_size(e,u){const[B,ue]=e.size;let G,K;if(this.do_thumbnail){const{height:Ve,width:ve}=u;G=Math.min(Ve,ve)}else Number.isInteger(u)?(G=u,K=this.config.max_size??G):u!==void 0&&(G=u.shortest_edge,K=u.longest_edge);if(G!==void 0||K!==void 0){const Ve=G===void 0?1:Math.max(G/B,G/ue),ve=B*Ve,Re=ue*Ve,Ke=K===void 0?1:Math.min(K/ve,K/Re);let nt=Math.floor(Number((ve*Ke).toFixed(2))),Ct=Math.floor(Number((Re*Ke).toFixed(2)));return this.size_divisibility!==void 0&&([nt,Ct]=D([nt,Ct],this.size_divisibility)),[nt,Ct]}else if(u!==void 0&&u.width!==void 0&&u.height!==void 0){let Ve=u.width,ve=u.height;if(this.config.keep_aspect_ratio&&this.config.ensure_multiple_of){let Re=ve/ue,Ke=Ve/B;Math.abs(1-Ke)<Math.abs(1-Re)?Re=Ke:Ke=Re,ve=N(Re*ue,this.config.ensure_multiple_of),Ve=N(Ke*B,this.config.ensure_multiple_of)}return[Ve,ve]}else{if(this.size_divisibility!==void 0)return D([B,ue],this.size_divisibility);if(u.min_pixels!==void 0&&u.max_pixels!==void 0){const{min_pixels:Ve,max_pixels:ve}=u,Re=this.config.patch_size*this.config.merge_size;return ee(ue,B,Re,Ve,ve)}else throw new Error(`Could not resize image due to unsupported \`this.size\` option in config: ${JSON.stringify(u)}`)}}async resize(e){const[u,B]=this.get_resize_output_image_size(e,this.size);return await e.resize(u,B,{resample:this.resample})}async preprocess(e,{do_normalize:u=null,do_pad:B=null,do_convert_rgb:ue=null,do_convert_grayscale:G=null,do_flip_channel_order:K=null}={}){this.do_crop_margin&&(e=await this.crop_margin(e));const[Ve,ve]=e.size;if(ue??this.do_convert_rgb?e=e.rgb():G&&(e=e.grayscale()),this.do_resize&&(e=await this.resize(e)),this.do_thumbnail&&(e=await this.thumbnail(e,this.size,this.resample)),this.do_center_crop){let ht,et;Number.isInteger(this.crop_size)?(ht=this.crop_size,et=this.crop_size):(ht=this.crop_size.width,et=this.crop_size.height),e=await e.center_crop(ht,et)}const Re=[e.height,e.width];let Ke=Float32Array.from(e.data),nt=[e.height,e.width,e.channels];if(this.do_rescale&&this.rescale(Ke),u??this.do_normalize){let ht=this.image_mean;Array.isArray(this.image_mean)||(ht=new Array(e.channels).fill(ht));let et=this.image_std;if(Array.isArray(this.image_std)||(et=new Array(e.channels).fill(ht)),ht.length!==e.channels||et.length!==e.channels)throw new Error(`When set to arrays, the length of \`image_mean\` (${ht.length}) and \`image_std\` (${et.length}) must match the number of channels in the image (${e.channels}).`);for(let ze=0;ze<Ke.length;ze+=e.channels)for(let Se=0;Se<e.channels;++Se)Ke[ze+Se]=(Ke[ze+Se]-ht[Se])/et[Se]}if(B??this.do_pad){if(this.pad_size)[Ke,nt]=this.pad_image(Ke,[e.height,e.width,e.channels],this.pad_size);else if(this.size_divisibility){const[ht,et]=D([nt[1],nt[0]],this.size_divisibility);[Ke,nt]=this.pad_image(Ke,nt,{width:ht,height:et})}}if(K??this.do_flip_channel_order){if(nt[2]!==3)throw new Error("Flipping channel order is only supported for RGB images.");for(let ht=0;ht<Ke.length;ht+=3){const et=Ke[ht];Ke[ht]=Ke[ht+2],Ke[ht+2]=et}}const Ct=new F.Tensor("float32",Ke,nt).permute(2,0,1);return{original_size:[ve,Ve],reshaped_input_size:Re,pixel_values:Ct}}async _call(e,...u){Array.isArray(e)||(e=[e]);const B=await Promise.all(e.map(G=>this.preprocess(G)));return{pixel_values:(0,F.stack)(B.map(G=>G.pixel_values),0),original_sizes:B.map(G=>G.original_size),reshaped_input_sizes:B.map(G=>G.reshaped_input_size)}}static async from_pretrained(e,u){const B=await(0,H.getModelJSON)(e,z.IMAGE_PROCESSOR_NAME,!0,u);return new this(B)}}},"./src/base/processing_utils.js":(T,k,A)=>{A.r(k),A.d(k,{Processor:()=>U});var w=A("./src/utils/constants.js"),F=A("./src/utils/generic.js"),Y=A("./src/utils/hub.js");class U extends F.Callable{constructor(z,N){super(),this.config=z,this.components=N}get image_processor(){return this.components.image_processor}get tokenizer(){return this.components.tokenizer}get feature_extractor(){return this.components.feature_extractor}apply_chat_template(z,N={}){if(!this.tokenizer)throw new Error("Unable to apply chat template without a tokenizer.");return this.tokenizer.apply_chat_template(z,{tokenize:!1,...N})}batch_decode(...z){if(!this.tokenizer)throw new Error("Unable to decode without a tokenizer.");return this.tokenizer.batch_decode(...z)}decode(...z){if(!this.tokenizer)throw new Error("Unable to decode without a tokenizer.");return this.tokenizer.decode(...z)}async _call(z,...N){for(const D of[this.image_processor,this.feature_extractor,this.tokenizer])if(D)return D(z,...N);throw new Error("No image processor, feature extractor, or tokenizer found.")}static async from_pretrained(z,N){const[D,R]=await Promise.all([this.uses_processor_config?(0,Y.getModelJSON)(z,w.PROCESSOR_NAME,!0,N):{},Promise.all(this.classes.filter(Q=>Q in this).map(async Q=>{const J=await this[Q].from_pretrained(z,N);return[Q.replace(/_class$/,""),J]})).then(Object.fromEntries)]);return new this(D,R)}}We(U,"classes",["image_processor_class","tokenizer_class","feature_extractor_class"]),We(U,"uses_processor_config",!1)},"./src/configs.js":(T,k,A)=>{A.r(k),A.d(k,{AutoConfig:()=>N,PretrainedConfig:()=>z,getKeyValueShapes:()=>H});var w=A("./src/utils/core.js"),F=A("./src/utils/hub.js");async function Y(D,R){return await(0,F.getModelJSON)(D,"config.json",!0,R)}function U(D){const R={};let Q={};switch(D.model_type){case"llava":case"paligemma":case"florence2":case"llava_onevision":case"idefics3":Q=U(D.text_config);break;case"moondream1":Q=U(D.phi_config);break;case"musicgen":Q=U(D.decoder);break;case"multi_modality":Q=U(D.language_config);break;case"gpt2":case"gptj":case"jais":case"codegen":case"gpt_bigcode":R.num_heads="n_head",R.num_layers="n_layer",R.hidden_size="n_embd";break;case"gpt_neox":case"stablelm":case"opt":case"falcon":R.num_heads="num_attention_heads",R.num_layers="num_hidden_layers",R.hidden_size="hidden_size";break;case"llama":case"olmo":case"olmo2":case"mobilellm":case"granite":case"cohere":case"mistral":case"starcoder2":case"qwen2":case"qwen2_vl":case"phi":case"phi3":case"phi3_v":R.num_heads="num_key_value_heads",R.num_layers="num_hidden_layers",R.hidden_size="hidden_size",R.num_attention_heads="num_attention_heads";break;case"gemma":case"gemma2":case"glm":case"helium":R.num_heads="num_key_value_heads",R.num_layers="num_hidden_layers",R.dim_kv="head_dim";break;case"openelm":R.num_heads="num_kv_heads",R.num_layers="num_transformer_layers",R.dim_kv="head_dim";break;case"gpt_neo":case"donut-swin":R.num_heads="num_heads",R.num_layers="num_layers",R.hidden_size="hidden_size";break;case"bloom":R.num_heads="n_head",R.num_layers="n_layer",R.hidden_size="hidden_size";break;case"mpt":R.num_heads="n_heads",R.num_layers="n_layers",R.hidden_size="d_model";break;case"exaone":R.num_heads="num_key_value_heads",R.num_layers="num_layers",R.dim_kv="head_dim",R.num_attention_heads="num_attention_heads";break;case"t5":case"mt5":case"longt5":R.num_decoder_layers="num_decoder_layers",R.num_decoder_heads="num_heads",R.decoder_dim_kv="d_kv",R.num_encoder_layers="num_layers",R.num_encoder_heads="num_heads",R.encoder_dim_kv="d_kv";break;case"bart":case"mbart":case"marian":case"whisper":case"m2m_100":case"blenderbot":case"blenderbot-small":case"florence2_language":R.num_decoder_layers="decoder_layers",R.num_decoder_heads="decoder_attention_heads",R.decoder_hidden_size="d_model",R.num_encoder_layers="encoder_layers",R.num_encoder_heads="encoder_attention_heads",R.encoder_hidden_size="d_model";break;case"speecht5":R.num_decoder_layers="decoder_layers",R.num_decoder_heads="decoder_attention_heads",R.decoder_hidden_size="hidden_size",R.num_encoder_layers="encoder_layers",R.num_encoder_heads="encoder_attention_heads",R.encoder_hidden_size="hidden_size";break;case"trocr":R.num_encoder_layers=R.num_decoder_layers="decoder_layers",R.num_encoder_heads=R.num_decoder_heads="decoder_attention_heads",R.encoder_hidden_size=R.decoder_hidden_size="d_model";break;case"musicgen_decoder":R.num_encoder_layers=R.num_decoder_layers="num_hidden_layers",R.num_encoder_heads=R.num_decoder_heads="num_attention_heads",R.encoder_hidden_size=R.decoder_hidden_size="hidden_size";break;case"moonshine":R.num_decoder_layers="decoder_num_hidden_layers",R.num_decoder_heads="decoder_num_key_value_heads",R.num_encoder_layers="encoder_num_hidden_layers",R.num_encoder_heads="encoder_num_key_value_heads",R.encoder_hidden_size=R.decoder_hidden_size="hidden_size";break;case"vision-encoder-decoder":const oe=U(D.decoder),be="num_decoder_layers"in oe,Ie=(0,w.pick)(D,["model_type","is_encoder_decoder"]);return be?(Ie.num_decoder_layers=oe.num_decoder_layers,Ie.num_decoder_heads=oe.num_decoder_heads,Ie.decoder_hidden_size=oe.decoder_hidden_size,Ie.num_encoder_layers=oe.num_encoder_layers,Ie.num_encoder_heads=oe.num_encoder_heads,Ie.encoder_hidden_size=oe.encoder_hidden_size):(Ie.num_layers=oe.num_layers,Ie.num_heads=oe.num_heads,Ie.hidden_size=oe.hidden_size),Ie}const J={...Q,...(0,w.pick)(D,["model_type","multi_query","is_encoder_decoder"])};for(const oe in R)J[oe]=D[R[oe]];return J}function H(D,{prefix:R="past_key_values",batch_size:Q=1}={}){const J={},oe=D.normalized_config;if(oe.is_encoder_decoder&&"num_encoder_heads"in oe&&"num_decoder_heads"in oe){const be=oe.encoder_dim_kv??oe.encoder_hidden_size/oe.num_encoder_heads,Ie=oe.decoder_dim_kv??oe.decoder_hidden_size/oe.num_decoder_heads,ee=[Q,oe.num_encoder_heads,0,be],re=[Q,oe.num_decoder_heads,0,Ie];for(let ce=0;ce<oe.num_decoder_layers;++ce)J[`${R}.${ce}.encoder.key`]=ee,J[`${R}.${ce}.encoder.value`]=ee,J[`${R}.${ce}.decoder.key`]=re,J[`${R}.${ce}.decoder.value`]=re}else{const be=oe.num_heads,Ie=oe.num_layers,ee=oe.dim_kv??oe.hidden_size/(oe.num_attention_heads??be);if(oe.model_type==="falcon"){const re=[Q*be,0,ee];for(let ce=0;ce<Ie;++ce)J[`${R}.${ce}.key`]=re,J[`${R}.${ce}.value`]=re}else if(oe.multi_query){const re=[Q*be,0,2*ee];for(let ce=0;ce<Ie;++ce)J[`${R}.${ce}.key_value`]=re}else if(oe.model_type==="bloom"){const re=[Q*be,ee,0],ce=[Q*be,0,ee];for(let g=0;g<Ie;++g)J[`${R}.${g}.key`]=re,J[`${R}.${g}.value`]=ce}else if(oe.model_type==="openelm")for(let re=0;re<Ie;++re){const ce=[Q,be[re],0,ee];J[`${R}.${re}.key`]=ce,J[`${R}.${re}.value`]=ce}else{const re=[Q,be,0,ee];for(let ce=0;ce<Ie;++ce)J[`${R}.${ce}.key`]=re,J[`${R}.${ce}.value`]=re}}return J}class z{constructor(R){We(this,"model_type",null);We(this,"is_encoder_decoder",!1);We(this,"max_position_embeddings");We(this,"transformers.js_config");Object.assign(this,R),this.normalized_config=U(this)}static async from_pretrained(R,{progress_callback:Q=null,config:J=null,cache_dir:oe=null,local_files_only:be=!1,revision:Ie="main"}={}){J&&!(J instanceof z)&&(J=new z(J));const ee=J??await Y(R,{progress_callback:Q,config:J,cache_dir:oe,local_files_only:be,revision:Ie});return new this(ee)}}class N{static async from_pretrained(...R){return z.from_pretrained(...R)}}},"./src/env.js":(T,k,A)=>{var B,ue;A.r(k),A.d(k,{apis:()=>Ie,env:()=>e});var w=A("?569f"),F=A("?3f59"),Y=A("?154a");const U="3.3.3",H=typeof window<"u"&&typeof window.document<"u",z=typeof self<"u"&&((B=self.constructor)==null?void 0:B.name)==="DedicatedWorkerGlobalScope",N=typeof self<"u"&&"caches"in self,D=typeof navigator<"u"&&"gpu"in navigator,R=typeof navigator<"u"&&"ml"in navigator,Q=typeof process<"u",J=Q&&((ue=process==null?void 0:process.release)==null?void 0:ue.name)==="node",oe=!u(w),be=!u(F),Ie=Object.freeze({IS_BROWSER_ENV:H,IS_WEBWORKER_ENV:z,IS_WEB_CACHE_AVAILABLE:N,IS_WEBGPU_AVAILABLE:D,IS_WEBNN_AVAILABLE:R,IS_PROCESS_AVAILABLE:Q,IS_NODE_ENV:J,IS_FS_AVAILABLE:oe,IS_PATH_AVAILABLE:be}),ee=oe&&be;let re="./";if(ee){const G=Object(import.meta).url;G?re=F.dirname(F.dirname(Y.fileURLToPath(G))):typeof __dirname<"u"&&(re=F.dirname(__dirname))}const ce=ee?F.join(re,"/.cache/"):null,g="/models/",I=ee?F.join(re,g):g,e={version:U,backends:{onnx:{}},allowRemoteModels:!0,remoteHost:"https://huggingface.co/",remotePathTemplate:"{model}/resolve/{revision}/",allowLocalModels:!(H||z),localModelPath:I,useFS:oe,useBrowserCache:N,useFSCache:oe,cacheDir:ce,useCustomCache:!1,customCache:null};function u(G){return Object.keys(G).length===0}},"./src/generation/configuration_utils.js":(T,k,A)=>{A.r(k),A.d(k,{GenerationConfig:()=>F});var w=A("./src/utils/core.js");class F{constructor(U){We(this,"max_length",20);We(this,"max_new_tokens",null);We(this,"min_length",0);We(this,"min_new_tokens",null);We(this,"early_stopping",!1);We(this,"max_time",null);We(this,"do_sample",!1);We(this,"num_beams",1);We(this,"num_beam_groups",1);We(this,"penalty_alpha",null);We(this,"use_cache",!0);We(this,"temperature",1);We(this,"top_k",50);We(this,"top_p",1);We(this,"typical_p",1);We(this,"epsilon_cutoff",0);We(this,"eta_cutoff",0);We(this,"diversity_penalty",0);We(this,"repetition_penalty",1);We(this,"encoder_repetition_penalty",1);We(this,"length_penalty",1);We(this,"no_repeat_ngram_size",0);We(this,"bad_words_ids",null);We(this,"force_words_ids",null);We(this,"renormalize_logits",!1);We(this,"constraints",null);We(this,"forced_bos_token_id",null);We(this,"forced_eos_token_id",null);We(this,"remove_invalid_values",!1);We(this,"exponential_decay_length_penalty",null);We(this,"suppress_tokens",null);We(this,"streamer",null);We(this,"begin_suppress_tokens",null);We(this,"forced_decoder_ids",null);We(this,"guidance_scale",null);We(this,"num_return_sequences",1);We(this,"output_attentions",!1);We(this,"output_hidden_states",!1);We(this,"output_scores",!1);We(this,"return_dict_in_generate",!1);We(this,"pad_token_id",null);We(this,"bos_token_id",null);We(this,"eos_token_id",null);We(this,"encoder_no_repeat_ngram_size",0);We(this,"decoder_start_token_id",null);We(this,"generation_kwargs",{});Object.assign(this,(0,w.pick)(U,Object.getOwnPropertyNames(this)))}}},"./src/generation/logits_process.js":(T,k,A)=>{A.r(k),A.d(k,{ClassifierFreeGuidanceLogitsProcessor:()=>ee,ForcedBOSTokenLogitsProcessor:()=>z,ForcedEOSTokenLogitsProcessor:()=>N,LogitsProcessor:()=>Y,LogitsProcessorList:()=>H,LogitsWarper:()=>U,MinLengthLogitsProcessor:()=>oe,MinNewTokensLengthLogitsProcessor:()=>be,NoBadWordsLogitsProcessor:()=>Ie,NoRepeatNGramLogitsProcessor:()=>Q,RepetitionPenaltyLogitsProcessor:()=>J,SuppressTokensAtBeginLogitsProcessor:()=>D,TemperatureLogitsWarper:()=>re,TopKLogitsWarper:()=>g,TopPLogitsWarper:()=>ce,WhisperTimeStampLogitsProcessor:()=>R});var w=A("./src/utils/generic.js");A("./src/utils/tensor.js");var F=A("./src/utils/maths.js");class Y extends w.Callable{_call(e,u){throw Error("`_call` should be implemented in a subclass")}}class U extends w.Callable{_call(e,u){throw Error("`_call` should be implemented in a subclass")}}class H extends w.Callable{constructor(){super(),this.processors=[]}push(e){this.processors.push(e)}extend(e){this.processors.push(...e)}_call(e,u){let B=u;for(const ue of this.processors)B=ue(e,B);return B}[Symbol.iterator](){return this.processors.values()}}class z extends Y{constructor(e){super(),this.bos_token_id=e}_call(e,u){for(let B=0;B<e.length;++B)if(e[B].length===1){const ue=u[B].data;ue.fill(-1/0),ue[this.bos_token_id]=0}return u}}class N extends Y{constructor(e,u){super(),this.max_length=e,this.eos_token_id=Array.isArray(u)?u:[u]}_call(e,u){for(let B=0;B<e.length;++B)if(e[B].length===this.max_length-1){const ue=u[B].data;ue.fill(-1/0);for(const G of this.eos_token_id)ue[G]=0}return u}}class D extends Y{constructor(e,u){super(),this.begin_suppress_tokens=e,this.begin_index=u}_call(e,u){for(let B=0;B<e.length;++B)if(e[B].length===this.begin_index){const ue=u[B].data;for(const G of this.begin_suppress_tokens)ue[G]=-1/0}return u}}class R extends Y{constructor(e,u){super(),this.eos_token_id=Array.isArray(e.eos_token_id)?e.eos_token_id[0]:e.eos_token_id,this.no_timestamps_token_id=e.no_timestamps_token_id,this.timestamp_begin=this.no_timestamps_token_id+1,this.begin_index=u.length,u.at(-1)===this.no_timestamps_token_id&&(this.begin_index-=1),this.max_initial_timestamp_index=e.max_initial_timestamp_index}_call(e,u){for(let B=0;B<e.length;++B){const ue=u[B].data;if(ue[this.no_timestamps_token_id]=-1/0,e[B].length===this.begin_index-1){ue.fill(-1/0),ue[this.timestamp_begin]=0;continue}const G=e[B].slice(this.begin_index),K=G.length>=1&&G[G.length-1]>=this.timestamp_begin,Ve=G.length<2||G[G.length-2]>=this.timestamp_begin;if(K&&(Ve?ue.subarray(this.timestamp_begin).fill(-1/0):ue.subarray(0,this.eos_token_id).fill(-1/0)),e[B].length===this.begin_index&&this.max_initial_timestamp_index!==null){const nt=this.timestamp_begin+this.max_initial_timestamp_index;ue.subarray(nt+1).fill(-1/0)}const ve=(0,F.log_softmax)(ue),Re=Math.log(ve.subarray(this.timestamp_begin).map(Math.exp).reduce((nt,Ct)=>nt+Ct)),Ke=(0,F.max)(ve.subarray(0,this.timestamp_begin))[0];Re>Ke&&ue.subarray(0,this.timestamp_begin).fill(-1/0)}return u}}class Q extends Y{constructor(e){super(),this.no_repeat_ngram_size=e}getNgrams(e){const u=e.length,B=[];for(let G=0;G<u+1-this.no_repeat_ngram_size;++G){const K=[];for(let Ve=0;Ve<this.no_repeat_ngram_size;++Ve)K.push(e[G+Ve]);B.push(K.map(Number))}const ue=new Map;for(const G of B){const K=G.slice(0,G.length-1),Ve=JSON.stringify(K),ve=ue.get(Ve)??[];ve.push(G[G.length-1]),ue.set(Ve,ve)}return ue}getGeneratedNgrams(e,u){const B=u.slice(u.length+1-this.no_repeat_ngram_size,u.length);return e.get(JSON.stringify(B.map(Number)))??[]}calcBannedNgramTokens(e){const u=[];if(e.length+1<this.no_repeat_ngram_size)return u;{const B=this.getNgrams(e);return this.getGeneratedNgrams(B,e)}}_call(e,u){for(let B=0;B<e.length;++B){const ue=u[B].data,G=this.calcBannedNgramTokens(e[B]);for(const K of G)ue[K]=-1/0}return u}}class J extends Y{constructor(e){super(),this.penalty=e}_call(e,u){for(let B=0;B<e.length;++B){const ue=u[B].data;for(const G of new Set(e[B])){const K=Number(G);ue[K]<0?ue[K]*=this.penalty:ue[K]/=this.penalty}}return u}}class oe extends Y{constructor(e,u){super(),this.min_length=e,this.eos_token_id=Array.isArray(u)?u:[u]}_call(e,u){for(let B=0;B<e.length;++B)if(e[B].length<this.min_length){const ue=u[B].data;for(const G of this.eos_token_id)ue[G]=-1/0}return u}}class be extends Y{constructor(e,u,B){super(),this.prompt_length_to_skip=e,this.min_new_tokens=u,this.eos_token_id=Array.isArray(B)?B:[B]}_call(e,u){for(let B=0;B<e.length;++B)if(e[B].length-this.prompt_length_to_skip<this.min_new_tokens){const G=u[B].data;for(const K of this.eos_token_id)G[K]=-1/0}return u}}class Ie extends Y{constructor(e,u){super(),this.bad_words_ids=e,this.eos_token_id=Array.isArray(u)?u:[u]}_call(e,u){for(let B=0;B<e.length;++B){const ue=u[B].data,G=e[B];for(const K of this.bad_words_ids){let Ve=!0;for(let ve=1;ve<=K.length-1&&K.length<G.length;++ve)if(K.at(-ve-1)!=G.at(-ve)){Ve=!1;break}Ve&&(ue[K.at(-1)]=-1/0)}}return u}}class ee extends Y{constructor(e){if(super(),e<=1)throw new Error(`Require guidance scale >1 to use the classifier free guidance processor, got guidance scale ${e}.`);this.guidance_scale=e}_call(e,u){if(u.dims[0]!==2*e.length)throw new Error(`Logits should have twice the batch size of the input ids, the first half of batches corresponding to the conditional inputs, and the second half of batches corresponding to the unconditional inputs. Got batch size ${u.dims[0]} for the logits and ${e.length} for the input ids.`);const B=e.length,ue=u.slice([0,B],null),G=u.slice([B,u.dims[0]],null);for(let K=0;K<G.data.length;++K)G.data[K]+=(ue.data[K]-G.data[K])*this.guidance_scale;return G}}class re extends U{constructor(e){super(),this.temperature=e}_call(e,u){const B=u.data;for(let ue=0;ue<B.length;++ue)B[ue]/=this.temperature;return u}}class ce extends U{constructor(e,{filter_value:u=-1/0,min_tokens_to_keep:B=1}={}){if(super(),e<0||e>1)throw new Error(`\`top_p\` must be a float > 0 and < 1, but is ${e}`);if(!Number.isInteger(B)||B<1)throw new Error(`\`min_tokens_to_keep\` must be a positive integer, but is ${B}`);this.top_p=e,this.filter_value=u,this.min_tokens_to_keep=B}}class g extends U{constructor(e,{filter_value:u=-1/0,min_tokens_to_keep:B=1}={}){if(super(),!Number.isInteger(e)||e<0)throw new Error(`\`top_k\` must be a positive integer, but is ${e}`);this.top_k=Math.max(e,B),this.filter_value=u}}},"./src/generation/logits_sampler.js":(T,k,A)=>{A.r(k),A.d(k,{LogitsSampler:()=>U});var w=A("./src/utils/generic.js"),F=A("./src/utils/tensor.js"),Y=A("./src/utils/maths.js");A("./src/generation/configuration_utils.js");class U extends w.Callable{constructor(R){super(),this.generation_config=R}async _call(R){return this.sample(R)}async sample(R){throw Error("sample should be implemented in subclasses.")}getLogits(R,Q){let J=R.dims.at(-1),oe=R.data;if(Q===-1)oe=oe.slice(-J);else{let be=Q*J;oe=oe.slice(be,be+J)}return oe}randomSelect(R){let Q=0;for(let oe=0;oe<R.length;++oe)Q+=R[oe];let J=Math.random()*Q;for(let oe=0;oe<R.length;++oe)if(J-=R[oe],J<=0)return oe;return 0}static getSampler(R){if(R.do_sample)return new z(R);if(R.num_beams>1)return new N(R);if(R.num_return_sequences>1)throw Error(`num_return_sequences has to be 1 when doing greedy search, but is ${R.num_return_sequences}.`);return new H(R)}}class H extends U{async sample(R){const Q=(0,Y.max)(R.data)[1];return[[BigInt(Q),0]]}}class z extends U{async sample(R){let Q=R.dims.at(-1);this.generation_config.top_k>0&&(Q=Math.min(this.generation_config.top_k,Q));const[J,oe]=await(0,F.topk)(R,Q),be=(0,Y.softmax)(J.data);return Array.from({length:this.generation_config.num_beams},()=>{const Ie=this.randomSelect(be);return[oe.data[Ie],Math.log(be[Ie])]})}}class N extends U{async sample(R){let Q=R.dims.at(-1);this.generation_config.top_k>0&&(Q=Math.min(this.generation_config.top_k,Q));const[J,oe]=await(0,F.topk)(R,Q),be=(0,Y.softmax)(J.data);return Array.from({length:this.generation_config.num_beams},(Ie,ee)=>[oe.data[ee],Math.log(be[ee])])}}},"./src/generation/stopping_criteria.js":(T,k,A)=>{A.r(k),A.d(k,{EosTokenCriteria:()=>H,InterruptableStoppingCriteria:()=>z,MaxLengthCriteria:()=>U,StoppingCriteria:()=>F,StoppingCriteriaList:()=>Y});var w=A("./src/utils/generic.js");class F extends w.Callable{_call(D,R){throw Error("StoppingCriteria needs to be subclassed")}}class Y extends w.Callable{constructor(){super(),this.criteria=[]}push(D){this.criteria.push(D)}extend(D){D instanceof Y?D=D.criteria:D instanceof F&&(D=[D]),this.criteria.push(...D)}_call(D,R){const Q=new Array(D.length).fill(!1);for(const J of this.criteria){const oe=J(D,R);for(let be=0;be<Q.length;++be)Q[be]||(Q[be]=oe[be])}return Q}[Symbol.iterator](){return this.criteria.values()}}class U extends F{constructor(D,R=null){super(),this.max_length=D,this.max_position_embeddings=R}_call(D){return D.map(R=>R.length>=this.max_length)}}class H extends F{constructor(D){super(),Array.isArray(D)||(D=[D]),this.eos_token_id=D}_call(D,R){return D.map(Q=>{const J=Q.at(-1);return this.eos_token_id.some(oe=>J==oe)})}}class z extends F{constructor(){super(),this.interrupted=!1}interrupt(){this.interrupted=!0}reset(){this.interrupted=!1}_call(D,R){return new Array(D.length).fill(this.interrupted)}}},"./src/generation/streamers.js":(T,k,A)=>{A.r(k),A.d(k,{BaseStreamer:()=>U,TextStreamer:()=>z,WhisperTextStreamer:()=>N});var w=A("./src/utils/core.js"),F=A("./src/tokenizers.js"),Y=A("./src/env.js");class U{put(R){throw Error("Not implemented")}end(){throw Error("Not implemented")}}const H=Y.apis.IS_PROCESS_AVAILABLE?D=>process.stdout.write(D):D=>console.log(D);class z extends U{constructor(R,{skip_prompt:Q=!1,callback_function:J=null,token_callback_function:oe=null,skip_special_tokens:be=!0,decode_kwargs:Ie={},...ee}={}){super(),this.tokenizer=R,this.skip_prompt=Q,this.callback_function=J??H,this.token_callback_function=oe,this.decode_kwargs={skip_special_tokens:be,...Ie,...ee},this.token_cache=[],this.print_len=0,this.next_tokens_are_prompt=!0}put(R){var be;if(R.length>1)throw Error("TextStreamer only supports batch size of 1");if(this.skip_prompt&&this.next_tokens_are_prompt){this.next_tokens_are_prompt=!1;return}const Q=R[0];(be=this.token_callback_function)==null||be.call(this,Q),this.token_cache=(0,w.mergeArrays)(this.token_cache,Q);const J=this.tokenizer.decode(this.token_cache,this.decode_kwargs);let oe;J.endsWith(`
`)?(oe=J.slice(this.print_len),this.token_cache=[],this.print_len=0):J.length>0&&(0,F.is_chinese_char)(J.charCodeAt(J.length-1))?(oe=J.slice(this.print_len),this.print_len+=oe.length):(oe=J.slice(this.print_len,J.lastIndexOf(" ")+1),this.print_len+=oe.length),this.on_finalized_text(oe,!1)}end(){let R;this.token_cache.length>0?(R=this.tokenizer.decode(this.token_cache,this.decode_kwargs).slice(this.print_len),this.token_cache=[],this.print_len=0):R="",this.next_tokens_are_prompt=!0,this.on_finalized_text(R,!0)}on_finalized_text(R,Q){var J,oe;R.length>0&&((J=this.callback_function)==null||J.call(this,R)),Q&&this.callback_function===H&&Y.apis.IS_PROCESS_AVAILABLE&&((oe=this.callback_function)==null||oe.call(this,`
`))}}class N extends z{constructor(R,{skip_prompt:Q=!1,callback_function:J=null,token_callback_function:oe=null,on_chunk_start:be=null,on_chunk_end:Ie=null,on_finalize:ee=null,time_precision:re=.02,skip_special_tokens:ce=!0,decode_kwargs:g={}}={}){super(R,{skip_prompt:Q,skip_special_tokens:ce,callback_function:J,token_callback_function:oe,decode_kwargs:g}),this.timestamp_begin=R.timestamp_begin,this.on_chunk_start=be,this.on_chunk_end=Ie,this.on_finalize=ee,this.time_precision=re,this.waiting_for_timestamp=!1}put(R){var J,oe;if(R.length>1)throw Error("WhisperTextStreamer only supports batch size of 1");const Q=R[0];if(Q.length===1){const be=Number(Q[0])-this.timestamp_begin;if(be>=0){const Ie=be*this.time_precision;this.waiting_for_timestamp?(J=this.on_chunk_end)==null||J.call(this,Ie):(oe=this.on_chunk_start)==null||oe.call(this,Ie),this.waiting_for_timestamp=!this.waiting_for_timestamp,R=[[]]}}return super.put(R)}end(){var R;super.end(),(R=this.on_finalize)==null||R.call(this)}}},"./src/models.js":(T,k,A)=>{A.r(k),A.d(k,{ASTForAudioClassification:()=>Eo,ASTModel:()=>ZA,ASTPreTrainedModel:()=>ws,AlbertForMaskedLM:()=>wt,AlbertForQuestionAnswering:()=>ut,AlbertForSequenceClassification:()=>Qe,AlbertModel:()=>qt,AlbertPreTrainedModel:()=>Gn,AutoModel:()=>N0,AutoModelForAudioClassification:()=>V0,AutoModelForAudioFrameClassification:()=>W0,AutoModelForCTC:()=>Wu,AutoModelForCausalLM:()=>ju,AutoModelForDepthEstimation:()=>Yu,AutoModelForDocumentQuestionAnswering:()=>td,AutoModelForImageClassification:()=>ou,AutoModelForImageFeatureExtraction:()=>CA,AutoModelForImageMatting:()=>Hu,AutoModelForImageSegmentation:()=>j0,AutoModelForImageToImage:()=>U0,AutoModelForMaskGeneration:()=>Vo,AutoModelForMaskedLM:()=>Is,AutoModelForNormalEstimation:()=>rd,AutoModelForObjectDetection:()=>Ps,AutoModelForPoseEstimation:()=>Ku,AutoModelForQuestionAnswering:()=>iu,AutoModelForSemanticSegmentation:()=>Vu,AutoModelForSeq2SeqLM:()=>L0,AutoModelForSequenceClassification:()=>Lu,AutoModelForSpeechSeq2Seq:()=>bA,AutoModelForTextToSpectrogram:()=>R0,AutoModelForTextToWaveform:()=>nu,AutoModelForTokenClassification:()=>Ru,AutoModelForUniversalSegmentation:()=>Ka,AutoModelForVision2Seq:()=>_o,AutoModelForXVector:()=>Uu,AutoModelForZeroShotObjectDetection:()=>zs,BartForConditionalGeneration:()=>Gr,BartForSequenceClassification:()=>wr,BartModel:()=>xr,BartPretrainedModel:()=>hr,BaseModelOutput:()=>rt,BeitForImageClassification:()=>ae,BeitModel:()=>q,BeitPreTrainedModel:()=>P,BertForMaskedLM:()=>Et,BertForQuestionAnswering:()=>Tt,BertForSequenceClassification:()=>$e,BertForTokenClassification:()=>It,BertModel:()=>it,BertPreTrainedModel:()=>Ne,BlenderbotForConditionalGeneration:()=>rr,BlenderbotModel:()=>Kt,BlenderbotPreTrainedModel:()=>Or,BlenderbotSmallForConditionalGeneration:()=>Ws,BlenderbotSmallModel:()=>Rs,BlenderbotSmallPreTrainedModel:()=>Lr,BloomForCausalLM:()=>zA,BloomModel:()=>ba,BloomPreTrainedModel:()=>Yn,CLIPModel:()=>Xi,CLIPPreTrainedModel:()=>Ri,CLIPSegForImageSegmentation:()=>Wi,CLIPSegModel:()=>el,CLIPSegPreTrainedModel:()=>xA,CLIPTextModel:()=>JA,CLIPTextModelWithProjection:()=>_A,CLIPVisionModel:()=>$A,CLIPVisionModelWithProjection:()=>Br,CamembertForMaskedLM:()=>Wr,CamembertForQuestionAnswering:()=>pn,CamembertForSequenceClassification:()=>vr,CamembertForTokenClassification:()=>Es,CamembertModel:()=>gr,CamembertPreTrainedModel:()=>Ea,CausalLMOutput:()=>Il,CausalLMOutputWithPast:()=>Qs,ChineseCLIPModel:()=>Ga,ChineseCLIPPreTrainedModel:()=>En,ClapAudioModelWithProjection:()=>C0,ClapModel:()=>Kn,ClapPreTrainedModel:()=>Wl,ClapTextModelWithProjection:()=>Ec,CodeGenForCausalLM:()=>MA,CodeGenModel:()=>Fs,CodeGenPreTrainedModel:()=>ps,CohereForCausalLM:()=>sA,CohereModel:()=>Si,CoherePreTrainedModel:()=>rA,ConvBertForMaskedLM:()=>nr,ConvBertForQuestionAnswering:()=>ns,ConvBertForSequenceClassification:()=>lr,ConvBertForTokenClassification:()=>Fr,ConvBertModel:()=>sr,ConvBertPreTrainedModel:()=>Vt,ConvNextForImageClassification:()=>A0,ConvNextModel:()=>o0,ConvNextPreTrainedModel:()=>i0,ConvNextV2ForImageClassification:()=>c0,ConvNextV2Model:()=>sc,ConvNextV2PreTrainedModel:()=>l0,DPTForDepthEstimation:()=>zi,DPTModel:()=>Ii,DPTPreTrainedModel:()=>si,DebertaForMaskedLM:()=>ln,DebertaForQuestionAnswering:()=>sa,DebertaForSequenceClassification:()=>hn,DebertaForTokenClassification:()=>kn,DebertaModel:()=>In,DebertaPreTrainedModel:()=>Ba,DebertaV2ForMaskedLM:()=>jr,DebertaV2ForQuestionAnswering:()=>Ss,DebertaV2ForSequenceClassification:()=>Vs,DebertaV2ForTokenClassification:()=>xn,DebertaV2Model:()=>Qr,DebertaV2PreTrainedModel:()=>tr,DecisionTransformerModel:()=>Pu,DecisionTransformerPreTrainedModel:()=>Xl,DeiTForImageClassification:()=>Ts,DeiTModel:()=>ls,DeiTPreTrainedModel:()=>$r,DepthAnythingForDepthEstimation:()=>Ro,DepthAnythingPreTrainedModel:()=>Yi,DepthProForDepthEstimation:()=>RA,DepthProPreTrainedModel:()=>uA,DetrForObjectDetection:()=>Be,DetrForSegmentation:()=>qe,DetrModel:()=>ye,DetrObjectDetectionOutput:()=>ot,DetrPreTrainedModel:()=>de,DetrSegmentationOutput:()=>pt,Dinov2ForImageClassification:()=>pu,Dinov2Model:()=>ac,Dinov2PreTrainedModel:()=>Gl,Dinov2WithRegistersForImageClassification:()=>ic,Dinov2WithRegistersModel:()=>nc,Dinov2WithRegistersPreTrainedModel:()=>Fl,DistilBertForMaskedLM:()=>Mi,DistilBertForQuestionAnswering:()=>Ms,DistilBertForSequenceClassification:()=>_a,DistilBertForTokenClassification:()=>Tn,DistilBertModel:()=>Xa,DistilBertPreTrainedModel:()=>Ls,DonutSwinModel:()=>rc,DonutSwinPreTrainedModel:()=>tc,EfficientNetForImageClassification:()=>Dc,EfficientNetModel:()=>Pc,EfficientNetPreTrainedModel:()=>y0,ElectraForMaskedLM:()=>Ks,ElectraForQuestionAnswering:()=>oa,ElectraForSequenceClassification:()=>is,ElectraForTokenClassification:()=>wn,ElectraModel:()=>Cs,ElectraPreTrainedModel:()=>Gs,EsmForMaskedLM:()=>$n,EsmForSequenceClassification:()=>Ei,EsmForTokenClassification:()=>Pn,EsmModel:()=>Jn,EsmPreTrainedModel:()=>Ma,ExaoneForCausalLM:()=>co,ExaoneModel:()=>Ta,ExaonePreTrainedModel:()=>Go,FalconForCausalLM:()=>Mc,FalconModel:()=>b0,FalconPreTrainedModel:()=>bl,FastViTForImageClassification:()=>to,FastViTModel:()=>cA,FastViTPreTrainedModel:()=>lA,Florence2ForConditionalGeneration:()=>aa,Florence2PreTrainedModel:()=>Fn,GLPNForDepthEstimation:()=>ec,GLPNModel:()=>fu,GLPNPreTrainedModel:()=>Sl,GPT2LMHeadModel:()=>Xo,GPT2Model:()=>tl,GPT2PreTrainedModel:()=>Ji,GPTBigCodeForCausalLM:()=>ol,GPTBigCodeModel:()=>il,GPTBigCodePreTrainedModel:()=>La,GPTJForCausalLM:()=>nl,GPTJModel:()=>al,GPTJPreTrainedModel:()=>Po,GPTNeoForCausalLM:()=>Ti,GPTNeoModel:()=>zn,GPTNeoPreTrainedModel:()=>Zo,GPTNeoXForCausalLM:()=>sl,GPTNeoXModel:()=>rl,GPTNeoXPreTrainedModel:()=>Jo,Gemma2ForCausalLM:()=>zo,Gemma2Model:()=>On,Gemma2PreTrainedModel:()=>go,GemmaForCausalLM:()=>aA,GemmaModel:()=>DA,GemmaPreTrainedModel:()=>Ra,GlmForCausalLM:()=>So,GlmModel:()=>BA,GlmPreTrainedModel:()=>Do,GraniteForCausalLM:()=>PA,GraniteModel:()=>ea,GranitePreTrainedModel:()=>Fo,GroundingDinoForObjectDetection:()=>Ac,GroundingDinoPreTrainedModel:()=>oc,GroupViTModel:()=>Ca,GroupViTPreTrainedModel:()=>Lo,HeliumForCausalLM:()=>Pi,HeliumModel:()=>Za,HeliumPreTrainedModel:()=>bi,HieraForImageClassification:()=>ga,HieraModel:()=>$s,HieraPreTrainedModel:()=>Hs,HubertForCTC:()=>Rl,HubertForSequenceClassification:()=>ku,HubertModel:()=>wc,HubertPreTrainedModel:()=>Iu,IJepaForImageClassification:()=>na,IJepaModel:()=>rn,IJepaPreTrainedModel:()=>eo,Idefics3ForConditionalGeneration:()=>Li,Idefics3PreTrainedModel:()=>_n,ImageMattingOutput:()=>qu,JAISLMHeadModel:()=>li,JAISModel:()=>zr,JAISPreTrainedModel:()=>$i,JinaCLIPModel:()=>Zi,JinaCLIPPreTrainedModel:()=>Vi,JinaCLIPTextModel:()=>qo,JinaCLIPVisionModel:()=>ia,LlamaForCausalLM:()=>mn,LlamaModel:()=>EA,LlamaPreTrainedModel:()=>ci,LlavaForConditionalGeneration:()=>Yo,LlavaOnevisionForConditionalGeneration:()=>yA,LlavaPreTrainedModel:()=>Ni,LongT5ForConditionalGeneration:()=>vt,LongT5Model:()=>Le,LongT5PreTrainedModel:()=>at,M2M100ForConditionalGeneration:()=>d0,M2M100Model:()=>uc,M2M100PreTrainedModel:()=>u0,MBartForCausalLM:()=>Bs,MBartForConditionalGeneration:()=>Xr,MBartForSequenceClassification:()=>hs,MBartModel:()=>gs,MBartPreTrainedModel:()=>_r,MPNetForMaskedLM:()=>ti,MPNetForQuestionAnswering:()=>ys,MPNetForSequenceClassification:()=>ri,MPNetForTokenClassification:()=>ds,MPNetModel:()=>ei,MPNetPreTrainedModel:()=>cn,MT5ForConditionalGeneration:()=>yr,MT5Model:()=>ir,MT5PreTrainedModel:()=>Pt,MarianMTModel:()=>cc,MarianModel:()=>lc,MarianPreTrainedModel:()=>Ol,MaskFormerForInstanceSegmentation:()=>$0,MaskFormerModel:()=>J0,MaskFormerPreTrainedModel:()=>Io,MaskedLMOutput:()=>Qn,MgpstrForSceneTextRecognition:()=>Nc,MgpstrModelOutput:()=>Oc,MgpstrPreTrainedModel:()=>Qc,MistralForCausalLM:()=>m0,MistralModel:()=>h0,MistralPreTrainedModel:()=>p0,MobileBertForMaskedLM:()=>Bi,MobileBertForQuestionAnswering:()=>Sn,MobileBertForSequenceClassification:()=>Vn,MobileBertModel:()=>ma,MobileBertPreTrainedModel:()=>Dn,MobileLLMForCausalLM:()=>uo,MobileLLMModel:()=>un,MobileLLMPreTrainedModel:()=>$o,MobileNetV1ForImageClassification:()=>Kl,MobileNetV1Model:()=>Eu,MobileNetV1PreTrainedModel:()=>_0,MobileNetV2ForImageClassification:()=>x0,MobileNetV2Model:()=>Bu,MobileNetV2PreTrainedModel:()=>v0,MobileNetV3ForImageClassification:()=>Gc,MobileNetV3Model:()=>Sc,MobileNetV3PreTrainedModel:()=>M0,MobileNetV4ForImageClassification:()=>Fc,MobileNetV4Model:()=>Tu,MobileNetV4PreTrainedModel:()=>ql,MobileViTForImageClassification:()=>r,MobileViTModel:()=>t,MobileViTPreTrainedModel:()=>os,MobileViTV2ForImageClassification:()=>i,MobileViTV2Model:()=>a,MobileViTV2PreTrainedModel:()=>s,ModelOutput:()=>bt,ModernBertForMaskedLM:()=>pe,ModernBertForSequenceClassification:()=>Ut,ModernBertForTokenClassification:()=>Pe,ModernBertModel:()=>Wt,ModernBertPreTrainedModel:()=>zt,Moondream1ForConditionalGeneration:()=>Dl,MoonshineForConditionalGeneration:()=>Uo,MoonshineModel:()=>Un,MoonshinePreTrainedModel:()=>yn,MptForCausalLM:()=>cl,MptModel:()=>ho,MptPreTrainedModel:()=>Gi,MultiModalityCausalLM:()=>E0,MultiModalityPreTrainedModel:()=>zc,MusicgenForCausalLM:()=>Mu,MusicgenForConditionalGeneration:()=>Cl,MusicgenModel:()=>xu,MusicgenPreTrainedModel:()=>Yl,NomicBertModel:()=>ge,NomicBertPreTrainedModel:()=>X,OPTForCausalLM:()=>ul,OPTModel:()=>OA,OPTPreTrainedModel:()=>oA,Olmo2ForCausalLM:()=>Di,Olmo2Model:()=>tA,Olmo2PreTrainedModel:()=>eA,OlmoForCausalLM:()=>TA,OlmoModel:()=>Al,OlmoPreTrainedModel:()=>Ci,OpenELMForCausalLM:()=>SA,OpenELMModel:()=>ui,OpenELMPreTrainedModel:()=>nA,OwlViTForObjectDetection:()=>f,OwlViTModel:()=>d,OwlViTPreTrainedModel:()=>o,Owlv2ForObjectDetection:()=>y,Owlv2Model:()=>M,Owlv2PreTrainedModel:()=>m,PaliGemmaForConditionalGeneration:()=>To,PaliGemmaPreTrainedModel:()=>Bo,PatchTSMixerForPrediction:()=>Wc,PatchTSMixerModel:()=>Vc,PatchTSMixerPreTrainedModel:()=>B0,PatchTSTForPrediction:()=>jc,PatchTSTModel:()=>Rc,PatchTSTPreTrainedModel:()=>Lc,Phi3ForCausalLM:()=>iA,Phi3Model:()=>FA,Phi3PreTrainedModel:()=>gn,Phi3VForCausalLM:()=>Hn,Phi3VPreTrainedModel:()=>mi,PhiForCausalLM:()=>No,PhiModel:()=>dn,PhiPreTrainedModel:()=>GA,PreTrainedModel:()=>Je,PretrainedMixin:()=>Aa,PvtForImageClassification:()=>Hi,PvtModel:()=>Ui,PvtPreTrainedModel:()=>Fi,PyAnnoteForAudioFrameClassification:()=>pc,PyAnnoteModel:()=>jo,PyAnnotePreTrainedModel:()=>fA,QuestionAnsweringModelOutput:()=>qn,Qwen2ForCausalLM:()=>po,Qwen2Model:()=>fo,Qwen2PreTrainedModel:()=>Oo,Qwen2VLForConditionalGeneration:()=>ll,Qwen2VLPreTrainedModel:()=>Qo,RTDetrForObjectDetection:()=>Lt,RTDetrModel:()=>Ft,RTDetrObjectDetectionOutput:()=>Xt,RTDetrPreTrainedModel:()=>Mt,ResNetForImageClassification:()=>Fa,ResNetModel:()=>Pa,ResNetPreTrainedModel:()=>fa,RoFormerForMaskedLM:()=>ct,RoFormerForQuestionAnswering:()=>Ht,RoFormerForSequenceClassification:()=>kt,RoFormerForTokenClassification:()=>Dt,RoFormerModel:()=>He,RoFormerPreTrainedModel:()=>fe,RobertaForMaskedLM:()=>qs,RobertaForQuestionAnswering:()=>Rr,RobertaForSequenceClassification:()=>es,RobertaForTokenClassification:()=>_s,RobertaModel:()=>Js,RobertaPreTrainedModel:()=>Vr,SamImageSegmentationOutput:()=>jA,SamModel:()=>zl,SamPreTrainedModel:()=>hu,SapiensForDepthEstimation:()=>so,SapiensForNormalEstimation:()=>LA,SapiensForSemanticSegmentation:()=>wo,SapiensPreTrainedModel:()=>ro,SegformerForImageClassification:()=>Bc,SegformerForSemanticSegmentation:()=>Tc,SegformerModel:()=>vu,SegformerPreTrainedModel:()=>yo,Seq2SeqLMOutput:()=>Au,SequenceClassifierOutput:()=>Os,SiglipModel:()=>Nr,SiglipPreTrainedModel:()=>ji,SiglipTextModel:()=>vA,SiglipVisionModel:()=>Ko,SpeechT5ForSpeechToText:()=>no,SpeechT5ForTextToSpeech:()=>ko,SpeechT5HifiGan:()=>pA,SpeechT5Model:()=>ed,SpeechT5PreTrainedModel:()=>jl,SqueezeBertForMaskedLM:()=>Ai,SqueezeBertForQuestionAnswering:()=>Wn,SqueezeBertForSequenceClassification:()=>hi,SqueezeBertModel:()=>pi,SqueezeBertPreTrainedModel:()=>qr,StableLmForCausalLM:()=>Hl,StableLmModel:()=>k0,StableLmPreTrainedModel:()=>I0,Starcoder2ForCausalLM:()=>xc,Starcoder2Model:()=>vc,Starcoder2PreTrainedModel:()=>Vl,StyleTextToSpeech2Model:()=>_c,StyleTextToSpeech2PreTrainedModel:()=>WA,Swin2SRForImageSuperResolution:()=>vn,Swin2SRModel:()=>sn,Swin2SRPreTrainedModel:()=>Ja,SwinForImageClassification:()=>Ya,SwinModel:()=>Ha,SwinPreTrainedModel:()=>za,T5ForConditionalGeneration:()=>Ge,T5Model:()=>Ae,T5PreTrainedModel:()=>tt,TableTransformerForObjectDetection:()=>Tr,TableTransformerModel:()=>Mr,TableTransformerObjectDetectionOutput:()=>Yr,TableTransformerPreTrainedModel:()=>Ar,TokenClassifierOutput:()=>$a,TrOCRForCausalLM:()=>mA,TrOCRPreTrainedModel:()=>hA,UniSpeechForCTC:()=>bu,UniSpeechForSequenceClassification:()=>mc,UniSpeechModel:()=>Nl,UniSpeechPreTrainedModel:()=>Ql,UniSpeechSatForAudioFrameClassification:()=>f0,UniSpeechSatForCTC:()=>hl,UniSpeechSatForSequenceClassification:()=>Cu,UniSpeechSatModel:()=>bc,UniSpeechSatPreTrainedModel:()=>pl,ViTForImageClassification:()=>AA,ViTMAEModel:()=>bn,ViTMAEPreTrainedModel:()=>QA,ViTMSNForImageClassification:()=>bo,ViTMSNModel:()=>gl,ViTMSNPreTrainedModel:()=>NA,ViTModel:()=>di,ViTPreTrainedModel:()=>wi,VisionEncoderDecoderModel:()=>Ho,VitMatteForImageMatting:()=>Co,VitMattePreTrainedModel:()=>fl,VitPoseForPoseEstimation:()=>dl,VitPosePreTrainedModel:()=>mo,VitsModel:()=>w0,VitsModelOutput:()=>Bn,VitsPreTrainedModel:()=>Ul,Wav2Vec2BertForCTC:()=>wu,Wav2Vec2BertForSequenceClassification:()=>Cc,Wav2Vec2BertModel:()=>ml,Wav2Vec2BertPreTrainedModel:()=>Ll,Wav2Vec2ForAudioFrameClassification:()=>fc,Wav2Vec2ForCTC:()=>gc,Wav2Vec2ForSequenceClassification:()=>g0,Wav2Vec2Model:()=>dc,Wav2Vec2PreTrainedModel:()=>an,WavLMForAudioFrameClassification:()=>yc,WavLMForCTC:()=>yu,WavLMForSequenceClassification:()=>kc,WavLMForXVector:()=>_u,WavLMModel:()=>Ic,WavLMPreTrainedModel:()=>VA,WeSpeakerResNetModel:()=>mu,WeSpeakerResNetPreTrainedModel:()=>hc,WhisperForConditionalGeneration:()=>Hr,WhisperModel:()=>tn,WhisperPreTrainedModel:()=>Mn,XLMForQuestionAnswering:()=>Sa,XLMForSequenceClassification:()=>Ua,XLMForTokenClassification:()=>Ir,XLMModel:()=>Da,XLMPreTrainedModel:()=>cs,XLMRobertaForMaskedLM:()=>qA,XLMRobertaForQuestionAnswering:()=>lo,XLMRobertaForSequenceClassification:()=>kA,XLMRobertaForTokenClassification:()=>XA,XLMRobertaModel:()=>ss,XLMRobertaPreTrainedModel:()=>or,XLMWithLMHeadModel:()=>Us,XVectorOutput:()=>H0,YolosForObjectDetection:()=>dA,YolosModel:()=>ao,YolosObjectDetectionOutput:()=>gA,YolosPreTrainedModel:()=>Ki});var w=A("./src/configs.js"),F=A("./src/backends/onnx.js"),Y=A("./src/utils/dtypes.js"),U=A("./src/utils/generic.js"),H=A("./src/utils/core.js"),z=A("./src/utils/hub.js"),N=A("./src/utils/constants.js"),D=A("./src/generation/logits_process.js"),R=A("./src/generation/configuration_utils.js"),Q=A("./src/utils/tensor.js"),J=A("./src/utils/image.js"),oe=A("./src/utils/maths.js"),be=A("./src/generation/stopping_criteria.js"),Ie=A("./src/generation/logits_sampler.js"),ee=A("./src/env.js"),re=A("./src/models/whisper/generation_whisper.js"),ce=A("./src/models/whisper/common_whisper.js");const g={EncoderOnly:0,EncoderDecoder:1,Seq2Seq:2,Vision2Seq:3,DecoderOnly:4,MaskGeneration:5,ImageTextToText:6,Musicgen:7,MultiModality:8,Phi3V:9},I=new Map,e=new Map,u=new Map;async function B(he,Te,st){var ms;const Qt=((ms=st.config)==null?void 0:ms["transformers.js_config"])??{};let Jt=st.device??Qt.device;Jt&&typeof Jt!="string"&&(Jt.hasOwnProperty(Te)?Jt=Jt[Te]:(console.warn(`device not specified for "${Te}". Using the default device.`),Jt=null));const $t=Jt??(ee.apis.IS_NODE_ENV?"cpu":"wasm"),ie=(0,F.deviceToExecutionProviders)($t);let ke=st.dtype??Qt.dtype;if(typeof ke!="string"&&(ke&&ke.hasOwnProperty(Te)?ke=ke[Te]:(ke=Y.DEFAULT_DEVICE_DTYPE_MAPPING[$t]??Y.DATA_TYPES.fp32,console.warn(`dtype not specified for "${Te}". Using the default dtype (${ke}) for this device (${$t}).`))),ke===Y.DATA_TYPES.auto){let Ur=Qt.dtype;typeof Ur!="string"&&(Ur=Ur[Te]),Ur&&Ur!==Y.DATA_TYPES.auto&&Y.DATA_TYPES.hasOwnProperty(Ur)?ke=Ur:ke=Y.DEFAULT_DEVICE_DTYPE_MAPPING[$t]??Y.DATA_TYPES.fp32}const Ue=ke;if(Y.DEFAULT_DTYPE_SUFFIX_MAPPING.hasOwnProperty(Ue)){if(Ue===Y.DATA_TYPES.fp16&&$t==="webgpu"&&!await(0,Y.isWebGpuFp16Supported)())throw new Error(`The device (${$t}) does not support fp16.`)}else throw new Error(`Invalid dtype: ${Ue}. Should be one of: ${Object.keys(Y.DATA_TYPES).join(", ")}`);const yt=Qt.kv_cache_dtype?typeof Qt.kv_cache_dtype=="string"?Qt.kv_cache_dtype:Qt.kv_cache_dtype[Ue]??"float32":void 0;if(yt&&!["float32","float16"].includes(yt))throw new Error(`Invalid kv_cache_dtype: ${yt}. Should be one of: float32, float16`);const Nt={dtype:Ue,kv_cache_dtype:yt},Rt=Y.DEFAULT_DTYPE_SUFFIX_MAPPING[Ue],Yt=`${st.subfolder??""}/${Te}${Rt}.onnx`,cr={...st.session_options};cr.executionProviders??(cr.executionProviders=ie);const mr=Qt.free_dimension_overrides;mr?cr.freeDimensionOverrides??(cr.freeDimensionOverrides=mr):$t.startsWith("webnn")&&!cr.freeDimensionOverrides&&console.warn('WebNN does not currently support dynamic shapes and requires `free_dimension_overrides` to be set in config.json as a field within "transformers.js_config". When `free_dimension_overrides` is not set, you may experience significant performance degradation.');const br=(0,z.getModelFile)(he,Yt,!0,st),Cr=st.use_external_data_format??Qt.use_external_data_format;let Pr=[];if(Cr&&(Cr===!0||typeof Cr=="object"&&Cr.hasOwnProperty(Te)&&Cr[Te]===!0)){if(ee.apis.IS_NODE_ENV)throw new Error("External data format is not yet supported in Node.js");const Ur=`${Te}${Rt}.onnx_data`,rs=`${st.subfolder??""}/${Ur}`;Pr.push(new Promise(async(as,xs)=>{const Ns=await(0,z.getModelFile)(he,rs,!0,st);as({path:Ur,data:Ns})}))}else cr.externalData!==void 0&&(Pr=cr.externalData.map(async Ur=>{if(typeof Ur.data=="string"){const rs=await(0,z.getModelFile)(he,Ur.data,!0,st);return{...Ur,data:rs}}return Ur}));if(Pr.length>0&&(cr.externalData=await Promise.all(Pr)),$t==="webgpu"){const Ur=(0,w.getKeyValueShapes)(st.config,{prefix:"present"});if(Object.keys(Ur).length>0&&!(0,F.isONNXProxy)()){const rs={};for(const as in Ur)rs[as]="gpu-buffer";cr.preferredOutputLocation=rs}}return{buffer:await br,session_options:cr,session_config:Nt}}async function ue(he,Te,st){return Object.fromEntries(await Promise.all(Object.keys(Te).map(async Qt=>{const{buffer:Jt,session_options:$t,session_config:ie}=await B(he,Te[Qt],st),ke=await(0,F.createInferenceSession)(Jt,$t,ie);return[Qt,ke]})))}async function G(he,Te,st){return Object.fromEntries(await Promise.all(Object.keys(Te).map(async Qt=>{const Jt=await(0,z.getModelJSON)(he,Te[Qt],!1,st);return[Qt,Jt]})))}function K(he,Te){const st=Object.create(null),Qt=[];for(const ie of he.inputNames){const ke=Te[ie];if(!(ke instanceof Q.Tensor)){Qt.push(ie);continue}st[ie]=(0,F.isONNXProxy)()?ke.clone():ke}if(Qt.length>0)throw new Error(`An error occurred during model execution: "Missing the following inputs: ${Qt.join(", ")}.`);const Jt=Object.keys(Te).length,$t=he.inputNames.length;if(Jt>$t){let ie=Object.keys(Te).filter(ke=>!he.inputNames.includes(ke));console.warn(`WARNING: Too many inputs were provided (${Jt} > ${$t}). The following inputs will be ignored: "${ie.join(", ")}".`)}return st}async function Ve(he,Te){const st=K(he,Te);try{const Qt=Object.fromEntries(Object.entries(st).map(([$t,ie])=>[$t,ie.ort_tensor]));let Jt=await he.run(Qt);return Jt=ve(Jt),Jt}catch(Qt){const Jt=Object.fromEntries(Object.entries(st).map(([$t,{type:ie,dims:ke,data:Ue}])=>[$t,{type:ie,dims:ke,data:Ue}]));throw console.error(`An error occurred during model execution: "${Qt}".`),console.error("Inputs given to model:",Jt),Qt}}function ve(he){for(let Te in he)(0,F.isONNXTensor)(he[Te])?he[Te]=new Q.Tensor(he[Te]):typeof he[Te]=="object"&&ve(he[Te]);return he}function Re(he){if(he instanceof Q.Tensor)return he;if(he.length===0)throw Error("items must be non-empty");if(Array.isArray(he[0])){if(he.some(Te=>Te.length!==he[0].length))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=True' and/or 'truncation=True' to have batched tensors with the same length.");return new Q.Tensor("int64",BigInt64Array.from(he.flat().map(Te=>BigInt(Te))),[he.length,he[0].length])}else return new Q.Tensor("int64",BigInt64Array.from(he.map(Te=>BigInt(Te))),[1,he.length])}function Ke(he){return new Q.Tensor("bool",[he],[1])}async function nt(he,Te){let{encoder_outputs:st,input_ids:Qt,decoder_input_ids:Jt,...$t}=Te;if(!st){const ke=(0,H.pick)(Te,he.sessions.model.inputNames);st=(await Ct(he,ke)).last_hidden_state}return $t.input_ids=Jt,$t.encoder_hidden_states=st,he.sessions.decoder_model_merged.inputNames.includes("encoder_attention_mask")&&($t.encoder_attention_mask=Te.attention_mask),await ht(he,$t,!0)}async function Ct(he,Te){const st=he.sessions.model,Qt=(0,H.pick)(Te,st.inputNames);if(st.inputNames.includes("inputs_embeds")&&!Qt.inputs_embeds){if(!Te.input_ids)throw new Error("Both `input_ids` and `inputs_embeds` are missing in the model inputs.");Qt.inputs_embeds=await he.encode_text({input_ids:Te.input_ids})}if(st.inputNames.includes("token_type_ids")&&!Qt.token_type_ids){if(!Qt.input_ids)throw new Error("Both `input_ids` and `token_type_ids` are missing in the model inputs.");Qt.token_type_ids=(0,Q.zeros_like)(Qt.input_ids)}if(st.inputNames.includes("pixel_mask")&&!Qt.pixel_mask){if(!Qt.pixel_values)throw new Error("Both `pixel_values` and `pixel_mask` are missing in the model inputs.");const Jt=Qt.pixel_values.dims;Qt.pixel_mask=(0,Q.ones)([Jt[0],Jt[2],Jt[3]])}return await Ve(st,Qt)}async function ht(he,Te,st=!1){const Qt=he.sessions[st?"decoder_model_merged":"model"],{past_key_values:Jt,...$t}=Te;if(Qt.inputNames.includes("use_cache_branch")&&($t.use_cache_branch=Ke(!!Jt)),Qt.inputNames.includes("position_ids")&&$t.attention_mask&&!$t.position_ids){const ke=he.config.model_type==="paligemma"?1:0;$t.position_ids=xe($t,Jt,ke)}he.addPastKeyValues($t,Jt);const ie=(0,H.pick)($t,Qt.inputNames);return await Ve(Qt,ie)}function et({image_token_id:he,inputs_embeds:Te,image_features:st,input_ids:Qt,attention_mask:Jt}){const $t=Qt.tolist().map(yt=>yt.reduce((Nt,Rt,Yt)=>(Rt==he&&Nt.push(Yt),Nt),[])),ie=$t.reduce((yt,Nt)=>yt+Nt.length,0),ke=st.dims[0];if(ie!==ke)throw new Error(`Image features and image tokens do not match: tokens: ${ie}, features ${ke}`);let Ue=0;for(let yt=0;yt<$t.length;++yt){const Nt=$t[yt],Rt=Te[yt];for(let Yt=0;Yt<Nt.length;++Yt)Rt[Nt[Yt]].data.set(st[Ue++].data)}return{inputs_embeds:Te,attention_mask:Jt}}async function ze(he,{input_ids:Te=null,attention_mask:st=null,pixel_values:Qt=null,position_ids:Jt=null,inputs_embeds:$t=null,past_key_values:ie=null,generation_config:ke=null,logits_processor:Ue=null,...yt}){if(!$t){if($t=await he.encode_text({input_ids:Te,...yt}),Qt&&Te.dims[1]!==1){const Rt=await he.encode_image({pixel_values:Qt,...yt});({inputs_embeds:$t,attention_mask:st}=he._merge_input_ids_with_image_features({image_features:Rt,inputs_embeds:$t,input_ids:Te,attention_mask:st}))}else if(ie&&Qt&&Te.dims[1]===1){const Rt=Te.dims[1],Yt=Object.values(ie)[0].dims.at(-2);st=(0,Q.cat)([(0,Q.ones)([Te.dims[0],Yt]),st.slice(null,[st.dims[1]-Rt,st.dims[1]])],1)}}if(!Jt&&he.config.model_type==="qwen2_vl"){const{image_grid_thw:Rt,video_grid_thw:Yt}=yt;[Jt]=he.get_rope_index(Te,Rt,Yt,st)}return await ht(he,{inputs_embeds:$t,past_key_values:ie,attention_mask:st,position_ids:Jt,generation_config:ke,logits_processor:Ue},!0)}function Se(he,Te=0){const[st,Qt]=he.dims,Jt=he.data,$t=new BigInt64Array(Jt.length);for(let ie=0;ie<st;++ie){const ke=ie*Qt;let Ue=BigInt(Te);for(let yt=0;yt<Qt;++yt){const Nt=ke+yt;Jt[Nt]===0n?$t[Nt]=BigInt(1):($t[Nt]=Ue,Ue+=Jt[Nt])}}return{data:$t,dims:he.dims}}function xe(he,Te=null,st=0){const{input_ids:Qt,inputs_embeds:Jt,attention_mask:$t}=he,{data:ie,dims:ke}=Se($t,st);let Ue=new Q.Tensor("int64",ie,ke);if(Te){const yt=-(Qt??Jt).dims.at(1);Ue=Ue.slice(null,[yt,null])}return Ue}function Me(he,Te,st,Qt){if(st.past_key_values){const Jt=Object.values(st.past_key_values)[0].dims.at(-2),{input_ids:$t,attention_mask:ie}=st;if(!(ie&&ie.dims[1]>$t.dims[1])){if(Jt<$t.dims[1])st.input_ids=$t.slice(null,[Jt,null]);else if(he.config.image_token_index!=null&&$t.data.some(ke=>ke==he.config.image_token_index)){const ke=he.config.num_image_tokens;if(!ke)throw new Error("`num_image_tokens` is missing in the model configuration.");const Ue=$t.dims[1]-(Jt-ke);st.input_ids=$t.slice(null,[-Ue,null]),st.attention_mask=(0,Q.ones)([1,Jt+Ue])}}}return st}function ft(he,Te,st,Qt){return st.past_key_values&&(Te=Te.map(Jt=>[Jt.at(-1)])),{...st,decoder_input_ids:Re(Te)}}function gt(he,...Te){return he.config.is_encoder_decoder?ft(he,...Te):Me(he,...Te)}function _t(he,Te,st,Qt){const Jt=!!st.past_key_values;return Qt.guidance_scale!==null&&Qt.guidance_scale>1&&(Jt?st.input_ids=(0,Q.cat)([st.input_ids,st.input_ids],0):(st.input_ids=(0,Q.cat)([st.input_ids,(0,Q.full_like)(st.input_ids,BigInt(Qt.pad_token_id))],0),st.attention_mask=(0,Q.cat)([st.attention_mask,(0,Q.full_like)(st.attention_mask,0n)],0))),(Jt||!st.pixel_values)&&(st.pixel_values=(0,Q.full)([0,0,3,384,384],1)),Jt&&(st.images_seq_mask=new Q.Tensor("bool",new Array(1).fill(!0).fill(!1,0,1),[1,1]),st.images_emb_mask=new Q.Tensor("bool",new Array(0).fill(!1),[1,1,0])),st}class Je extends U.Callable{constructor(st,Qt,Jt){super();We(this,"main_input_name","input_ids");We(this,"forward_params",["input_ids","attention_mask"]);this.config=st,this.sessions=Qt,this.configs=Jt;const $t=u.get(this.constructor),ie=I.get($t);switch(this.can_generate=!1,this._forward=null,this._prepare_inputs_for_generation=null,ie){case g.DecoderOnly:this.can_generate=!0,this._forward=ht,this._prepare_inputs_for_generation=Me;break;case g.Seq2Seq:case g.Vision2Seq:case g.Musicgen:this.can_generate=!0,this._forward=nt,this._prepare_inputs_for_generation=ft;break;case g.EncoderDecoder:this._forward=nt;break;case g.ImageTextToText:this.can_generate=!0,this._forward=ze,this._prepare_inputs_for_generation=gt;break;case g.Phi3V:this.can_generate=!0,this._prepare_inputs_for_generation=gt;break;case g.MultiModality:this.can_generate=!0,this._prepare_inputs_for_generation=_t;break;default:this._forward=Ct;break}this.can_generate&&this.forward_params.push("past_key_values"),this.custom_config=this.config["transformers.js_config"]??{}}async dispose(){var Qt;const st=[];for(const Jt of Object.values(this.sessions))(Qt=Jt==null?void 0:Jt.handler)!=null&&Qt.dispose&&st.push(Jt.handler.dispose());return await Promise.all(st)}static async from_pretrained(st,{progress_callback:Qt=null,config:Jt=null,cache_dir:$t=null,local_files_only:ie=!1,revision:ke="main",model_file_name:Ue=null,subfolder:yt="onnx",device:Nt=null,dtype:Rt=null,use_external_data_format:Yt=null,session_options:cr={}}={}){let mr={progress_callback:Qt,config:Jt,cache_dir:$t,local_files_only:ie,revision:ke,model_file_name:Ue,subfolder:yt,device:Nt,dtype:Rt,use_external_data_format:Yt,session_options:cr};const br=u.get(this),Cr=I.get(br);Jt=mr.config=await w.AutoConfig.from_pretrained(st,mr);let Pr;if(Cr===g.DecoderOnly)Pr=await Promise.all([ue(st,{model:mr.model_file_name??"model"},mr),G(st,{generation_config:"generation_config.json"},mr)]);else if(Cr===g.Seq2Seq||Cr===g.Vision2Seq)Pr=await Promise.all([ue(st,{model:"encoder_model",decoder_model_merged:"decoder_model_merged"},mr),G(st,{generation_config:"generation_config.json"},mr)]);else if(Cr===g.MaskGeneration)Pr=await Promise.all([ue(st,{model:"vision_encoder",prompt_encoder_mask_decoder:"prompt_encoder_mask_decoder"},mr)]);else if(Cr===g.EncoderDecoder)Pr=await Promise.all([ue(st,{model:"encoder_model",decoder_model_merged:"decoder_model_merged"},mr)]);else if(Cr===g.ImageTextToText){const Zr={embed_tokens:"embed_tokens",vision_encoder:"vision_encoder",decoder_model_merged:"decoder_model_merged"};Jt.is_encoder_decoder&&(Zr.model="encoder_model"),Pr=await Promise.all([ue(st,Zr,mr),G(st,{generation_config:"generation_config.json"},mr)])}else if(Cr===g.Musicgen)Pr=await Promise.all([ue(st,{model:"text_encoder",decoder_model_merged:"decoder_model_merged",encodec_decode:"encodec_decode"},mr),G(st,{generation_config:"generation_config.json"},mr)]);else if(Cr===g.MultiModality)Pr=await Promise.all([ue(st,{prepare_inputs_embeds:"prepare_inputs_embeds",model:"language_model",lm_head:"lm_head",gen_head:"gen_head",gen_img_embeds:"gen_img_embeds",image_decode:"image_decode"},mr),G(st,{generation_config:"generation_config.json"},mr)]);else if(Cr===g.Phi3V)Pr=await Promise.all([ue(st,{prepare_inputs_embeds:"prepare_inputs_embeds",model:"model",vision_encoder:"vision_encoder"},mr),G(st,{generation_config:"generation_config.json"},mr)]);else{if(Cr!==g.EncoderOnly){const Zr=br??(Jt==null?void 0:Jt.model_type);Zr!=="custom"&&console.warn(`Model type for '${Zr}' not found, assuming encoder-only architecture. Please report this at ${N.GITHUB_ISSUE_URL}.`)}Pr=await Promise.all([ue(st,{model:mr.model_file_name??"model"},mr)])}return new this(Jt,...Pr)}async _call(st){return await this.forward(st)}async forward(st){return await this._forward(this,st)}get generation_config(){var st;return((st=this.configs)==null?void 0:st.generation_config)??null}_get_logits_warper(st){const Qt=new D.LogitsProcessorList;return st.temperature!==null&&st.temperature!==1&&Qt.push(new D.TemperatureLogitsWarper(st.temperature)),st.top_k!==null&&st.top_k!==0&&Qt.push(new D.TopKLogitsWarper(st.top_k)),st.top_p!==null&&st.top_p<1&&Qt.push(new D.TopPLogitsWarper(st.top_p)),Qt}_get_logits_processor(st,Qt,Jt=null){const $t=new D.LogitsProcessorList;if(st.repetition_penalty!==null&&st.repetition_penalty!==1&&$t.push(new D.RepetitionPenaltyLogitsProcessor(st.repetition_penalty)),st.no_repeat_ngram_size!==null&&st.no_repeat_ngram_size>0&&$t.push(new D.NoRepeatNGramLogitsProcessor(st.no_repeat_ngram_size)),st.bad_words_ids!==null&&$t.push(new D.NoBadWordsLogitsProcessor(st.bad_words_ids,st.eos_token_id)),st.min_length!==null&&st.eos_token_id!==null&&st.min_length>0&&$t.push(new D.MinLengthLogitsProcessor(st.min_length,st.eos_token_id)),st.min_new_tokens!==null&&st.eos_token_id!==null&&st.min_new_tokens>0&&$t.push(new D.MinNewTokensLengthLogitsProcessor(Qt,st.min_new_tokens,st.eos_token_id)),st.forced_bos_token_id!==null&&$t.push(new D.ForcedBOSTokenLogitsProcessor(st.forced_bos_token_id)),st.forced_eos_token_id!==null&&$t.push(new D.ForcedEOSTokenLogitsProcessor(st.max_length,st.forced_eos_token_id)),st.begin_suppress_tokens!==null){const ie=Qt>1||st.forced_bos_token_id===null?Qt:Qt+1;$t.push(new D.SuppressTokensAtBeginLogitsProcessor(st.begin_suppress_tokens,ie))}return st.guidance_scale!==null&&st.guidance_scale>1&&$t.push(new D.ClassifierFreeGuidanceLogitsProcessor(st.guidance_scale)),Jt!==null&&$t.extend(Jt),$t}_prepare_generation_config(st,Qt,Jt=R.GenerationConfig){const $t={...this.config};for(const ke of["decoder","generator","text_config"])ke in $t&&Object.assign($t,$t[ke]);const ie=new Jt($t);return Object.assign(ie,this.generation_config??{}),st&&Object.assign(ie,st),Qt&&Object.assign(ie,(0,H.pick)(Qt,Object.getOwnPropertyNames(ie))),ie}_get_stopping_criteria(st,Qt=null){const Jt=new be.StoppingCriteriaList;return st.max_length!==null&&Jt.push(new be.MaxLengthCriteria(st.max_length,this.config.max_position_embeddings??null)),st.eos_token_id!==null&&Jt.push(new be.EosTokenCriteria(st.eos_token_id)),Qt&&Jt.extend(Qt),Jt}_validate_model_class(){if(!this.can_generate){const st=[Jl,S0,P0,T0],Qt=u.get(this.constructor),Jt=new Set,$t=this.config.model_type;for(const ke of st){const Ue=ke.get($t);Ue&&Jt.add(Ue[0])}let ie=`The current model class (${Qt}) is not compatible with \`.generate()\`, as it doesn't have a language model head.`;throw Jt.size>0&&(ie+=` Please use the following class instead: ${[...Jt].join(", ")}`),Error(ie)}}prepare_inputs_for_generation(...st){return this._prepare_inputs_for_generation(this,...st)}_update_model_kwargs_for_generation({generated_input_ids:st,outputs:Qt,model_inputs:Jt,is_encoder_decoder:$t}){return Jt.past_key_values=this.getPastKeyValues(Qt,Jt.past_key_values),Jt.input_ids=new Q.Tensor("int64",st.flat(),[st.length,1]),$t||(Jt.attention_mask=(0,Q.cat)([Jt.attention_mask,(0,Q.ones)([Jt.attention_mask.dims[0],1])],1)),Jt.position_ids=null,Jt}_prepare_model_inputs({inputs:st,bos_token_id:Qt,model_kwargs:Jt}){const $t=(0,H.pick)(Jt,this.forward_params),ie=this.main_input_name;if(ie in $t){if(st)throw new Error("`inputs`: {inputs}` were passed alongside {input_name} which is not allowed. Make sure to either pass {inputs} or {input_name}=...")}else $t[ie]=st;return{inputs_tensor:$t[ie],model_inputs:$t,model_input_name:ie}}async _prepare_encoder_decoder_kwargs_for_generation({inputs_tensor:st,model_inputs:Qt,model_input_name:Jt,generation_config:$t}){if(this.sessions.model.inputNames.includes("inputs_embeds")&&!Qt.inputs_embeds&&"_prepare_inputs_embeds"in this){const{input_ids:ke,pixel_values:Ue,attention_mask:yt,...Nt}=Qt,Rt=await this._prepare_inputs_embeds(Qt);Qt={...Nt,...(0,H.pick)(Rt,["inputs_embeds","attention_mask"])}}let{last_hidden_state:ie}=await Ct(this,Qt);if($t.guidance_scale!==null&&$t.guidance_scale>1)ie=(0,Q.cat)([ie,(0,Q.full_like)(ie,0)],0),"attention_mask"in Qt&&(Qt.attention_mask=(0,Q.cat)([Qt.attention_mask,(0,Q.zeros_like)(Qt.attention_mask)],0));else if(Qt.decoder_input_ids){const ke=Re(Qt.decoder_input_ids).dims[0];if(ke!==ie.dims[0]){if(ie.dims[0]!==1)throw new Error(`The encoder outputs have a different batch size (${ie.dims[0]}) than the decoder inputs (${ke}).`);ie=(0,Q.cat)(Array.from({length:ke},()=>ie),0)}}return Qt.encoder_outputs=ie,Qt}_prepare_decoder_input_ids_for_generation({batch_size:st,model_input_name:Qt,model_kwargs:Jt,decoder_start_token_id:$t,bos_token_id:ie,generation_config:ke}){let{decoder_input_ids:Ue,...yt}=Jt;if(!(Ue instanceof Q.Tensor)){if(Ue)Array.isArray(Ue[0])||(Ue=Array.from({length:st},()=>Ue));else if($t??($t=ie),this.config.model_type==="musicgen")Ue=Array.from({length:st*this.config.decoder.num_codebooks},()=>[$t]);else if(Array.isArray($t)){if($t.length!==st)throw new Error(`\`decoder_start_token_id\` expcted to have length ${st} but got ${$t.length}`);Ue=$t}else Ue=Array.from({length:st},()=>[$t]);Ue=Re(Ue)}return Jt.decoder_attention_mask=(0,Q.ones_like)(Ue),{input_ids:Ue,model_inputs:yt}}async generate({inputs:st=null,generation_config:Qt=null,logits_processor:Jt=null,stopping_criteria:$t=null,streamer:ie=null,...ke}){this._validate_model_class(),Qt=this._prepare_generation_config(Qt,ke);let{inputs_tensor:Ue,model_inputs:yt,model_input_name:Nt}=this._prepare_model_inputs({inputs:st,model_kwargs:ke});const Rt=this.config.is_encoder_decoder;Rt&&("encoder_outputs"in yt||(yt=await this._prepare_encoder_decoder_kwargs_for_generation({inputs_tensor:Ue,model_inputs:yt,model_input_name:Nt,generation_config:Qt})));let Yt;Rt?{input_ids:Yt,model_inputs:yt}=this._prepare_decoder_input_ids_for_generation({batch_size:yt[Nt].dims.at(0),model_input_name:Nt,model_kwargs:yt,decoder_start_token_id:Qt.decoder_start_token_id,bos_token_id:Qt.bos_token_id,generation_config:Qt}):Yt=yt[Nt];let cr=Yt.dims.at(-1);Qt.max_new_tokens!==null&&(Qt.max_length=cr+Qt.max_new_tokens);const mr=this._get_logits_processor(Qt,cr,Jt),br=this._get_stopping_criteria(Qt,$t),Cr=yt[Nt].dims.at(0),Pr=Ie.LogitsSampler.getSampler(Qt),Zr=new Array(Cr).fill(0),ms=Yt.tolist();ie&&ie.put(ms);let Ur,rs={};for(;;){if(yt=this.prepare_inputs_for_generation(ms,yt,Qt),Ur=await this.forward(yt),Qt.output_attentions&&Qt.return_dict_in_generate){const ha=this.getAttentions(Ur);for(const wa in ha)wa in rs||(rs[wa]=[]),rs[wa].push(ha[wa])}const Ns=Ur.logits.slice(null,-1,null),ca=mr(ms,Ns),pa=[];for(let ha=0;ha<ca.dims.at(0);++ha){const wa=ca[ha],qa=await Pr(wa);for(const[Nn,ua]of qa){const Ln=BigInt(Nn);Zr[ha]+=ua,ms[ha].push(Ln),pa.push([Ln]);break}}if(ie&&ie.put(pa),br(ms).every(ha=>ha))break;yt=this._update_model_kwargs_for_generation({generated_input_ids:pa,outputs:Ur,model_inputs:yt,is_encoder_decoder:Rt})}ie&&ie.end();const as=this.getPastKeyValues(Ur,yt.past_key_values,!0),xs=new Q.Tensor("int64",ms.flat(),[ms.length,ms[0].length]);if(Qt.return_dict_in_generate)return{sequences:xs,past_key_values:as,...rs};for(const Ns of Object.values(Ur))Ns.location==="gpu-buffer"&&Ns.dispose();return xs}getPastKeyValues(st,Qt,Jt=!1){const $t=Object.create(null);for(const ie in st)if(ie.startsWith("present")){const ke=ie.replace("present","past_key_values"),Ue=ie.includes("encoder");if(Ue&&Qt?$t[ke]=Qt[ke]:$t[ke]=st[ie],Qt&&(!Ue||Jt)){const yt=Qt[ke];yt.location==="gpu-buffer"&&yt.dispose()}}return $t}getAttentions(st){const Qt={};for(const Jt of["cross_attentions","encoder_attentions","decoder_attentions"])for(const $t in st)$t.startsWith(Jt)&&(Jt in Qt||(Qt[Jt]=[]),Qt[Jt].push(st[$t]));return Qt}addPastKeyValues(st,Qt){var Jt,$t,ie;if(Qt)Object.assign(st,Qt);else{const ke=this.sessions.decoder_model_merged??this.sessions.model,Ue=((Jt=ke==null?void 0:ke.config)==null?void 0:Jt.kv_cache_dtype)??"float32",yt=Ue==="float16"?new Uint16Array:[],Nt=((ie=($t=st[this.main_input_name]??st.attention_mask)==null?void 0:$t.dims)==null?void 0:ie[0])??1,Rt=(0,w.getKeyValueShapes)(this.config,{batch_size:Nt});for(const Yt in Rt)st[Yt]=new Q.Tensor(Ue,yt,Rt[Yt])}}async encode_image({pixel_values:st}){const Qt=(await Ve(this.sessions.vision_encoder,{pixel_values:st})).image_features;return this.config.num_image_tokens||(console.warn(`The number of image tokens was not set in the model configuration. Setting it to the number of features detected by the vision encoder (${Qt.dims[1]}).`),this.config.num_image_tokens=Qt.dims[1]),Qt}async encode_text({input_ids:st}){return(await Ve(this.sessions.embed_tokens,{input_ids:st})).inputs_embeds}}class bt{}class rt extends bt{constructor({last_hidden_state:Te,hidden_states:st=null,attentions:Qt=null}){super(),this.last_hidden_state=Te,this.hidden_states=st,this.attentions=Qt}}class Ne extends Je{}class it extends Ne{}class Et extends Ne{async _call(Te){return new Qn(await super._call(Te))}}class $e extends Ne{async _call(Te){return new Os(await super._call(Te))}}class It extends Ne{async _call(Te){return new $a(await super._call(Te))}}class Tt extends Ne{async _call(Te){return new qn(await super._call(Te))}}class zt extends Je{}class Wt extends zt{}class pe extends zt{async _call(Te){return new Qn(await super._call(Te))}}class Ut extends zt{async _call(Te){return new Os(await super._call(Te))}}class Pe extends zt{async _call(Te){return new $a(await super._call(Te))}}class X extends Je{}class ge extends X{}class fe extends Je{}class He extends fe{}class ct extends fe{async _call(Te){return new Qn(await super._call(Te))}}class kt extends fe{async _call(Te){return new Os(await super._call(Te))}}class Dt extends fe{async _call(Te){return new $a(await super._call(Te))}}class Ht extends fe{async _call(Te){return new qn(await super._call(Te))}}class Vt extends Je{}class sr extends Vt{}class nr extends Vt{async _call(Te){return new Qn(await super._call(Te))}}class lr extends Vt{async _call(Te){return new Os(await super._call(Te))}}class Fr extends Vt{async _call(Te){return new $a(await super._call(Te))}}class ns extends Vt{async _call(Te){return new qn(await super._call(Te))}}class Gs extends Je{}class Cs extends Gs{}class Ks extends Gs{async _call(Te){return new Qn(await super._call(Te))}}class is extends Gs{async _call(Te){return new Os(await super._call(Te))}}class wn extends Gs{async _call(Te){return new $a(await super._call(Te))}}class oa extends Gs{async _call(Te){return new qn(await super._call(Te))}}class Ea extends Je{}class gr extends Ea{}class Wr extends Ea{async _call(Te){return new Qn(await super._call(Te))}}class vr extends Ea{async _call(Te){return new Os(await super._call(Te))}}class Es extends Ea{async _call(Te){return new $a(await super._call(Te))}}class pn extends Ea{async _call(Te){return new qn(await super._call(Te))}}class Ba extends Je{}class In extends Ba{}class ln extends Ba{async _call(Te){return new Qn(await super._call(Te))}}class hn extends Ba{async _call(Te){return new Os(await super._call(Te))}}class kn extends Ba{async _call(Te){return new $a(await super._call(Te))}}class sa extends Ba{async _call(Te){return new qn(await super._call(Te))}}class tr extends Je{}class Qr extends tr{}class jr extends tr{async _call(Te){return new Qn(await super._call(Te))}}class Vs extends tr{async _call(Te){return new Os(await super._call(Te))}}class xn extends tr{async _call(Te){return new $a(await super._call(Te))}}class Ss extends tr{async _call(Te){return new qn(await super._call(Te))}}class Ls extends Je{}class Xa extends Ls{}class _a extends Ls{async _call(Te){return new Os(await super._call(Te))}}class Tn extends Ls{async _call(Te){return new $a(await super._call(Te))}}class Ms extends Ls{async _call(Te){return new qn(await super._call(Te))}}class Mi extends Ls{async _call(Te){return new Qn(await super._call(Te))}}class Ma extends Je{}class Jn extends Ma{}class $n extends Ma{async _call(Te){return new Qn(await super._call(Te))}}class Ei extends Ma{async _call(Te){return new Os(await super._call(Te))}}class Pn extends Ma{async _call(Te){return new $a(await super._call(Te))}}class Dn extends Je{}class ma extends Dn{}class Bi extends Dn{async _call(Te){return new Qn(await super._call(Te))}}class Vn extends Dn{async _call(Te){return new Os(await super._call(Te))}}class Sn extends Dn{async _call(Te){return new qn(await super._call(Te))}}class cn extends Je{}class ei extends cn{}class ti extends cn{async _call(Te){return new Qn(await super._call(Te))}}class ri extends cn{async _call(Te){return new Os(await super._call(Te))}}class ds extends cn{async _call(Te){return new $a(await super._call(Te))}}class ys extends cn{async _call(Te){return new qn(await super._call(Te))}}class qr extends Je{}class pi extends qr{}class Ai extends qr{async _call(Te){return new Qn(await super._call(Te))}}class hi extends qr{async _call(Te){return new Os(await super._call(Te))}}class Wn extends qr{async _call(Te){return new qn(await super._call(Te))}}class Gn extends Je{}class qt extends Gn{}class Qe extends Gn{async _call(Te){return new Os(await super._call(Te))}}class ut extends Gn{async _call(Te){return new qn(await super._call(Te))}}class wt extends Gn{async _call(Te){return new Qn(await super._call(Te))}}class tt extends Je{constructor(){super(...arguments);We(this,"forward_params",["input_ids","attention_mask","encoder_outputs","decoder_input_ids","decoder_attention_mask","past_key_values"])}}class Ae extends tt{}class Ge extends tt{}class at extends Je{}class Le extends at{}class vt extends at{}class Pt extends Je{}class ir extends Pt{}class yr extends Pt{}class hr extends Je{}class xr extends hr{}class Gr extends hr{}class wr extends hr{async _call(Te){return new Os(await super._call(Te))}}class _r extends Je{}class gs extends _r{}class Xr extends _r{}class hs extends _r{async _call(Te){return new Os(await super._call(Te))}}class Bs extends _r{}class Or extends Je{}class Kt extends Or{}class rr extends Or{}class Lr extends Je{}class Rs extends Lr{}class Ws extends Lr{}class Vr extends Je{}class Js extends Vr{}class qs extends Vr{async _call(Te){return new Qn(await super._call(Te))}}class es extends Vr{async _call(Te){return new Os(await super._call(Te))}}class _s extends Vr{async _call(Te){return new $a(await super._call(Te))}}class Rr extends Vr{async _call(Te){return new qn(await super._call(Te))}}class cs extends Je{}class Da extends cs{}class Us extends cs{async _call(Te){return new Qn(await super._call(Te))}}class Ua extends cs{async _call(Te){return new Os(await super._call(Te))}}class Ir extends cs{async _call(Te){return new $a(await super._call(Te))}}class Sa extends cs{async _call(Te){return new qn(await super._call(Te))}}class or extends Je{}class ss extends or{}class qA extends or{async _call(Te){return new Qn(await super._call(Te))}}class kA extends or{async _call(Te){return new Os(await super._call(Te))}}class XA extends or{async _call(Te){return new $a(await super._call(Te))}}class lo extends or{async _call(Te){return new qn(await super._call(Te))}}class ws extends Je{}class ZA extends ws{}class Eo extends ws{}class Mn extends Je{constructor(){super(...arguments);We(this,"requires_attention_mask",!1);We(this,"main_input_name","input_features");We(this,"forward_params",["input_features","attention_mask","decoder_input_ids","decoder_attention_mask","past_key_values"])}}class tn extends Mn{}class Hr extends Mn{_prepare_generation_config(Te,st){return super._prepare_generation_config(Te,st,re.WhisperGenerationConfig)}_retrieve_init_tokens(Te){const st=[Te.decoder_start_token_id];let Qt=Te.language;const Jt=Te.task;if(Te.is_multilingual){Qt||(console.warn("No language specified - defaulting to English (en)."),Qt="en");const ie=`<|${(0,ce.whisper_language_to_code)(Qt)}|>`;st.push(Te.lang_to_id[ie]),st.push(Te.task_to_id[Jt??"transcribe"])}else if(Qt||Jt)throw new Error("Cannot specify `task` or `language` for an English-only model. If the model is intended to be multilingual, pass `is_multilingual=true` to generate, or update the generation config.");return!Te.return_timestamps&&Te.no_timestamps_token_id&&st.at(-1)!==Te.no_timestamps_token_id?st.push(Te.no_timestamps_token_id):Te.return_timestamps&&st.at(-1)===Te.no_timestamps_token_id&&(console.warn("<|notimestamps|> prompt token is removed from generation_config since `return_timestamps` is set to `true`."),st.pop()),st.filter($t=>$t!=null)}async generate({inputs:Te=null,generation_config:st=null,logits_processor:Qt=null,stopping_criteria:Jt=null,...$t}){st=this._prepare_generation_config(st,$t);const ie=$t.decoder_input_ids??this._retrieve_init_tokens(st);if(st.return_timestamps&&(Qt??(Qt=new D.LogitsProcessorList),Qt.push(new D.WhisperTimeStampLogitsProcessor(st,ie))),st.begin_suppress_tokens&&(Qt??(Qt=new D.LogitsProcessorList),Qt.push(new D.SuppressTokensAtBeginLogitsProcessor(st.begin_suppress_tokens,ie.length))),st.return_token_timestamps){if(!st.alignment_heads)throw new Error("Model generation config has no `alignment_heads`, token-level timestamps not available. See https://gist.github.com/hollance/42e32852f24243b748ae6bc1f985b13a on how to add this property to the generation config.");st.task==="translate"&&console.warn("Token-level timestamps may not be reliable for task 'translate'."),st.output_attentions=!0,st.return_dict_in_generate=!0}const ke=await super.generate({inputs:Te,generation_config:st,logits_processor:Qt,decoder_input_ids:ie,...$t});return st.return_token_timestamps&&(ke.token_timestamps=this._extract_token_timestamps(ke,st.alignment_heads,st.num_frames)),ke}_extract_token_timestamps(Te,st,Qt=null,Jt=.02){if(!Te.cross_attentions)throw new Error("Model outputs must contain cross attentions to extract timestamps. This is most likely because the model was not exported with `output_attentions=True`.");Qt==null&&console.warn("`num_frames` has not been set, meaning the entire audio will be analyzed. This may lead to inaccurate token-level timestamps for short audios (< 30 seconds).");let $t=this.config.median_filter_width;$t===void 0&&(console.warn("Model config has no `median_filter_width`, using default value of 7."),$t=7);const ie=Te.cross_attentions,ke=Array.from({length:this.config.decoder_layers},(br,Cr)=>(0,Q.cat)(ie.map(Pr=>Pr[Cr]),2)),Ue=(0,Q.stack)(st.map(([br,Cr])=>{if(br>=ke.length)throw new Error(`Layer index ${br} is out of bounds for cross attentions (length ${ke.length}).`);return Qt?ke[br].slice(null,Cr,null,[0,Qt]):ke[br].slice(null,Cr)})).transpose(1,0,2,3),[yt,Nt]=(0,Q.std_mean)(Ue,-2,0,!0),Rt=Ue.clone();for(let br=0;br<Rt.dims[0];++br){const Cr=Rt[br];for(let Pr=0;Pr<Cr.dims[0];++Pr){const Zr=Cr[Pr],ms=yt[br][Pr][0].data,Ur=Nt[br][Pr][0].data;for(let rs=0;rs<Zr.dims[0];++rs){let as=Zr[rs].data;for(let xs=0;xs<as.length;++xs)as[xs]=(as[xs]-Ur[xs])/ms[xs];as.set((0,oe.medianFilter)(as,$t))}}}const Yt=[(0,Q.mean)(Rt,1)],cr=Te.sequences.dims,mr=new Q.Tensor("float32",new Float32Array(cr[0]*cr[1]),cr);for(let br=0;br<cr[0];++br){const Cr=Yt[br].neg().squeeze_(0),[Pr,Zr]=(0,oe.dynamic_time_warping)(Cr.tolist()),ms=Array.from({length:Pr.length-1},(as,xs)=>Pr[xs+1]-Pr[xs]),Ur=(0,H.mergeArrays)([1],ms).map(as=>!!as),rs=[];for(let as=0;as<Ur.length;++as)Ur[as]&&rs.push(Zr[as]*Jt);mr[br].data.set(rs,1)}return mr}}class yn extends Je{constructor(){super(...arguments);We(this,"requires_attention_mask",!1);We(this,"main_input_name","input_values");We(this,"forward_params",["input_values","decoder_input_ids","past_key_values"])}}class Un extends yn{}class Uo extends yn{}class Ho extends Je{constructor(){super(...arguments);We(this,"main_input_name","pixel_values");We(this,"forward_params",["pixel_values","decoder_input_ids","encoder_hidden_states","past_key_values"])}}class Ni extends Je{constructor(){super(...arguments);We(this,"forward_params",["input_ids","attention_mask","pixel_values","position_ids","past_key_values"])}}class Yo extends Ni{_merge_input_ids_with_image_features({inputs_embeds:Te,image_features:st,input_ids:Qt,attention_mask:Jt}){const $t=this.config.image_token_index,ke=Qt.tolist().map(Yt=>Yt.findIndex(cr=>cr==$t)),Ue=ke.every(Yt=>Yt===-1),yt=ke.every(Yt=>Yt!==-1);if(!Ue&&!yt)throw new Error("Every input should contain either 0 or 1 image token.");if(Ue)return{inputs_embeds:Te,attention_mask:Jt};const Nt=[],Rt=[];for(let Yt=0;Yt<ke.length;++Yt){const cr=ke[Yt],mr=Te[Yt],br=st[Yt],Cr=Jt[Yt];Nt.push((0,Q.cat)([mr.slice([0,cr]),br,mr.slice([cr+1,mr.dims[0]])],0)),Rt.push((0,Q.cat)([Cr.slice([0,cr]),(0,Q.ones)([br.dims[0]]),Cr.slice([cr+1,Cr.dims[0]])],0))}return{inputs_embeds:(0,Q.stack)(Nt,0),attention_mask:(0,Q.stack)(Rt,0)}}}class yA extends Yo{}class Dl extends Yo{}class Fn extends Je{constructor(){super(...arguments);We(this,"forward_params",["input_ids","inputs_embeds","attention_mask","pixel_values","encoder_outputs","decoder_input_ids","decoder_inputs_embeds","decoder_attention_mask","past_key_values"]);We(this,"main_input_name","inputs_embeds")}}class aa extends Fn{_merge_input_ids_with_image_features({inputs_embeds:Te,image_features:st,input_ids:Qt,attention_mask:Jt}){return{inputs_embeds:(0,Q.cat)([st,Te],1),attention_mask:(0,Q.cat)([(0,Q.ones)(st.dims.slice(0,2)),Jt],1)}}async _prepare_inputs_embeds({input_ids:Te,pixel_values:st,inputs_embeds:Qt,attention_mask:Jt}){if(!Te&&!st)throw new Error("Either `input_ids` or `pixel_values` should be provided.");let $t,ie;return Te&&($t=await this.encode_text({input_ids:Te})),st&&(ie=await this.encode_image({pixel_values:st})),$t&&ie?{inputs_embeds:Qt,attention_mask:Jt}=this._merge_input_ids_with_image_features({inputs_embeds:$t,image_features:ie,input_ids:Te,attention_mask:Jt}):Qt=$t||ie,{inputs_embeds:Qt,attention_mask:Jt}}async forward({input_ids:Te,pixel_values:st,attention_mask:Qt,decoder_input_ids:Jt,decoder_attention_mask:$t,encoder_outputs:ie,past_key_values:ke,inputs_embeds:Ue,decoder_inputs_embeds:yt}){if(Ue||({inputs_embeds:Ue,attention_mask:Qt}=await this._prepare_inputs_embeds({input_ids:Te,pixel_values:st,inputs_embeds:Ue,attention_mask:Qt})),!ie){let{last_hidden_state:Yt}=await Ct(this,{inputs_embeds:Ue,attention_mask:Qt});ie=Yt}if(!yt){if(!Jt)throw new Error("Either `decoder_input_ids` or `decoder_inputs_embeds` should be provided.");yt=await this.encode_text({input_ids:Jt})}return await ht(this,{inputs_embeds:yt,attention_mask:$t,encoder_attention_mask:Qt,encoder_hidden_states:ie,past_key_values:ke},!0)}}class Bo extends Je{constructor(){super(...arguments);We(this,"forward_params",["input_ids","attention_mask","pixel_values","position_ids","past_key_values"])}}class To extends Bo{_merge_input_ids_with_image_features(Te){const st=Te.image_features.dims.at(-1),Qt=Te.image_features.view(-1,st);return et({image_token_id:this.config.image_token_index,...Te,image_features:Qt})}}class _n extends Je{constructor(){super(...arguments);We(this,"forward_params",["input_ids","attention_mask","pixel_values","pixel_attention_mask","position_ids","past_key_values"])}}class Li extends _n{async encode_image({pixel_values:Te,pixel_attention_mask:st}){return(await Ve(this.sessions.vision_encoder,{pixel_values:Te,pixel_attention_mask:st})).image_features}_merge_input_ids_with_image_features(Te){const st=Te.image_features.dims.at(-1),Qt=Te.image_features.view(-1,st);return et({image_token_id:this.config.image_token_id,...Te,image_features:Qt})}}class mi extends Je{constructor(){super(...arguments);We(this,"forward_params",["input_ids","inputs_embeds","attention_mask","position_ids","pixel_values","image_sizes","past_key_values"])}}class Hn extends mi{async forward({input_ids:Te=null,attention_mask:st=null,pixel_values:Qt=null,image_sizes:Jt=null,position_ids:$t=null,inputs_embeds:ie=null,past_key_values:ke=null,generation_config:Ue=null,logits_processor:yt=null,...Nt}){if(!ie){let Yt;if(Qt&&Te.dims[1]!==1){if(!Jt)throw new Error("`image_sizes` must be provided when `pixel_values` is provided.");({image_features:Yt}=await Ve(this.sessions.vision_encoder,{pixel_values:Qt,image_sizes:Jt}))}else{const cr=this.config.normalized_config.hidden_size;Yt=new Q.Tensor("float32",[],[0,cr])}({inputs_embeds:ie}=await Ve(this.sessions.prepare_inputs_embeds,{input_ids:Te,image_features:Yt}))}return await ht(this,{inputs_embeds:ie,past_key_values:ke,attention_mask:st,position_ids:$t,generation_config:Ue,logits_processor:yt},!1)}}class Ri extends Je{}class Xi extends Ri{}class JA extends Ri{static async from_pretrained(Te,st={}){return super.from_pretrained(Te,{...st,model_file_name:st.model_file_name??"text_model"})}}class _A extends Ri{static async from_pretrained(Te,st={}){return super.from_pretrained(Te,{...st,model_file_name:st.model_file_name??"text_model"})}}class $A extends Ri{static async from_pretrained(Te,st={}){return super.from_pretrained(Te,{...st,model_file_name:st.model_file_name??"vision_model"})}}class Br extends Ri{static async from_pretrained(Te,st={}){return super.from_pretrained(Te,{...st,model_file_name:st.model_file_name??"vision_model"})}}class ji extends Je{}class Nr extends ji{}class vA extends ji{static async from_pretrained(Te,st={}){return super.from_pretrained(Te,{...st,model_file_name:st.model_file_name??"text_model"})}}class Ko extends Ri{static async from_pretrained(Te,st={}){return super.from_pretrained(Te,{...st,model_file_name:st.model_file_name??"vision_model"})}}class En extends Je{}class Ga extends En{}class Vi extends Je{}class Zi extends Vi{async forward(Te){const st=!Te.input_ids,Qt=!Te.pixel_values;if(st&&Qt)throw new Error("Either `input_ids` or `pixel_values` should be provided.");if(st&&(Te.input_ids=(0,Q.ones)([Te.pixel_values.dims[0],1])),Qt){const{image_size:yt}=this.config.vision_config;Te.pixel_values=(0,Q.full)([0,3,yt,yt],0)}const{text_embeddings:Jt,image_embeddings:$t,l2norm_text_embeddings:ie,l2norm_image_embeddings:ke}=await super.forward(Te),Ue={};return st||(Ue.text_embeddings=Jt,Ue.l2norm_text_embeddings=ie),Qt||(Ue.image_embeddings=$t,Ue.l2norm_image_embeddings=ke),Ue}}class qo extends Vi{static async from_pretrained(Te,st={}){return super.from_pretrained(Te,{...st,model_file_name:st.model_file_name??"text_model"})}}class ia extends Vi{static async from_pretrained(Te,st={}){return super.from_pretrained(Te,{...st,model_file_name:st.model_file_name??"vision_model"})}}class xA extends Je{}class el extends xA{}class Wi extends xA{}class Ji extends Je{}class tl extends Ji{}class Xo extends Ji{}class $i extends Je{}class zr extends $i{}class li extends $i{}class Zo extends Je{}class zn extends Zo{}class Ti extends Zo{}class Jo extends Je{}class rl extends Jo{}class sl extends Jo{}class Po extends Je{}class al extends Po{}class nl extends Po{}class La extends Je{}class il extends La{}class ol extends La{}class ps extends Je{}class Fs extends ps{}class MA extends ps{}class ci extends Je{}class EA extends ci{}class mn extends ci{}class bi extends Je{}class Za extends bi{}class Pi extends bi{}class Do extends Je{}class BA extends Do{}class So extends Do{}class Go extends Je{}class Ta extends Go{}class co extends Go{}class $o extends Je{}class un extends $o{}class uo extends $o{}class Ci extends Je{}class Al extends Ci{}class TA extends Ci{}class eA extends Je{}class tA extends eA{}class Di extends eA{}class Fo extends Je{}class ea extends Fo{}class PA extends Fo{}class rA extends Je{}class Si extends rA{}class sA extends rA{}class Ra extends Je{}class DA extends Ra{}class aA extends Ra{}class go extends Je{}class On extends go{}class zo extends go{}class nA extends Je{}class ui extends nA{}class SA extends nA{}class Oo extends Je{}class fo extends Oo{}class po extends Oo{}class Qo extends Je{constructor(){super(...arguments);We(this,"forward_params",["input_ids","attention_mask","position_ids","past_key_values","pixel_values","image_grid_thw"])}}class ll extends Qo{get_rope_index(Te,st,Qt,Jt){const{vision_config:$t,image_token_id:ie,video_token_id:ke,vision_start_token_id:Ue}=this.config,yt=$t.spatial_merge_size??2,Nt=[];if(st||Qt){let Rt=Te.tolist();Jt||(Jt=(0,Q.ones_like)(Te));const Yt=Jt.tolist(),cr=Array.from({length:3},Zr=>Array.from({length:Te.dims[0]},ms=>Array.from({length:Te.dims[1]},Ur=>1))),mr=st?st.tolist():[],br=Qt?Qt.tolist():[];let Cr=0,Pr=0;for(let Zr=0;Zr<Rt.length;++Zr){const ms=Rt[Zr].filter((Ia,ja)=>Yt[Zr][ja]==1),rs=ms.reduce((Ia,ja,ki)=>(ja==Ue&&Ia.push(ki),Ia),[]).map(Ia=>ms[Ia+1]),as=rs.filter(Ia=>Ia==ie).length,xs=rs.filter(Ia=>Ia==ke).length;let Ns=[],ca=0,pa=as,nn=xs;for(let Ia=0;Ia<rs.length;++Ia){const ja=ms.findIndex((Oi,Xn)=>Xn>ca&&Oi==ie),ki=ms.findIndex((Oi,Xn)=>Xn>ca&&Oi==ke),io=pa>0&&ja!==-1?ja:ms.length+1,kl=nn>0&&ki!==-1?ki:ms.length+1;let Y0,ka,on,ai;io<kl?([ka,on,ai]=mr[Cr],++Cr,--pa,Y0=io):([ka,on,ai]=br[Pr],++Pr,--nn,Y0=kl);const[yl,vo,Wo]=[Number(ka),Math.floor(Number(on)/yt),Math.floor(Number(ai)/yt)],UA=Y0-ca,oo=Ns.length>0?(0,oe.max)(Ns.at(-1))[0]+1:0;Ns.push(Array.from({length:3*UA},(Oi,Xn)=>oo+Xn%UA));const _l=UA+oo,HA=yl*vo*Wo,e0=Array.from({length:HA},(Oi,Xn)=>_l+Math.floor(Xn/(vo*Wo))),Ao=Array.from({length:HA},(Oi,Xn)=>_l+Math.floor(Xn/Wo)%vo),gi=Array.from({length:HA},(Oi,Xn)=>_l+Xn%Wo);Ns.push([e0,Ao,gi].flat()),ca=Y0+HA}if(ca<ms.length){const Ia=Ns.length>0?(0,oe.max)(Ns.at(-1))[0]+1:0,ja=ms.length-ca;Ns.push(Array.from({length:3*ja},(ki,io)=>Ia+io%ja))}const ha=Ns.reduce((Ia,ja)=>Ia+ja.length,0),wa=new Array(ha);let qa=0;for(let Ia=0;Ia<3;++Ia)for(let ja=0;ja<Ns.length;++ja){const ki=Ns[ja],io=ki.length/3;for(let kl=Ia*io;kl<(Ia+1)*io;++kl)wa[qa++]=ki[kl]}let Nn=0;const ua=Yt[Zr];for(let Ia=0;Ia<ua.length;++Ia)if(ua[Ia]==1){for(let ja=0;ja<3;++ja)cr[ja][Zr][Ia]=wa[ja*ha/3+Nn];++Nn}const Ln=(0,oe.max)(wa)[0];Nt.push(Ln+1-Rt[Zr].length)}return[new Q.Tensor("int64",cr.flat(1/0),[3,Te.dims[0],Te.dims[1]]),new Q.Tensor("int64",Nt,[Nt.length,1])]}else if(Jt){const{data:Rt,dims:Yt}=Se(Jt),cr=BigInt64Array.from({length:3*Rt.length},(br,Cr)=>Rt[Cr%Rt.length]),mr=Array.from({length:Yt[0]},(br,Cr)=>(0,oe.max)(Rt.subarray(Yt[1]*Cr,Yt[1]*(Cr+1)))[0]+1n+BigInt(Yt[1]));return[new Q.Tensor("int64",cr,[3,...Yt]),new Q.Tensor("int64",mr,[mr.length,1])]}else{const[Rt,Yt]=Te.dims,cr=BigInt64Array.from({length:3*Rt*Yt},(mr,br)=>BigInt(Math.floor(br%Yt/Rt)));return[new Q.Tensor("int64",cr,[3,...Te.dims]),(0,Q.zeros)([Rt,1])]}}async encode_image({pixel_values:Te,image_grid_thw:st}){return(await Ve(this.sessions.vision_encoder,{pixel_values:Te,grid_thw:st})).image_features}_merge_input_ids_with_image_features(Te){return et({image_token_id:this.config.image_token_id,...Te})}prepare_inputs_for_generation(Te,st,Qt){if(st.attention_mask&&!st.position_ids)if(!st.past_key_values)[st.position_ids,st.rope_deltas]=this.get_rope_index(st.input_ids,st.image_grid_thw,st.video_grid_thw,st.attention_mask);else{st.pixel_values=null;const Jt=BigInt(Object.values(st.past_key_values)[0].dims.at(-2)),$t=st.rope_deltas.map(ie=>Jt+ie);st.position_ids=(0,Q.stack)([$t,$t,$t],0)}return st}}class GA extends Je{}class dn extends GA{}class No extends GA{}class gn extends Je{}class FA extends gn{}class iA extends gn{}class Yn extends Je{}class ba extends Yn{}class zA extends Yn{}class Gi extends Je{}class ho extends Gi{}class cl extends Gi{}class oA extends Je{}class OA extends oA{}class ul extends oA{}class wi extends Je{}class di extends wi{}class AA extends wi{async _call(Te){return new Os(await super._call(Te))}}class eo extends Je{}class rn extends eo{}class na extends eo{async _call(Te){return new Os(await super._call(Te))}}class mo extends Je{}class dl extends mo{}class Fi extends Je{}class Ui extends Fi{}class Hi extends Fi{async _call(Te){return new Os(await super._call(Te))}}class QA extends Je{}class bn extends QA{}class NA extends Je{}class gl extends NA{}class bo extends NA{async _call(Te){return new Os(await super._call(Te))}}class Lo extends Je{}class Ca extends Lo{}class lA extends Je{}class cA extends lA{}class to extends lA{async _call(Te){return new Os(await super._call(Te))}}class fl extends Je{}class Co extends fl{async _call(Te){return new qu(await super._call(Te))}}class os extends Je{}class t extends os{}class r extends os{async _call(Te){return new Os(await super._call(Te))}}class s extends Je{}class a extends s{}class i extends s{async _call(Te){return new Os(await super._call(Te))}}class o extends Je{}class d extends o{}class f extends o{}class m extends Je{}class M extends m{}class y extends m{}class P extends Je{}class q extends P{}class ae extends P{async _call(Te){return new Os(await super._call(Te))}}class de extends Je{}class ye extends de{}class Be extends de{async _call(Te){return new ot(await super._call(Te))}}class qe extends de{async _call(Te){return new pt(await super._call(Te))}}class ot extends bt{constructor({logits:Te,pred_boxes:st}){super(),this.logits=Te,this.pred_boxes=st}}class pt extends bt{constructor({logits:Te,pred_boxes:st,pred_masks:Qt}){super(),this.logits=Te,this.pred_boxes=st,this.pred_masks=Qt}}class Mt extends Je{}class Ft extends Mt{}class Lt extends Mt{async _call(Te){return new Xt(await super._call(Te))}}class Xt extends bt{constructor({logits:Te,pred_boxes:st}){super(),this.logits=Te,this.pred_boxes=st}}class Ar extends Je{}class Mr extends Ar{}class Tr extends Ar{async _call(Te){return new Yr(await super._call(Te))}}class Yr extends ot{}class $r extends Je{}class ls extends $r{}class Ts extends $r{async _call(Te){return new Os(await super._call(Te))}}class Hs extends Je{}class $s extends Hs{}class ga extends Hs{async _call(Te){return new Os(await super._call(Te))}}class fa extends Je{}class Pa extends fa{}class Fa extends fa{async _call(Te){return new Os(await super._call(Te))}}class za extends Je{}class Ha extends za{}class Ya extends za{async _call(Te){return new Os(await super._call(Te))}}class Ja extends Je{}class sn extends Ja{}class vn extends Ja{}class si extends Je{}class Ii extends si{}class zi extends si{}class Yi extends Je{}class Ro extends Yi{}class ro extends Je{}class wo extends ro{}class so extends ro{}class LA extends ro{}class uA extends Je{}class RA extends uA{}class Io extends Je{}class J0 extends Io{}class $0 extends Io{}class Sl extends Je{}class fu extends Sl{}class ec extends Sl{}class tc extends Je{}class rc extends tc{}class i0 extends Je{}class o0 extends i0{}class A0 extends i0{async _call(Te){return new Os(await super._call(Te))}}class l0 extends Je{}class sc extends l0{}class c0 extends l0{async _call(Te){return new Os(await super._call(Te))}}class Gl extends Je{}class ac extends Gl{}class pu extends Gl{async _call(Te){return new Os(await super._call(Te))}}class Fl extends Je{}class nc extends Fl{}class ic extends Fl{async _call(Te){return new Os(await super._call(Te))}}class oc extends Je{}class Ac extends oc{}class Ki extends Je{}class ao extends Ki{}class dA extends Ki{async _call(Te){return new gA(await super._call(Te))}}class gA extends bt{constructor({logits:Te,pred_boxes:st}){super(),this.logits=Te,this.pred_boxes=st}}class hu extends Je{}class zl extends hu{async get_image_embeddings({pixel_values:Te}){return await Ct(this,{pixel_values:Te})}async forward(Te){if((!Te.image_embeddings||!Te.image_positional_embeddings)&&(Te={...Te,...await this.get_image_embeddings(Te)}),!Te.input_labels&&Te.input_points){const Qt=Te.input_points.dims.slice(0,-1),Jt=Qt.reduce(($t,ie)=>$t*ie,1);Te.input_labels=new Q.Tensor("int64",new BigInt64Array(Jt).fill(1n),Qt)}const st={image_embeddings:Te.image_embeddings,image_positional_embeddings:Te.image_positional_embeddings};return Te.input_points&&(st.input_points=Te.input_points),Te.input_labels&&(st.input_labels=Te.input_labels),Te.input_boxes&&(st.input_boxes=Te.input_boxes),await Ve(this.sessions.prompt_encoder_mask_decoder,st)}async _call(Te){return new jA(await super._call(Te))}}class jA extends bt{constructor({iou_scores:Te,pred_masks:st}){super(),this.iou_scores=Te,this.pred_masks=st}}class Ol extends Je{}class lc extends Ol{}class cc extends Ol{}class u0 extends Je{}class uc extends u0{}class d0 extends u0{}class an extends Je{}class dc extends an{}class gc extends an{async _call(Te){return new Il(await super._call(Te))}}class g0 extends an{async _call(Te){return new Os(await super._call(Te))}}class fc extends an{async _call(Te){return new $a(await super._call(Te))}}class fA extends Je{}class jo extends fA{}class pc extends fA{async _call(Te){return new $a(await super._call(Te))}}class hc extends Je{}class mu extends hc{}class Ql extends Je{}class Nl extends Ql{}class bu extends Ql{async _call(Te){return new Il(await super._call(Te))}}class mc extends Ql{async _call(Te){return new Os(await super._call(Te))}}class pl extends Je{}class bc extends pl{}class hl extends pl{async _call(Te){return new Il(await super._call(Te))}}class Cu extends pl{async _call(Te){return new Os(await super._call(Te))}}class f0 extends pl{async _call(Te){return new $a(await super._call(Te))}}class Ll extends Je{}class ml extends Ll{}class wu extends Ll{async _call(Te){return new Il(await super._call(Te))}}class Cc extends Ll{async _call(Te){return new Os(await super._call(Te))}}class Iu extends Je{}class wc extends an{}class Rl extends an{async _call(Te){return new Il(await super._call(Te))}}class ku extends an{async _call(Te){return new Os(await super._call(Te))}}class VA extends Je{}class Ic extends VA{}class yu extends VA{async _call(Te){return new Il(await super._call(Te))}}class kc extends VA{async _call(Te){return new Os(await super._call(Te))}}class _u extends VA{async _call(Te){return new H0(await super._call(Te))}}class yc extends VA{async _call(Te){return new $a(await super._call(Te))}}class WA extends Je{}class _c extends WA{}class jl extends Je{}class ed extends jl{}class no extends jl{}class ko extends jl{async generate_speech(Te,st,{threshold:Qt=.5,minlenratio:Jt=0,maxlenratio:$t=20,vocoder:ie=null}={}){const ke={input_ids:Te},{encoder_outputs:Ue,encoder_attention_mask:yt}=await Ct(this,ke),Nt=Ue.dims[1]/this.config.reduction_factor,Rt=Math.floor(Nt*$t),Yt=Math.floor(Nt*Jt),cr=this.config.num_mel_bins;let mr=[],br=null,Cr=null,Pr=0;for(;;){++Pr;const Ur=Ke(!!Cr);let rs;Cr?rs=Cr.output_sequence_out:rs=new Q.Tensor("float32",new Float32Array(cr),[1,1,cr]);let as={use_cache_branch:Ur,output_sequence:rs,encoder_attention_mask:yt,speaker_embeddings:st,encoder_hidden_states:Ue};this.addPastKeyValues(as,br),Cr=await Ve(this.sessions.decoder_model_merged,as),br=this.getPastKeyValues(Cr,br);const{prob:xs,spectrum:Ns}=Cr;if(mr.push(Ns),Pr>=Yt&&(Array.from(xs.data).filter(ca=>ca>=Qt).length>0||Pr>=Rt))break}const Zr=(0,Q.cat)(mr),{waveform:ms}=await Ve(ie.sessions.model,{spectrogram:Zr});return{spectrogram:Zr,waveform:ms}}}class pA extends Je{constructor(){super(...arguments);We(this,"main_input_name","spectrogram")}}class hA extends Je{}class mA extends hA{}class p0 extends Je{}class h0 extends p0{}class m0 extends p0{}class Vl extends Je{}class vc extends Vl{}class xc extends Vl{}class bl extends Je{}class b0 extends bl{}class Mc extends bl{}class Wl extends Je{}class Kn extends Wl{}class Ec extends Wl{static async from_pretrained(Te,st={}){return super.from_pretrained(Te,{...st,model_file_name:st.model_file_name??"text_model"})}}class C0 extends Wl{static async from_pretrained(Te,st={}){return super.from_pretrained(Te,{...st,model_file_name:st.model_file_name??"audio_model"})}}class Ul extends Je{}class w0 extends Ul{async _call(Te){return new Bn(await super._call(Te))}}class yo extends Je{}class vu extends yo{}class Bc extends yo{}class Tc extends yo{}class I0 extends Je{}class k0 extends I0{}class Hl extends I0{}class y0 extends Je{}class Pc extends y0{}class Dc extends y0{async _call(Te){return new Os(await super._call(Te))}}class Yl extends Je{}class xu extends Yl{}class Mu extends Yl{}class Cl extends Je{constructor(){super(...arguments);We(this,"forward_params",["input_ids","attention_mask","encoder_outputs","decoder_input_ids","decoder_attention_mask","past_key_values"])}_apply_and_filter_by_delay_pattern_mask(st){const[Qt,Jt]=st.dims,$t=this.config.decoder.num_codebooks,ie=Jt-$t;let ke=0;for(let Nt=0;Nt<st.size;++Nt){if(st.data[Nt]===this.config.decoder.pad_token_id)continue;const Rt=Nt%Jt,Yt=Math.floor(Nt/Jt)%$t,cr=Rt-Yt;cr>0&&cr<=ie&&(st.data[ke++]=st.data[Nt])}const Ue=Math.floor(Qt/$t),yt=ke/(Ue*$t);return new Q.Tensor(st.type,st.data.slice(0,ke),[Ue,$t,yt])}prepare_inputs_for_generation(st,Qt,Jt){let $t=structuredClone(st);for(let ke=0;ke<$t.length;++ke)for(let Ue=0;Ue<$t[ke].length;++Ue)ke%this.config.decoder.num_codebooks>=Ue&&($t[ke][Ue]=BigInt(this.config.decoder.pad_token_id));return Jt.guidance_scale!==null&&Jt.guidance_scale>1&&($t=$t.concat($t)),super.prepare_inputs_for_generation($t,Qt,Jt)}async generate(st){const Qt=await super.generate(st),Jt=this._apply_and_filter_by_delay_pattern_mask(Qt).unsqueeze_(0),{audio_values:$t}=await Ve(this.sessions.encodec_decode,{audio_codes:Jt});return $t}}class _0 extends Je{}class Eu extends _0{}class Kl extends _0{async _call(Te){return new Os(await super._call(Te))}}class v0 extends Je{}class Bu extends v0{}class x0 extends v0{async _call(Te){return new Os(await super._call(Te))}}class M0 extends Je{}class Sc extends M0{}class Gc extends M0{async _call(Te){return new Os(await super._call(Te))}}class ql extends Je{}class Tu extends ql{}class Fc extends ql{async _call(Te){return new Os(await super._call(Te))}}class Xl extends Je{}class Pu extends Xl{}class zc extends Je{}class E0 extends zc{constructor(...st){super(...st);We(this,"forward_params",["input_ids","pixel_values","images_seq_mask","images_emb_mask","attention_mask","position_ids","past_key_values"]);this._generation_mode="text"}async forward(st){const Qt=this._generation_mode??"text";let Jt;if(Qt==="text"||!st.past_key_values){const yt=this.sessions.prepare_inputs_embeds,Nt=(0,H.pick)(st,yt.inputNames);Jt=await Ve(yt,Nt)}else{const yt=this.sessions.gen_img_embeds,Nt=(0,H.pick)({image_ids:st.input_ids},yt.inputNames);Jt=await Ve(yt,Nt)}const $t={...st,...Jt},ie=await ht(this,$t),ke=this.sessions[Qt==="text"?"lm_head":"gen_head"];if(!ke)throw new Error(`Unable to find "${ke}" generation head`);const Ue=await Ve(ke,(0,H.pick)(ie,ke.inputNames));return{...Jt,...ie,...Ue}}async generate(st){return this._generation_mode="text",super.generate(st)}async generate_images(st){this._generation_mode="image";const Qt=(st.inputs??st[this.main_input_name]).dims[1],$t=(await super.generate(st)).slice(null,[Qt,null]),ie=this.sessions.image_decode,{decoded_image:ke}=await Ve(ie,{generated_tokens:$t}),Ue=ke.add_(1).mul_(255/2).clamp_(0,255).to("uint8"),yt=[];for(const Nt of Ue){const Rt=J.RawImage.fromTensor(Nt);yt.push(Rt)}return yt}}class Oc extends bt{constructor({char_logits:Te,bpe_logits:st,wp_logits:Qt}){super(),this.char_logits=Te,this.bpe_logits=st,this.wp_logits=Qt}get logits(){return[this.char_logits,this.bpe_logits,this.wp_logits]}}class Qc extends Je{}class Nc extends Qc{async _call(Te){return new Oc(await super._call(Te))}}class Lc extends Je{}class Rc extends Lc{}class jc extends Lc{}class B0 extends Je{}class Vc extends B0{}class Wc extends B0{}class Aa{static async from_pretrained(Te,{progress_callback:st=null,config:Qt=null,cache_dir:Jt=null,local_files_only:$t=!1,revision:ie="main",model_file_name:ke=null,subfolder:Ue="onnx",device:yt=null,dtype:Nt=null,use_external_data_format:Rt=null,session_options:Yt={}}={}){const cr={progress_callback:st,config:Qt,cache_dir:Jt,local_files_only:$t,revision:ie,model_file_name:ke,subfolder:Ue,device:yt,dtype:Nt,use_external_data_format:Rt,session_options:Yt};if(cr.config=await w.AutoConfig.from_pretrained(Te,cr),!this.MODEL_CLASS_MAPPINGS)throw new Error("`MODEL_CLASS_MAPPINGS` not implemented for this type of `AutoClass`: "+this.name);for(const mr of this.MODEL_CLASS_MAPPINGS){const br=mr.get(cr.config.model_type);if(br)return await br[1].from_pretrained(Te,cr)}if(this.BASE_IF_FAIL)return console.warn(`Unknown model class "${cr.config.model_type}", attempting to construct from base class.`),await Je.from_pretrained(Te,cr);throw Error(`Unsupported model type: ${cr.config.model_type}`)}}We(Aa,"MODEL_CLASS_MAPPINGS",null),We(Aa,"BASE_IF_FAIL",!1);const Du=new Map([["bert",["BertModel",it]],["modernbert",["ModernBertModel",Wt]],["nomic_bert",["NomicBertModel",ge]],["roformer",["RoFormerModel",He]],["electra",["ElectraModel",Cs]],["esm",["EsmModel",Jn]],["convbert",["ConvBertModel",sr]],["camembert",["CamembertModel",gr]],["deberta",["DebertaModel",In]],["deberta-v2",["DebertaV2Model",Qr]],["mpnet",["MPNetModel",ei]],["albert",["AlbertModel",qt]],["distilbert",["DistilBertModel",Xa]],["roberta",["RobertaModel",Js]],["xlm",["XLMModel",Da]],["xlm-roberta",["XLMRobertaModel",ss]],["clap",["ClapModel",Kn]],["clip",["CLIPModel",Xi]],["clipseg",["CLIPSegModel",el]],["chinese_clip",["ChineseCLIPModel",Ga]],["siglip",["SiglipModel",Nr]],["jina_clip",["JinaCLIPModel",Zi]],["mobilebert",["MobileBertModel",ma]],["squeezebert",["SqueezeBertModel",pi]],["wav2vec2",["Wav2Vec2Model",dc]],["wav2vec2-bert",["Wav2Vec2BertModel",ml]],["unispeech",["UniSpeechModel",Nl]],["unispeech-sat",["UniSpeechSatModel",bc]],["hubert",["HubertModel",wc]],["wavlm",["WavLMModel",Ic]],["audio-spectrogram-transformer",["ASTModel",ZA]],["vits",["VitsModel",w0]],["pyannote",["PyAnnoteModel",jo]],["wespeaker-resnet",["WeSpeakerResNetModel",mu]],["detr",["DetrModel",ye]],["rt_detr",["RTDetrModel",Ft]],["table-transformer",["TableTransformerModel",Mr]],["vit",["ViTModel",di]],["ijepa",["IJepaModel",rn]],["pvt",["PvtModel",Ui]],["vit_msn",["ViTMSNModel",gl]],["vit_mae",["ViTMAEModel",bn]],["groupvit",["GroupViTModel",Ca]],["fastvit",["FastViTModel",cA]],["mobilevit",["MobileViTModel",t]],["mobilevitv2",["MobileViTV2Model",a]],["owlvit",["OwlViTModel",d]],["owlv2",["Owlv2Model",M]],["beit",["BeitModel",q]],["deit",["DeiTModel",ls]],["hiera",["HieraModel",$s]],["convnext",["ConvNextModel",o0]],["convnextv2",["ConvNextV2Model",sc]],["dinov2",["Dinov2Model",ac]],["dinov2_with_registers",["Dinov2WithRegistersModel",nc]],["resnet",["ResNetModel",Pa]],["swin",["SwinModel",Ha]],["swin2sr",["Swin2SRModel",sn]],["donut-swin",["DonutSwinModel",rc]],["yolos",["YolosModel",ao]],["dpt",["DPTModel",Ii]],["glpn",["GLPNModel",fu]],["hifigan",["SpeechT5HifiGan",pA]],["efficientnet",["EfficientNetModel",Pc]],["decision_transformer",["DecisionTransformerModel",Pu]],["patchtst",["PatchTSTForPrediction",Rc]],["patchtsmixer",["PatchTSMixerForPrediction",Vc]],["mobilenet_v1",["MobileNetV1Model",Eu]],["mobilenet_v2",["MobileNetV2Model",Bu]],["mobilenet_v3",["MobileNetV3Model",Sc]],["mobilenet_v4",["MobileNetV4Model",Tu]],["maskformer",["MaskFormerModel",J0]],["mgp-str",["MgpstrForSceneTextRecognition",Nc]],["style_text_to_speech_2",["StyleTextToSpeech2Model",_c]]]),Zl=new Map([["t5",["T5Model",Ae]],["longt5",["LongT5Model",Le]],["mt5",["MT5Model",ir]],["bart",["BartModel",xr]],["mbart",["MBartModel",gs]],["marian",["MarianModel",lc]],["whisper",["WhisperModel",tn]],["m2m_100",["M2M100Model",uc]],["blenderbot",["BlenderbotModel",Kt]],["blenderbot-small",["BlenderbotSmallModel",Rs]]]),Uc=new Map([["bloom",["BloomModel",ba]],["jais",["JAISModel",zr]],["gpt2",["GPT2Model",tl]],["gptj",["GPTJModel",al]],["gpt_bigcode",["GPTBigCodeModel",il]],["gpt_neo",["GPTNeoModel",zn]],["gpt_neox",["GPTNeoXModel",rl]],["codegen",["CodeGenModel",Fs]],["llama",["LlamaModel",EA]],["exaone",["ExaoneModel",Ta]],["olmo",["OlmoModel",Al]],["olmo2",["Olmo2Model",tA]],["mobilellm",["MobileLLMModel",un]],["granite",["GraniteModel",ea]],["cohere",["CohereModel",Si]],["gemma",["GemmaModel",DA]],["gemma2",["Gemma2Model",On]],["helium",["HeliumModel",Za]],["glm",["GlmModel",BA]],["openelm",["OpenELMModel",ui]],["qwen2",["Qwen2Model",fo]],["phi",["PhiModel",dn]],["phi3",["Phi3Model",FA]],["mpt",["MptModel",ho]],["opt",["OPTModel",OA]],["mistral",["MistralModel",h0]],["starcoder2",["Starcoder2Model",vc]],["falcon",["FalconModel",b0]],["stablelm",["StableLmModel",k0]]]),T0=new Map([["speecht5",["SpeechT5ForSpeechToText",no]],["whisper",["WhisperForConditionalGeneration",Hr]],["moonshine",["MoonshineForConditionalGeneration",Uo]]]),wl=new Map([["speecht5",["SpeechT5ForTextToSpeech",ko]]]),la=new Map([["vits",["VitsModel",w0]],["musicgen",["MusicgenForConditionalGeneration",Cl]]]),Hc=new Map([["bert",["BertForSequenceClassification",$e]],["modernbert",["ModernBertForSequenceClassification",Ut]],["roformer",["RoFormerForSequenceClassification",kt]],["electra",["ElectraForSequenceClassification",is]],["esm",["EsmForSequenceClassification",Ei]],["convbert",["ConvBertForSequenceClassification",lr]],["camembert",["CamembertForSequenceClassification",vr]],["deberta",["DebertaForSequenceClassification",hn]],["deberta-v2",["DebertaV2ForSequenceClassification",Vs]],["mpnet",["MPNetForSequenceClassification",ri]],["albert",["AlbertForSequenceClassification",Qe]],["distilbert",["DistilBertForSequenceClassification",_a]],["roberta",["RobertaForSequenceClassification",es]],["xlm",["XLMForSequenceClassification",Ua]],["xlm-roberta",["XLMRobertaForSequenceClassification",kA]],["bart",["BartForSequenceClassification",wr]],["mbart",["MBartForSequenceClassification",hs]],["mobilebert",["MobileBertForSequenceClassification",Vn]],["squeezebert",["SqueezeBertForSequenceClassification",hi]]]),Yc=new Map([["bert",["BertForTokenClassification",It]],["modernbert",["ModernBertForTokenClassification",Pe]],["roformer",["RoFormerForTokenClassification",Dt]],["electra",["ElectraForTokenClassification",wn]],["esm",["EsmForTokenClassification",Pn]],["convbert",["ConvBertForTokenClassification",Fr]],["camembert",["CamembertForTokenClassification",Es]],["deberta",["DebertaForTokenClassification",kn]],["deberta-v2",["DebertaV2ForTokenClassification",xn]],["mpnet",["MPNetForTokenClassification",ds]],["distilbert",["DistilBertForTokenClassification",Tn]],["roberta",["RobertaForTokenClassification",_s]],["xlm",["XLMForTokenClassification",Ir]],["xlm-roberta",["XLMRobertaForTokenClassification",XA]]]),P0=new Map([["t5",["T5ForConditionalGeneration",Ge]],["longt5",["LongT5ForConditionalGeneration",vt]],["mt5",["MT5ForConditionalGeneration",yr]],["bart",["BartForConditionalGeneration",Gr]],["mbart",["MBartForConditionalGeneration",Xr]],["marian",["MarianMTModel",cc]],["m2m_100",["M2M100ForConditionalGeneration",d0]],["blenderbot",["BlenderbotForConditionalGeneration",rr]],["blenderbot-small",["BlenderbotSmallForConditionalGeneration",Ws]]]),Jl=new Map([["bloom",["BloomForCausalLM",zA]],["gpt2",["GPT2LMHeadModel",Xo]],["jais",["JAISLMHeadModel",li]],["gptj",["GPTJForCausalLM",nl]],["gpt_bigcode",["GPTBigCodeForCausalLM",ol]],["gpt_neo",["GPTNeoForCausalLM",Ti]],["gpt_neox",["GPTNeoXForCausalLM",sl]],["codegen",["CodeGenForCausalLM",MA]],["llama",["LlamaForCausalLM",mn]],["exaone",["ExaoneForCausalLM",co]],["olmo",["OlmoForCausalLM",TA]],["olmo2",["Olmo2ForCausalLM",Di]],["mobilellm",["MobileLLMForCausalLM",uo]],["granite",["GraniteForCausalLM",PA]],["cohere",["CohereForCausalLM",sA]],["gemma",["GemmaForCausalLM",aA]],["gemma2",["Gemma2ForCausalLM",zo]],["helium",["HeliumForCausalLM",Pi]],["glm",["GlmForCausalLM",So]],["openelm",["OpenELMForCausalLM",SA]],["qwen2",["Qwen2ForCausalLM",po]],["phi",["PhiForCausalLM",No]],["phi3",["Phi3ForCausalLM",iA]],["mpt",["MptForCausalLM",cl]],["opt",["OPTForCausalLM",ul]],["mbart",["MBartForCausalLM",Bs]],["mistral",["MistralForCausalLM",m0]],["starcoder2",["Starcoder2ForCausalLM",xc]],["falcon",["FalconForCausalLM",Mc]],["trocr",["TrOCRForCausalLM",mA]],["stablelm",["StableLmForCausalLM",Hl]],["phi3_v",["Phi3VForCausalLM",Hn]]]),Su=new Map([["multi_modality",["MultiModalityCausalLM",E0]]]),D0=new Map([["bert",["BertForMaskedLM",Et]],["modernbert",["ModernBertForMaskedLM",pe]],["roformer",["RoFormerForMaskedLM",ct]],["electra",["ElectraForMaskedLM",Ks]],["esm",["EsmForMaskedLM",$n]],["convbert",["ConvBertForMaskedLM",nr]],["camembert",["CamembertForMaskedLM",Wr]],["deberta",["DebertaForMaskedLM",ln]],["deberta-v2",["DebertaV2ForMaskedLM",jr]],["mpnet",["MPNetForMaskedLM",ti]],["albert",["AlbertForMaskedLM",wt]],["distilbert",["DistilBertForMaskedLM",Mi]],["roberta",["RobertaForMaskedLM",qs]],["xlm",["XLMWithLMHeadModel",Us]],["xlm-roberta",["XLMRobertaForMaskedLM",qA]],["mobilebert",["MobileBertForMaskedLM",Bi]],["squeezebert",["SqueezeBertForMaskedLM",Ai]]]),$l=new Map([["bert",["BertForQuestionAnswering",Tt]],["roformer",["RoFormerForQuestionAnswering",Ht]],["electra",["ElectraForQuestionAnswering",oa]],["convbert",["ConvBertForQuestionAnswering",ns]],["camembert",["CamembertForQuestionAnswering",pn]],["deberta",["DebertaForQuestionAnswering",sa]],["deberta-v2",["DebertaV2ForQuestionAnswering",Ss]],["mpnet",["MPNetForQuestionAnswering",ys]],["albert",["AlbertForQuestionAnswering",ut]],["distilbert",["DistilBertForQuestionAnswering",Ms]],["roberta",["RobertaForQuestionAnswering",Rr]],["xlm",["XLMForQuestionAnswering",Sa]],["xlm-roberta",["XLMRobertaForQuestionAnswering",lo]],["mobilebert",["MobileBertForQuestionAnswering",Sn]],["squeezebert",["SqueezeBertForQuestionAnswering",Wn]]]),S0=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",Ho]],["idefics3",["Idefics3ForConditionalGeneration",Li]]]),Kc=new Map([["llava",["LlavaForConditionalGeneration",Yo]],["llava_onevision",["LlavaOnevisionForConditionalGeneration",yA]],["moondream1",["Moondream1ForConditionalGeneration",Dl]],["florence2",["Florence2ForConditionalGeneration",aa]],["qwen2-vl",["Qwen2VLForConditionalGeneration",ll]],["idefics3",["Idefics3ForConditionalGeneration",Li]],["paligemma",["PaliGemmaForConditionalGeneration",To]]]),G0=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",Ho]]]),Gu=new Map([["vit",["ViTForImageClassification",AA]],["ijepa",["IJepaForImageClassification",na]],["pvt",["PvtForImageClassification",Hi]],["vit_msn",["ViTMSNForImageClassification",bo]],["fastvit",["FastViTForImageClassification",to]],["mobilevit",["MobileViTForImageClassification",r]],["mobilevitv2",["MobileViTV2ForImageClassification",i]],["beit",["BeitForImageClassification",ae]],["deit",["DeiTForImageClassification",Ts]],["hiera",["HieraForImageClassification",ga]],["convnext",["ConvNextForImageClassification",A0]],["convnextv2",["ConvNextV2ForImageClassification",c0]],["dinov2",["Dinov2ForImageClassification",pu]],["dinov2_with_registers",["Dinov2WithRegistersForImageClassification",ic]],["resnet",["ResNetForImageClassification",Fa]],["swin",["SwinForImageClassification",Ya]],["segformer",["SegformerForImageClassification",Bc]],["efficientnet",["EfficientNetForImageClassification",Dc]],["mobilenet_v1",["MobileNetV1ForImageClassification",Kl]],["mobilenet_v2",["MobileNetV2ForImageClassification",x0]],["mobilenet_v3",["MobileNetV3ForImageClassification",Gc]],["mobilenet_v4",["MobileNetV4ForImageClassification",Fc]]]),qc=new Map([["detr",["DetrForObjectDetection",Be]],["rt_detr",["RTDetrForObjectDetection",Lt]],["table-transformer",["TableTransformerForObjectDetection",Tr]],["yolos",["YolosForObjectDetection",dA]]]),F0=new Map([["owlvit",["OwlViTForObjectDetection",f]],["owlv2",["Owlv2ForObjectDetection",y]],["grounding-dino",["GroundingDinoForObjectDetection",Ac]]]),z0=new Map([["detr",["DetrForSegmentation",qe]],["clipseg",["CLIPSegForImageSegmentation",Wi]]]),Fu=new Map([["segformer",["SegformerForSemanticSegmentation",Tc]],["sapiens",["SapiensForSemanticSegmentation",wo]]]),zu=new Map([["detr",["DetrForSegmentation",qe]],["maskformer",["MaskFormerForInstanceSegmentation",$0]]]),Xc=new Map([["sam",["SamModel",zl]]]),Ou=new Map([["wav2vec2",["Wav2Vec2ForCTC",gc]],["wav2vec2-bert",["Wav2Vec2BertForCTC",wu]],["unispeech",["UniSpeechForCTC",bu]],["unispeech-sat",["UniSpeechSatForCTC",hl]],["wavlm",["WavLMForCTC",yu]],["hubert",["HubertForCTC",Rl]]]),Zc=new Map([["wav2vec2",["Wav2Vec2ForSequenceClassification",g0]],["wav2vec2-bert",["Wav2Vec2BertForSequenceClassification",Cc]],["unispeech",["UniSpeechForSequenceClassification",mc]],["unispeech-sat",["UniSpeechSatForSequenceClassification",Cu]],["wavlm",["WavLMForSequenceClassification",kc]],["hubert",["HubertForSequenceClassification",ku]],["audio-spectrogram-transformer",["ASTForAudioClassification",Eo]]]),Jc=new Map([["wavlm",["WavLMForXVector",_u]]]),$c=new Map([["unispeech-sat",["UniSpeechSatForAudioFrameClassification",f0]],["wavlm",["WavLMForAudioFrameClassification",yc]],["wav2vec2",["Wav2Vec2ForAudioFrameClassification",fc]],["pyannote",["PyAnnoteForAudioFrameClassification",pc]]]),eu=new Map([["vitmatte",["VitMatteForImageMatting",Co]]]),Qu=new Map([["patchtst",["PatchTSTForPrediction",jc]],["patchtsmixer",["PatchTSMixerForPrediction",Wc]]]),tu=new Map([["swin2sr",["Swin2SRForImageSuperResolution",vn]]]),O0=new Map([["dpt",["DPTForDepthEstimation",zi]],["depth_anything",["DepthAnythingForDepthEstimation",Ro]],["glpn",["GLPNForDepthEstimation",ec]],["sapiens",["SapiensForDepthEstimation",so]],["depth_pro",["DepthProForDepthEstimation",RA]]]),Q0=new Map([["sapiens",["SapiensForNormalEstimation",LA]]]),ru=new Map([["vitpose",["VitPoseForPoseEstimation",dl]]]),su=new Map([["clip",["CLIPVisionModelWithProjection",Br]],["siglip",["SiglipVisionModel",Ko]],["jina_clip",["JinaCLIPVisionModel",ia]]]),Nu=[[Du,g.EncoderOnly],[Zl,g.EncoderDecoder],[Uc,g.DecoderOnly],[Hc,g.EncoderOnly],[Yc,g.EncoderOnly],[P0,g.Seq2Seq],[T0,g.Seq2Seq],[Jl,g.DecoderOnly],[Su,g.MultiModality],[D0,g.EncoderOnly],[$l,g.EncoderOnly],[S0,g.Vision2Seq],[Kc,g.ImageTextToText],[Gu,g.EncoderOnly],[z0,g.EncoderOnly],[zu,g.EncoderOnly],[Fu,g.EncoderOnly],[eu,g.EncoderOnly],[Qu,g.EncoderOnly],[tu,g.EncoderOnly],[O0,g.EncoderOnly],[Q0,g.EncoderOnly],[ru,g.EncoderOnly],[qc,g.EncoderOnly],[F0,g.EncoderOnly],[Xc,g.MaskGeneration],[Ou,g.EncoderOnly],[Zc,g.EncoderOnly],[wl,g.Seq2Seq],[la,g.EncoderOnly],[Jc,g.EncoderOnly],[$c,g.EncoderOnly],[su,g.EncoderOnly]];for(const[he,Te]of Nu)for(const[st,Qt]of he.values())I.set(st,Te),u.set(Qt,st),e.set(st,Qt);const au=[["MusicgenForConditionalGeneration",Cl,g.Musicgen],["Phi3VForCausalLM",Hn,g.Phi3V],["CLIPTextModelWithProjection",_A,g.EncoderOnly],["SiglipTextModel",vA,g.EncoderOnly],["JinaCLIPTextModel",qo,g.EncoderOnly],["ClapTextModelWithProjection",Ec,g.EncoderOnly],["ClapAudioModelWithProjection",C0,g.EncoderOnly]];for(const[he,Te,st]of au)I.set(he,st),u.set(Te,he),e.set(he,Te);class N0 extends Aa{}We(N0,"MODEL_CLASS_MAPPINGS",Nu.map(Te=>Te[0])),We(N0,"BASE_IF_FAIL",!0);class Lu extends Aa{}We(Lu,"MODEL_CLASS_MAPPINGS",[Hc]);class Ru extends Aa{}We(Ru,"MODEL_CLASS_MAPPINGS",[Yc]);class L0 extends Aa{}We(L0,"MODEL_CLASS_MAPPINGS",[P0]);class bA extends Aa{}We(bA,"MODEL_CLASS_MAPPINGS",[T0]);class R0 extends Aa{}We(R0,"MODEL_CLASS_MAPPINGS",[wl]);class nu extends Aa{}We(nu,"MODEL_CLASS_MAPPINGS",[la]);class ju extends Aa{}We(ju,"MODEL_CLASS_MAPPINGS",[Jl]);class Is extends Aa{}We(Is,"MODEL_CLASS_MAPPINGS",[D0]);class iu extends Aa{}We(iu,"MODEL_CLASS_MAPPINGS",[$l]);class _o extends Aa{}We(_o,"MODEL_CLASS_MAPPINGS",[S0]);class ou extends Aa{}We(ou,"MODEL_CLASS_MAPPINGS",[Gu]);class j0 extends Aa{}We(j0,"MODEL_CLASS_MAPPINGS",[z0]);class Vu extends Aa{}We(Vu,"MODEL_CLASS_MAPPINGS",[Fu]);class Ka extends Aa{}We(Ka,"MODEL_CLASS_MAPPINGS",[zu]);class Ps extends Aa{}We(Ps,"MODEL_CLASS_MAPPINGS",[qc]);class zs extends Aa{}We(zs,"MODEL_CLASS_MAPPINGS",[F0]);class Vo extends Aa{}We(Vo,"MODEL_CLASS_MAPPINGS",[Xc]);class Wu extends Aa{}We(Wu,"MODEL_CLASS_MAPPINGS",[Ou]);class V0 extends Aa{}We(V0,"MODEL_CLASS_MAPPINGS",[Zc]);class Uu extends Aa{}We(Uu,"MODEL_CLASS_MAPPINGS",[Jc]);class W0 extends Aa{}We(W0,"MODEL_CLASS_MAPPINGS",[$c]);class td extends Aa{}We(td,"MODEL_CLASS_MAPPINGS",[G0]);class Hu extends Aa{}We(Hu,"MODEL_CLASS_MAPPINGS",[eu]);class U0 extends Aa{}We(U0,"MODEL_CLASS_MAPPINGS",[tu]);class Yu extends Aa{}We(Yu,"MODEL_CLASS_MAPPINGS",[O0]);class rd extends Aa{}We(rd,"MODEL_CLASS_MAPPINGS",[Q0]);class Ku extends Aa{}We(Ku,"MODEL_CLASS_MAPPINGS",[ru]);class CA extends Aa{}We(CA,"MODEL_CLASS_MAPPINGS",[su]);class Au extends bt{constructor({logits:Te,past_key_values:st,encoder_outputs:Qt,decoder_attentions:Jt=null,cross_attentions:$t=null}){super(),this.logits=Te,this.past_key_values=st,this.encoder_outputs=Qt,this.decoder_attentions=Jt,this.cross_attentions=$t}}class Os extends bt{constructor({logits:Te,...st}){super(),this.logits=Te;const Qt=Object.values(st);Qt.length>0&&(this.attentions=Qt)}}class H0 extends bt{constructor({logits:Te,embeddings:st}){super(),this.logits=Te,this.embeddings=st}}class $a extends bt{constructor({logits:Te}){super(),this.logits=Te}}class Qn extends bt{constructor({logits:Te}){super(),this.logits=Te}}class qn extends bt{constructor({start_logits:Te,end_logits:st}){super(),this.start_logits=Te,this.end_logits=st}}class Il extends bt{constructor({logits:Te}){super(),this.logits=Te}}class Qs extends bt{constructor({logits:Te,past_key_values:st}){super(),this.logits=Te,this.past_key_values=st}}class qu extends bt{constructor({alphas:Te}){super(),this.alphas=Te}}class Bn extends bt{constructor({waveform:Te,spectrogram:st}){super(),this.waveform=Te,this.spectrogram=st}}},"./src/models/audio_spectrogram_transformer/feature_extraction_audio_spectrogram_transformer.js":(T,k,A)=>{A.r(k),A.d(k,{ASTFeatureExtractor:()=>Y});var w=A("./src/base/feature_extraction_utils.js");A("./src/utils/tensor.js");var F=A("./src/utils/audio.js");class Y extends w.FeatureExtractor{constructor(H){super(H);const z=this.config.sampling_rate,N=(0,F.mel_filter_bank)(256,this.config.num_mel_bins,20,Math.floor(z/2),z,null,"kaldi",!0);for(let D=0;D<N.length;++D)N[D].push(0);this.mel_filters=N,this.window=(0,F.window_function)(400,"hann",{periodic:!1}),this.mean=this.config.mean,this.std=this.config.std}async _extract_fbank_features(H,z){return(0,F.spectrogram)(H,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,max_num_frames:z,transpose:!0})}async _call(H){(0,w.validate_audio_inputs)(H,"ASTFeatureExtractor");const z=await this._extract_fbank_features(H,this.config.max_length);if(this.config.do_normalize){const N=this.std*2,D=z.data;for(let R=0;R<D.length;++R)D[R]=(D[R]-this.mean)/N}return{input_values:z.unsqueeze_(0)}}}},"./src/models/auto/feature_extraction_auto.js":(T,k,A)=>{A.r(k),A.d(k,{AutoFeatureExtractor:()=>U});var w=A("./src/utils/constants.js"),F=A("./src/utils/hub.js");A("./src/base/feature_extraction_utils.js");var Y=A("./src/models/feature_extractors.js");class U{static async from_pretrained(z,N={}){const D=await(0,F.getModelJSON)(z,w.FEATURE_EXTRACTOR_NAME,!0,N),R=D.feature_extractor_type,Q=Y[R];if(!Q)throw new Error(`Unknown feature_extractor_type: '${R}'. Please report this at ${w.GITHUB_ISSUE_URL}.`);return new Q(D)}}},"./src/models/auto/image_processing_auto.js":(T,k,A)=>{A.r(k),A.d(k,{AutoImageProcessor:()=>H});var w=A("./src/utils/constants.js"),F=A("./src/utils/hub.js"),Y=A("./src/base/image_processors_utils.js"),U=A("./src/models/image_processors.js");class H{static async from_pretrained(N,D={}){const R=await(0,F.getModelJSON)(N,w.IMAGE_PROCESSOR_NAME,!0,D),Q=R.image_processor_type??R.feature_extractor_type;let J=U[Q];return J||(Q!==void 0&&console.warn(`Image processor type '${Q}' not found, assuming base ImageProcessor. Please report this at ${w.GITHUB_ISSUE_URL}.`),J=Y.ImageProcessor),new J(R)}}},"./src/models/auto/processing_auto.js":(T,k,A)=>{A.r(k),A.d(k,{AutoProcessor:()=>N});var w=A("./src/utils/constants.js"),F=A("./src/utils/hub.js"),Y=A("./src/base/processing_utils.js"),U=A("./src/models/processors.js"),H=A("./src/models/image_processors.js"),z=A("./src/models/feature_extractors.js");class N{static async from_pretrained(R,Q={}){const J=await(0,F.getModelJSON)(R,w.IMAGE_PROCESSOR_NAME,!0,Q),{image_processor_type:oe,feature_extractor_type:be,processor_class:Ie}=J;if(Ie&&U[Ie])return U[Ie].from_pretrained(R,Q);if(!oe&&!be)throw new Error("No `image_processor_type` or `feature_extractor_type` found in the config.");const ee={};if(oe){const ce=H[oe];if(!ce)throw new Error(`Unknown image_processor_type: '${oe}'.`);ee.image_processor=new ce(J)}if(be){const ce=H[be];if(ce)ee.image_processor=new ce(J);else{const g=z[be];if(!g)throw new Error(`Unknown feature_extractor_type: '${be}'.`);ee.feature_extractor=new g(J)}}const re={};return new Y.Processor(re,ee)}}},"./src/models/beit/image_processing_beit.js":(T,k,A)=>{A.r(k),A.d(k,{BeitFeatureExtractor:()=>F});var w=A("./src/base/image_processors_utils.js");class F extends w.ImageProcessor{}},"./src/models/bit/image_processing_bit.js":(T,k,A)=>{A.r(k),A.d(k,{BitImageProcessor:()=>F});var w=A("./src/base/image_processors_utils.js");class F extends w.ImageProcessor{}},"./src/models/chinese_clip/image_processing_chinese_clip.js":(T,k,A)=>{A.r(k),A.d(k,{ChineseCLIPFeatureExtractor:()=>F});var w=A("./src/base/image_processors_utils.js");class F extends w.ImageProcessor{}},"./src/models/clap/feature_extraction_clap.js":(T,k,A)=>{A.r(k),A.d(k,{ClapFeatureExtractor:()=>Y});var w=A("./src/base/feature_extraction_utils.js");A("./src/utils/tensor.js");var F=A("./src/utils/audio.js");class Y extends w.FeatureExtractor{constructor(H){super(H),this.mel_filters=(0,F.mel_filter_bank)(this.config.nb_frequency_bins,this.config.feature_size,this.config.frequency_min,this.config.frequency_max,this.config.sampling_rate,null,"htk"),this.mel_filters_slaney=(0,F.mel_filter_bank)(this.config.nb_frequency_bins,this.config.feature_size,this.config.frequency_min,this.config.frequency_max,this.config.sampling_rate,"slaney","slaney"),this.window=(0,F.window_function)(this.config.fft_window_size,"hann")}async _get_input_mel(H,z,N,D){let R;const Q=H.length-z;if(Q>0)if(N==="rand_trunc"){const J=Math.floor(Math.random()*(Q+1));H=H.subarray(J,J+z),R=await this._extract_fbank_features(H,this.mel_filters_slaney,this.config.nb_max_samples)}else throw new Error(`Truncation strategy "${N}" not implemented`);else{if(Q<0){let J=new Float64Array(z);if(J.set(H),D==="repeat")for(let oe=H.length;oe<z;oe+=H.length)J.set(H.subarray(0,Math.min(H.length,z-oe)),oe);else if(D==="repeatpad")for(let oe=H.length;oe<-Q;oe+=H.length)J.set(H,oe);H=J}if(N==="fusion")throw new Error(`Truncation strategy "${N}" not implemented`);R=await this._extract_fbank_features(H,this.mel_filters_slaney,this.config.nb_max_samples)}return R.unsqueeze_(0)}async _extract_fbank_features(H,z,N=null){return(0,F.spectrogram)(H,this.window,this.config.fft_window_size,this.config.hop_length,{power:2,mel_filters:z,log_mel:"dB",max_num_frames:N,do_pad:!1,transpose:!0})}async _call(H,{max_length:z=null}={}){return(0,w.validate_audio_inputs)(H,"ClapFeatureExtractor"),{input_features:(await this._get_input_mel(H,z??this.config.nb_max_samples,this.config.truncation,this.config.padding)).unsqueeze_(0)}}}},"./src/models/clip/image_processing_clip.js":(T,k,A)=>{A.r(k),A.d(k,{CLIPFeatureExtractor:()=>Y,CLIPImageProcessor:()=>F});var w=A("./src/base/image_processors_utils.js");class F extends w.ImageProcessor{}class Y extends F{}},"./src/models/convnext/image_processing_convnext.js":(T,k,A)=>{A.r(k),A.d(k,{ConvNextFeatureExtractor:()=>Y,ConvNextImageProcessor:()=>F});var w=A("./src/base/image_processors_utils.js");class F extends w.ImageProcessor{constructor(H){super(H),this.crop_pct=this.config.crop_pct??.875}async resize(H){var N;const z=(N=this.size)==null?void 0:N.shortest_edge;if(z===void 0)throw new Error("Size dictionary must contain 'shortest_edge' key.");if(z<384){const D=Math.floor(z/this.crop_pct),[R,Q]=this.get_resize_output_image_size(H,{shortest_edge:D});H=await H.resize(R,Q,{resample:this.resample}),H=await H.center_crop(z,z)}else H=await H.resize(z,z,{resample:this.resample});return H}}class Y extends F{}},"./src/models/deit/image_processing_deit.js":(T,k,A)=>{A.r(k),A.d(k,{DeiTFeatureExtractor:()=>Y,DeiTImageProcessor:()=>F});var w=A("./src/base/image_processors_utils.js");class F extends w.ImageProcessor{}class Y extends F{}},"./src/models/detr/image_processing_detr.js":(T,k,A)=>{A.r(k),A.d(k,{DetrFeatureExtractor:()=>U,DetrImageProcessor:()=>Y});var w=A("./src/base/image_processors_utils.js"),F=A("./src/utils/tensor.js");class Y extends w.ImageProcessor{async _call(z){const N=await super._call(z),D=[N.pixel_values.dims[0],64,64],R=(0,F.full)(D,1n);return{...N,pixel_mask:R}}post_process_object_detection(...z){return(0,w.post_process_object_detection)(...z)}post_process_panoptic_segmentation(...z){return(0,w.post_process_panoptic_segmentation)(...z)}post_process_instance_segmentation(...z){return(0,w.post_process_instance_segmentation)(...z)}}class U extends Y{}},"./src/models/donut/image_processing_donut.js":(T,k,A)=>{A.r(k),A.d(k,{DonutFeatureExtractor:()=>Y,DonutImageProcessor:()=>F});var w=A("./src/base/image_processors_utils.js");class F extends w.ImageProcessor{pad_image(H,z,N,D={}){const[R,Q,J]=z;let oe=this.image_mean;Array.isArray(this.image_mean)||(oe=new Array(J).fill(oe));let be=this.image_std;Array.isArray(be)||(be=new Array(J).fill(oe));const Ie=oe.map((ee,re)=>-ee/be[re]);return super.pad_image(H,z,N,{center:!0,constant_values:Ie,...D})}}class Y extends F{}},"./src/models/dpt/image_processing_dpt.js":(T,k,A)=>{A.r(k),A.d(k,{DPTFeatureExtractor:()=>Y,DPTImageProcessor:()=>F});var w=A("./src/base/image_processors_utils.js");class F extends w.ImageProcessor{}class Y extends F{}},"./src/models/efficientnet/image_processing_efficientnet.js":(T,k,A)=>{A.r(k),A.d(k,{EfficientNetImageProcessor:()=>F});var w=A("./src/base/image_processors_utils.js");class F extends w.ImageProcessor{constructor(U){super(U),this.include_top=this.config.include_top??!0,this.include_top&&(this.image_std=this.image_std.map(H=>H*H))}}},"./src/models/feature_extractors.js":(T,k,A)=>{A.r(k),A.d(k,{ASTFeatureExtractor:()=>w.ASTFeatureExtractor,ClapFeatureExtractor:()=>F.ClapFeatureExtractor,ImageFeatureExtractor:()=>Q.ImageProcessor,MoonshineFeatureExtractor:()=>Y.MoonshineFeatureExtractor,PyAnnoteFeatureExtractor:()=>U.PyAnnoteFeatureExtractor,SeamlessM4TFeatureExtractor:()=>H.SeamlessM4TFeatureExtractor,SpeechT5FeatureExtractor:()=>z.SpeechT5FeatureExtractor,Wav2Vec2FeatureExtractor:()=>N.Wav2Vec2FeatureExtractor,WeSpeakerFeatureExtractor:()=>D.WeSpeakerFeatureExtractor,WhisperFeatureExtractor:()=>R.WhisperFeatureExtractor});var w=A("./src/models/audio_spectrogram_transformer/feature_extraction_audio_spectrogram_transformer.js"),F=A("./src/models/clap/feature_extraction_clap.js"),Y=A("./src/models/moonshine/feature_extraction_moonshine.js"),U=A("./src/models/pyannote/feature_extraction_pyannote.js"),H=A("./src/models/seamless_m4t/feature_extraction_seamless_m4t.js"),z=A("./src/models/speecht5/feature_extraction_speecht5.js"),N=A("./src/models/wav2vec2/feature_extraction_wav2vec2.js"),D=A("./src/models/wespeaker/feature_extraction_wespeaker.js"),R=A("./src/models/whisper/feature_extraction_whisper.js"),Q=A("./src/base/image_processors_utils.js")},"./src/models/florence2/processing_florence2.js":(T,k,A)=>{A.r(k),A.d(k,{Florence2Processor:()=>U});var w=A("./src/base/processing_utils.js"),F=A("./src/models/auto/image_processing_auto.js"),Y=A("./src/tokenizers.js");class U extends w.Processor{constructor(z,N){super(z,N);const{tasks_answer_post_processing_type:D,task_prompts_without_inputs:R,task_prompts_with_input:Q}=this.image_processor.config;this.tasks_answer_post_processing_type=new Map(Object.entries(D??{})),this.task_prompts_without_inputs=new Map(Object.entries(R??{})),this.task_prompts_with_input=new Map(Object.entries(Q??{})),this.regexes={quad_boxes:/(.+?)<loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)>/gm,bboxes:/([^<]+)?<loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)>/gm},this.size_per_bin=1e3}construct_prompts(z){typeof z=="string"&&(z=[z]);const N=[];for(const D of z)if(this.task_prompts_without_inputs.has(D))N.push(this.task_prompts_without_inputs.get(D));else{for(const[R,Q]of this.task_prompts_with_input)if(D.includes(R)){N.push(Q.replaceAll("{input}",D).replaceAll(R,""));break}N.length!==z.length&&N.push(D)}return N}post_process_generation(z,N,D){const R=this.tasks_answer_post_processing_type.get(N)??"pure_text";z=z.replaceAll("<s>","").replaceAll("</s>","");let Q;switch(R){case"pure_text":Q=z;break;case"description_with_bboxes":case"bboxes":case"phrase_grounding":case"ocr":const J=R==="ocr"?"quad_boxes":"bboxes",oe=z.matchAll(this.regexes[J]),be=[],Ie=[];for(const[ee,re,...ce]of oe)be.push(re?re.trim():be.at(-1)??""),Ie.push(ce.map((g,I)=>(Number(g)+.5)/this.size_per_bin*D[I%2]));Q={labels:be,[J]:Ie};break;default:throw new Error(`Task "${N}" (of type "${R}") not yet implemented.`)}return{[N]:Q}}async _call(z,N=null,D={}){if(!z&&!N)throw new Error("Either text or images must be provided");const R=await this.image_processor(z,D),Q=N?this.tokenizer(N,D):{};return{...R,...Q}}}We(U,"tokenizer_class",Y.AutoTokenizer),We(U,"image_processor_class",F.AutoImageProcessor)},"./src/models/glpn/image_processing_glpn.js":(T,k,A)=>{A.r(k),A.d(k,{GLPNFeatureExtractor:()=>F});var w=A("./src/base/image_processors_utils.js");class F extends w.ImageProcessor{}},"./src/models/grounding_dino/image_processing_grounding_dino.js":(T,k,A)=>{A.r(k),A.d(k,{GroundingDinoImageProcessor:()=>Y});var w=A("./src/base/image_processors_utils.js"),F=A("./src/utils/tensor.js");class Y extends w.ImageProcessor{async _call(H){const z=await super._call(H),N=z.pixel_values.dims,D=(0,F.ones)([N[0],N[2],N[3]]);return{...z,pixel_mask:D}}}},"./src/models/grounding_dino/processing_grounding_dino.js":(T,k,A)=>{A.r(k),A.d(k,{GroundingDinoProcessor:()=>z});var w=A("./src/base/processing_utils.js"),F=A("./src/models/auto/image_processing_auto.js"),Y=A("./src/tokenizers.js"),U=A("./src/base/image_processors_utils.js");function H(N,D){const Q=N.dims.at(-1)-1,J=N.tolist();J.fill(!1,0,1),J.fill(!1,Q);const oe=D.tolist();return J.map((be,Ie)=>be?Ie:null).filter(be=>be!==null).map(be=>oe[be])}class z extends w.Processor{async _call(D,R,Q={}){const J=D?await this.image_processor(D,Q):{};return{...R?this.tokenizer(R,Q):{},...J}}post_process_grounded_object_detection(D,R,{box_threshold:Q=.25,text_threshold:J=.25,target_sizes:oe=null}={}){const{logits:be,pred_boxes:Ie}=D,ee=be.dims[0];if(oe!==null&&oe.length!==ee)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");const re=be.dims.at(1),ce=be.sigmoid(),g=ce.max(-1).tolist(),I=Ie.tolist().map(u=>u.map(B=>(0,U.center_to_corners_format)(B))),e=[];for(let u=0;u<ee;++u){const B=oe!==null?oe[u]:null;B!==null&&(I[u]=I[u].map(ve=>ve.map((Re,Ke)=>Re*B[(Ke+1)%2])));const ue=g[u],G=[],K=[],Ve=[];for(let ve=0;ve<re;++ve){const Re=ue[ve];if(Re<=Q)continue;const Ke=I[u][ve],nt=ce[u][ve];G.push(Re),Ve.push(Ke);const Ct=H(nt.gt(J),R[u]);K.push(Ct)}e.push({scores:G,boxes:Ve,labels:this.batch_decode(K)})}return e}}We(z,"tokenizer_class",Y.AutoTokenizer),We(z,"image_processor_class",F.AutoImageProcessor)},"./src/models/idefics3/image_processing_idefics3.js":(T,k,A)=>{A.r(k),A.d(k,{Idefics3ImageProcessor:()=>Y});var w=A("./src/base/image_processors_utils.js"),F=A("./src/utils/tensor.js");class Y extends w.ImageProcessor{constructor(H){super(H),this.do_image_splitting=H.do_image_splitting??!0,this.max_image_size=H.max_image_size}get_resize_for_vision_encoder(H,z){let[N,D]=H.dims.slice(-2);const R=D/N;return D>=N?(D=Math.ceil(D/z)*z,N=Math.floor(D/R),N=Math.ceil(N/z)*z):(N=Math.ceil(N/z)*z,D=Math.floor(N*R),D=Math.ceil(D/z)*z),{height:N,width:D}}async _call(H,{do_image_splitting:z=null,return_row_col_info:N=!1}={}){let D;if(!Array.isArray(H))D=[[H]];else{if(H.length===0||!H[0])throw new Error("No images provided.");Array.isArray(H[0])?D=H:D=[H]}let R=[],Q=[],J=[];const oe=[],be=[];for(const u of D){let B=await Promise.all(u.map(K=>this.preprocess(K)));oe.push(...B.map(K=>K.original_size)),be.push(...B.map(K=>K.reshaped_input_size)),B.forEach(K=>K.pixel_values.unsqueeze_(0));const{longest_edge:ue}=this.max_image_size;let G;if(z??this.do_image_splitting){let K=new Array(B.length),Ve=new Array(B.length);G=await Promise.all(B.map(async(ve,Re)=>{const Ke=this.get_resize_for_vision_encoder(ve.pixel_values,ue),nt=await(0,F.interpolate_4d)(ve.pixel_values,{size:[Ke.height,Ke.width]}),{frames:Ct,num_splits_h:ht,num_splits_w:et}=await this.split_image(nt,this.max_image_size);return K[Re]=ht,Ve[Re]=et,(0,F.cat)(Ct,0)})),Q.push(K),J.push(Ve)}else{const K=[ue,ue];G=await Promise.all(B.map(Ve=>(0,F.interpolate_4d)(Ve.pixel_values,{size:K}))),Q.push(new Array(B.length).fill(0)),J.push(new Array(B.length).fill(0))}R.push((0,F.cat)(G,0))}const Ie=R.length,[ee,re,ce,g]=R[0].dims;let I,e;if(Ie===1)I=R[0].unsqueeze_(0),e=(0,F.full)([Ie,ee,ce,g],!0);else{const u=Math.max(...R.map(G=>G.dims.at(0)));e=(0,F.full)([Ie,u,ce,g],!0);const B=e.data,ue=u*ce*g;for(let G=0;G<Ie;++G){const K=R[G].dims[0];if(K<u){R[G]=(0,F.cat)([R[G],(0,F.full)([u-K,re,ce,g],0)],0);const Ve=G*ue+K*ce*g,ve=(G+1)*ue;B.fill(!1,Ve,ve)}}I=(0,F.stack)(R,0)}return{pixel_values:I,pixel_attention_mask:e,original_sizes:oe,reshaped_input_sizes:be,...N?{rows:Q,cols:J}:{}}}async split_image(H,{longest_edge:z}){const N=z,D=z,R=[],[Q,J]=H.dims.slice(-2);let oe=0,be=0;if(Q>N||J>D){oe=Math.ceil(Q/N),be=Math.ceil(J/D);const Ie=Math.ceil(Q/oe),ee=Math.ceil(J/be);for(let g=0;g<oe;++g)for(let I=0;I<be;++I){let e,u,B,ue;g===oe-1?(u=Q-Ie,ue=Q):(u=g*Ie,ue=(g+1)*Ie),I===be-1?(e=J-ee,B=J):(e=I*ee,B=(I+1)*ee);const G=[u,e],K=[ue,B],Ve=await(0,F.slice)(H,G,K,[2,3]);R.push(Ve)}const re=N,ce=D;(Q!==re||J!==ce)&&(H=await(0,F.interpolate_4d)(H,{size:[re,ce]}))}return R.push(H),{frames:R,num_splits_h:oe,num_splits_w:be}}}},"./src/models/idefics3/processing_idefics3.js":(T,k,A)=>{A.r(k),A.d(k,{Idefics3Processor:()=>D});var w=A("./src/base/processing_utils.js"),F=A("./src/models/auto/image_processing_auto.js"),Y=A("./src/tokenizers.js");A("./src/utils/image.js");var U=A("./src/utils/core.js");function H(R,Q,J,oe,be,Ie){let ee="";for(let re=0;re<Q;++re){for(let ce=0;ce<J;++ce)ee+=oe+`<row_${re+1}_col_${ce+1}>`+be.repeat(R);ee+=`
`}return ee+=`
${oe}${Ie}`+be.repeat(R)+`${oe}`,ee}function z(R,Q,J,oe){return`${Q}${oe}`+J.repeat(R)+`${Q}`}function N(R,Q,J,oe,be,Ie){return R===0&&Q===0?z(J,oe,be,Ie):H(J,R,Q,oe,be,Ie)}class D extends w.Processor{constructor(){super(...arguments);We(this,"fake_image_token","<fake_token_around_image>");We(this,"image_token","<image>");We(this,"global_img_token","<global-img>")}async _call(J,oe=null,be={}){be.return_row_col_info??(be.return_row_col_info=!0);let Ie;oe&&(Ie=await this.image_processor(oe,be)),Array.isArray(J)||(J=[J]);const ee=Ie.rows??[new Array(J.length).fill(0)],re=Ie.cols??[new Array(J.length).fill(0)],ce=this.config.image_seq_len,g=[],I=[];for(let u=0;u<J.length;++u){const B=J[u],ue=ee[u],G=re[u];g.push((0,U.count)(B,this.image_token));const K=ue.map((Re,Ke)=>N(Re,G[Ke],ce,this.fake_image_token,this.image_token,this.global_img_token)),Ve=B.split(this.image_token);if(Ve.length===0)throw new Error("The image token should be present in the text.");let ve=Ve[0];for(let Re=0;Re<K.length;++Re)ve+=K[Re]+Ve[Re+1];I.push(ve)}return{...this.tokenizer(I),...Ie}}}We(D,"image_processor_class",F.AutoImageProcessor),We(D,"tokenizer_class",Y.AutoTokenizer),We(D,"uses_processor_config",!0)},"./src/models/image_processors.js":(T,k,A)=>{A.r(k),A.d(k,{BeitFeatureExtractor:()=>w.BeitFeatureExtractor,BitImageProcessor:()=>F.BitImageProcessor,CLIPFeatureExtractor:()=>U.CLIPFeatureExtractor,CLIPImageProcessor:()=>U.CLIPImageProcessor,ChineseCLIPFeatureExtractor:()=>Y.ChineseCLIPFeatureExtractor,ConvNextFeatureExtractor:()=>H.ConvNextFeatureExtractor,ConvNextImageProcessor:()=>H.ConvNextImageProcessor,DPTFeatureExtractor:()=>R.DPTFeatureExtractor,DPTImageProcessor:()=>R.DPTImageProcessor,DeiTFeatureExtractor:()=>z.DeiTFeatureExtractor,DeiTImageProcessor:()=>z.DeiTImageProcessor,DetrFeatureExtractor:()=>N.DetrFeatureExtractor,DetrImageProcessor:()=>N.DetrImageProcessor,DonutFeatureExtractor:()=>D.DonutFeatureExtractor,DonutImageProcessor:()=>D.DonutImageProcessor,EfficientNetImageProcessor:()=>Q.EfficientNetImageProcessor,GLPNFeatureExtractor:()=>J.GLPNFeatureExtractor,GroundingDinoImageProcessor:()=>oe.GroundingDinoImageProcessor,Idefics3ImageProcessor:()=>be.Idefics3ImageProcessor,JinaCLIPImageProcessor:()=>ee.JinaCLIPImageProcessor,LlavaOnevisionImageProcessor:()=>re.LlavaOnevisionImageProcessor,Mask2FormerImageProcessor:()=>ce.Mask2FormerImageProcessor,MaskFormerFeatureExtractor:()=>g.MaskFormerFeatureExtractor,MaskFormerImageProcessor:()=>g.MaskFormerImageProcessor,MobileNetV1FeatureExtractor:()=>I.MobileNetV1FeatureExtractor,MobileNetV1ImageProcessor:()=>I.MobileNetV1ImageProcessor,MobileNetV2FeatureExtractor:()=>e.MobileNetV2FeatureExtractor,MobileNetV2ImageProcessor:()=>e.MobileNetV2ImageProcessor,MobileNetV3FeatureExtractor:()=>u.MobileNetV3FeatureExtractor,MobileNetV3ImageProcessor:()=>u.MobileNetV3ImageProcessor,MobileNetV4FeatureExtractor:()=>B.MobileNetV4FeatureExtractor,MobileNetV4ImageProcessor:()=>B.MobileNetV4ImageProcessor,MobileViTFeatureExtractor:()=>ue.MobileViTFeatureExtractor,MobileViTImageProcessor:()=>ue.MobileViTImageProcessor,NougatImageProcessor:()=>G.NougatImageProcessor,OwlViTFeatureExtractor:()=>Ve.OwlViTFeatureExtractor,OwlViTImageProcessor:()=>Ve.OwlViTImageProcessor,Owlv2ImageProcessor:()=>K.Owlv2ImageProcessor,Phi3VImageProcessor:()=>ve.Phi3VImageProcessor,PvtImageProcessor:()=>Re.PvtImageProcessor,Qwen2VLImageProcessor:()=>Ke.Qwen2VLImageProcessor,RTDetrImageProcessor:()=>nt.RTDetrImageProcessor,SamImageProcessor:()=>Ct.SamImageProcessor,SegformerFeatureExtractor:()=>ht.SegformerFeatureExtractor,SegformerImageProcessor:()=>ht.SegformerImageProcessor,SiglipImageProcessor:()=>et.SiglipImageProcessor,Swin2SRImageProcessor:()=>ze.Swin2SRImageProcessor,VLMImageProcessor:()=>Ie.VLMImageProcessor,ViTFeatureExtractor:()=>Se.ViTFeatureExtractor,ViTImageProcessor:()=>Se.ViTImageProcessor,VitMatteImageProcessor:()=>xe.VitMatteImageProcessor,VitPoseImageProcessor:()=>Me.VitPoseImageProcessor,YolosFeatureExtractor:()=>ft.YolosFeatureExtractor,YolosImageProcessor:()=>ft.YolosImageProcessor});var w=A("./src/models/beit/image_processing_beit.js"),F=A("./src/models/bit/image_processing_bit.js"),Y=A("./src/models/chinese_clip/image_processing_chinese_clip.js"),U=A("./src/models/clip/image_processing_clip.js"),H=A("./src/models/convnext/image_processing_convnext.js"),z=A("./src/models/deit/image_processing_deit.js"),N=A("./src/models/detr/image_processing_detr.js"),D=A("./src/models/donut/image_processing_donut.js"),R=A("./src/models/dpt/image_processing_dpt.js"),Q=A("./src/models/efficientnet/image_processing_efficientnet.js"),J=A("./src/models/glpn/image_processing_glpn.js"),oe=A("./src/models/grounding_dino/image_processing_grounding_dino.js"),be=A("./src/models/idefics3/image_processing_idefics3.js"),Ie=A("./src/models/janus/image_processing_janus.js"),ee=A("./src/models/jina_clip/image_processing_jina_clip.js"),re=A("./src/models/llava_onevision/image_processing_llava_onevision.js"),ce=A("./src/models/mask2former/image_processing_mask2former.js"),g=A("./src/models/maskformer/image_processing_maskformer.js"),I=A("./src/models/mobilenet_v1/image_processing_mobilenet_v1.js"),e=A("./src/models/mobilenet_v2/image_processing_mobilenet_v2.js"),u=A("./src/models/mobilenet_v3/image_processing_mobilenet_v3.js"),B=A("./src/models/mobilenet_v4/image_processing_mobilenet_v4.js"),ue=A("./src/models/mobilevit/image_processing_mobilevit.js"),G=A("./src/models/nougat/image_processing_nougat.js"),K=A("./src/models/owlv2/image_processing_owlv2.js"),Ve=A("./src/models/owlvit/image_processing_owlvit.js"),ve=A("./src/models/phi3_v/image_processing_phi3_v.js"),Re=A("./src/models/pvt/image_processing_pvt.js"),Ke=A("./src/models/qwen2_vl/image_processing_qwen2_vl.js"),nt=A("./src/models/rt_detr/image_processing_rt_detr.js"),Ct=A("./src/models/sam/image_processing_sam.js"),ht=A("./src/models/segformer/image_processing_segformer.js"),et=A("./src/models/siglip/image_processing_siglip.js"),ze=A("./src/models/swin2sr/image_processing_swin2sr.js"),Se=A("./src/models/vit/image_processing_vit.js"),xe=A("./src/models/vitmatte/image_processing_vitmatte.js"),Me=A("./src/models/vitpose/image_processing_vitpose.js"),ft=A("./src/models/yolos/image_processing_yolos.js")},"./src/models/janus/image_processing_janus.js":(T,k,A)=>{A.r(k),A.d(k,{VLMImageProcessor:()=>F});var w=A("./src/base/image_processors_utils.js");class F extends w.ImageProcessor{constructor(U){super({do_pad:!0,pad_size:{width:U.image_size,height:U.image_size},...U}),this.constant_values=this.config.background_color.map(H=>H*this.rescale_factor)}pad_image(U,H,z,N){return super.pad_image(U,H,z,{constant_values:this.constant_values,center:!0,...N})}}},"./src/models/janus/processing_janus.js":(T,k,A)=>{A.r(k),A.d(k,{VLChatProcessor:()=>N});var w=A("./src/base/processing_utils.js"),F=A("./src/models/auto/image_processing_auto.js"),Y=A("./src/tokenizers.js"),U=A("./src/utils/core.js"),H=A("./src/utils/tensor.js"),z=A("./src/utils/image.js");class N extends w.Processor{constructor(R,Q){super(R,Q),this.image_tag=this.config.image_tag,this.image_start_tag=this.config.image_start_tag,this.image_end_tag=this.config.image_end_tag,this.num_image_tokens=this.config.num_image_tokens}async _call(R,{images:Q=null,chat_template:J="default"}={}){Q?Array.isArray(Q)||(Q=[Q]):Q=await Promise.all(R.filter(G=>G.images).flatMap(G=>G.images).map(G=>z.RawImage.read(G)));const oe=this.tokenizer,be=oe.apply_chat_template(R,{tokenize:!1,add_generation_prompt:!0,chat_template:J}),Ie=G=>oe.encode(G,{add_special_tokens:!1}),ee=be.split(this.image_tag),re=ee.length-1;if(Q.length!==re)throw new Error(`Number of images provided (${Q.length}) does not match number of "${this.image_tag}" image tags (${re})`);const[ce,g,I]=oe.model.convert_tokens_to_ids([this.image_tag,this.image_start_tag,this.image_end_tag]);let e=Ie(ee[0]),u=new Array(e.length).fill(!1);for(let G=1;G<ee.length;++G){const K=new Array(this.num_image_tokens).fill(ce),Ve=Ie(ee[G]);e=(0,U.mergeArrays)(e,[g],K,[I],Ve);const ve=new Array(this.num_image_tokens).fill(!0);u=(0,U.mergeArrays)(u,[!1],ve,[!1],new Array(Ve.length).fill(!1))}const B=[1,e.length],ue={input_ids:new H.Tensor("int64",e,B),attention_mask:new H.Tensor("int64",new Array(e.length).fill(1),B),images_seq_mask:new H.Tensor("bool",u,B),images_emb_mask:new H.Tensor("bool",new Array(re*this.num_image_tokens).fill(!0),[1,re,this.num_image_tokens])};if(Q&&Q.length>0){const G=await this.image_processor(Q);return G.pixel_values.unsqueeze_(0),{...ue,...G}}return ue}}We(N,"image_processor_class",F.AutoImageProcessor),We(N,"tokenizer_class",Y.AutoTokenizer),We(N,"uses_processor_config",!0)},"./src/models/jina_clip/image_processing_jina_clip.js":(T,k,A)=>{A.r(k),A.d(k,{JinaCLIPImageProcessor:()=>F});var w=A("./src/base/image_processors_utils.js");class F extends w.ImageProcessor{constructor(U){const{resize_mode:H,fill_color:z,interpolation:N,size:D,...R}=U,Q=H==="squash"?{width:D,height:D}:H==="shortest"?{shortest_edge:D}:{longest_edge:D},J=N==="bicubic"?3:2;super({...R,size:Q,resample:J,do_center_crop:!0,crop_size:D,do_normalize:!0})}}},"./src/models/jina_clip/processing_jina_clip.js":(T,k,A)=>{A.r(k),A.d(k,{JinaCLIPProcessor:()=>U});var w=A("./src/base/processing_utils.js"),F=A("./src/models/auto/image_processing_auto.js"),Y=A("./src/tokenizers.js");class U extends w.Processor{async _call(z=null,N=null,D={}){if(!z&&!N)throw new Error("Either text or images must be provided");const R=z?this.tokenizer(z,D):{},Q=N?await this.image_processor(N,D):{};return{...R,...Q}}}We(U,"tokenizer_class",Y.AutoTokenizer),We(U,"image_processor_class",F.AutoImageProcessor)},"./src/models/llava_onevision/image_processing_llava_onevision.js":(T,k,A)=>{A.r(k),A.d(k,{LlavaOnevisionImageProcessor:()=>F});var w=A("./src/base/image_processors_utils.js");class F extends w.ImageProcessor{}},"./src/models/mask2former/image_processing_mask2former.js":(T,k,A)=>{A.r(k),A.d(k,{Mask2FormerImageProcessor:()=>F});var w=A("./src/models/maskformer/image_processing_maskformer.js");class F extends w.MaskFormerImageProcessor{}},"./src/models/maskformer/image_processing_maskformer.js":(T,k,A)=>{A.r(k),A.d(k,{MaskFormerFeatureExtractor:()=>Y,MaskFormerImageProcessor:()=>F});var w=A("./src/base/image_processors_utils.js");class F extends w.ImageProcessor{post_process_panoptic_segmentation(...H){return(0,w.post_process_panoptic_segmentation)(...H)}post_process_instance_segmentation(...H){return(0,w.post_process_instance_segmentation)(...H)}}class Y extends F{}},"./src/models/mgp_str/processing_mgp_str.js":(T,k,A)=>{A.r(k),A.d(k,{MgpstrProcessor:()=>z});var w=A("./src/base/processing_utils.js"),F=A("./src/models/auto/image_processing_auto.js"),Y=A("./src/tokenizers.js"),U=A("./src/utils/maths.js");const H={char:["char_decode",1],bpe:["bpe_decode",2],wp:["wp_decode",102]};class z extends w.Processor{get char_tokenizer(){return this.components.char_tokenizer}get bpe_tokenizer(){return this.components.bpe_tokenizer}get wp_tokenizer(){return this.components.wp_tokenizer}_decode_helper(D,R){if(!H.hasOwnProperty(R))throw new Error(`Format ${R} is not supported.`);const[Q,J]=H[R],oe=this[Q].bind(this),[be,Ie]=D.dims,ee=[],re=[],ce=D.tolist();for(let I=0;I<be;++I){const e=ce[I],u=[],B=[];for(let G=1;G<Ie;++G){const[K,Ve]=(0,U.max)((0,U.softmax)(e[G]));if(B.push(K),Ve==J)break;u.push(Ve)}const ue=B.length>0?B.reduce((G,K)=>G*K,1):0;re.push(u),ee.push(ue)}return[oe(re),ee]}char_decode(D){return this.char_tokenizer.batch_decode(D).map(R=>R.replaceAll(" ",""))}bpe_decode(D){return this.bpe_tokenizer.batch_decode(D)}wp_decode(D){return this.wp_tokenizer.batch_decode(D).map(R=>R.replaceAll(" ",""))}batch_decode([D,R,Q]){const[J,oe]=this._decode_helper(D,"char"),[be,Ie]=this._decode_helper(R,"bpe"),[ee,re]=this._decode_helper(Q,"wp"),ce=[],g=[];for(let I=0;I<J.length;++I){const[e,u]=(0,U.max)([oe[I],Ie[I],re[I]]);ce.push([J[I],be[I],ee[I]][u]),g.push(e)}return{generated_text:ce,scores:g,char_preds:J,bpe_preds:be,wp_preds:ee}}static async from_pretrained(...D){const R=await super.from_pretrained(...D),Q=await Y.AutoTokenizer.from_pretrained("Xenova/gpt2"),J=await Y.AutoTokenizer.from_pretrained("Xenova/bert-base-uncased");return R.components={image_processor:R.image_processor,char_tokenizer:R.tokenizer,bpe_tokenizer:Q,wp_tokenizer:J},R}async _call(D,R=null){const Q=await this.image_processor(D);return R&&(Q.labels=this.tokenizer(R).input_ids),Q}}We(z,"tokenizer_class",Y.AutoTokenizer),We(z,"image_processor_class",F.AutoImageProcessor)},"./src/models/mobilenet_v1/image_processing_mobilenet_v1.js":(T,k,A)=>{A.r(k),A.d(k,{MobileNetV1FeatureExtractor:()=>Y,MobileNetV1ImageProcessor:()=>F});var w=A("./src/base/image_processors_utils.js");class F extends w.ImageProcessor{}class Y extends F{}},"./src/models/mobilenet_v2/image_processing_mobilenet_v2.js":(T,k,A)=>{A.r(k),A.d(k,{MobileNetV2FeatureExtractor:()=>Y,MobileNetV2ImageProcessor:()=>F});var w=A("./src/base/image_processors_utils.js");class F extends w.ImageProcessor{}class Y extends F{}},"./src/models/mobilenet_v3/image_processing_mobilenet_v3.js":(T,k,A)=>{A.r(k),A.d(k,{MobileNetV3FeatureExtractor:()=>Y,MobileNetV3ImageProcessor:()=>F});var w=A("./src/base/image_processors_utils.js");class F extends w.ImageProcessor{}class Y extends F{}},"./src/models/mobilenet_v4/image_processing_mobilenet_v4.js":(T,k,A)=>{A.r(k),A.d(k,{MobileNetV4FeatureExtractor:()=>Y,MobileNetV4ImageProcessor:()=>F});var w=A("./src/base/image_processors_utils.js");class F extends w.ImageProcessor{}class Y extends F{}},"./src/models/mobilevit/image_processing_mobilevit.js":(T,k,A)=>{A.r(k),A.d(k,{MobileViTFeatureExtractor:()=>Y,MobileViTImageProcessor:()=>F});var w=A("./src/base/image_processors_utils.js");class F extends w.ImageProcessor{}class Y extends F{}},"./src/models/moonshine/feature_extraction_moonshine.js":(T,k,A)=>{A.r(k),A.d(k,{MoonshineFeatureExtractor:()=>Y});var w=A("./src/base/feature_extraction_utils.js"),F=A("./src/utils/tensor.js");class Y extends w.FeatureExtractor{async _call(H){(0,w.validate_audio_inputs)(H,"MoonshineFeatureExtractor"),H instanceof Float64Array&&(H=new Float32Array(H));const z=[1,H.length];return{input_values:new F.Tensor("float32",H,z)}}}},"./src/models/moonshine/processing_moonshine.js":(T,k,A)=>{A.r(k),A.d(k,{MoonshineProcessor:()=>U});var w=A("./src/models/auto/feature_extraction_auto.js"),F=A("./src/tokenizers.js"),Y=A("./src/base/processing_utils.js");class U extends Y.Processor{async _call(z){return await this.feature_extractor(z)}}We(U,"tokenizer_class",F.AutoTokenizer),We(U,"feature_extractor_class",w.AutoFeatureExtractor)},"./src/models/nougat/image_processing_nougat.js":(T,k,A)=>{A.r(k),A.d(k,{NougatImageProcessor:()=>F});var w=A("./src/models/donut/image_processing_donut.js");class F extends w.DonutImageProcessor{}},"./src/models/owlv2/image_processing_owlv2.js":(T,k,A)=>{A.r(k),A.d(k,{Owlv2ImageProcessor:()=>F});var w=A("./src/models/owlvit/image_processing_owlvit.js");class F extends w.OwlViTImageProcessor{}},"./src/models/owlvit/image_processing_owlvit.js":(T,k,A)=>{A.r(k),A.d(k,{OwlViTFeatureExtractor:()=>Y,OwlViTImageProcessor:()=>F});var w=A("./src/base/image_processors_utils.js");class F extends w.ImageProcessor{post_process_object_detection(...H){return(0,w.post_process_object_detection)(...H)}}class Y extends F{}},"./src/models/owlvit/processing_owlvit.js":(T,k,A)=>{A.r(k),A.d(k,{OwlViTProcessor:()=>U});var w=A("./src/base/processing_utils.js"),F=A("./src/models/auto/image_processing_auto.js"),Y=A("./src/tokenizers.js");class U extends w.Processor{}We(U,"tokenizer_class",Y.AutoTokenizer),We(U,"image_processor_class",F.AutoImageProcessor)},"./src/models/paligemma/processing_paligemma.js":(T,k,A)=>{A.r(k),A.d(k,{PaliGemmaProcessor:()=>z});var w=A("./src/base/processing_utils.js"),F=A("./src/models/auto/image_processing_auto.js"),Y=A("./src/tokenizers.js");const U="<image>";function H(N,D,R,Q,J){return`${Q.repeat(R*J)}${D}${N}
`}class z extends w.Processor{async _call(D,R=null,Q={}){R||(console.warn("You are using PaliGemma without a text prefix. It will perform as a picture-captioning model."),R=""),Array.isArray(D)||(D=[D]),Array.isArray(R)||(R=[R]);const J=this.tokenizer.bos_token,oe=this.image_processor.config.image_seq_length;let be;R.some(re=>re.includes(U))?be=R.map(re=>{const ce=re.replaceAll(U,U.repeat(oe)),g=ce.lastIndexOf(U),I=g===-1?0:g+U.length;return ce.slice(0,I)+J+ce.slice(I)+`
`}):(console.warn("You are passing both `text` and `images` to `PaliGemmaProcessor`. The processor expects special image tokens in the text, as many tokens as there are images per each text. It is recommended to add `<image>` tokens in the very beginning of your text. For this call, we will infer how many images each text has and add special tokens."),be=R.map(re=>H(re,J,oe,U,D.length)));const Ie=this.tokenizer(be,Q);return{...await this.image_processor(D,Q),...Ie}}}We(z,"tokenizer_class",Y.AutoTokenizer),We(z,"image_processor_class",F.AutoImageProcessor),We(z,"uses_processor_config",!1)},"./src/models/phi3_v/image_processing_phi3_v.js":(T,k,A)=>{A.r(k),A.d(k,{Phi3VImageProcessor:()=>D});var w=A("./src/base/image_processors_utils.js"),F=A("./src/utils/tensor.js");const Y=336,U=[2,3],{ceil:H,floor:z,sqrt:N}=Math;class D extends w.ImageProcessor{constructor(Q){super({...Q,do_normalize:!0,do_pad:!0,pad_size:"custom",do_convert_rgb:!0,do_resize:!0}),this._num_crops=Q.num_crops}calc_num_image_tokens_from_image_size(Q,J){const{num_img_tokens:oe}=this.config;return z((z(J/Y)*z(Q/Y)+1)*oe+1+(z(J/Y)+1)*N(oe))}get_resize_output_image_size(Q,J){const oe=this._num_crops,[be,Ie]=Q.size;let ee=be/Ie,re=1;for(;re*Math.ceil(re/ee)<=oe;)re+=1;re-=1;const ce=Math.floor(re*336),g=Math.floor(ce/ee);return[ce,g]}pad_image(Q,J,oe,be={}){const[Ie,ee]=J,re=Y*H(Ie/Y),ce=Y*H(ee/Y),g=[1,1,1].map((I,e)=>(I-this.image_mean[e])/this.image_std[e]);return super.pad_image(Q,J,{width:ce,height:re},{center:!0,constant_values:g,...be})}async _call(Q,{num_crops:J=null}={}){if(this._num_crops=J??(J=this.config.num_crops),J<4||N(J)%1!==0)throw new Error("num_crops must be a square number >= 4");Array.isArray(Q)||(Q=[Q]);const oe=Q.length,be=await Promise.all(Q.map(u=>this.preprocess(u))),Ie=be.map(u=>u.original_size),ee=be.map(u=>u.reshaped_input_size),re=[];for(const{pixel_values:u}of be){u.unsqueeze_(0);const[B,ue]=u.dims.slice(-2),G=await(0,F.interpolate_4d)(u,{size:[Y,Y],mode:"bicubic"});if(J>0){const K=[],Ve=N(J),ve=z(ue/Ve),Re=z(B/Ve);for(let nt=0;nt<Ve;++nt)for(let Ct=0;Ct<Ve;++Ct){let ht,et,ze,Se;nt===Ve-1?(et=B-Re,Se=B):(et=nt*Re,Se=(nt+1)*Re),Ct===Ve-1?(ht=ue-ve,ze=ue):(ht=Ct*ve,ze=(Ct+1)*ve);const xe=[et,ht],Me=[Se,ze],ft=await(0,F.slice)(u,xe,Me,U);K.push(ft)}const Ke=await(0,F.interpolate_4d)((0,F.cat)(K,0),{size:[Y,Y],mode:"bicubic"});re.push((0,F.cat)([G,Ke],0))}else re.push(G)}const ce=(0,F.stack)(re,0),g=ee.map(u=>u.map(B=>Y*H(B/Y))),I=new F.Tensor("int64",g.flat(),[oe,2]),e=g.map(([u,B])=>this.calc_num_image_tokens_from_image_size(B,u));return{pixel_values:ce,original_sizes:Ie,reshaped_input_sizes:ee,image_sizes:I,num_img_tokens:e}}}},"./src/models/phi3_v/processing_phi3_v.js":(T,k,A)=>{A.r(k),A.d(k,{Phi3VProcessor:()=>z});var w=A("./src/base/processing_utils.js"),F=A("./src/models/auto/image_processing_auto.js"),Y=A("./src/tokenizers.js");A("./src/utils/image.js");const U="<|image|>",H=/<\|image_\d+\|>/g;class z extends w.Processor{async _call(D,R=null,{padding:Q=!0,truncation:J=!0,num_crops:oe=null}={}){Array.isArray(D)||(D=[D]);let be,Ie;if(R){Ie=await this.image_processor(R,{num_crops:oe});const{num_img_tokens:ee}=Ie,re=D.map((g,I)=>g.split(H).join(U.repeat(ee[I])));be=this.tokenizer(re,{padding:Q,truncation:J});const ce=this.tokenizer.model.convert_tokens_to_ids([U])[0];be.input_ids.map_(g=>g==ce?-g:g)}else be=this.tokenizer(D);return{...be,...Ie}}}We(z,"image_processor_class",F.AutoImageProcessor),We(z,"tokenizer_class",Y.AutoTokenizer)},"./src/models/processors.js":(T,k,A)=>{A.r(k),A.d(k,{Florence2Processor:()=>w.Florence2Processor,GroundingDinoProcessor:()=>F.GroundingDinoProcessor,Idefics3Processor:()=>Y.Idefics3Processor,JinaCLIPProcessor:()=>H.JinaCLIPProcessor,MgpstrProcessor:()=>z.MgpstrProcessor,MoonshineProcessor:()=>N.MoonshineProcessor,OwlViTProcessor:()=>D.OwlViTProcessor,PaliGemmaProcessor:()=>Q.PaliGemmaProcessor,Phi3VProcessor:()=>R.Phi3VProcessor,PyAnnoteProcessor:()=>J.PyAnnoteProcessor,Qwen2VLProcessor:()=>oe.Qwen2VLProcessor,SamProcessor:()=>be.SamProcessor,SpeechT5Processor:()=>Ie.SpeechT5Processor,VLChatProcessor:()=>U.VLChatProcessor,Wav2Vec2Processor:()=>ee.Wav2Vec2Processor,Wav2Vec2ProcessorWithLM:()=>re.Wav2Vec2ProcessorWithLM,WhisperProcessor:()=>ce.WhisperProcessor});var w=A("./src/models/florence2/processing_florence2.js"),F=A("./src/models/grounding_dino/processing_grounding_dino.js"),Y=A("./src/models/idefics3/processing_idefics3.js"),U=A("./src/models/janus/processing_janus.js"),H=A("./src/models/jina_clip/processing_jina_clip.js"),z=A("./src/models/mgp_str/processing_mgp_str.js"),N=A("./src/models/moonshine/processing_moonshine.js"),D=A("./src/models/owlvit/processing_owlvit.js"),R=A("./src/models/phi3_v/processing_phi3_v.js"),Q=A("./src/models/paligemma/processing_paligemma.js"),J=A("./src/models/pyannote/processing_pyannote.js"),oe=A("./src/models/qwen2_vl/processing_qwen2_vl.js"),be=A("./src/models/sam/processing_sam.js"),Ie=A("./src/models/speecht5/processing_speecht5.js"),ee=A("./src/models/wav2vec2/processing_wav2vec2.js"),re=A("./src/models/wav2vec2_with_lm/processing_wav2vec2_with_lm.js"),ce=A("./src/models/whisper/processing_whisper.js")},"./src/models/pvt/image_processing_pvt.js":(T,k,A)=>{A.r(k),A.d(k,{PvtImageProcessor:()=>F});var w=A("./src/base/image_processors_utils.js");class F extends w.ImageProcessor{}},"./src/models/pyannote/feature_extraction_pyannote.js":(T,k,A)=>{A.r(k),A.d(k,{PyAnnoteFeatureExtractor:()=>U});var w=A("./src/base/feature_extraction_utils.js"),F=A("./src/utils/tensor.js"),Y=A("./src/utils/maths.js");class U extends w.FeatureExtractor{async _call(z){(0,w.validate_audio_inputs)(z,"PyAnnoteFeatureExtractor"),z instanceof Float64Array&&(z=new Float32Array(z));const N=[1,1,z.length];return{input_values:new F.Tensor("float32",z,N)}}samples_to_frames(z){return(z-this.config.offset)/this.config.step}post_process_speaker_diarization(z,N){const D=N/this.samples_to_frames(N)/this.config.sampling_rate,R=[];for(const Q of z.tolist()){const J=[];let oe=-1;for(let be=0;be<Q.length;++be){const Ie=(0,Y.softmax)(Q[be]),[ee,re]=(0,Y.max)(Ie),[ce,g]=[be,be+1];re!==oe?(oe=re,J.push({id:re,start:ce,end:g,score:ee})):(J.at(-1).end=g,J.at(-1).score+=ee)}R.push(J.map(({id:be,start:Ie,end:ee,score:re})=>({id:be,start:Ie*D,end:ee*D,confidence:re/(ee-Ie)})))}return R}}},"./src/models/pyannote/processing_pyannote.js":(T,k,A)=>{A.r(k),A.d(k,{PyAnnoteProcessor:()=>Y});var w=A("./src/base/processing_utils.js"),F=A("./src/models/pyannote/feature_extraction_pyannote.js");class Y extends w.Processor{async _call(H){return await this.feature_extractor(H)}post_process_speaker_diarization(...H){return this.feature_extractor.post_process_speaker_diarization(...H)}get sampling_rate(){return this.feature_extractor.config.sampling_rate}}We(Y,"feature_extractor_class",F.PyAnnoteFeatureExtractor)},"./src/models/qwen2_vl/image_processing_qwen2_vl.js":(T,k,A)=>{A.r(k),A.d(k,{Qwen2VLImageProcessor:()=>Y});var w=A("./src/base/image_processors_utils.js"),F=A("./src/utils/tensor.js");class Y extends w.ImageProcessor{async _call(H,...z){const{pixel_values:N,original_sizes:D,reshaped_input_sizes:R}=await super._call(H,...z);let Q=N;const{temporal_patch_size:J,merge_size:oe,patch_size:be}=this.config;Q.dims[0]===1&&(Q=(0,F.cat)(Array.from({length:J},()=>Q),0));const Ie=Q.dims[0]/J,ee=Q.dims[1],re=Math.floor(Q.dims[2]/be),ce=Math.floor(Q.dims[3]/be),g=Q.view(Ie,J,ee,Math.floor(re/oe),oe,be,Math.floor(ce/oe),oe,be).permute(0,3,6,4,7,2,1,5,8).view(Ie*re*ce,ee*J*be*be),I=new F.Tensor("int64",[Ie,re,ce],[1,3]);return{pixel_values:g,image_grid_thw:I,original_sizes:D,reshaped_input_sizes:R}}}},"./src/models/qwen2_vl/processing_qwen2_vl.js":(T,k,A)=>{A.r(k),A.d(k,{Qwen2VLProcessor:()=>U});var w=A("./src/base/processing_utils.js"),F=A("./src/models/auto/image_processing_auto.js"),Y=A("./src/tokenizers.js");A("./src/utils/image.js");class U extends w.Processor{async _call(z,N=null,...D){Array.isArray(z)||(z=[z]);let R,Q;if(N&&(R=await this.image_processor(N),Q=R.image_grid_thw),Q){let oe=this.image_processor.config.merge_size**2,be=0;const Ie=Q.tolist();z=z.map(ee=>{for(;ee.includes("<|image_pad|>");){const re=Number(Ie[be++].reduce((ce,g)=>ce*g,1n));ee=ee.replace("<|image_pad|>","<|placeholder|>".repeat(Math.floor(re/oe)))}return ee.replaceAll("<|placeholder|>","<|image_pad|>")})}return{...this.tokenizer(z),...R}}}We(U,"image_processor_class",F.AutoImageProcessor),We(U,"tokenizer_class",Y.AutoTokenizer)},"./src/models/rt_detr/image_processing_rt_detr.js":(T,k,A)=>{A.r(k),A.d(k,{RTDetrImageProcessor:()=>F});var w=A("./src/base/image_processors_utils.js");class F extends w.ImageProcessor{post_process_object_detection(...U){return(0,w.post_process_object_detection)(...U)}}},"./src/models/sam/image_processing_sam.js":(T,k,A)=>{A.r(k),A.d(k,{SamImageProcessor:()=>U});var w=A("./src/base/image_processors_utils.js"),F=A("./src/utils/core.js"),Y=A("./src/utils/tensor.js");class U extends w.ImageProcessor{reshape_input_points(z,N,D,R=!1){z=structuredClone(z);let Q=(0,F.calculateDimensions)(z);if(Q.length===3)R||(Q=[1,...Q]),z=[z];else if(Q.length!==4)throw Error("The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.");for(let J=0;J<z.length;++J){let oe=N[J],be=D[J],Ie=[be[0]/oe[0],be[1]/oe[1]];for(let ee=0;ee<z[J].length;++ee)for(let re=0;re<z[J][ee].length;++re)for(let ce=0;ce<z[J][ee][re].length;++ce)z[J][ee][re][ce]*=Ie[ce%2]}return new Y.Tensor("float32",Float32Array.from(z.flat(1/0)),Q)}add_input_labels(z,N){let D=(0,F.calculateDimensions)(z);if(D.length===2)D=[1,...D],z=[z];else if(D.length!==3)throw Error("The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.");if(D.some((R,Q)=>R!==N.dims[Q]))throw Error(`The first ${D.length} dimensions of 'input_points' and 'input_labels' must be the same.`);return new Y.Tensor("int64",z.flat(1/0).map(BigInt),D)}async _call(z,{input_points:N=null,input_labels:D=null,input_boxes:R=null}={}){const Q=await super._call(z);if(N&&(Q.input_points=this.reshape_input_points(N,Q.original_sizes,Q.reshaped_input_sizes)),D){if(!Q.input_points)throw Error("`input_points` must be provided if `input_labels` are provided.");Q.input_labels=this.add_input_labels(D,Q.input_points)}return R&&(Q.input_boxes=this.reshape_input_points(R,Q.original_sizes,Q.reshaped_input_sizes,!0)),Q}async post_process_masks(z,N,D,{mask_threshold:R=0,binarize:Q=!0,pad_size:J=null}={}){const oe=[];J=J??this.pad_size;const be=[J.height,J.width];for(let Ie=0;Ie<N.length;++Ie){const ee=N[Ie],re=D[Ie];let ce=await(0,Y.interpolate_4d)(z[Ie],{mode:"bilinear",size:be});if(ce=ce.slice(null,null,[0,re[0]],[0,re[1]]),ce=await(0,Y.interpolate_4d)(ce,{mode:"bilinear",size:ee}),Q){const g=ce.data,I=new Uint8Array(g.length);for(let e=0;e<g.length;++e)g[e]>R&&(I[e]=1);ce=new Y.Tensor("bool",I,ce.dims)}oe.push(ce)}return oe}generate_crop_boxes(z,N,{crop_n_layers:D=0,overlap_ratio:R=.3413333333333333,points_per_crop:Q=32,crop_n_points_downscale_factor:J=1}={}){}}},"./src/models/sam/processing_sam.js":(T,k,A)=>{A.r(k),A.d(k,{SamProcessor:()=>Y});var w=A("./src/base/processing_utils.js"),F=A("./src/models/auto/image_processing_auto.js");class Y extends w.Processor{async _call(...H){return await this.image_processor(...H)}post_process_masks(...H){return this.image_processor.post_process_masks(...H)}reshape_input_points(...H){return this.image_processor.reshape_input_points(...H)}}We(Y,"image_processor_class",F.AutoImageProcessor)},"./src/models/seamless_m4t/feature_extraction_seamless_m4t.js":(T,k,A)=>{A.r(k),A.d(k,{SeamlessM4TFeatureExtractor:()=>U});var w=A("./src/base/feature_extraction_utils.js"),F=A("./src/utils/tensor.js"),Y=A("./src/utils/audio.js");class U extends w.FeatureExtractor{constructor(z){super(z);const N=this.config.sampling_rate,D=(0,Y.mel_filter_bank)(256,this.config.num_mel_bins,20,Math.floor(N/2),N,null,"kaldi",!0);for(let R=0;R<D.length;++R)D[R].push(0);this.mel_filters=D,this.window=(0,Y.window_function)(400,"povey",{periodic:!1})}async _extract_fbank_features(z,N){return z=z.map(D=>D*32768),(0,Y.spectrogram)(z,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,max_num_frames:N,transpose:!0})}async _call(z,{padding:N=!0,pad_to_multiple_of:D=2,do_normalize_per_mel_bins:R=!0,return_attention_mask:Q=!0}={}){(0,w.validate_audio_inputs)(z,"SeamlessM4TFeatureExtractor");let J=await this._extract_fbank_features(z,this.config.max_length);if(R){const[I,e]=J.dims,u=J.data;for(let B=0;B<e;++B){let ue=0;for(let ve=0;ve<I;++ve)ue+=u[ve*e+B];const G=ue/I;let K=0;for(let ve=0;ve<I;++ve)K+=(u[ve*e+B]-G)**2;K/=I-1;const Ve=Math.sqrt(K+1e-7);for(let ve=0;ve<I;++ve){const Re=ve*e+B;u[Re]=(u[Re]-G)/Ve}}}let oe;if(N){const[I,e]=J.dims,u=J.data,B=I%D;if(B>0){const ue=new Float32Array(e*(I+B));ue.set(u),ue.fill(this.config.padding_value,u.length);const G=I+B;J=new F.Tensor(J.type,ue,[G,e]),Q&&(oe=new F.Tensor("int64",new BigInt64Array(G),[1,G]),oe.data.fill(1n,0,I))}}const[be,Ie]=J.dims,ee=this.config.stride;if(be%ee!==0)throw new Error(`The number of frames (${be}) must be a multiple of the stride (${ee}).`);const ce=J.view(1,Math.floor(be/ee),Ie*ee),g={input_features:ce};if(Q){const I=ce.dims[1],e=new BigInt64Array(I);if(oe){const u=oe.data;for(let B=1,ue=0;B<be;B+=ee,++ue)e[ue]=u[B]}else e.fill(1n);g.attention_mask=new F.Tensor("int64",e,[1,I])}return g}}},"./src/models/segformer/image_processing_segformer.js":(T,k,A)=>{A.r(k),A.d(k,{SegformerFeatureExtractor:()=>Y,SegformerImageProcessor:()=>F});var w=A("./src/base/image_processors_utils.js");class F extends w.ImageProcessor{post_process_semantic_segmentation(...H){return(0,w.post_process_semantic_segmentation)(...H)}}class Y extends F{}},"./src/models/siglip/image_processing_siglip.js":(T,k,A)=>{A.r(k),A.d(k,{SiglipImageProcessor:()=>F});var w=A("./src/base/image_processors_utils.js");class F extends w.ImageProcessor{}},"./src/models/speecht5/feature_extraction_speecht5.js":(T,k,A)=>{A.r(k),A.d(k,{SpeechT5FeatureExtractor:()=>F});var w=A("./src/base/feature_extraction_utils.js");class F extends w.FeatureExtractor{}},"./src/models/speecht5/processing_speecht5.js":(T,k,A)=>{A.r(k),A.d(k,{SpeechT5Processor:()=>U});var w=A("./src/base/processing_utils.js"),F=A("./src/tokenizers.js"),Y=A("./src/models/auto/feature_extraction_auto.js");class U extends w.Processor{async _call(z){return await this.feature_extractor(z)}}We(U,"tokenizer_class",F.AutoTokenizer),We(U,"feature_extractor_class",Y.AutoFeatureExtractor)},"./src/models/swin2sr/image_processing_swin2sr.js":(T,k,A)=>{A.r(k),A.d(k,{Swin2SRImageProcessor:()=>F});var w=A("./src/base/image_processors_utils.js");class F extends w.ImageProcessor{pad_image(U,H,z,N={}){const[D,R,Q]=H;return super.pad_image(U,H,{width:R+(z-R%z)%z,height:D+(z-D%z)%z},{mode:"symmetric",center:!1,constant_values:-1,...N})}}},"./src/models/vit/image_processing_vit.js":(T,k,A)=>{A.r(k),A.d(k,{ViTFeatureExtractor:()=>Y,ViTImageProcessor:()=>F});var w=A("./src/base/image_processors_utils.js");class F extends w.ImageProcessor{}class Y extends F{}},"./src/models/vitmatte/image_processing_vitmatte.js":(T,k,A)=>{A.r(k),A.d(k,{VitMatteImageProcessor:()=>Y});var w=A("./src/base/image_processors_utils.js"),F=A("./src/utils/tensor.js");class Y extends w.ImageProcessor{async _call(H,z){Array.isArray(H)||(H=[H]),Array.isArray(z)||(z=[z]);const N=await Promise.all(H.map(Q=>this.preprocess(Q))),D=await Promise.all(z.map(Q=>this.preprocess(Q,{do_normalize:!1,do_convert_rgb:!1,do_convert_grayscale:!0})));return{pixel_values:(0,F.stack)(N.map((Q,J)=>(0,F.cat)([Q.pixel_values,D[J].pixel_values],0)),0),original_sizes:N.map(Q=>Q.original_size),reshaped_input_sizes:N.map(Q=>Q.reshaped_input_size)}}}},"./src/models/vitpose/image_processing_vitpose.js":(T,k,A)=>{A.r(k),A.d(k,{VitPoseImageProcessor:()=>F});var w=A("./src/base/image_processors_utils.js");class F extends w.ImageProcessor{post_process_pose_estimation(U,H,{threshold:z=null}={}){const N=U.tolist(),[D,R,Q,J]=U.dims,oe=[];for(let be=0;be<D;++be){const Ie=N[be],ee=H[be],re=[];for(let ce=0;ce<ee.length;++ce){const g=ee[ce],I=[],e=[],u=[],B=g.at(-2)/J,ue=g.at(-1)/Q;for(let G=0;G<Ie.length;++G){let[K,Ve]=[0,0],ve=0,Re=-1/0;const Ke=Ie[G];for(let Ct=0;Ct<Ke.length;++Ct){const ht=Ke[Ct];for(let et=0;et<ht.length;++et){const ze=ht[et];ve+=ze,Re=Math.max(Re,ze),K+=(et+.5)*ze,Ve+=Ct*ze}}if(z!=null&&Re<z)continue;const nt=[B*K/ve,ue*Ve/ve];I.push(nt),u.push(G),e.push(Re)}re.push({bbox:g,scores:e,labels:u,keypoints:I})}oe.push(re)}return oe}}},"./src/models/wav2vec2/feature_extraction_wav2vec2.js":(T,k,A)=>{A.r(k),A.d(k,{Wav2Vec2FeatureExtractor:()=>Y});var w=A("./src/base/feature_extraction_utils.js"),F=A("./src/utils/tensor.js");class Y extends w.FeatureExtractor{_zero_mean_unit_var_norm(H){const N=H.reduce((R,Q)=>R+Q,0)/H.length,D=H.reduce((R,Q)=>R+(Q-N)**2,0)/H.length;return H.map(R=>(R-N)/Math.sqrt(D+1e-7))}async _call(H){(0,w.validate_audio_inputs)(H,"Wav2Vec2FeatureExtractor"),H instanceof Float64Array&&(H=new Float32Array(H));let z=H;this.config.do_normalize&&(z=this._zero_mean_unit_var_norm(z));const N=[1,z.length];return{input_values:new F.Tensor("float32",z,N),attention_mask:new F.Tensor("int64",new BigInt64Array(z.length).fill(1n),N)}}}},"./src/models/wav2vec2/processing_wav2vec2.js":(T,k,A)=>{A.r(k),A.d(k,{Wav2Vec2Processor:()=>U});var w=A("./src/tokenizers.js"),F=A("./src/models/auto/feature_extraction_auto.js"),Y=A("./src/base/processing_utils.js");class U extends Y.Processor{async _call(z){return await this.feature_extractor(z)}}We(U,"tokenizer_class",w.AutoTokenizer),We(U,"feature_extractor_class",F.AutoFeatureExtractor)},"./src/models/wav2vec2_with_lm/processing_wav2vec2_with_lm.js":(T,k,A)=>{A.r(k),A.d(k,{Wav2Vec2ProcessorWithLM:()=>U});var w=A("./src/tokenizers.js"),F=A("./src/models/auto/feature_extraction_auto.js"),Y=A("./src/base/processing_utils.js");class U extends Y.Processor{async _call(z){return await this.feature_extractor(z)}}We(U,"tokenizer_class",w.AutoTokenizer),We(U,"feature_extractor_class",F.AutoFeatureExtractor)},"./src/models/wespeaker/feature_extraction_wespeaker.js":(T,k,A)=>{A.r(k),A.d(k,{WeSpeakerFeatureExtractor:()=>Y});var w=A("./src/base/feature_extraction_utils.js");A("./src/utils/tensor.js");var F=A("./src/utils/audio.js");class Y extends w.FeatureExtractor{constructor(H){super(H);const z=this.config.sampling_rate,N=(0,F.mel_filter_bank)(256,this.config.num_mel_bins,20,Math.floor(z/2),z,null,"kaldi",!0);for(let D=0;D<N.length;++D)N[D].push(0);this.mel_filters=N,this.window=(0,F.window_function)(400,"hamming",{periodic:!1}),this.min_num_frames=this.config.min_num_frames}async _extract_fbank_features(H){return H=H.map(z=>z*32768),(0,F.spectrogram)(H,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,transpose:!0,min_num_frames:this.min_num_frames})}async _call(H){(0,w.validate_audio_inputs)(H,"WeSpeakerFeatureExtractor");const z=(await this._extract_fbank_features(H)).unsqueeze_(0);if(this.config.fbank_centering_span===null){const N=z.mean(1).data,D=z.data,[R,Q,J]=z.dims;for(let oe=0;oe<R;++oe){const be=oe*Q*J,Ie=oe*J;for(let ee=0;ee<Q;++ee){const re=be+ee*J;for(let ce=0;ce<J;++ce)D[re+ce]-=N[Ie+ce]}}}return{input_features:z}}}},"./src/models/whisper/common_whisper.js":(T,k,A)=>{A.r(k),A.d(k,{WHISPER_LANGUAGE_MAPPING:()=>F,WHISPER_TO_LANGUAGE_CODE_MAPPING:()=>Y,whisper_language_to_code:()=>U});const w=[["en","english"],["zh","chinese"],["de","german"],["es","spanish"],["ru","russian"],["ko","korean"],["fr","french"],["ja","japanese"],["pt","portuguese"],["tr","turkish"],["pl","polish"],["ca","catalan"],["nl","dutch"],["ar","arabic"],["sv","swedish"],["it","italian"],["id","indonesian"],["hi","hindi"],["fi","finnish"],["vi","vietnamese"],["he","hebrew"],["uk","ukrainian"],["el","greek"],["ms","malay"],["cs","czech"],["ro","romanian"],["da","danish"],["hu","hungarian"],["ta","tamil"],["no","norwegian"],["th","thai"],["ur","urdu"],["hr","croatian"],["bg","bulgarian"],["lt","lithuanian"],["la","latin"],["mi","maori"],["ml","malayalam"],["cy","welsh"],["sk","slovak"],["te","telugu"],["fa","persian"],["lv","latvian"],["bn","bengali"],["sr","serbian"],["az","azerbaijani"],["sl","slovenian"],["kn","kannada"],["et","estonian"],["mk","macedonian"],["br","breton"],["eu","basque"],["is","icelandic"],["hy","armenian"],["ne","nepali"],["mn","mongolian"],["bs","bosnian"],["kk","kazakh"],["sq","albanian"],["sw","swahili"],["gl","galician"],["mr","marathi"],["pa","punjabi"],["si","sinhala"],["km","khmer"],["sn","shona"],["yo","yoruba"],["so","somali"],["af","afrikaans"],["oc","occitan"],["ka","georgian"],["be","belarusian"],["tg","tajik"],["sd","sindhi"],["gu","gujarati"],["am","amharic"],["yi","yiddish"],["lo","lao"],["uz","uzbek"],["fo","faroese"],["ht","haitian creole"],["ps","pashto"],["tk","turkmen"],["nn","nynorsk"],["mt","maltese"],["sa","sanskrit"],["lb","luxembourgish"],["my","myanmar"],["bo","tibetan"],["tl","tagalog"],["mg","malagasy"],["as","assamese"],["tt","tatar"],["haw","hawaiian"],["ln","lingala"],["ha","hausa"],["ba","bashkir"],["jw","javanese"],["su","sundanese"]],F=new Map(w),Y=new Map([...w.map(([H,z])=>[z,H]),["burmese","my"],["valencian","ca"],["flemish","nl"],["haitian","ht"],["letzeburgesch","lb"],["pushto","ps"],["panjabi","pa"],["moldavian","ro"],["moldovan","ro"],["sinhalese","si"],["castilian","es"]]);function U(H){H=H.toLowerCase();let z=Y.get(H);if(z===void 0)if(F.has(H))z=H;else{const D=H.length===2?F.keys():F.values();throw new Error(`Language "${H}" is not supported. Must be one of: ${JSON.stringify(D)}`)}return z}},"./src/models/whisper/feature_extraction_whisper.js":(T,k,A)=>{A.r(k),A.d(k,{WhisperFeatureExtractor:()=>U});var w=A("./src/base/feature_extraction_utils.js");A("./src/utils/tensor.js");var F=A("./src/utils/audio.js"),Y=A("./src/utils/maths.js");class U extends w.FeatureExtractor{constructor(z){var N;super(z),(N=this.config).mel_filters??(N.mel_filters=(0,F.mel_filter_bank)(Math.floor(1+this.config.n_fft/2),this.config.feature_size,0,8e3,this.config.sampling_rate,"slaney","slaney")),this.window=(0,F.window_function)(this.config.n_fft,"hann")}async _extract_fbank_features(z){const N=await(0,F.spectrogram)(z,this.window,this.config.n_fft,this.config.hop_length,{power:2,mel_filters:this.config.mel_filters,log_mel:"log10",max_num_frames:this.config.nb_max_frames}),D=N.data,R=(0,Y.max)(D)[0];for(let Q=0;Q<D.length;++Q)D[Q]=(Math.max(D[Q],R-8)+4)/4;return N}async _call(z){(0,w.validate_audio_inputs)(z,"WhisperFeatureExtractor");let N;return z.length>this.config.n_samples?(console.warn("Attempting to extract features for audio longer than 30 seconds. If using a pipeline to extract transcript from a long audio clip, remember to specify `chunk_length_s` and/or `stride_length_s`."),N=z.slice(0,this.config.n_samples)):(N=new Float32Array(this.config.n_samples),N.set(z)),{input_features:(await this._extract_fbank_features(N)).unsqueeze_(0)}}}},"./src/models/whisper/generation_whisper.js":(T,k,A)=>{A.r(k),A.d(k,{WhisperGenerationConfig:()=>F});var w=A("./src/generation/configuration_utils.js");class F extends w.GenerationConfig{constructor(){super(...arguments);We(this,"return_timestamps",null);We(this,"return_token_timestamps",null);We(this,"num_frames",null);We(this,"alignment_heads",null);We(this,"task",null);We(this,"language",null);We(this,"no_timestamps_token_id",null);We(this,"prompt_ids",null);We(this,"is_multilingual",null);We(this,"lang_to_id",null);We(this,"task_to_id",null);We(this,"max_initial_timestamp_index",1)}}},"./src/models/whisper/processing_whisper.js":(T,k,A)=>{A.r(k),A.d(k,{WhisperProcessor:()=>U});var w=A("./src/models/auto/feature_extraction_auto.js"),F=A("./src/tokenizers.js"),Y=A("./src/base/processing_utils.js");class U extends Y.Processor{async _call(z){return await this.feature_extractor(z)}}We(U,"tokenizer_class",F.AutoTokenizer),We(U,"feature_extractor_class",w.AutoFeatureExtractor)},"./src/models/yolos/image_processing_yolos.js":(T,k,A)=>{A.r(k),A.d(k,{YolosFeatureExtractor:()=>Y,YolosImageProcessor:()=>F});var w=A("./src/base/image_processors_utils.js");class F extends w.ImageProcessor{post_process_object_detection(...H){return(0,w.post_process_object_detection)(...H)}}class Y extends F{}},"./src/ops/registry.js":(T,k,A)=>{A.r(k),A.d(k,{TensorOpRegistry:()=>z});var w=A("./src/backends/onnx.js"),F=A("./src/utils/tensor.js"),Y=A("./src/env.js");const U=Y.apis.IS_BROWSER_ENV||Y.apis.IS_WEBWORKER_ENV,H=async(N,D,R)=>{const Q=await(0,w.createInferenceSession)(new Uint8Array(N),D);let J=Promise.resolve();return async oe=>{const be=(0,w.isONNXProxy)(),Ie=Object.fromEntries(Object.entries(oe).map(([re,ce])=>[re,(be?ce.clone():ce).ort_tensor])),ee=await(J=U?J.then(()=>Q.run(Ie)):Q.run(Ie));return Array.isArray(R)?R.map(re=>new F.Tensor(ee[re])):new F.Tensor(ee[R])}};class z{static get nearest_interpolate_4d(){return this._nearest_interpolate_4d||(this._nearest_interpolate_4d=H([8,10,18,0,58,129,1,10,41,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,18,10,4,109,111,100,101,34,7,110,101,97,114,101,115,116,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,21],this.session_options,"y")),this._nearest_interpolate_4d}static get bilinear_interpolate_4d(){return this._bilinear_interpolate_4d||(this._bilinear_interpolate_4d=H([8,9,18,0,58,128,1,10,40,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,17,10,4,109,111,100,101,34,6,108,105,110,101,97,114,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,20],this.session_options,"y")),this._bilinear_interpolate_4d}static get bicubic_interpolate_4d(){return this._bicubic_interpolate_4d||(this._bicubic_interpolate_4d=H([8,9,18,0,58,127,10,39,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,16,10,4,109,111,100,101,34,5,99,117,98,105,99,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,20],this.session_options,"y")),this._bicubic_interpolate_4d}static get matmul(){return this._matmul||(this._matmul=H([8,9,18,0,58,55,10,17,10,1,97,10,1,98,18,1,99,34,6,77,97,116,77,117,108,18,1,114,90,9,10,1,97,18,4,10,2,8,1,90,9,10,1,98,18,4,10,2,8,1,98,9,10,1,99,18,4,10,2,8,1,66,2,16,20],this.session_options,"c")),this._matmul}static get stft(){return this._stft||(this._stft=H([8,7,18,0,58,148,1,10,38,10,1,115,10,1,106,10,1,119,10,1,108,18,1,111,34,4,83,84,70,84,42,15,10,8,111,110,101,115,105,100,101,100,24,1,160,1,2,18,1,115,90,26,10,1,115,18,21,10,19,8,1,18,15,10,3,18,1,98,10,3,18,1,115,10,3,18,1,99,90,11,10,1,106,18,6,10,4,8,7,18,0,90,16,10,1,119,18,11,10,9,8,1,18,5,10,3,18,1,119,90,11,10,1,108,18,6,10,4,8,7,18,0,98,31,10,1,111,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,102,10,3,18,1,100,10,3,18,1,99,66,2,16,17],this.session_options,"o")),this._stft}static get rfft(){return this._rfft||(this._rfft=H([8,9,18,0,58,97,10,33,10,1,120,10,0,10,1,97,18,1,121,34,3,68,70,84,42,15,10,8,111,110,101,115,105,100,101,100,24,1,160,1,2,18,1,100,90,21,10,1,120,18,16,10,14,8,1,18,10,10,3,18,1,115,10,3,18,1,99,90,11,10,1,97,18,6,10,4,8,7,18,0,98,21,10,1,121,18,16,10,14,8,1,18,10,10,3,18,1,115,10,3,18,1,99,66,2,16,20],this.session_options,"y")),this._rfft}static get top_k(){return this._top_k||(this._top_k=H([8,10,18,0,58,73,10,18,10,1,120,10,1,107,18,1,118,18,1,105,34,4,84,111,112,75,18,1,116,90,9,10,1,120,18,4,10,2,8,1,90,15,10,1,107,18,10,10,8,8,7,18,4,10,2,8,1,98,9,10,1,118,18,4,10,2,8,1,98,9,10,1,105,18,4,10,2,8,7,66,2,16,21],this.session_options,["v","i"])),this._top_k}static get slice(){return this._slice||(this._slice=H([8,7,18,0,58,96,10,25,10,1,120,10,1,115,10,1,101,10,1,97,10,1,116,18,1,121,34,5,83,108,105,99,101,18,1,114,90,9,10,1,120,18,4,10,2,8,1,90,9,10,1,115,18,4,10,2,8,7,90,9,10,1,101,18,4,10,2,8,7,90,9,10,1,97,18,4,10,2,8,7,90,9,10,1,116,18,4,10,2,8,7,98,9,10,1,121,18,4,10,2,8,1,66,2,16,13],this.session_options,"y")),this._slice}}We(z,"session_options",{})},"./src/pipelines.js":(T,k,A)=>{A.r(k),A.d(k,{AudioClassificationPipeline:()=>Ve,AutomaticSpeechRecognitionPipeline:()=>Re,DepthEstimationPipeline:()=>ft,DocumentQuestionAnsweringPipeline:()=>Se,FeatureExtractionPipeline:()=>G,FillMaskPipeline:()=>ce,ImageClassificationPipeline:()=>nt,ImageFeatureExtractionPipeline:()=>K,ImageSegmentationPipeline:()=>Ct,ImageToImagePipeline:()=>Me,ImageToTextPipeline:()=>Ke,ObjectDetectionPipeline:()=>et,Pipeline:()=>be,QuestionAnsweringPipeline:()=>re,SummarizationPipeline:()=>I,Text2TextGenerationPipeline:()=>g,TextClassificationPipeline:()=>Ie,TextGenerationPipeline:()=>B,TextToAudioPipeline:()=>xe,TokenClassificationPipeline:()=>ee,TranslationPipeline:()=>e,ZeroShotAudioClassificationPipeline:()=>ve,ZeroShotClassificationPipeline:()=>ue,ZeroShotImageClassificationPipeline:()=>ht,ZeroShotObjectDetectionPipeline:()=>ze,pipeline:()=>Je});var w=A("./src/tokenizers.js"),F=A("./src/models.js"),Y=A("./src/models/auto/processing_auto.js");A("./src/base/processing_utils.js");var U=A("./src/utils/generic.js"),H=A("./src/utils/core.js"),z=A("./src/utils/maths.js"),N=A("./src/utils/audio.js"),D=A("./src/utils/tensor.js"),R=A("./src/utils/image.js");async function Q(rt){return Array.isArray(rt)||(rt=[rt]),await Promise.all(rt.map(Ne=>R.RawImage.read(Ne)))}async function J(rt,Ne){return Array.isArray(rt)||(rt=[rt]),await Promise.all(rt.map(it=>typeof it=="string"||it instanceof URL?(0,N.read_audio)(it,Ne):it instanceof Float64Array?new Float32Array(it):it))}function oe(rt,Ne){Ne&&(rt=rt.map(Tt=>Tt|0));const[it,Et,$e,It]=rt;return{xmin:it,ymin:Et,xmax:$e,ymax:It}}class be extends U.Callable{constructor({task:Ne,model:it,tokenizer:Et=null,processor:$e=null}){super(),this.task=Ne,this.model=it,this.tokenizer=Et,this.processor=$e}async dispose(){await this.model.dispose()}}class Ie extends be{constructor(Ne){super(Ne)}async _call(Ne,{top_k:it=1}={}){const Et=this.tokenizer(Ne,{padding:!0,truncation:!0}),$e=await this.model(Et),It=this.model.config.problem_type==="multi_label_classification"?Wt=>Wt.sigmoid():Wt=>new D.Tensor("float32",(0,z.softmax)(Wt.data),Wt.dims),Tt=this.model.config.id2label,zt=[];for(const Wt of $e.logits){const pe=It(Wt),Ut=await(0,D.topk)(pe,it),Pe=Ut[0].tolist(),ge=Ut[1].tolist().map((fe,He)=>({label:Tt?Tt[fe]:`LABEL_${fe}`,score:Pe[He]}));it===1?zt.push(...ge):zt.push(ge)}return Array.isArray(Ne)||it===1?zt:zt[0]}}class ee extends be{constructor(Ne){super(Ne)}async _call(Ne,{ignore_labels:it=["O"]}={}){const Et=Array.isArray(Ne),$e=this.tokenizer(Et?Ne:[Ne],{padding:!0,truncation:!0}),Tt=(await this.model($e)).logits,zt=this.model.config.id2label,Wt=[];for(let pe=0;pe<Tt.dims[0];++pe){const Ut=$e.input_ids[pe],Pe=Tt[pe],X=[];for(let ge=0;ge<Pe.dims[0];++ge){const fe=Pe[ge],He=(0,z.max)(fe.data)[1],ct=zt?zt[He]:`LABEL_${He}`;if(it.includes(ct))continue;const kt=this.tokenizer.decode([Ut[ge].item()],{skip_special_tokens:!0});if(kt==="")continue;const Dt=(0,z.softmax)(fe.data);X.push({entity:ct,score:Dt[He],index:ge,word:kt})}Wt.push(X)}return Et?Wt:Wt[0]}}class re extends be{constructor(Ne){super(Ne)}async _call(Ne,it,{top_k:Et=1}={}){const $e=this.tokenizer(Ne,{text_pair:it,padding:!0,truncation:!0}),{start_logits:It,end_logits:Tt}=await this.model($e),zt=$e.input_ids.tolist(),Wt=$e.attention_mask.tolist(),pe=this.tokenizer.all_special_ids,Ut=[];for(let Pe=0;Pe<It.dims[0];++Pe){const X=zt[Pe],ge=X.findIndex(Ht=>Ht==this.tokenizer.sep_token_id);Wt[Pe].map((Ht,Vt)=>Ht==1&&(Vt===0||Vt>ge&&pe.findIndex(sr=>sr==X[Vt])===-1));const fe=It[Pe].tolist(),He=Tt[Pe].tolist();for(let Ht=1;Ht<fe.length;++Ht)(Wt[Pe]==0||Ht<=ge||pe.findIndex(Vt=>Vt==X[Ht])!==-1)&&(fe[Ht]=-1/0,He[Ht]=-1/0);const ct=(0,z.softmax)(fe).map((Ht,Vt)=>[Ht,Vt]),kt=(0,z.softmax)(He).map((Ht,Vt)=>[Ht,Vt]);ct[0][0]=0,kt[0][0]=0;const Dt=(0,H.product)(ct,kt).filter(Ht=>Ht[0][1]<=Ht[1][1]).map(Ht=>[Ht[0][1],Ht[1][1],Ht[0][0]*Ht[1][0]]).sort((Ht,Vt)=>Vt[2]-Ht[2]);for(let Ht=0;Ht<Math.min(Dt.length,Et);++Ht){const[Vt,sr,nr]=Dt[Ht],lr=X.slice(Vt,sr+1),Fr=this.tokenizer.decode(lr,{skip_special_tokens:!0});Ut.push({answer:Fr,score:nr})}}return Et===1?Ut[0]:Ut}}class ce extends be{constructor(Ne){super(Ne)}async _call(Ne,{top_k:it=5}={}){const Et=this.tokenizer(Ne,{padding:!0,truncation:!0}),{logits:$e}=await this.model(Et),It=[],Tt=Et.input_ids.tolist();for(let zt=0;zt<Tt.length;++zt){const Wt=Tt[zt],pe=Wt.findIndex(fe=>fe==this.tokenizer.mask_token_id);if(pe===-1)throw Error(`Mask token (${this.tokenizer.mask_token}) not found in text.`);const Ut=$e[zt][pe],Pe=await(0,D.topk)(new D.Tensor("float32",(0,z.softmax)(Ut.data),Ut.dims),it),X=Pe[0].tolist(),ge=Pe[1].tolist();It.push(ge.map((fe,He)=>{const ct=Wt.slice();return ct[pe]=fe,{score:X[He],token:Number(fe),token_str:this.tokenizer.decode([fe]),sequence:this.tokenizer.decode(ct,{skip_special_tokens:!0})}}))}return Array.isArray(Ne)?It:It[0]}}class g extends be{constructor(it){super(it);We(this,"_key","generated_text")}async _call(it,Et={}){Array.isArray(it)||(it=[it]),this.model.config.prefix&&(it=it.map(pe=>this.model.config.prefix+pe));const $e=this.model.config.task_specific_params;$e&&$e[this.task]&&$e[this.task].prefix&&(it=it.map(pe=>$e[this.task].prefix+pe));const It=this.tokenizer,Tt={padding:!0,truncation:!0};let zt;this instanceof e&&"_build_translation_inputs"in It?zt=It._build_translation_inputs(it,Tt,Et):zt=It(it,Tt);const Wt=await this.model.generate({...zt,...Et});return It.batch_decode(Wt,{skip_special_tokens:!0}).map(pe=>({[this._key]:pe}))}}class I extends g{constructor(it){super(it);We(this,"_key","summary_text")}}class e extends g{constructor(it){super(it);We(this,"_key","translation_text")}}function u(rt){return Array.isArray(rt)&&rt.every(Ne=>"role"in Ne&&"content"in Ne)}class B extends be{constructor(Ne){super(Ne)}async _call(Ne,it={}){let Et=!1,$e=!1,It;if(typeof Ne=="string")It=Ne=[Ne];else if(Array.isArray(Ne)&&Ne.every(ge=>typeof ge=="string"))Et=!0,It=Ne;else{if(u(Ne))Ne=[Ne];else if(Array.isArray(Ne)&&Ne.every(u))Et=!0;else throw new Error("Input must be a string, an array of strings, a Chat, or an array of Chats");$e=!0,It=Ne.map(ge=>this.tokenizer.apply_chat_template(ge,{tokenize:!1,add_generation_prompt:!0}))}const Tt=it.add_special_tokens??!1,zt=$e?!1:it.return_full_text??!0;this.tokenizer.padding_side="left";const Wt=this.tokenizer(It,{add_special_tokens:Tt,padding:!0,truncation:!0}),pe=await this.model.generate({...Wt,...it}),Ut=this.tokenizer.batch_decode(pe,{skip_special_tokens:!0});let Pe;!zt&&Wt.input_ids.dims.at(-1)>0&&(Pe=this.tokenizer.batch_decode(Wt.input_ids,{skip_special_tokens:!0}).map(ge=>ge.length));const X=Array.from({length:Ne.length},ge=>[]);for(let ge=0;ge<Ut.length;++ge){const fe=Math.floor(ge/pe.dims[0]*Ne.length);Pe&&(Ut[ge]=Ut[ge].slice(Pe[fe])),X[fe].push({generated_text:$e?[...Ne[fe],{role:"assistant",content:Ut[ge]}]:Ut[ge]})}return!Et&&X.length===1?X[0]:X}}class ue extends be{constructor(Ne){super(Ne),this.label2id=Object.fromEntries(Object.entries(this.model.config.label2id).map(([it,Et])=>[it.toLowerCase(),Et])),this.entailment_id=this.label2id.entailment,this.entailment_id===void 0&&(console.warn("Could not find 'entailment' in label2id mapping. Using 2 as entailment_id."),this.entailment_id=2),this.contradiction_id=this.label2id.contradiction??this.label2id.not_entailment,this.contradiction_id===void 0&&(console.warn("Could not find 'contradiction' in label2id mapping. Using 0 as contradiction_id."),this.contradiction_id=0)}async _call(Ne,it,{hypothesis_template:Et="This example is {}.",multi_label:$e=!1}={}){const It=Array.isArray(Ne);It||(Ne=[Ne]),Array.isArray(it)||(it=[it]);const Tt=it.map(pe=>Et.replace("{}",pe)),zt=$e||it.length===1,Wt=[];for(const pe of Ne){const Ut=[];for(const ge of Tt){const fe=this.tokenizer(pe,{text_pair:ge,padding:!0,truncation:!0}),He=await this.model(fe);zt?Ut.push([He.logits.data[this.contradiction_id],He.logits.data[this.entailment_id]]):Ut.push(He.logits.data[this.entailment_id])}const X=(zt?Ut.map(ge=>(0,z.softmax)(ge)[1]):(0,z.softmax)(Ut)).map((ge,fe)=>[ge,fe]).sort((ge,fe)=>fe[0]-ge[0]);Wt.push({sequence:pe,labels:X.map(ge=>it[ge[1]]),scores:X.map(ge=>ge[0])})}return It?Wt:Wt[0]}}class G extends be{constructor(Ne){super(Ne)}async _call(Ne,{pooling:it="none",normalize:Et=!1,quantize:$e=!1,precision:It="binary"}={}){const Tt=this.tokenizer(Ne,{padding:!0,truncation:!0}),zt=await this.model(Tt);let Wt=zt.last_hidden_state??zt.logits??zt.token_embeddings;if(it!=="none")if(it==="mean")Wt=(0,D.mean_pooling)(Wt,Tt.attention_mask);else if(it==="cls")Wt=Wt.slice(null,0);else throw Error(`Pooling method '${it}' not supported.`);return Et&&(Wt=Wt.normalize(2,-1)),$e&&(Wt=(0,D.quantize_embeddings)(Wt,It)),Wt}}class K extends be{constructor(Ne){super(Ne)}async _call(Ne,{pool:it=null}={}){const Et=await Q(Ne),{pixel_values:$e}=await this.processor(Et),It=await this.model({pixel_values:$e});let Tt;if(it){if(!("pooler_output"in It))throw Error("No pooled output was returned. Make sure the model has a 'pooler' layer when using the 'pool' option.");Tt=It.pooler_output}else Tt=It.last_hidden_state??It.logits??It.image_embeds;return Tt}}class Ve extends be{constructor(Ne){super(Ne)}async _call(Ne,{top_k:it=5}={}){const Et=this.processor.feature_extractor.config.sampling_rate,$e=await J(Ne,Et),It=this.model.config.id2label,Tt=[];for(const zt of $e){const Wt=await this.processor(zt),Ut=(await this.model(Wt)).logits[0],Pe=await(0,D.topk)(new D.Tensor("float32",(0,z.softmax)(Ut.data),Ut.dims),it),X=Pe[0].tolist(),fe=Pe[1].tolist().map((He,ct)=>({label:It?It[He]:`LABEL_${He}`,score:X[ct]}));Tt.push(fe)}return Array.isArray(Ne)?Tt:Tt[0]}}class ve extends be{constructor(Ne){super(Ne)}async _call(Ne,it,{hypothesis_template:Et="This is a sound of {}."}={}){const $e=!Array.isArray(Ne);$e&&(Ne=[Ne]);const It=it.map(Ut=>Et.replace("{}",Ut)),Tt=this.tokenizer(It,{padding:!0,truncation:!0}),zt=this.processor.feature_extractor.config.sampling_rate,Wt=await J(Ne,zt),pe=[];for(const Ut of Wt){const Pe=await this.processor(Ut),X=await this.model({...Tt,...Pe}),ge=(0,z.softmax)(X.logits_per_audio.data);pe.push([...ge].map((fe,He)=>({score:fe,label:it[He]})))}return $e?pe[0]:pe}}class Re extends be{constructor(Ne){super(Ne)}async _call(Ne,it={}){switch(this.model.config.model_type){case"whisper":return this._call_whisper(Ne,it);case"wav2vec2":case"wav2vec2-bert":case"unispeech":case"unispeech-sat":case"hubert":return this._call_wav2vec2(Ne,it);case"moonshine":return this._call_moonshine(Ne,it);default:throw new Error(`AutomaticSpeechRecognitionPipeline does not support model type '${this.model.config.model_type}'.`)}}async _call_wav2vec2(Ne,it){it.language&&console.warn('`language` parameter is not yet supported for `wav2vec2` models, defaulting to "English".'),it.task&&console.warn('`task` parameter is not yet supported for `wav2vec2` models, defaulting to "transcribe".');const Et=!Array.isArray(Ne);Et&&(Ne=[Ne]);const $e=this.processor.feature_extractor.config.sampling_rate,It=await J(Ne,$e),Tt=[];for(const zt of It){const Wt=await this.processor(zt),Ut=(await this.model(Wt)).logits[0],Pe=[];for(const ge of Ut)Pe.push((0,z.max)(ge.data)[1]);const X=this.tokenizer.decode(Pe);Tt.push({text:X})}return Et?Tt[0]:Tt}async _call_whisper(Ne,it){const Et=it.return_timestamps??!1,$e=it.chunk_length_s??0,It=it.force_full_sequences??!1;let Tt=it.stride_length_s??null;const zt={...it};Et==="word"&&(zt.return_token_timestamps=!0,zt.return_timestamps=!1);const Wt=!Array.isArray(Ne);Wt&&(Ne=[Ne]);const pe=this.processor.feature_extractor.config.chunk_length/this.model.config.max_source_positions,Ut=this.processor.feature_extractor.config.hop_length,Pe=this.processor.feature_extractor.config.sampling_rate,X=await J(Ne,Pe),ge=[];for(const fe of X){let He=[];if($e>0){if(Tt===null)Tt=$e/6;else if($e<=Tt)throw Error("`chunk_length_s` must be larger than `stride_length_s`.");const Dt=Pe*$e,Ht=Pe*Tt,Vt=Dt-2*Ht;let sr=0;for(;;){const nr=sr+Dt,lr=fe.subarray(sr,nr),Fr=await this.processor(lr),ns=sr===0,Gs=nr>=fe.length;if(He.push({stride:[lr.length,ns?0:Ht,Gs?0:Ht],input_features:Fr.input_features,is_last:Gs}),Gs)break;sr+=Vt}}else He=[{stride:[fe.length,0,0],input_features:(await this.processor(fe)).input_features,is_last:!0}];for(const Dt of He){zt.num_frames=Math.floor(Dt.stride[0]/Ut);const Ht=await this.model.generate({inputs:Dt.input_features,...zt});Et==="word"?(Dt.tokens=Ht.sequences.tolist()[0],Dt.token_timestamps=Ht.token_timestamps.tolist()[0].map(Vt=>(0,z.round)(Vt,2))):Dt.tokens=Ht[0].tolist(),Dt.stride=Dt.stride.map(Vt=>Vt/Pe)}const[ct,kt]=this.tokenizer._decode_asr(He,{time_precision:pe,return_timestamps:Et,force_full_sequences:It});ge.push({text:ct,...kt})}return Wt?ge[0]:ge}async _call_moonshine(Ne,it){const Et=!Array.isArray(Ne);Et&&(Ne=[Ne]);const $e=this.processor.feature_extractor.config.sampling_rate,It=await J(Ne,$e),Tt=[];for(const zt of It){const Wt=await this.processor(zt),pe=Math.floor(zt.length/$e)*6,Ut=await this.model.generate({max_new_tokens:pe,...it,...Wt}),Pe=this.processor.batch_decode(Ut,{skip_special_tokens:!0})[0];Tt.push({text:Pe})}return Et?Tt[0]:Tt}}class Ke extends be{constructor(Ne){super(Ne)}async _call(Ne,it={}){const Et=Array.isArray(Ne),$e=await Q(Ne),{pixel_values:It}=await this.processor($e),Tt=[];for(const zt of It){zt.dims=[1,...zt.dims];const Wt=await this.model.generate({inputs:zt,...it}),pe=this.tokenizer.batch_decode(Wt,{skip_special_tokens:!0}).map(Ut=>({generated_text:Ut.trim()}));Tt.push(pe)}return Et?Tt:Tt[0]}}class nt extends be{constructor(Ne){super(Ne)}async _call(Ne,{top_k:it=5}={}){const Et=await Q(Ne),{pixel_values:$e}=await this.processor(Et),It=await this.model({pixel_values:$e}),Tt=this.model.config.id2label,zt=[];for(const Wt of It.logits){const pe=await(0,D.topk)(new D.Tensor("float32",(0,z.softmax)(Wt.data),Wt.dims),it),Ut=pe[0].tolist(),X=pe[1].tolist().map((ge,fe)=>({label:Tt?Tt[ge]:`LABEL_${ge}`,score:Ut[fe]}));zt.push(X)}return Array.isArray(Ne)?zt:zt[0]}}class Ct extends be{constructor(Ne){super(Ne),this.subtasks_mapping={panoptic:"post_process_panoptic_segmentation",instance:"post_process_instance_segmentation",semantic:"post_process_semantic_segmentation"}}async _call(Ne,{threshold:it=.5,mask_threshold:Et=.5,overlap_mask_area_threshold:$e=.8,label_ids_to_fuse:It=null,target_sizes:Tt=null,subtask:zt=null}={}){if(Array.isArray(Ne)&&Ne.length!==1)throw Error("Image segmentation pipeline currently only supports a batch size of 1.");const pe=await Q(Ne),Ut=pe.map(kt=>[kt.height,kt.width]),{pixel_values:Pe,pixel_mask:X}=await this.processor(pe),ge=await this.model({pixel_values:Pe,pixel_mask:X});let fe=null;if(zt!==null)fe=this.subtasks_mapping[zt];else for(let[kt,Dt]of Object.entries(this.subtasks_mapping))if(Dt in this.processor.image_processor){fe=this.processor.image_processor[Dt].bind(this.processor.image_processor),zt=kt;break}const He=this.model.config.id2label,ct=[];if(zt==="panoptic"||zt==="instance"){const kt=fe(ge,it,Et,$e,It,Tt??Ut)[0],Dt=kt.segmentation;for(const Ht of kt.segments_info){const Vt=new Uint8ClampedArray(Dt.data.length);for(let nr=0;nr<Dt.data.length;++nr)Dt.data[nr]===Ht.id&&(Vt[nr]=255);const sr=new R.RawImage(Vt,Dt.dims[1],Dt.dims[0],1);ct.push({score:Ht.score,label:He[Ht.label_id],mask:sr})}}else if(zt==="semantic"){const{segmentation:kt,labels:Dt}=fe(ge,Tt??Ut)[0];for(const Ht of Dt){const Vt=new Uint8ClampedArray(kt.data.length);for(let nr=0;nr<kt.data.length;++nr)kt.data[nr]===Ht&&(Vt[nr]=255);const sr=new R.RawImage(Vt,kt.dims[1],kt.dims[0],1);ct.push({score:null,label:He[Ht],mask:sr})}}else throw Error(`Subtask ${zt} not supported.`);return ct}}class ht extends be{constructor(Ne){super(Ne)}async _call(Ne,it,{hypothesis_template:Et="This is a photo of {}"}={}){const $e=Array.isArray(Ne),It=await Q(Ne),Tt=it.map(X=>Et.replace("{}",X)),zt=this.tokenizer(Tt,{padding:this.model.config.model_type==="siglip"?"max_length":!0,truncation:!0}),{pixel_values:Wt}=await this.processor(It),pe=await this.model({...zt,pixel_values:Wt}),Ut=this.model.config.model_type==="siglip"?X=>X.sigmoid().data:X=>(0,z.softmax)(X.data),Pe=[];for(const X of pe.logits_per_image){const fe=[...Ut(X)].map((He,ct)=>({score:He,label:it[ct]}));fe.sort((He,ct)=>ct.score-He.score),Pe.push(fe)}return $e?Pe:Pe[0]}}class et extends be{constructor(Ne){super(Ne)}async _call(Ne,{threshold:it=.9,percentage:Et=!1}={}){const $e=Array.isArray(Ne);if($e&&Ne.length!==1)throw Error("Object detection pipeline currently only supports a batch size of 1.");const It=await Q(Ne),Tt=Et?null:It.map(ge=>[ge.height,ge.width]),{pixel_values:zt,pixel_mask:Wt}=await this.processor(It),pe=await this.model({pixel_values:zt,pixel_mask:Wt}),Ut=this.processor.image_processor.post_process_object_detection(pe,it,Tt),Pe=this.model.config.id2label,X=Ut.map(ge=>ge.boxes.map((fe,He)=>({score:ge.scores[He],label:Pe[ge.classes[He]],box:oe(fe,!Et)})));return $e?X:X[0]}}class ze extends be{constructor(Ne){super(Ne)}async _call(Ne,it,{threshold:Et=.1,top_k:$e=null,percentage:It=!1}={}){const Tt=Array.isArray(Ne),zt=await Q(Ne),Wt=this.tokenizer(it,{padding:!0,truncation:!0}),pe=await this.processor(zt),Ut=[];for(let Pe=0;Pe<zt.length;++Pe){const X=zt[Pe],ge=It?null:[[X.height,X.width]],fe=pe.pixel_values[Pe].unsqueeze_(0),He=await this.model({...Wt,pixel_values:fe});let ct;if("post_process_grounded_object_detection"in this.processor){const kt=this.processor.post_process_grounded_object_detection(He,Wt.input_ids,{box_threshold:Et,text_threshold:Et,target_sizes:ge})[0];ct=kt.boxes.map((Dt,Ht)=>({score:kt.scores[Ht],label:kt.labels[Ht],box:oe(Dt,!It)}))}else{const kt=this.processor.image_processor.post_process_object_detection(He,Et,ge,!0)[0];ct=kt.boxes.map((Dt,Ht)=>({score:kt.scores[Ht],label:it[kt.classes[Ht]],box:oe(Dt,!It)}))}ct.sort((kt,Dt)=>Dt.score-kt.score),$e!==null&&(ct=ct.slice(0,$e)),Ut.push(ct)}return Tt?Ut:Ut[0]}}class Se extends be{constructor(Ne){super(Ne)}async _call(Ne,it,Et={}){const $e=(await Q(Ne))[0],{pixel_values:It}=await this.processor($e),Tt=`<s_docvqa><s_question>${it}</s_question><s_answer>`,zt=this.tokenizer(Tt,{add_special_tokens:!1,padding:!0,truncation:!0}).input_ids,Wt=await this.model.generate({inputs:It,max_length:this.model.config.decoder.max_position_embeddings,decoder_input_ids:zt,...Et}),Ut=this.tokenizer.batch_decode(Wt)[0].match(/<s_answer>(.*?)<\/s_answer>/);let Pe=null;return Ut&&Ut.length>=2&&(Pe=Ut[1].trim()),[{answer:Pe}]}}class xe extends be{constructor(it){super(it);We(this,"DEFAULT_VOCODER_ID","Xenova/speecht5_hifigan");this.vocoder=it.vocoder??null}async _call(it,{speaker_embeddings:Et=null}={}){return this.processor?this._call_text_to_spectrogram(it,{speaker_embeddings:Et}):this._call_text_to_waveform(it)}async _call_text_to_waveform(it){const Et=this.tokenizer(it,{padding:!0,truncation:!0}),{waveform:$e}=await this.model(Et),It=this.model.config.sampling_rate;return new N.RawAudio($e.data,It)}async _call_text_to_spectrogram(it,{speaker_embeddings:Et}){if(this.vocoder||(console.log("No vocoder specified, using default HifiGan vocoder."),this.vocoder=await F.AutoModel.from_pretrained(this.DEFAULT_VOCODER_ID,{dtype:"fp32"})),(typeof Et=="string"||Et instanceof URL)&&(Et=new Float32Array(await(await fetch(Et)).arrayBuffer())),Et instanceof Float32Array)Et=new D.Tensor("float32",Et,[1,Et.length]);else if(!(Et instanceof D.Tensor))throw new Error("Speaker embeddings must be a `Tensor`, `Float32Array`, `string`, or `URL`.");const{input_ids:$e}=this.tokenizer(it,{padding:!0,truncation:!0}),{waveform:It}=await this.model.generate_speech($e,Et,{vocoder:this.vocoder}),Tt=this.processor.feature_extractor.config.sampling_rate;return new N.RawAudio(It.data,Tt)}}class Me extends be{constructor(Ne){super(Ne)}async _call(Ne){const it=await Q(Ne),Et=await this.processor(it),$e=await this.model(Et),It=[];for(const Tt of $e.reconstruction){const zt=Tt.squeeze().clamp_(0,1).mul_(255).round_().to("uint8");It.push(R.RawImage.fromTensor(zt))}return It.length>1?It:It[0]}}class ft extends be{constructor(Ne){super(Ne)}async _call(Ne){const it=await Q(Ne),Et=await this.processor(it),{predicted_depth:$e}=await this.model(Et),It=[];for(let Tt=0;Tt<it.length;++Tt){const zt=$e[Tt],[Wt,pe]=zt.dims.slice(-2),[Ut,Pe]=it[Tt].size,X=(await(0,D.interpolate_4d)(zt.view(1,1,Wt,pe),{size:[Pe,Ut],mode:"bilinear"})).view(Pe,Ut),ge=X.min().item(),fe=X.max().item(),He=X.sub(ge).div_(fe-ge).mul_(255).to("uint8").unsqueeze(0),ct=R.RawImage.fromTensor(He);It.push({predicted_depth:X,depth:ct})}return It.length>1?It:It[0]}}const gt=Object.freeze({"text-classification":{tokenizer:w.AutoTokenizer,pipeline:Ie,model:F.AutoModelForSequenceClassification,default:{model:"Xenova/distilbert-base-uncased-finetuned-sst-2-english"},type:"text"},"token-classification":{tokenizer:w.AutoTokenizer,pipeline:ee,model:F.AutoModelForTokenClassification,default:{model:"Xenova/bert-base-multilingual-cased-ner-hrl"},type:"text"},"question-answering":{tokenizer:w.AutoTokenizer,pipeline:re,model:F.AutoModelForQuestionAnswering,default:{model:"Xenova/distilbert-base-cased-distilled-squad"},type:"text"},"fill-mask":{tokenizer:w.AutoTokenizer,pipeline:ce,model:F.AutoModelForMaskedLM,default:{model:"Xenova/bert-base-uncased"},type:"text"},summarization:{tokenizer:w.AutoTokenizer,pipeline:I,model:F.AutoModelForSeq2SeqLM,default:{model:"Xenova/distilbart-cnn-6-6"},type:"text"},translation:{tokenizer:w.AutoTokenizer,pipeline:e,model:F.AutoModelForSeq2SeqLM,default:{model:"Xenova/t5-small"},type:"text"},"text2text-generation":{tokenizer:w.AutoTokenizer,pipeline:g,model:F.AutoModelForSeq2SeqLM,default:{model:"Xenova/flan-t5-small"},type:"text"},"text-generation":{tokenizer:w.AutoTokenizer,pipeline:B,model:F.AutoModelForCausalLM,default:{model:"Xenova/gpt2"},type:"text"},"zero-shot-classification":{tokenizer:w.AutoTokenizer,pipeline:ue,model:F.AutoModelForSequenceClassification,default:{model:"Xenova/distilbert-base-uncased-mnli"},type:"text"},"audio-classification":{pipeline:Ve,model:F.AutoModelForAudioClassification,processor:Y.AutoProcessor,default:{model:"Xenova/wav2vec2-base-superb-ks"},type:"audio"},"zero-shot-audio-classification":{tokenizer:w.AutoTokenizer,pipeline:ve,model:F.AutoModel,processor:Y.AutoProcessor,default:{model:"Xenova/clap-htsat-unfused"},type:"multimodal"},"automatic-speech-recognition":{tokenizer:w.AutoTokenizer,pipeline:Re,model:[F.AutoModelForSpeechSeq2Seq,F.AutoModelForCTC],processor:Y.AutoProcessor,default:{model:"Xenova/whisper-tiny.en"},type:"multimodal"},"text-to-audio":{tokenizer:w.AutoTokenizer,pipeline:xe,model:[F.AutoModelForTextToWaveform,F.AutoModelForTextToSpectrogram],processor:[Y.AutoProcessor,null],default:{model:"Xenova/speecht5_tts"},type:"text"},"image-to-text":{tokenizer:w.AutoTokenizer,pipeline:Ke,model:F.AutoModelForVision2Seq,processor:Y.AutoProcessor,default:{model:"Xenova/vit-gpt2-image-captioning"},type:"multimodal"},"image-classification":{pipeline:nt,model:F.AutoModelForImageClassification,processor:Y.AutoProcessor,default:{model:"Xenova/vit-base-patch16-224"},type:"multimodal"},"image-segmentation":{pipeline:Ct,model:[F.AutoModelForImageSegmentation,F.AutoModelForSemanticSegmentation,F.AutoModelForUniversalSegmentation],processor:Y.AutoProcessor,default:{model:"Xenova/detr-resnet-50-panoptic"},type:"multimodal"},"zero-shot-image-classification":{tokenizer:w.AutoTokenizer,pipeline:ht,model:F.AutoModel,processor:Y.AutoProcessor,default:{model:"Xenova/clip-vit-base-patch32"},type:"multimodal"},"object-detection":{pipeline:et,model:F.AutoModelForObjectDetection,processor:Y.AutoProcessor,default:{model:"Xenova/detr-resnet-50"},type:"multimodal"},"zero-shot-object-detection":{tokenizer:w.AutoTokenizer,pipeline:ze,model:F.AutoModelForZeroShotObjectDetection,processor:Y.AutoProcessor,default:{model:"Xenova/owlvit-base-patch32"},type:"multimodal"},"document-question-answering":{tokenizer:w.AutoTokenizer,pipeline:Se,model:F.AutoModelForDocumentQuestionAnswering,processor:Y.AutoProcessor,default:{model:"Xenova/donut-base-finetuned-docvqa"},type:"multimodal"},"image-to-image":{pipeline:Me,model:F.AutoModelForImageToImage,processor:Y.AutoProcessor,default:{model:"Xenova/swin2SR-classical-sr-x2-64"},type:"image"},"depth-estimation":{pipeline:ft,model:F.AutoModelForDepthEstimation,processor:Y.AutoProcessor,default:{model:"Xenova/dpt-large"},type:"image"},"feature-extraction":{tokenizer:w.AutoTokenizer,pipeline:G,model:F.AutoModel,default:{model:"Xenova/all-MiniLM-L6-v2"},type:"text"},"image-feature-extraction":{processor:Y.AutoProcessor,pipeline:K,model:[F.AutoModelForImageFeatureExtraction,F.AutoModel],default:{model:"Xenova/vit-base-patch16-224-in21k"},type:"image"}}),_t=Object.freeze({"sentiment-analysis":"text-classification",ner:"token-classification",asr:"automatic-speech-recognition","text-to-speech":"text-to-audio",embeddings:"feature-extraction"});async function Je(rt,Ne=null,{progress_callback:it=null,config:Et=null,cache_dir:$e=null,local_files_only:It=!1,revision:Tt="main",device:zt=null,dtype:Wt=null,model_file_name:pe=null,session_options:Ut={}}={}){rt=_t[rt]??rt;const Pe=gt[rt.split("_",1)[0]];if(!Pe)throw Error(`Unsupported pipeline: ${rt}. Must be one of [${Object.keys(gt)}]`);Ne||(Ne=Pe.default.model,console.log(`No model specified. Using default model: "${Ne}".`));const X={progress_callback:it,config:Et,cache_dir:$e,local_files_only:It,revision:Tt,device:zt,dtype:Wt,model_file_name:pe,session_options:Ut},ge=new Map([["tokenizer",Pe.tokenizer],["model",Pe.model],["processor",Pe.processor]]),fe=await bt(ge,Ne,X);fe.task=rt,(0,H.dispatchCallback)(it,{status:"ready",task:rt,model:Ne});const He=Pe.pipeline;return new He(fe)}async function bt(rt,Ne,it){const Et=Object.create(null),$e=[];for(const[It,Tt]of rt.entries()){if(!Tt)continue;let zt;Array.isArray(Tt)?zt=new Promise(async(Wt,pe)=>{var Pe,X;let Ut;for(const ge of Tt){if(ge===null){Wt(null);return}try{Wt(await ge.from_pretrained(Ne,it));return}catch(fe){if((Pe=fe.message)!=null&&Pe.includes("Unsupported model type"))Ut=fe;else if((X=fe.message)!=null&&X.includes("Could not locate file"))Ut=fe;else{pe(fe);return}}}pe(Ut)}):zt=Tt.from_pretrained(Ne,it),Et[It]=zt,$e.push(zt)}await Promise.all($e);for(const[It,Tt]of Object.entries(Et))Et[It]=await Tt;return Et}},"./src/tokenizers.js":(T,k,A)=>{A.r(k),A.d(k,{AlbertTokenizer:()=>vr,AutoTokenizer:()=>wt,BartTokenizer:()=>Ss,BertTokenizer:()=>Wr,BlenderbotSmallTokenizer:()=>hi,BlenderbotTokenizer:()=>Ai,BloomTokenizer:()=>Tn,CLIPTokenizer:()=>ds,CamembertTokenizer:()=>tr,CodeGenTokenizer:()=>ri,CodeLlamaTokenizer:()=>Ma,CohereTokenizer:()=>Qe,ConvBertTokenizer:()=>hn,DebertaTokenizer:()=>Ba,DebertaV2Tokenizer:()=>In,DistilBertTokenizer:()=>sa,ElectraTokenizer:()=>jr,EsmTokenizer:()=>Dn,FalconTokenizer:()=>Ei,GPT2Tokenizer:()=>xn,GPTNeoXTokenizer:()=>Pn,GemmaTokenizer:()=>Bi,Grok1Tokenizer:()=>Vn,HerbertTokenizer:()=>ln,LlamaTokenizer:()=>Mi,M2M100Tokenizer:()=>ei,MBart50Tokenizer:()=>Xa,MBartTokenizer:()=>Ls,MPNetTokenizer:()=>$n,MarianTokenizer:()=>qr,MgpstrTokenizer:()=>ut,MobileBertTokenizer:()=>Es,NllbTokenizer:()=>cn,NougatTokenizer:()=>Gn,PreTrainedTokenizer:()=>gr,Qwen2Tokenizer:()=>ma,RoFormerTokenizer:()=>kn,RobertaTokenizer:()=>_a,SiglipTokenizer:()=>ys,SpeechT5Tokenizer:()=>Wn,SqueezeBertTokenizer:()=>pn,T5Tokenizer:()=>Vs,TokenizerModel:()=>K,VitsTokenizer:()=>qt,Wav2Vec2CTCTokenizer:()=>pi,WhisperTokenizer:()=>ti,XLMRobertaTokenizer:()=>Jn,XLMTokenizer:()=>Qr,is_chinese_char:()=>ce});var w=A("./src/utils/generic.js"),F=A("./src/utils/core.js"),Y=A("./src/utils/hub.js"),U=A("./src/utils/maths.js"),H=A("./src/utils/tensor.js"),z=A("./src/utils/data-structures.js"),N=A("./node_modules/@huggingface/jinja/dist/index.js"),D=A("./src/models/whisper/common_whisper.js");async function R(tt,Ae){const Ge=await Promise.all([(0,Y.getModelJSON)(tt,"tokenizer.json",!0,Ae),(0,Y.getModelJSON)(tt,"tokenizer_config.json",!0,Ae)]);return Ae.legacy!==null&&(Ge[1].legacy=Ae.legacy),Ge}function Q(tt,Ae){const Ge=[];let at=0;for(const Le of tt.matchAll(Ae)){const vt=Le[0];at<Le.index&&Ge.push(tt.slice(at,Le.index)),vt.length>0&&Ge.push(vt),at=Le.index+vt.length}return at<tt.length&&Ge.push(tt.slice(at)),Ge}function J(tt,Ae=!0){if(tt.Regex!==void 0){let Ge=tt.Regex.replace(/\\([#&~])/g,"$1");for(const[at,Le]of ue)Ge=Ge.replaceAll(at,Le);return new RegExp(Ge,"gu")}else if(tt.String!==void 0){const Ge=(0,F.escapeRegExp)(tt.String);return new RegExp(Ae?Ge:`(${Ge})`,"gu")}else return console.warn("Unknown pattern type:",tt),null}function oe(tt){return new Map(Object.entries(tt))}function be(tt){const Ae=tt.dims;switch(Ae.length){case 1:return tt.tolist();case 2:if(Ae[0]!==1)throw new Error("Unable to decode tensor with `batch size !== 1`. Use `tokenizer.batch_decode(...)` for batched inputs.");return tt.tolist()[0];default:throw new Error(`Expected tensor to have 1-2 dimensions, got ${Ae.length}.`)}}function Ie(tt){return tt.replace(/ \./g,".").replace(/ \?/g,"?").replace(/ \!/g,"!").replace(/ ,/g,",").replace(/ \' /g,"'").replace(/ n\'t/g,"n't").replace(/ \'m/g,"'m").replace(/ \'s/g,"'s").replace(/ \'ve/g,"'ve").replace(/ \'re/g,"'re")}function ee(tt){return tt.replace(new RegExp("\\p{M}","gu"),"")}function re(tt){return ee(tt.toLowerCase())}function ce(tt){return tt>=19968&&tt<=40959||tt>=13312&&tt<=19903||tt>=131072&&tt<=173791||tt>=173824&&tt<=177983||tt>=177984&&tt<=178207||tt>=178208&&tt<=183983||tt>=63744&&tt<=64255||tt>=194560&&tt<=195103}function g(tt,Ae,Ge){const at=[];let Le=0;for(;Le<tt.length;){if(at.push(tt[Le]),(Ae.get(tt[Le])??Ge)!==Ge){++Le;continue}for(;++Le<tt.length&&(Ae.get(tt[Le])??Ge)===Ge;)Ae.get(at.at(-1))!==Ge&&(at[at.length-1]+=tt[Le])}return at}function I(tt){return tt.match(/\S+/g)||[]}const e="\\p{P}\\u0021-\\u002F\\u003A-\\u0040\\u005B-\\u0060\\u007B-\\u007E",u=new RegExp(`^[${e}]+$`,"gu"),B=".,!?…。，、।۔،",ue=new Map([["(?i:'s|'t|'re|'ve|'m|'ll|'d)","(?:'([sS]|[tT]|[rR][eE]|[vV][eE]|[mM]|[lL][lL]|[dD]))"],[` ?[^(\\s|[${B}])]+`,` ?[^\\s${B}]+`]]);class G{constructor(Ae){this.content=Ae.content,this.id=Ae.id,this.single_word=Ae.single_word??!1,this.lstrip=Ae.lstrip??!1,this.rstrip=Ae.rstrip??!1,this.special=Ae.special??!1,this.normalized=Ae.normalized??null}}class K extends w.Callable{constructor(Ae){super(),this.config=Ae,this.vocab=[],this.tokens_to_ids=new Map,this.unk_token_id=void 0,this.unk_token=void 0,this.end_of_word_suffix=void 0,this.fuse_unk=this.config.fuse_unk??!1}static fromConfig(Ae,...Ge){switch(Ae.type){case"WordPiece":return new Ve(Ae);case"Unigram":return new ve(Ae,...Ge);case"BPE":return new nt(Ae);default:if(Ae.vocab)return Array.isArray(Ae.vocab)?new ve(Ae,...Ge):typeof Ae.vocab=="object"&&Ae.continuing_subword_prefix&&Ae.unk_token?new Ve(Ae):new Ct(Ae,...Ge);throw new Error(`Unknown TokenizerModel type: ${Ae.type}`)}}_call(Ae){return Ae=this.encode(Ae),this.fuse_unk&&(Ae=g(Ae,this.tokens_to_ids,this.unk_token_id)),Ae}encode(Ae){throw Error("encode should be implemented in subclass.")}convert_tokens_to_ids(Ae){return Ae.map(Ge=>this.tokens_to_ids.get(Ge)??this.unk_token_id)}convert_ids_to_tokens(Ae){return Ae.map(Ge=>this.vocab[Ge]??this.unk_token)}}class Ve extends K{constructor(Ae){super(Ae),this.tokens_to_ids=oe(Ae.vocab),this.unk_token_id=this.tokens_to_ids.get(Ae.unk_token),this.unk_token=Ae.unk_token,this.max_input_chars_per_word=Ae.max_input_chars_per_word??100,this.vocab=new Array(this.tokens_to_ids.size);for(const[Ge,at]of this.tokens_to_ids)this.vocab[at]=Ge}encode(Ae){const Ge=[];for(const at of Ae){const Le=[...at];if(Le.length>this.max_input_chars_per_word){Ge.push(this.unk_token);continue}let vt=!1,Pt=0;const ir=[];for(;Pt<Le.length;){let yr=Le.length,hr=null;for(;Pt<yr;){let xr=Le.slice(Pt,yr).join("");if(Pt>0&&(xr=this.config.continuing_subword_prefix+xr),this.tokens_to_ids.has(xr)){hr=xr;break}--yr}if(hr===null){vt=!0;break}ir.push(hr),Pt=yr}vt?Ge.push(this.unk_token):Ge.push(...ir)}return Ge}}class ve extends K{constructor(Ae,Ge){super(Ae);const at=Ae.vocab.length;this.vocab=new Array(at),this.scores=new Array(at);for(let Le=0;Le<at;++Le)[this.vocab[Le],this.scores[Le]]=Ae.vocab[Le];this.unk_token_id=Ae.unk_id,this.unk_token=this.vocab[Ae.unk_id],this.tokens_to_ids=new Map(this.vocab.map((Le,vt)=>[Le,vt])),this.bos_token=" ",this.bos_token_id=this.tokens_to_ids.get(this.bos_token),this.eos_token=Ge.eos_token,this.eos_token_id=this.tokens_to_ids.get(this.eos_token),this.unk_token=this.vocab[this.unk_token_id],this.minScore=(0,U.min)(this.scores)[0],this.unk_score=this.minScore-10,this.scores[this.unk_token_id]=this.unk_score,this.trie=new z.CharTrie,this.trie.extend(this.vocab),this.fuse_unk=!0}populateNodes(Ae){const Ge=Ae.chars,at=1;let Le=0;for(;Le<Ge.length;){let vt=!1;const Pt=Ge.slice(Le).join(""),ir=this.trie.commonPrefixSearch(Pt);for(const yr of ir){const hr=this.tokens_to_ids.get(yr),xr=this.scores[hr],Gr=(0,F.len)(yr);Ae.insert(Le,Gr,xr,hr),!vt&&Gr===at&&(vt=!0)}vt||Ae.insert(Le,at,this.unk_score,this.unk_token_id),Le+=at}}tokenize(Ae){const Ge=new z.TokenLattice(Ae,this.bos_token_id,this.eos_token_id);return this.populateNodes(Ge),Ge.tokens()}encode(Ae){const Ge=[];for(const at of Ae){const Le=this.tokenize(at);Ge.push(...Le)}return Ge}}const Re=(()=>{const tt=[...Array.from({length:94},(Le,vt)=>vt+33),...Array.from({length:12},(Le,vt)=>vt+161),...Array.from({length:82},(Le,vt)=>vt+174)],Ae=tt.slice();let Ge=0;for(let Le=0;Le<256;++Le)tt.includes(Le)||(tt.push(Le),Ae.push(256+Ge),Ge+=1);const at=Ae.map(Le=>String.fromCharCode(Le));return Object.fromEntries(tt.map((Le,vt)=>[Le,at[vt]]))})(),Ke=(0,F.reverseDictionary)(Re);class nt extends K{constructor(Ae){super(Ae),this.tokens_to_ids=oe(Ae.vocab),this.unk_token_id=this.tokens_to_ids.get(Ae.unk_token),this.unk_token=Ae.unk_token,this.vocab=new Array(this.tokens_to_ids.size);for(const[at,Le]of this.tokens_to_ids)this.vocab[Le]=at;const Ge=Array.isArray(Ae.merges[0]);this.merges=Ge?Ae.merges:Ae.merges.map(at=>at.split(" ",2)),this.bpe_ranks=new Map(this.merges.map((at,Le)=>[JSON.stringify(at),Le])),this.end_of_word_suffix=Ae.end_of_word_suffix,this.continuing_subword_suffix=Ae.continuing_subword_suffix??null,this.byte_fallback=this.config.byte_fallback??!1,this.byte_fallback&&(this.text_encoder=new TextEncoder),this.ignore_merges=this.config.ignore_merges??!1,this.cache=new Map}bpe(Ae){if(Ae.length===0)return[];const Ge=this.cache.get(Ae);if(Ge!==void 0)return Ge;const at=Array.from(Ae);this.end_of_word_suffix&&(at[at.length-1]+=this.end_of_word_suffix);let Le=[];if(at.length>1){const vt=new z.PriorityQueue((yr,hr)=>yr.score<hr.score);let Pt={token:at[0],bias:0,prev:null,next:null},ir=Pt;for(let yr=1;yr<at.length;++yr){const hr={bias:yr/at.length,token:at[yr],prev:ir,next:null};ir.next=hr,this._add_node(vt,ir),ir=hr}for(;!vt.isEmpty();){const yr=vt.pop();if(yr.deleted||!yr.next||yr.next.deleted)continue;if(yr.deleted=!0,yr.next.deleted=!0,yr.prev){const xr={...yr.prev};yr.prev.deleted=!0,yr.prev=xr,xr.prev?xr.prev.next=xr:Pt=xr}const hr={token:yr.token+yr.next.token,bias:yr.bias,prev:yr.prev,next:yr.next.next};hr.prev?(hr.prev.next=hr,this._add_node(vt,hr.prev)):Pt=hr,hr.next&&(hr.next.prev=hr,this._add_node(vt,hr))}for(let yr=Pt;yr!==null;yr=yr.next)Le.push(yr.token)}else Le=at;if(this.continuing_subword_suffix)for(let vt=0;vt<Le.length-1;++vt)Le[vt]+=this.continuing_subword_suffix;return this.cache.set(Ae,Le),Le}_add_node(Ae,Ge){const at=this.bpe_ranks.get(JSON.stringify([Ge.token,Ge.next.token]));at!==void 0&&(Ge.score=at+Ge.bias,Ae.push(Ge))}encode(Ae){const Ge=[];for(const at of Ae){if(this.ignore_merges&&this.tokens_to_ids.has(at)){Ge.push(at);continue}const Le=this.bpe(at);for(const vt of Le)if(this.tokens_to_ids.has(vt))Ge.push(vt);else if(this.byte_fallback){const Pt=Array.from(this.text_encoder.encode(vt)).map(ir=>`<0x${ir.toString(16).toUpperCase().padStart(2,"0")}>`);Pt.every(ir=>this.tokens_to_ids.has(ir))?Ge.push(...Pt):Ge.push(this.unk_token)}else Ge.push(this.unk_token)}return Ge}}class Ct extends K{constructor(Ae,Ge){super(Ae),this.tokens_to_ids=oe(Ge.target_lang?Ae.vocab[Ge.target_lang]:Ae.vocab),this.bos_token=Ge.bos_token,this.bos_token_id=this.tokens_to_ids.get(this.bos_token),this.eos_token=Ge.eos_token,this.eos_token_id=this.tokens_to_ids.get(this.eos_token),this.pad_token=Ge.pad_token,this.pad_token_id=this.tokens_to_ids.get(this.pad_token),this.unk_token=Ge.unk_token,this.unk_token_id=this.tokens_to_ids.get(this.unk_token),this.vocab=new Array(this.tokens_to_ids.size);for(const[at,Le]of this.tokens_to_ids)this.vocab[Le]=at}encode(Ae){return Ae}}class ht extends w.Callable{constructor(Ae){super(),this.config=Ae}static fromConfig(Ae){if(Ae===null)return null;switch(Ae.type){case"BertNormalizer":return new bt(Ae);case"Precompiled":return new ns(Ae);case"Sequence":return new Je(Ae);case"Replace":return new et(Ae);case"NFC":return new ze(Ae);case"NFKC":return new Se(Ae);case"NFKD":return new xe(Ae);case"Strip":return new Me(Ae);case"StripAccents":return new ft(Ae);case"Lowercase":return new gt(Ae);case"Prepend":return new _t(Ae);default:throw new Error(`Unknown Normalizer type: ${Ae.type}`)}}normalize(Ae){throw Error("normalize should be implemented in subclass.")}_call(Ae){return this.normalize(Ae)}}class et extends ht{normalize(Ae){const Ge=J(this.config.pattern);return Ge===null?Ae:Ae.replaceAll(Ge,this.config.content)}}class ze extends ht{normalize(Ae){return Ae=Ae.normalize("NFC"),Ae}}class Se extends ht{normalize(Ae){return Ae=Ae.normalize("NFKC"),Ae}}class xe extends ht{normalize(Ae){return Ae=Ae.normalize("NFKD"),Ae}}class Me extends ht{normalize(Ae){return this.config.strip_left&&this.config.strip_right?Ae=Ae.trim():(this.config.strip_left&&(Ae=Ae.trimStart()),this.config.strip_right&&(Ae=Ae.trimEnd())),Ae}}class ft extends ht{normalize(Ae){return Ae=ee(Ae),Ae}}class gt extends ht{normalize(Ae){return Ae=Ae.toLowerCase(),Ae}}class _t extends ht{normalize(Ae){return Ae=this.config.prepend+Ae,Ae}}class Je extends ht{constructor(Ae){super(Ae),this.normalizers=Ae.normalizers.map(Ge=>ht.fromConfig(Ge))}normalize(Ae){return this.normalizers.reduce((Ge,at)=>at.normalize(Ge),Ae)}}class bt extends ht{_tokenize_chinese_chars(Ae){const Ge=[];for(let at=0;at<Ae.length;++at){const Le=Ae[at],vt=Le.charCodeAt(0);ce(vt)?(Ge.push(" "),Ge.push(Le),Ge.push(" ")):Ge.push(Le)}return Ge.join("")}stripAccents(Ae){return Ae.normalize("NFD").replace(new RegExp("\\p{Mn}","gu"),"")}_is_control(Ae){switch(Ae){case"	":case`
`:case"\r":return!1;default:return new RegExp("^\\p{Cc}|\\p{Cf}|\\p{Co}|\\p{Cs}$","u").test(Ae)}}_clean_text(Ae){const Ge=[];for(const at of Ae){const Le=at.charCodeAt(0);Le===0||Le===65533||this._is_control(at)||(/^\s$/.test(at)?Ge.push(" "):Ge.push(at))}return Ge.join("")}normalize(Ae){return this.config.clean_text&&(Ae=this._clean_text(Ae)),this.config.handle_chinese_chars&&(Ae=this._tokenize_chinese_chars(Ae)),this.config.lowercase?(Ae=Ae.toLowerCase(),this.config.strip_accents!==!1&&(Ae=this.stripAccents(Ae))):this.config.strip_accents&&(Ae=this.stripAccents(Ae)),Ae}}class rt extends w.Callable{static fromConfig(Ae){if(Ae===null)return null;switch(Ae.type){case"BertPreTokenizer":return new Ne(Ae);case"Sequence":return new Gs(Ae);case"Whitespace":return new Cs(Ae);case"WhitespaceSplit":return new Ks(Ae);case"Metaspace":return new lr(Ae);case"ByteLevel":return new it(Ae);case"Split":return new Et(Ae);case"Punctuation":return new $e(Ae);case"Digits":return new It(Ae);case"Replace":return new is(Ae);default:throw new Error(`Unknown PreTokenizer type: ${Ae.type}`)}}pre_tokenize_text(Ae,Ge){throw Error("pre_tokenize_text should be implemented in subclass.")}pre_tokenize(Ae,Ge){return(Array.isArray(Ae)?Ae.map(at=>this.pre_tokenize_text(at,Ge)):this.pre_tokenize_text(Ae,Ge)).flat()}_call(Ae,Ge){return this.pre_tokenize(Ae,Ge)}}class Ne extends rt{constructor(Ae){super(),this.pattern=new RegExp(`[^\\s${e}]+|[${e}]`,"gu")}pre_tokenize_text(Ae,Ge){return Ae.trim().match(this.pattern)||[]}}class it extends rt{constructor(Ae){super(),this.config=Ae,this.add_prefix_space=this.config.add_prefix_space,this.trim_offsets=this.config.trim_offsets,this.use_regex=this.config.use_regex??!0,this.pattern=new RegExp("'s|'t|'re|'ve|'m|'ll|'d| ?\\p{L}+| ?\\p{N}+| ?[^\\s\\p{L}\\p{N}]+|\\s+(?!\\S)|\\s+","gu"),this.byte_encoder=Re,this.text_encoder=new TextEncoder}pre_tokenize_text(Ae,Ge){return this.add_prefix_space&&!Ae.startsWith(" ")&&(Ae=" "+Ae),(this.use_regex?Ae.match(this.pattern)||[]:[Ae]).map(Le=>Array.from(this.text_encoder.encode(Le),vt=>this.byte_encoder[vt]).join(""))}}class Et extends rt{constructor(Ae){super(),this.config=Ae,this.pattern=J(this.config.pattern,this.config.invert)}pre_tokenize_text(Ae,Ge){var at;return this.pattern===null?[]:this.config.invert?Ae.match(this.pattern)||[]:((at=this.config.behavior)==null?void 0:at.toLowerCase())==="removed"?Ae.split(this.pattern).filter(Le=>Le):Q(Ae,this.pattern)}}class $e extends rt{constructor(Ae){super(),this.config=Ae,this.pattern=new RegExp(`[^${e}]+|[${e}]+`,"gu")}pre_tokenize_text(Ae,Ge){return Ae.match(this.pattern)||[]}}class It extends rt{constructor(Ae){super(),this.config=Ae;const Ge=`[^\\d]+|\\d${this.config.individual_digits?"":"+"}`;this.pattern=new RegExp(Ge,"gu")}pre_tokenize_text(Ae,Ge){return Ae.match(this.pattern)||[]}}class Tt extends w.Callable{constructor(Ae){super(),this.config=Ae}static fromConfig(Ae){if(Ae===null)return null;switch(Ae.type){case"TemplateProcessing":return new pe(Ae);case"ByteLevel":return new Ut(Ae);case"RobertaProcessing":return new Wt(Ae);case"BertProcessing":return new zt(Ae);case"Sequence":return new Pe(Ae);default:throw new Error(`Unknown PostProcessor type: ${Ae.type}`)}}post_process(Ae,...Ge){throw Error("post_process should be implemented in subclass.")}_call(Ae,...Ge){return this.post_process(Ae,...Ge)}}class zt extends Tt{constructor(Ae){super(Ae),this.cls=Ae.cls[0],this.sep=Ae.sep[0]}post_process(Ae,Ge=null,{add_special_tokens:at=!0}={}){at&&(Ae=(0,F.mergeArrays)([this.cls],Ae,[this.sep]));let Le=new Array(Ae.length).fill(0);if(Ge!==null){const vt=at&&this instanceof Wt?[this.sep]:[],Pt=at?[this.sep]:[];Ae=(0,F.mergeArrays)(Ae,vt,Ge,Pt),Le=(0,F.mergeArrays)(Le,new Array(Ge.length+vt.length+Pt.length).fill(1))}return{tokens:Ae,token_type_ids:Le}}}class Wt extends zt{}class pe extends Tt{constructor(Ae){super(Ae),this.single=Ae.single,this.pair=Ae.pair}post_process(Ae,Ge=null,{add_special_tokens:at=!0}={}){const Le=Ge===null?this.single:this.pair;let vt=[],Pt=[];for(const ir of Le)"SpecialToken"in ir?at&&(vt.push(ir.SpecialToken.id),Pt.push(ir.SpecialToken.type_id)):"Sequence"in ir&&(ir.Sequence.id==="A"?(vt=(0,F.mergeArrays)(vt,Ae),Pt=(0,F.mergeArrays)(Pt,new Array(Ae.length).fill(ir.Sequence.type_id))):ir.Sequence.id==="B"&&(vt=(0,F.mergeArrays)(vt,Ge),Pt=(0,F.mergeArrays)(Pt,new Array(Ge.length).fill(ir.Sequence.type_id))));return{tokens:vt,token_type_ids:Pt}}}class Ut extends Tt{post_process(Ae,Ge=null){return Ge&&(Ae=(0,F.mergeArrays)(Ae,Ge)),{tokens:Ae}}}class Pe extends Tt{constructor(Ae){super(Ae),this.processors=Ae.processors.map(Ge=>Tt.fromConfig(Ge))}post_process(Ae,Ge=null,at={}){let Le;for(const vt of this.processors)if(vt instanceof Ut)Ae=vt.post_process(Ae).tokens,Ge&&(Ge=vt.post_process(Ge).tokens);else{const Pt=vt.post_process(Ae,Ge,at);Ae=Pt.tokens,Le=Pt.token_type_ids}return{tokens:Ae,token_type_ids:Le}}}class X extends w.Callable{constructor(Ae){super(),this.config=Ae,this.added_tokens=[],this.end_of_word_suffix=null,this.trim_offsets=Ae.trim_offsets}static fromConfig(Ae){if(Ae===null)return null;switch(Ae.type){case"WordPiece":return new kt(Ae);case"Metaspace":return new Fr(Ae);case"ByteLevel":return new Dt(Ae);case"Replace":return new ge(Ae);case"ByteFallback":return new fe(Ae);case"Fuse":return new He(Ae);case"Strip":return new ct(Ae);case"Sequence":return new Vt(Ae);case"CTC":return new Ht(Ae);case"BPEDecoder":return new sr(Ae);default:throw new Error(`Unknown Decoder type: ${Ae.type}`)}}_call(Ae){return this.decode(Ae)}decode(Ae){return this.decode_chain(Ae).join("")}decode_chain(Ae){throw Error("`decode_chain` should be implemented in subclass.")}}class ge extends X{decode_chain(Ae){const Ge=J(this.config.pattern);return Ge===null?Ae:Ae.map(at=>at.replaceAll(Ge,this.config.content))}}class fe extends X{constructor(Ae){super(Ae),this.text_decoder=new TextDecoder}decode_chain(Ae){const Ge=[];let at=[];for(const Le of Ae){let vt=null;if(Le.length===6&&Le.startsWith("<0x")&&Le.endsWith(">")){const Pt=parseInt(Le.slice(3,5),16);isNaN(Pt)||(vt=Pt)}if(vt!==null)at.push(vt);else{if(at.length>0){const Pt=this.text_decoder.decode(Uint8Array.from(at));Ge.push(Pt),at=[]}Ge.push(Le)}}if(at.length>0){const Le=this.text_decoder.decode(Uint8Array.from(at));Ge.push(Le),at=[]}return Ge}}class He extends X{decode_chain(Ae){return[Ae.join("")]}}class ct extends X{constructor(Ae){super(Ae),this.content=this.config.content,this.start=this.config.start,this.stop=this.config.stop}decode_chain(Ae){return Ae.map(Ge=>{let at=0;for(let vt=0;vt<this.start&&Ge[vt]===this.content;++vt){at=vt+1;continue}let Le=Ge.length;for(let vt=0;vt<this.stop;++vt){const Pt=Ge.length-vt-1;if(Ge[Pt]===this.content){Le=Pt;continue}else break}return Ge.slice(at,Le)})}}class kt extends X{constructor(Ae){super(Ae),this.cleanup=Ae.cleanup}decode_chain(Ae){return Ae.map((Ge,at)=>(at!==0&&(Ge.startsWith(this.config.prefix)?Ge=Ge.replace(this.config.prefix,""):Ge=" "+Ge),this.cleanup&&(Ge=Ie(Ge)),Ge))}}class Dt extends X{constructor(Ae){super(Ae),this.byte_decoder=Ke,this.text_decoder=new TextDecoder("utf-8",{fatal:!1,ignoreBOM:!0}),this.end_of_word_suffix=null}convert_tokens_to_string(Ae){const Ge=Ae.join(""),at=new Uint8Array([...Ge].map(vt=>this.byte_decoder[vt]));return this.text_decoder.decode(at)}decode_chain(Ae){const Ge=[];let at=[];for(const Le of Ae)this.added_tokens.find(vt=>vt.content===Le)!==void 0?(at.length>0&&(Ge.push(this.convert_tokens_to_string(at)),at=[]),Ge.push(Le)):at.push(Le);return at.length>0&&Ge.push(this.convert_tokens_to_string(at)),Ge}}class Ht extends X{constructor(Ae){super(Ae),this.pad_token=this.config.pad_token,this.word_delimiter_token=this.config.word_delimiter_token,this.cleanup=this.config.cleanup}convert_tokens_to_string(Ae){if(Ae.length===0)return"";const Ge=[Ae[0]];for(let vt=1;vt<Ae.length;++vt)Ae[vt]!==Ge.at(-1)&&Ge.push(Ae[vt]);let Le=Ge.filter(vt=>vt!==this.pad_token).join("");return this.cleanup&&(Le=Ie(Le).replaceAll(this.word_delimiter_token," ").trim()),Le}decode_chain(Ae){return[this.convert_tokens_to_string(Ae)]}}class Vt extends X{constructor(Ae){super(Ae),this.decoders=Ae.decoders.map(Ge=>X.fromConfig(Ge))}decode_chain(Ae){return this.decoders.reduce((Ge,at)=>at.decode_chain(Ge),Ae)}}class sr extends X{constructor(Ae){super(Ae),this.suffix=this.config.suffix}decode_chain(Ae){return Ae.map((Ge,at)=>Ge.replaceAll(this.suffix,at===Ae.length-1?"":" "))}}class nr extends X{decode_chain(Ae){let Ge="";for(let at=1;at<Ae.length;at+=2)Ge+=Ae[at];return[Ge]}}class lr extends rt{constructor(Ae){super(),this.addPrefixSpace=Ae.add_prefix_space,this.replacement=Ae.replacement,this.strRep=Ae.str_rep||this.replacement,this.prepend_scheme=Ae.prepend_scheme??"always"}pre_tokenize_text(Ae,{section_index:Ge=void 0}={}){let at=Ae.replaceAll(" ",this.strRep);return this.addPrefixSpace&&!at.startsWith(this.replacement)&&(this.prepend_scheme==="always"||this.prepend_scheme==="first"&&Ge===0)&&(at=this.strRep+at),[at]}}class Fr extends X{constructor(Ae){super(Ae),this.addPrefixSpace=Ae.add_prefix_space,this.replacement=Ae.replacement}decode_chain(Ae){const Ge=[];for(let at=0;at<Ae.length;++at){let Le=Ae[at].replaceAll(this.replacement," ");this.addPrefixSpace&&at==0&&Le.startsWith(" ")&&(Le=Le.substring(1)),Ge.push(Le)}return Ge}}class ns extends ht{constructor(Ae){super(Ae),this.charsmap=Ae.precompiled_charsmap}normalize(Ae){return Ae=Ae.replace(/[\u0001-\u0008\u000B\u000E-\u001F\u007F\u008F\u009F]/gm,""),Ae=Ae.replace(/[\u0009\u000A\u000C\u000D\u00A0\u1680\u2000-\u200F\u2028\u2029\u202F\u205F\u2581\u3000\uFEFF\uFFFD]/gm," "),Ae.includes("～")?Ae=Ae.split("～").map(at=>at.normalize("NFKC")).join("～"):Ae=Ae.normalize("NFKC"),Ae}}class Gs extends rt{constructor(Ae){super(),this.tokenizers=Ae.pretokenizers.map(Ge=>rt.fromConfig(Ge))}pre_tokenize_text(Ae,Ge){return this.tokenizers.reduce((at,Le)=>Le.pre_tokenize(at,Ge),[Ae])}}class Cs extends rt{constructor(Ae){super()}pre_tokenize_text(Ae,Ge){return Ae.match(/\w+|[^\w\s]+/g)||[]}}class Ks extends rt{constructor(Ae){super()}pre_tokenize_text(Ae,Ge){return I(Ae)}}class is extends rt{constructor(Ae){super(),this.config=Ae,this.pattern=J(this.config.pattern),this.content=this.config.content}pre_tokenize_text(Ae,Ge){return this.pattern===null?[Ae]:[Ae.replaceAll(this.pattern,this.config.content)]}}const wn=["bos_token","eos_token","unk_token","sep_token","pad_token","cls_token","mask_token"];function oa(tt,Ae,Ge,at){for(const Le of Object.keys(tt)){const vt=Ae-tt[Le].length,Pt=Ge(Le),ir=new Array(vt).fill(Pt);tt[Le]=at==="right"?(0,F.mergeArrays)(tt[Le],ir):(0,F.mergeArrays)(ir,tt[Le])}}function Ea(tt,Ae){for(const Ge of Object.keys(tt))tt[Ge].length=Ae}class gr extends w.Callable{constructor(Ge,at){super();We(this,"return_token_type_ids",!1);We(this,"padding_side","right");this._tokenizer_config=at,this.normalizer=ht.fromConfig(Ge.normalizer),this.pre_tokenizer=rt.fromConfig(Ge.pre_tokenizer),this.model=K.fromConfig(Ge.model,at),this.post_processor=Tt.fromConfig(Ge.post_processor),this.decoder=X.fromConfig(Ge.decoder),this.special_tokens=[],this.all_special_ids=[],this.added_tokens=[];for(const Le of Ge.added_tokens){const vt=new G(Le);this.added_tokens.push(vt),this.model.tokens_to_ids.set(vt.content,vt.id),this.model.vocab[vt.id]=vt.content,vt.special&&(this.special_tokens.push(vt.content),this.all_special_ids.push(vt.id))}if(this.additional_special_tokens=at.additional_special_tokens??[],this.special_tokens.push(...this.additional_special_tokens),this.special_tokens=[...new Set(this.special_tokens)],this.decoder&&(this.decoder.added_tokens=this.added_tokens,this.decoder.end_of_word_suffix=this.model.end_of_word_suffix),this.added_tokens_regex=this.added_tokens.length>0?new RegExp(this.added_tokens.slice().sort((Le,vt)=>vt.content.length-Le.content.length).map(Le=>`${Le.lstrip?"\\s*":""}(${(0,F.escapeRegExp)(Le.content)})${Le.rstrip?"\\s*":""}`).join("|")):null,this.mask_token=this.getToken("mask_token"),this.mask_token_id=this.model.tokens_to_ids.get(this.mask_token),this.pad_token=this.getToken("pad_token","eos_token"),this.pad_token_id=this.model.tokens_to_ids.get(this.pad_token),this.sep_token=this.getToken("sep_token"),this.sep_token_id=this.model.tokens_to_ids.get(this.sep_token),this.unk_token=this.getToken("unk_token"),this.unk_token_id=this.model.tokens_to_ids.get(this.unk_token),this.bos_token=this.getToken("bos_token"),this.bos_token_id=this.model.tokens_to_ids.get(this.bos_token),this.eos_token=this.getToken("eos_token"),this.eos_token_id=this.model.tokens_to_ids.get(this.eos_token),this.model_max_length=at.model_max_length,this.remove_space=at.remove_space,this.clean_up_tokenization_spaces=at.clean_up_tokenization_spaces??!0,this.do_lowercase_and_remove_accent=at.do_lowercase_and_remove_accent??!1,at.padding_side&&(this.padding_side=at.padding_side),this.legacy=!1,this.chat_template=at.chat_template??null,Array.isArray(this.chat_template)){const Le=Object.create(null);for(const{name:vt,template:Pt}of this.chat_template){if(typeof vt!="string"||typeof Pt!="string")throw new Error('Chat template must be a list of objects with "name" and "template" properties');Le[vt]=Pt}this.chat_template=Le}this._compiled_template_cache=new Map}getToken(...Ge){for(const at of Ge){const Le=this._tokenizer_config[at];if(Le)if(typeof Le=="object"){if(Le.__type==="AddedToken")return Le.content;throw Error(`Unknown token: ${Le}`)}else return Le}return null}static async from_pretrained(Ge,{progress_callback:at=null,config:Le=null,cache_dir:vt=null,local_files_only:Pt=!1,revision:ir="main",legacy:yr=null}={}){const hr=await R(Ge,{progress_callback:at,config:Le,cache_dir:vt,local_files_only:Pt,revision:ir,legacy:yr});return new this(...hr)}_call(Ge,{text_pair:at=null,add_special_tokens:Le=!0,padding:vt=!1,truncation:Pt=null,max_length:ir=null,return_tensor:yr=!0,return_token_type_ids:hr=null}={}){const xr=Array.isArray(Ge);let Gr;if(xr){if(Ge.length===0)throw Error("text array must be non-empty");if(at!==null){if(Array.isArray(at)){if(Ge.length!==at.length)throw Error("text and text_pair must have the same length")}else throw Error("text_pair must also be an array");Gr=Ge.map((_r,gs)=>this._encode_plus(_r,{text_pair:at[gs],add_special_tokens:Le,return_token_type_ids:hr}))}else Gr=Ge.map(_r=>this._encode_plus(_r,{add_special_tokens:Le,return_token_type_ids:hr}))}else{if(Ge==null)throw Error("text may not be null or undefined");if(Array.isArray(at))throw Error("When specifying `text_pair`, since `text` is a string, `text_pair` must also be a string (i.e., not an array).");Gr=[this._encode_plus(Ge,{text_pair:at,add_special_tokens:Le,return_token_type_ids:hr})]}if(ir===null?vt==="max_length"?ir=this.model_max_length:ir=(0,U.max)(Gr.map(_r=>_r.input_ids.length))[0]:Pt||console.warn("Truncation was not explicitly activated but `max_length` is provided a specific value, please use `truncation=true` to explicitly truncate examples to max length."),ir=Math.min(ir,this.model_max_length??1/0),vt||Pt)for(let _r=0;_r<Gr.length;++_r)Gr[_r].input_ids.length!==ir&&(Gr[_r].input_ids.length>ir?Pt&&Ea(Gr[_r],ir):vt&&oa(Gr[_r],ir,gs=>gs==="input_ids"?this.pad_token_id:0,this.padding_side));const wr={};if(yr){if(!(vt&&Pt)&&Gr.some(gs=>{var Xr;for(const hs of Object.keys(gs))if(gs[hs].length!==((Xr=Gr[0][hs])==null?void 0:Xr.length))return!0;return!1}))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=true' and 'truncation=true' to have batched tensors with the same length.");const _r=[Gr.length,Gr[0].input_ids.length];for(const gs of Object.keys(Gr[0]))wr[gs]=new H.Tensor("int64",BigInt64Array.from(Gr.flatMap(Xr=>Xr[gs]).map(BigInt)),_r)}else{for(const _r of Object.keys(Gr[0]))wr[_r]=Gr.map(gs=>gs[_r]);if(!xr)for(const _r of Object.keys(wr))wr[_r]=wr[_r][0]}return wr}_encode_text(Ge){return Ge===null?null:(this.added_tokens_regex?Ge.split(this.added_tokens_regex).filter(vt=>vt):[Ge]).map((vt,Pt)=>{if(this.added_tokens.find(yr=>yr.content===vt)!==void 0)return vt;{if(this.remove_space===!0&&(vt=vt.trim().split(/\s+/).join(" ")),this.do_lowercase_and_remove_accent&&(vt=re(vt)),this.normalizer!==null&&(vt=this.normalizer(vt)),vt.length===0)return[];const yr=this.pre_tokenizer!==null?this.pre_tokenizer(vt,{section_index:Pt}):[vt];return this.model(yr)}}).flat()}_encode_plus(Ge,{text_pair:at=null,add_special_tokens:Le=!0,return_token_type_ids:vt=null}={}){const{tokens:Pt,token_type_ids:ir}=this._tokenize_helper(Ge,{pair:at,add_special_tokens:Le}),yr=this.model.convert_tokens_to_ids(Pt),hr={input_ids:yr,attention_mask:new Array(yr.length).fill(1)};return(vt??this.return_token_type_ids)&&ir&&(hr.token_type_ids=ir),hr}_tokenize_helper(Ge,{pair:at=null,add_special_tokens:Le=!1}={}){const vt=this._encode_text(Ge),Pt=this._encode_text(at);return this.post_processor?this.post_processor(vt,Pt,{add_special_tokens:Le}):{tokens:(0,F.mergeArrays)(vt??[],Pt??[])}}tokenize(Ge,{pair:at=null,add_special_tokens:Le=!1}={}){return this._tokenize_helper(Ge,{pair:at,add_special_tokens:Le}).tokens}encode(Ge,{text_pair:at=null,add_special_tokens:Le=!0,return_token_type_ids:vt=null}={}){return this._encode_plus(Ge,{text_pair:at,add_special_tokens:Le,return_token_type_ids:vt}).input_ids}batch_decode(Ge,at={}){return Ge instanceof H.Tensor&&(Ge=Ge.tolist()),Ge.map(Le=>this.decode(Le,at))}decode(Ge,at={}){if(Ge instanceof H.Tensor&&(Ge=be(Ge)),!Array.isArray(Ge)||Ge.length===0||!(0,F.isIntegralNumber)(Ge[0]))throw Error("token_ids must be a non-empty array of integers.");return this.decode_single(Ge,at)}decode_single(Ge,{skip_special_tokens:at=!1,clean_up_tokenization_spaces:Le=null}){let vt=this.model.convert_ids_to_tokens(Ge);at&&(vt=vt.filter(ir=>!this.special_tokens.includes(ir)));let Pt=this.decoder?this.decoder(vt):vt.join(" ");return this.decoder&&this.decoder.end_of_word_suffix&&(Pt=Pt.replaceAll(this.decoder.end_of_word_suffix," "),at&&(Pt=Pt.trim())),(Le??this.clean_up_tokenization_spaces)&&(Pt=Ie(Pt)),Pt}get_chat_template({chat_template:Ge=null,tools:at=null}={}){if(this.chat_template&&typeof this.chat_template=="object"){const Le=this.chat_template;if(Ge!==null&&Object.hasOwn(Le,Ge))Ge=Le[Ge];else if(Ge===null)if(at!==null&&"tool_use"in Le)Ge=Le.tool_use;else if("default"in Le)Ge=Le.default;else throw Error(`This model has multiple chat templates with no default specified! Please either pass a chat template or the name of the template you wish to use to the 'chat_template' argument. Available template names are ${Object.keys(Le).sort()}.`)}else if(Ge===null)if(this.chat_template)Ge=this.chat_template;else throw Error("Cannot use apply_chat_template() because tokenizer.chat_template is not set and no template argument was passed! For information about writing templates and setting the tokenizer.chat_template attribute, please see the documentation at https://huggingface.co/docs/transformers/main/en/chat_templating");return Ge}apply_chat_template(Ge,{tools:at=null,documents:Le=null,chat_template:vt=null,add_generation_prompt:Pt=!1,tokenize:ir=!0,padding:yr=!1,truncation:hr=!1,max_length:xr=null,return_tensor:Gr=!0,return_dict:wr=!1,tokenizer_kwargs:_r={},...gs}={}){if(vt=this.get_chat_template({chat_template:vt,tools:at}),typeof vt!="string")throw Error(`chat_template must be a string, but got ${typeof vt}`);let Xr=this._compiled_template_cache.get(vt);Xr===void 0&&(Xr=new N.Template(vt),this._compiled_template_cache.set(vt,Xr));const hs=Object.create(null);for(const Or of wn){const Kt=this.getToken(Or);Kt&&(hs[Or]=Kt)}const Bs=Xr.render({messages:Ge,add_generation_prompt:Pt,tools:at,documents:Le,...hs,...gs});if(ir){const Or=this._call(Bs,{add_special_tokens:!1,padding:yr,truncation:hr,max_length:xr,return_tensor:Gr,..._r});return wr?Or:Or.input_ids}return Bs}}class Wr extends gr{constructor(){super(...arguments);We(this,"return_token_type_ids",!0)}}class vr extends gr{constructor(){super(...arguments);We(this,"return_token_type_ids",!0)}}class Es extends gr{constructor(){super(...arguments);We(this,"return_token_type_ids",!0)}}class pn extends gr{constructor(){super(...arguments);We(this,"return_token_type_ids",!0)}}class Ba extends gr{constructor(){super(...arguments);We(this,"return_token_type_ids",!0)}}class In extends gr{constructor(){super(...arguments);We(this,"return_token_type_ids",!0)}}class ln extends gr{constructor(){super(...arguments);We(this,"return_token_type_ids",!0)}}class hn extends gr{constructor(){super(...arguments);We(this,"return_token_type_ids",!0)}}class kn extends gr{constructor(){super(...arguments);We(this,"return_token_type_ids",!0)}}class sa extends gr{}class tr extends gr{}class Qr extends gr{constructor(Ge,at){super(Ge,at);We(this,"return_token_type_ids",!0);console.warn('WARNING: `XLMTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}}class jr extends gr{constructor(){super(...arguments);We(this,"return_token_type_ids",!0)}}class Vs extends gr{}class xn extends gr{}class Ss extends gr{}class Ls extends gr{constructor(Ae,Ge){super(Ae,Ge),this.languageRegex=/^[a-z]{2}_[A-Z]{2}$/,this.language_codes=this.special_tokens.filter(at=>this.languageRegex.test(at)),this.lang_to_token=at=>at}_build_translation_inputs(Ae,Ge,at){return Sn(this,Ae,Ge,at)}}class Xa extends Ls{}class _a extends gr{}class Tn extends gr{}const Ms="▁";class Mi extends gr{constructor(Ge,at){super(Ge,at);We(this,"padding_side","left");this.legacy=at.legacy??!0,this.legacy||(this.normalizer=null,this.pre_tokenizer=new lr({replacement:Ms,add_prefix_space:!0,prepend_scheme:"first"}))}_encode_text(Ge){if(Ge===null)return null;if(this.legacy||Ge.length===0)return super._encode_text(Ge);let at=super._encode_text(Ms+Ge.replaceAll(Ms," "));return at.length>1&&at[0]===Ms&&this.special_tokens.includes(at[1])&&(at=at.slice(1)),at}}class Ma extends gr{}class Jn extends gr{}class $n extends gr{}class Ei extends gr{}class Pn extends gr{}class Dn extends gr{}class ma extends gr{}class Bi extends gr{}class Vn extends gr{}function Sn(tt,Ae,Ge,at){if(!("language_codes"in tt)||!Array.isArray(tt.language_codes))throw new Error("Tokenizer must have `language_codes` attribute set and it should be an array of language ids.");if(!("languageRegex"in tt)||!(tt.languageRegex instanceof RegExp))throw new Error("Tokenizer must have `languageRegex` attribute set and it should be a regular expression.");if(!("lang_to_token"in tt)||typeof tt.lang_to_token!="function")throw new Error("Tokenizer must have `lang_to_token` attribute set and it should be a function.");const Le=at.src_lang,vt=at.tgt_lang;if(!tt.language_codes.includes(vt))throw new Error(`Target language code "${vt}" is not valid. Must be one of: {${tt.language_codes.join(", ")}}`);if(Le!==void 0){if(!tt.language_codes.includes(Le))throw new Error(`Source language code "${Le}" is not valid. Must be one of: {${tt.language_codes.join(", ")}}`);for(const Pt of tt.post_processor.config.single)if("SpecialToken"in Pt&&tt.languageRegex.test(Pt.SpecialToken.id)){Pt.SpecialToken.id=tt.lang_to_token(Le);break}}return at.forced_bos_token_id=tt.model.convert_tokens_to_ids([tt.lang_to_token(vt)])[0],tt._call(Ae,Ge)}class cn extends gr{constructor(Ae,Ge){super(Ae,Ge),this.languageRegex=/^[a-z]{3}_[A-Z][a-z]{3}$/,this.language_codes=this.special_tokens.filter(at=>this.languageRegex.test(at)),this.lang_to_token=at=>at}_build_translation_inputs(Ae,Ge,at){return Sn(this,Ae,Ge,at)}}class ei extends gr{constructor(Ae,Ge){super(Ae,Ge),this.languageRegex=/^__[a-z]{2,3}__$/,this.language_codes=this.special_tokens.filter(at=>this.languageRegex.test(at)).map(at=>at.slice(2,-2)),this.lang_to_token=at=>`__${at}__`}_build_translation_inputs(Ae,Ge,at){return Sn(this,Ae,Ge,at)}}class ti extends gr{get timestamp_begin(){return this.model.convert_tokens_to_ids(["<|notimestamps|>"])[0]+1}_decode_asr(Ae,{return_timestamps:Ge=!1,return_language:at=!1,time_precision:Le=null,force_full_sequences:vt=!0}={}){if(Le===null)throw Error("Must specify time_precision");let Pt=null;const ir=Ge==="word";function yr(){return{language:Pt,timestamp:[null,null],text:""}}const hr=[];let xr=yr(),Gr=0;const wr=this.timestamp_begin,gs=wr+1500;let Xr=[],hs=[],Bs=!1,Or=null;const Kt=new Set(this.all_special_ids);for(const Rs of Ae){const Ws=Rs.tokens,Vr=ir?Rs.token_timestamps:null;let Js=null,qs=wr;if("stride"in Rs){const[Rr,cs,Da]=Rs.stride;if(Gr-=cs,Or=Rr-Da,cs&&(qs=cs/Le+wr),Da)for(let Us=Ws.length-1;Us>=0;--Us){const Ua=Number(Ws[Us]);if(Ua>=wr){if(Js!==null&&(Ua-wr)*Le<Or)break;Js=Ua}}}let es=[],_s=[];for(let Rr=0;Rr<Ws.length;++Rr){const cs=Number(Ws[Rr]);if(Kt.has(cs)){const Da=this.decode([cs]),Us=D.WHISPER_LANGUAGE_MAPPING.get(Da.slice(2,-2));if(Us!==void 0){if(Pt!==null&&Us!==Pt&&!Ge){Xr.push(es);const Ua=this.findLongestCommonSequence(Xr)[0],Ir=this.decode(Ua);xr.text=Ir,hr.push(xr),Xr=[],es=[],xr=yr()}Pt=xr.language=Us}}else if(cs>=wr&&cs<=gs){const Da=(cs-wr)*Le+Gr,Us=(0,U.round)(Da,2);if(Js!==null&&cs>=Js)Bs=!0;else if(Bs||Xr.length>0&&cs<qs)Bs=!1;else if(xr.timestamp[0]===null)xr.timestamp[0]=Us;else if(Us!==xr.timestamp[0]){xr.timestamp[1]=Us,Xr.push(es),ir&&hs.push(_s);const[Ua,Ir]=this.findLongestCommonSequence(Xr,hs),Sa=this.decode(Ua);xr.text=Sa,ir&&(xr.words=this.collateWordTimestamps(Ua,Ir,Pt)),hr.push(xr),Xr=[],es=[],hs=[],_s=[],xr=yr()}}else if(es.push(cs),ir){let Da=(0,U.round)(Vr[Rr]+Gr,2),Us;if(Rr+1<Vr.length){Us=(0,U.round)(Vr[Rr+1]+Gr,2);const Ua=this.decode([cs]);u.test(Ua)&&(Us=(0,U.round)(Math.min(Da+Le,Us),2))}else Us=null;_s.push([Da,Us])}}if("stride"in Rs){const[Rr,cs,Da]=Rs.stride;Gr+=Rr-Da}es.length>0?(Xr.push(es),ir&&hs.push(_s)):Xr.every(Rr=>Rr.length===0)&&(xr=yr(),Xr=[],es=[],hs=[],_s=[])}if(Xr.length>0){if(vt&&Ge)throw new Error("Whisper did not predict an ending timestamp, which can happen if audio is cut off in the middle of a word. Also make sure WhisperTimeStampLogitsProcessor was used during generation.");const[Rs,Ws]=this.findLongestCommonSequence(Xr,hs),Vr=this.decode(Rs);xr.text=Vr,ir&&(xr.words=this.collateWordTimestamps(Rs,Ws,Pt)),hr.push(xr)}let rr=Object.create(null);const Lr=hr.map(Rs=>Rs.text).join("");if(Ge||at){for(let Rs=0;Rs<hr.length;++Rs){const Ws=hr[Rs];Ge||delete Ws.timestamp,at||delete Ws.language}if(ir){const Rs=[];for(const Ws of hr)for(const Vr of Ws.words)Rs.push(Vr);rr={chunks:Rs}}else rr={chunks:hr}}return[Lr,rr]}findLongestCommonSequence(Ae,Ge=null){let at=Ae[0],Le=at.length,vt=[];const Pt=Array.isArray(Ge)&&Ge.length>0;let ir=Pt?[]:null,yr=Pt?Ge[0]:null;for(let hr=1;hr<Ae.length;++hr){const xr=Ae[hr];let Gr=0,wr=[Le,Le,0,0];const _r=xr.length;for(let rr=1;rr<Le+_r;++rr){const Lr=Math.max(0,Le-rr),Rs=Math.min(Le,Le+_r-rr),Ws=at.slice(Lr,Rs),Vr=Math.max(0,rr-Le),Js=Math.min(_r,rr),qs=xr.slice(Vr,Js);if(Ws.length!==qs.length)throw new Error("There is a bug within whisper `decode_asr` function, please report it. Dropping to prevent bad inference.");let es;Pt?es=Ws.filter((cs,Da)=>cs===qs[Da]&&yr[Lr+Da]<=Ge[hr][Vr+Da]).length:es=Ws.filter((cs,Da)=>cs===qs[Da]).length;const _s=rr/1e4,Rr=es/rr+_s;es>1&&Rr>Gr&&(Gr=Rr,wr=[Lr,Rs,Vr,Js])}const[gs,Xr,hs,Bs]=wr,Or=Math.floor((Xr+gs)/2),Kt=Math.floor((Bs+hs)/2);vt.push(...at.slice(0,Or)),at=xr.slice(Kt),Le=at.length,Pt&&(ir.push(...yr.slice(0,Or)),yr=Ge[hr].slice(Kt))}return vt.push(...at),Pt?(ir.push(...yr),[vt,ir]):[vt,[]]}collateWordTimestamps(Ae,Ge,at){const[Le,vt,Pt]=this.combineTokensIntoWords(Ae,at),ir=[];for(let yr=0;yr<Le.length;++yr){const hr=Pt[yr];ir.push({text:Le[yr],timestamp:[Ge[hr.at(0)][0],Ge[hr.at(-1)][1]]})}return ir}combineTokensIntoWords(Ae,Ge,at=`"'“¡¿([{-`,Le=`"'.。,，!！?？:：”)]}、`){Ge=Ge??"english";let vt,Pt,ir;return["chinese","japanese","thai","lao","myanmar"].includes(Ge)?[vt,Pt,ir]=this.splitTokensOnUnicode(Ae):[vt,Pt,ir]=this.splitTokensOnSpaces(Ae),this.mergePunctuations(vt,Pt,ir,at,Le)}decode(Ae,Ge){let at;return Ge!=null&&Ge.decode_with_timestamps?(Ae instanceof H.Tensor&&(Ae=be(Ae)),at=this.decodeWithTimestamps(Ae,Ge)):at=super.decode(Ae,Ge),at}decodeWithTimestamps(Ae,Ge){const at=(Ge==null?void 0:Ge.time_precision)??.02,Le=Array.from(this.all_special_ids).at(-1)+1;let vt=[[]];for(let Pt of Ae)if(Pt=Number(Pt),Pt>=Le){const ir=((Pt-Le)*at).toFixed(2);vt.push(`<|${ir}|>`),vt.push([])}else vt[vt.length-1].push(Pt);return vt=vt.map(Pt=>typeof Pt=="string"?Pt:super.decode(Pt,Ge)),vt.join("")}splitTokensOnUnicode(Ae){const Ge=this.decode(Ae,{decode_with_timestamps:!0}),at="�",Le=[],vt=[],Pt=[];let ir=[],yr=[],hr=0;for(let xr=0;xr<Ae.length;++xr){const Gr=Ae[xr];ir.push(Gr),yr.push(xr);const wr=this.decode(ir,{decode_with_timestamps:!0});(!wr.includes(at)||Ge[hr+wr.indexOf(at)]===at)&&(Le.push(wr),vt.push(ir),Pt.push(yr),ir=[],yr=[],hr+=wr.length)}return[Le,vt,Pt]}splitTokensOnSpaces(Ae){const[Ge,at,Le]=this.splitTokensOnUnicode(Ae),vt=[],Pt=[],ir=[],yr=new RegExp(`^[${e}]$`,"gu");for(let hr=0;hr<Ge.length;++hr){const xr=Ge[hr],Gr=at[hr],wr=Le[hr],_r=Gr[0]>=this.model.tokens_to_ids.get("<|endoftext|>"),gs=xr.startsWith(" "),Xr=xr.trim(),hs=yr.test(Xr);if(_r||gs||hs||vt.length===0)vt.push(xr),Pt.push(Gr),ir.push(wr);else{const Bs=vt.length-1;vt[Bs]+=xr,Pt[Bs].push(...Gr),ir[Bs].push(...wr)}}return[vt,Pt,ir]}mergePunctuations(Ae,Ge,at,Le,vt){const Pt=structuredClone(Ae),ir=structuredClone(Ge),yr=structuredClone(at);let hr=Pt.length-2,xr=Pt.length-1;for(;hr>=0;)Pt[hr].startsWith(" ")&&Le.includes(Pt[hr].trim())?(Pt[xr]=Pt[hr]+Pt[xr],ir[xr]=(0,F.mergeArrays)(ir[hr],ir[xr]),yr[xr]=(0,F.mergeArrays)(yr[hr],yr[xr]),Pt[hr]="",ir[hr]=[],yr[hr]=[]):xr=hr,--hr;for(hr=0,xr=1;xr<Pt.length;)!Pt[hr].endsWith(" ")&&vt.includes(Pt[xr])?(Pt[hr]+=Pt[xr],ir[hr]=(0,F.mergeArrays)(ir[hr],ir[xr]),yr[hr]=(0,F.mergeArrays)(yr[hr],yr[xr]),Pt[xr]="",ir[xr]=[],yr[xr]=[]):hr=xr,++xr;return[Pt.filter(Gr=>Gr),ir.filter(Gr=>Gr.length>0),yr.filter(Gr=>Gr.length>0)]}}class ri extends gr{}class ds extends gr{}class ys extends gr{}class qr extends gr{constructor(Ae,Ge){super(Ae,Ge),this.languageRegex=/^(>>\w+<<)\s*/g,this.supported_language_codes=this.model.vocab.filter(at=>this.languageRegex.test(at)),console.warn('WARNING: `MarianTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}_encode_text(Ae){if(Ae===null)return null;const[Ge,...at]=Ae.trim().split(this.languageRegex);if(at.length===0)return super._encode_text(Ge);if(at.length===2){const[Le,vt]=at;return this.supported_language_codes.includes(Le)||console.warn(`Unsupported language code "${Le}" detected, which may lead to unexpected behavior. Should be one of: ${JSON.stringify(this.supported_language_codes)}`),(0,F.mergeArrays)([Le],super._encode_text(vt))}}}class pi extends gr{}class Ai extends gr{}class hi extends gr{}class Wn extends gr{}class Gn extends gr{}class qt extends gr{constructor(Ae,Ge){super(Ae,Ge),this.decoder=new nr({})}}class Qe extends gr{}class ut extends gr{}class wt{static async from_pretrained(Ae,{progress_callback:Ge=null,config:at=null,cache_dir:Le=null,local_files_only:vt=!1,revision:Pt="main",legacy:ir=null}={}){var wr;const[yr,hr]=await R(Ae,{progress_callback:Ge,config:at,cache_dir:Le,local_files_only:vt,revision:Pt,legacy:ir}),xr=((wr=hr.tokenizer_class)==null?void 0:wr.replace(/Fast$/,""))??"PreTrainedTokenizer";let Gr=this.TOKENIZER_CLASS_MAPPING[xr];return Gr||(console.warn(`Unknown tokenizer class "${xr}", attempting to construct from base class.`),Gr=gr),new Gr(yr,hr)}}We(wt,"TOKENIZER_CLASS_MAPPING",{T5Tokenizer:Vs,DistilBertTokenizer:sa,CamembertTokenizer:tr,DebertaTokenizer:Ba,DebertaV2Tokenizer:In,BertTokenizer:Wr,HerbertTokenizer:ln,ConvBertTokenizer:hn,RoFormerTokenizer:kn,XLMTokenizer:Qr,ElectraTokenizer:jr,MobileBertTokenizer:Es,SqueezeBertTokenizer:pn,AlbertTokenizer:vr,GPT2Tokenizer:xn,BartTokenizer:Ss,MBartTokenizer:Ls,MBart50Tokenizer:Xa,RobertaTokenizer:_a,WhisperTokenizer:ti,CodeGenTokenizer:ri,CLIPTokenizer:ds,SiglipTokenizer:ys,MarianTokenizer:qr,BloomTokenizer:Tn,NllbTokenizer:cn,M2M100Tokenizer:ei,LlamaTokenizer:Mi,CodeLlamaTokenizer:Ma,XLMRobertaTokenizer:Jn,MPNetTokenizer:$n,FalconTokenizer:Ei,GPTNeoXTokenizer:Pn,EsmTokenizer:Dn,Wav2Vec2CTCTokenizer:pi,BlenderbotTokenizer:Ai,BlenderbotSmallTokenizer:hi,SpeechT5Tokenizer:Wn,NougatTokenizer:Gn,VitsTokenizer:qt,Qwen2Tokenizer:ma,GemmaTokenizer:Bi,Grok1Tokenizer:Vn,CohereTokenizer:Qe,MgpstrTokenizer:ut,PreTrainedTokenizer:gr})},"./src/utils/audio.js":(T,k,A)=>{A.r(k),A.d(k,{RawAudio:()=>Ve,hamming:()=>Q,hanning:()=>R,mel_filter_bank:()=>ce,read_audio:()=>N,spectrogram:()=>B,window_function:()=>ue});var w=A("./src/utils/hub.js"),F=A("./src/utils/maths.js"),Y=A("./src/utils/core.js"),U=A("./src/env.js"),H=A("?7a2c"),z=A("./src/utils/tensor.js");async function N(ve,Re){if(typeof AudioContext>"u")throw Error("Unable to load audio from path/URL since `AudioContext` is not available in your environment. Instead, audio data should be passed directly to the pipeline/processor. For more information and some example code, see https://huggingface.co/docs/transformers.js/guides/node-audio-processing.");const Ke=await(await(0,w.getFile)(ve)).arrayBuffer(),nt=new AudioContext({sampleRate:Re});typeof Re>"u"&&console.warn(`No sampling rate provided, using default of ${nt.sampleRate}Hz.`);const Ct=await nt.decodeAudioData(Ke);let ht;if(Ct.numberOfChannels===2){const et=Math.sqrt(2),ze=Ct.getChannelData(0),Se=Ct.getChannelData(1);ht=new Float32Array(ze.length);for(let xe=0;xe<Ct.length;++xe)ht[xe]=et*(ze[xe]+Se[xe])/2}else ht=Ct.getChannelData(0);return ht}function D(ve,Re){if(ve<1)return new Float64Array;if(ve===1)return new Float64Array([1]);const Ke=1-Re,nt=2*Math.PI/(ve-1),Ct=new Float64Array(ve);for(let ht=0;ht<ve;++ht)Ct[ht]=Re-Ke*Math.cos(ht*nt);return Ct}function R(ve){return D(ve,.5)}function Q(ve){return D(ve,.54)}const J={htk:ve=>2595*Math.log10(1+ve/700),kaldi:ve=>1127*Math.log(1+ve/700),slaney:(ve,Re=1e3,Ke=15,nt=27/Math.log(6.4))=>ve>=Re?Ke+Math.log(ve/Re)*nt:3*ve/200};function oe(ve,Re="htk"){const Ke=J[Re];if(!Ke)throw new Error('mel_scale should be one of "htk", "slaney" or "kaldi".');return typeof ve=="number"?Ke(ve):ve.map(nt=>Ke(nt))}const be={htk:ve=>700*(10**(ve/2595)-1),kaldi:ve=>700*(Math.exp(ve/1127)-1),slaney:(ve,Re=1e3,Ke=15,nt=Math.log(6.4)/27)=>ve>=Ke?Re*Math.exp(nt*(ve-Ke)):200*ve/3};function Ie(ve,Re="htk"){const Ke=be[Re];if(!Ke)throw new Error('mel_scale should be one of "htk", "slaney" or "kaldi".');return typeof ve=="number"?Ke(ve):ve.map(nt=>Ke(nt))}function ee(ve,Re){const Ke=Float64Array.from({length:Re.length-1},(et,ze)=>Re[ze+1]-Re[ze]),nt=Array.from({length:ve.length},()=>new Array(Re.length));for(let et=0;et<ve.length;++et){const ze=nt[et];for(let Se=0;Se<Re.length;++Se)ze[Se]=Re[Se]-ve[et]}const Ct=Re.length-2,ht=Array.from({length:Ct},()=>new Array(ve.length));for(let et=0;et<ve.length;++et){const ze=nt[et];for(let Se=0;Se<Ct;++Se){const xe=-ze[Se]/Ke[Se],Me=ze[Se+2]/Ke[Se+1];ht[Se][et]=Math.max(0,Math.min(xe,Me))}}return ht}function re(ve,Re,Ke){const nt=(Re-ve)/(Ke-1);return Float64Array.from({length:Ke},(Ct,ht)=>ve+nt*ht)}function ce(ve,Re,Ke,nt,Ct,ht=null,et="htk",ze=!1){if(ht!==null&&ht!=="slaney")throw new Error('norm must be one of null or "slaney"');const Se=oe(Ke,et),xe=oe(nt,et),Me=re(Se,xe,Re+2);let ft=Ie(Me,et),gt;if(ze){const Je=Ct/(ve*2);gt=oe(Float64Array.from({length:ve},(bt,rt)=>rt*Je),et),ft=Me}else gt=re(0,Math.floor(Ct/2),ve);const _t=ee(gt,ft);if(ht!==null&&ht==="slaney")for(let Je=0;Je<Re;++Je){const bt=_t[Je],rt=2/(ft[Je+2]-ft[Je]);for(let Ne=0;Ne<ve;++Ne)bt[Ne]*=rt}return _t}function g(ve,Re,Ke){const nt=new ve.constructor(ve.length+Re+Ke),Ct=ve.length-1;for(let ht=0;ht<ve.length;++ht)nt[Re+ht]=ve[ht];for(let ht=1;ht<=Re;++ht)nt[Re-ht]=ve[(0,Y.calculateReflectOffset)(ht,Ct)];for(let ht=1;ht<=Ke;++ht)nt[Ct+Re+ht]=ve[(0,Y.calculateReflectOffset)(Ct-ht,Ct)];return nt}function I(ve,Re,Ke,nt,Ct){if(Ke<=0)throw new Error("reference must be greater than zero");if(nt<=0)throw new Error("min_value must be greater than zero");Ke=Math.max(nt,Ke);const ht=Math.log10(Ke);for(let et=0;et<ve.length;++et)ve[et]=Re*Math.log10(Math.max(nt,ve[et])-ht);if(Ct!==null){if(Ct<=0)throw new Error("db_range must be greater than zero");const et=(0,F.max)(ve)[0]-Ct;for(let ze=0;ze<ve.length;++ze)ve[ze]=Math.max(ve[ze],et)}return ve}function e(ve,Re=1,Ke=1e-5,nt=null){return I(ve,20,Re,Ke,nt)}function u(ve,Re=1,Ke=1e-10,nt=null){return I(ve,10,Re,Ke,nt)}async function B(ve,Re,Ke,nt,{fft_length:Ct=null,power:ht=1,center:et=!0,pad_mode:ze="reflect",onesided:Se=!0,preemphasis:xe=null,mel_filters:Me=null,mel_floor:ft=1e-10,log_mel:gt=null,reference:_t=1,min_value:Je=1e-10,db_range:bt=null,remove_dc_offset:rt=null,min_num_frames:Ne=null,max_num_frames:it=null,do_pad:Et=!0,transpose:$e=!1}={}){const It=Re.length;if(Ct===null&&(Ct=Ke),Ke>Ct)throw Error(`frame_length (${Ke}) may not be larger than fft_length (${Ct})`);if(It!==Ke)throw new Error(`Length of the window (${It}) must equal frame_length (${Ke})`);if(nt<=0)throw new Error("hop_length must be greater than zero");if(ht===null&&Me!==null)throw new Error("You have provided `mel_filters` but `power` is `None`. Mel spectrogram computation is not yet supported for complex-valued spectrogram. Specify `power` to fix this issue.");if(et){if(ze!=="reflect")throw new Error(`pad_mode="${ze}" not implemented yet.`);const kt=Math.floor((Ct-1)/2)+1;ve=g(ve,kt,kt)}let Tt=Math.floor(1+Math.floor((ve.length-Ke)/nt));Ne!==null&&Tt<Ne&&(Tt=Ne);const zt=Se?Math.floor(Ct/2)+1:Ct;let Wt=Tt,pe=Tt;it!==null&&(it>Tt?Et&&(pe=it):pe=Wt=it);const Ut=new F.FFT(Ct),Pe=new Float64Array(Ct),X=new Float64Array(Ut.outputBufferSize),ge=new Float32Array(zt*pe);for(let kt=0;kt<Wt;++kt){const Dt=kt*nt,Ht=Math.min(ve.length-Dt,Ke);Ht!==Ke&&Pe.fill(0,0,Ke);for(let Vt=0;Vt<Ht;++Vt)Pe[Vt]=ve[Dt+Vt];if(rt){let Vt=0;for(let nr=0;nr<Ht;++nr)Vt+=Pe[nr];const sr=Vt/Ht;for(let nr=0;nr<Ht;++nr)Pe[nr]-=sr}if(xe!==null){for(let Vt=Ht-1;Vt>=1;--Vt)Pe[Vt]-=xe*Pe[Vt-1];Pe[0]*=1-xe}for(let Vt=0;Vt<Re.length;++Vt)Pe[Vt]*=Re[Vt];Ut.realTransform(X,Pe);for(let Vt=0;Vt<zt;++Vt){const sr=Vt<<1;ge[Vt*pe+kt]=X[sr]**2+X[sr+1]**2}}if(ht!==null&&ht!==2){const kt=2/ht;for(let Dt=0;Dt<ge.length;++Dt)ge[Dt]**=kt}const fe=Me.length;let He=await(0,z.matmul)(new z.Tensor("float32",Me.flat(),[fe,zt]),new z.Tensor("float32",ge,[zt,pe]));$e&&(He=He.transpose(1,0));const ct=He.data;for(let kt=0;kt<ct.length;++kt)ct[kt]=Math.max(ft,ct[kt]);if(ht!==null&&gt!==null){const kt=Math.min(ct.length,Wt*fe);switch(gt){case"log":for(let Dt=0;Dt<kt;++Dt)ct[Dt]=Math.log(ct[Dt]);break;case"log10":for(let Dt=0;Dt<kt;++Dt)ct[Dt]=Math.log10(ct[Dt]);break;case"dB":if(ht===1)e(ct,_t,Je,bt);else if(ht===2)u(ct,_t,Je,bt);else throw new Error(`Cannot use log_mel option '${gt}' with power ${ht}`);break;default:throw new Error(`log_mel must be one of null, 'log', 'log10' or 'dB'. Got '${gt}'`)}}return He}function ue(ve,Re,{periodic:Ke=!0,frame_length:nt=null,center:Ct=!0}={}){const ht=Ke?ve+1:ve;let et;switch(Re){case"boxcar":et=new Float64Array(ht).fill(1);break;case"hann":case"hann_window":et=R(ht);break;case"hamming":et=Q(ht);break;case"povey":et=R(ht).map(ze=>Math.pow(ze,.85));break;default:throw new Error(`Unknown window type ${Re}.`)}if(Ke&&(et=et.subarray(0,ve)),nt===null)return et;if(ve>nt)throw new Error(`Length of the window (${ve}) may not be larger than frame_length (${nt})`);return et}function G(ve,Re){let Ke=44;const nt=new ArrayBuffer(Ke+ve.length*4),Ct=new DataView(nt);K(Ct,0,"RIFF"),Ct.setUint32(4,36+ve.length*4,!0),K(Ct,8,"WAVE"),K(Ct,12,"fmt "),Ct.setUint32(16,16,!0),Ct.setUint16(20,3,!0),Ct.setUint16(22,1,!0),Ct.setUint32(24,Re,!0),Ct.setUint32(28,Re*4,!0),Ct.setUint16(32,4,!0),Ct.setUint16(34,32,!0),K(Ct,36,"data"),Ct.setUint32(40,ve.length*4,!0);for(let ht=0;ht<ve.length;++ht,Ke+=4)Ct.setFloat32(Ke,ve[ht],!0);return nt}function K(ve,Re,Ke){for(let nt=0;nt<Ke.length;++nt)ve.setUint8(Re+nt,Ke.charCodeAt(nt))}class Ve{constructor(Re,Ke){this.audio=Re,this.sampling_rate=Ke}toWav(){return G(this.audio,this.sampling_rate)}toBlob(){const Re=this.toWav();return new Blob([Re],{type:"audio/wav"})}async save(Re){let Ke;if(U.apis.IS_BROWSER_ENV){if(U.apis.IS_WEBWORKER_ENV)throw new Error("Unable to save a file from a Web Worker.");Ke=Y.saveBlob}else if(U.apis.IS_FS_AVAILABLE)Ke=async(nt,Ct)=>{let ht=await Ct.arrayBuffer();H.writeFileSync(nt,Buffer.from(ht))};else throw new Error("Unable to save because filesystem is disabled in this environment.");await Ke(Re,this.toBlob())}}},"./src/utils/constants.js":(T,k,A)=>{A.r(k),A.d(k,{CHAT_TEMPLATE_NAME:()=>z,CONFIG_NAME:()=>F,FEATURE_EXTRACTOR_NAME:()=>Y,GENERATION_CONFIG_NAME:()=>N,GITHUB_ISSUE_URL:()=>w,IMAGE_PROCESSOR_NAME:()=>U,PROCESSOR_NAME:()=>H});const w="https://github.com/huggingface/transformers.js/issues/new/choose",F="config.json",Y="preprocessor_config.json",U=Y,H="processor_config.json",z="chat_template.json",N="generation_config.json"},"./src/utils/core.js":(T,k,A)=>{A.r(k),A.d(k,{calculateDimensions:()=>N,calculateReflectOffset:()=>J,count:()=>ee,dispatchCallback:()=>w,escapeRegExp:()=>Y,isIntegralNumber:()=>H,isNullishDimension:()=>z,isTypedArray:()=>U,len:()=>Ie,mergeArrays:()=>R,pick:()=>be,pop:()=>D,product:()=>Q,reverseDictionary:()=>F,saveBlob:()=>oe});function w(re,ce){re&&re(ce)}function F(re){return Object.fromEntries(Object.entries(re).map(([ce,g])=>[g,ce]))}function Y(re){return re.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}function U(re){var ce,g,I;return((I=(g=(ce=re==null?void 0:re.prototype)==null?void 0:ce.__proto__)==null?void 0:g.constructor)==null?void 0:I.name)==="TypedArray"}function H(re){return Number.isInteger(re)||typeof re=="bigint"}function z(re){return re==null||re===-1}function N(re){const ce=[];let g=re;for(;Array.isArray(g);)ce.push(g.length),g=g[0];return ce}function D(re,ce,g=void 0){const I=re[ce];if(I!==void 0)return delete re[ce],I;if(g===void 0)throw Error(`Key ${ce} does not exist in object.`);return g}function R(...re){return Array.prototype.concat.apply([],re)}function Q(...re){return re.reduce((ce,g)=>ce.flatMap(I=>g.map(e=>[I,e])))}function J(re,ce){return Math.abs((re+ce)%(2*ce)-ce)}function oe(re,ce){const g=URL.createObjectURL(ce),I=document.createElement("a");I.href=g,I.download=re,I.click(),I.remove(),URL.revokeObjectURL(g)}function be(re,ce){return Object.assign({},...ce.map(g=>{if(re[g]!==void 0)return{[g]:re[g]}}))}function Ie(re){let ce=0;for(const g of re)++ce;return ce}function ee(re,ce){let g=0;for(const I of re)I===ce&&++g;return g}},"./src/utils/data-structures.js":(T,k,A)=>{A.r(k),A.d(k,{CharTrie:()=>F,PriorityQueue:()=>w,TokenLattice:()=>U});class w{constructor(N=(R,Q)=>R>Q,D=1/0){this._heap=[],this._comparator=N,this._maxSize=D}get size(){return this._heap.length}isEmpty(){return this.size===0}peek(){return this._heap[0]}push(...N){return this.extend(N)}extend(N){for(const D of N)if(this.size<this._maxSize)this._heap.push(D),this._siftUp();else{const R=this._smallest();this._comparator(D,this._heap[R])&&(this._heap[R]=D,this._siftUpFrom(R))}return this.size}pop(){const N=this.peek(),D=this.size-1;return D>0&&this._swap(0,D),this._heap.pop(),this._siftDown(),N}replace(N){const D=this.peek();return this._heap[0]=N,this._siftDown(),D}_parent(N){return(N+1>>>1)-1}_left(N){return(N<<1)+1}_right(N){return N+1<<1}_greater(N,D){return this._comparator(this._heap[N],this._heap[D])}_swap(N,D){const R=this._heap[N];this._heap[N]=this._heap[D],this._heap[D]=R}_siftUp(){this._siftUpFrom(this.size-1)}_siftUpFrom(N){for(;N>0&&this._greater(N,this._parent(N));)this._swap(N,this._parent(N)),N=this._parent(N)}_siftDown(){let N=0;for(;this._left(N)<this.size&&this._greater(this._left(N),N)||this._right(N)<this.size&&this._greater(this._right(N),N);){const D=this._right(N)<this.size&&this._greater(this._right(N),this._left(N))?this._right(N):this._left(N);this._swap(N,D),N=D}}_smallest(){return 2**Math.floor(Math.log2(this.size))-1}}class F{constructor(){this.root=Y.default()}extend(N){for(const D of N)this.push(D)}push(N){let D=this.root;for(const R of N){let Q=D.children.get(R);Q===void 0&&(Q=Y.default(),D.children.set(R,Q)),D=Q}D.isLeaf=!0}*commonPrefixSearch(N){let D=this.root;if(D===void 0)return;let R="";for(const Q of N){if(R+=Q,D=D.children.get(Q),D===void 0)return;D.isLeaf&&(yield R)}}}class Y{constructor(N,D){this.isLeaf=N,this.children=D}static default(){return new Y(!1,new Map)}}class U{constructor(N,D,R){this.chars=Array.from(N),this.len=this.chars.length,this.bosTokenId=D,this.eosTokenId=R,this.nodes=[],this.beginNodes=Array.from({length:this.len+1},()=>[]),this.endNodes=Array.from({length:this.len+1},()=>[]);const Q=new H(this.bosTokenId,0,0,0,0),J=new H(this.eosTokenId,1,this.len,0,0);this.nodes.push(Q.clone()),this.nodes.push(J.clone()),this.beginNodes[this.len].push(J),this.endNodes[0].push(Q)}insert(N,D,R,Q){const J=this.nodes.length,oe=new H(Q,J,N,D,R);this.beginNodes[N].push(oe),this.endNodes[N+D].push(oe),this.nodes.push(oe)}viterbi(){const N=this.len;let D=0;for(;D<=N;){if(this.beginNodes[D].length==0)return[];for(let be of this.beginNodes[D]){be.prev=null;let Ie=0,ee=null;for(let re of this.endNodes[D]){const ce=re.backtraceScore+be.score;(ee===null||ce>Ie)&&(ee=re.clone(),Ie=ce)}if(ee!==null)be.prev=ee,be.backtraceScore=Ie;else return[]}++D}const R=[],J=this.beginNodes[N][0].prev;if(J===null)return[];let oe=J.clone();for(;oe.prev!==null;)R.push(oe.clone()),oe=oe.clone().prev.clone();return R.reverse(),R}piece(N){return this.chars.slice(N.pos,N.pos+N.length).join("")}tokens(){return this.viterbi().map(D=>this.piece(D))}tokenIds(){return this.viterbi().map(D=>D.tokenId)}}class H{constructor(N,D,R,Q,J){this.tokenId=N,this.nodeId=D,this.pos=R,this.length=Q,this.score=J,this.prev=null,this.backtraceScore=0}clone(){const N=new H(this.tokenId,this.nodeId,this.pos,this.length,this.score);return N.prev=this.prev,N.backtraceScore=this.backtraceScore,N}}},"./src/utils/devices.js":(T,k,A)=>{A.r(k),A.d(k,{DEVICE_TYPES:()=>w});const w=Object.freeze({auto:"auto",gpu:"gpu",cpu:"cpu",wasm:"wasm",webgpu:"webgpu",cuda:"cuda",dml:"dml",webnn:"webnn","webnn-npu":"webnn-npu","webnn-gpu":"webnn-gpu","webnn-cpu":"webnn-cpu"})},"./src/utils/dtypes.js":(T,k,A)=>{A.r(k),A.d(k,{DATA_TYPES:()=>U,DEFAULT_DEVICE_DTYPE_MAPPING:()=>H,DEFAULT_DTYPE_SUFFIX_MAPPING:()=>z,isWebGpuFp16Supported:()=>Y});var w=A("./src/env.js"),F=A("./src/utils/devices.js");const Y=function(){let N;return async function(){if(N===void 0)if(!w.apis.IS_WEBGPU_AVAILABLE)N=!1;else try{N=(await navigator.gpu.requestAdapter()).features.has("shader-f16")}catch{N=!1}return N}}(),U=Object.freeze({auto:"auto",fp32:"fp32",fp16:"fp16",q8:"q8",int8:"int8",uint8:"uint8",q4:"q4",bnb4:"bnb4",q4f16:"q4f16"}),H=Object.freeze({[F.DEVICE_TYPES.wasm]:U.q8}),z=Object.freeze({[U.fp32]:"",[U.fp16]:"_fp16",[U.int8]:"_int8",[U.uint8]:"_uint8",[U.q8]:"_quantized",[U.q4]:"_q4",[U.q4f16]:"_q4f16",[U.bnb4]:"_bnb4"})},"./src/utils/generic.js":(T,k,A)=>{A.r(k),A.d(k,{Callable:()=>w});const w=class{constructor(){let F=function(...Y){return F._call(...Y)};return Object.setPrototypeOf(F,new.target.prototype)}_call(...F){throw Error("Must implement _call method in subclass")}}},"./src/utils/hub.js":(T,k,A)=>{A.r(k),A.d(k,{getFile:()=>D,getModelFile:()=>be,getModelJSON:()=>Ie});var w=A("?7a2c"),F=A("?a42a"),Y=A("./src/env.js"),U=A("./src/utils/core.js");const H={txt:"text/plain",html:"text/html",css:"text/css",js:"text/javascript",json:"application/json",png:"image/png",jpg:"image/jpeg",jpeg:"image/jpeg",gif:"image/gif"};class z{constructor(g){if(this.filePath=g,this.headers=new Headers,this.exists=w.existsSync(g),this.exists){this.status=200,this.statusText="OK";let I=w.statSync(g);this.headers.set("content-length",I.size.toString()),this.updateContentType();let e=this;this.body=new ReadableStream({start(u){e.arrayBuffer().then(B=>{u.enqueue(new Uint8Array(B)),u.close()})}})}else this.status=404,this.statusText="Not Found",this.body=null}updateContentType(){const g=this.filePath.toString().split(".").pop().toLowerCase();this.headers.set("content-type",H[g]??"application/octet-stream")}clone(){let g=new z(this.filePath);return g.exists=this.exists,g.status=this.status,g.statusText=this.statusText,g.headers=new Headers(this.headers),g}async arrayBuffer(){return(await w.promises.readFile(this.filePath)).buffer}async blob(){const g=await w.promises.readFile(this.filePath);return new Blob([g],{type:this.headers.get("content-type")})}async text(){return await w.promises.readFile(this.filePath,"utf8")}async json(){return JSON.parse(await this.text())}}function N(ce,g=null,I=null){let e;try{e=new URL(ce)}catch{return!1}return!(g&&!g.includes(e.protocol)||I&&!I.includes(e.hostname))}async function D(ce){var g;if(Y.env.useFS&&!N(ce,["http:","https:","blob:"]))return new z(ce);if(typeof process<"u"&&((g=process==null?void 0:process.release)==null?void 0:g.name)==="node"){const I=!!(ud!=null&&ud.TESTING_REMOTELY),e=Y.env.version,u=new Headers;if(u.set("User-Agent",`transformers.js/${e}; is_ci/${I};`),N(ce,["http:","https:"],["huggingface.co","hf.co"])){const ue=(ud==null?void 0:ud.HF_TOKEN)??(ud==null?void 0:ud.HF_ACCESS_TOKEN);ue&&u.set("Authorization",`Bearer ${ue}`)}return fetch(ce,{headers:u})}else return fetch(ce)}const R={400:"Bad request error occurred while trying to load file",401:"Unauthorized access to file",403:"Forbidden access to file",404:"Could not locate file",408:"Request timeout error occurred while trying to load file",500:"Internal server error error occurred while trying to load file",502:"Bad gateway error occurred while trying to load file",503:"Service unavailable error occurred while trying to load file",504:"Gateway timeout error occurred while trying to load file"};function Q(ce,g,I){if(!I)return null;const e=R[ce]??`Error (${ce}) occurred while trying to load file`;throw Error(`${e}: "${g}".`)}class J{constructor(g){this.path=g}async match(g){let I=F.join(this.path,g),e=new z(I);if(e.exists)return e}async put(g,I){const e=Buffer.from(await I.arrayBuffer());let u=F.join(this.path,g);try{await w.promises.mkdir(F.dirname(u),{recursive:!0}),await w.promises.writeFile(u,e)}catch(B){console.warn("An error occurred while writing the file to cache:",B)}}}async function oe(ce,...g){for(let I of g)try{let e=await ce.match(I);if(e)return e}catch{continue}}async function be(ce,g,I=!0,e={}){if(!Y.env.allowLocalModels){if(e.local_files_only)throw Error("Invalid configuration detected: local models are disabled (`env.allowLocalModels=false`) but you have requested to only use local models (`local_files_only=true`).");if(!Y.env.allowRemoteModels)throw Error("Invalid configuration detected: both local and remote models are disabled. Fix by setting `env.allowLocalModels` or `env.allowRemoteModels` to `true`.")}(0,U.dispatchCallback)(e.progress_callback,{status:"initiate",name:ce,file:g});let u;if(!u&&Y.env.useBrowserCache){if(typeof caches>"u")throw Error("Browser cache is not available in this environment.");try{u=await caches.open("transformers-cache")}catch(et){console.warn("An error occurred while opening the browser cache:",et)}}if(!u&&Y.env.useFSCache&&(u=new J(e.cache_dir??Y.env.cacheDir)),!u&&Y.env.useCustomCache){if(!Y.env.customCache)throw Error("`env.useCustomCache=true`, but `env.customCache` is not defined.");if(!Y.env.customCache.match||!Y.env.customCache.put)throw new Error("`env.customCache` must be an object which implements the `match` and `put` functions of the Web Cache API. For more information, see https://developer.mozilla.org/en-US/docs/Web/API/Cache");u=Y.env.customCache}const B=e.revision??"main";let ue=re(ce,g),G=re(Y.env.localModelPath,ue),K=re(Y.env.remoteHost,Y.env.remotePathTemplate.replaceAll("{model}",ce).replaceAll("{revision}",encodeURIComponent(B)),g),Ve=B==="main"?ue:re(ce,B,g),ve,Re=u instanceof J?Ve:K,Ke=!1,nt;u&&(nt=await oe(u,G,Re));const Ct=nt!==void 0;if(nt===void 0){if(Y.env.allowLocalModels)if(N(ue,["http:","https:"])){if(e.local_files_only)throw new Error(`\`local_files_only=true\`, but attempted to load a remote file from: ${ue}.`);if(!Y.env.allowRemoteModels)throw new Error(`\`env.allowRemoteModels=false\`, but attempted to load a remote file from: ${ue}.`)}else try{nt=await D(G),ve=G}catch(ze){console.warn(`Unable to load from local path "${G}": "${ze}"`)}if(nt===void 0||nt.status===404){if(e.local_files_only||!Y.env.allowRemoteModels){if(I)throw Error(`\`local_files_only=true\` or \`env.allowRemoteModels=false\` and file was not found locally at "${G}".`);return null}if(nt=await D(K),nt.status!==200)return Q(nt.status,K,I);ve=Re}Ke=u&&typeof Response<"u"&&nt instanceof Response&&nt.status===200}(0,U.dispatchCallback)(e.progress_callback,{status:"download",name:ce,file:g});let ht;return e.progress_callback?Ct&&typeof navigator<"u"&&/firefox/i.test(navigator.userAgent)?(ht=new Uint8Array(await nt.arrayBuffer()),(0,U.dispatchCallback)(e.progress_callback,{status:"progress",name:ce,file:g,progress:100,loaded:ht.length,total:ht.length})):ht=await ee(nt,et=>{(0,U.dispatchCallback)(e.progress_callback,{status:"progress",name:ce,file:g,...et})}):ht=new Uint8Array(await nt.arrayBuffer()),Ke&&ve&&await u.match(ve)===void 0&&await u.put(ve,new Response(ht,{headers:nt.headers})).catch(et=>{console.warn(`Unable to add response to browser cache: ${et}.`)}),(0,U.dispatchCallback)(e.progress_callback,{status:"done",name:ce,file:g}),ht}async function Ie(ce,g,I=!0,e={}){let u=await be(ce,g,I,e);if(u===null)return{};let ue=new TextDecoder("utf-8").decode(u);return JSON.parse(ue)}async function ee(ce,g){const I=ce.headers.get("Content-Length");I===null&&console.warn("Unable to determine content-length from response headers. Will expand buffer when needed.");let e=parseInt(I??"0"),u=new Uint8Array(e),B=0;const ue=ce.body.getReader();async function G(){const{done:K,value:Ve}=await ue.read();if(K)return;let ve=B+Ve.length;if(ve>e){e=ve;let Ke=new Uint8Array(e);Ke.set(u),u=Ke}u.set(Ve,B),B=ve;const Re=B/e*100;return g({progress:Re,loaded:B,total:e}),G()}return await G(),u}function re(...ce){return ce=ce.map((g,I)=>(I&&(g=g.replace(new RegExp("^/"),"")),I!==ce.length-1&&(g=g.replace(new RegExp("/$"),"")),g)),ce.join("/")}},"./src/utils/image.js":(T,k,A)=>{A.r(k),A.d(k,{RawImage:()=>oe,load_image:()=>be});var w=A("./src/utils/core.js"),F=A("./src/utils/hub.js"),Y=A("./src/env.js"),U=A("./src/utils/tensor.js"),H=A("?2b25");let z,N,D;const R=Y.apis.IS_BROWSER_ENV||Y.apis.IS_WEBWORKER_ENV;if(R)z=(Ie,ee)=>{if(!self.OffscreenCanvas)throw new Error("OffscreenCanvas not supported by this browser.");return new self.OffscreenCanvas(Ie,ee)},D=self.createImageBitmap,N=self.ImageData;else if(H)D=async Ie=>{const re=(await Ie.metadata()).channels,{data:ce,info:g}=await Ie.rotate().raw().toBuffer({resolveWithObject:!0}),I=new oe(new Uint8ClampedArray(ce),g.width,g.height,g.channels);return re!==void 0&&re!==g.channels&&I.convert(re),I};else throw new Error("Unable to load image processing library.");const Q={0:"nearest",1:"lanczos",2:"bilinear",3:"bicubic",4:"box",5:"hamming"},J=new Map([["png","image/png"],["jpg","image/jpeg"],["jpeg","image/jpeg"],["gif","image/gif"]]);class oe{constructor(ee,re,ce,g){this.data=ee,this.width=re,this.height=ce,this.channels=g}get size(){return[this.width,this.height]}static async read(ee){if(ee instanceof oe)return ee;if(typeof ee=="string"||ee instanceof URL)return await this.fromURL(ee);throw new Error(`Unsupported input type: ${typeof ee}`)}static fromCanvas(ee){if(!R)throw new Error("fromCanvas() is only supported in browser environments.");const ce=ee.getContext("2d").getImageData(0,0,ee.width,ee.height).data;return new oe(ce,ee.width,ee.height,4)}static async fromURL(ee){const re=await(0,F.getFile)(ee);if(re.status!==200)throw new Error(`Unable to read image from "${ee}" (${re.status} ${re.statusText})`);const ce=await re.blob();return this.fromBlob(ce)}static async fromBlob(ee){if(R){const re=await D(ee),ce=z(re.width,re.height).getContext("2d");return ce.drawImage(re,0,0),new this(ce.getImageData(0,0,re.width,re.height).data,re.width,re.height,4)}else{const re=H(await ee.arrayBuffer());return await D(re)}}static fromTensor(ee,re="CHW"){if(ee.dims.length!==3)throw new Error(`Tensor should have 3 dimensions, but has ${ee.dims.length} dimensions.`);if(re==="CHW")ee=ee.transpose(1,2,0);else if(re!=="HWC")throw new Error(`Unsupported channel format: ${re}`);if(!(ee.data instanceof Uint8ClampedArray||ee.data instanceof Uint8Array))throw new Error(`Unsupported tensor type: ${ee.type}`);switch(ee.dims[2]){case 1:case 2:case 3:case 4:return new oe(ee.data,ee.dims[1],ee.dims[0],ee.dims[2]);default:throw new Error(`Unsupported number of channels: ${ee.dims[2]}`)}}grayscale(){if(this.channels===1)return this;const ee=new Uint8ClampedArray(this.width*this.height*1);switch(this.channels){case 3:case 4:for(let re=0,ce=0;re<this.data.length;re+=this.channels){const g=this.data[re],I=this.data[re+1],e=this.data[re+2];ee[ce++]=Math.round(.2989*g+.587*I+.114*e)}break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(ee,this.width,this.height,1)}rgb(){if(this.channels===3)return this;const ee=new Uint8ClampedArray(this.width*this.height*3);switch(this.channels){case 1:for(let re=0,ce=0;re<this.data.length;++re)ee[ce++]=this.data[re],ee[ce++]=this.data[re],ee[ce++]=this.data[re];break;case 4:for(let re=0,ce=0;re<this.data.length;re+=4)ee[ce++]=this.data[re],ee[ce++]=this.data[re+1],ee[ce++]=this.data[re+2];break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(ee,this.width,this.height,3)}rgba(){if(this.channels===4)return this;const ee=new Uint8ClampedArray(this.width*this.height*4);switch(this.channels){case 1:for(let re=0,ce=0;re<this.data.length;++re)ee[ce++]=this.data[re],ee[ce++]=this.data[re],ee[ce++]=this.data[re],ee[ce++]=255;break;case 3:for(let re=0,ce=0;re<this.data.length;re+=3)ee[ce++]=this.data[re],ee[ce++]=this.data[re+1],ee[ce++]=this.data[re+2],ee[ce++]=255;break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(ee,this.width,this.height,4)}putAlpha(ee){if(ee.width!==this.width||ee.height!==this.height)throw new Error(`Expected mask size to be ${this.width}x${this.height}, but got ${ee.width}x${ee.height}`);if(ee.channels!==1)throw new Error(`Expected mask to have 1 channel, but got ${ee.channels}`);const re=this.data,ce=ee.data,g=this.width*this.height;if(this.channels===3){const I=new Uint8ClampedArray(g*4);for(let e=0,u=0,B=0;e<g;++e)I[B++]=re[u++],I[B++]=re[u++],I[B++]=re[u++],I[B++]=ce[e];return this._update(I,this.width,this.height,4)}else if(this.channels===4){for(let I=0;I<g;++I)re[4*I+3]=ce[I];return this}throw new Error(`Expected image to have 3 or 4 channels, but got ${this.channels}`)}async resize(ee,re,{resample:ce=2}={}){if(this.width===ee&&this.height===re)return this;let g=Q[ce]??ce;const I=(0,w.isNullishDimension)(ee),e=(0,w.isNullishDimension)(re);if(I&&e)return this;if(I?ee=re/this.height*this.width:e&&(re=ee/this.width*this.height),R){const u=this.channels,B=this.toCanvas(),ue=z(ee,re).getContext("2d");return ue.drawImage(B,0,0,ee,re),new oe(ue.getImageData(0,0,ee,re).data,ee,re,4).convert(u)}else{let u=this.toSharp();switch(g){case"box":case"hamming":(g==="box"||g==="hamming")&&(console.warn(`Resampling method ${g} is not yet supported. Using bilinear instead.`),g="bilinear");case"nearest":case"bilinear":case"bicubic":u=u.affine([ee/this.width,0,0,re/this.height],{interpolator:g});break;case"lanczos":u=u.resize({width:ee,height:re,fit:"fill",kernel:"lanczos3"});break;default:throw new Error(`Resampling method ${g} is not supported.`)}return await D(u)}}async pad([ee,re,ce,g]){if(ee=Math.max(ee,0),re=Math.max(re,0),ce=Math.max(ce,0),g=Math.max(g,0),ee===0&&re===0&&ce===0&&g===0)return this;if(R){const I=this.channels,e=this.toCanvas(),u=this.width+ee+re,B=this.height+ce+g,ue=z(u,B).getContext("2d");return ue.drawImage(e,0,0,this.width,this.height,ee,ce,this.width,this.height),new oe(ue.getImageData(0,0,u,B).data,u,B,4).convert(I)}else{const I=this.toSharp().extend({left:ee,right:re,top:ce,bottom:g});return await D(I)}}async crop([ee,re,ce,g]){if(ee=Math.max(ee,0),re=Math.max(re,0),ce=Math.min(ce,this.width-1),g=Math.min(g,this.height-1),ee===0&&re===0&&ce===this.width-1&&g===this.height-1)return this;const I=ce-ee+1,e=g-re+1;if(R){const u=this.channels,B=this.toCanvas(),ue=z(I,e).getContext("2d");return ue.drawImage(B,ee,re,I,e,0,0,I,e),new oe(ue.getImageData(0,0,I,e).data,I,e,4).convert(u)}else{const u=this.toSharp().extract({left:ee,top:re,width:I,height:e});return await D(u)}}async center_crop(ee,re){if(this.width===ee&&this.height===re)return this;const ce=(this.width-ee)/2,g=(this.height-re)/2;if(R){const I=this.channels,e=this.toCanvas(),u=z(ee,re).getContext("2d");let B=0,ue=0,G=0,K=0;return ce>=0?B=ce:G=-ce,g>=0?ue=g:K=-g,u.drawImage(e,B,ue,ee,re,G,K,ee,re),new oe(u.getImageData(0,0,ee,re).data,ee,re,4).convert(I)}else{let I=this.toSharp();if(ce>=0&&g>=0)I=I.extract({left:Math.floor(ce),top:Math.floor(g),width:ee,height:re});else if(ce<=0&&g<=0){const e=Math.floor(-g),u=Math.floor(-ce);I=I.extend({top:e,left:u,right:ee-this.width-u,bottom:re-this.height-e})}else{let e=[0,0],u=0;g<0?(e[0]=Math.floor(-g),e[1]=re-this.height-e[0]):u=Math.floor(g);let B=[0,0],ue=0;ce<0?(B[0]=Math.floor(-ce),B[1]=ee-this.width-B[0]):ue=Math.floor(ce),I=I.extend({top:e[0],bottom:e[1],left:B[0],right:B[1]}).extract({left:ue,top:u,width:ee,height:re})}return await D(I)}}async toBlob(ee="image/png",re=1){if(!R)throw new Error("toBlob() is only supported in browser environments.");return await this.toCanvas().convertToBlob({type:ee,quality:re})}toTensor(ee="CHW"){let re=new U.Tensor("uint8",new Uint8Array(this.data),[this.height,this.width,this.channels]);if(ee!=="HWC")if(ee==="CHW")re=re.permute(2,0,1);else throw new Error(`Unsupported channel format: ${ee}`);return re}toCanvas(){if(!R)throw new Error("toCanvas() is only supported in browser environments.");const ee=this.clone().rgba(),re=z(ee.width,ee.height),ce=new N(ee.data,ee.width,ee.height);return re.getContext("2d").putImageData(ce,0,0),re}split(){const{data:ee,width:re,height:ce,channels:g}=this,I=ee.constructor,e=ee.length/g,u=Array.from({length:g},()=>new I(e));for(let B=0;B<e;++B){const ue=g*B;for(let G=0;G<g;++G)u[G][B]=ee[ue+G]}return u.map(B=>new oe(B,re,ce,1))}_update(ee,re,ce,g=null){return this.data=ee,this.width=re,this.height=ce,g!==null&&(this.channels=g),this}clone(){return new oe(this.data.slice(),this.width,this.height,this.channels)}convert(ee){if(this.channels===ee)return this;switch(ee){case 1:this.grayscale();break;case 3:this.rgb();break;case 4:this.rgba();break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this}async save(ee){if(R){if(Y.apis.IS_WEBWORKER_ENV)throw new Error("Unable to save an image from a Web Worker.");const re=ee.split(".").pop().toLowerCase(),ce=J.get(re)??"image/png",g=await this.toBlob(ce);(0,w.saveBlob)(ee,g)}else{if(Y.apis.IS_FS_AVAILABLE)return await this.toSharp().toFile(ee);throw new Error("Unable to save the image because filesystem is disabled in this environment.")}}toSharp(){if(R)throw new Error("toSharp() is only supported in server-side environments.");return H(this.data,{raw:{width:this.width,height:this.height,channels:this.channels}})}}const be=oe.read.bind(oe)},"./src/utils/maths.js":(T,k,A)=>{A.r(k),A.d(k,{FFT:()=>be,bankers_round:()=>re,cos_sim:()=>z,dot:()=>H,dynamic_time_warping:()=>ce,interpolate_data:()=>w,log_softmax:()=>U,magnitude:()=>N,max:()=>R,medianFilter:()=>Ie,min:()=>D,permute_data:()=>F,round:()=>ee,softmax:()=>Y});function w(g,[I,e,u],[B,ue],G="bilinear",K=!1){const Ve=ue/u,ve=B/e,Re=new g.constructor(B*ue*I),Ke=e*u,nt=B*ue;for(let Ct=0;Ct<B;++Ct)for(let ht=0;ht<ue;++ht){const et=Ct*ue+ht,ze=(ht+.5)/Ve-.5,Se=(Ct+.5)/ve-.5;let xe=Math.floor(ze),Me=Math.floor(Se);const ft=Math.min(xe+1,u-1),gt=Math.min(Me+1,e-1);xe=Math.max(xe,0),Me=Math.max(Me,0);const _t=ze-xe,Je=Se-Me,bt=(1-_t)*(1-Je),rt=_t*(1-Je),Ne=(1-_t)*Je,it=_t*Je,Et=Me*u,$e=gt*u,It=Et+xe,Tt=Et+ft,zt=$e+xe,Wt=$e+ft;for(let pe=0;pe<I;++pe){const Ut=pe*Ke;Re[pe*nt+et]=bt*g[Ut+It]+rt*g[Ut+Tt]+Ne*g[Ut+zt]+it*g[Ut+Wt]}}return Re}function F(g,I,e){const u=new Array(e.length),B=new Array(e.length);for(let K=e.length-1,Ve=1;K>=0;--K)B[K]=Ve,u[K]=I[e[K]],Ve*=u[K];const ue=e.map((K,Ve)=>B[e.indexOf(Ve)]),G=new g.constructor(g.length);for(let K=0;K<g.length;++K){let Ve=0;for(let ve=I.length-1,Re=K;ve>=0;--ve)Ve+=Re%I[ve]*ue[ve],Re=Math.floor(Re/I[ve]);G[Ve]=g[K]}return[G,u]}function Y(g){const I=R(g)[0],e=g.map(ue=>Math.exp(ue-I)),u=e.reduce((ue,G)=>ue+G,0);return e.map(ue=>ue/u)}function U(g){const I=R(g)[0];let e=0;for(let ue=0;ue<g.length;++ue)e+=Math.exp(g[ue]-I);const u=Math.log(e);return g.map(ue=>ue-I-u)}function H(g,I){let e=0;for(let u=0;u<g.length;++u)e+=g[u]*I[u];return e}function z(g,I){const e=H(g,I),u=N(g),B=N(I);return e/(u*B)}function N(g){return Math.sqrt(g.reduce((I,e)=>I+e*e,0))}function D(g){if(g.length===0)throw Error("Array must not be empty");let I=g[0],e=0;for(let u=1;u<g.length;++u)g[u]<I&&(I=g[u],e=u);return[I,e]}function R(g){if(g.length===0)throw Error("Array must not be empty");let I=g[0],e=0;for(let u=1;u<g.length;++u)g[u]>I&&(I=g[u],e=u);return[I,e]}function Q(g){return g>0&&(g&g-1)===0}class J{constructor(I){if(this.size=I|0,this.size<=1||!Q(this.size))throw new Error("FFT size must be a power of two larger than 1");this._csize=I<<1,this.table=new Float64Array(this.size*2);for(let u=0;u<this.table.length;u+=2){const B=Math.PI*u/this.size;this.table[u]=Math.cos(B),this.table[u+1]=-Math.sin(B)}let e=0;for(let u=1;this.size>u;u<<=1)++e;this._width=e%2===0?e-1:e,this._bitrev=new Int32Array(1<<this._width);for(let u=0;u<this._bitrev.length;++u){this._bitrev[u]=0;for(let B=0;B<this._width;B+=2){const ue=this._width-B-2;this._bitrev[u]|=(u>>>B&3)<<ue}}}createComplexArray(){return new Float64Array(this._csize)}fromComplexArray(I,e){const u=e||new Array(I.length>>>1);for(let B=0;B<I.length;B+=2)u[B>>>1]=I[B];return u}toComplexArray(I,e){const u=e||this.createComplexArray();for(let B=0;B<u.length;B+=2)u[B]=I[B>>>1],u[B+1]=0;return u}transform(I,e){if(I===e)throw new Error("Input and output buffers must be different");this._transform4(I,e,1)}realTransform(I,e){if(I===e)throw new Error("Input and output buffers must be different");this._realTransform4(I,e,1)}inverseTransform(I,e){if(I===e)throw new Error("Input and output buffers must be different");this._transform4(I,e,-1);for(let u=0;u<I.length;++u)I[u]/=this.size}_transform4(I,e,u){const B=this._csize;let G=1<<this._width,K=B/G<<1,Ve,ve;const Re=this._bitrev;if(K===4)for(Ve=0,ve=0;Ve<B;Ve+=K,++ve){const nt=Re[ve];this._singleTransform2(e,I,Ve,nt,G)}else for(Ve=0,ve=0;Ve<B;Ve+=K,++ve){const nt=Re[ve];this._singleTransform4(e,I,Ve,nt,G,u)}const Ke=this.table;for(G>>=2;G>=2;G>>=2){K=B/G<<1;const nt=K>>>2;for(Ve=0;Ve<B;Ve+=K){const Ct=Ve+nt-1;for(let ht=Ve,et=0;ht<Ct;ht+=2,et+=G){const ze=ht,Se=ze+nt,xe=Se+nt,Me=xe+nt,ft=I[ze],gt=I[ze+1],_t=I[Se],Je=I[Se+1],bt=I[xe],rt=I[xe+1],Ne=I[Me],it=I[Me+1],Et=Ke[et],$e=u*Ke[et+1],It=_t*Et-Je*$e,Tt=_t*$e+Je*Et,zt=Ke[2*et],Wt=u*Ke[2*et+1],pe=bt*zt-rt*Wt,Ut=bt*Wt+rt*zt,Pe=Ke[3*et],X=u*Ke[3*et+1],ge=Ne*Pe-it*X,fe=Ne*X+it*Pe,He=ft+pe,ct=gt+Ut,kt=ft-pe,Dt=gt-Ut,Ht=It+ge,Vt=Tt+fe,sr=u*(It-ge),nr=u*(Tt-fe);I[ze]=He+Ht,I[ze+1]=ct+Vt,I[Se]=kt+nr,I[Se+1]=Dt-sr,I[xe]=He-Ht,I[xe+1]=ct-Vt,I[Me]=kt-nr,I[Me+1]=Dt+sr}}}}_singleTransform2(I,e,u,B,ue){const G=I[B],K=I[B+1],Ve=I[B+ue],ve=I[B+ue+1];e[u]=G+Ve,e[u+1]=K+ve,e[u+2]=G-Ve,e[u+3]=K-ve}_singleTransform4(I,e,u,B,ue,G){const K=ue*2,Ve=ue*3,ve=I[B],Re=I[B+1],Ke=I[B+ue],nt=I[B+ue+1],Ct=I[B+K],ht=I[B+K+1],et=I[B+Ve],ze=I[B+Ve+1],Se=ve+Ct,xe=Re+ht,Me=ve-Ct,ft=Re-ht,gt=Ke+et,_t=nt+ze,Je=G*(Ke-et),bt=G*(nt-ze);e[u]=Se+gt,e[u+1]=xe+_t,e[u+2]=Me+bt,e[u+3]=ft-Je,e[u+4]=Se-gt,e[u+5]=xe-_t,e[u+6]=Me-bt,e[u+7]=ft+Je}_realTransform4(I,e,u){const B=this._csize;let G=1<<this._width,K=B/G<<1,Ve,ve;const Re=this._bitrev;if(K===4)for(Ve=0,ve=0;Ve<B;Ve+=K,++ve){const Ct=Re[ve];this._singleRealTransform2(e,I,Ve,Ct>>>1,G>>>1)}else for(Ve=0,ve=0;Ve<B;Ve+=K,++ve){const Ct=Re[ve];this._singleRealTransform4(e,I,Ve,Ct>>>1,G>>>1,u)}const Ke=this.table;for(G>>=2;G>=2;G>>=2){K=B/G<<1;const Ct=K>>>1,ht=Ct>>>1,et=ht>>>1;for(Ve=0;Ve<B;Ve+=K)for(let ze=0,Se=0;ze<=et;ze+=2,Se+=G){const xe=Ve+ze,Me=xe+ht,ft=Me+ht,gt=ft+ht,_t=I[xe],Je=I[xe+1],bt=I[Me],rt=I[Me+1],Ne=I[ft],it=I[ft+1],Et=I[gt],$e=I[gt+1],It=_t,Tt=Je,zt=Ke[Se],Wt=u*Ke[Se+1],pe=bt*zt-rt*Wt,Ut=bt*Wt+rt*zt,Pe=Ke[2*Se],X=u*Ke[2*Se+1],ge=Ne*Pe-it*X,fe=Ne*X+it*Pe,He=Ke[3*Se],ct=u*Ke[3*Se+1],kt=Et*He-$e*ct,Dt=Et*ct+$e*He,Ht=It+ge,Vt=Tt+fe,sr=It-ge,nr=Tt-fe,lr=pe+kt,Fr=Ut+Dt,ns=u*(pe-kt),Gs=u*(Ut-Dt);if(I[xe]=Ht+lr,I[xe+1]=Vt+Fr,I[Me]=sr+Gs,I[Me+1]=nr-ns,ze===0){I[ft]=Ht-lr,I[ft+1]=Vt-Fr;continue}if(ze===et)continue;const Cs=Ve+ht-ze,Ks=Ve+Ct-ze;I[Cs]=sr-u*Gs,I[Cs+1]=-nr-u*ns,I[Ks]=Ht-u*lr,I[Ks+1]=-Vt+u*Fr}}const nt=B>>>1;for(let Ct=2;Ct<nt;Ct+=2)I[B-Ct]=I[Ct],I[B-Ct+1]=-I[Ct+1]}_singleRealTransform2(I,e,u,B,ue){const G=I[B],K=I[B+ue];e[u]=G+K,e[u+1]=0,e[u+2]=G-K,e[u+3]=0}_singleRealTransform4(I,e,u,B,ue,G){const K=ue*2,Ve=ue*3,ve=I[B],Re=I[B+ue],Ke=I[B+K],nt=I[B+Ve],Ct=ve+Ke,ht=ve-Ke,et=Re+nt,ze=G*(Re-nt);e[u]=Ct+et,e[u+1]=0,e[u+2]=ht,e[u+3]=-ze,e[u+4]=Ct-et,e[u+5]=0,e[u+6]=ht,e[u+7]=ze}}class oe{constructor(I){const e=2*(I-1),u=2*(2*I-1),B=2**Math.ceil(Math.log2(u));this.bufferSize=B,this._a=e;const ue=new Float64Array(u),G=new Float64Array(B);this._chirpBuffer=new Float64Array(B),this._buffer1=new Float64Array(B),this._buffer2=new Float64Array(B),this._outBuffer1=new Float64Array(B),this._outBuffer2=new Float64Array(B);const K=-2*Math.PI/I,Ve=Math.cos(K),ve=Math.sin(K);for(let Re=0;Re<u>>1;++Re){const Ke=(Re+1-I)**2/2,nt=Math.sqrt(Ve**2+ve**2)**Ke,Ct=Ke*Math.atan2(ve,Ve),ht=2*Re;ue[ht]=nt*Math.cos(Ct),ue[ht+1]=nt*Math.sin(Ct),G[ht]=ue[ht],G[ht+1]=-ue[ht+1]}this._slicedChirpBuffer=ue.subarray(e,u),this._f=new J(B>>1),this._f.transform(this._chirpBuffer,G)}_transform(I,e,u){const B=this._buffer1,ue=this._buffer2,G=this._outBuffer1,K=this._outBuffer2,Ve=this._chirpBuffer,ve=this._slicedChirpBuffer,Re=this._a;if(u)for(let Ke=0;Ke<ve.length;Ke+=2){const nt=Ke+1,Ct=Ke>>1,ht=e[Ct];B[Ke]=ht*ve[Ke],B[nt]=ht*ve[nt]}else for(let Ke=0;Ke<ve.length;Ke+=2){const nt=Ke+1;B[Ke]=e[Ke]*ve[Ke]-e[nt]*ve[nt],B[nt]=e[Ke]*ve[nt]+e[nt]*ve[Ke]}this._f.transform(G,B);for(let Ke=0;Ke<Ve.length;Ke+=2){const nt=Ke+1;ue[Ke]=G[Ke]*Ve[Ke]-G[nt]*Ve[nt],ue[nt]=G[Ke]*Ve[nt]+G[nt]*Ve[Ke]}this._f.inverseTransform(K,ue);for(let Ke=0;Ke<K.length;Ke+=2){const nt=K[Ke+Re],Ct=K[Ke+Re+1],ht=ve[Ke],et=ve[Ke+1];I[Ke]=nt*ht-Ct*et,I[Ke+1]=nt*et+Ct*ht}}transform(I,e){this._transform(I,e,!1)}realTransform(I,e){this._transform(I,e,!0)}}class be{constructor(I){this.fft_length=I,this.isPowerOfTwo=Q(I),this.isPowerOfTwo?(this.fft=new J(I),this.outputBufferSize=2*I):(this.fft=new oe(I),this.outputBufferSize=this.fft.bufferSize)}realTransform(I,e){this.fft.realTransform(I,e)}transform(I,e){this.fft.transform(I,e)}}function Ie(g,I){if(I%2===0||I<=0)throw new Error("Window size must be a positive odd number");const e=new g.constructor(g.length),u=new g.constructor(I),B=Math.floor(I/2);for(let ue=0;ue<g.length;++ue){let G=0;for(let K=-B;K<=B;++K){let Ve=ue+K;Ve<0?Ve=Math.abs(Ve):Ve>=g.length&&(Ve=2*(g.length-1)-Ve),u[G++]=g[Ve]}u.sort(),e[ue]=u[B]}return e}function ee(g,I){const e=Math.pow(10,I);return Math.round(g*e)/e}function re(g){const I=Math.round(g);return Math.abs(g)%1===.5?I%2===0?I:I-1:I}function ce(g){const I=g.length,e=g[0].length,u=[I+1,e+1],B=Array.from({length:u[0]},()=>Array(u[1]).fill(1/0));B[0][0]=0;const ue=Array.from({length:u[0]},()=>Array(u[1]).fill(-1));for(let Re=1;Re<u[1];++Re)for(let Ke=1;Ke<u[0];++Ke){const nt=B[Ke-1][Re-1],Ct=B[Ke-1][Re],ht=B[Ke][Re-1];let et,ze;nt<Ct&&nt<ht?(et=nt,ze=0):Ct<nt&&Ct<ht?(et=Ct,ze=1):(et=ht,ze=2),B[Ke][Re]=g[Ke-1][Re-1]+et,ue[Ke][Re]=ze}for(let Re=0;Re<u[1];++Re)ue[0][Re]=2;for(let Re=0;Re<u[0];++Re)ue[Re][0]=1;let G=I,K=e,Ve=[],ve=[];for(;G>0||K>0;)switch(Ve.push(G-1),ve.push(K-1),ue[G][K]){case 0:--G,--K;break;case 1:--G;break;case 2:--K;break;default:throw new Error(`Internal error in dynamic time warping. Unexpected trace[${G}, ${K}]. Please file a bug report.`)}return Ve.reverse(),ve.reverse(),[Ve,ve]}},"./src/utils/tensor.js":(T,k,A)=>{A.r(k),A.d(k,{Tensor:()=>H,cat:()=>e,full:()=>ve,full_like:()=>Re,interpolate:()=>D,interpolate_4d:()=>R,layer_norm:()=>re,matmul:()=>Q,mean:()=>G,mean_pooling:()=>ee,ones:()=>Ke,ones_like:()=>nt,permute:()=>N,quantize_embeddings:()=>ze,rand:()=>et,rfft:()=>J,slice:()=>Ie,stack:()=>u,std_mean:()=>ue,topk:()=>oe,zeros:()=>Ct,zeros_like:()=>ht});var w=A("./src/utils/maths.js"),F=A("./src/backends/onnx.js"),Y=A("./src/ops/registry.js");const U=Object.freeze({float32:Float32Array,float16:Uint16Array,float64:Float64Array,string:Array,int8:Int8Array,uint8:Uint8Array,int16:Int16Array,uint16:Uint16Array,int32:Int32Array,uint32:Uint32Array,int64:BigInt64Array,uint64:BigUint64Array,bool:Uint8Array,uint4:Uint8Array,int4:Int8Array});class H{constructor(...xe){We(this,"ort_tensor");return(0,F.isONNXTensor)(xe[0])?this.ort_tensor=xe[0]:this.ort_tensor=new F.Tensor(xe[0],xe[1],xe[2]),new Proxy(this,{get:(Me,ft)=>{if(typeof ft=="string"){let gt=Number(ft);if(Number.isInteger(gt))return Me._getitem(gt)}return Me[ft]},set:(Me,ft,gt)=>Me[ft]=gt})}get dims(){return this.ort_tensor.dims}set dims(xe){this.ort_tensor.dims=xe}get type(){return this.ort_tensor.type}get data(){return this.ort_tensor.data}get size(){return this.ort_tensor.size}get location(){return this.ort_tensor.location}dispose(){this.ort_tensor.dispose()}*[Symbol.iterator](){const[xe,...Me]=this.dims;if(Me.length>0){const ft=Me.reduce((gt,_t)=>gt*_t);for(let gt=0;gt<xe;++gt)yield this._subarray(gt,ft,Me)}else yield*this.data}_getitem(xe){const[Me,...ft]=this.dims;if(xe=I(xe,Me),ft.length>0){const gt=ft.reduce((_t,Je)=>_t*Je);return this._subarray(xe,gt,ft)}else return new H(this.type,[this.data[xe]],ft)}indexOf(xe){const Me=this.data;for(let ft=0;ft<Me.length;++ft)if(Me[ft]==xe)return ft;return-1}_subarray(xe,Me,ft){const gt=xe*Me,_t=(xe+1)*Me,Je="subarray"in this.data?this.data.subarray(gt,_t):this.data.slice(gt,_t);return new H(this.type,Je,ft)}item(){const xe=this.data;if(xe.length!==1)throw new Error(`a Tensor with ${xe.length} elements cannot be converted to Scalar`);return xe[0]}tolist(){return z(this.data,this.dims)}sigmoid(){return this.clone().sigmoid_()}sigmoid_(){const xe=this.data;for(let Me=0;Me<xe.length;++Me)xe[Me]=1/(1+Math.exp(-xe[Me]));return this}map(xe){return this.clone().map_(xe)}map_(xe){const Me=this.data;for(let ft=0;ft<Me.length;++ft)Me[ft]=xe(Me[ft],ft,Me);return this}mul(xe){return this.clone().mul_(xe)}mul_(xe){const Me=this.data;for(let ft=0;ft<Me.length;++ft)Me[ft]*=xe;return this}div(xe){return this.clone().div_(xe)}div_(xe){const Me=this.data;for(let ft=0;ft<Me.length;++ft)Me[ft]/=xe;return this}add(xe){return this.clone().add_(xe)}add_(xe){const Me=this.data;for(let ft=0;ft<Me.length;++ft)Me[ft]+=xe;return this}sub(xe){return this.clone().sub_(xe)}sub_(xe){const Me=this.data;for(let ft=0;ft<Me.length;++ft)Me[ft]-=xe;return this}clone(){return new H(this.type,this.data.slice(),this.dims.slice())}slice(...xe){const Me=[],ft=[];for(let Ne=0;Ne<this.dims.length;++Ne){let it=xe[Ne];if(it==null)ft.push([0,this.dims[Ne]]),Me.push(this.dims[Ne]);else if(typeof it=="number")it=I(it,this.dims[Ne],Ne),ft.push([it,it+1]);else if(Array.isArray(it)&&it.length===2){let[Et,$e]=it;if(Et=Et===null?0:I(Et,this.dims[Ne],Ne,!1),$e=$e===null?this.dims[Ne]:I($e,this.dims[Ne],Ne,!1),Et>$e)throw new Error(`Invalid slice: ${it}`);const It=[Math.max(Et,0),Math.min($e,this.dims[Ne])];ft.push(It),Me.push(It[1]-It[0])}else throw new Error(`Invalid slice: ${it}`)}const gt=ft.map(([Ne,it])=>it-Ne),_t=gt.reduce((Ne,it)=>Ne*it),Je=this.data,bt=new Je.constructor(_t),rt=this.stride();for(let Ne=0;Ne<_t;++Ne){let it=0;for(let Et=gt.length-1,$e=Ne;Et>=0;--Et){const It=gt[Et];it+=($e%It+ft[Et][0])*rt[Et],$e=Math.floor($e/It)}bt[Ne]=Je[it]}return new H(this.type,bt,Me)}permute(...xe){return N(this,xe)}transpose(...xe){return this.permute(...xe)}sum(xe=null,Me=!1){return this.norm(1,xe,Me)}norm(xe="fro",Me=null,ft=!1){if(xe==="fro")xe=2;else if(typeof xe=="string")throw Error(`Unsupported norm: ${xe}`);const gt=this.data,_t=(Ne,it)=>Ne+it**xe;if(Me===null){const Ne=gt.reduce(_t,0)**(1/xe);return new H(this.type,[Ne],[])}const[Je,bt,rt]=B(_t,this,Me,ft);if(xe!==1)for(let Ne=0;Ne<bt.length;++Ne)bt[Ne]=bt[Ne]**(1/xe);return new H(Je,bt,rt)}normalize_(xe=2,Me=1){Me=I(Me,this.dims.length);const ft=this.norm(xe,Me,!0),gt=this.data,_t=ft.data;for(let Je=0;Je<gt.length;++Je){let bt=0;for(let rt=this.dims.length-1,Ne=Je,it=1;rt>=0;--rt){const Et=this.dims[rt];if(rt!==Me){const $e=Ne%Et;bt+=$e*it,it*=this.dims[rt]}Ne=Math.floor(Ne/Et)}gt[Je]/=_t[bt]}return this}normalize(xe=2,Me=1){return this.clone().normalize_(xe,Me)}stride(){return K(this.dims)}squeeze(xe=null){return new H(this.type,this.data,ce(this.dims,xe))}squeeze_(xe=null){return this.dims=ce(this.dims,xe),this}unsqueeze(xe=null){return new H(this.type,this.data,g(this.dims,xe))}unsqueeze_(xe=null){return this.dims=g(this.dims,xe),this}flatten_(xe=0,Me=-1){Me=(Me+this.dims.length)%this.dims.length;let ft=this.dims.slice(0,xe),gt=this.dims.slice(xe,Me+1),_t=this.dims.slice(Me+1);return this.dims=[...ft,gt.reduce((Je,bt)=>Je*bt,1),..._t],this}flatten(xe=0,Me=-1){return this.clone().flatten_(xe,Me)}view(...xe){let Me=-1;for(let gt=0;gt<xe.length;++gt)if(xe[gt]===-1){if(Me!==-1)throw new Error("Only one dimension can be inferred");Me=gt}const ft=this.data;if(Me!==-1){const gt=xe.reduce((_t,Je,bt)=>bt!==Me?_t*Je:_t,1);xe[Me]=ft.length/gt}return new H(this.type,ft,xe)}neg_(){const xe=this.data;for(let Me=0;Me<xe.length;++Me)xe[Me]=-xe[Me];return this}neg(){return this.clone().neg_()}gt(xe){const Me=new Uint8Array(this.data.length),ft=this.data;for(let gt=0;gt<ft.length;++gt)Me[gt]=ft[gt]>xe?1:0;return new H("bool",Me,this.dims)}lt(xe){const Me=new Uint8Array(this.data.length),ft=this.data;for(let gt=0;gt<ft.length;++gt)Me[gt]=ft[gt]<xe?1:0;return new H("bool",Me,this.dims)}clamp_(xe,Me){const ft=this.data;for(let gt=0;gt<ft.length;++gt)ft[gt]=Math.min(Math.max(ft[gt],xe),Me);return this}clamp(xe,Me){return this.clone().clamp_(xe,Me)}round_(){const xe=this.data;for(let Me=0;Me<xe.length;++Me)xe[Me]=Math.round(xe[Me]);return this}round(){return this.clone().round_()}mean(xe=null,Me=!1){return G(this,xe,Me)}min(xe=null,Me=!1){if(xe===null){const Je=(0,w.min)(this.data)[0];return new H(this.type,[Je],[])}const[ft,gt,_t]=B((Je,bt)=>Math.min(Je,bt),this,xe,Me,1/0);return new H(ft,gt,_t)}max(xe=null,Me=!1){if(xe===null){const Je=(0,w.max)(this.data)[0];return new H(this.type,[Je],[])}const[ft,gt,_t]=B((Je,bt)=>Math.max(Je,bt),this,xe,Me,-1/0);return new H(ft,gt,_t)}argmin(xe=null,Me=!1){if(xe!==null)throw new Error("`dim !== null` not yet implemented.");const ft=(0,w.min)(this.data)[1];return new H("int64",[BigInt(ft)],[])}argmax(xe=null,Me=!1){if(xe!==null)throw new Error("`dim !== null` not yet implemented.");const ft=(0,w.max)(this.data)[1];return new H("int64",[BigInt(ft)],[])}to(xe){if(this.type===xe)return this;if(!U.hasOwnProperty(xe))throw new Error(`Unsupported type: ${xe}`);let Me;const ft=["int64","uint64"].includes(this.type),gt=["int64","uint64"].includes(xe);return ft&&!gt?Me=Number:!ft&&gt&&(Me=BigInt),new H(xe,U[xe].from(this.data,Me),this.dims)}}function z(Se,xe){const Me=Se.length,ft=xe.reduce((_t,Je)=>_t*Je);if(Me!==ft)throw Error(`cannot reshape array of size ${Me} into shape (${xe})`);let gt=Se;for(let _t=xe.length-1;_t>=0;_t--)gt=gt.reduce((Je,bt)=>{let rt=Je[Je.length-1];return rt.length<xe[_t]?rt.push(bt):Je.push([bt]),Je},[[]]);return gt[0]}function N(Se,xe){const[Me,ft]=(0,w.permute_data)(Se.data,Se.dims,xe);return new H(Se.type,Me,ft)}function D(Se,[xe,Me],ft="bilinear",gt=!1){const _t=Se.dims.at(-3)??1,Je=Se.dims.at(-2),bt=Se.dims.at(-1);let rt=(0,w.interpolate_data)(Se.data,[_t,Je,bt],[xe,Me],ft,gt);return new H(Se.type,rt,[_t,xe,Me])}async function R(Se,{size:xe=null,mode:Me="bilinear"}={}){if(Se.dims.length!==4)throw new Error("`interpolate_4d` currently only supports 4D input.");if(!xe)throw new Error("`interpolate_4d` requires a `size` argument.");let ft;if(xe.length===2)ft=[...Se.dims.slice(0,2),...xe];else if(xe.length===3)ft=[Se.dims[0],...xe];else if(xe.length===4)ft=xe;else throw new Error("`size` must be of length 2, 3, or 4.");let gt;if(Me==="nearest")gt=await Y.TensorOpRegistry.nearest_interpolate_4d;else if(Me==="bilinear")gt=await Y.TensorOpRegistry.bilinear_interpolate_4d;else if(Me==="bicubic")gt=await Y.TensorOpRegistry.bicubic_interpolate_4d;else throw new Error(`Unsupported mode: ${Me}`);const _t=new H("int64",new BigInt64Array(ft.map(BigInt)),[ft.length]);return await gt({x:Se,s:_t})}async function Q(Se,xe){return await(await Y.TensorOpRegistry.matmul)({a:Se,b:xe})}async function J(Se,xe){return await(await Y.TensorOpRegistry.rfft)({x:Se,a:xe})}async function oe(Se,xe){const Me=await Y.TensorOpRegistry.top_k;return xe==null?xe=Se.dims.at(-1):xe=Math.min(xe,Se.dims.at(-1)),await Me({x:Se,k:new H("int64",[BigInt(xe)],[1])})}const be=Se=>new H("int64",Se,[Se.length]);async function Ie(Se,xe,Me,ft,gt){return await(await Y.TensorOpRegistry.slice)({x:Se,s:be(xe),e:be(Me),a:be(ft),t:be(gt??new Array(ft.length).fill(1))})}function ee(Se,xe){const Me=Se.data,ft=xe.data,gt=[Se.dims[0],Se.dims[2]],_t=new Me.constructor(gt[0]*gt[1]),[Je,bt,rt]=Se.dims;let Ne=0;for(let it=0;it<Je;++it){const Et=it*rt*bt;for(let $e=0;$e<rt;++$e){let It=0,Tt=0;const zt=it*bt,Wt=Et+$e;for(let Ut=0;Ut<bt;++Ut){const Pe=Number(ft[zt+Ut]);Tt+=Pe,It+=Me[Wt+Ut*rt]*Pe}const pe=It/Tt;_t[Ne++]=pe}}return new H(Se.type,_t,gt)}function re(Se,xe,{eps:Me=1e-5}={}){if(Se.dims.length!==2)throw new Error("`layer_norm` currently only supports 2D input.");const[ft,gt]=Se.dims;if(xe.length!==1&&xe[0]!==gt)throw new Error("`normalized_shape` must be a 1D array with shape `[input.dims[1]]`.");const[_t,Je]=ue(Se,1,0,!0),bt=_t.data,rt=Je.data,Ne=Se.data,it=new Ne.constructor(Ne.length);for(let Et=0;Et<ft;++Et){const $e=Et*gt;for(let It=0;It<gt;++It){const Tt=$e+It;it[Tt]=(Ne[Tt]-rt[Et])/(bt[Et]+Me)}}return new H(Se.type,it,Se.dims)}function ce(Se,xe){return Se=Se.slice(),xe===null?Se=Se.filter(Me=>Me!==1):typeof xe=="number"?Se[xe]===1&&Se.splice(xe,1):Array.isArray(xe)&&(Se=Se.filter((Me,ft)=>Me!==1||!xe.includes(ft))),Se}function g(Se,xe){return xe=I(xe,Se.length+1),Se=Se.slice(),Se.splice(xe,0,1),Se}function I(Se,xe,Me=null,ft=!0){if(ft&&(Se<-xe||Se>=xe))throw new Error(`IndexError: index ${Se} is out of bounds for dimension${Me===null?"":" "+Me} with size ${xe}`);return Se<0&&(Se=(Se%xe+xe)%xe),Se}function e(Se,xe=0){xe=I(xe,Se[0].dims.length);const Me=Se[0].dims.slice();Me[xe]=Se.reduce((Je,bt)=>Je+bt.dims[xe],0);const ft=Me.reduce((Je,bt)=>Je*bt,1),gt=new Se[0].data.constructor(ft),_t=Se[0].type;if(xe===0){let Je=0;for(const bt of Se){const rt=bt.data;gt.set(rt,Je),Je+=rt.length}}else{let Je=0;for(let bt=0;bt<Se.length;++bt){const{data:rt,dims:Ne}=Se[bt];for(let it=0;it<rt.length;++it){let Et=0;for(let $e=Ne.length-1,It=it,Tt=1;$e>=0;--$e){const zt=Ne[$e];let Wt=It%zt;$e===xe&&(Wt+=Je),Et+=Wt*Tt,Tt*=Me[$e],It=Math.floor(It/zt)}gt[Et]=rt[it]}Je+=Ne[xe]}}return new H(_t,gt,Me)}function u(Se,xe=0){return e(Se.map(Me=>Me.unsqueeze(xe)),xe)}function B(Se,xe,Me=null,ft=!1,gt=null){const _t=xe.data,Je=xe.dims;Me=I(Me,Je.length);const bt=Je.slice();bt[Me]=1;const rt=new _t.constructor(_t.length/Je[Me]);gt!==null&&rt.fill(gt);for(let Ne=0;Ne<_t.length;++Ne){let it=0;for(let Et=Je.length-1,$e=Ne,It=1;Et>=0;--Et){const Tt=Je[Et];if(Et!==Me){const zt=$e%Tt;it+=zt*It,It*=bt[Et]}$e=Math.floor($e/Tt)}rt[it]=Se(rt[it],_t[Ne],Ne,it)}return ft||bt.splice(Me,1),[xe.type,rt,bt]}function ue(Se,xe=null,Me=1,ft=!1){const gt=Se.data,_t=Se.dims;if(xe===null){const It=gt.reduce((pe,Ut)=>pe+Ut,0)/gt.length,Tt=Math.sqrt(gt.reduce((pe,Ut)=>pe+(Ut-It)**2,0)/(gt.length-Me)),zt=new H(Se.type,[It],[]);return[new H(Se.type,[Tt],[]),zt]}xe=I(xe,_t.length);const Je=G(Se,xe,ft),bt=Je.data,[rt,Ne,it]=B(($e,It,Tt,zt)=>$e+(It-bt[zt])**2,Se,xe,ft);for(let $e=0;$e<Ne.length;++$e)Ne[$e]=Math.sqrt(Ne[$e]/(_t[xe]-Me));return[new H(rt,Ne,it),Je]}function G(Se,xe=null,Me=!1){const ft=Se.dims,gt=Se.data;if(xe===null){const rt=gt.reduce((Ne,it)=>Ne+it,0);return new H(Se.type,[rt/gt.length],[])}xe=I(xe,ft.length);const[_t,Je,bt]=B((rt,Ne)=>rt+Ne,Se,xe,Me);if(ft[xe]!==1)for(let rt=0;rt<Je.length;++rt)Je[rt]/=ft[xe];return new H(_t,Je,bt)}function K(Se){const xe=new Array(Se.length);for(let Me=Se.length-1,ft=1;Me>=0;--Me)xe[Me]=ft,ft*=Se[Me];return xe}function Ve(Se,xe,Me,ft){const gt=Se.reduce((_t,Je)=>_t*Je,1);return new H(Me,new ft(gt).fill(xe),Se)}function ve(Se,xe){let Me,ft;if(typeof xe=="number")Me="float32",ft=Float32Array;else if(typeof xe=="bigint")Me="int64",ft=BigInt64Array;else if(typeof xe=="boolean")Me="bool",ft=Uint8Array;else throw new Error(`Unsupported data type: ${typeof xe}`);return Ve(Se,xe,Me,ft)}function Re(Se,xe){return ve(Se.dims,xe)}function Ke(Se){return Ve(Se,1n,"int64",BigInt64Array)}function nt(Se){return Ke(Se.dims)}function Ct(Se){return Ve(Se,0n,"int64",BigInt64Array)}function ht(Se){return Ct(Se.dims)}function et(Se){const xe=Se.reduce((Me,ft)=>Me*ft,1);return new H("float32",Float32Array.from({length:xe},()=>Math.random()),Se)}function ze(Se,xe){if(Se.dims.length!==2)throw new Error("The tensor must have 2 dimensions");if(Se.dims.at(-1)%8!==0)throw new Error("The last dimension of the tensor must be a multiple of 8");if(!["binary","ubinary"].includes(xe))throw new Error("The precision must be either 'binary' or 'ubinary'");const Me=xe==="binary",ft=Me?"int8":"uint8",gt=Me?Int8Array:Uint8Array,_t=Se.data,Je=new gt(_t.length/8);for(let bt=0;bt<_t.length;++bt){const rt=_t[bt]>0?1:0,Ne=Math.floor(bt/8),it=bt%8;Je[Ne]|=rt<<7-it,Me&&it===0&&(Je[Ne]-=128)}return new H(ft,Je,[Se.dims[0],Se.dims[1]/8])}}},Ip={};function Qa(T){var k=Ip[T];if(k!==void 0)return k.exports;var A=Ip[T]={exports:{}};return Pp[T](A,A.exports,Qa),A.exports}Qa.m=Pp;(()=>{var T=Object.getPrototypeOf?A=>Object.getPrototypeOf(A):A=>A.__proto__,k;Qa.t=function(A,w){if(w&1&&(A=this(A)),w&8||typeof A=="object"&&A&&(w&4&&A.__esModule||w&16&&typeof A.then=="function"))return A;var F=Object.create(null);Qa.r(F);var Y={};k=k||[null,T({}),T([]),T(T)];for(var U=w&2&&A;typeof U=="object"&&!~k.indexOf(U);U=T(U))Object.getOwnPropertyNames(U).forEach(H=>Y[H]=()=>A[H]);return Y.default=()=>A,Qa.d(F,Y),F}})();Qa.d=(T,k)=>{for(var A in k)Qa.o(k,A)&&!Qa.o(T,A)&&Object.defineProperty(T,A,{enumerable:!0,get:k[A]})};Qa.o=(T,k)=>Object.prototype.hasOwnProperty.call(T,k);Qa.r=T=>{typeof Symbol<"u"&&Symbol.toStringTag&&Object.defineProperty(T,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(T,"__esModule",{value:!0})};(()=>{var T;if(typeof import.meta.url=="string"&&(T=import.meta.url),!T)throw new Error("Automatic publicPath is not supported in this browser");T=T.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),Qa.p=T})();Qa.b=new URL(import.meta.url);var se={};(()=>{/*!*****************************!*\
  !*** ./src/transformers.js ***!
  \*****************************/Qa.r(se),Qa.d(se,{ASTFeatureExtractor:()=>D.ASTFeatureExtractor,ASTForAudioClassification:()=>A.ASTForAudioClassification,ASTModel:()=>A.ASTModel,ASTPreTrainedModel:()=>A.ASTPreTrainedModel,AlbertForMaskedLM:()=>A.AlbertForMaskedLM,AlbertForQuestionAnswering:()=>A.AlbertForQuestionAnswering,AlbertForSequenceClassification:()=>A.AlbertForSequenceClassification,AlbertModel:()=>A.AlbertModel,AlbertPreTrainedModel:()=>A.AlbertPreTrainedModel,AlbertTokenizer:()=>w.AlbertTokenizer,AudioClassificationPipeline:()=>k.AudioClassificationPipeline,AutoConfig:()=>F.AutoConfig,AutoFeatureExtractor:()=>R.AutoFeatureExtractor,AutoImageProcessor:()=>oe.AutoImageProcessor,AutoModel:()=>A.AutoModel,AutoModelForAudioClassification:()=>A.AutoModelForAudioClassification,AutoModelForAudioFrameClassification:()=>A.AutoModelForAudioFrameClassification,AutoModelForCTC:()=>A.AutoModelForCTC,AutoModelForCausalLM:()=>A.AutoModelForCausalLM,AutoModelForDepthEstimation:()=>A.AutoModelForDepthEstimation,AutoModelForDocumentQuestionAnswering:()=>A.AutoModelForDocumentQuestionAnswering,AutoModelForImageClassification:()=>A.AutoModelForImageClassification,AutoModelForImageFeatureExtraction:()=>A.AutoModelForImageFeatureExtraction,AutoModelForImageMatting:()=>A.AutoModelForImageMatting,AutoModelForImageSegmentation:()=>A.AutoModelForImageSegmentation,AutoModelForImageToImage:()=>A.AutoModelForImageToImage,AutoModelForMaskGeneration:()=>A.AutoModelForMaskGeneration,AutoModelForMaskedLM:()=>A.AutoModelForMaskedLM,AutoModelForNormalEstimation:()=>A.AutoModelForNormalEstimation,AutoModelForObjectDetection:()=>A.AutoModelForObjectDetection,AutoModelForPoseEstimation:()=>A.AutoModelForPoseEstimation,AutoModelForQuestionAnswering:()=>A.AutoModelForQuestionAnswering,AutoModelForSemanticSegmentation:()=>A.AutoModelForSemanticSegmentation,AutoModelForSeq2SeqLM:()=>A.AutoModelForSeq2SeqLM,AutoModelForSequenceClassification:()=>A.AutoModelForSequenceClassification,AutoModelForSpeechSeq2Seq:()=>A.AutoModelForSpeechSeq2Seq,AutoModelForTextToSpectrogram:()=>A.AutoModelForTextToSpectrogram,AutoModelForTextToWaveform:()=>A.AutoModelForTextToWaveform,AutoModelForTokenClassification:()=>A.AutoModelForTokenClassification,AutoModelForUniversalSegmentation:()=>A.AutoModelForUniversalSegmentation,AutoModelForVision2Seq:()=>A.AutoModelForVision2Seq,AutoModelForXVector:()=>A.AutoModelForXVector,AutoModelForZeroShotObjectDetection:()=>A.AutoModelForZeroShotObjectDetection,AutoProcessor:()=>ee.AutoProcessor,AutoTokenizer:()=>w.AutoTokenizer,AutomaticSpeechRecognitionPipeline:()=>k.AutomaticSpeechRecognitionPipeline,BartForConditionalGeneration:()=>A.BartForConditionalGeneration,BartForSequenceClassification:()=>A.BartForSequenceClassification,BartModel:()=>A.BartModel,BartPretrainedModel:()=>A.BartPretrainedModel,BartTokenizer:()=>w.BartTokenizer,BaseModelOutput:()=>A.BaseModelOutput,BaseStreamer:()=>re.BaseStreamer,BeitFeatureExtractor:()=>J.BeitFeatureExtractor,BeitForImageClassification:()=>A.BeitForImageClassification,BeitModel:()=>A.BeitModel,BeitPreTrainedModel:()=>A.BeitPreTrainedModel,BertForMaskedLM:()=>A.BertForMaskedLM,BertForQuestionAnswering:()=>A.BertForQuestionAnswering,BertForSequenceClassification:()=>A.BertForSequenceClassification,BertForTokenClassification:()=>A.BertForTokenClassification,BertModel:()=>A.BertModel,BertPreTrainedModel:()=>A.BertPreTrainedModel,BertTokenizer:()=>w.BertTokenizer,BitImageProcessor:()=>J.BitImageProcessor,BlenderbotForConditionalGeneration:()=>A.BlenderbotForConditionalGeneration,BlenderbotModel:()=>A.BlenderbotModel,BlenderbotPreTrainedModel:()=>A.BlenderbotPreTrainedModel,BlenderbotSmallForConditionalGeneration:()=>A.BlenderbotSmallForConditionalGeneration,BlenderbotSmallModel:()=>A.BlenderbotSmallModel,BlenderbotSmallPreTrainedModel:()=>A.BlenderbotSmallPreTrainedModel,BlenderbotSmallTokenizer:()=>w.BlenderbotSmallTokenizer,BlenderbotTokenizer:()=>w.BlenderbotTokenizer,BloomForCausalLM:()=>A.BloomForCausalLM,BloomModel:()=>A.BloomModel,BloomPreTrainedModel:()=>A.BloomPreTrainedModel,BloomTokenizer:()=>w.BloomTokenizer,CLIPFeatureExtractor:()=>J.CLIPFeatureExtractor,CLIPImageProcessor:()=>J.CLIPImageProcessor,CLIPModel:()=>A.CLIPModel,CLIPPreTrainedModel:()=>A.CLIPPreTrainedModel,CLIPSegForImageSegmentation:()=>A.CLIPSegForImageSegmentation,CLIPSegModel:()=>A.CLIPSegModel,CLIPSegPreTrainedModel:()=>A.CLIPSegPreTrainedModel,CLIPTextModel:()=>A.CLIPTextModel,CLIPTextModelWithProjection:()=>A.CLIPTextModelWithProjection,CLIPTokenizer:()=>w.CLIPTokenizer,CLIPVisionModel:()=>A.CLIPVisionModel,CLIPVisionModelWithProjection:()=>A.CLIPVisionModelWithProjection,CamembertForMaskedLM:()=>A.CamembertForMaskedLM,CamembertForQuestionAnswering:()=>A.CamembertForQuestionAnswering,CamembertForSequenceClassification:()=>A.CamembertForSequenceClassification,CamembertForTokenClassification:()=>A.CamembertForTokenClassification,CamembertModel:()=>A.CamembertModel,CamembertPreTrainedModel:()=>A.CamembertPreTrainedModel,CamembertTokenizer:()=>w.CamembertTokenizer,CausalLMOutput:()=>A.CausalLMOutput,CausalLMOutputWithPast:()=>A.CausalLMOutputWithPast,ChineseCLIPFeatureExtractor:()=>J.ChineseCLIPFeatureExtractor,ChineseCLIPModel:()=>A.ChineseCLIPModel,ChineseCLIPPreTrainedModel:()=>A.ChineseCLIPPreTrainedModel,ClapAudioModelWithProjection:()=>A.ClapAudioModelWithProjection,ClapFeatureExtractor:()=>D.ClapFeatureExtractor,ClapModel:()=>A.ClapModel,ClapPreTrainedModel:()=>A.ClapPreTrainedModel,ClapTextModelWithProjection:()=>A.ClapTextModelWithProjection,ClassifierFreeGuidanceLogitsProcessor:()=>g.ClassifierFreeGuidanceLogitsProcessor,CodeGenForCausalLM:()=>A.CodeGenForCausalLM,CodeGenModel:()=>A.CodeGenModel,CodeGenPreTrainedModel:()=>A.CodeGenPreTrainedModel,CodeGenTokenizer:()=>w.CodeGenTokenizer,CodeLlamaTokenizer:()=>w.CodeLlamaTokenizer,CohereForCausalLM:()=>A.CohereForCausalLM,CohereModel:()=>A.CohereModel,CoherePreTrainedModel:()=>A.CoherePreTrainedModel,CohereTokenizer:()=>w.CohereTokenizer,ConvBertForMaskedLM:()=>A.ConvBertForMaskedLM,ConvBertForQuestionAnswering:()=>A.ConvBertForQuestionAnswering,ConvBertForSequenceClassification:()=>A.ConvBertForSequenceClassification,ConvBertForTokenClassification:()=>A.ConvBertForTokenClassification,ConvBertModel:()=>A.ConvBertModel,ConvBertPreTrainedModel:()=>A.ConvBertPreTrainedModel,ConvBertTokenizer:()=>w.ConvBertTokenizer,ConvNextFeatureExtractor:()=>J.ConvNextFeatureExtractor,ConvNextForImageClassification:()=>A.ConvNextForImageClassification,ConvNextImageProcessor:()=>J.ConvNextImageProcessor,ConvNextModel:()=>A.ConvNextModel,ConvNextPreTrainedModel:()=>A.ConvNextPreTrainedModel,ConvNextV2ForImageClassification:()=>A.ConvNextV2ForImageClassification,ConvNextV2Model:()=>A.ConvNextV2Model,ConvNextV2PreTrainedModel:()=>A.ConvNextV2PreTrainedModel,DPTFeatureExtractor:()=>J.DPTFeatureExtractor,DPTForDepthEstimation:()=>A.DPTForDepthEstimation,DPTImageProcessor:()=>J.DPTImageProcessor,DPTModel:()=>A.DPTModel,DPTPreTrainedModel:()=>A.DPTPreTrainedModel,DebertaForMaskedLM:()=>A.DebertaForMaskedLM,DebertaForQuestionAnswering:()=>A.DebertaForQuestionAnswering,DebertaForSequenceClassification:()=>A.DebertaForSequenceClassification,DebertaForTokenClassification:()=>A.DebertaForTokenClassification,DebertaModel:()=>A.DebertaModel,DebertaPreTrainedModel:()=>A.DebertaPreTrainedModel,DebertaTokenizer:()=>w.DebertaTokenizer,DebertaV2ForMaskedLM:()=>A.DebertaV2ForMaskedLM,DebertaV2ForQuestionAnswering:()=>A.DebertaV2ForQuestionAnswering,DebertaV2ForSequenceClassification:()=>A.DebertaV2ForSequenceClassification,DebertaV2ForTokenClassification:()=>A.DebertaV2ForTokenClassification,DebertaV2Model:()=>A.DebertaV2Model,DebertaV2PreTrainedModel:()=>A.DebertaV2PreTrainedModel,DebertaV2Tokenizer:()=>w.DebertaV2Tokenizer,DecisionTransformerModel:()=>A.DecisionTransformerModel,DecisionTransformerPreTrainedModel:()=>A.DecisionTransformerPreTrainedModel,DeiTFeatureExtractor:()=>J.DeiTFeatureExtractor,DeiTForImageClassification:()=>A.DeiTForImageClassification,DeiTImageProcessor:()=>J.DeiTImageProcessor,DeiTModel:()=>A.DeiTModel,DeiTPreTrainedModel:()=>A.DeiTPreTrainedModel,DepthAnythingForDepthEstimation:()=>A.DepthAnythingForDepthEstimation,DepthAnythingPreTrainedModel:()=>A.DepthAnythingPreTrainedModel,DepthEstimationPipeline:()=>k.DepthEstimationPipeline,DepthProForDepthEstimation:()=>A.DepthProForDepthEstimation,DepthProPreTrainedModel:()=>A.DepthProPreTrainedModel,DetrFeatureExtractor:()=>J.DetrFeatureExtractor,DetrForObjectDetection:()=>A.DetrForObjectDetection,DetrForSegmentation:()=>A.DetrForSegmentation,DetrImageProcessor:()=>J.DetrImageProcessor,DetrModel:()=>A.DetrModel,DetrObjectDetectionOutput:()=>A.DetrObjectDetectionOutput,DetrPreTrainedModel:()=>A.DetrPreTrainedModel,DetrSegmentationOutput:()=>A.DetrSegmentationOutput,Dinov2ForImageClassification:()=>A.Dinov2ForImageClassification,Dinov2Model:()=>A.Dinov2Model,Dinov2PreTrainedModel:()=>A.Dinov2PreTrainedModel,Dinov2WithRegistersForImageClassification:()=>A.Dinov2WithRegistersForImageClassification,Dinov2WithRegistersModel:()=>A.Dinov2WithRegistersModel,Dinov2WithRegistersPreTrainedModel:()=>A.Dinov2WithRegistersPreTrainedModel,DistilBertForMaskedLM:()=>A.DistilBertForMaskedLM,DistilBertForQuestionAnswering:()=>A.DistilBertForQuestionAnswering,DistilBertForSequenceClassification:()=>A.DistilBertForSequenceClassification,DistilBertForTokenClassification:()=>A.DistilBertForTokenClassification,DistilBertModel:()=>A.DistilBertModel,DistilBertPreTrainedModel:()=>A.DistilBertPreTrainedModel,DistilBertTokenizer:()=>w.DistilBertTokenizer,DocumentQuestionAnsweringPipeline:()=>k.DocumentQuestionAnsweringPipeline,DonutFeatureExtractor:()=>J.DonutFeatureExtractor,DonutImageProcessor:()=>J.DonutImageProcessor,DonutSwinModel:()=>A.DonutSwinModel,DonutSwinPreTrainedModel:()=>A.DonutSwinPreTrainedModel,EfficientNetForImageClassification:()=>A.EfficientNetForImageClassification,EfficientNetImageProcessor:()=>J.EfficientNetImageProcessor,EfficientNetModel:()=>A.EfficientNetModel,EfficientNetPreTrainedModel:()=>A.EfficientNetPreTrainedModel,ElectraForMaskedLM:()=>A.ElectraForMaskedLM,ElectraForQuestionAnswering:()=>A.ElectraForQuestionAnswering,ElectraForSequenceClassification:()=>A.ElectraForSequenceClassification,ElectraForTokenClassification:()=>A.ElectraForTokenClassification,ElectraModel:()=>A.ElectraModel,ElectraPreTrainedModel:()=>A.ElectraPreTrainedModel,ElectraTokenizer:()=>w.ElectraTokenizer,EosTokenCriteria:()=>ce.EosTokenCriteria,EsmForMaskedLM:()=>A.EsmForMaskedLM,EsmForSequenceClassification:()=>A.EsmForSequenceClassification,EsmForTokenClassification:()=>A.EsmForTokenClassification,EsmModel:()=>A.EsmModel,EsmPreTrainedModel:()=>A.EsmPreTrainedModel,EsmTokenizer:()=>w.EsmTokenizer,ExaoneForCausalLM:()=>A.ExaoneForCausalLM,ExaoneModel:()=>A.ExaoneModel,ExaonePreTrainedModel:()=>A.ExaonePreTrainedModel,FFT:()=>z.FFT,FalconForCausalLM:()=>A.FalconForCausalLM,FalconModel:()=>A.FalconModel,FalconPreTrainedModel:()=>A.FalconPreTrainedModel,FalconTokenizer:()=>w.FalconTokenizer,FastViTForImageClassification:()=>A.FastViTForImageClassification,FastViTModel:()=>A.FastViTModel,FastViTPreTrainedModel:()=>A.FastViTPreTrainedModel,FeatureExtractionPipeline:()=>k.FeatureExtractionPipeline,FeatureExtractor:()=>N.FeatureExtractor,FillMaskPipeline:()=>k.FillMaskPipeline,Florence2ForConditionalGeneration:()=>A.Florence2ForConditionalGeneration,Florence2PreTrainedModel:()=>A.Florence2PreTrainedModel,Florence2Processor:()=>Ie.Florence2Processor,ForcedBOSTokenLogitsProcessor:()=>g.ForcedBOSTokenLogitsProcessor,ForcedEOSTokenLogitsProcessor:()=>g.ForcedEOSTokenLogitsProcessor,GLPNFeatureExtractor:()=>J.GLPNFeatureExtractor,GLPNForDepthEstimation:()=>A.GLPNForDepthEstimation,GLPNModel:()=>A.GLPNModel,GLPNPreTrainedModel:()=>A.GLPNPreTrainedModel,GPT2LMHeadModel:()=>A.GPT2LMHeadModel,GPT2Model:()=>A.GPT2Model,GPT2PreTrainedModel:()=>A.GPT2PreTrainedModel,GPT2Tokenizer:()=>w.GPT2Tokenizer,GPTBigCodeForCausalLM:()=>A.GPTBigCodeForCausalLM,GPTBigCodeModel:()=>A.GPTBigCodeModel,GPTBigCodePreTrainedModel:()=>A.GPTBigCodePreTrainedModel,GPTJForCausalLM:()=>A.GPTJForCausalLM,GPTJModel:()=>A.GPTJModel,GPTJPreTrainedModel:()=>A.GPTJPreTrainedModel,GPTNeoForCausalLM:()=>A.GPTNeoForCausalLM,GPTNeoModel:()=>A.GPTNeoModel,GPTNeoPreTrainedModel:()=>A.GPTNeoPreTrainedModel,GPTNeoXForCausalLM:()=>A.GPTNeoXForCausalLM,GPTNeoXModel:()=>A.GPTNeoXModel,GPTNeoXPreTrainedModel:()=>A.GPTNeoXPreTrainedModel,GPTNeoXTokenizer:()=>w.GPTNeoXTokenizer,Gemma2ForCausalLM:()=>A.Gemma2ForCausalLM,Gemma2Model:()=>A.Gemma2Model,Gemma2PreTrainedModel:()=>A.Gemma2PreTrainedModel,GemmaForCausalLM:()=>A.GemmaForCausalLM,GemmaModel:()=>A.GemmaModel,GemmaPreTrainedModel:()=>A.GemmaPreTrainedModel,GemmaTokenizer:()=>w.GemmaTokenizer,GlmForCausalLM:()=>A.GlmForCausalLM,GlmModel:()=>A.GlmModel,GlmPreTrainedModel:()=>A.GlmPreTrainedModel,GraniteForCausalLM:()=>A.GraniteForCausalLM,GraniteModel:()=>A.GraniteModel,GranitePreTrainedModel:()=>A.GranitePreTrainedModel,Grok1Tokenizer:()=>w.Grok1Tokenizer,GroundingDinoForObjectDetection:()=>A.GroundingDinoForObjectDetection,GroundingDinoImageProcessor:()=>J.GroundingDinoImageProcessor,GroundingDinoPreTrainedModel:()=>A.GroundingDinoPreTrainedModel,GroundingDinoProcessor:()=>Ie.GroundingDinoProcessor,GroupViTModel:()=>A.GroupViTModel,GroupViTPreTrainedModel:()=>A.GroupViTPreTrainedModel,HeliumForCausalLM:()=>A.HeliumForCausalLM,HeliumModel:()=>A.HeliumModel,HeliumPreTrainedModel:()=>A.HeliumPreTrainedModel,HerbertTokenizer:()=>w.HerbertTokenizer,HieraForImageClassification:()=>A.HieraForImageClassification,HieraModel:()=>A.HieraModel,HieraPreTrainedModel:()=>A.HieraPreTrainedModel,HubertForCTC:()=>A.HubertForCTC,HubertForSequenceClassification:()=>A.HubertForSequenceClassification,HubertModel:()=>A.HubertModel,HubertPreTrainedModel:()=>A.HubertPreTrainedModel,IJepaForImageClassification:()=>A.IJepaForImageClassification,IJepaModel:()=>A.IJepaModel,IJepaPreTrainedModel:()=>A.IJepaPreTrainedModel,Idefics3ForConditionalGeneration:()=>A.Idefics3ForConditionalGeneration,Idefics3ImageProcessor:()=>J.Idefics3ImageProcessor,Idefics3PreTrainedModel:()=>A.Idefics3PreTrainedModel,Idefics3Processor:()=>Ie.Idefics3Processor,ImageClassificationPipeline:()=>k.ImageClassificationPipeline,ImageFeatureExtractionPipeline:()=>k.ImageFeatureExtractionPipeline,ImageFeatureExtractor:()=>D.ImageFeatureExtractor,ImageMattingOutput:()=>A.ImageMattingOutput,ImageProcessor:()=>Q.ImageProcessor,ImageSegmentationPipeline:()=>k.ImageSegmentationPipeline,ImageToImagePipeline:()=>k.ImageToImagePipeline,ImageToTextPipeline:()=>k.ImageToTextPipeline,InterruptableStoppingCriteria:()=>ce.InterruptableStoppingCriteria,JAISLMHeadModel:()=>A.JAISLMHeadModel,JAISModel:()=>A.JAISModel,JAISPreTrainedModel:()=>A.JAISPreTrainedModel,JinaCLIPImageProcessor:()=>J.JinaCLIPImageProcessor,JinaCLIPModel:()=>A.JinaCLIPModel,JinaCLIPPreTrainedModel:()=>A.JinaCLIPPreTrainedModel,JinaCLIPProcessor:()=>Ie.JinaCLIPProcessor,JinaCLIPTextModel:()=>A.JinaCLIPTextModel,JinaCLIPVisionModel:()=>A.JinaCLIPVisionModel,LlamaForCausalLM:()=>A.LlamaForCausalLM,LlamaModel:()=>A.LlamaModel,LlamaPreTrainedModel:()=>A.LlamaPreTrainedModel,LlamaTokenizer:()=>w.LlamaTokenizer,LlavaForConditionalGeneration:()=>A.LlavaForConditionalGeneration,LlavaOnevisionForConditionalGeneration:()=>A.LlavaOnevisionForConditionalGeneration,LlavaOnevisionImageProcessor:()=>J.LlavaOnevisionImageProcessor,LlavaPreTrainedModel:()=>A.LlavaPreTrainedModel,LogitsProcessor:()=>g.LogitsProcessor,LogitsProcessorList:()=>g.LogitsProcessorList,LogitsWarper:()=>g.LogitsWarper,LongT5ForConditionalGeneration:()=>A.LongT5ForConditionalGeneration,LongT5Model:()=>A.LongT5Model,LongT5PreTrainedModel:()=>A.LongT5PreTrainedModel,M2M100ForConditionalGeneration:()=>A.M2M100ForConditionalGeneration,M2M100Model:()=>A.M2M100Model,M2M100PreTrainedModel:()=>A.M2M100PreTrainedModel,M2M100Tokenizer:()=>w.M2M100Tokenizer,MBart50Tokenizer:()=>w.MBart50Tokenizer,MBartForCausalLM:()=>A.MBartForCausalLM,MBartForConditionalGeneration:()=>A.MBartForConditionalGeneration,MBartForSequenceClassification:()=>A.MBartForSequenceClassification,MBartModel:()=>A.MBartModel,MBartPreTrainedModel:()=>A.MBartPreTrainedModel,MBartTokenizer:()=>w.MBartTokenizer,MPNetForMaskedLM:()=>A.MPNetForMaskedLM,MPNetForQuestionAnswering:()=>A.MPNetForQuestionAnswering,MPNetForSequenceClassification:()=>A.MPNetForSequenceClassification,MPNetForTokenClassification:()=>A.MPNetForTokenClassification,MPNetModel:()=>A.MPNetModel,MPNetPreTrainedModel:()=>A.MPNetPreTrainedModel,MPNetTokenizer:()=>w.MPNetTokenizer,MT5ForConditionalGeneration:()=>A.MT5ForConditionalGeneration,MT5Model:()=>A.MT5Model,MT5PreTrainedModel:()=>A.MT5PreTrainedModel,MarianMTModel:()=>A.MarianMTModel,MarianModel:()=>A.MarianModel,MarianPreTrainedModel:()=>A.MarianPreTrainedModel,MarianTokenizer:()=>w.MarianTokenizer,Mask2FormerImageProcessor:()=>J.Mask2FormerImageProcessor,MaskFormerFeatureExtractor:()=>J.MaskFormerFeatureExtractor,MaskFormerForInstanceSegmentation:()=>A.MaskFormerForInstanceSegmentation,MaskFormerImageProcessor:()=>J.MaskFormerImageProcessor,MaskFormerModel:()=>A.MaskFormerModel,MaskFormerPreTrainedModel:()=>A.MaskFormerPreTrainedModel,MaskedLMOutput:()=>A.MaskedLMOutput,MaxLengthCriteria:()=>ce.MaxLengthCriteria,MgpstrForSceneTextRecognition:()=>A.MgpstrForSceneTextRecognition,MgpstrModelOutput:()=>A.MgpstrModelOutput,MgpstrPreTrainedModel:()=>A.MgpstrPreTrainedModel,MgpstrProcessor:()=>Ie.MgpstrProcessor,MgpstrTokenizer:()=>w.MgpstrTokenizer,MinLengthLogitsProcessor:()=>g.MinLengthLogitsProcessor,MinNewTokensLengthLogitsProcessor:()=>g.MinNewTokensLengthLogitsProcessor,MistralForCausalLM:()=>A.MistralForCausalLM,MistralModel:()=>A.MistralModel,MistralPreTrainedModel:()=>A.MistralPreTrainedModel,MobileBertForMaskedLM:()=>A.MobileBertForMaskedLM,MobileBertForQuestionAnswering:()=>A.MobileBertForQuestionAnswering,MobileBertForSequenceClassification:()=>A.MobileBertForSequenceClassification,MobileBertModel:()=>A.MobileBertModel,MobileBertPreTrainedModel:()=>A.MobileBertPreTrainedModel,MobileBertTokenizer:()=>w.MobileBertTokenizer,MobileLLMForCausalLM:()=>A.MobileLLMForCausalLM,MobileLLMModel:()=>A.MobileLLMModel,MobileLLMPreTrainedModel:()=>A.MobileLLMPreTrainedModel,MobileNetV1FeatureExtractor:()=>J.MobileNetV1FeatureExtractor,MobileNetV1ForImageClassification:()=>A.MobileNetV1ForImageClassification,MobileNetV1ImageProcessor:()=>J.MobileNetV1ImageProcessor,MobileNetV1Model:()=>A.MobileNetV1Model,MobileNetV1PreTrainedModel:()=>A.MobileNetV1PreTrainedModel,MobileNetV2FeatureExtractor:()=>J.MobileNetV2FeatureExtractor,MobileNetV2ForImageClassification:()=>A.MobileNetV2ForImageClassification,MobileNetV2ImageProcessor:()=>J.MobileNetV2ImageProcessor,MobileNetV2Model:()=>A.MobileNetV2Model,MobileNetV2PreTrainedModel:()=>A.MobileNetV2PreTrainedModel,MobileNetV3FeatureExtractor:()=>J.MobileNetV3FeatureExtractor,MobileNetV3ForImageClassification:()=>A.MobileNetV3ForImageClassification,MobileNetV3ImageProcessor:()=>J.MobileNetV3ImageProcessor,MobileNetV3Model:()=>A.MobileNetV3Model,MobileNetV3PreTrainedModel:()=>A.MobileNetV3PreTrainedModel,MobileNetV4FeatureExtractor:()=>J.MobileNetV4FeatureExtractor,MobileNetV4ForImageClassification:()=>A.MobileNetV4ForImageClassification,MobileNetV4ImageProcessor:()=>J.MobileNetV4ImageProcessor,MobileNetV4Model:()=>A.MobileNetV4Model,MobileNetV4PreTrainedModel:()=>A.MobileNetV4PreTrainedModel,MobileViTFeatureExtractor:()=>J.MobileViTFeatureExtractor,MobileViTForImageClassification:()=>A.MobileViTForImageClassification,MobileViTImageProcessor:()=>J.MobileViTImageProcessor,MobileViTModel:()=>A.MobileViTModel,MobileViTPreTrainedModel:()=>A.MobileViTPreTrainedModel,MobileViTV2ForImageClassification:()=>A.MobileViTV2ForImageClassification,MobileViTV2Model:()=>A.MobileViTV2Model,MobileViTV2PreTrainedModel:()=>A.MobileViTV2PreTrainedModel,ModelOutput:()=>A.ModelOutput,ModernBertForMaskedLM:()=>A.ModernBertForMaskedLM,ModernBertForSequenceClassification:()=>A.ModernBertForSequenceClassification,ModernBertForTokenClassification:()=>A.ModernBertForTokenClassification,ModernBertModel:()=>A.ModernBertModel,ModernBertPreTrainedModel:()=>A.ModernBertPreTrainedModel,Moondream1ForConditionalGeneration:()=>A.Moondream1ForConditionalGeneration,MoonshineFeatureExtractor:()=>D.MoonshineFeatureExtractor,MoonshineForConditionalGeneration:()=>A.MoonshineForConditionalGeneration,MoonshineModel:()=>A.MoonshineModel,MoonshinePreTrainedModel:()=>A.MoonshinePreTrainedModel,MoonshineProcessor:()=>Ie.MoonshineProcessor,MptForCausalLM:()=>A.MptForCausalLM,MptModel:()=>A.MptModel,MptPreTrainedModel:()=>A.MptPreTrainedModel,MultiModalityCausalLM:()=>A.MultiModalityCausalLM,MultiModalityPreTrainedModel:()=>A.MultiModalityPreTrainedModel,MusicgenForCausalLM:()=>A.MusicgenForCausalLM,MusicgenForConditionalGeneration:()=>A.MusicgenForConditionalGeneration,MusicgenModel:()=>A.MusicgenModel,MusicgenPreTrainedModel:()=>A.MusicgenPreTrainedModel,NllbTokenizer:()=>w.NllbTokenizer,NoBadWordsLogitsProcessor:()=>g.NoBadWordsLogitsProcessor,NoRepeatNGramLogitsProcessor:()=>g.NoRepeatNGramLogitsProcessor,NomicBertModel:()=>A.NomicBertModel,NomicBertPreTrainedModel:()=>A.NomicBertPreTrainedModel,NougatImageProcessor:()=>J.NougatImageProcessor,NougatTokenizer:()=>w.NougatTokenizer,OPTForCausalLM:()=>A.OPTForCausalLM,OPTModel:()=>A.OPTModel,OPTPreTrainedModel:()=>A.OPTPreTrainedModel,ObjectDetectionPipeline:()=>k.ObjectDetectionPipeline,Olmo2ForCausalLM:()=>A.Olmo2ForCausalLM,Olmo2Model:()=>A.Olmo2Model,Olmo2PreTrainedModel:()=>A.Olmo2PreTrainedModel,OlmoForCausalLM:()=>A.OlmoForCausalLM,OlmoModel:()=>A.OlmoModel,OlmoPreTrainedModel:()=>A.OlmoPreTrainedModel,OpenELMForCausalLM:()=>A.OpenELMForCausalLM,OpenELMModel:()=>A.OpenELMModel,OpenELMPreTrainedModel:()=>A.OpenELMPreTrainedModel,OwlViTFeatureExtractor:()=>J.OwlViTFeatureExtractor,OwlViTForObjectDetection:()=>A.OwlViTForObjectDetection,OwlViTImageProcessor:()=>J.OwlViTImageProcessor,OwlViTModel:()=>A.OwlViTModel,OwlViTPreTrainedModel:()=>A.OwlViTPreTrainedModel,OwlViTProcessor:()=>Ie.OwlViTProcessor,Owlv2ForObjectDetection:()=>A.Owlv2ForObjectDetection,Owlv2ImageProcessor:()=>J.Owlv2ImageProcessor,Owlv2Model:()=>A.Owlv2Model,Owlv2PreTrainedModel:()=>A.Owlv2PreTrainedModel,PaliGemmaForConditionalGeneration:()=>A.PaliGemmaForConditionalGeneration,PaliGemmaPreTrainedModel:()=>A.PaliGemmaPreTrainedModel,PaliGemmaProcessor:()=>Ie.PaliGemmaProcessor,PatchTSMixerForPrediction:()=>A.PatchTSMixerForPrediction,PatchTSMixerModel:()=>A.PatchTSMixerModel,PatchTSMixerPreTrainedModel:()=>A.PatchTSMixerPreTrainedModel,PatchTSTForPrediction:()=>A.PatchTSTForPrediction,PatchTSTModel:()=>A.PatchTSTModel,PatchTSTPreTrainedModel:()=>A.PatchTSTPreTrainedModel,Phi3ForCausalLM:()=>A.Phi3ForCausalLM,Phi3Model:()=>A.Phi3Model,Phi3PreTrainedModel:()=>A.Phi3PreTrainedModel,Phi3VForCausalLM:()=>A.Phi3VForCausalLM,Phi3VImageProcessor:()=>J.Phi3VImageProcessor,Phi3VPreTrainedModel:()=>A.Phi3VPreTrainedModel,Phi3VProcessor:()=>Ie.Phi3VProcessor,PhiForCausalLM:()=>A.PhiForCausalLM,PhiModel:()=>A.PhiModel,PhiPreTrainedModel:()=>A.PhiPreTrainedModel,Pipeline:()=>k.Pipeline,PreTrainedModel:()=>A.PreTrainedModel,PreTrainedTokenizer:()=>w.PreTrainedTokenizer,PretrainedConfig:()=>F.PretrainedConfig,PretrainedMixin:()=>A.PretrainedMixin,Processor:()=>be.Processor,PvtForImageClassification:()=>A.PvtForImageClassification,PvtImageProcessor:()=>J.PvtImageProcessor,PvtModel:()=>A.PvtModel,PvtPreTrainedModel:()=>A.PvtPreTrainedModel,PyAnnoteFeatureExtractor:()=>D.PyAnnoteFeatureExtractor,PyAnnoteForAudioFrameClassification:()=>A.PyAnnoteForAudioFrameClassification,PyAnnoteModel:()=>A.PyAnnoteModel,PyAnnotePreTrainedModel:()=>A.PyAnnotePreTrainedModel,PyAnnoteProcessor:()=>Ie.PyAnnoteProcessor,QuestionAnsweringModelOutput:()=>A.QuestionAnsweringModelOutput,QuestionAnsweringPipeline:()=>k.QuestionAnsweringPipeline,Qwen2ForCausalLM:()=>A.Qwen2ForCausalLM,Qwen2Model:()=>A.Qwen2Model,Qwen2PreTrainedModel:()=>A.Qwen2PreTrainedModel,Qwen2Tokenizer:()=>w.Qwen2Tokenizer,Qwen2VLForConditionalGeneration:()=>A.Qwen2VLForConditionalGeneration,Qwen2VLImageProcessor:()=>J.Qwen2VLImageProcessor,Qwen2VLPreTrainedModel:()=>A.Qwen2VLPreTrainedModel,Qwen2VLProcessor:()=>Ie.Qwen2VLProcessor,RTDetrForObjectDetection:()=>A.RTDetrForObjectDetection,RTDetrImageProcessor:()=>J.RTDetrImageProcessor,RTDetrModel:()=>A.RTDetrModel,RTDetrObjectDetectionOutput:()=>A.RTDetrObjectDetectionOutput,RTDetrPreTrainedModel:()=>A.RTDetrPreTrainedModel,RawAudio:()=>Y.RawAudio,RawImage:()=>U.RawImage,RepetitionPenaltyLogitsProcessor:()=>g.RepetitionPenaltyLogitsProcessor,ResNetForImageClassification:()=>A.ResNetForImageClassification,ResNetModel:()=>A.ResNetModel,ResNetPreTrainedModel:()=>A.ResNetPreTrainedModel,RoFormerForMaskedLM:()=>A.RoFormerForMaskedLM,RoFormerForQuestionAnswering:()=>A.RoFormerForQuestionAnswering,RoFormerForSequenceClassification:()=>A.RoFormerForSequenceClassification,RoFormerForTokenClassification:()=>A.RoFormerForTokenClassification,RoFormerModel:()=>A.RoFormerModel,RoFormerPreTrainedModel:()=>A.RoFormerPreTrainedModel,RoFormerTokenizer:()=>w.RoFormerTokenizer,RobertaForMaskedLM:()=>A.RobertaForMaskedLM,RobertaForQuestionAnswering:()=>A.RobertaForQuestionAnswering,RobertaForSequenceClassification:()=>A.RobertaForSequenceClassification,RobertaForTokenClassification:()=>A.RobertaForTokenClassification,RobertaModel:()=>A.RobertaModel,RobertaPreTrainedModel:()=>A.RobertaPreTrainedModel,RobertaTokenizer:()=>w.RobertaTokenizer,SamImageProcessor:()=>J.SamImageProcessor,SamImageSegmentationOutput:()=>A.SamImageSegmentationOutput,SamModel:()=>A.SamModel,SamPreTrainedModel:()=>A.SamPreTrainedModel,SamProcessor:()=>Ie.SamProcessor,SapiensForDepthEstimation:()=>A.SapiensForDepthEstimation,SapiensForNormalEstimation:()=>A.SapiensForNormalEstimation,SapiensForSemanticSegmentation:()=>A.SapiensForSemanticSegmentation,SapiensPreTrainedModel:()=>A.SapiensPreTrainedModel,SeamlessM4TFeatureExtractor:()=>D.SeamlessM4TFeatureExtractor,SegformerFeatureExtractor:()=>J.SegformerFeatureExtractor,SegformerForImageClassification:()=>A.SegformerForImageClassification,SegformerForSemanticSegmentation:()=>A.SegformerForSemanticSegmentation,SegformerImageProcessor:()=>J.SegformerImageProcessor,SegformerModel:()=>A.SegformerModel,SegformerPreTrainedModel:()=>A.SegformerPreTrainedModel,Seq2SeqLMOutput:()=>A.Seq2SeqLMOutput,SequenceClassifierOutput:()=>A.SequenceClassifierOutput,SiglipImageProcessor:()=>J.SiglipImageProcessor,SiglipModel:()=>A.SiglipModel,SiglipPreTrainedModel:()=>A.SiglipPreTrainedModel,SiglipTextModel:()=>A.SiglipTextModel,SiglipTokenizer:()=>w.SiglipTokenizer,SiglipVisionModel:()=>A.SiglipVisionModel,SpeechT5FeatureExtractor:()=>D.SpeechT5FeatureExtractor,SpeechT5ForSpeechToText:()=>A.SpeechT5ForSpeechToText,SpeechT5ForTextToSpeech:()=>A.SpeechT5ForTextToSpeech,SpeechT5HifiGan:()=>A.SpeechT5HifiGan,SpeechT5Model:()=>A.SpeechT5Model,SpeechT5PreTrainedModel:()=>A.SpeechT5PreTrainedModel,SpeechT5Processor:()=>Ie.SpeechT5Processor,SpeechT5Tokenizer:()=>w.SpeechT5Tokenizer,SqueezeBertForMaskedLM:()=>A.SqueezeBertForMaskedLM,SqueezeBertForQuestionAnswering:()=>A.SqueezeBertForQuestionAnswering,SqueezeBertForSequenceClassification:()=>A.SqueezeBertForSequenceClassification,SqueezeBertModel:()=>A.SqueezeBertModel,SqueezeBertPreTrainedModel:()=>A.SqueezeBertPreTrainedModel,SqueezeBertTokenizer:()=>w.SqueezeBertTokenizer,StableLmForCausalLM:()=>A.StableLmForCausalLM,StableLmModel:()=>A.StableLmModel,StableLmPreTrainedModel:()=>A.StableLmPreTrainedModel,Starcoder2ForCausalLM:()=>A.Starcoder2ForCausalLM,Starcoder2Model:()=>A.Starcoder2Model,Starcoder2PreTrainedModel:()=>A.Starcoder2PreTrainedModel,StoppingCriteria:()=>ce.StoppingCriteria,StoppingCriteriaList:()=>ce.StoppingCriteriaList,StyleTextToSpeech2Model:()=>A.StyleTextToSpeech2Model,StyleTextToSpeech2PreTrainedModel:()=>A.StyleTextToSpeech2PreTrainedModel,SummarizationPipeline:()=>k.SummarizationPipeline,SuppressTokensAtBeginLogitsProcessor:()=>g.SuppressTokensAtBeginLogitsProcessor,Swin2SRForImageSuperResolution:()=>A.Swin2SRForImageSuperResolution,Swin2SRImageProcessor:()=>J.Swin2SRImageProcessor,Swin2SRModel:()=>A.Swin2SRModel,Swin2SRPreTrainedModel:()=>A.Swin2SRPreTrainedModel,SwinForImageClassification:()=>A.SwinForImageClassification,SwinModel:()=>A.SwinModel,SwinPreTrainedModel:()=>A.SwinPreTrainedModel,T5ForConditionalGeneration:()=>A.T5ForConditionalGeneration,T5Model:()=>A.T5Model,T5PreTrainedModel:()=>A.T5PreTrainedModel,T5Tokenizer:()=>w.T5Tokenizer,TableTransformerForObjectDetection:()=>A.TableTransformerForObjectDetection,TableTransformerModel:()=>A.TableTransformerModel,TableTransformerObjectDetectionOutput:()=>A.TableTransformerObjectDetectionOutput,TableTransformerPreTrainedModel:()=>A.TableTransformerPreTrainedModel,TemperatureLogitsWarper:()=>g.TemperatureLogitsWarper,Tensor:()=>H.Tensor,Text2TextGenerationPipeline:()=>k.Text2TextGenerationPipeline,TextClassificationPipeline:()=>k.TextClassificationPipeline,TextGenerationPipeline:()=>k.TextGenerationPipeline,TextStreamer:()=>re.TextStreamer,TextToAudioPipeline:()=>k.TextToAudioPipeline,TokenClassificationPipeline:()=>k.TokenClassificationPipeline,TokenClassifierOutput:()=>A.TokenClassifierOutput,TokenizerModel:()=>w.TokenizerModel,TopKLogitsWarper:()=>g.TopKLogitsWarper,TopPLogitsWarper:()=>g.TopPLogitsWarper,TrOCRForCausalLM:()=>A.TrOCRForCausalLM,TrOCRPreTrainedModel:()=>A.TrOCRPreTrainedModel,TranslationPipeline:()=>k.TranslationPipeline,UniSpeechForCTC:()=>A.UniSpeechForCTC,UniSpeechForSequenceClassification:()=>A.UniSpeechForSequenceClassification,UniSpeechModel:()=>A.UniSpeechModel,UniSpeechPreTrainedModel:()=>A.UniSpeechPreTrainedModel,UniSpeechSatForAudioFrameClassification:()=>A.UniSpeechSatForAudioFrameClassification,UniSpeechSatForCTC:()=>A.UniSpeechSatForCTC,UniSpeechSatForSequenceClassification:()=>A.UniSpeechSatForSequenceClassification,UniSpeechSatModel:()=>A.UniSpeechSatModel,UniSpeechSatPreTrainedModel:()=>A.UniSpeechSatPreTrainedModel,VLChatProcessor:()=>Ie.VLChatProcessor,VLMImageProcessor:()=>J.VLMImageProcessor,ViTFeatureExtractor:()=>J.ViTFeatureExtractor,ViTForImageClassification:()=>A.ViTForImageClassification,ViTImageProcessor:()=>J.ViTImageProcessor,ViTMAEModel:()=>A.ViTMAEModel,ViTMAEPreTrainedModel:()=>A.ViTMAEPreTrainedModel,ViTMSNForImageClassification:()=>A.ViTMSNForImageClassification,ViTMSNModel:()=>A.ViTMSNModel,ViTMSNPreTrainedModel:()=>A.ViTMSNPreTrainedModel,ViTModel:()=>A.ViTModel,ViTPreTrainedModel:()=>A.ViTPreTrainedModel,VisionEncoderDecoderModel:()=>A.VisionEncoderDecoderModel,VitMatteForImageMatting:()=>A.VitMatteForImageMatting,VitMatteImageProcessor:()=>J.VitMatteImageProcessor,VitMattePreTrainedModel:()=>A.VitMattePreTrainedModel,VitPoseForPoseEstimation:()=>A.VitPoseForPoseEstimation,VitPoseImageProcessor:()=>J.VitPoseImageProcessor,VitPosePreTrainedModel:()=>A.VitPosePreTrainedModel,VitsModel:()=>A.VitsModel,VitsModelOutput:()=>A.VitsModelOutput,VitsPreTrainedModel:()=>A.VitsPreTrainedModel,VitsTokenizer:()=>w.VitsTokenizer,Wav2Vec2BertForCTC:()=>A.Wav2Vec2BertForCTC,Wav2Vec2BertForSequenceClassification:()=>A.Wav2Vec2BertForSequenceClassification,Wav2Vec2BertModel:()=>A.Wav2Vec2BertModel,Wav2Vec2BertPreTrainedModel:()=>A.Wav2Vec2BertPreTrainedModel,Wav2Vec2CTCTokenizer:()=>w.Wav2Vec2CTCTokenizer,Wav2Vec2FeatureExtractor:()=>D.Wav2Vec2FeatureExtractor,Wav2Vec2ForAudioFrameClassification:()=>A.Wav2Vec2ForAudioFrameClassification,Wav2Vec2ForCTC:()=>A.Wav2Vec2ForCTC,Wav2Vec2ForSequenceClassification:()=>A.Wav2Vec2ForSequenceClassification,Wav2Vec2Model:()=>A.Wav2Vec2Model,Wav2Vec2PreTrainedModel:()=>A.Wav2Vec2PreTrainedModel,Wav2Vec2Processor:()=>Ie.Wav2Vec2Processor,Wav2Vec2ProcessorWithLM:()=>Ie.Wav2Vec2ProcessorWithLM,WavLMForAudioFrameClassification:()=>A.WavLMForAudioFrameClassification,WavLMForCTC:()=>A.WavLMForCTC,WavLMForSequenceClassification:()=>A.WavLMForSequenceClassification,WavLMForXVector:()=>A.WavLMForXVector,WavLMModel:()=>A.WavLMModel,WavLMPreTrainedModel:()=>A.WavLMPreTrainedModel,WeSpeakerFeatureExtractor:()=>D.WeSpeakerFeatureExtractor,WeSpeakerResNetModel:()=>A.WeSpeakerResNetModel,WeSpeakerResNetPreTrainedModel:()=>A.WeSpeakerResNetPreTrainedModel,WhisperFeatureExtractor:()=>D.WhisperFeatureExtractor,WhisperForConditionalGeneration:()=>A.WhisperForConditionalGeneration,WhisperModel:()=>A.WhisperModel,WhisperPreTrainedModel:()=>A.WhisperPreTrainedModel,WhisperProcessor:()=>Ie.WhisperProcessor,WhisperTextStreamer:()=>re.WhisperTextStreamer,WhisperTimeStampLogitsProcessor:()=>g.WhisperTimeStampLogitsProcessor,WhisperTokenizer:()=>w.WhisperTokenizer,XLMForQuestionAnswering:()=>A.XLMForQuestionAnswering,XLMForSequenceClassification:()=>A.XLMForSequenceClassification,XLMForTokenClassification:()=>A.XLMForTokenClassification,XLMModel:()=>A.XLMModel,XLMPreTrainedModel:()=>A.XLMPreTrainedModel,XLMRobertaForMaskedLM:()=>A.XLMRobertaForMaskedLM,XLMRobertaForQuestionAnswering:()=>A.XLMRobertaForQuestionAnswering,XLMRobertaForSequenceClassification:()=>A.XLMRobertaForSequenceClassification,XLMRobertaForTokenClassification:()=>A.XLMRobertaForTokenClassification,XLMRobertaModel:()=>A.XLMRobertaModel,XLMRobertaPreTrainedModel:()=>A.XLMRobertaPreTrainedModel,XLMRobertaTokenizer:()=>w.XLMRobertaTokenizer,XLMTokenizer:()=>w.XLMTokenizer,XLMWithLMHeadModel:()=>A.XLMWithLMHeadModel,XVectorOutput:()=>A.XVectorOutput,YolosFeatureExtractor:()=>J.YolosFeatureExtractor,YolosForObjectDetection:()=>A.YolosForObjectDetection,YolosImageProcessor:()=>J.YolosImageProcessor,YolosModel:()=>A.YolosModel,YolosObjectDetectionOutput:()=>A.YolosObjectDetectionOutput,YolosPreTrainedModel:()=>A.YolosPreTrainedModel,ZeroShotAudioClassificationPipeline:()=>k.ZeroShotAudioClassificationPipeline,ZeroShotClassificationPipeline:()=>k.ZeroShotClassificationPipeline,ZeroShotImageClassificationPipeline:()=>k.ZeroShotImageClassificationPipeline,ZeroShotObjectDetectionPipeline:()=>k.ZeroShotObjectDetectionPipeline,bankers_round:()=>z.bankers_round,cat:()=>H.cat,cos_sim:()=>z.cos_sim,dot:()=>z.dot,dynamic_time_warping:()=>z.dynamic_time_warping,env:()=>T.env,full:()=>H.full,full_like:()=>H.full_like,getKeyValueShapes:()=>F.getKeyValueShapes,hamming:()=>Y.hamming,hanning:()=>Y.hanning,interpolate:()=>H.interpolate,interpolate_4d:()=>H.interpolate_4d,interpolate_data:()=>z.interpolate_data,is_chinese_char:()=>w.is_chinese_char,layer_norm:()=>H.layer_norm,load_image:()=>U.load_image,log_softmax:()=>z.log_softmax,magnitude:()=>z.magnitude,matmul:()=>H.matmul,max:()=>z.max,mean:()=>H.mean,mean_pooling:()=>H.mean_pooling,medianFilter:()=>z.medianFilter,mel_filter_bank:()=>Y.mel_filter_bank,min:()=>z.min,ones:()=>H.ones,ones_like:()=>H.ones_like,permute:()=>H.permute,permute_data:()=>z.permute_data,pipeline:()=>k.pipeline,quantize_embeddings:()=>H.quantize_embeddings,rand:()=>H.rand,read_audio:()=>Y.read_audio,rfft:()=>H.rfft,round:()=>z.round,slice:()=>H.slice,softmax:()=>z.softmax,spectrogram:()=>Y.spectrogram,stack:()=>H.stack,std_mean:()=>H.std_mean,topk:()=>H.topk,window_function:()=>Y.window_function,zeros:()=>H.zeros,zeros_like:()=>H.zeros_like});var T=Qa("./src/env.js"),k=Qa("./src/pipelines.js"),A=Qa("./src/models.js"),w=Qa("./src/tokenizers.js"),F=Qa("./src/configs.js"),Y=Qa("./src/utils/audio.js"),U=Qa("./src/utils/image.js"),H=Qa("./src/utils/tensor.js"),z=Qa("./src/utils/maths.js"),N=Qa("./src/base/feature_extraction_utils.js"),D=Qa("./src/models/feature_extractors.js"),R=Qa("./src/models/auto/feature_extraction_auto.js"),Q=Qa("./src/base/image_processors_utils.js"),J=Qa("./src/models/image_processors.js"),oe=Qa("./src/models/auto/image_processing_auto.js"),be=Qa("./src/base/processing_utils.js"),Ie=Qa("./src/models/processors.js"),ee=Qa("./src/models/auto/processing_auto.js"),re=Qa("./src/generation/streamers.js"),ce=Qa("./src/generation/stopping_criteria.js"),g=Qa("./src/generation/logits_process.js")})();se.ASTFeatureExtractor;se.ASTForAudioClassification;se.ASTModel;se.ASTPreTrainedModel;se.AlbertForMaskedLM;se.AlbertForQuestionAnswering;se.AlbertForSequenceClassification;se.AlbertModel;se.AlbertPreTrainedModel;se.AlbertTokenizer;se.AudioClassificationPipeline;se.AutoConfig;se.AutoFeatureExtractor;se.AutoImageProcessor;se.AutoModel;se.AutoModelForAudioClassification;se.AutoModelForAudioFrameClassification;se.AutoModelForCTC;se.AutoModelForCausalLM;se.AutoModelForDepthEstimation;se.AutoModelForDocumentQuestionAnswering;se.AutoModelForImageClassification;se.AutoModelForImageFeatureExtraction;se.AutoModelForImageMatting;se.AutoModelForImageSegmentation;se.AutoModelForImageToImage;se.AutoModelForMaskGeneration;se.AutoModelForMaskedLM;se.AutoModelForNormalEstimation;se.AutoModelForObjectDetection;se.AutoModelForPoseEstimation;se.AutoModelForQuestionAnswering;se.AutoModelForSemanticSegmentation;se.AutoModelForSeq2SeqLM;se.AutoModelForSequenceClassification;se.AutoModelForSpeechSeq2Seq;se.AutoModelForTextToSpectrogram;se.AutoModelForTextToWaveform;se.AutoModelForTokenClassification;se.AutoModelForUniversalSegmentation;se.AutoModelForVision2Seq;se.AutoModelForXVector;se.AutoModelForZeroShotObjectDetection;se.AutoProcessor;se.AutoTokenizer;se.AutomaticSpeechRecognitionPipeline;se.BartForConditionalGeneration;se.BartForSequenceClassification;se.BartModel;se.BartPretrainedModel;se.BartTokenizer;se.BaseModelOutput;se.BaseStreamer;se.BeitFeatureExtractor;se.BeitForImageClassification;se.BeitModel;se.BeitPreTrainedModel;se.BertForMaskedLM;se.BertForQuestionAnswering;se.BertForSequenceClassification;se.BertForTokenClassification;se.BertModel;se.BertPreTrainedModel;se.BertTokenizer;se.BitImageProcessor;se.BlenderbotForConditionalGeneration;se.BlenderbotModel;se.BlenderbotPreTrainedModel;se.BlenderbotSmallForConditionalGeneration;se.BlenderbotSmallModel;se.BlenderbotSmallPreTrainedModel;se.BlenderbotSmallTokenizer;se.BlenderbotTokenizer;se.BloomForCausalLM;se.BloomModel;se.BloomPreTrainedModel;se.BloomTokenizer;se.CLIPFeatureExtractor;se.CLIPImageProcessor;se.CLIPModel;se.CLIPPreTrainedModel;se.CLIPSegForImageSegmentation;se.CLIPSegModel;se.CLIPSegPreTrainedModel;se.CLIPTextModel;se.CLIPTextModelWithProjection;se.CLIPTokenizer;se.CLIPVisionModel;se.CLIPVisionModelWithProjection;se.CamembertForMaskedLM;se.CamembertForQuestionAnswering;se.CamembertForSequenceClassification;se.CamembertForTokenClassification;se.CamembertModel;se.CamembertPreTrainedModel;se.CamembertTokenizer;se.CausalLMOutput;se.CausalLMOutputWithPast;se.ChineseCLIPFeatureExtractor;se.ChineseCLIPModel;se.ChineseCLIPPreTrainedModel;se.ClapAudioModelWithProjection;se.ClapFeatureExtractor;se.ClapModel;se.ClapPreTrainedModel;se.ClapTextModelWithProjection;se.ClassifierFreeGuidanceLogitsProcessor;se.CodeGenForCausalLM;se.CodeGenModel;se.CodeGenPreTrainedModel;se.CodeGenTokenizer;se.CodeLlamaTokenizer;se.CohereForCausalLM;se.CohereModel;se.CoherePreTrainedModel;se.CohereTokenizer;se.ConvBertForMaskedLM;se.ConvBertForQuestionAnswering;se.ConvBertForSequenceClassification;se.ConvBertForTokenClassification;se.ConvBertModel;se.ConvBertPreTrainedModel;se.ConvBertTokenizer;se.ConvNextFeatureExtractor;se.ConvNextForImageClassification;se.ConvNextImageProcessor;se.ConvNextModel;se.ConvNextPreTrainedModel;se.ConvNextV2ForImageClassification;se.ConvNextV2Model;se.ConvNextV2PreTrainedModel;se.DPTFeatureExtractor;se.DPTForDepthEstimation;se.DPTImageProcessor;se.DPTModel;se.DPTPreTrainedModel;se.DebertaForMaskedLM;se.DebertaForQuestionAnswering;se.DebertaForSequenceClassification;se.DebertaForTokenClassification;se.DebertaModel;se.DebertaPreTrainedModel;se.DebertaTokenizer;se.DebertaV2ForMaskedLM;se.DebertaV2ForQuestionAnswering;se.DebertaV2ForSequenceClassification;se.DebertaV2ForTokenClassification;se.DebertaV2Model;se.DebertaV2PreTrainedModel;se.DebertaV2Tokenizer;se.DecisionTransformerModel;se.DecisionTransformerPreTrainedModel;se.DeiTFeatureExtractor;se.DeiTForImageClassification;se.DeiTImageProcessor;se.DeiTModel;se.DeiTPreTrainedModel;se.DepthAnythingForDepthEstimation;se.DepthAnythingPreTrainedModel;se.DepthEstimationPipeline;se.DepthProForDepthEstimation;se.DepthProPreTrainedModel;se.DetrFeatureExtractor;se.DetrForObjectDetection;se.DetrForSegmentation;se.DetrImageProcessor;se.DetrModel;se.DetrObjectDetectionOutput;se.DetrPreTrainedModel;se.DetrSegmentationOutput;se.Dinov2ForImageClassification;se.Dinov2Model;se.Dinov2PreTrainedModel;se.Dinov2WithRegistersForImageClassification;se.Dinov2WithRegistersModel;se.Dinov2WithRegistersPreTrainedModel;se.DistilBertForMaskedLM;se.DistilBertForQuestionAnswering;se.DistilBertForSequenceClassification;se.DistilBertForTokenClassification;se.DistilBertModel;se.DistilBertPreTrainedModel;se.DistilBertTokenizer;se.DocumentQuestionAnsweringPipeline;se.DonutFeatureExtractor;se.DonutImageProcessor;se.DonutSwinModel;se.DonutSwinPreTrainedModel;se.EfficientNetForImageClassification;se.EfficientNetImageProcessor;se.EfficientNetModel;se.EfficientNetPreTrainedModel;se.ElectraForMaskedLM;se.ElectraForQuestionAnswering;se.ElectraForSequenceClassification;se.ElectraForTokenClassification;se.ElectraModel;se.ElectraPreTrainedModel;se.ElectraTokenizer;se.EosTokenCriteria;se.EsmForMaskedLM;se.EsmForSequenceClassification;se.EsmForTokenClassification;se.EsmModel;se.EsmPreTrainedModel;se.EsmTokenizer;se.ExaoneForCausalLM;se.ExaoneModel;se.ExaonePreTrainedModel;se.FFT;se.FalconForCausalLM;se.FalconModel;se.FalconPreTrainedModel;se.FalconTokenizer;se.FastViTForImageClassification;se.FastViTModel;se.FastViTPreTrainedModel;se.FeatureExtractionPipeline;se.FeatureExtractor;se.FillMaskPipeline;se.Florence2ForConditionalGeneration;se.Florence2PreTrainedModel;se.Florence2Processor;se.ForcedBOSTokenLogitsProcessor;se.ForcedEOSTokenLogitsProcessor;se.GLPNFeatureExtractor;se.GLPNForDepthEstimation;se.GLPNModel;se.GLPNPreTrainedModel;se.GPT2LMHeadModel;se.GPT2Model;se.GPT2PreTrainedModel;se.GPT2Tokenizer;se.GPTBigCodeForCausalLM;se.GPTBigCodeModel;se.GPTBigCodePreTrainedModel;se.GPTJForCausalLM;se.GPTJModel;se.GPTJPreTrainedModel;se.GPTNeoForCausalLM;se.GPTNeoModel;se.GPTNeoPreTrainedModel;se.GPTNeoXForCausalLM;se.GPTNeoXModel;se.GPTNeoXPreTrainedModel;se.GPTNeoXTokenizer;se.Gemma2ForCausalLM;se.Gemma2Model;se.Gemma2PreTrainedModel;se.GemmaForCausalLM;se.GemmaModel;se.GemmaPreTrainedModel;se.GemmaTokenizer;se.GlmForCausalLM;se.GlmModel;se.GlmPreTrainedModel;se.GraniteForCausalLM;se.GraniteModel;se.GranitePreTrainedModel;se.Grok1Tokenizer;se.GroundingDinoForObjectDetection;se.GroundingDinoImageProcessor;se.GroundingDinoPreTrainedModel;se.GroundingDinoProcessor;se.GroupViTModel;se.GroupViTPreTrainedModel;se.HeliumForCausalLM;se.HeliumModel;se.HeliumPreTrainedModel;se.HerbertTokenizer;se.HieraForImageClassification;se.HieraModel;se.HieraPreTrainedModel;se.HubertForCTC;se.HubertForSequenceClassification;se.HubertModel;se.HubertPreTrainedModel;se.IJepaForImageClassification;se.IJepaModel;se.IJepaPreTrainedModel;se.Idefics3ForConditionalGeneration;se.Idefics3ImageProcessor;se.Idefics3PreTrainedModel;se.Idefics3Processor;se.ImageClassificationPipeline;se.ImageFeatureExtractionPipeline;se.ImageFeatureExtractor;se.ImageMattingOutput;se.ImageProcessor;se.ImageSegmentationPipeline;se.ImageToImagePipeline;se.ImageToTextPipeline;se.InterruptableStoppingCriteria;se.JAISLMHeadModel;se.JAISModel;se.JAISPreTrainedModel;se.JinaCLIPImageProcessor;se.JinaCLIPModel;se.JinaCLIPPreTrainedModel;se.JinaCLIPProcessor;se.JinaCLIPTextModel;se.JinaCLIPVisionModel;se.LlamaForCausalLM;se.LlamaModel;se.LlamaPreTrainedModel;se.LlamaTokenizer;se.LlavaForConditionalGeneration;se.LlavaOnevisionForConditionalGeneration;se.LlavaOnevisionImageProcessor;se.LlavaPreTrainedModel;se.LogitsProcessor;se.LogitsProcessorList;se.LogitsWarper;se.LongT5ForConditionalGeneration;se.LongT5Model;se.LongT5PreTrainedModel;se.M2M100ForConditionalGeneration;se.M2M100Model;se.M2M100PreTrainedModel;se.M2M100Tokenizer;se.MBart50Tokenizer;se.MBartForCausalLM;se.MBartForConditionalGeneration;se.MBartForSequenceClassification;se.MBartModel;se.MBartPreTrainedModel;se.MBartTokenizer;se.MPNetForMaskedLM;se.MPNetForQuestionAnswering;se.MPNetForSequenceClassification;se.MPNetForTokenClassification;se.MPNetModel;se.MPNetPreTrainedModel;se.MPNetTokenizer;se.MT5ForConditionalGeneration;se.MT5Model;se.MT5PreTrainedModel;se.MarianMTModel;se.MarianModel;se.MarianPreTrainedModel;se.MarianTokenizer;se.Mask2FormerImageProcessor;se.MaskFormerFeatureExtractor;se.MaskFormerForInstanceSegmentation;se.MaskFormerImageProcessor;se.MaskFormerModel;se.MaskFormerPreTrainedModel;se.MaskedLMOutput;se.MaxLengthCriteria;se.MgpstrForSceneTextRecognition;se.MgpstrModelOutput;se.MgpstrPreTrainedModel;se.MgpstrProcessor;se.MgpstrTokenizer;se.MinLengthLogitsProcessor;se.MinNewTokensLengthLogitsProcessor;se.MistralForCausalLM;se.MistralModel;se.MistralPreTrainedModel;se.MobileBertForMaskedLM;se.MobileBertForQuestionAnswering;se.MobileBertForSequenceClassification;se.MobileBertModel;se.MobileBertPreTrainedModel;se.MobileBertTokenizer;se.MobileLLMForCausalLM;se.MobileLLMModel;se.MobileLLMPreTrainedModel;se.MobileNetV1FeatureExtractor;se.MobileNetV1ForImageClassification;se.MobileNetV1ImageProcessor;se.MobileNetV1Model;se.MobileNetV1PreTrainedModel;se.MobileNetV2FeatureExtractor;se.MobileNetV2ForImageClassification;se.MobileNetV2ImageProcessor;se.MobileNetV2Model;se.MobileNetV2PreTrainedModel;se.MobileNetV3FeatureExtractor;se.MobileNetV3ForImageClassification;se.MobileNetV3ImageProcessor;se.MobileNetV3Model;se.MobileNetV3PreTrainedModel;se.MobileNetV4FeatureExtractor;se.MobileNetV4ForImageClassification;se.MobileNetV4ImageProcessor;se.MobileNetV4Model;se.MobileNetV4PreTrainedModel;se.MobileViTFeatureExtractor;se.MobileViTForImageClassification;se.MobileViTImageProcessor;se.MobileViTModel;se.MobileViTPreTrainedModel;se.MobileViTV2ForImageClassification;se.MobileViTV2Model;se.MobileViTV2PreTrainedModel;se.ModelOutput;se.ModernBertForMaskedLM;se.ModernBertForSequenceClassification;se.ModernBertForTokenClassification;se.ModernBertModel;se.ModernBertPreTrainedModel;se.Moondream1ForConditionalGeneration;se.MoonshineFeatureExtractor;se.MoonshineForConditionalGeneration;se.MoonshineModel;se.MoonshinePreTrainedModel;se.MoonshineProcessor;se.MptForCausalLM;se.MptModel;se.MptPreTrainedModel;se.MultiModalityCausalLM;se.MultiModalityPreTrainedModel;se.MusicgenForCausalLM;se.MusicgenForConditionalGeneration;se.MusicgenModel;se.MusicgenPreTrainedModel;se.NllbTokenizer;se.NoBadWordsLogitsProcessor;se.NoRepeatNGramLogitsProcessor;se.NomicBertModel;se.NomicBertPreTrainedModel;se.NougatImageProcessor;se.NougatTokenizer;se.OPTForCausalLM;se.OPTModel;se.OPTPreTrainedModel;se.ObjectDetectionPipeline;se.Olmo2ForCausalLM;se.Olmo2Model;se.Olmo2PreTrainedModel;se.OlmoForCausalLM;se.OlmoModel;se.OlmoPreTrainedModel;se.OpenELMForCausalLM;se.OpenELMModel;se.OpenELMPreTrainedModel;se.OwlViTFeatureExtractor;se.OwlViTForObjectDetection;se.OwlViTImageProcessor;se.OwlViTModel;se.OwlViTPreTrainedModel;se.OwlViTProcessor;se.Owlv2ForObjectDetection;se.Owlv2ImageProcessor;se.Owlv2Model;se.Owlv2PreTrainedModel;se.PaliGemmaForConditionalGeneration;se.PaliGemmaPreTrainedModel;se.PaliGemmaProcessor;se.PatchTSMixerForPrediction;se.PatchTSMixerModel;se.PatchTSMixerPreTrainedModel;se.PatchTSTForPrediction;se.PatchTSTModel;se.PatchTSTPreTrainedModel;se.Phi3ForCausalLM;se.Phi3Model;se.Phi3PreTrainedModel;se.Phi3VForCausalLM;se.Phi3VImageProcessor;se.Phi3VPreTrainedModel;se.Phi3VProcessor;se.PhiForCausalLM;se.PhiModel;se.PhiPreTrainedModel;se.Pipeline;se.PreTrainedModel;se.PreTrainedTokenizer;se.PretrainedConfig;se.PretrainedMixin;se.Processor;se.PvtForImageClassification;se.PvtImageProcessor;se.PvtModel;se.PvtPreTrainedModel;se.PyAnnoteFeatureExtractor;se.PyAnnoteForAudioFrameClassification;se.PyAnnoteModel;se.PyAnnotePreTrainedModel;se.PyAnnoteProcessor;se.QuestionAnsweringModelOutput;se.QuestionAnsweringPipeline;se.Qwen2ForCausalLM;se.Qwen2Model;se.Qwen2PreTrainedModel;se.Qwen2Tokenizer;se.Qwen2VLForConditionalGeneration;se.Qwen2VLImageProcessor;se.Qwen2VLPreTrainedModel;se.Qwen2VLProcessor;se.RTDetrForObjectDetection;se.RTDetrImageProcessor;se.RTDetrModel;se.RTDetrObjectDetectionOutput;se.RTDetrPreTrainedModel;se.RawAudio;se.RawImage;se.RepetitionPenaltyLogitsProcessor;se.ResNetForImageClassification;se.ResNetModel;se.ResNetPreTrainedModel;se.RoFormerForMaskedLM;se.RoFormerForQuestionAnswering;se.RoFormerForSequenceClassification;se.RoFormerForTokenClassification;se.RoFormerModel;se.RoFormerPreTrainedModel;se.RoFormerTokenizer;se.RobertaForMaskedLM;se.RobertaForQuestionAnswering;se.RobertaForSequenceClassification;se.RobertaForTokenClassification;se.RobertaModel;se.RobertaPreTrainedModel;se.RobertaTokenizer;se.SamImageProcessor;se.SamImageSegmentationOutput;se.SamModel;se.SamPreTrainedModel;se.SamProcessor;se.SapiensForDepthEstimation;se.SapiensForNormalEstimation;se.SapiensForSemanticSegmentation;se.SapiensPreTrainedModel;se.SeamlessM4TFeatureExtractor;se.SegformerFeatureExtractor;se.SegformerForImageClassification;se.SegformerForSemanticSegmentation;se.SegformerImageProcessor;se.SegformerModel;se.SegformerPreTrainedModel;se.Seq2SeqLMOutput;se.SequenceClassifierOutput;se.SiglipImageProcessor;se.SiglipModel;se.SiglipPreTrainedModel;se.SiglipTextModel;se.SiglipTokenizer;se.SiglipVisionModel;se.SpeechT5FeatureExtractor;se.SpeechT5ForSpeechToText;se.SpeechT5ForTextToSpeech;se.SpeechT5HifiGan;se.SpeechT5Model;se.SpeechT5PreTrainedModel;se.SpeechT5Processor;se.SpeechT5Tokenizer;se.SqueezeBertForMaskedLM;se.SqueezeBertForQuestionAnswering;se.SqueezeBertForSequenceClassification;se.SqueezeBertModel;se.SqueezeBertPreTrainedModel;se.SqueezeBertTokenizer;se.StableLmForCausalLM;se.StableLmModel;se.StableLmPreTrainedModel;se.Starcoder2ForCausalLM;se.Starcoder2Model;se.Starcoder2PreTrainedModel;se.StoppingCriteria;se.StoppingCriteriaList;se.StyleTextToSpeech2Model;se.StyleTextToSpeech2PreTrainedModel;se.SummarizationPipeline;se.SuppressTokensAtBeginLogitsProcessor;se.Swin2SRForImageSuperResolution;se.Swin2SRImageProcessor;se.Swin2SRModel;se.Swin2SRPreTrainedModel;se.SwinForImageClassification;se.SwinModel;se.SwinPreTrainedModel;se.T5ForConditionalGeneration;se.T5Model;se.T5PreTrainedModel;se.T5Tokenizer;se.TableTransformerForObjectDetection;se.TableTransformerModel;se.TableTransformerObjectDetectionOutput;se.TableTransformerPreTrainedModel;se.TemperatureLogitsWarper;se.Tensor;se.Text2TextGenerationPipeline;se.TextClassificationPipeline;se.TextGenerationPipeline;se.TextStreamer;se.TextToAudioPipeline;se.TokenClassificationPipeline;se.TokenClassifierOutput;se.TokenizerModel;se.TopKLogitsWarper;se.TopPLogitsWarper;se.TrOCRForCausalLM;se.TrOCRPreTrainedModel;se.TranslationPipeline;se.UniSpeechForCTC;se.UniSpeechForSequenceClassification;se.UniSpeechModel;se.UniSpeechPreTrainedModel;se.UniSpeechSatForAudioFrameClassification;se.UniSpeechSatForCTC;se.UniSpeechSatForSequenceClassification;se.UniSpeechSatModel;se.UniSpeechSatPreTrainedModel;se.VLChatProcessor;se.VLMImageProcessor;se.ViTFeatureExtractor;se.ViTForImageClassification;se.ViTImageProcessor;se.ViTMAEModel;se.ViTMAEPreTrainedModel;se.ViTMSNForImageClassification;se.ViTMSNModel;se.ViTMSNPreTrainedModel;se.ViTModel;se.ViTPreTrainedModel;se.VisionEncoderDecoderModel;se.VitMatteForImageMatting;se.VitMatteImageProcessor;se.VitMattePreTrainedModel;se.VitPoseForPoseEstimation;se.VitPoseImageProcessor;se.VitPosePreTrainedModel;se.VitsModel;se.VitsModelOutput;se.VitsPreTrainedModel;se.VitsTokenizer;se.Wav2Vec2BertForCTC;se.Wav2Vec2BertForSequenceClassification;se.Wav2Vec2BertModel;se.Wav2Vec2BertPreTrainedModel;se.Wav2Vec2CTCTokenizer;se.Wav2Vec2FeatureExtractor;se.Wav2Vec2ForAudioFrameClassification;se.Wav2Vec2ForCTC;se.Wav2Vec2ForSequenceClassification;se.Wav2Vec2Model;se.Wav2Vec2PreTrainedModel;se.Wav2Vec2Processor;se.Wav2Vec2ProcessorWithLM;se.WavLMForAudioFrameClassification;se.WavLMForCTC;se.WavLMForSequenceClassification;se.WavLMForXVector;se.WavLMModel;se.WavLMPreTrainedModel;se.WeSpeakerFeatureExtractor;se.WeSpeakerResNetModel;se.WeSpeakerResNetPreTrainedModel;se.WhisperFeatureExtractor;se.WhisperForConditionalGeneration;se.WhisperModel;se.WhisperPreTrainedModel;se.WhisperProcessor;se.WhisperTextStreamer;se.WhisperTimeStampLogitsProcessor;se.WhisperTokenizer;se.XLMForQuestionAnswering;se.XLMForSequenceClassification;se.XLMForTokenClassification;se.XLMModel;se.XLMPreTrainedModel;se.XLMRobertaForMaskedLM;se.XLMRobertaForQuestionAnswering;se.XLMRobertaForSequenceClassification;se.XLMRobertaForTokenClassification;se.XLMRobertaModel;se.XLMRobertaPreTrainedModel;se.XLMRobertaTokenizer;se.XLMTokenizer;se.XLMWithLMHeadModel;se.XVectorOutput;se.YolosFeatureExtractor;se.YolosForObjectDetection;se.YolosImageProcessor;se.YolosModel;se.YolosObjectDetectionOutput;se.YolosPreTrainedModel;se.ZeroShotAudioClassificationPipeline;se.ZeroShotClassificationPipeline;se.ZeroShotImageClassificationPipeline;se.ZeroShotObjectDetectionPipeline;se.bankers_round;se.cat;se.cos_sim;se.dot;se.dynamic_time_warping;var J1=se.env;se.full;se.full_like;se.getKeyValueShapes;se.hamming;se.hanning;se.interpolate;se.interpolate_4d;se.interpolate_data;se.is_chinese_char;se.layer_norm;se.load_image;se.log_softmax;se.magnitude;se.matmul;se.max;se.mean;se.mean_pooling;se.medianFilter;se.mel_filter_bank;se.min;se.ones;se.ones_like;se.permute;se.permute_data;se.pipeline;se.quantize_embeddings;se.rand;se.read_audio;se.rfft;se.round;se.slice;se.softmax;se.spectrogram;se.stack;se.std_mean;se.topk;se.window_function;se.zeros;se.zeros_like;var dd={},Ap,_2,Gp={"./node_modules/onnxruntime-web/dist/ort-wasm-simd-threaded.jsep.wasm":(T,k,A)=>{T.exports=A.p+"ort-wasm-simd-threaded.jsep.wasm"},"./node_modules/onnxruntime-web/dist/ort.bundle.min.mjs?46eb":(T,k,A)=>{T.exports=A.p+"ort.bundle.min.mjs"},"?2ce3":()=>{},"?7a2c":()=>{},"?a42a":()=>{},"?2b25":()=>{},"?569f":()=>{},"?3f59":()=>{},"?154a":()=>{},"./node_modules/@huggingface/jinja/dist/index.js":(T,k,A)=>{A.r(k),A.d(k,{Environment:()=>Tt,Interpreter:()=>zt,Template:()=>Ut,parse:()=>ze,tokenize:()=>D});var w=Object.freeze({Text:"Text",NumericLiteral:"NumericLiteral",BooleanLiteral:"BooleanLiteral",NullLiteral:"NullLiteral",StringLiteral:"StringLiteral",Identifier:"Identifier",Equals:"Equals",OpenParen:"OpenParen",CloseParen:"CloseParen",OpenStatement:"OpenStatement",CloseStatement:"CloseStatement",OpenExpression:"OpenExpression",CloseExpression:"CloseExpression",OpenSquareBracket:"OpenSquareBracket",CloseSquareBracket:"CloseSquareBracket",OpenCurlyBracket:"OpenCurlyBracket",CloseCurlyBracket:"CloseCurlyBracket",Comma:"Comma",Dot:"Dot",Colon:"Colon",Pipe:"Pipe",CallOperator:"CallOperator",AdditiveBinaryOperator:"AdditiveBinaryOperator",MultiplicativeBinaryOperator:"MultiplicativeBinaryOperator",ComparisonBinaryOperator:"ComparisonBinaryOperator",UnaryOperator:"UnaryOperator",Set:"Set",If:"If",For:"For",In:"In",Is:"Is",NotIn:"NotIn",Else:"Else",EndIf:"EndIf",ElseIf:"ElseIf",EndFor:"EndFor",And:"And",Or:"Or",Not:"UnaryOperator",Macro:"Macro",EndMacro:"EndMacro"}),F=Object.freeze({set:w.Set,for:w.For,in:w.In,is:w.Is,if:w.If,else:w.Else,endif:w.EndIf,elif:w.ElseIf,endfor:w.EndFor,and:w.And,or:w.Or,not:w.Not,"not in":w.NotIn,macro:w.Macro,endmacro:w.EndMacro,true:w.BooleanLiteral,false:w.BooleanLiteral,none:w.NullLiteral,True:w.BooleanLiteral,False:w.BooleanLiteral,None:w.NullLiteral}),Y=class{constructor(Pe,X){this.value=Pe,this.type=X}};function U(Pe){return/\w/.test(Pe)}function H(Pe){return/[0-9]/.test(Pe)}var z=[["{%",w.OpenStatement],["%}",w.CloseStatement],["{{",w.OpenExpression],["}}",w.CloseExpression],["(",w.OpenParen],[")",w.CloseParen],["{",w.OpenCurlyBracket],["}",w.CloseCurlyBracket],["[",w.OpenSquareBracket],["]",w.CloseSquareBracket],[",",w.Comma],[".",w.Dot],[":",w.Colon],["|",w.Pipe],["<=",w.ComparisonBinaryOperator],[">=",w.ComparisonBinaryOperator],["==",w.ComparisonBinaryOperator],["!=",w.ComparisonBinaryOperator],["<",w.ComparisonBinaryOperator],[">",w.ComparisonBinaryOperator],["+",w.AdditiveBinaryOperator],["-",w.AdditiveBinaryOperator],["*",w.MultiplicativeBinaryOperator],["/",w.MultiplicativeBinaryOperator],["%",w.MultiplicativeBinaryOperator],["=",w.Equals]],N=new Map([["n",`
`],["t","	"],["r","\r"],["b","\b"],["f","\f"],["v","\v"],["'","'"],['"','"'],["\\","\\"]]);function D(Pe,X={}){var kt,Dt,Ht;const ge=[],fe=function(Vt,sr={}){return Vt.endsWith(`
`)&&(Vt=Vt.slice(0,-1)),Vt=Vt.replace(/{#.*?#}/gs,"{##}"),sr.lstrip_blocks&&(Vt=Vt.replace(/^[ \t]*({[#%])/gm,"$1")),sr.trim_blocks&&(Vt=Vt.replace(/([#%]})\n/g,"$1")),Vt.replace(/{##}/g,"").replace(/-%}\s*/g,"%}").replace(/\s*{%-/g,"{%").replace(/-}}\s*/g,"}}").replace(/\s*{{-/g,"{{")}(Pe,X);let He=0;const ct=Vt=>{let sr="";for(;Vt(fe[He]);)if(fe[He]!=="\\"){if(sr+=fe[He++],He>=fe.length)throw new SyntaxError("Unexpected end of input")}else{if(++He,He>=fe.length)throw new SyntaxError("Unexpected end of input");const nr=fe[He++],lr=N.get(nr);if(lr===void 0)throw new SyntaxError(`Unexpected escaped character: ${nr}`);sr+=lr}return sr};e:for(;He<fe.length;){const Vt=(kt=ge.at(-1))==null?void 0:kt.type;if(Vt===void 0||Vt===w.CloseStatement||Vt===w.CloseExpression){let nr="";for(;He<fe.length&&(fe[He]!=="{"||fe[He+1]!=="%"&&fe[He+1]!=="{");)nr+=fe[He++];if(nr.length>0){ge.push(new Y(nr,w.Text));continue}}ct(nr=>/\s/.test(nr));const sr=fe[He];if(sr==="-"||sr==="+"){const nr=(Dt=ge.at(-1))==null?void 0:Dt.type;if(nr===w.Text||nr===void 0)throw new SyntaxError(`Unexpected character: ${sr}`);switch(nr){case w.Identifier:case w.NumericLiteral:case w.BooleanLiteral:case w.NullLiteral:case w.StringLiteral:case w.CloseParen:case w.CloseSquareBracket:break;default:{++He;const lr=ct(H);ge.push(new Y(`${sr}${lr}`,lr.length>0?w.NumericLiteral:w.UnaryOperator));continue}}}for(const[nr,lr]of z)if(fe.slice(He,He+nr.length)===nr){ge.push(new Y(nr,lr)),He+=nr.length;continue e}if(sr!=="'"&&sr!=='"')if(H(sr)){const nr=ct(H);ge.push(new Y(nr,w.NumericLiteral))}else{if(!U(sr))throw new SyntaxError(`Unexpected character: ${sr}`);{const nr=ct(U),lr=Object.hasOwn(F,nr)?F[nr]:w.Identifier;lr===w.In&&((Ht=ge.at(-1))==null?void 0:Ht.type)===w.Not?(ge.pop(),ge.push(new Y("not in",w.NotIn))):ge.push(new Y(nr,lr))}}else{++He;const nr=ct(lr=>lr!==sr);ge.push(new Y(nr,w.StringLiteral)),++He}}return ge}var R=class{constructor(){We(this,"type","Statement")}},Q=class extends R{constructor(X){super();We(this,"type","Program");this.body=X}},J=class extends R{constructor(X,ge,fe){super();We(this,"type","If");this.test=X,this.body=ge,this.alternate=fe}},oe=class extends R{constructor(X,ge,fe,He){super();We(this,"type","For");this.loopvar=X,this.iterable=ge,this.body=fe,this.defaultBlock=He}},be=class extends R{constructor(X,ge){super();We(this,"type","Set");this.assignee=X,this.value=ge}},Ie=class extends R{constructor(X,ge,fe){super();We(this,"type","Macro");this.name=X,this.args=ge,this.body=fe}},ee=class extends R{constructor(){super(...arguments);We(this,"type","Expression")}},re=class extends ee{constructor(X,ge,fe){super();We(this,"type","MemberExpression");this.object=X,this.property=ge,this.computed=fe}},ce=class extends ee{constructor(X,ge){super();We(this,"type","CallExpression");this.callee=X,this.args=ge}},g=class extends ee{constructor(X){super();We(this,"type","Identifier");this.value=X}},I=class extends ee{constructor(X){super();We(this,"type","Literal");this.value=X}},e=class extends I{constructor(){super(...arguments);We(this,"type","NumericLiteral")}},u=class extends I{constructor(){super(...arguments);We(this,"type","StringLiteral")}},B=class extends I{constructor(){super(...arguments);We(this,"type","BooleanLiteral")}},ue=class extends I{constructor(){super(...arguments);We(this,"type","NullLiteral")}},G=class extends I{constructor(){super(...arguments);We(this,"type","ArrayLiteral")}},K=class extends I{constructor(){super(...arguments);We(this,"type","TupleLiteral")}},Ve=class extends I{constructor(){super(...arguments);We(this,"type","ObjectLiteral")}},ve=class extends ee{constructor(X,ge,fe){super();We(this,"type","BinaryExpression");this.operator=X,this.left=ge,this.right=fe}},Re=class extends ee{constructor(X,ge){super();We(this,"type","FilterExpression");this.operand=X,this.filter=ge}},Ke=class extends ee{constructor(X,ge){super();We(this,"type","SelectExpression");this.iterable=X,this.test=ge}},nt=class extends ee{constructor(X,ge,fe){super();We(this,"type","TestExpression");this.operand=X,this.negate=ge,this.test=fe}},Ct=class extends ee{constructor(X,ge){super();We(this,"type","UnaryExpression");this.operator=X,this.argument=ge}},ht=class extends ee{constructor(X=void 0,ge=void 0,fe=void 0){super();We(this,"type","SliceExpression");this.start=X,this.stop=ge,this.step=fe}},et=class extends ee{constructor(X,ge){super();We(this,"type","KeywordArgumentExpression");this.key=X,this.value=ge}};function ze(Pe){const X=new Q([]);let ge=0;function fe(gr,Wr){const vr=Pe[ge++];if(!vr||vr.type!==gr)throw new Error(`Parser Error: ${Wr}. ${vr.type} !== ${gr}.`);return vr}function He(){switch(Pe[ge].type){case w.Text:return new u(fe(w.Text,"Expected text token").value);case w.OpenStatement:return function(){let gr;switch(fe(w.OpenStatement,"Expected opening statement token"),Pe[ge].type){case w.Set:++ge,gr=Dt(),fe(w.CloseStatement,"Expected closing statement token");break;case w.If:++ge,gr=Ht(),fe(w.OpenStatement,"Expected {% token"),fe(w.EndIf,"Expected endif token"),fe(w.CloseStatement,"Expected %} token");break;case w.Macro:++ge,gr=function(){const Wr=Ea();if(Wr.type!=="Identifier")throw new SyntaxError("Expected identifier following macro statement");const vr=Cs();fe(w.CloseStatement,"Expected closing statement token");const Es=[];for(;ct(w.OpenStatement,w.EndMacro);)Es.push(He());return new Ie(Wr,vr,Es)}(),fe(w.OpenStatement,"Expected {% token"),fe(w.EndMacro,"Expected endmacro token"),fe(w.CloseStatement,"Expected %} token");break;case w.For:++ge,gr=function(){const Wr=Vt(!0);if(!(Wr instanceof g||Wr instanceof K))throw new SyntaxError(`Expected identifier/tuple for the loop variable, got ${Wr.type} instead`);fe(w.In,"Expected `in` keyword following loop variable");const vr=sr();fe(w.CloseStatement,"Expected closing statement token");const Es=[];for(;ct(w.OpenStatement,w.EndFor)&&ct(w.OpenStatement,w.Else);)Es.push(He());const pn=[];if(kt(w.OpenStatement,w.Else))for(++ge,++ge,fe(w.CloseStatement,"Expected closing statement token");ct(w.OpenStatement,w.EndFor);)pn.push(He());return new oe(Wr,vr,Es,pn)}(),fe(w.OpenStatement,"Expected {% token"),fe(w.EndFor,"Expected endfor token"),fe(w.CloseStatement,"Expected %} token");break;default:throw new SyntaxError(`Unknown statement type: ${Pe[ge].type}`)}return gr}();case w.OpenExpression:return function(){fe(w.OpenExpression,"Expected opening expression token");const gr=sr();return fe(w.CloseExpression,"Expected closing expression token"),gr}();default:throw new SyntaxError(`Unexpected token type: ${Pe[ge].type}`)}}function ct(...gr){return ge+gr.length<=Pe.length&&gr.some((Wr,vr)=>Wr!==Pe[ge+vr].type)}function kt(...gr){return ge+gr.length<=Pe.length&&gr.every((Wr,vr)=>Wr===Pe[ge+vr].type)}function Dt(){const gr=sr();if(kt(w.Equals)){++ge;const Wr=Dt();return new be(gr,Wr)}return gr}function Ht(){var Es,pn,Ba,In,ln,hn,kn,sa;const gr=sr();fe(w.CloseStatement,"Expected closing statement token");const Wr=[],vr=[];for(;((Es=Pe[ge])==null?void 0:Es.type)!==w.OpenStatement||((pn=Pe[ge+1])==null?void 0:pn.type)!==w.ElseIf&&((Ba=Pe[ge+1])==null?void 0:Ba.type)!==w.Else&&((In=Pe[ge+1])==null?void 0:In.type)!==w.EndIf;)Wr.push(He());if(((ln=Pe[ge])==null?void 0:ln.type)===w.OpenStatement&&((hn=Pe[ge+1])==null?void 0:hn.type)!==w.EndIf)if(++ge,kt(w.ElseIf))fe(w.ElseIf,"Expected elseif token"),vr.push(Ht());else for(fe(w.Else,"Expected else token"),fe(w.CloseStatement,"Expected closing statement token");((kn=Pe[ge])==null?void 0:kn.type)!==w.OpenStatement||((sa=Pe[ge+1])==null?void 0:sa.type)!==w.EndIf;)vr.push(He());return new J(gr,Wr,vr)}function Vt(gr=!1){const Wr=gr?Ea:sr,vr=[Wr()],Es=kt(w.Comma);for(;Es&&(++ge,vr.push(Wr()),kt(w.Comma)););return Es?new K(vr):vr[0]}function sr(){return function(){const gr=nr();if(kt(w.If)){++ge;const Wr=nr();if(kt(w.Else)){++ge;const vr=nr();return new J(Wr,[gr],[vr])}return new Ke(gr,Wr)}return gr}()}function nr(){let gr=lr();for(;kt(w.Or);){const Wr=Pe[ge];++ge;const vr=lr();gr=new ve(Wr,gr,vr)}return gr}function lr(){let gr=Fr();for(;kt(w.And);){const Wr=Pe[ge];++ge;const vr=Fr();gr=new ve(Wr,gr,vr)}return gr}function Fr(){let gr;for(;kt(w.Not);){const Wr=Pe[ge];++ge;const vr=Fr();gr=new Ct(Wr,vr)}return gr??function(){let Wr=ns();for(;kt(w.ComparisonBinaryOperator)||kt(w.In)||kt(w.NotIn);){const vr=Pe[ge];++ge;const Es=ns();Wr=new ve(vr,Wr,Es)}return Wr}()}function ns(){let gr=wn();for(;kt(w.AdditiveBinaryOperator);){const Wr=Pe[ge];++ge;const vr=wn();gr=new ve(Wr,gr,vr)}return gr}function Gs(gr){let Wr=new ce(gr,Cs());return Wr=is(Wr),kt(w.OpenParen)&&(Wr=Gs(Wr)),Wr}function Cs(){fe(w.OpenParen,"Expected opening parenthesis for arguments list");const gr=function(){const Wr=[];for(;!kt(w.CloseParen);){let vr=sr();if(kt(w.Equals)){if(++ge,!(vr instanceof g))throw new SyntaxError("Expected identifier for keyword argument");const Es=sr();vr=new et(vr,Es)}Wr.push(vr),kt(w.Comma)&&++ge}return Wr}();return fe(w.CloseParen,"Expected closing parenthesis for arguments list"),gr}function Ks(){const gr=[];let Wr=!1;for(;!kt(w.CloseSquareBracket);)kt(w.Colon)?(gr.push(void 0),++ge,Wr=!0):(gr.push(sr()),kt(w.Colon)&&(++ge,Wr=!0));if(gr.length===0)throw new SyntaxError("Expected at least one argument for member/slice expression");if(Wr){if(gr.length>3)throw new SyntaxError("Expected 0-3 arguments for slice expression");return new ht(...gr)}return gr[0]}function is(gr){for(;kt(w.Dot)||kt(w.OpenSquareBracket);){const Wr=Pe[ge];let vr;++ge;const Es=Wr.type!==w.Dot;if(Es)vr=Ks(),fe(w.CloseSquareBracket,"Expected closing square bracket");else if(vr=Ea(),vr.type!=="Identifier")throw new SyntaxError("Expected identifier following dot operator");gr=new re(gr,vr,Es)}return gr}function wn(){let gr=oa();for(;kt(w.MultiplicativeBinaryOperator);){const Wr=Pe[ge];++ge;const vr=oa();gr=new ve(Wr,gr,vr)}return gr}function oa(){let gr=function(){let Wr=function(){const vr=is(Ea());return kt(w.OpenParen)?Gs(vr):vr}();for(;kt(w.Pipe);){++ge;let vr=Ea();if(!(vr instanceof g))throw new SyntaxError("Expected identifier for the filter");kt(w.OpenParen)&&(vr=Gs(vr)),Wr=new Re(Wr,vr)}return Wr}();for(;kt(w.Is);){++ge;const Wr=kt(w.Not);Wr&&++ge;let vr=Ea();if(vr instanceof B?vr=new g(vr.value.toString()):vr instanceof ue&&(vr=new g("none")),!(vr instanceof g))throw new SyntaxError("Expected identifier for the test");gr=new nt(gr,Wr,vr)}return gr}function Ea(){const gr=Pe[ge];switch(gr.type){case w.NumericLiteral:return++ge,new e(Number(gr.value));case w.StringLiteral:return++ge,new u(gr.value);case w.BooleanLiteral:return++ge,new B(gr.value.toLowerCase()==="true");case w.NullLiteral:return++ge,new ue(null);case w.Identifier:return++ge,new g(gr.value);case w.OpenParen:{++ge;const Wr=Vt();if(Pe[ge].type!==w.CloseParen)throw new SyntaxError(`Expected closing parenthesis, got ${Pe[ge].type} instead`);return++ge,Wr}case w.OpenSquareBracket:{++ge;const Wr=[];for(;!kt(w.CloseSquareBracket);)Wr.push(sr()),kt(w.Comma)&&++ge;return++ge,new G(Wr)}case w.OpenCurlyBracket:{++ge;const Wr=new Map;for(;!kt(w.CloseCurlyBracket);){const vr=sr();fe(w.Colon,"Expected colon between key and value in object literal");const Es=sr();Wr.set(vr,Es),kt(w.Comma)&&++ge}return++ge,new Ve(Wr)}default:throw new SyntaxError(`Unexpected token: ${gr.type}`)}}for(;ge<Pe.length;)X.body.push(He());return X}function Se(Pe,X,ge=1){X===void 0&&(X=Pe,Pe=0);const fe=[];for(let He=Pe;He<X;He+=ge)fe.push(He);return fe}function xe(Pe,X,ge,fe=1){const He=Math.sign(fe);He>=0?(X=(X??(X=0))<0?Math.max(Pe.length+X,0):Math.min(X,Pe.length),ge=(ge??(ge=Pe.length))<0?Math.max(Pe.length+ge,0):Math.min(ge,Pe.length)):(X=(X??(X=Pe.length-1))<0?Math.max(Pe.length+X,-1):Math.min(X,Pe.length-1),ge=(ge??(ge=-1))<-1?Math.max(Pe.length+ge,-1):Math.min(ge,Pe.length-1));const ct=[];for(let kt=X;He*kt<He*ge;kt+=fe)ct.push(Pe[kt]);return ct}function Me(Pe){return Pe.replace(/\b\w/g,X=>X.toUpperCase())}var ft=class{constructor(Pe=void 0){We(this,"type","RuntimeValue");We(this,"value");We(this,"builtins",new Map);this.value=Pe}__bool__(){return new Je(!!this.value)}},gt=class extends ft{constructor(){super(...arguments);We(this,"type","NumericValue")}},_t=class extends ft{constructor(){super(...arguments);We(this,"type","StringValue");We(this,"builtins",new Map([["upper",new Et(()=>new _t(this.value.toUpperCase()))],["lower",new Et(()=>new _t(this.value.toLowerCase()))],["strip",new Et(()=>new _t(this.value.trim()))],["title",new Et(()=>new _t(Me(this.value)))],["length",new gt(this.value.length)],["rstrip",new Et(()=>new _t(this.value.trimEnd()))],["lstrip",new Et(()=>new _t(this.value.trimStart()))],["split",new Et(X=>{const ge=X[0]??new $e;if(!(ge instanceof _t||ge instanceof $e))throw new Error("sep argument must be a string or null");const fe=X[1]??new gt(-1);if(!(fe instanceof gt))throw new Error("maxsplit argument must be a number");let He=[];if(ge instanceof $e){const ct=this.value.trimStart();for(const{0:kt,index:Dt}of ct.matchAll(/\S+/g)){if(fe.value!==-1&&He.length>=fe.value&&Dt!==void 0){He.push(kt+ct.slice(Dt+kt.length));break}He.push(kt)}}else{if(ge.value==="")throw new Error("empty separator");He=this.value.split(ge.value),fe.value!==-1&&He.length>fe.value&&He.push(He.splice(fe.value).join(ge.value))}return new Ne(He.map(ct=>new _t(ct)))})]]))}},Je=class extends ft{constructor(){super(...arguments);We(this,"type","BooleanValue")}},bt=class extends ft{constructor(){super(...arguments);We(this,"type","ObjectValue");We(this,"builtins",new Map([["get",new Et(([X,ge])=>{if(!(X instanceof _t))throw new Error(`Object key must be a string: got ${X.type}`);return this.value.get(X.value)??ge??new $e})],["items",new Et(()=>new Ne(Array.from(this.value.entries()).map(([X,ge])=>new Ne([new _t(X),ge]))))]]))}__bool__(){return new Je(this.value.size>0)}},rt=class extends bt{constructor(){super(...arguments);We(this,"type","KeywordArgumentsValue")}},Ne=class extends ft{constructor(){super(...arguments);We(this,"type","ArrayValue");We(this,"builtins",new Map([["length",new gt(this.value.length)]]))}__bool__(){return new Je(this.value.length>0)}},it=class extends Ne{constructor(){super(...arguments);We(this,"type","TupleValue")}},Et=class extends ft{constructor(){super(...arguments);We(this,"type","FunctionValue")}},$e=class extends ft{constructor(){super(...arguments);We(this,"type","NullValue")}},It=class extends ft{constructor(){super(...arguments);We(this,"type","UndefinedValue")}},Tt=class{constructor(Pe){We(this,"variables",new Map([["namespace",new Et(Pe=>{if(Pe.length===0)return new bt(new Map);if(Pe.length!==1||!(Pe[0]instanceof bt))throw new Error("`namespace` expects either zero arguments or a single object argument");return Pe[0]})]]));We(this,"tests",new Map([["boolean",Pe=>Pe.type==="BooleanValue"],["callable",Pe=>Pe instanceof Et],["odd",Pe=>{if(Pe.type!=="NumericValue")throw new Error(`Cannot apply test "odd" to type: ${Pe.type}`);return Pe.value%2!=0}],["even",Pe=>{if(Pe.type!=="NumericValue")throw new Error(`Cannot apply test "even" to type: ${Pe.type}`);return Pe.value%2==0}],["false",Pe=>Pe.type==="BooleanValue"&&!Pe.value],["true",Pe=>Pe.type==="BooleanValue"&&Pe.value],["none",Pe=>Pe.type==="NullValue"],["string",Pe=>Pe.type==="StringValue"],["number",Pe=>Pe.type==="NumericValue"],["integer",Pe=>Pe.type==="NumericValue"&&Number.isInteger(Pe.value)],["iterable",Pe=>Pe.type==="ArrayValue"||Pe.type==="StringValue"],["mapping",Pe=>Pe.type==="ObjectValue"],["lower",Pe=>{const X=Pe.value;return Pe.type==="StringValue"&&X===X.toLowerCase()}],["upper",Pe=>{const X=Pe.value;return Pe.type==="StringValue"&&X===X.toUpperCase()}],["none",Pe=>Pe.type==="NullValue"],["defined",Pe=>Pe.type!=="UndefinedValue"],["undefined",Pe=>Pe.type==="UndefinedValue"],["equalto",(Pe,X)=>Pe.value===X.value],["eq",(Pe,X)=>Pe.value===X.value]]));this.parent=Pe}set(Pe,X){return this.declareVariable(Pe,Wt(X))}declareVariable(Pe,X){if(this.variables.has(Pe))throw new SyntaxError(`Variable already declared: ${Pe}`);return this.variables.set(Pe,X),X}setVariable(Pe,X){return this.variables.set(Pe,X),X}resolve(Pe){if(this.variables.has(Pe))return this;if(this.parent)return this.parent.resolve(Pe);throw new Error(`Unknown variable: ${Pe}`)}lookupVariable(Pe){try{return this.resolve(Pe).variables.get(Pe)??new It}catch{return new It}}},zt=class{constructor(Pe){We(this,"global");this.global=Pe??new Tt}run(Pe){return this.evaluate(Pe,this.global)}evaluateBinaryExpression(Pe,X){const ge=this.evaluate(Pe.left,X);switch(Pe.operator.value){case"and":return ge.__bool__().value?this.evaluate(Pe.right,X):ge;case"or":return ge.__bool__().value?ge:this.evaluate(Pe.right,X)}const fe=this.evaluate(Pe.right,X);switch(Pe.operator.value){case"==":return new Je(ge.value==fe.value);case"!=":return new Je(ge.value!=fe.value)}if(ge instanceof It||fe instanceof It)throw new Error("Cannot perform operation on undefined values");if(ge instanceof $e||fe instanceof $e)throw new Error("Cannot perform operation on null values");if(ge instanceof gt&&fe instanceof gt)switch(Pe.operator.value){case"+":return new gt(ge.value+fe.value);case"-":return new gt(ge.value-fe.value);case"*":return new gt(ge.value*fe.value);case"/":return new gt(ge.value/fe.value);case"%":return new gt(ge.value%fe.value);case"<":return new Je(ge.value<fe.value);case">":return new Je(ge.value>fe.value);case">=":return new Je(ge.value>=fe.value);case"<=":return new Je(ge.value<=fe.value)}else if(ge instanceof Ne&&fe instanceof Ne){if(Pe.operator.value==="+")return new Ne(ge.value.concat(fe.value))}else if(fe instanceof Ne){const He=fe.value.find(ct=>ct.value===ge.value)!==void 0;switch(Pe.operator.value){case"in":return new Je(He);case"not in":return new Je(!He)}}if((ge instanceof _t||fe instanceof _t)&&Pe.operator.value==="+")return new _t(ge.value.toString()+fe.value.toString());if(ge instanceof _t&&fe instanceof _t)switch(Pe.operator.value){case"in":return new Je(fe.value.includes(ge.value));case"not in":return new Je(!fe.value.includes(ge.value))}if(ge instanceof _t&&fe instanceof bt)switch(Pe.operator.value){case"in":return new Je(fe.value.has(ge.value));case"not in":return new Je(!fe.value.has(ge.value))}throw new SyntaxError(`Unknown operator "${Pe.operator.value}" between ${ge.type} and ${fe.type}`)}evaluateArguments(Pe,X){const ge=[],fe=new Map;for(const He of Pe)if(He.type==="KeywordArgumentExpression"){const ct=He;fe.set(ct.key.value,this.evaluate(ct.value,X))}else{if(fe.size>0)throw new Error("Positional arguments must come before keyword arguments");ge.push(this.evaluate(He,X))}return[ge,fe]}evaluateFilterExpression(Pe,X){const ge=this.evaluate(Pe.operand,X);if(Pe.filter.type==="Identifier"){const fe=Pe.filter;if(fe.value==="tojson")return new _t(pe(ge));if(ge instanceof Ne)switch(fe.value){case"list":return ge;case"first":return ge.value[0];case"last":return ge.value[ge.value.length-1];case"length":return new gt(ge.value.length);case"reverse":return new Ne(ge.value.reverse());case"sort":return new Ne(ge.value.sort((He,ct)=>{if(He.type!==ct.type)throw new Error(`Cannot compare different types: ${He.type} and ${ct.type}`);switch(He.type){case"NumericValue":return He.value-ct.value;case"StringValue":return He.value.localeCompare(ct.value);default:throw new Error(`Cannot compare type: ${He.type}`)}}));case"join":return new _t(ge.value.map(He=>He.value).join(""));default:throw new Error(`Unknown ArrayValue filter: ${fe.value}`)}else if(ge instanceof _t)switch(fe.value){case"length":return new gt(ge.value.length);case"upper":return new _t(ge.value.toUpperCase());case"lower":return new _t(ge.value.toLowerCase());case"title":return new _t(Me(ge.value));case"capitalize":return new _t(ge.value.charAt(0).toUpperCase()+ge.value.slice(1));case"trim":return new _t(ge.value.trim());case"indent":return new _t(ge.value.split(`
`).map((He,ct)=>ct===0||He.length===0?He:"    "+He).join(`
`));case"join":case"string":return ge;default:throw new Error(`Unknown StringValue filter: ${fe.value}`)}else{if(ge instanceof gt){if(fe.value==="abs")return new gt(Math.abs(ge.value));throw new Error(`Unknown NumericValue filter: ${fe.value}`)}if(ge instanceof bt)switch(fe.value){case"items":return new Ne(Array.from(ge.value.entries()).map(([He,ct])=>new Ne([new _t(He),ct])));case"length":return new gt(ge.value.size);default:throw new Error(`Unknown ObjectValue filter: ${fe.value}`)}}throw new Error(`Cannot apply filter "${fe.value}" to type: ${ge.type}`)}if(Pe.filter.type==="CallExpression"){const fe=Pe.filter;if(fe.callee.type!=="Identifier")throw new Error(`Unknown filter: ${fe.callee.type}`);const He=fe.callee.value;if(He==="tojson"){const[,ct]=this.evaluateArguments(fe.args,X),kt=ct.get("indent")??new $e;if(!(kt instanceof gt||kt instanceof $e))throw new Error("If set, indent must be a number");return new _t(pe(ge,kt.value))}if(He==="join"){let ct;if(ge instanceof _t)ct=Array.from(ge.value);else{if(!(ge instanceof Ne))throw new Error(`Cannot apply filter "${He}" to type: ${ge.type}`);ct=ge.value.map(Vt=>Vt.value)}const[kt,Dt]=this.evaluateArguments(fe.args,X),Ht=kt.at(0)??Dt.get("separator")??new _t("");if(!(Ht instanceof _t))throw new Error("separator must be a string");return new _t(ct.join(Ht.value))}if(ge instanceof Ne){switch(He){case"selectattr":case"rejectattr":{const ct=He==="selectattr";if(ge.value.some(nr=>!(nr instanceof bt)))throw new Error(`\`${He}\` can only be applied to array of objects`);if(fe.args.some(nr=>nr.type!=="StringLiteral"))throw new Error(`arguments of \`${He}\` must be strings`);const[kt,Dt,Ht]=fe.args.map(nr=>this.evaluate(nr,X));let Vt;if(Dt){const nr=X.tests.get(Dt.value);if(!nr)throw new Error(`Unknown test: ${Dt.value}`);Vt=nr}else Vt=(...nr)=>nr[0].__bool__().value;const sr=ge.value.filter(nr=>{const lr=nr.value.get(kt.value),Fr=!!lr&&Vt(lr,Ht);return ct?Fr:!Fr});return new Ne(sr)}case"map":{const[,ct]=this.evaluateArguments(fe.args,X);if(ct.has("attribute")){const kt=ct.get("attribute");if(!(kt instanceof _t))throw new Error("attribute must be a string");const Dt=ct.get("default"),Ht=ge.value.map(Vt=>{if(!(Vt instanceof bt))throw new Error("items in map must be an object");return Vt.value.get(kt.value)??Dt??new It});return new Ne(Ht)}throw new Error("`map` expressions without `attribute` set are not currently supported.")}}throw new Error(`Unknown ArrayValue filter: ${He}`)}if(ge instanceof _t){if(He==="indent"){const[ct,kt]=this.evaluateArguments(fe.args,X),Dt=ct.at(0)??kt.get("width")??new gt(4);if(!(Dt instanceof gt))throw new Error("width must be a number");const Ht=ct.at(1)??kt.get("first")??new Je(!1),Vt=ct.at(2)??kt.get("blank")??new Je(!1),sr=ge.value.split(`
`),nr=" ".repeat(Dt.value),lr=sr.map((Fr,ns)=>!Ht.value&&ns===0||!Vt.value&&Fr.length===0?Fr:nr+Fr);return new _t(lr.join(`
`))}throw new Error(`Unknown StringValue filter: ${He}`)}throw new Error(`Cannot apply filter "${He}" to type: ${ge.type}`)}throw new Error(`Unknown filter: ${Pe.filter.type}`)}evaluateTestExpression(Pe,X){const ge=this.evaluate(Pe.operand,X),fe=X.tests.get(Pe.test.value);if(!fe)throw new Error(`Unknown test: ${Pe.test.value}`);const He=fe(ge);return new Je(Pe.negate?!He:He)}evaluateUnaryExpression(Pe,X){const ge=this.evaluate(Pe.argument,X);if(Pe.operator.value==="not")return new Je(!ge.value);throw new SyntaxError(`Unknown operator: ${Pe.operator.value}`)}evalProgram(Pe,X){return this.evaluateBlock(Pe.body,X)}evaluateBlock(Pe,X){let ge="";for(const fe of Pe){const He=this.evaluate(fe,X);He.type!=="NullValue"&&He.type!=="UndefinedValue"&&(ge+=He.value)}return new _t(ge)}evaluateIdentifier(Pe,X){return X.lookupVariable(Pe.value)}evaluateCallExpression(Pe,X){const[ge,fe]=this.evaluateArguments(Pe.args,X);fe.size>0&&ge.push(new rt(fe));const He=this.evaluate(Pe.callee,X);if(He.type!=="FunctionValue")throw new Error(`Cannot call something that is not a function: got ${He.type}`);return He.value(ge,X)}evaluateSliceExpression(Pe,X,ge){if(!(Pe instanceof Ne||Pe instanceof _t))throw new Error("Slice object must be an array or string");const fe=this.evaluate(X.start,ge),He=this.evaluate(X.stop,ge),ct=this.evaluate(X.step,ge);if(!(fe instanceof gt||fe instanceof It))throw new Error("Slice start must be numeric or undefined");if(!(He instanceof gt||He instanceof It))throw new Error("Slice stop must be numeric or undefined");if(!(ct instanceof gt||ct instanceof It))throw new Error("Slice step must be numeric or undefined");return Pe instanceof Ne?new Ne(xe(Pe.value,fe.value,He.value,ct.value)):new _t(xe(Array.from(Pe.value),fe.value,He.value,ct.value).join(""))}evaluateMemberExpression(Pe,X){const ge=this.evaluate(Pe.object,X);let fe,He;if(Pe.computed){if(Pe.property.type==="SliceExpression")return this.evaluateSliceExpression(ge,Pe.property,X);fe=this.evaluate(Pe.property,X)}else fe=new _t(Pe.property.value);if(ge instanceof bt){if(!(fe instanceof _t))throw new Error(`Cannot access property with non-string: got ${fe.type}`);He=ge.value.get(fe.value)??ge.builtins.get(fe.value)}else if(ge instanceof Ne||ge instanceof _t)if(fe instanceof gt)He=ge.value.at(fe.value),ge instanceof _t&&(He=new _t(ge.value.at(fe.value)));else{if(!(fe instanceof _t))throw new Error(`Cannot access property with non-string/non-number: got ${fe.type}`);He=ge.builtins.get(fe.value)}else{if(!(fe instanceof _t))throw new Error(`Cannot access property with non-string: got ${fe.type}`);He=ge.builtins.get(fe.value)}return He instanceof ft?He:new It}evaluateSet(Pe,X){const ge=this.evaluate(Pe.value,X);if(Pe.assignee.type==="Identifier"){const fe=Pe.assignee.value;X.setVariable(fe,ge)}else{if(Pe.assignee.type!=="MemberExpression")throw new Error(`Invalid LHS inside assignment expression: ${JSON.stringify(Pe.assignee)}`);{const fe=Pe.assignee,He=this.evaluate(fe.object,X);if(!(He instanceof bt))throw new Error("Cannot assign to member of non-object");if(fe.property.type!=="Identifier")throw new Error("Cannot assign to member with non-identifier property");He.value.set(fe.property.value,ge)}}return new $e}evaluateIf(Pe,X){const ge=this.evaluate(Pe.test,X);return this.evaluateBlock(ge.__bool__().value?Pe.body:Pe.alternate,X)}evaluateFor(Pe,X){const ge=new Tt(X);let fe,He;if(Pe.iterable.type==="SelectExpression"){const Vt=Pe.iterable;He=this.evaluate(Vt.iterable,ge),fe=Vt.test}else He=this.evaluate(Pe.iterable,ge);if(!(He instanceof Ne))throw new Error(`Expected iterable type in for loop: got ${He.type}`);const ct=[],kt=[];for(let Vt=0;Vt<He.value.length;++Vt){const sr=new Tt(ge),nr=He.value[Vt];let lr;if(Pe.loopvar.type==="Identifier")lr=Fr=>Fr.setVariable(Pe.loopvar.value,nr);else{if(Pe.loopvar.type!=="TupleLiteral")throw new Error(`Invalid loop variable(s): ${Pe.loopvar.type}`);{const Fr=Pe.loopvar;if(nr.type!=="ArrayValue")throw new Error(`Cannot unpack non-iterable type: ${nr.type}`);const ns=nr;if(Fr.value.length!==ns.value.length)throw new Error(`Too ${Fr.value.length>ns.value.length?"few":"many"} items to unpack`);lr=Gs=>{for(let Cs=0;Cs<Fr.value.length;++Cs){if(Fr.value[Cs].type!=="Identifier")throw new Error(`Cannot unpack non-identifier type: ${Fr.value[Cs].type}`);Gs.setVariable(Fr.value[Cs].value,ns.value[Cs])}}}}fe&&(lr(sr),!this.evaluate(fe,sr).__bool__().value)||(ct.push(nr),kt.push(lr))}let Dt="",Ht=!0;for(let Vt=0;Vt<ct.length;++Vt){const sr=new Map([["index",new gt(Vt+1)],["index0",new gt(Vt)],["revindex",new gt(ct.length-Vt)],["revindex0",new gt(ct.length-Vt-1)],["first",new Je(Vt===0)],["last",new Je(Vt===ct.length-1)],["length",new gt(ct.length)],["previtem",Vt>0?ct[Vt-1]:new It],["nextitem",Vt<ct.length-1?ct[Vt+1]:new It]]);ge.setVariable("loop",new bt(sr)),kt[Vt](ge),Dt+=this.evaluateBlock(Pe.body,ge).value,Ht=!1}return Ht&&(Dt+=this.evaluateBlock(Pe.defaultBlock,ge).value),new _t(Dt)}evaluateMacro(Pe,X){return X.setVariable(Pe.name.value,new Et((ge,fe)=>{var kt;const He=new Tt(fe);let ct;ge=ge.slice(),((kt=ge.at(-1))==null?void 0:kt.type)==="KeywordArgumentsValue"&&(ct=ge.pop());for(let Dt=0;Dt<Pe.args.length;++Dt){const Ht=Pe.args[Dt],Vt=ge[Dt];if(Ht.type==="Identifier"){const sr=Ht;if(!Vt)throw new Error(`Missing positional argument: ${sr.value}`);He.setVariable(sr.value,Vt)}else{if(Ht.type!=="KeywordArgumentExpression")throw new Error(`Unknown argument type: ${Ht.type}`);{const sr=Ht,nr=Vt??(ct==null?void 0:ct.value.get(sr.key.value))??this.evaluate(sr.value,He);He.setVariable(sr.key.value,nr)}}}return this.evaluateBlock(Pe.body,He)})),new $e}evaluate(Pe,X){if(Pe===void 0)return new It;switch(Pe.type){case"Program":return this.evalProgram(Pe,X);case"Set":return this.evaluateSet(Pe,X);case"If":return this.evaluateIf(Pe,X);case"For":return this.evaluateFor(Pe,X);case"Macro":return this.evaluateMacro(Pe,X);case"NumericLiteral":return new gt(Number(Pe.value));case"StringLiteral":return new _t(Pe.value);case"BooleanLiteral":return new Je(Pe.value);case"NullLiteral":return new $e(Pe.value);case"ArrayLiteral":return new Ne(Pe.value.map(ge=>this.evaluate(ge,X)));case"TupleLiteral":return new it(Pe.value.map(ge=>this.evaluate(ge,X)));case"ObjectLiteral":{const ge=new Map;for(const[fe,He]of Pe.value){const ct=this.evaluate(fe,X);if(!(ct instanceof _t))throw new Error(`Object keys must be strings: got ${ct.type}`);ge.set(ct.value,this.evaluate(He,X))}return new bt(ge)}case"Identifier":return this.evaluateIdentifier(Pe,X);case"CallExpression":return this.evaluateCallExpression(Pe,X);case"MemberExpression":return this.evaluateMemberExpression(Pe,X);case"UnaryExpression":return this.evaluateUnaryExpression(Pe,X);case"BinaryExpression":return this.evaluateBinaryExpression(Pe,X);case"FilterExpression":return this.evaluateFilterExpression(Pe,X);case"TestExpression":return this.evaluateTestExpression(Pe,X);default:throw new SyntaxError(`Unknown node type: ${Pe.type}`)}}};function Wt(Pe){switch(typeof Pe){case"number":return new gt(Pe);case"string":return new _t(Pe);case"boolean":return new Je(Pe);case"undefined":return new It;case"object":return Pe===null?new $e:Array.isArray(Pe)?new Ne(Pe.map(Wt)):new bt(new Map(Object.entries(Pe).map(([X,ge])=>[X,Wt(ge)])));case"function":return new Et((X,ge)=>{const fe=Pe(...X.map(He=>He.value))??null;return Wt(fe)});default:throw new Error(`Cannot convert to runtime value: ${Pe}`)}}function pe(Pe,X,ge){const fe=ge??0;switch(Pe.type){case"NullValue":case"UndefinedValue":return"null";case"NumericValue":case"StringValue":case"BooleanValue":return JSON.stringify(Pe.value);case"ArrayValue":case"ObjectValue":{const He=X?" ".repeat(X):"",ct=`
`+He.repeat(fe),kt=ct+He;if(Pe.type==="ArrayValue"){const Dt=Pe.value.map(Ht=>pe(Ht,X,fe+1));return X?`[${kt}${Dt.join(`,${kt}`)}${ct}]`:`[${Dt.join(", ")}]`}{const Dt=Array.from(Pe.value.entries()).map(([Ht,Vt])=>{const sr=`"${Ht}": ${pe(Vt,X,fe+1)}`;return X?`${kt}${sr}`:sr});return X?`{${Dt.join(",")}${ct}}`:`{${Dt.join(", ")}}`}}default:throw new Error(`Cannot convert to JSON: ${Pe.type}`)}}var Ut=class{constructor(Pe){We(this,"parsed");const X=D(Pe,{lstrip_blocks:!0,trim_blocks:!0});this.parsed=ze(X)}render(Pe){const X=new Tt;if(X.set("false",!1),X.set("true",!0),X.set("raise_exception",ge=>{throw new Error(ge)}),X.set("range",Se),Pe)for(const[ge,fe]of Object.entries(Pe))X.set(ge,fe);return new zt(X).run(this.parsed).value}}},"./node_modules/onnxruntime-common/dist/esm/backend-impl.js":(T,k,A)=>{A.r(k),A.d(k,{registerBackend:()=>Y,resolveBackendAndExecutionProviders:()=>H});const w=new Map,F=[],Y=(z,N,D)=>{if(!N||typeof N.init!="function"||typeof N.createInferenceSessionHandler!="function")throw new TypeError("not a valid backend");{const R=w.get(z);if(R===void 0)w.set(z,{backend:N,priority:D});else{if(R.priority>D)return;if(R.priority===D&&R.backend!==N)throw new Error(`cannot register backend "${z}" using priority ${D}`)}if(D>=0){const Q=F.indexOf(z);Q!==-1&&F.splice(Q,1);for(let J=0;J<F.length;J++)if(w.get(F[J]).priority<=D)return void F.splice(J,0,z);F.push(z)}}},U=async z=>{const N=w.get(z);if(!N)return"backend not found.";if(N.initialized)return N.backend;if(N.aborted)return N.error;{const D=!!N.initPromise;try{return D||(N.initPromise=N.backend.init(z)),await N.initPromise,N.initialized=!0,N.backend}catch(R){return D||(N.error=`${R}`,N.aborted=!0),N.error}finally{delete N.initPromise}}},H=async z=>{const N=z.executionProviders||[],D=N.map(Ie=>typeof Ie=="string"?Ie:Ie.name),R=D.length===0?F:D;let Q;const J=[],oe=new Set;for(const Ie of R){const ee=await U(Ie);typeof ee=="string"?J.push({name:Ie,err:ee}):(Q||(Q=ee),Q===ee&&oe.add(Ie))}if(!Q)throw new Error(`no available backend found. ERR: ${J.map(Ie=>`[${Ie.name}] ${Ie.err}`).join(", ")}`);for(const{name:Ie,err:ee}of J)D.includes(Ie)&&console.warn(`removing requested execution provider "${Ie}" from session options because it is not available: ${ee}`);const be=N.filter(Ie=>oe.has(typeof Ie=="string"?Ie:Ie.name));return[Q,new Proxy(z,{get:(Ie,ee)=>ee==="executionProviders"?be:Reflect.get(Ie,ee)})]}},"./node_modules/onnxruntime-common/dist/esm/backend.js":(T,k,A)=>{A.r(k),A.d(k,{registerBackend:()=>w.registerBackend});var w=A("./node_modules/onnxruntime-common/dist/esm/backend-impl.js")},"./node_modules/onnxruntime-common/dist/esm/env-impl.js":(T,k,A)=>{A.r(k),A.d(k,{env:()=>Y});var w=A("./node_modules/onnxruntime-common/dist/esm/version.js");let F="warning";const Y={wasm:{},webgl:{},webgpu:{},versions:{common:w.version},set logLevel(U){if(U!==void 0){if(typeof U!="string"||["verbose","info","warning","error","fatal"].indexOf(U)===-1)throw new Error(`Unsupported logging level: ${U}`);F=U}},get logLevel(){return F}};Object.defineProperty(Y,"logLevel",{enumerable:!0})},"./node_modules/onnxruntime-common/dist/esm/env.js":(T,k,A)=>{A.r(k),A.d(k,{env:()=>w});const w=A("./node_modules/onnxruntime-common/dist/esm/env-impl.js").env},"./node_modules/onnxruntime-common/dist/esm/index.js":(T,k,A)=>{A.r(k),A.d(k,{InferenceSession:()=>Y.InferenceSession,TRACE:()=>H.TRACE,TRACE_FUNC_BEGIN:()=>H.TRACE_FUNC_BEGIN,TRACE_FUNC_END:()=>H.TRACE_FUNC_END,Tensor:()=>U.Tensor,TrainingSession:()=>z.TrainingSession,env:()=>F.env,registerBackend:()=>w.registerBackend});var w=A("./node_modules/onnxruntime-common/dist/esm/backend.js"),F=A("./node_modules/onnxruntime-common/dist/esm/env.js"),Y=A("./node_modules/onnxruntime-common/dist/esm/inference-session.js"),U=A("./node_modules/onnxruntime-common/dist/esm/tensor.js");A("./node_modules/onnxruntime-common/dist/esm/tensor-conversion.js"),A("./node_modules/onnxruntime-common/dist/esm/tensor-factory.js");var H=A("./node_modules/onnxruntime-common/dist/esm/trace.js");A("./node_modules/onnxruntime-common/dist/esm/onnx-model.js"),A("./node_modules/onnxruntime-common/dist/esm/onnx-value.js");var z=A("./node_modules/onnxruntime-common/dist/esm/training-session.js")},"./node_modules/onnxruntime-common/dist/esm/inference-session-impl.js":(T,k,A)=>{A.r(k),A.d(k,{InferenceSession:()=>U});var w=A("./node_modules/onnxruntime-common/dist/esm/backend-impl.js"),F=A("./node_modules/onnxruntime-common/dist/esm/tensor.js"),Y=A("./node_modules/onnxruntime-common/dist/esm/trace.js");class U{constructor(z){this.handler=z}async run(z,N,D){(0,Y.TRACE_FUNC_BEGIN)();const R={};let Q={};if(typeof z!="object"||z===null||z instanceof F.Tensor||Array.isArray(z))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let J=!0;if(typeof N=="object"){if(N===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(N instanceof F.Tensor)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(N)){if(N.length===0)throw new TypeError("'fetches' cannot be an empty array.");J=!1;for(const Ie of N){if(typeof Ie!="string")throw new TypeError("'fetches' must be a string array or an object.");if(this.outputNames.indexOf(Ie)===-1)throw new RangeError(`'fetches' contains invalid output name: ${Ie}.`);R[Ie]=null}if(typeof D=="object"&&D!==null)Q=D;else if(D!==void 0)throw new TypeError("'options' must be an object.")}else{let Ie=!1;const ee=Object.getOwnPropertyNames(N);for(const re of this.outputNames)if(ee.indexOf(re)!==-1){const ce=N[re];(ce===null||ce instanceof F.Tensor)&&(Ie=!0,J=!1,R[re]=ce)}if(Ie){if(typeof D=="object"&&D!==null)Q=D;else if(D!==void 0)throw new TypeError("'options' must be an object.")}else Q=N}}else if(N!==void 0)throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(const Ie of this.inputNames)if(z[Ie]===void 0)throw new Error(`input '${Ie}' is missing in 'feeds'.`);if(J)for(const Ie of this.outputNames)R[Ie]=null;const oe=await this.handler.run(z,R,Q),be={};for(const Ie in oe)if(Object.hasOwnProperty.call(oe,Ie)){const ee=oe[Ie];ee instanceof F.Tensor?be[Ie]=ee:be[Ie]=new F.Tensor(ee.type,ee.data,ee.dims)}return(0,Y.TRACE_FUNC_END)(),be}async release(){return this.handler.dispose()}static async create(z,N,D,R){let Q;(0,Y.TRACE_FUNC_BEGIN)();let J={};if(typeof z=="string"){if(Q=z,typeof N=="object"&&N!==null)J=N;else if(N!==void 0)throw new TypeError("'options' must be an object.")}else if(z instanceof Uint8Array){if(Q=z,typeof N=="object"&&N!==null)J=N;else if(N!==void 0)throw new TypeError("'options' must be an object.")}else{if(!(z instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&z instanceof SharedArrayBuffer))throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");{const ee=z;let re=0,ce=z.byteLength;if(typeof N=="object"&&N!==null)J=N;else if(typeof N=="number"){if(re=N,!Number.isSafeInteger(re))throw new RangeError("'byteOffset' must be an integer.");if(re<0||re>=ee.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${ee.byteLength}).`);if(ce=z.byteLength-re,typeof D=="number"){if(ce=D,!Number.isSafeInteger(ce))throw new RangeError("'byteLength' must be an integer.");if(ce<=0||re+ce>ee.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${ee.byteLength-re}].`);if(typeof R=="object"&&R!==null)J=R;else if(R!==void 0)throw new TypeError("'options' must be an object.")}else if(D!==void 0)throw new TypeError("'byteLength' must be a number.")}else if(N!==void 0)throw new TypeError("'options' must be an object.");Q=new Uint8Array(ee,re,ce)}}const[oe,be]=await(0,w.resolveBackendAndExecutionProviders)(J),Ie=await oe.createInferenceSessionHandler(Q,be);return(0,Y.TRACE_FUNC_END)(),new U(Ie)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}}},"./node_modules/onnxruntime-common/dist/esm/inference-session.js":(T,k,A)=>{A.r(k),A.d(k,{InferenceSession:()=>w});const w=A("./node_modules/onnxruntime-common/dist/esm/inference-session-impl.js").InferenceSession},"./node_modules/onnxruntime-common/dist/esm/onnx-model.js":(T,k,A)=>{A.r(k)},"./node_modules/onnxruntime-common/dist/esm/onnx-value.js":(T,k,A)=>{A.r(k)},"./node_modules/onnxruntime-common/dist/esm/tensor-conversion-impl.js":(T,k,A)=>{A.r(k),A.d(k,{tensorToDataURL:()=>w,tensorToImageData:()=>F});const w=(Y,U)=>{const H=typeof document<"u"?document.createElement("canvas"):new OffscreenCanvas(1,1);H.width=Y.dims[3],H.height=Y.dims[2];const z=H.getContext("2d");if(z!=null){let N,D;(U==null?void 0:U.tensorLayout)!==void 0&&U.tensorLayout==="NHWC"?(N=Y.dims[2],D=Y.dims[3]):(N=Y.dims[3],D=Y.dims[2]);const R=(U==null?void 0:U.format)!==void 0?U.format:"RGB",Q=U==null?void 0:U.norm;let J,oe;Q===void 0||Q.mean===void 0?J=[255,255,255,255]:typeof Q.mean=="number"?J=[Q.mean,Q.mean,Q.mean,Q.mean]:(J=[Q.mean[0],Q.mean[1],Q.mean[2],0],Q.mean[3]!==void 0&&(J[3]=Q.mean[3])),Q===void 0||Q.bias===void 0?oe=[0,0,0,0]:typeof Q.bias=="number"?oe=[Q.bias,Q.bias,Q.bias,Q.bias]:(oe=[Q.bias[0],Q.bias[1],Q.bias[2],0],Q.bias[3]!==void 0&&(oe[3]=Q.bias[3]));const be=D*N;let Ie=0,ee=be,re=2*be,ce=-1;R==="RGBA"?(Ie=0,ee=be,re=2*be,ce=3*be):R==="RGB"?(Ie=0,ee=be,re=2*be):R==="RBG"&&(Ie=0,re=be,ee=2*be);for(let g=0;g<D;g++)for(let I=0;I<N;I++){const e=(Y.data[Ie++]-oe[0])*J[0],u=(Y.data[ee++]-oe[1])*J[1],B=(Y.data[re++]-oe[2])*J[2],ue=ce===-1?255:(Y.data[ce++]-oe[3])*J[3];z.fillStyle="rgba("+e+","+u+","+B+","+ue+")",z.fillRect(I,g,1,1)}if("toDataURL"in H)return H.toDataURL();throw new Error("toDataURL is not supported")}throw new Error("Can not access image data")},F=(Y,U)=>{const H=typeof document<"u"?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d");let z;if(H==null)throw new Error("Can not access image data");{let N,D,R;(U==null?void 0:U.tensorLayout)!==void 0&&U.tensorLayout==="NHWC"?(N=Y.dims[2],D=Y.dims[1],R=Y.dims[3]):(N=Y.dims[3],D=Y.dims[2],R=Y.dims[1]);const Q=U!==void 0&&U.format!==void 0?U.format:"RGB",J=U==null?void 0:U.norm;let oe,be;J===void 0||J.mean===void 0?oe=[255,255,255,255]:typeof J.mean=="number"?oe=[J.mean,J.mean,J.mean,J.mean]:(oe=[J.mean[0],J.mean[1],J.mean[2],255],J.mean[3]!==void 0&&(oe[3]=J.mean[3])),J===void 0||J.bias===void 0?be=[0,0,0,0]:typeof J.bias=="number"?be=[J.bias,J.bias,J.bias,J.bias]:(be=[J.bias[0],J.bias[1],J.bias[2],0],J.bias[3]!==void 0&&(be[3]=J.bias[3]));const Ie=D*N;if(U!==void 0&&(U.format!==void 0&&R===4&&U.format!=="RGBA"||R===3&&U.format!=="RGB"&&U.format!=="BGR"))throw new Error("Tensor format doesn't match input tensor dims");const ee=4;let re=0,ce=1,g=2,I=3,e=0,u=Ie,B=2*Ie,ue=-1;Q==="RGBA"?(e=0,u=Ie,B=2*Ie,ue=3*Ie):Q==="RGB"?(e=0,u=Ie,B=2*Ie):Q==="RBG"&&(e=0,B=Ie,u=2*Ie),z=H.createImageData(N,D);for(let G=0;G<D*N;re+=ee,ce+=ee,g+=ee,I+=ee,G++)z.data[re]=(Y.data[e++]-be[0])*oe[0],z.data[ce]=(Y.data[u++]-be[1])*oe[1],z.data[g]=(Y.data[B++]-be[2])*oe[2],z.data[I]=ue===-1?255:(Y.data[ue++]-be[3])*oe[3]}return z}},"./node_modules/onnxruntime-common/dist/esm/tensor-conversion.js":(T,k,A)=>{A.r(k)},"./node_modules/onnxruntime-common/dist/esm/tensor-factory-impl.js":(T,k,A)=>{A.r(k),A.d(k,{bufferToTensor:()=>F,tensorFromGpuBuffer:()=>H,tensorFromImage:()=>Y,tensorFromMLTensor:()=>z,tensorFromPinnedBuffer:()=>N,tensorFromTexture:()=>U});var w=A("./node_modules/onnxruntime-common/dist/esm/tensor-impl.js");const F=(D,R)=>{if(D===void 0)throw new Error("Image buffer must be defined");if(R.height===void 0||R.width===void 0)throw new Error("Image height and width must be defined");if(R.tensorLayout==="NHWC")throw new Error("NHWC Tensor layout is not supported yet");const{height:Q,width:J}=R,oe=R.norm??{mean:255,bias:0};let be,Ie;be=typeof oe.mean=="number"?[oe.mean,oe.mean,oe.mean,oe.mean]:[oe.mean[0],oe.mean[1],oe.mean[2],oe.mean[3]??255],Ie=typeof oe.bias=="number"?[oe.bias,oe.bias,oe.bias,oe.bias]:[oe.bias[0],oe.bias[1],oe.bias[2],oe.bias[3]??0];const ee=R.format!==void 0?R.format:"RGBA",re=R.tensorFormat!==void 0&&R.tensorFormat!==void 0?R.tensorFormat:"RGB",ce=Q*J,g=re==="RGBA"?new Float32Array(4*ce):new Float32Array(3*ce);let I=4,e=0,u=1,B=2,ue=3,G=0,K=ce,Ve=2*ce,ve=-1;ee==="RGB"&&(I=3,e=0,u=1,B=2,ue=-1),re==="RGBA"?ve=3*ce:re==="RBG"?(G=0,Ve=ce,K=2*ce):re==="BGR"&&(Ve=0,K=ce,G=2*ce);for(let Re=0;Re<ce;Re++,e+=I,B+=I,u+=I,ue+=I)g[G++]=(D[e]+Ie[0])/be[0],g[K++]=(D[u]+Ie[1])/be[1],g[Ve++]=(D[B]+Ie[2])/be[2],ve!==-1&&ue!==-1&&(g[ve++]=(D[ue]+Ie[3])/be[3]);return re==="RGBA"?new w.Tensor("float32",g,[1,4,Q,J]):new w.Tensor("float32",g,[1,3,Q,J])},Y=async(D,R)=>{const Q=typeof HTMLImageElement<"u"&&D instanceof HTMLImageElement,J=typeof ImageData<"u"&&D instanceof ImageData,oe=typeof ImageBitmap<"u"&&D instanceof ImageBitmap,be=typeof D=="string";let Ie,ee=R??{};const re=()=>{if(typeof document<"u")return document.createElement("canvas");if(typeof OffscreenCanvas<"u")return new OffscreenCanvas(1,1);throw new Error("Canvas is not supported")},ce=g=>typeof HTMLCanvasElement<"u"&&g instanceof HTMLCanvasElement||g instanceof OffscreenCanvas?g.getContext("2d"):null;if(Q){const g=re();g.width=D.width,g.height=D.height;const I=ce(g);if(I==null)throw new Error("Can not access image data");{let e=D.height,u=D.width;if(R!==void 0&&R.resizedHeight!==void 0&&R.resizedWidth!==void 0&&(e=R.resizedHeight,u=R.resizedWidth),R!==void 0){if(ee=R,R.tensorFormat!==void 0)throw new Error("Image input config format must be RGBA for HTMLImageElement");ee.tensorFormat="RGBA",ee.height=e,ee.width=u}else ee.tensorFormat="RGBA",ee.height=e,ee.width=u;I.drawImage(D,0,0),Ie=I.getImageData(0,0,u,e).data}}else{if(!J){if(oe){if(R===void 0)throw new Error("Please provide image config with format for Imagebitmap");const g=re();g.width=D.width,g.height=D.height;const I=ce(g);if(I!=null){const e=D.height,u=D.width;return I.drawImage(D,0,0,u,e),Ie=I.getImageData(0,0,u,e).data,ee.height=e,ee.width=u,F(Ie,ee)}throw new Error("Can not access image data")}if(be)return new Promise((g,I)=>{const e=re(),u=ce(e);if(!D||!u)return I();const B=new Image;B.crossOrigin="Anonymous",B.src=D,B.onload=()=>{e.width=B.width,e.height=B.height,u.drawImage(B,0,0,e.width,e.height);const ue=u.getImageData(0,0,e.width,e.height);ee.height=e.height,ee.width=e.width,g(F(ue.data,ee))}});throw new Error("Input data provided is not supported - aborted tensor creation")}{let g,I;if(R!==void 0&&R.resizedWidth!==void 0&&R.resizedHeight!==void 0?(g=R.resizedHeight,I=R.resizedWidth):(g=D.height,I=D.width),R!==void 0&&(ee=R),ee.format="RGBA",ee.height=g,ee.width=I,R!==void 0){const e=re();e.width=I,e.height=g;const u=ce(e);if(u==null)throw new Error("Can not access image data");u.putImageData(D,0,0),Ie=u.getImageData(0,0,I,g).data}else Ie=D.data}}if(Ie!==void 0)return F(Ie,ee);throw new Error("Input data provided is not supported - aborted tensor creation")},U=(D,R)=>{const{width:Q,height:J,download:oe,dispose:be}=R,Ie=[1,J,Q,4];return new w.Tensor({location:"texture",type:"float32",texture:D,dims:Ie,download:oe,dispose:be})},H=(D,R)=>{const{dataType:Q,dims:J,download:oe,dispose:be}=R;return new w.Tensor({location:"gpu-buffer",type:Q??"float32",gpuBuffer:D,dims:J,download:oe,dispose:be})},z=(D,R)=>{const{dataType:Q,dims:J,download:oe,dispose:be}=R;return new w.Tensor({location:"ml-tensor",type:Q??"float32",mlTensor:D,dims:J,download:oe,dispose:be})},N=(D,R,Q)=>new w.Tensor({location:"cpu-pinned",type:D,data:R,dims:Q??[R.length]})},"./node_modules/onnxruntime-common/dist/esm/tensor-factory.js":(T,k,A)=>{A.r(k)},"./node_modules/onnxruntime-common/dist/esm/tensor-impl-type-mapping.js":(T,k,A)=>{A.r(k),A.d(k,{NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP:()=>F,NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP:()=>w,checkTypedArray:()=>U});const w=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array],["int4",Uint8Array],["uint4",Uint8Array]]),F=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]);let Y=!1;const U=()=>{if(!Y){Y=!0;const H=typeof BigInt64Array<"u"&&BigInt64Array.from,z=typeof BigUint64Array<"u"&&BigUint64Array.from,N=typeof Float16Array<"u"&&Float16Array.from;H&&(w.set("int64",BigInt64Array),F.set(BigInt64Array,"int64")),z&&(w.set("uint64",BigUint64Array),F.set(BigUint64Array,"uint64")),N?(w.set("float16",Float16Array),F.set(Float16Array,"float16")):w.set("float16",Uint16Array)}}},"./node_modules/onnxruntime-common/dist/esm/tensor-impl.js":(T,k,A)=>{A.r(k),A.d(k,{Tensor:()=>H});var w=A("./node_modules/onnxruntime-common/dist/esm/tensor-conversion-impl.js"),F=A("./node_modules/onnxruntime-common/dist/esm/tensor-factory-impl.js"),Y=A("./node_modules/onnxruntime-common/dist/esm/tensor-impl-type-mapping.js"),U=A("./node_modules/onnxruntime-common/dist/esm/tensor-utils-impl.js");class H{constructor(N,D,R){let Q,J;if((0,Y.checkTypedArray)(),typeof N=="object"&&"location"in N)switch(this.dataLocation=N.location,Q=N.type,J=N.dims,N.location){case"cpu-pinned":{const be=Y.NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.get(Q);if(!be)throw new TypeError(`unsupported type "${Q}" to create tensor from pinned buffer`);if(!(N.data instanceof be))throw new TypeError(`buffer should be of type ${be.name}`);this.cpuData=N.data;break}case"texture":if(Q!=="float32")throw new TypeError(`unsupported type "${Q}" to create tensor from texture`);this.gpuTextureData=N.texture,this.downloader=N.download,this.disposer=N.dispose;break;case"gpu-buffer":if(Q!=="float32"&&Q!=="float16"&&Q!=="int32"&&Q!=="int64"&&Q!=="uint32"&&Q!=="uint8"&&Q!=="bool"&&Q!=="uint4"&&Q!=="int4")throw new TypeError(`unsupported type "${Q}" to create tensor from gpu buffer`);this.gpuBufferData=N.gpuBuffer,this.downloader=N.download,this.disposer=N.dispose;break;case"ml-tensor":if(Q!=="float32"&&Q!=="float16"&&Q!=="int32"&&Q!=="int64"&&Q!=="uint32"&&Q!=="uint64"&&Q!=="int8"&&Q!=="uint8"&&Q!=="bool")throw new TypeError(`unsupported type "${Q}" to create tensor from MLTensor`);this.mlTensorData=N.mlTensor,this.downloader=N.download,this.disposer=N.dispose;break;default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let be,Ie;if(typeof N=="string")if(Q=N,Ie=R,N==="string"){if(!Array.isArray(D))throw new TypeError("A string tensor's data must be a string array.");be=D}else{const ee=Y.NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.get(N);if(ee===void 0)throw new TypeError(`Unsupported tensor type: ${N}.`);if(Array.isArray(D)){if(N==="float16"&&ee===Uint16Array||N==="uint4"||N==="int4")throw new TypeError(`Creating a ${N} tensor from number array is not supported. Please use ${ee.name} as data.`);be=N==="uint64"||N==="int64"?ee.from(D,BigInt):ee.from(D)}else if(D instanceof ee)be=D;else{if(!(D instanceof Uint8ClampedArray))throw new TypeError(`A ${Q} tensor's data must be type of ${ee}`);if(N!=="uint8")throw new TypeError("A Uint8ClampedArray tensor's data must be type of uint8");be=Uint8Array.from(D)}}else if(Ie=D,Array.isArray(N)){if(N.length===0)throw new TypeError("Tensor type cannot be inferred from an empty array.");const ee=typeof N[0];if(ee==="string")Q="string",be=N;else{if(ee!=="boolean")throw new TypeError(`Invalid element type of data array: ${ee}.`);Q="bool",be=Uint8Array.from(N)}}else if(N instanceof Uint8ClampedArray)Q="uint8",be=Uint8Array.from(N);else{const ee=Y.NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.get(N.constructor);if(ee===void 0)throw new TypeError(`Unsupported type for tensor data: ${N.constructor}.`);Q=ee,be=N}if(Ie===void 0)Ie=[be.length];else if(!Array.isArray(Ie))throw new TypeError("A tensor's dims must be a number array");J=Ie,this.cpuData=be,this.dataLocation="cpu"}const oe=(0,U.calculateSize)(J);if(this.cpuData&&oe!==this.cpuData.length&&(Q!=="uint4"&&Q!=="int4"||Math.ceil(oe/2)!==this.cpuData.length))throw new Error(`Tensor's size(${oe}) does not match data length(${this.cpuData.length}).`);this.type=Q,this.dims=J,this.size=oe}static async fromImage(N,D){return(0,F.tensorFromImage)(N,D)}static fromTexture(N,D){return(0,F.tensorFromTexture)(N,D)}static fromGpuBuffer(N,D){return(0,F.tensorFromGpuBuffer)(N,D)}static fromMLTensor(N,D){return(0,F.tensorFromMLTensor)(N,D)}static fromPinnedBuffer(N,D,R){return(0,F.tensorFromPinnedBuffer)(N,D,R)}toDataURL(N){return(0,w.tensorToDataURL)(this,N)}toImageData(N){return(0,w.tensorToImageData)(this,N)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}get mlTensor(){if(this.ensureValid(),!this.mlTensorData)throw new Error("The data is not stored as a WebNN MLTensor.");return this.mlTensorData}async getData(N){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":case"ml-tensor":if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;const D=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=D,N&&this.disposer&&(this.disposer(),this.disposer=void 0),D}finally{this.isDownloading=!1}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.mlTensorData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if(this.dataLocation==="none")throw new Error("The tensor is disposed.")}reshape(N){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return(0,U.tensorReshape)(this,N)}}},"./node_modules/onnxruntime-common/dist/esm/tensor-utils-impl.js":(T,k,A)=>{A.r(k),A.d(k,{calculateSize:()=>F,tensorReshape:()=>Y});var w=A("./node_modules/onnxruntime-common/dist/esm/tensor-impl.js");const F=U=>{let H=1;for(let z=0;z<U.length;z++){const N=U[z];if(typeof N!="number"||!Number.isSafeInteger(N))throw new TypeError(`dims[${z}] must be an integer, got: ${N}`);if(N<0)throw new RangeError(`dims[${z}] must be a non-negative integer, got: ${N}`);H*=N}return H},Y=(U,H)=>{switch(U.location){case"cpu":return new w.Tensor(U.type,U.data,H);case"cpu-pinned":return new w.Tensor({location:"cpu-pinned",data:U.data,type:U.type,dims:H});case"texture":return new w.Tensor({location:"texture",texture:U.texture,type:U.type,dims:H});case"gpu-buffer":return new w.Tensor({location:"gpu-buffer",gpuBuffer:U.gpuBuffer,type:U.type,dims:H});case"ml-tensor":return new w.Tensor({location:"ml-tensor",mlTensor:U.mlTensor,type:U.type,dims:H});default:throw new Error(`tensorReshape: tensor location ${U.location} is not supported`)}}},"./node_modules/onnxruntime-common/dist/esm/tensor.js":(T,k,A)=>{A.r(k),A.d(k,{Tensor:()=>w});const w=A("./node_modules/onnxruntime-common/dist/esm/tensor-impl.js").Tensor},"./node_modules/onnxruntime-common/dist/esm/trace.js":(T,k,A)=>{A.r(k),A.d(k,{TRACE:()=>F,TRACE_FUNC_BEGIN:()=>U,TRACE_FUNC_END:()=>H});var w=A("./node_modules/onnxruntime-common/dist/esm/env-impl.js");const F=(z,N)=>{(w.env.trace===void 0?w.env.wasm.trace:w.env.trace)&&console.timeStamp(`${z}::ORT::${N}`)},Y=(z,N)=>{var Q;const D=((Q=new Error().stack)==null?void 0:Q.split(/\r\n|\r|\n/g))||[];let R=!1;for(let J=0;J<D.length;J++){if(R&&!D[J].includes("TRACE_FUNC")){let oe=`FUNC_${z}::${D[J].trim().split(" ")[1]}`;return N&&(oe+=`::${N}`),void F("CPU",oe)}D[J].includes("TRACE_FUNC")&&(R=!0)}},U=z=>{(w.env.trace===void 0?w.env.wasm.trace:w.env.trace)&&Y("BEGIN",z)},H=z=>{(w.env.trace===void 0?w.env.wasm.trace:w.env.trace)&&Y("END",z)}},"./node_modules/onnxruntime-common/dist/esm/training-session-impl.js":(T,k,A)=>{A.r(k),A.d(k,{TrainingSession:()=>Y});var w=A("./node_modules/onnxruntime-common/dist/esm/backend-impl.js"),F=A("./node_modules/onnxruntime-common/dist/esm/tensor.js");class Y{constructor(H,z,N){this.handler=H,this.hasOptimizerModel=z,this.hasEvalModel=N}get trainingInputNames(){return this.handler.inputNames}get trainingOutputNames(){return this.handler.outputNames}get evalInputNames(){if(this.hasEvalModel)return this.handler.evalInputNames;throw new Error("This training session has no evalModel loaded.")}get evalOutputNames(){if(this.hasEvalModel)return this.handler.evalOutputNames;throw new Error("This training session has no evalModel loaded.")}static async create(H,z){const N=H.evalModel||"",D=H.optimizerModel||"",R=z||{},[Q,J]=await(0,w.resolveBackendAndExecutionProviders)(R);if(Q.createTrainingSessionHandler){const oe=await Q.createTrainingSessionHandler(H.checkpointState,H.trainModel,N,D,J);return new Y(oe,!!H.optimizerModel,!!H.evalModel)}throw new Error("Training backend could not be resolved. Make sure you're using the correct configuration & WebAssembly files.")}typeNarrowingForRunStep(H,z,N,D,R){const Q={};let J={};if(typeof N!="object"||N===null||N instanceof F.Tensor||Array.isArray(N))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let oe=!0;if(typeof D=="object"){if(D===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(D instanceof F.Tensor)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(D)){if(D.length===0)throw new TypeError("'fetches' cannot be an empty array.");oe=!1;for(const be of D){if(typeof be!="string")throw new TypeError("'fetches' must be a string array or an object.");if(z.indexOf(be)===-1)throw new RangeError(`'fetches' contains invalid output name: ${be}.`);Q[be]=null}if(typeof R=="object"&&R!==null)J=R;else if(R!==void 0)throw new TypeError("'options' must be an object.")}else{let be=!1;const Ie=Object.getOwnPropertyNames(D);for(const ee of z)if(Ie.indexOf(ee)!==-1){const re=D[ee];(re===null||re instanceof F.Tensor)&&(be=!0,oe=!1,Q[ee]=re)}if(be){if(typeof R=="object"&&R!==null)J=R;else if(R!==void 0)throw new TypeError("'options' must be an object.")}else J=D}}else if(D!==void 0)throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(const be of H)if(N[be]===void 0)throw new Error(`input '${be}' is missing in 'feeds'.`);if(oe)for(const be of z)Q[be]=null;return[Q,J]}convertHandlerReturnTypeToMapOfTensors(H){const z={};for(const N in H)if(Object.hasOwnProperty.call(H,N)){const D=H[N];D instanceof F.Tensor?z[N]=D:z[N]=new F.Tensor(D.type,D.data,D.dims)}return z}async lazyResetGrad(){await this.handler.lazyResetGrad()}async runTrainStep(H,z,N){const[D,R]=this.typeNarrowingForRunStep(this.trainingInputNames,this.trainingOutputNames,H,z,N),Q=await this.handler.runTrainStep(H,D,R);return this.convertHandlerReturnTypeToMapOfTensors(Q)}async runOptimizerStep(H){if(!this.hasOptimizerModel)throw new Error("This TrainingSession has no OptimizerModel loaded.");await this.handler.runOptimizerStep(H||{})}async runEvalStep(H,z,N){if(this.hasEvalModel){const[D,R]=this.typeNarrowingForRunStep(this.evalInputNames,this.evalOutputNames,H,z,N),Q=await this.handler.runEvalStep(H,D,R);return this.convertHandlerReturnTypeToMapOfTensors(Q)}throw new Error("This TrainingSession has no EvalModel loaded.")}async getParametersSize(H=!0){return this.handler.getParametersSize(H)}async loadParametersBuffer(H,z=!0){const N=await this.getParametersSize(z);if(H.length!==4*N)throw new Error("Size of the buffer passed into loadParametersBuffer must match the number of parameters in the model. Please use getParametersSize method to check.");return this.handler.loadParametersBuffer(H,z)}async getContiguousParameters(H=!0){return this.handler.getContiguousParameters(H)}async release(){return this.handler.dispose()}}},"./node_modules/onnxruntime-common/dist/esm/training-session.js":(T,k,A)=>{A.r(k),A.d(k,{TrainingSession:()=>w});const w=A("./node_modules/onnxruntime-common/dist/esm/training-session-impl.js").TrainingSession},"./node_modules/onnxruntime-common/dist/esm/version.js":(T,k,A)=>{A.r(k),A.d(k,{version:()=>w});const w="1.20.1"},"./node_modules/onnxruntime-web/dist/ort.bundle.min.mjs?3a96":(T,k,A)=>{A.r(k),A.d(k,{InferenceSession:()=>Ct,TRACE:()=>Ve,TRACE_FUNC_BEGIN:()=>Re,TRACE_FUNC_END:()=>Ke,Tensor:()=>K,default:()=>Q2,env:()=>R,registerBackend:()=>Y});var w,F,Y,U,H,z,N,D,R,Q,J,oe,be,Ie,ee,re,ce,g,I,e,u,B,ue,G,K,Ve,ve,Re,Ke,nt,Ct,ht=Object.defineProperty,et=Object.getOwnPropertyDescriptor,ze=Object.getOwnPropertyNames,Se=Object.prototype.hasOwnProperty,xe=(c=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(c,{get:(h,_)=>(typeof require<"u"?require:h)[_]}):c)(function(c){if(typeof require<"u")return require.apply(this,arguments);throw Error('Dynamic require of "'+c+'" is not supported')}),Me=(c,h)=>()=>(c&&(h=c(c=0)),h),ft=(c,h)=>{for(var _ in h)ht(c,_,{get:h[_],enumerable:!0})},gt=c=>((h,_,S,V)=>{if(_&&typeof _=="object"||typeof _=="function")for(let n of ze(_))!Se.call(h,n)&&n!==S&&ht(h,n,{get:()=>_[n],enumerable:!(V=et(_,n))||V.enumerable});return h})(ht({},"__esModule",{value:!0}),c),_t=Me(()=>{w=new Map,F=[],Y=(c,h,_)=>{if(!h||typeof h.init!="function"||typeof h.createInferenceSessionHandler!="function")throw new TypeError("not a valid backend");{let S=w.get(c);if(S===void 0)w.set(c,{backend:h,priority:_});else{if(S.priority>_)return;if(S.priority===_&&S.backend!==h)throw new Error(`cannot register backend "${c}" using priority ${_}`)}if(_>=0){let V=F.indexOf(c);V!==-1&&F.splice(V,1);for(let n=0;n<F.length;n++)if(w.get(F[n]).priority<=_)return void F.splice(n,0,c);F.push(c)}}},U=async c=>{let h=w.get(c);if(!h)return"backend not found.";if(h.initialized)return h.backend;if(h.aborted)return h.error;{let _=!!h.initPromise;try{return _||(h.initPromise=h.backend.init(c)),await h.initPromise,h.initialized=!0,h.backend}catch(S){return _||(h.error=`${S}`,h.aborted=!0),h.error}finally{delete h.initPromise}}},H=async c=>{let h,_=c.executionProviders||[],S=_.map(b=>typeof b=="string"?b:b.name),V=S.length===0?F:S,n=[],l=new Set;for(let b of V){let C=await U(b);typeof C=="string"?n.push({name:b,err:C}):(h||(h=C),h===C&&l.add(b))}if(!h)throw new Error(`no available backend found. ERR: ${n.map(b=>`[${b.name}] ${b.err}`).join(", ")}`);for(let{name:b,err:C}of n)S.includes(b)&&console.warn(`removing requested execution provider "${b}" from session options because it is not available: ${C}`);let p=_.filter(b=>l.has(typeof b=="string"?b:b.name));return[h,new Proxy(c,{get:(b,C)=>C==="executionProviders"?p:Reflect.get(b,C)})]}}),Je=Me(()=>{_t()}),bt=Me(()=>{z="1.21.0-dev.20250206-d981b153d3"}),rt=Me(()=>{bt(),N="warning",D={wasm:{},webgl:{},webgpu:{},versions:{common:z},set logLevel(c){if(c!==void 0){if(typeof c!="string"||["verbose","info","warning","error","fatal"].indexOf(c)===-1)throw new Error(`Unsupported logging level: ${c}`);N=c}},get logLevel(){return N}},Object.defineProperty(D,"logLevel",{enumerable:!0})}),Ne=Me(()=>{rt(),R=D}),it=Me(()=>{Q=(c,h)=>{let _=typeof document<"u"?document.createElement("canvas"):new OffscreenCanvas(1,1);_.width=c.dims[3],_.height=c.dims[2];let S=_.getContext("2d");if(S!=null){let V,n;(h==null?void 0:h.tensorLayout)!==void 0&&h.tensorLayout==="NHWC"?(V=c.dims[2],n=c.dims[3]):(V=c.dims[3],n=c.dims[2]);let l,p,b=(h==null?void 0:h.format)!==void 0?h.format:"RGB",C=h==null?void 0:h.norm;C===void 0||C.mean===void 0?l=[255,255,255,255]:typeof C.mean=="number"?l=[C.mean,C.mean,C.mean,C.mean]:(l=[C.mean[0],C.mean[1],C.mean[2],0],C.mean[3]!==void 0&&(l[3]=C.mean[3])),C===void 0||C.bias===void 0?p=[0,0,0,0]:typeof C.bias=="number"?p=[C.bias,C.bias,C.bias,C.bias]:(p=[C.bias[0],C.bias[1],C.bias[2],0],C.bias[3]!==void 0&&(p[3]=C.bias[3]));let E=n*V,v=0,x=E,L=2*E,W=-1;b==="RGBA"?(v=0,x=E,L=2*E,W=3*E):b==="RGB"?(v=0,x=E,L=2*E):b==="RBG"&&(v=0,L=E,x=2*E);for(let te=0;te<n;te++)for(let $=0;$<V;$++){let j=(c.data[v++]-p[0])*l[0],le=(c.data[x++]-p[1])*l[1],me=(c.data[L++]-p[2])*l[2],_e=W===-1?255:(c.data[W++]-p[3])*l[3];S.fillStyle="rgba("+j+","+le+","+me+","+_e+")",S.fillRect($,te,1,1)}if("toDataURL"in _)return _.toDataURL();throw new Error("toDataURL is not supported")}throw new Error("Can not access image data")},J=(c,h)=>{let _,S=typeof document<"u"?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d");if(S==null)throw new Error("Can not access image data");{let V,n,l;(h==null?void 0:h.tensorLayout)!==void 0&&h.tensorLayout==="NHWC"?(V=c.dims[2],n=c.dims[1],l=c.dims[3]):(V=c.dims[3],n=c.dims[2],l=c.dims[1]);let p,b,C=h!==void 0&&h.format!==void 0?h.format:"RGB",E=h==null?void 0:h.norm;E===void 0||E.mean===void 0?p=[255,255,255,255]:typeof E.mean=="number"?p=[E.mean,E.mean,E.mean,E.mean]:(p=[E.mean[0],E.mean[1],E.mean[2],255],E.mean[3]!==void 0&&(p[3]=E.mean[3])),E===void 0||E.bias===void 0?b=[0,0,0,0]:typeof E.bias=="number"?b=[E.bias,E.bias,E.bias,E.bias]:(b=[E.bias[0],E.bias[1],E.bias[2],0],E.bias[3]!==void 0&&(b[3]=E.bias[3]));let v=n*V;if(h!==void 0&&(h.format!==void 0&&l===4&&h.format!=="RGBA"||l===3&&h.format!=="RGB"&&h.format!=="BGR"))throw new Error("Tensor format doesn't match input tensor dims");let x=4,L=0,W=1,te=2,$=3,j=0,le=v,me=2*v,_e=-1;C==="RGBA"?(j=0,le=v,me=2*v,_e=3*v):C==="RGB"?(j=0,le=v,me=2*v):C==="RBG"&&(j=0,me=v,le=2*v),_=S.createImageData(V,n);for(let Ee=0;Ee<n*V;L+=x,W+=x,te+=x,$+=x,Ee++)_.data[L]=(c.data[j++]-b[0])*p[0],_.data[W]=(c.data[le++]-b[1])*p[1],_.data[te]=(c.data[me++]-b[2])*p[2],_.data[$]=_e===-1?255:(c.data[_e++]-b[3])*p[3]}return _}}),Et=Me(()=>{Tt(),oe=(c,h)=>{if(c===void 0)throw new Error("Image buffer must be defined");if(h.height===void 0||h.width===void 0)throw new Error("Image height and width must be defined");if(h.tensorLayout==="NHWC")throw new Error("NHWC Tensor layout is not supported yet");let _,S,{height:V,width:n}=h,l=h.norm??{mean:255,bias:0};_=typeof l.mean=="number"?[l.mean,l.mean,l.mean,l.mean]:[l.mean[0],l.mean[1],l.mean[2],l.mean[3]??255],S=typeof l.bias=="number"?[l.bias,l.bias,l.bias,l.bias]:[l.bias[0],l.bias[1],l.bias[2],l.bias[3]??0];let p=h.format!==void 0?h.format:"RGBA",b=h.tensorFormat!==void 0&&h.tensorFormat!==void 0?h.tensorFormat:"RGB",C=V*n,E=b==="RGBA"?new Float32Array(4*C):new Float32Array(3*C),v=4,x=0,L=1,W=2,te=3,$=0,j=C,le=2*C,me=-1;p==="RGB"&&(v=3,x=0,L=1,W=2,te=-1),b==="RGBA"?me=3*C:b==="RBG"?($=0,le=C,j=2*C):b==="BGR"&&(le=0,j=C,$=2*C);for(let _e=0;_e<C;_e++,x+=v,W+=v,L+=v,te+=v)E[$++]=(c[x]+S[0])/_[0],E[j++]=(c[L]+S[1])/_[1],E[le++]=(c[W]+S[2])/_[2],me!==-1&&te!==-1&&(E[me++]=(c[te]+S[3])/_[3]);return new G("float32",E,b==="RGBA"?[1,4,V,n]:[1,3,V,n])},be=async(c,h)=>{let _,S=typeof HTMLImageElement<"u"&&c instanceof HTMLImageElement,V=typeof ImageData<"u"&&c instanceof ImageData,n=typeof ImageBitmap<"u"&&c instanceof ImageBitmap,l=typeof c=="string",p=h??{},b=()=>{if(typeof document<"u")return document.createElement("canvas");if(typeof OffscreenCanvas<"u")return new OffscreenCanvas(1,1);throw new Error("Canvas is not supported")},C=E=>typeof HTMLCanvasElement<"u"&&E instanceof HTMLCanvasElement||E instanceof OffscreenCanvas?E.getContext("2d"):null;if(S){let E=b();E.width=c.width,E.height=c.height;let v=C(E);if(v==null)throw new Error("Can not access image data");{let x=c.height,L=c.width;if(h!==void 0&&h.resizedHeight!==void 0&&h.resizedWidth!==void 0&&(x=h.resizedHeight,L=h.resizedWidth),h!==void 0){if(p=h,h.tensorFormat!==void 0)throw new Error("Image input config format must be RGBA for HTMLImageElement");p.tensorFormat="RGBA",p.height=x,p.width=L}else p.tensorFormat="RGBA",p.height=x,p.width=L;v.drawImage(c,0,0),_=v.getImageData(0,0,L,x).data}}else{if(!V){if(n){if(h===void 0)throw new Error("Please provide image config with format for Imagebitmap");let E=b();E.width=c.width,E.height=c.height;let v=C(E);if(v!=null){let x=c.height,L=c.width;return v.drawImage(c,0,0,L,x),_=v.getImageData(0,0,L,x).data,p.height=x,p.width=L,oe(_,p)}throw new Error("Can not access image data")}if(l)return new Promise((E,v)=>{let x=b(),L=C(x);if(!c||!L)return v();let W=new Image;W.crossOrigin="Anonymous",W.src=c,W.onload=()=>{x.width=W.width,x.height=W.height,L.drawImage(W,0,0,x.width,x.height);let te=L.getImageData(0,0,x.width,x.height);p.height=x.height,p.width=x.width,E(oe(te.data,p))}});throw new Error("Input data provided is not supported - aborted tensor creation")}{let E,v;if(h!==void 0&&h.resizedWidth!==void 0&&h.resizedHeight!==void 0?(E=h.resizedHeight,v=h.resizedWidth):(E=c.height,v=c.width),h!==void 0&&(p=h),p.format="RGBA",p.height=E,p.width=v,h!==void 0){let x=b();x.width=v,x.height=E;let L=C(x);if(L==null)throw new Error("Can not access image data");L.putImageData(c,0,0),_=L.getImageData(0,0,v,E).data}else _=c.data}}if(_!==void 0)return oe(_,p);throw new Error("Input data provided is not supported - aborted tensor creation")},Ie=(c,h)=>{let{width:_,height:S,download:V,dispose:n}=h;return new G({location:"texture",type:"float32",texture:c,dims:[1,S,_,4],download:V,dispose:n})},ee=(c,h)=>{let{dataType:_,dims:S,download:V,dispose:n}=h;return new G({location:"gpu-buffer",type:_??"float32",gpuBuffer:c,dims:S,download:V,dispose:n})},re=(c,h)=>{let{dataType:_,dims:S,download:V,dispose:n}=h;return new G({location:"ml-tensor",type:_??"float32",mlTensor:c,dims:S,download:V,dispose:n})},ce=(c,h,_)=>new G({location:"cpu-pinned",type:c,data:h,dims:_??[h.length]})}),$e=Me(()=>{g=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array],["int4",Uint8Array],["uint4",Uint8Array]]),I=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]),e=!1,u=()=>{if(!e){e=!0;let c=typeof BigInt64Array<"u"&&BigInt64Array.from,h=typeof BigUint64Array<"u"&&BigUint64Array.from,_=typeof Float16Array<"u"&&Float16Array.from;c&&(g.set("int64",BigInt64Array),I.set(BigInt64Array,"int64")),h&&(g.set("uint64",BigUint64Array),I.set(BigUint64Array,"uint64")),_?(g.set("float16",Float16Array),I.set(Float16Array,"float16")):g.set("float16",Uint16Array)}}}),It=Me(()=>{Tt(),B=c=>{let h=1;for(let _=0;_<c.length;_++){let S=c[_];if(typeof S!="number"||!Number.isSafeInteger(S))throw new TypeError(`dims[${_}] must be an integer, got: ${S}`);if(S<0)throw new RangeError(`dims[${_}] must be a non-negative integer, got: ${S}`);h*=S}return h},ue=(c,h)=>{switch(c.location){case"cpu":return new G(c.type,c.data,h);case"cpu-pinned":return new G({location:"cpu-pinned",data:c.data,type:c.type,dims:h});case"texture":return new G({location:"texture",texture:c.texture,type:c.type,dims:h});case"gpu-buffer":return new G({location:"gpu-buffer",gpuBuffer:c.gpuBuffer,type:c.type,dims:h});case"ml-tensor":return new G({location:"ml-tensor",mlTensor:c.mlTensor,type:c.type,dims:h});default:throw new Error(`tensorReshape: tensor location ${c.location} is not supported`)}}}),Tt=Me(()=>{it(),Et(),$e(),It(),G=class{constructor(c,h,_){let S,V;if(u(),typeof c=="object"&&"location"in c)switch(this.dataLocation=c.location,S=c.type,V=c.dims,c.location){case"cpu-pinned":{let l=g.get(S);if(!l)throw new TypeError(`unsupported type "${S}" to create tensor from pinned buffer`);if(!(c.data instanceof l))throw new TypeError(`buffer should be of type ${l.name}`);this.cpuData=c.data;break}case"texture":if(S!=="float32")throw new TypeError(`unsupported type "${S}" to create tensor from texture`);this.gpuTextureData=c.texture,this.downloader=c.download,this.disposer=c.dispose;break;case"gpu-buffer":if(S!=="float32"&&S!=="float16"&&S!=="int32"&&S!=="int64"&&S!=="uint32"&&S!=="uint8"&&S!=="bool"&&S!=="uint4"&&S!=="int4")throw new TypeError(`unsupported type "${S}" to create tensor from gpu buffer`);this.gpuBufferData=c.gpuBuffer,this.downloader=c.download,this.disposer=c.dispose;break;case"ml-tensor":if(S!=="float32"&&S!=="float16"&&S!=="int32"&&S!=="int64"&&S!=="uint32"&&S!=="uint64"&&S!=="int8"&&S!=="uint8"&&S!=="bool"&&S!=="uint4"&&S!=="int4")throw new TypeError(`unsupported type "${S}" to create tensor from MLTensor`);this.mlTensorData=c.mlTensor,this.downloader=c.download,this.disposer=c.dispose;break;default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let l,p;if(typeof c=="string")if(S=c,p=_,c==="string"){if(!Array.isArray(h))throw new TypeError("A string tensor's data must be a string array.");l=h}else{let b=g.get(c);if(b===void 0)throw new TypeError(`Unsupported tensor type: ${c}.`);if(Array.isArray(h)){if(c==="float16"&&b===Uint16Array||c==="uint4"||c==="int4")throw new TypeError(`Creating a ${c} tensor from number array is not supported. Please use ${b.name} as data.`);l=c==="uint64"||c==="int64"?b.from(h,BigInt):b.from(h)}else if(h instanceof b)l=h;else{if(!(h instanceof Uint8ClampedArray))throw new TypeError(`A ${S} tensor's data must be type of ${b}`);if(c!=="uint8")throw new TypeError("A Uint8ClampedArray tensor's data must be type of uint8");l=Uint8Array.from(h)}}else if(p=h,Array.isArray(c)){if(c.length===0)throw new TypeError("Tensor type cannot be inferred from an empty array.");let b=typeof c[0];if(b==="string")S="string",l=c;else{if(b!=="boolean")throw new TypeError(`Invalid element type of data array: ${b}.`);S="bool",l=Uint8Array.from(c)}}else if(c instanceof Uint8ClampedArray)S="uint8",l=Uint8Array.from(c);else{let b=I.get(c.constructor);if(b===void 0)throw new TypeError(`Unsupported type for tensor data: ${c.constructor}.`);S=b,l=c}if(p===void 0)p=[l.length];else if(!Array.isArray(p))throw new TypeError("A tensor's dims must be a number array");V=p,this.cpuData=l,this.dataLocation="cpu"}let n=B(V);if(this.cpuData&&n!==this.cpuData.length&&(S!=="uint4"&&S!=="int4"||Math.ceil(n/2)!==this.cpuData.length))throw new Error(`Tensor's size(${n}) does not match data length(${this.cpuData.length}).`);this.type=S,this.dims=V,this.size=n}static async fromImage(c,h){return be(c,h)}static fromTexture(c,h){return Ie(c,h)}static fromGpuBuffer(c,h){return ee(c,h)}static fromMLTensor(c,h){return re(c,h)}static fromPinnedBuffer(c,h,_){return ce(c,h,_)}toDataURL(c){return Q(this,c)}toImageData(c){return J(this,c)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}get mlTensor(){if(this.ensureValid(),!this.mlTensorData)throw new Error("The data is not stored as a WebNN MLTensor.");return this.mlTensorData}async getData(c){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":case"ml-tensor":if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;let h=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=h,c&&this.disposer&&(this.disposer(),this.disposer=void 0),h}finally{this.isDownloading=!1}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.mlTensorData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if(this.dataLocation==="none")throw new Error("The tensor is disposed.")}reshape(c){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return ue(this,c)}}}),zt=Me(()=>{Tt(),K=G}),Wt=Me(()=>{rt(),Ve=(c,h)=>{(typeof D.trace>"u"?!D.wasm.trace:!D.trace)||console.timeStamp(`${c}::ORT::${h}`)},ve=(c,h)=>{var V;let _=((V=new Error().stack)==null?void 0:V.split(/\r\n|\r|\n/g))||[],S=!1;for(let n=0;n<_.length;n++){if(S&&!_[n].includes("TRACE_FUNC")){let l=`FUNC_${c}::${_[n].trim().split(" ")[1]}`;return h&&(l+=`::${h}`),void Ve("CPU",l)}_[n].includes("TRACE_FUNC")&&(S=!0)}},Re=c=>{(typeof D.trace>"u"?!D.wasm.trace:!D.trace)||ve("BEGIN",c)},Ke=c=>{(typeof D.trace>"u"?!D.wasm.trace:!D.trace)||ve("END",c)}}),pe=Me(()=>{_t(),zt(),Wt(),nt=class Fp{constructor(h){this.handler=h}async run(h,_,S){Re();let V={},n={};if(typeof h!="object"||h===null||h instanceof K||Array.isArray(h))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let l=!0;if(typeof _=="object"){if(_===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(_ instanceof K)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(_)){if(_.length===0)throw new TypeError("'fetches' cannot be an empty array.");l=!1;for(let C of _){if(typeof C!="string")throw new TypeError("'fetches' must be a string array or an object.");if(this.outputNames.indexOf(C)===-1)throw new RangeError(`'fetches' contains invalid output name: ${C}.`);V[C]=null}if(typeof S=="object"&&S!==null)n=S;else if(typeof S<"u")throw new TypeError("'options' must be an object.")}else{let C=!1,E=Object.getOwnPropertyNames(_);for(let v of this.outputNames)if(E.indexOf(v)!==-1){let x=_[v];(x===null||x instanceof K)&&(C=!0,l=!1,V[v]=x)}if(C){if(typeof S=="object"&&S!==null)n=S;else if(typeof S<"u")throw new TypeError("'options' must be an object.")}else n=_}}else if(typeof _<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let C of this.inputNames)if(typeof h[C]>"u")throw new Error(`input '${C}' is missing in 'feeds'.`);if(l)for(let C of this.outputNames)V[C]=null;let p=await this.handler.run(h,V,n),b={};for(let C in p)if(Object.hasOwnProperty.call(p,C)){let E=p[C];b[C]=E instanceof K?E:new K(E.type,E.data,E.dims)}return Ke(),b}async release(){return this.handler.dispose()}static async create(h,_,S,V){Re();let n,l={};if(typeof h=="string"){if(n=h,typeof _=="object"&&_!==null)l=_;else if(typeof _<"u")throw new TypeError("'options' must be an object.")}else if(h instanceof Uint8Array){if(n=h,typeof _=="object"&&_!==null)l=_;else if(typeof _<"u")throw new TypeError("'options' must be an object.")}else{if(!(h instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&h instanceof SharedArrayBuffer))throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");{let E=h,v=0,x=h.byteLength;if(typeof _=="object"&&_!==null)l=_;else if(typeof _=="number"){if(v=_,!Number.isSafeInteger(v))throw new RangeError("'byteOffset' must be an integer.");if(v<0||v>=E.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${E.byteLength}).`);if(x=h.byteLength-v,typeof S=="number"){if(x=S,!Number.isSafeInteger(x))throw new RangeError("'byteLength' must be an integer.");if(x<=0||v+x>E.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${E.byteLength-v}].`);if(typeof V=="object"&&V!==null)l=V;else if(typeof V<"u")throw new TypeError("'options' must be an object.")}else if(typeof S<"u")throw new TypeError("'byteLength' must be a number.")}else if(typeof _<"u")throw new TypeError("'options' must be an object.");n=new Uint8Array(E,v,x)}}let[p,b]=await H(l),C=await p.createInferenceSessionHandler(n,b);return Ke(),new Fp(C)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}}}),Ut=Me(()=>{pe(),Ct=nt}),Pe=Me(()=>{}),X=Me(()=>{}),ge=Me(()=>{}),fe=Me(()=>{}),He={};ft(He,{InferenceSession:()=>Ct,TRACE:()=>Ve,TRACE_FUNC_BEGIN:()=>Re,TRACE_FUNC_END:()=>Ke,Tensor:()=>K,env:()=>R,registerBackend:()=>Y});var ct=Me(()=>{Je(),Ne(),Ut(),zt(),Pe(),X(),Wt(),ge(),fe()}),kt=Me(()=>{}),Dt={};ft(Dt,{default:()=>sr});var Ht,Vt,sr,nr=Me(()=>{var c;z2(),bA(),L0(),Ht="ort-wasm-proxy-worker",(Vt=((c=globalThis.self)==null?void 0:c.name)===Ht)&&(self.onmessage=h=>{let{type:_,in:S}=h.data;try{switch(_){case"init-wasm":Qr(S.wasm).then(()=>{ka(S).then(()=>{postMessage({type:_})},V=>{postMessage({type:_,err:V})})},V=>{postMessage({type:_,err:V})});break;case"init-ep":{let{epName:V,env:n}=S;on(n,V).then(()=>{postMessage({type:_})},l=>{postMessage({type:_,err:l})});break}case"copy-from":{let{buffer:V}=S,n=vo(V);postMessage({type:_,out:n});break}case"create":{let{model:V,options:n}=S;Wo(V,n).then(l=>{postMessage({type:_,out:l})},l=>{postMessage({type:_,err:l})});break}case"release":UA(S),postMessage({type:_});break;case"run":{let{sessionId:V,inputIndices:n,inputs:l,outputIndices:p,options:b}=S;_l(V,n,l,p,new Array(p.length).fill(null),b).then(C=>{C.some(E=>E[3]!=="cpu")?postMessage({type:_,err:"Proxy does not support non-cpu tensor location."}):postMessage({type:_,out:C},e0([...l,...C]))},C=>{postMessage({type:_,err:C})});break}case"end-profiling":HA(S),postMessage({type:_})}}catch(V){postMessage({type:_,err:V})}}),sr=Vt?null:h=>new Worker(h??Ks,{type:"module",name:Ht})}),lr={};ft(lr,{default:()=>Gs});var Fr,ns,Gs,Cs,Ks,is,wn,oa,Ea,gr,Wr,vr,Es,pn,Ba,In,ln,hn,kn,sa,tr,Qr,jr,Vs,xn,Ss,Ls,Xa,_a,Tn,Ms,Mi,Ma,Jn,$n,Ei,Pn,Dn,ma,Bi,Vn,Sn,cn,ei,ti,ri,ds,ys,qr,pi,Ai,hi,Wn,Gn,qt,Qe,ut,wt,tt,Ae,Ge,at,Le,vt,Pt,ir,yr,hr,xr,Gr,wr,_r,gs,Xr,hs,Bs,Or,Kt,rr,Lr,Rs,Ws,Vr,Js,qs,es,_s,Rr,cs,Da,Us,Ua,Ir,Sa,or,ss,qA,kA,XA,lo,ws,ZA,Eo,Mn,tn,Hr,yn,Un,Uo,Ho,Ni,Yo,yA,Dl,Fn,aa,Bo,To,_n,Li,mi,Hn,Ri,Xi,JA,_A,$A,Br,ji,Nr,vA,Ko,En,Ga,Vi,Zi,qo,ia,xA,el,Wi,Ji,tl,Xo,$i,zr,li,Zo,zn,Ti,Jo,rl,sl,Po,al,nl,La,il,ol,ps,Fs,MA,ci,EA,mn,bi,Za,Pi,Do,BA,So,Go,Ta,co,$o,un,uo,Ci,Al,TA,eA,tA,Di,Fo,ea,PA,rA,Si,sA,Ra,DA,aA,go,On,zo,nA,ui,SA,Oo,fo,po,Qo,ll,GA,dn,No,gn,FA,iA,Yn,ba,zA,Gi,ho,cl,oA,OA,ul,wi,di,AA,eo,rn,na,mo,dl,Fi,Ui,Hi,QA,bn,NA,gl,bo,Lo,Ca,lA,cA,to,fl,Co,os,t,r,s,a,i,o,d,f,m,M,y,P,q,ae,de,ye,Be,qe,ot,pt,Mt,Ft,Lt,Xt,Ar,Mr,Tr,Yr,$r,ls,Ts,Hs,$s,ga,fa,Pa,Fa,za,Ha,Ya,Ja,sn,vn,si,Ii,zi,Yi,Ro,ro,wo,so,LA,uA,RA,Io,J0,$0,Sl,fu,ec,tc,rc,i0,o0,A0,l0,sc,c0,Gl,ac,pu,Fl,nc,ic,oc,Ac,Ki,ao,dA,gA,hu,zl,jA,Ol,lc,cc,u0,uc,d0,an,dc,gc,g0,fc,fA,jo,pc,hc,mu,Ql,Nl,bu,mc,pl,bc,hl,Cu,f0,Ll,ml,wu,Cc,Iu,wc,Rl,ku,VA,Ic,yu,kc,_u,yc,WA,_c,jl,ed,no,ko,pA,hA,mA,p0,h0,m0,Vl,vc,xc,bl,b0,Mc,Wl,Kn,Ec,C0,Ul,w0,yo,vu,Bc,Tc,I0,k0,Hl,y0,Pc,Dc,Yl,xu,Mu,Cl,_0,Eu,Kl,v0,Bu,x0,M0,Sc,Gc,ql,Tu,Fc,Xl,Pu,zc,E0,Oc,Qc,Nc,Lc,Rc,jc,B0,Vc,Wc,Aa,Du,Zl,Uc,T0,wl,la,Hc,Yc,P0,Jl,Su,D0,$l,S0,Kc,G0,Gu,qc,F0,z0,Fu,zu,Xc,Ou,Zc,Jc,$c,eu,Qu,tu,O0,Q0,ru,su,Nu,au,N0,Lu,Ru=Me(()=>{var c;Fr=import.meta.url,ns=async function(h={}){function _(){return St.buffer!=ur.buffer&&Ds(),ur}function S(){return St.buffer!=ur.buffer&&Ds(),Jr}function V(){return St.buffer!=ur.buffer&&Ds(),Sr}function n(){return St.buffer!=ur.buffer&&Ds(),As}function l(){return St.buffer!=ur.buffer&&Ds(),Xs}function p(){return St.buffer!=ur.buffer&&Ds(),bs}function b(){return St.buffer!=ur.buffer&&Ds(),vs}function C(){return St.buffer!=ur.buffer&&Ds(),Kr}var E,v,x=Object.assign({},h),L=new Promise((Z,Ce)=>{E=Z,v=Ce}),W=typeof window=="object",te=typeof importScripts=="function",$=te&&self.name=="em-pthread";x.mountExternalData=(Z,Ce)=>{Z.startsWith("./")&&(Z=Z.substring(2)),(x.Fb||(x.Fb=new Map)).set(Z,Ce)},x.unmountExternalData=()=>{delete x.Fb};var j=globalThis.SharedArrayBuffer??new WebAssembly.Memory({initial:0,maximum:0,shared:!0}).buffer.constructor;let le=()=>{let Z=(Oe,Xe,lt)=>(...O)=>{let ne=n0,we=Xe==null?void 0:Xe();O=Oe(...O);let De=Xe==null?void 0:Xe();return we!==De&&(Oe=De,lt(we),Xe=lt=null),n0!=ne?new Promise((Ze,Bt)=>{g2={resolve:Ze,reject:Bt}}):O},Ce=Oe=>async(...Xe)=>{var lt;try{if(x.Gb)throw Error("Session already started");let O=x.Gb={hc:Xe[0],errors:[]},ne=await Oe(...Xe);if(x.Gb!==O)throw Error("Session mismatch");(lt=x.Hb)==null||lt.flush();let we=O.errors;if(0<we.length){let De=await Promise.all(we);if(De=De.filter(Ze=>Ze),0<De.length)throw Error(De.join(`
`))}return ne}finally{x.Gb=null}};x._OrtCreateSession=Z(x._OrtCreateSession,()=>x._OrtCreateSession,Oe=>x._OrtCreateSession=Oe),x._OrtRun=Ce(Z(x._OrtRun,()=>x._OrtRun,Oe=>x._OrtRun=Oe)),x._OrtRunWithBinding=Ce(Z(x._OrtRunWithBinding,()=>x._OrtRunWithBinding,Oe=>x._OrtRunWithBinding=Oe)),x._OrtBindInput=Z(x._OrtBindInput,()=>x._OrtBindInput,Oe=>x._OrtBindInput=Oe),le=void 0};x.jsepInit=(Z,Ce)=>{if(le==null||le(),Z==="webgpu"){[x.Hb,x.Vb,x.Zb,x.Ob,x.Yb,x.kb,x.$b,x.cc,x.Wb,x.Xb,x.ac]=Ce;let Oe=x.Hb;x.jsepRegisterBuffer=(Xe,lt,O,ne)=>Oe.registerBuffer(Xe,lt,O,ne),x.jsepGetBuffer=Xe=>Oe.getBuffer(Xe),x.jsepCreateDownloader=(Xe,lt,O)=>Oe.createDownloader(Xe,lt,O),x.jsepOnCreateSession=Xe=>{Oe.onCreateSession(Xe)},x.jsepOnReleaseSession=Xe=>{Oe.onReleaseSession(Xe)},x.jsepOnRunStart=Xe=>Oe.onRunStart(Xe),x.dc=(Xe,lt)=>{Oe.upload(Xe,lt)}}else if(Z==="webnn"){[x.Hb,x.bc,x.Pb,x.jsepEnsureTensor,x.ec,x.jsepDownloadTensor]=Ce,x.jsepReleaseTensorId=x.Pb;let Oe=x.Hb;x.jsepOnRunStart=Xe=>Oe.onRunStart(Xe),x.jsepRegisterMLContext=(Xe,lt)=>{Oe.registerMLContext(Xe,lt)},x.jsepOnReleaseSession=Xe=>{Oe.onReleaseSession(Xe)},x.jsepCreateMLTensorDownloader=(Xe,lt)=>Oe.createMLTensorDownloader(Xe,lt),x.jsepRegisterMLTensor=(Xe,lt,O)=>Oe.registerMLTensor(Xe,lt,O),x.jsepCreateMLContext=Xe=>Oe.createMLContext(Xe),x.jsepRegisterMLConstant=(Xe,lt,O,ne,we)=>Oe.registerMLConstant(Xe,lt,O,ne,we,x.Fb)}};var me,_e,Ee=Object.assign({},x),Fe=(Z,Ce)=>{throw Ce},Ye="";(W||te)&&(te?Ye=self.location.href:typeof document<"u"&&document.currentScript&&(Ye=document.currentScript.src),Fr&&(Ye=Fr),Ye=Ye.startsWith("blob:")?"":Ye.substr(0,Ye.replace(/[?#].*/,"").lastIndexOf("/")+1),te&&(_e=Z=>{var Ce=new XMLHttpRequest;return Ce.open("GET",Z,!1),Ce.responseType="arraybuffer",Ce.send(null),new Uint8Array(Ce.response)}),me=(Z,Ce,Oe)=>{var Xe=new XMLHttpRequest;Xe.open("GET",Z,!0),Xe.responseType="arraybuffer",Xe.onload=()=>{Xe.status==200||Xe.status==0&&Xe.response?Ce(Xe.response):Oe()},Xe.onerror=Oe,Xe.send(null)});var dt,mt=console.log.bind(console),xt=console.error.bind(console),jt=mt,Gt=xt;if(Object.assign(x,Ee),Ee=null,$){let Z=function(Ce){try{var Oe=Ce.data,Xe=Oe.cmd;if(Xe==="load"){let lt=[];self.onmessage=O=>lt.push(O),self.startWorker=()=>{postMessage({cmd:"loaded"});for(let O of lt)Z(O);self.onmessage=Z};for(let O of Oe.handlers)x[O]&&!x[O].proxy||(x[O]=(...ne)=>{postMessage({Nb:"callHandler",pc:O,args:ne})},O=="print"&&(jt=x[O]),O=="printErr"&&(Gt=x[O]));St=Oe.wasmMemory,Ds(),Zt(Oe.wasmModule)}else if(Xe==="run"){w2(Oe.pthread_ptr,0,0,1,0,0),ag(Oe.pthread_ptr),Fg(),cu(),ar||(bg(),ar=!0);try{zg(Oe.start_routine,Oe.arg)}catch(lt){if(lt!="unwind")throw lt}}else Xe==="cancel"?wd()&&cd(-1):Oe.target!=="setimmediate"&&(Xe==="checkMailbox"?ar&&o2():Xe&&(Gt(`worker: received unknown command ${Xe}`),Gt(Oe)))}catch(lt){throw Fd(),lt}};var Zt,ar=!1;Gt=function(...Ce){Ce=Ce.join(" "),console.error(Ce)},self.alert=function(...Ce){postMessage({Nb:"alert",text:Ce.join(" "),rc:wd()})},x.instantiateWasm=(Ce,Oe)=>new Promise(Xe=>{Zt=lt=>{lt=new WebAssembly.Instance(lt,Kd()),Oe(lt),Xe()}}),self.onunhandledrejection=Ce=>{throw Ce.reason||Ce},self.onmessage=Z}x.wasmBinary&&(dt=x.wasmBinary);var St,kr,fr,ur,Jr,Sr,As,Xs,bs,vs,Ys,Er,Kr,js=!1;function Ds(){var Z=St.buffer;x.HEAP8=ur=new Int8Array(Z),x.HEAP16=Sr=new Int16Array(Z),x.HEAPU8=Jr=new Uint8Array(Z),x.HEAPU16=As=new Uint16Array(Z),x.HEAP32=Xs=new Int32Array(Z),x.HEAPU32=bs=new Uint32Array(Z),x.HEAPF32=vs=new Float32Array(Z),x.HEAPF64=Kr=new Float64Array(Z),x.HEAP64=Ys=new BigInt64Array(Z),x.HEAPU64=Er=new BigUint64Array(Z)}if(!$){if(!((St=new WebAssembly.Memory({initial:256,maximum:65536,shared:!0})).buffer instanceof j))throw Gt("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),Error("bad memory");Ds()}var va=[],_i=[],Ml=[],qi=0,Va=null;function ni(){if(--qi==0&&Va){var Z=Va;Va=null,Z()}}function xo(Z){throw Gt(Z="Aborted("+Z+")"),js=!0,fr=1,Z=new WebAssembly.RuntimeError(Z+". Build with -sASSERTIONS for more info."),v(Z),Z}var vd,Ju=Z=>Z.startsWith("data:application/octet-stream;base64,"),md=Z=>Z.startsWith("file://");function N2(Z){if(Z==vd&&dt)return new Uint8Array(dt);if(_e)return _e(Z);throw"both async and sync fetching of the wasm failed"}function lu(Z,Ce,Oe){return function(Xe){if(!dt&&(W||te)){if(typeof fetch=="function"&&!md(Xe))return fetch(Xe,{credentials:"same-origin"}).then(lt=>{if(!lt.ok)throw`failed to load wasm binary file at '${Xe}'`;return lt.arrayBuffer()}).catch(()=>N2(Xe));if(me)return new Promise((lt,O)=>{me(Xe,ne=>lt(new Uint8Array(ne)),O)})}return Promise.resolve().then(()=>N2(Xe))}(Z).then(Xe=>WebAssembly.instantiate(Xe,Ce)).then(Oe,Xe=>{Gt(`failed to asynchronously prepare wasm: ${Xe}`),xo(Xe)})}function Kd(){return{a:{O:Gg,Aa:Sg,b:Qg,aa:Ng,B:R2,qa:j2,Y:W2,_:U2,ra:a2,oa:H2,ha:nd,na:Y2,L:K2,Z:q2,W:X2,pa:Z2,X:J2,va:jg,F:K0,Q:eg,P:rg,E:Bl,u:sg,q:_f,G:vf,A:Pf,R:Df,ua:Sf,ka:Gf,U:Ff,ba:Yg,H:ig,ja:ag,ta:A2,t:zf,Ba:Of,x:qg,o:Ag,m:Nf,c:tg,n:Lf,k:Zg,w:jf,p:Vf,f:Wf,s:Jg,l:Uf,e:Hf,j:Yf,i:Kf,g:qf,d:Xf,ea:Zf,fa:Jf,ga:$f,ca:id,da:lg,T:tf,h:sf,D:af,I:ep,M:ug,y:nf,sa:tp,V:rp,v:of,z:sp,N:ap,S:Af,za:np,ya:ip,la:cf,ma:uf,$:e2,C:b2,K:C2,ia:gg,J:fg,a:St,xa:xd,wa:ff,r:pf}}}var qd={916868:(Z,Ce,Oe,Xe,lt)=>{if(x===void 0||!x.Fb)return 1;if((Z=ii(Number(Z>>>0))).startsWith("./")&&(Z=Z.substring(2)),!(Z=x.Fb.get(Z)))return 2;if(Ce=Number(Ce>>>0),Oe=Number(Oe>>>0),Xe=Number(Xe>>>0),Ce+Oe>Z.byteLength)return 3;try{let O=Z.subarray(Ce,Ce+Oe);switch(lt){case 0:S().set(O,Xe>>>0);break;case 1:x.dc(Xe,O);break;default:return 4}return 0}catch{return 4}},917583:(Z,Ce,Oe)=>{x.ec(Z,S().subarray(Ce>>>0,Ce+Oe>>>0))},917646:()=>x.bc(),917687:Z=>{x.Pb(Z)},917723:()=>{x.Wb()},917754:()=>{x.Xb()},917783:()=>{x.ac()},917808:Z=>x.Vb(Z),917841:Z=>x.Zb(Z),917873:(Z,Ce,Oe)=>{x.Ob(Number(Z),Number(Ce),Number(Oe),!0)},917936:(Z,Ce,Oe)=>{x.Ob(Number(Z),Number(Ce),Number(Oe))},917993:()=>typeof wasmOffsetConverter<"u",918050:Z=>{x.kb("Abs",Z,void 0)},918101:Z=>{x.kb("Neg",Z,void 0)},918152:Z=>{x.kb("Floor",Z,void 0)},918205:Z=>{x.kb("Ceil",Z,void 0)},918257:Z=>{x.kb("Reciprocal",Z,void 0)},918315:Z=>{x.kb("Sqrt",Z,void 0)},918367:Z=>{x.kb("Exp",Z,void 0)},918418:Z=>{x.kb("Erf",Z,void 0)},918469:Z=>{x.kb("Sigmoid",Z,void 0)},918524:(Z,Ce,Oe)=>{x.kb("HardSigmoid",Z,{alpha:Ce,beta:Oe})},918603:Z=>{x.kb("Log",Z,void 0)},918654:Z=>{x.kb("Sin",Z,void 0)},918705:Z=>{x.kb("Cos",Z,void 0)},918756:Z=>{x.kb("Tan",Z,void 0)},918807:Z=>{x.kb("Asin",Z,void 0)},918859:Z=>{x.kb("Acos",Z,void 0)},918911:Z=>{x.kb("Atan",Z,void 0)},918963:Z=>{x.kb("Sinh",Z,void 0)},919015:Z=>{x.kb("Cosh",Z,void 0)},919067:Z=>{x.kb("Asinh",Z,void 0)},919120:Z=>{x.kb("Acosh",Z,void 0)},919173:Z=>{x.kb("Atanh",Z,void 0)},919226:Z=>{x.kb("Tanh",Z,void 0)},919278:Z=>{x.kb("Not",Z,void 0)},919329:(Z,Ce,Oe)=>{x.kb("Clip",Z,{min:Ce,max:Oe})},919398:Z=>{x.kb("Clip",Z,void 0)},919450:(Z,Ce)=>{x.kb("Elu",Z,{alpha:Ce})},919508:Z=>{x.kb("Gelu",Z,void 0)},919560:Z=>{x.kb("Relu",Z,void 0)},919612:(Z,Ce)=>{x.kb("LeakyRelu",Z,{alpha:Ce})},919676:(Z,Ce)=>{x.kb("ThresholdedRelu",Z,{alpha:Ce})},919746:(Z,Ce)=>{x.kb("Cast",Z,{to:Ce})},919804:Z=>{x.kb("Add",Z,void 0)},919855:Z=>{x.kb("Sub",Z,void 0)},919906:Z=>{x.kb("Mul",Z,void 0)},919957:Z=>{x.kb("Div",Z,void 0)},920008:Z=>{x.kb("Pow",Z,void 0)},920059:Z=>{x.kb("Equal",Z,void 0)},920112:Z=>{x.kb("Greater",Z,void 0)},920167:Z=>{x.kb("GreaterOrEqual",Z,void 0)},920229:Z=>{x.kb("Less",Z,void 0)},920281:Z=>{x.kb("LessOrEqual",Z,void 0)},920340:(Z,Ce,Oe,Xe,lt)=>{x.kb("ReduceMean",Z,{keepDims:!!Ce,noopWithEmptyAxes:!!Oe,axes:Xe?Array.from(l().subarray(Number(Xe)>>>0,Number(lt)>>>0)):[]})},920515:(Z,Ce,Oe,Xe,lt)=>{x.kb("ReduceMax",Z,{keepDims:!!Ce,noopWithEmptyAxes:!!Oe,axes:Xe?Array.from(l().subarray(Number(Xe)>>>0,Number(lt)>>>0)):[]})},920689:(Z,Ce,Oe,Xe,lt)=>{x.kb("ReduceMin",Z,{keepDims:!!Ce,noopWithEmptyAxes:!!Oe,axes:Xe?Array.from(l().subarray(Number(Xe)>>>0,Number(lt)>>>0)):[]})},920863:(Z,Ce,Oe,Xe,lt)=>{x.kb("ReduceProd",Z,{keepDims:!!Ce,noopWithEmptyAxes:!!Oe,axes:Xe?Array.from(l().subarray(Number(Xe)>>>0,Number(lt)>>>0)):[]})},921038:(Z,Ce,Oe,Xe,lt)=>{x.kb("ReduceSum",Z,{keepDims:!!Ce,noopWithEmptyAxes:!!Oe,axes:Xe?Array.from(l().subarray(Number(Xe)>>>0,Number(lt)>>>0)):[]})},921212:(Z,Ce,Oe,Xe,lt)=>{x.kb("ReduceL1",Z,{keepDims:!!Ce,noopWithEmptyAxes:!!Oe,axes:Xe?Array.from(l().subarray(Number(Xe)>>>0,Number(lt)>>>0)):[]})},921385:(Z,Ce,Oe,Xe,lt)=>{x.kb("ReduceL2",Z,{keepDims:!!Ce,noopWithEmptyAxes:!!Oe,axes:Xe?Array.from(l().subarray(Number(Xe)>>>0,Number(lt)>>>0)):[]})},921558:(Z,Ce,Oe,Xe,lt)=>{x.kb("ReduceLogSum",Z,{keepDims:!!Ce,noopWithEmptyAxes:!!Oe,axes:Xe?Array.from(l().subarray(Number(Xe)>>>0,Number(lt)>>>0)):[]})},921735:(Z,Ce,Oe,Xe,lt)=>{x.kb("ReduceSumSquare",Z,{keepDims:!!Ce,noopWithEmptyAxes:!!Oe,axes:Xe?Array.from(l().subarray(Number(Xe)>>>0,Number(lt)>>>0)):[]})},921915:(Z,Ce,Oe,Xe,lt)=>{x.kb("ReduceLogSumExp",Z,{keepDims:!!Ce,noopWithEmptyAxes:!!Oe,axes:Xe?Array.from(l().subarray(Number(Xe)>>>0,Number(lt)>>>0)):[]})},922095:Z=>{x.kb("Where",Z,void 0)},922148:(Z,Ce,Oe)=>{x.kb("Transpose",Z,{perm:Ce?Array.from(l().subarray(Number(Ce)>>>0,Number(Oe)>>>0)):[]})},922272:(Z,Ce,Oe,Xe)=>{x.kb("DepthToSpace",Z,{blocksize:Ce,mode:ii(Oe),format:Xe?"NHWC":"NCHW"})},922405:(Z,Ce,Oe,Xe)=>{x.kb("DepthToSpace",Z,{blocksize:Ce,mode:ii(Oe),format:Xe?"NHWC":"NCHW"})},922538:(Z,Ce,Oe,Xe,lt,O,ne,we,De,Ze,Bt,er,dr,Ot,Dr)=>{x.kb("ConvTranspose",Z,{format:De?"NHWC":"NCHW",autoPad:Ce,dilations:[Oe],group:Xe,kernelShape:[lt],pads:[O,ne],strides:[we],wIsConst:()=>!!_()[Ze>>>0],outputPadding:Bt?Array.from(l().subarray(Number(Bt)>>>0,Number(er)>>>0)):[],outputShape:dr?Array.from(l().subarray(Number(dr)>>>0,Number(Ot)>>>0)):[],activation:ii(Dr)})},922971:(Z,Ce,Oe,Xe,lt,O,ne,we,De,Ze,Bt,er,dr,Ot)=>{x.kb("ConvTranspose",Z,{format:we?"NHWC":"NCHW",autoPad:Ce,dilations:Array.from(l().subarray(Number(Oe)>>>0,2+(Number(Oe)>>>0)>>>0)),group:Xe,kernelShape:Array.from(l().subarray(Number(lt)>>>0,2+(Number(lt)>>>0)>>>0)),pads:Array.from(l().subarray(Number(O)>>>0,4+(Number(O)>>>0)>>>0)),strides:Array.from(l().subarray(Number(ne)>>>0,2+(Number(ne)>>>0)>>>0)),wIsConst:()=>!!_()[De>>>0],outputPadding:Ze?Array.from(l().subarray(Number(Ze)>>>0,Number(Bt)>>>0)):[],outputShape:er?Array.from(l().subarray(Number(er)>>>0,Number(dr)>>>0)):[],activation:ii(Ot)})},923632:(Z,Ce,Oe,Xe,lt,O,ne,we,De,Ze,Bt,er,dr,Ot,Dr)=>{x.kb("ConvTranspose",Z,{format:De?"NHWC":"NCHW",autoPad:Ce,dilations:[Oe],group:Xe,kernelShape:[lt],pads:[O,ne],strides:[we],wIsConst:()=>!!_()[Ze>>>0],outputPadding:Bt?Array.from(l().subarray(Number(Bt)>>>0,Number(er)>>>0)):[],outputShape:dr?Array.from(l().subarray(Number(dr)>>>0,Number(Ot)>>>0)):[],activation:ii(Dr)})},924065:(Z,Ce,Oe,Xe,lt,O,ne,we,De,Ze,Bt,er,dr,Ot)=>{x.kb("ConvTranspose",Z,{format:we?"NHWC":"NCHW",autoPad:Ce,dilations:Array.from(l().subarray(Number(Oe)>>>0,2+(Number(Oe)>>>0)>>>0)),group:Xe,kernelShape:Array.from(l().subarray(Number(lt)>>>0,2+(Number(lt)>>>0)>>>0)),pads:Array.from(l().subarray(Number(O)>>>0,4+(Number(O)>>>0)>>>0)),strides:Array.from(l().subarray(Number(ne)>>>0,2+(Number(ne)>>>0)>>>0)),wIsConst:()=>!!_()[De>>>0],outputPadding:Ze?Array.from(l().subarray(Number(Ze)>>>0,Number(Bt)>>>0)):[],outputShape:er?Array.from(l().subarray(Number(er)>>>0,Number(dr)>>>0)):[],activation:ii(Ot)})},924726:(Z,Ce)=>{x.kb("GlobalAveragePool",Z,{format:Ce?"NHWC":"NCHW"})},924817:(Z,Ce,Oe,Xe,lt,O,ne,we,De,Ze,Bt,er,dr,Ot)=>{x.kb("AveragePool",Z,{format:Ot?"NHWC":"NCHW",auto_pad:Ce,ceil_mode:Oe,count_include_pad:Xe,storage_order:lt,dilations:O?Array.from(l().subarray(Number(O)>>>0,Number(ne)>>>0)):[],kernel_shape:we?Array.from(l().subarray(Number(we)>>>0,Number(De)>>>0)):[],pads:Ze?Array.from(l().subarray(Number(Ze)>>>0,Number(Bt)>>>0)):[],strides:er?Array.from(l().subarray(Number(er)>>>0,Number(dr)>>>0)):[]})},925296:(Z,Ce)=>{x.kb("GlobalAveragePool",Z,{format:Ce?"NHWC":"NCHW"})},925387:(Z,Ce,Oe,Xe,lt,O,ne,we,De,Ze,Bt,er,dr,Ot)=>{x.kb("AveragePool",Z,{format:Ot?"NHWC":"NCHW",auto_pad:Ce,ceil_mode:Oe,count_include_pad:Xe,storage_order:lt,dilations:O?Array.from(l().subarray(Number(O)>>>0,Number(ne)>>>0)):[],kernel_shape:we?Array.from(l().subarray(Number(we)>>>0,Number(De)>>>0)):[],pads:Ze?Array.from(l().subarray(Number(Ze)>>>0,Number(Bt)>>>0)):[],strides:er?Array.from(l().subarray(Number(er)>>>0,Number(dr)>>>0)):[]})},925866:(Z,Ce)=>{x.kb("GlobalMaxPool",Z,{format:Ce?"NHWC":"NCHW"})},925953:(Z,Ce,Oe,Xe,lt,O,ne,we,De,Ze,Bt,er,dr,Ot)=>{x.kb("MaxPool",Z,{format:Ot?"NHWC":"NCHW",auto_pad:Ce,ceil_mode:Oe,count_include_pad:Xe,storage_order:lt,dilations:O?Array.from(l().subarray(Number(O)>>>0,Number(ne)>>>0)):[],kernel_shape:we?Array.from(l().subarray(Number(we)>>>0,Number(De)>>>0)):[],pads:Ze?Array.from(l().subarray(Number(Ze)>>>0,Number(Bt)>>>0)):[],strides:er?Array.from(l().subarray(Number(er)>>>0,Number(dr)>>>0)):[]})},926428:(Z,Ce)=>{x.kb("GlobalMaxPool",Z,{format:Ce?"NHWC":"NCHW"})},926515:(Z,Ce,Oe,Xe,lt,O,ne,we,De,Ze,Bt,er,dr,Ot)=>{x.kb("MaxPool",Z,{format:Ot?"NHWC":"NCHW",auto_pad:Ce,ceil_mode:Oe,count_include_pad:Xe,storage_order:lt,dilations:O?Array.from(l().subarray(Number(O)>>>0,Number(ne)>>>0)):[],kernel_shape:we?Array.from(l().subarray(Number(we)>>>0,Number(De)>>>0)):[],pads:Ze?Array.from(l().subarray(Number(Ze)>>>0,Number(Bt)>>>0)):[],strides:er?Array.from(l().subarray(Number(er)>>>0,Number(dr)>>>0)):[]})},926990:(Z,Ce,Oe,Xe,lt)=>{x.kb("Gemm",Z,{alpha:Ce,beta:Oe,transA:Xe,transB:lt})},927094:Z=>{x.kb("MatMul",Z,void 0)},927148:(Z,Ce,Oe,Xe)=>{x.kb("ArgMax",Z,{keepDims:!!Ce,selectLastIndex:!!Oe,axis:Xe})},927256:(Z,Ce,Oe,Xe)=>{x.kb("ArgMin",Z,{keepDims:!!Ce,selectLastIndex:!!Oe,axis:Xe})},927364:(Z,Ce)=>{x.kb("Softmax",Z,{axis:Ce})},927427:(Z,Ce)=>{x.kb("Concat",Z,{axis:Ce})},927487:(Z,Ce,Oe,Xe,lt)=>{x.kb("Split",Z,{axis:Ce,numOutputs:Oe,splitSizes:Xe?Array.from(l().subarray(Number(Xe)>>>0,Number(lt)>>>0)):[]})},927643:Z=>{x.kb("Expand",Z,void 0)},927697:(Z,Ce)=>{x.kb("Gather",Z,{axis:Number(Ce)})},927768:(Z,Ce)=>{x.kb("GatherElements",Z,{axis:Number(Ce)})},927847:(Z,Ce)=>{x.kb("GatherND",Z,{batch_dims:Number(Ce)})},927926:(Z,Ce,Oe,Xe,lt,O,ne,we,De,Ze,Bt)=>{x.kb("Resize",Z,{antialias:Ce,axes:Oe?Array.from(l().subarray(Number(Oe)>>>0,Number(Xe)>>>0)):[],coordinateTransformMode:ii(lt),cubicCoeffA:O,excludeOutside:ne,extrapolationValue:we,keepAspectRatioPolicy:ii(De),mode:ii(Ze),nearestMode:ii(Bt)})},928288:(Z,Ce,Oe,Xe,lt,O,ne)=>{x.kb("Slice",Z,{starts:Ce?Array.from(l().subarray(Number(Ce)>>>0,Number(Oe)>>>0)):[],ends:Xe?Array.from(l().subarray(Number(Xe)>>>0,Number(lt)>>>0)):[],axes:O?Array.from(l().subarray(Number(O)>>>0,Number(ne)>>>0)):[]})},928552:Z=>{x.kb("Tile",Z,void 0)},928604:(Z,Ce,Oe)=>{x.kb("InstanceNormalization",Z,{epsilon:Ce,format:Oe?"NHWC":"NCHW"})},928718:(Z,Ce,Oe)=>{x.kb("InstanceNormalization",Z,{epsilon:Ce,format:Oe?"NHWC":"NCHW"})},928832:Z=>{x.kb("Range",Z,void 0)},928885:(Z,Ce)=>{x.kb("Einsum",Z,{equation:ii(Ce)})},928966:(Z,Ce,Oe,Xe,lt)=>{x.kb("Pad",Z,{mode:Ce,value:Oe,pads:Xe?Array.from(l().subarray(Number(Xe)>>>0,Number(lt)>>>0)):[]})},929109:(Z,Ce,Oe,Xe,lt,O)=>{x.kb("BatchNormalization",Z,{epsilon:Ce,momentum:Oe,spatial:!!lt,trainingMode:!!Xe,format:O?"NHWC":"NCHW"})},929278:(Z,Ce,Oe,Xe,lt,O)=>{x.kb("BatchNormalization",Z,{epsilon:Ce,momentum:Oe,spatial:!!lt,trainingMode:!!Xe,format:O?"NHWC":"NCHW"})},929447:(Z,Ce,Oe)=>{x.kb("CumSum",Z,{exclusive:Number(Ce),reverse:Number(Oe)})},929544:(Z,Ce,Oe)=>{x.kb("DequantizeLinear",Z,{axis:Ce,blockSize:Oe})},929634:(Z,Ce,Oe,Xe,lt)=>{x.kb("GridSample",Z,{align_corners:Ce,mode:ii(Oe),padding_mode:ii(Xe),format:lt?"NHWC":"NCHW"})},929804:(Z,Ce,Oe,Xe,lt)=>{x.kb("GridSample",Z,{align_corners:Ce,mode:ii(Oe),padding_mode:ii(Xe),format:lt?"NHWC":"NCHW"})},929974:(Z,Ce,Oe,Xe,lt,O,ne,we,De)=>{x.kb("Attention",Z,{numHeads:Ce,isUnidirectional:Oe,maskFilterValue:Xe,scale:lt,doRotary:O,qkvHiddenSizes:ne?Array.from(l().subarray(Number(we)>>>0,Number(we)+ne>>>0)):[],pastPresentShareBuffer:!!De})},930246:Z=>{x.kb("BiasAdd",Z,void 0)},930301:Z=>{x.kb("BiasSplitGelu",Z,void 0)},930362:Z=>{x.kb("FastGelu",Z,void 0)},930418:(Z,Ce,Oe,Xe,lt,O,ne,we,De,Ze,Bt,er,dr,Ot,Dr,ts)=>{x.kb("Conv",Z,{format:er?"NHWC":"NCHW",auto_pad:Ce,dilations:Oe?Array.from(l().subarray(Number(Oe)>>>0,Number(Xe)>>>0)):[],group:lt,kernel_shape:O?Array.from(l().subarray(Number(O)>>>0,Number(ne)>>>0)):[],pads:we?Array.from(l().subarray(Number(we)>>>0,Number(De)>>>0)):[],strides:Ze?Array.from(l().subarray(Number(Ze)>>>0,Number(Bt)>>>0)):[],w_is_const:()=>!!_()[Number(dr)>>>0],activation:ii(Ot),activation_params:Dr?Array.from(b().subarray(Number(Dr)>>>0,Number(ts)>>>0)):[]})},931002:Z=>{x.kb("Gelu",Z,void 0)},931054:(Z,Ce,Oe,Xe,lt,O,ne,we,De)=>{x.kb("GroupQueryAttention",Z,{numHeads:Ce,kvNumHeads:Oe,scale:Xe,softcap:lt,doRotary:O,rotaryInterleaved:ne,smoothSoftmax:we,localWindowSize:De})},931271:(Z,Ce,Oe,Xe)=>{x.kb("LayerNormalization",Z,{axis:Ce,epsilon:Oe,simplified:!!Xe})},931382:(Z,Ce,Oe,Xe)=>{x.kb("LayerNormalization",Z,{axis:Ce,epsilon:Oe,simplified:!!Xe})},931493:(Z,Ce,Oe,Xe,lt,O)=>{x.kb("MatMulNBits",Z,{k:Ce,n:Oe,accuracyLevel:Xe,bits:lt,blockSize:O})},931620:(Z,Ce,Oe,Xe,lt,O)=>{x.kb("MultiHeadAttention",Z,{numHeads:Ce,isUnidirectional:Oe,maskFilterValue:Xe,scale:lt,doRotary:O})},931779:(Z,Ce)=>{x.kb("QuickGelu",Z,{alpha:Ce})},931843:(Z,Ce,Oe,Xe,lt)=>{x.kb("RotaryEmbedding",Z,{interleaved:!!Ce,numHeads:Oe,rotaryEmbeddingDim:Xe,scale:lt})},931982:(Z,Ce,Oe)=>{x.kb("SkipLayerNormalization",Z,{epsilon:Ce,simplified:!!Oe})},932084:(Z,Ce,Oe)=>{x.kb("SkipLayerNormalization",Z,{epsilon:Ce,simplified:!!Oe})},932186:(Z,Ce,Oe,Xe)=>{x.kb("GatherBlockQuantized",Z,{gatherAxis:Ce,quantizeAxis:Oe,blockSize:Xe})},932307:Z=>{x.$b(Z)},932341:(Z,Ce)=>x.cc(Number(Z),Number(Ce),x.Gb.hc,x.Gb.errors)};function Sg(Z,Ce,Oe){return og(async()=>{await x.Yb(Number(Z),Number(Ce),Number(Oe))})}function Gg(){return typeof wasmOffsetConverter<"u"}function Xd(Z){this.name="ExitStatus",this.message=`Program terminated with exit(${Z})`,this.status=Z}var Zd=Z=>{Z.terminate(),Z.onmessage=()=>{}},Jd=Z=>{wA.length==0&&(L2(),$u(wA[0]));var Ce=wA.pop();if(!Ce)return 6;en.push(Ce),t0[Z.Bb]=Ce,Ce.Bb=Z.Bb;var Oe={cmd:"run",start_routine:Z.ic,arg:Z.Rb,pthread_ptr:Z.Bb};return Ce.postMessage(Oe,Z.nc),0},ad=0,Rn=(Z,Ce,...Oe)=>{for(var Xe=2*Oe.length,lt=Id(),O=Od(8*Xe),ne=O>>>3,we=0;we<Oe.length;we++){var De=Oe[we];typeof De=="bigint"?(Ys[ne+2*we]=1n,Ys[ne+2*we+1]=De):(Ys[ne+2*we]=0n,C()[ne+2*we+1>>>0]=De)}return Z=ld(Z,0,Xe,O,Ce),zd(lt),Z};function xd(Z){if($)return Rn(0,1,Z);if(fr=Z,!(0<ad)){for(var Ce of en)Zd(Ce);for(Ce of wA)Zd(Ce);wA=[],en=[],t0=[],js=!0}Fe(0,new Xd(Z))}function $d(Z){if($)return Rn(1,0,Z);e2(Z)}var e2=Z=>{if(fr=Z,$)throw $d(Z),"unwind";xd(Z)},wA=[],en=[],t2=[],t0={},r2=Z=>{var Ce=Z.Bb;delete t0[Ce],wA.push(Z),en.splice(en.indexOf(Z),1),Z.Bb=0,Tl(Ce)};function cu(){t2.forEach(Z=>Z())}var $u=Z=>new Promise(Ce=>{Z.onmessage=lt=>{var O=(lt=lt.data).cmd;if(lt.targetThread&&lt.targetThread!=wd()){var ne=t0[lt.targetThread];ne?ne.postMessage(lt,lt.transferList):Gt(`Internal error! Worker sent a message "${O}" to target pthread ${lt.targetThread}, but that thread no longer exists!`)}else O==="checkMailbox"?o2():O==="spawnThread"?Jd(lt):O==="cleanupThread"?r2(t0[lt.thread]):O==="killThread"?(lt=lt.thread,O=t0[lt],delete t0[lt],Zd(O),Tl(lt),en.splice(en.indexOf(O),1),O.Bb=0):O==="cancelThread"?t0[lt.thread].postMessage({cmd:"cancel"}):O==="loaded"?(Z.loaded=!0,Ce(Z)):O==="alert"?alert(`Thread ${lt.threadId}: ${lt.text}`):lt.target==="setimmediate"?Z.postMessage(lt):O==="callHandler"?x[lt.handler](...lt.args):O&&Gt(`worker sent an unknown command ${O}`)},Z.onerror=lt=>{throw Gt(`worker sent an error! ${lt.filename}:${lt.lineno}: ${lt.message}`),lt};var Oe,Xe=[];for(Oe of[])x.hasOwnProperty(Oe)&&Xe.push(Oe);Z.postMessage({cmd:"load",handlers:Xe,wasmMemory:St,wasmModule:kr})});function L2(){var Z=new Worker(import.meta.url.startsWith("file:")?new URL(A("./node_modules/onnxruntime-web/dist/ort.bundle.min.mjs?46eb"),A.b):new URL(import.meta.url),{type:"module",workerData:"em-pthread",name:"em-pthread"});wA.push(Z)}var YA=Z=>{for(;0<Z.length;)Z.shift()(x)},Fg=()=>{var Z=wd(),Ce=p()[Z+52>>>2>>>0];Z=p()[Z+56>>>2>>>0],Cg(Ce,Ce-Z),zd(Ce)},zg=(Z,Ce)=>{ad=0,Z=wg(Z,Ce),0<ad?fr=Z:cd(Z)};class Og{constructor(Ce){this.Kb=Ce-24}}function Qg(Z,Ce,Oe){var Xe=new Og(Z>>>=0);throw Ce>>>=0,Oe>>>=0,p()[Xe.Kb+16>>>2>>>0]=0,p()[Xe.Kb+4>>>2>>>0]=Ce,p()[Xe.Kb+8>>>2>>>0]=Oe,Z}function Md(Z,Ce,Oe,Xe){return $?Rn(2,1,Z,Ce,Oe,Xe):Ng(Z,Ce,Oe,Xe)}function Ng(Z,Ce,Oe,Xe){if(Z>>>=0,Ce>>>=0,Oe>>>=0,Xe>>>=0,j===void 0)return Gt("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var lt=[];return $&&lt.length===0?Md(Z,Ce,Oe,Xe):(Z={ic:Oe,Bb:Z,Rb:Xe,nc:lt},$?(Z.Nb="spawnThread",postMessage(Z,lt),0):Jd(Z))}var Lg=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,Rg=(Z,Ce,Oe)=>{var Xe=(Ce>>>=0)+Oe;for(Oe=Ce;Z[Oe]&&!(Oe>=Xe);)++Oe;if(16<Oe-Ce&&Z.buffer&&Lg)return Lg.decode(Z.buffer instanceof j?Z.slice(Ce,Oe):Z.subarray(Ce,Oe));for(Xe="";Ce<Oe;){var lt=Z[Ce++];if(128&lt){var O=63&Z[Ce++];if((224&lt)==192)Xe+=String.fromCharCode((31&lt)<<6|O);else{var ne=63&Z[Ce++];65536>(lt=(240&lt)==224?(15&lt)<<12|O<<6|ne:(7&lt)<<18|O<<12|ne<<6|63&Z[Ce++])?Xe+=String.fromCharCode(lt):(lt-=65536,Xe+=String.fromCharCode(55296|lt>>10,56320|1023&lt))}}else Xe+=String.fromCharCode(lt)}return Xe},ii=(Z,Ce)=>(Z>>>=0)?Rg(S(),Z,Ce):"";function R2(Z,Ce,Oe){return $?Rn(3,1,Z,Ce,Oe):0}function j2(Z,Ce){if($)return Rn(4,1,Z,Ce)}var s2=Z=>{for(var Ce=0,Oe=0;Oe<Z.length;++Oe){var Xe=Z.charCodeAt(Oe);127>=Xe?Ce++:2047>=Xe?Ce+=2:55296<=Xe&&57343>=Xe?(Ce+=4,++Oe):Ce+=3}return Ce},V2=(Z,Ce,Oe,Xe)=>{if(!(0<Xe))return 0;var lt=Oe>>>=0;Xe=Oe+Xe-1;for(var O=0;O<Z.length;++O){var ne=Z.charCodeAt(O);if(55296<=ne&&57343>=ne&&(ne=65536+((1023&ne)<<10)|1023&Z.charCodeAt(++O)),127>=ne){if(Oe>=Xe)break;Ce[Oe++>>>0]=ne}else{if(2047>=ne){if(Oe+1>=Xe)break;Ce[Oe++>>>0]=192|ne>>6}else{if(65535>=ne){if(Oe+2>=Xe)break;Ce[Oe++>>>0]=224|ne>>12}else{if(Oe+3>=Xe)break;Ce[Oe++>>>0]=240|ne>>18,Ce[Oe++>>>0]=128|ne>>12&63}Ce[Oe++>>>0]=128|ne>>6&63}Ce[Oe++>>>0]=128|63&ne}}return Ce[Oe>>>0]=0,Oe-lt},Cn=(Z,Ce,Oe)=>V2(Z,S(),Ce,Oe);function W2(Z,Ce){if($)return Rn(5,1,Z,Ce)}function U2(Z,Ce,Oe){if($)return Rn(6,1,Z,Ce,Oe)}function a2(Z,Ce,Oe){return $?Rn(7,1,Z,Ce,Oe):0}function H2(Z,Ce){if($)return Rn(8,1,Z,Ce)}function nd(Z,Ce,Oe){if($)return Rn(9,1,Z,Ce,Oe)}function Y2(Z,Ce,Oe,Xe){if($)return Rn(10,1,Z,Ce,Oe,Xe)}function K2(Z,Ce,Oe,Xe){if($)return Rn(11,1,Z,Ce,Oe,Xe)}function q2(Z,Ce,Oe,Xe){if($)return Rn(12,1,Z,Ce,Oe,Xe)}function X2(Z){if($)return Rn(13,1,Z)}function Z2(Z,Ce){if($)return Rn(14,1,Z,Ce)}function J2(Z,Ce,Oe){if($)return Rn(15,1,Z,Ce,Oe)}var $2,uu,jg=()=>{xo("")},r0=Z=>{for(var Ce="";S()[Z>>>0];)Ce+=$2[S()[Z++>>>0]];return Ce},n2={},i2={};function Mo(Z,Ce,Oe={}){if(!("argPackAdvance"in Ce))throw new TypeError("registerType registeredInstance requires argPackAdvance");return function(Xe,lt,O={}){var ne=lt.name;if(!Xe)throw new uu(`type "${ne}" must have a positive integer typeid pointer`);if(i2.hasOwnProperty(Xe)){if(O.Tb)return;throw new uu(`Cannot register type '${ne}' twice`)}i2[Xe]=lt,n2.hasOwnProperty(Xe)&&(lt=n2[Xe],delete n2[Xe],lt.forEach(we=>we()))}(Z,Ce,Oe)}var Vg=(Z,Ce,Oe)=>{switch(Ce){case 1:return Oe?Xe=>_()[Xe>>>0]:Xe=>S()[Xe>>>0];case 2:return Oe?Xe=>V()[Xe>>>1>>>0]:Xe=>n()[Xe>>>1>>>0];case 4:return Oe?Xe=>l()[Xe>>>2>>>0]:Xe=>p()[Xe>>>2>>>0];case 8:return Oe?Xe=>Ys[Xe>>>3]:Xe=>Er[Xe>>>3];default:throw new TypeError(`invalid integer width (${Ce}): ${Z}`)}};function K0(Z,Ce,Oe){Oe>>>=0,Mo(Z>>>=0,{name:Ce=r0(Ce>>>0),fromWireType:Xe=>Xe,toWireType:function(Xe,lt){if(typeof lt!="bigint"&&typeof lt!="number")throw lt=lt===null?"null":(Xe=typeof lt)=="object"||Xe==="array"||Xe==="function"?lt.toString():""+lt,new TypeError(`Cannot convert "${lt}" to ${this.name}`);return typeof lt=="number"&&(lt=BigInt(lt)),lt},argPackAdvance:q0,readValueFromPointer:Vg(Ce,Oe,Ce.indexOf("u")==-1),Eb:null})}var q0=8;function eg(Z,Ce,Oe,Xe){Mo(Z>>>=0,{name:Ce=r0(Ce>>>0),fromWireType:function(lt){return!!lt},toWireType:function(lt,O){return O?Oe:Xe},argPackAdvance:q0,readValueFromPointer:function(lt){return this.fromWireType(S()[lt>>>0])},Eb:null})}var s0=[],X0=[];function tg(Z){9<(Z>>>=0)&&--X0[Z+1]==0&&(X0[Z]=void 0,s0.push(Z))}var vi=Z=>{if(!Z)throw new uu("Cannot use deleted val. handle = "+Z);return X0[Z]},El=Z=>{switch(Z){case void 0:return 2;case null:return 4;case!0:return 6;case!1:return 8;default:let Ce=s0.pop()||X0.length;return X0[Ce]=Z,X0[Ce+1]=1,Ce}};function Ed(Z){return this.fromWireType(p()[Z>>>2>>>0])}var du={name:"emscripten::val",fromWireType:Z=>{var Ce=vi(Z);return tg(Z),Ce},toWireType:(Z,Ce)=>El(Ce),argPackAdvance:q0,readValueFromPointer:Ed,Eb:null};function rg(Z){return Mo(Z>>>0,du)}var KA=(Z,Ce)=>{switch(Ce){case 4:return function(Oe){return this.fromWireType(b()[Oe>>>2>>>0])};case 8:return function(Oe){return this.fromWireType(C()[Oe>>>3>>>0])};default:throw new TypeError(`invalid float width (${Ce}): ${Z}`)}};function Bl(Z,Ce,Oe){Oe>>>=0,Mo(Z>>>=0,{name:Ce=r0(Ce>>>0),fromWireType:Xe=>Xe,toWireType:(Xe,lt)=>lt,argPackAdvance:q0,readValueFromPointer:KA(Ce,Oe),Eb:null})}function sg(Z,Ce,Oe,Xe,lt){if(Z>>>=0,Oe>>>=0,Ce=r0(Ce>>>0),lt===-1&&(lt=4294967295),lt=we=>we,Xe===0){var O=32-8*Oe;lt=we=>we<<O>>>O}var ne=Ce.includes("unsigned")?function(we,De){return De>>>0}:function(we,De){return De};Mo(Z,{name:Ce,fromWireType:lt,toWireType:ne,argPackAdvance:q0,readValueFromPointer:Vg(Ce,Oe,Xe!==0),Eb:null})}function _f(Z,Ce,Oe){function Xe(O){var ne=p()[O>>>2>>>0];return O=p()[O+4>>>2>>>0],new lt(_().buffer,O,ne)}var lt=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][Ce];Mo(Z>>>=0,{name:Oe=r0(Oe>>>0),fromWireType:Xe,argPackAdvance:q0,readValueFromPointer:Xe},{Tb:!0})}function vf(Z,Ce){Z>>>=0;var Oe=(Ce=r0(Ce>>>0))==="std::string";Mo(Z,{name:Ce,fromWireType:function(Xe){var lt=p()[Xe>>>2>>>0],O=Xe+4;if(Oe)for(var ne=O,we=0;we<=lt;++we){var De=O+we;if(we==lt||S()[De>>>0]==0){if(ne=ii(ne,De-ne),Ze===void 0)var Ze=ne;else Ze+="\0",Ze+=ne;ne=De+1}}else{for(Ze=Array(lt),we=0;we<lt;++we)Ze[we]=String.fromCharCode(S()[O+we>>>0]);Ze=Ze.join("")}return fs(Xe),Ze},toWireType:function(Xe,lt){lt instanceof ArrayBuffer&&(lt=new Uint8Array(lt));var O=typeof lt=="string";if(!(O||lt instanceof Uint8Array||lt instanceof Uint8ClampedArray||lt instanceof Int8Array))throw new uu("Cannot pass non-string to std::string");var ne=Oe&&O?s2(lt):lt.length,we=Gd(4+ne+1),De=we+4;if(p()[we>>>2>>>0]=ne,Oe&&O)Cn(lt,De,ne+1);else if(O)for(O=0;O<ne;++O){var Ze=lt.charCodeAt(O);if(255<Ze)throw fs(De),new uu("String has UTF-16 code units that do not fit in 8 bits");S()[De+O>>>0]=Ze}else for(O=0;O<ne;++O)S()[De+O>>>0]=lt[O];return Xe!==null&&Xe.push(fs,we),we},argPackAdvance:q0,readValueFromPointer:Ed,Eb(Xe){fs(Xe)}})}var Wg=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,xf=(Z,Ce)=>{for(var Oe=Z>>1,Xe=Oe+Ce/2;!(Oe>=Xe)&&n()[Oe>>>0];)++Oe;if(32<(Oe<<=1)-Z&&Wg)return Wg.decode(S().slice(Z,Oe));for(Oe="",Xe=0;!(Xe>=Ce/2);++Xe){var lt=V()[Z+2*Xe>>>1>>>0];if(lt==0)break;Oe+=String.fromCharCode(lt)}return Oe},Mf=(Z,Ce,Oe)=>{if(Oe??(Oe=2147483647),2>Oe)return 0;var Xe=Ce;Oe=(Oe-=2)<2*Z.length?Oe/2:Z.length;for(var lt=0;lt<Oe;++lt){var O=Z.charCodeAt(lt);V()[Ce>>>1>>>0]=O,Ce+=2}return V()[Ce>>>1>>>0]=0,Ce-Xe},Ef=Z=>2*Z.length,Bf=(Z,Ce)=>{for(var Oe=0,Xe="";!(Oe>=Ce/4);){var lt=l()[Z+4*Oe>>>2>>>0];if(lt==0)break;++Oe,65536<=lt?(lt-=65536,Xe+=String.fromCharCode(55296|lt>>10,56320|1023&lt)):Xe+=String.fromCharCode(lt)}return Xe},Ug=(Z,Ce,Oe)=>{if(Ce>>>=0,Oe??(Oe=2147483647),4>Oe)return 0;var Xe=Ce;Oe=Xe+Oe-4;for(var lt=0;lt<Z.length;++lt){var O=Z.charCodeAt(lt);if(55296<=O&&57343>=O&&(O=65536+((1023&O)<<10)|1023&Z.charCodeAt(++lt)),l()[Ce>>>2>>>0]=O,(Ce+=4)+4>Oe)break}return l()[Ce>>>2>>>0]=0,Ce-Xe},Tf=Z=>{for(var Ce=0,Oe=0;Oe<Z.length;++Oe){var Xe=Z.charCodeAt(Oe);55296<=Xe&&57343>=Xe&&++Oe,Ce+=4}return Ce};function Pf(Z,Ce,Oe){if(Z>>>=0,Ce>>>=0,Oe=r0(Oe>>>=0),Ce===2)var Xe=xf,lt=Mf,O=Ef,ne=we=>n()[we>>>1>>>0];else Ce===4&&(Xe=Bf,lt=Ug,O=Tf,ne=we=>p()[we>>>2>>>0]);Mo(Z,{name:Oe,fromWireType:we=>{for(var De,Ze=p()[we>>>2>>>0],Bt=we+4,er=0;er<=Ze;++er){var dr=we+4+er*Ce;er!=Ze&&ne(dr)!=0||(Bt=Xe(Bt,dr-Bt),De===void 0?De=Bt:(De+="\0",De+=Bt),Bt=dr+Ce)}return fs(we),De},toWireType:(we,De)=>{if(typeof De!="string")throw new uu(`Cannot pass non-string to C++ string type ${Oe}`);var Ze=O(De),Bt=Gd(4+Ze+Ce);return p()[Bt>>>2>>>0]=Ze/Ce,lt(De,Bt+4,Ze+Ce),we!==null&&we.push(fs,Bt),Bt},argPackAdvance:q0,readValueFromPointer:Ed,Eb(we){fs(we)}})}function Df(Z,Ce){Mo(Z>>>=0,{Ub:!0,name:Ce=r0(Ce>>>0),argPackAdvance:0,fromWireType:()=>{},toWireType:()=>{}})}var Sf=()=>1;function Gf(Z){w2(Z>>>0,!te,1,!W,131072,!1),cu()}var Hg=Z=>{if(!js)try{if(Z(),!(0<ad))try{$?cd(fr):e2(fr)}catch(Ce){Ce instanceof Xd||Ce=="unwind"||Fe(0,Ce)}}catch(Ce){Ce instanceof Xd||Ce=="unwind"||Fe(0,Ce)}};function ag(Z){Z>>>=0,typeof Atomics.oc=="function"&&(Atomics.oc(l(),Z>>>2,Z).value.then(o2),Z+=128,Atomics.store(l(),Z>>>2,1))}var o2=()=>{var Z=wd();Z&&(ag(Z),Hg(I2))};function Ff(Z,Ce){(Z>>>=0)==Ce>>>0?setTimeout(o2):$?postMessage({targetThread:Z,cmd:"checkMailbox"}):(Z=t0[Z])&&Z.postMessage({cmd:"checkMailbox"})}var ng=[];function Yg(Z,Ce,Oe,Xe,lt){for(Ce>>>=0,Xe/=2,ng.length=Xe,Oe=lt>>>0>>>3,lt=0;lt<Xe;lt++)ng[lt]=Ys[Oe+2*lt]?Ys[Oe+2*lt+1]:C()[Oe+2*lt+1>>>0];return(Ce?qd[Ce]:op[Z])(...ng)}function ig(Z){Z>>>=0,$?postMessage({cmd:"cleanupThread",thread:Z}):r2(t0[Z])}function A2(Z){}var l2=(Z,Ce)=>{var Oe=i2[Z];if(Oe===void 0)throw Z=hf(Z),Oe=r0(Z),fs(Z),new uu(`${Ce} has unknown type ${Oe}`);return Oe},c2=(Z,Ce,Oe)=>{var Xe=[];return Z=Z.toWireType(Xe,Oe),Xe.length&&(p()[Ce>>>2>>>0]=El(Xe)),Z};function zf(Z,Ce,Oe){return Ce>>>=0,Oe>>>=0,Z=vi(Z>>>0),Ce=l2(Ce,"emval::as"),c2(Ce,Oe,Z)}function Of(Z,Ce){return Ce>>>=0,Z=vi(Z>>>0),(Ce=l2(Ce,"emval::as")).toWireType(null,Z)}var u2=Z=>{try{Z()}catch(Ce){xo(Ce)}},a0=0,n0=null,Kg=0,d2=[],Bd={},gu={},Z0=0,g2=null,f2=[];function og(Z){return function(){if(!js){if(a0===0){var Ce=!1,Oe=!1;(Xe=>{Z().then(Xe)})((Xe=0)=>{if(!js&&(Kg=Xe,Ce=!0,Oe)){a0=2,u2(()=>k2(n0)),typeof Browser<"u"&&Browser.Lb.Sb&&Browser.Lb.resume(),Xe=!1;try{var lt=function(){var we=l()[n0+8>>>2>>>0];return we=ks[gu[we]],--ad,we()}()}catch(we){lt=we,Xe=!0}var O=!1;if(!n0){var ne=g2;ne&&(g2=null,(Xe?ne.reject:ne.resolve)(lt),O=!0)}if(Xe&&!O)throw lt}}),Oe=!0,Ce||(a0=1,n0=function(){var Xe=Gd(65548),lt=Xe+12;p()[Xe>>>2>>>0]=lt,p()[Xe+4>>>2>>>0]=lt+65536,lt=d2[0];var O=Bd[lt];return O===void 0&&(O=Z0++,Bd[lt]=O,gu[O]=lt),lt=O,l()[Xe+8>>>2>>>0]=lt,Xe}(),typeof Browser<"u"&&Browser.Lb.Sb&&Browser.Lb.pause(),u2(()=>Ig(n0)))}else a0===2?(a0=0,u2(y2),fs(n0),n0=null,f2.forEach(Hg)):xo(`invalid state: ${a0}`);return Kg}}()}function qg(Z){return Z>>>=0,og(()=>(Z=vi(Z)).then(El))}var p2=[];function Ag(Z,Ce,Oe,Xe){return Oe>>>=0,Xe>>>=0,(Z=p2[Z>>>0])(null,Ce=vi(Ce>>>0),Oe,Xe)}var Qf={},Td=Z=>{var Ce=Qf[Z];return Ce===void 0?r0(Z):Ce};function Nf(Z,Ce,Oe,Xe,lt){return Oe>>>=0,Xe>>>=0,lt>>>=0,(Z=p2[Z>>>0])(Ce=vi(Ce>>>0),Ce[Oe=Td(Oe)],Xe,lt)}var Pd=()=>typeof globalThis=="object"?globalThis:Function("return this")();function Lf(Z){return(Z>>>=0)==0?El(Pd()):(Z=Td(Z),El(Pd()[Z]))}var Rf=Z=>{var Ce=p2.length;return p2.push(Z),Ce},h2=(Z,Ce)=>{for(var Oe=Array(Z),Xe=0;Xe<Z;++Xe)Oe[Xe]=l2(p()[Ce+4*Xe>>>2>>>0],"parameter "+Xe);return Oe},Xg=(Z,Ce)=>Object.defineProperty(Ce,"name",{value:Z});function Zg(Z,Ce,Oe){var Xe=(Ce=h2(Z,Ce>>>0)).shift();Z--;var lt=`return function (obj, func, destructorsRef, args) {
`,O=0,ne=[];Oe===0&&ne.push("obj");for(var we=["retType"],De=[Xe],Ze=0;Ze<Z;++Ze)ne.push("arg"+Ze),we.push("argType"+Ze),De.push(Ce[Ze]),lt+=`  var arg${Ze} = argType${Ze}.readValueFromPointer(args${O?"+"+O:""});
`,O+=Ce[Ze].argPackAdvance;return lt+=`  var rv = ${Oe===1?"new func":"func.call"}(${ne.join(", ")});
`,Xe.Ub||(we.push("emval_returnValue"),De.push(c2),lt+=`  return emval_returnValue(retType, destructorsRef, rv);
`),we.push(lt+`};
`),Z=function(Bt){var er=Function;if(!(er instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof er} which is not a function`);var dr=Xg(er.name||"unknownFunctionName",function(){});return dr.prototype=er.prototype,dr=new dr,(Bt=er.apply(dr,Bt))instanceof Object?Bt:dr}(we)(...De),Oe=`methodCaller<(${Ce.map(Bt=>Bt.name).join(", ")}) => ${Xe.name}>`,Rf(Xg(Oe,Z))}function jf(Z){return Z=Td(Z>>>0),El(x[Z])}function Vf(Z,Ce){return Ce>>>=0,Z=vi(Z>>>0),Ce=vi(Ce),El(Z[Ce])}function Wf(Z){9<(Z>>>=0)&&(X0[Z+1]+=1)}function Jg(){return El([])}function Uf(Z){Z=vi(Z>>>0);for(var Ce=Array(Z.length),Oe=0;Oe<Z.length;Oe++)Ce[Oe]=Z[Oe];return El(Ce)}function Hf(Z){return El(Td(Z>>>0))}function Yf(){return El({})}function Kf(Z){for(var Ce=vi(Z>>>=0);Ce.length;){var Oe=Ce.pop();Ce.pop()(Oe)}tg(Z)}function qf(Z,Ce,Oe){Ce>>>=0,Oe>>>=0,Z=vi(Z>>>0),Ce=vi(Ce),Oe=vi(Oe),Z[Ce]=Oe}function Xf(Z,Ce){return Ce>>>=0,Z=(Z=l2(Z>>>0,"_emval_take_value")).readValueFromPointer(Ce),El(Z)}function Zf(Z,Ce){Z=-9007199254740992>Z||9007199254740992<Z?NaN:Number(Z),Ce>>>=0,Z=new Date(1e3*Z),l()[Ce>>>2>>>0]=Z.getUTCSeconds(),l()[Ce+4>>>2>>>0]=Z.getUTCMinutes(),l()[Ce+8>>>2>>>0]=Z.getUTCHours(),l()[Ce+12>>>2>>>0]=Z.getUTCDate(),l()[Ce+16>>>2>>>0]=Z.getUTCMonth(),l()[Ce+20>>>2>>>0]=Z.getUTCFullYear()-1900,l()[Ce+24>>>2>>>0]=Z.getUTCDay(),Z=(Z.getTime()-Date.UTC(Z.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,l()[Ce+28>>>2>>>0]=Z}var bd=Z=>Z%4==0&&(Z%100!=0||Z%400==0),$g=[0,31,60,91,121,152,182,213,244,274,305,335],ef=[0,31,59,90,120,151,181,212,243,273,304,334];function Jf(Z,Ce){Z=-9007199254740992>Z||9007199254740992<Z?NaN:Number(Z),Ce>>>=0,Z=new Date(1e3*Z),l()[Ce>>>2>>>0]=Z.getSeconds(),l()[Ce+4>>>2>>>0]=Z.getMinutes(),l()[Ce+8>>>2>>>0]=Z.getHours(),l()[Ce+12>>>2>>>0]=Z.getDate(),l()[Ce+16>>>2>>>0]=Z.getMonth(),l()[Ce+20>>>2>>>0]=Z.getFullYear()-1900,l()[Ce+24>>>2>>>0]=Z.getDay();var Oe=(bd(Z.getFullYear())?$g:ef)[Z.getMonth()]+Z.getDate()-1|0;l()[Ce+28>>>2>>>0]=Oe,l()[Ce+36>>>2>>>0]=-60*Z.getTimezoneOffset(),Oe=new Date(Z.getFullYear(),6,1).getTimezoneOffset();var Xe=new Date(Z.getFullYear(),0,1).getTimezoneOffset();Z=0|(Oe!=Xe&&Z.getTimezoneOffset()==Math.min(Xe,Oe)),l()[Ce+32>>>2>>>0]=Z}function $f(Z){Z>>>=0;var Ce=new Date(l()[Z+20>>>2>>>0]+1900,l()[Z+16>>>2>>>0],l()[Z+12>>>2>>>0],l()[Z+8>>>2>>>0],l()[Z+4>>>2>>>0],l()[Z>>>2>>>0],0),Oe=l()[Z+32>>>2>>>0],Xe=Ce.getTimezoneOffset(),lt=new Date(Ce.getFullYear(),6,1).getTimezoneOffset(),O=new Date(Ce.getFullYear(),0,1).getTimezoneOffset(),ne=Math.min(O,lt);return 0>Oe?l()[Z+32>>>2>>>0]=+(lt!=O&&ne==Xe):0<Oe!=(ne==Xe)&&(lt=Math.max(O,lt),Ce.setTime(Ce.getTime()+6e4*((0<Oe?ne:lt)-Xe))),l()[Z+24>>>2>>>0]=Ce.getDay(),Oe=(bd(Ce.getFullYear())?$g:ef)[Ce.getMonth()]+Ce.getDate()-1|0,l()[Z+28>>>2>>>0]=Oe,l()[Z>>>2>>>0]=Ce.getSeconds(),l()[Z+4>>>2>>>0]=Ce.getMinutes(),l()[Z+8>>>2>>>0]=Ce.getHours(),l()[Z+12>>>2>>>0]=Ce.getDate(),l()[Z+16>>>2>>>0]=Ce.getMonth(),l()[Z+20>>>2>>>0]=Ce.getYear(),Z=Ce.getTime(),BigInt(isNaN(Z)?-1:Z/1e3)}function id(Z,Ce,Oe,Xe,lt,O,ne){return $?Rn(16,1,Z,Ce,Oe,Xe,lt,O,ne):-52}function lg(Z,Ce,Oe,Xe,lt,O){if($)return Rn(17,1,Z,Ce,Oe,Xe,lt,O)}function tf(Z,Ce,Oe,Xe){Z>>>=0,Ce>>>=0,Oe>>>=0,Xe>>>=0;var lt=new Date().getFullYear(),O=new Date(lt,0,1),ne=new Date(lt,6,1);lt=O.getTimezoneOffset();var we=ne.getTimezoneOffset(),De=Math.max(lt,we);p()[Z>>>2>>>0]=60*De,l()[Ce>>>2>>>0]=+(lt!=we),O=(Z=Ze=>Ze.toLocaleTimeString(void 0,{hour12:!1,timeZoneName:"short"}).split(" ")[1])(O),ne=Z(ne),we<lt?(Cn(O,Oe,17),Cn(ne,Xe,17)):(Cn(O,Xe,17),Cn(ne,Oe,17))}var cg=[],rf=(Z,Ce)=>{cg.length=0;for(var Oe;Oe=S()[Z++>>>0];){var Xe=Oe!=105;Ce+=(Xe&=Oe!=112)&&Ce%8?4:0,cg.push(Oe==112?p()[Ce>>>2>>>0]:Oe==106?Ys[Ce>>>3]:Oe==105?l()[Ce>>>2>>>0]:C()[Ce>>>3>>>0]),Ce+=Xe?8:4}return cg};function sf(Z,Ce,Oe){return Z>>>=0,Ce=rf(Ce>>>0,Oe>>>0),qd[Z](...Ce)}function af(Z,Ce,Oe){return Z>>>=0,Ce=rf(Ce>>>0,Oe>>>0),qd[Z](...Ce)}var ep=()=>{},ug=()=>Date.now();function nf(Z,Ce){return Gt(ii(Z>>>0,Ce>>>0))}var of,tp=()=>{throw ad+=1,"unwind"};function rp(){return 4294901760}of=()=>performance.timeOrigin+performance.now();var sp=()=>navigator.hardwareConcurrency;function ap(){return xo("Cannot use emscripten_pc_get_function without -sUSE_OFFSET_CONVERTER"),0}function Af(Z){Z>>>=0;var Ce=S().length;if(Z<=Ce||4294901760<Z)return!1;for(var Oe=1;4>=Oe;Oe*=2){var Xe=Ce*(1+.2/Oe);Xe=Math.min(Xe,Z+100663296);var lt=Math;Xe=Math.max(Z,Xe);e:{lt=(lt.min.call(lt,4294901760,Xe+(65536-Xe%65536)%65536)-St.buffer.byteLength+65535)/65536;try{St.grow(lt),Ds();var O=1;break e}catch{}O=void 0}if(O)return!0}return!1}var m2=()=>(xo("Cannot use convertFrameToPC (needed by __builtin_return_address) without -sUSE_OFFSET_CONVERTER"),0),Dd={},lf=Z=>{Z.forEach(Ce=>{m2()})};function np(){var Z=Error().stack.toString().split(`
`);return Z[0]=="Error"&&Z.shift(),lf(Z),Dd.Qb=m2(),Dd.fc=Z,Dd.Qb}function ip(Z,Ce,Oe){if(Z>>>=0,Ce>>>=0,Dd.Qb==Z)var Xe=Dd.fc;else(Xe=Error().stack.toString().split(`
`))[0]=="Error"&&Xe.shift(),lf(Xe);for(var lt=3;Xe[lt]&&m2()!=Z;)++lt;for(Z=0;Z<Oe&&Xe[Z+lt];++Z)l()[Ce+4*Z>>>2>>>0]=m2();return Z}var Cd,od={},dg=()=>{if(!Cd){var Z,Ce={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:"./this.program"};for(Z in od)od[Z]===void 0?delete Ce[Z]:Ce[Z]=od[Z];var Oe=[];for(Z in Ce)Oe.push(`${Z}=${Ce[Z]}`);Cd=Oe}return Cd};function cf(Z,Ce){if($)return Rn(18,1,Z,Ce);Z>>>=0,Ce>>>=0;var Oe=0;return dg().forEach((Xe,lt)=>{var O=Ce+Oe;for(lt=p()[Z+4*lt>>>2>>>0]=O,O=0;O<Xe.length;++O)_()[lt++>>>0]=Xe.charCodeAt(O);_()[lt>>>0]=0,Oe+=Xe.length+1}),0}function uf(Z,Ce){if($)return Rn(19,1,Z,Ce);Z>>>=0,Ce>>>=0;var Oe=dg();p()[Z>>>2>>>0]=Oe.length;var Xe=0;return Oe.forEach(lt=>Xe+=lt.length+1),p()[Ce>>>2>>>0]=Xe,0}function b2(Z){return $?Rn(20,1,Z):52}function C2(Z,Ce,Oe,Xe){return $?Rn(21,1,Z,Ce,Oe,Xe):52}function gg(Z,Ce,Oe,Xe){return $?Rn(22,1,Z,Ce,Oe,Xe):70}var df=[null,[],[]];function fg(Z,Ce,Oe,Xe){if($)return Rn(23,1,Z,Ce,Oe,Xe);Ce>>>=0,Oe>>>=0,Xe>>>=0;for(var lt=0,O=0;O<Oe;O++){var ne=p()[Ce>>>2>>>0],we=p()[Ce+4>>>2>>>0];Ce+=8;for(var De=0;De<we;De++){var Ze=S()[ne+De>>>0],Bt=df[Z];Ze===0||Ze===10?((Z===1?jt:Gt)(Rg(Bt,0)),Bt.length=0):Bt.push(Ze)}lt+=we}return p()[Xe>>>2>>>0]=lt,0}var pg=[31,29,31,30,31,30,31,31,30,31,30,31],hg=[31,28,31,30,31,30,31,31,30,31,30,31],gf=(Z,Ce)=>{_().set(Z,Ce>>>0)};function ff(Z,Ce,Oe,Xe){function lt(Ot,Dr,ts){for(Ot=typeof Ot=="number"?Ot.toString():Ot||"";Ot.length<Dr;)Ot=ts[0]+Ot;return Ot}function O(Ot,Dr){return lt(Ot,Dr,"0")}function ne(Ot,Dr){function ts(Oa){return 0>Oa?-1:0<Oa?1:0}var ra;return(ra=ts(Ot.getFullYear()-Dr.getFullYear()))===0&&(ra=ts(Ot.getMonth()-Dr.getMonth()))===0&&(ra=ts(Ot.getDate()-Dr.getDate())),ra}function we(Ot){switch(Ot.getDay()){case 0:return new Date(Ot.getFullYear()-1,11,29);case 1:return Ot;case 2:return new Date(Ot.getFullYear(),0,3);case 3:return new Date(Ot.getFullYear(),0,2);case 4:return new Date(Ot.getFullYear(),0,1);case 5:return new Date(Ot.getFullYear()-1,11,31);case 6:return new Date(Ot.getFullYear()-1,11,30)}}function De(Ot){var Dr=Ot.Cb;for(Ot=new Date(new Date(Ot.Db+1900,0,1).getTime());0<Dr;){var ts=Ot.getMonth(),ra=(bd(Ot.getFullYear())?pg:hg)[ts];if(!(Dr>ra-Ot.getDate())){Ot.setDate(Ot.getDate()+Dr);break}Dr-=ra-Ot.getDate()+1,Ot.setDate(1),11>ts?Ot.setMonth(ts+1):(Ot.setMonth(0),Ot.setFullYear(Ot.getFullYear()+1))}return ts=new Date(Ot.getFullYear()+1,0,4),Dr=we(new Date(Ot.getFullYear(),0,4)),ts=we(ts),0>=ne(Dr,Ot)?0>=ne(ts,Ot)?Ot.getFullYear()+1:Ot.getFullYear():Ot.getFullYear()-1}Z>>>=0,Ce>>>=0,Oe>>>=0,Xe>>>=0;var Ze=p()[Xe+40>>>2>>>0];for(var Bt in Xe={lc:l()[Xe>>>2>>>0],kc:l()[Xe+4>>>2>>>0],Ib:l()[Xe+8>>>2>>>0],Mb:l()[Xe+12>>>2>>>0],Jb:l()[Xe+16>>>2>>>0],Db:l()[Xe+20>>>2>>>0],vb:l()[Xe+24>>>2>>>0],Cb:l()[Xe+28>>>2>>>0],sc:l()[Xe+32>>>2>>>0],jc:l()[Xe+36>>>2>>>0],mc:Ze?ii(Ze):""},Oe=ii(Oe),Ze={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"})Oe=Oe.replace(new RegExp(Bt,"g"),Ze[Bt]);var er="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),dr="January February March April May June July August September October November December".split(" ");for(Bt in Ze={"%a":Ot=>er[Ot.vb].substring(0,3),"%A":Ot=>er[Ot.vb],"%b":Ot=>dr[Ot.Jb].substring(0,3),"%B":Ot=>dr[Ot.Jb],"%C":Ot=>O((Ot.Db+1900)/100|0,2),"%d":Ot=>O(Ot.Mb,2),"%e":Ot=>lt(Ot.Mb,2," "),"%g":Ot=>De(Ot).toString().substring(2),"%G":De,"%H":Ot=>O(Ot.Ib,2),"%I":Ot=>((Ot=Ot.Ib)==0?Ot=12:12<Ot&&(Ot-=12),O(Ot,2)),"%j":Ot=>{for(var Dr=0,ts=0;ts<=Ot.Jb-1;Dr+=(bd(Ot.Db+1900)?pg:hg)[ts++]);return O(Ot.Mb+Dr,3)},"%m":Ot=>O(Ot.Jb+1,2),"%M":Ot=>O(Ot.kc,2),"%n":()=>`
`,"%p":Ot=>0<=Ot.Ib&&12>Ot.Ib?"AM":"PM","%S":Ot=>O(Ot.lc,2),"%t":()=>"	","%u":Ot=>Ot.vb||7,"%U":Ot=>O(Math.floor((Ot.Cb+7-Ot.vb)/7),2),"%V":Ot=>{var Dr=Math.floor((Ot.Cb+7-(Ot.vb+6)%7)/7);if(2>=(Ot.vb+371-Ot.Cb-2)%7&&Dr++,Dr)Dr==53&&((ts=(Ot.vb+371-Ot.Cb)%7)==4||ts==3&&bd(Ot.Db)||(Dr=1));else{Dr=52;var ts=(Ot.vb+7-Ot.Cb-1)%7;(ts==4||ts==5&&bd(Ot.Db%400-1))&&Dr++}return O(Dr,2)},"%w":Ot=>Ot.vb,"%W":Ot=>O(Math.floor((Ot.Cb+7-(Ot.vb+6)%7)/7),2),"%y":Ot=>(Ot.Db+1900).toString().substring(2),"%Y":Ot=>Ot.Db+1900,"%z":Ot=>(0<=(Ot=Ot.jc)?"+":"-")+("0000"+((Ot=Math.abs(Ot)/60)/60*100+Ot%60)).slice(-4),"%Z":Ot=>Ot.mc,"%%":()=>"%"},Oe=Oe.replace(/%%/g,"\0\0"),Ze)Oe.includes(Bt)&&(Oe=Oe.replace(new RegExp(Bt,"g"),Ze[Bt](Xe)));return Bt=function(Ot){var Dr=Array(s2(Ot)+1);return V2(Ot,Dr,0,Dr.length),Dr}(Oe=Oe.replace(/\0\0/g,"%")),Bt.length>Ce?0:(gf(Bt,Z),Bt.length-1)}function pf(Z,Ce,Oe,Xe){return ff(Z>>>0,Ce>>>0,Oe>>>0,Xe>>>0)}$||function(){for(var Z=x.numThreads-1;Z--;)L2();va.unshift(()=>{qi++,function(Ce){$?Ce():Promise.all(wA.map($u)).then(Ce)}(()=>ni())})}();for(var mg=Array(256),Sd=0;256>Sd;++Sd)mg[Sd]=String.fromCharCode(Sd);$2=mg,uu=x.BindingError=class extends Error{constructor(Z){super(Z),this.name="BindingError"}},x.InternalError=class extends Error{constructor(Z){super(Z),this.name="InternalError"}},X0.push(0,1,void 0,1,null,1,!0,1,!1,1),x.count_emval_handles=()=>X0.length/2-5-s0.length;var op=[xd,$d,Md,R2,j2,W2,U2,a2,H2,nd,Y2,K2,q2,X2,Z2,J2,id,lg,cf,uf,b2,C2,gg,fg],ks=function(){function Z(Oe,Xe){return ks=Oe.exports,ks=function(){var lt=ks,O={};for(let[ne,we]of Object.entries(lt))O[ne]=typeof we=="function"?(...De)=>{d2.push(ne);try{return we(...De)}finally{js||(d2.pop(),n0&&a0===1&&d2.length===0&&(a0=0,ad+=1,u2(Qd),typeof Fibers<"u"&&Fibers.tc()))}}:we;return O}(),ks=function(){var lt=ks,O=we=>De=>we(De)>>>0,ne=we=>()=>we()>>>0;return(lt=Object.assign({},lt)).Da=O(lt.Da),lt.gb=ne(lt.gb),lt.ib=O(lt.ib),lt.emscripten_main_runtime_thread_id=ne(lt.emscripten_main_runtime_thread_id),lt.tb=O(lt.tb),lt.ub=ne(lt.ub),lt}(),t2.push(ks.jb),_i.unshift(ks.Ca),kr=Xe,ni(),ks}var Ce=Kd();if(qi++,x.instantiateWasm)try{return x.instantiateWasm(Ce,Z)}catch(Oe){Gt(`Module.instantiateWasm callback failed with error: ${Oe}`),v(Oe)}return vd||(vd=x.locateFile?Ju("ort-wasm-simd-threaded.jsep.wasm")?"ort-wasm-simd-threaded.jsep.wasm":x.locateFile?x.locateFile("ort-wasm-simd-threaded.jsep.wasm",Ye):Ye+"ort-wasm-simd-threaded.jsep.wasm":new URL(A("./node_modules/onnxruntime-web/dist/ort-wasm-simd-threaded.jsep.wasm"),A.b).href),function(Oe,Xe){var lt=vd;return dt||typeof WebAssembly.instantiateStreaming!="function"||Ju(lt)||md(lt)||typeof fetch!="function"?lu(lt,Oe,Xe):fetch(lt,{credentials:"same-origin"}).then(O=>WebAssembly.instantiateStreaming(O,Oe).then(Xe,function(ne){return Gt(`wasm streaming compile failed: ${ne}`),Gt("falling back to ArrayBuffer instantiation"),lu(lt,Oe,Xe)}))}(Ce,function(Oe){Z(Oe.instance,Oe.module)}).catch(v),{}}(),hf=Z=>(hf=ks.Da)(Z),bg=()=>(bg=ks.Ea)();x._OrtInit=(Z,Ce)=>(x._OrtInit=ks.Fa)(Z,Ce),x._OrtGetLastError=(Z,Ce)=>(x._OrtGetLastError=ks.Ga)(Z,Ce),x._OrtCreateSessionOptions=(Z,Ce,Oe,Xe,lt,O,ne,we,De,Ze)=>(x._OrtCreateSessionOptions=ks.Ha)(Z,Ce,Oe,Xe,lt,O,ne,we,De,Ze),x._OrtAppendExecutionProvider=(Z,Ce)=>(x._OrtAppendExecutionProvider=ks.Ia)(Z,Ce),x._OrtAddFreeDimensionOverride=(Z,Ce,Oe)=>(x._OrtAddFreeDimensionOverride=ks.Ja)(Z,Ce,Oe),x._OrtAddSessionConfigEntry=(Z,Ce,Oe)=>(x._OrtAddSessionConfigEntry=ks.Ka)(Z,Ce,Oe),x._OrtReleaseSessionOptions=Z=>(x._OrtReleaseSessionOptions=ks.La)(Z),x._OrtCreateSession=(Z,Ce,Oe)=>(x._OrtCreateSession=ks.Ma)(Z,Ce,Oe),x._OrtReleaseSession=Z=>(x._OrtReleaseSession=ks.Na)(Z),x._OrtGetInputOutputCount=(Z,Ce,Oe)=>(x._OrtGetInputOutputCount=ks.Oa)(Z,Ce,Oe),x._OrtGetInputName=(Z,Ce)=>(x._OrtGetInputName=ks.Pa)(Z,Ce),x._OrtGetOutputName=(Z,Ce)=>(x._OrtGetOutputName=ks.Qa)(Z,Ce),x._OrtFree=Z=>(x._OrtFree=ks.Ra)(Z),x._OrtCreateTensor=(Z,Ce,Oe,Xe,lt,O)=>(x._OrtCreateTensor=ks.Sa)(Z,Ce,Oe,Xe,lt,O),x._OrtGetTensorData=(Z,Ce,Oe,Xe,lt)=>(x._OrtGetTensorData=ks.Ta)(Z,Ce,Oe,Xe,lt),x._OrtReleaseTensor=Z=>(x._OrtReleaseTensor=ks.Ua)(Z),x._OrtCreateRunOptions=(Z,Ce,Oe,Xe)=>(x._OrtCreateRunOptions=ks.Va)(Z,Ce,Oe,Xe),x._OrtAddRunConfigEntry=(Z,Ce,Oe)=>(x._OrtAddRunConfigEntry=ks.Wa)(Z,Ce,Oe),x._OrtReleaseRunOptions=Z=>(x._OrtReleaseRunOptions=ks.Xa)(Z),x._OrtCreateBinding=Z=>(x._OrtCreateBinding=ks.Ya)(Z),x._OrtBindInput=(Z,Ce,Oe)=>(x._OrtBindInput=ks.Za)(Z,Ce,Oe),x._OrtBindOutput=(Z,Ce,Oe,Xe)=>(x._OrtBindOutput=ks._a)(Z,Ce,Oe,Xe),x._OrtClearBoundOutputs=Z=>(x._OrtClearBoundOutputs=ks.$a)(Z),x._OrtReleaseBinding=Z=>(x._OrtReleaseBinding=ks.ab)(Z),x._OrtRunWithBinding=(Z,Ce,Oe,Xe,lt)=>(x._OrtRunWithBinding=ks.bb)(Z,Ce,Oe,Xe,lt),x._OrtRun=(Z,Ce,Oe,Xe,lt,O,ne,we)=>(x._OrtRun=ks.cb)(Z,Ce,Oe,Xe,lt,O,ne,we),x._OrtEndProfiling=Z=>(x._OrtEndProfiling=ks.db)(Z),x._JsepOutput=(Z,Ce,Oe)=>(x._JsepOutput=ks.eb)(Z,Ce,Oe),x._JsepGetNodeName=Z=>(x._JsepGetNodeName=ks.fb)(Z);var Ad,wd=()=>(wd=ks.gb)(),fs=x._free=Z=>(fs=x._free=ks.hb)(Z),Gd=x._malloc=Z=>(Gd=x._malloc=ks.ib)(Z),w2=(Z,Ce,Oe,Xe,lt,O)=>(w2=ks.lb)(Z,Ce,Oe,Xe,lt,O),Fd=()=>(Fd=ks.mb)(),ld=(Z,Ce,Oe,Xe,lt)=>(ld=ks.nb)(Z,Ce,Oe,Xe,lt),Tl=Z=>(Tl=ks.ob)(Z),cd=Z=>(cd=ks.pb)(Z),I2=()=>(I2=ks.qb)(),Cg=(Z,Ce)=>(Cg=ks.rb)(Z,Ce),zd=Z=>(zd=ks.sb)(Z),Od=Z=>(Od=ks.tb)(Z),Id=()=>(Id=ks.ub)(),wg=x.dynCall_ii=(Z,Ce)=>(wg=x.dynCall_ii=ks.wb)(Z,Ce),Ig=Z=>(Ig=ks.xb)(Z),Qd=()=>(Qd=ks.yb)(),k2=Z=>(k2=ks.zb)(Z),y2=()=>(y2=ks.Ab)();function kg(){0<qi||($?(E(x),$||YA(_i),startWorker(x)):(YA(va),0<qi||Ad||(Ad=!0,x.calledRun=!0,js||($||YA(_i),E(x),$||YA(Ml)))))}return x.___start_em_js=932469,x.___stop_em_js=932715,x.stackSave=()=>Id(),x.stackRestore=Z=>zd(Z),x.stackAlloc=Z=>Od(Z),x.setValue=function(Z,Ce,Oe="i8"){switch(Oe.endsWith("*")&&(Oe="*"),Oe){case"i1":case"i8":_()[Z>>>0]=Ce;break;case"i16":V()[Z>>>1>>>0]=Ce;break;case"i32":l()[Z>>>2>>>0]=Ce;break;case"i64":Ys[Z>>>3]=BigInt(Ce);break;case"float":b()[Z>>>2>>>0]=Ce;break;case"double":C()[Z>>>3>>>0]=Ce;break;case"*":p()[Z>>>2>>>0]=Ce;break;default:xo(`invalid type for setValue: ${Oe}`)}},x.getValue=function(Z,Ce="i8"){switch(Ce.endsWith("*")&&(Ce="*"),Ce){case"i1":case"i8":return _()[Z>>>0];case"i16":return V()[Z>>>1>>>0];case"i32":return l()[Z>>>2>>>0];case"i64":return Ys[Z>>>3];case"float":return b()[Z>>>2>>>0];case"double":return C()[Z>>>3>>>0];case"*":return p()[Z>>>2>>>0];default:xo(`invalid type for getValue: ${Ce}`)}},x.UTF8ToString=ii,x.stringToUTF8=Cn,x.lengthBytesUTF8=s2,Va=function Z(){Ad||kg(),Ad||(Va=Z)},kg(),x.PTR_SIZE=4,L},Gs=ns,((c=globalThis.self)==null?void 0:c.name)==="em-pthread"&&ns()}),L0=Me(()=>{kt(),Cs=typeof location>"u"?void 0:location.origin,Ks=(()=>{var c;return(c=import.meta.url)!=null&&c.startsWith("file:")?new URL(new URL(A("./node_modules/onnxruntime-web/dist/ort.bundle.min.mjs?46eb"),A.b).href,Cs).href:import.meta.url})(),is=()=>{if(Ks&&!Ks.startsWith("blob:"))return Ks.substring(0,Ks.lastIndexOf("/")+1)},wn=(c,h)=>{try{let _=h??Ks;return(_?new URL(c,_):new URL(c)).origin===Cs}catch{return!1}},oa=(c,h)=>{let _=h??Ks;try{return(_?new URL(c,_):new URL(c)).href}catch{return}},Ea=(c,h)=>`${h??"./"}${c}`,gr=async c=>{let h=await(await fetch(c,{credentials:"same-origin"})).blob();return URL.createObjectURL(h)},Wr=async c=>(await import(c)).default,vr=(nr(),gt(Dt)).default,Es=async()=>{if(!Ks)throw new Error("Failed to load proxy worker: cannot determine the script source URL.");if(wn(Ks))return[void 0,vr()];let c=await gr(Ks);return[c,vr(c)]},pn=(Ru(),gt(lr)).default,Ba=async(c,h,_)=>{if(!c&&!h&&pn&&Ks&&wn(Ks))return[void 0,pn];{let S="ort-wasm-simd-threaded.jsep.mjs",V=c??oa(S,h),n=_&&V&&!wn(V,h),l=n?await gr(V):V??Ea(S,h);return[n?l:void 0,await Wr(l)]}}}),bA=Me(()=>{L0(),ln=!1,hn=!1,kn=!1,sa=()=>{if(typeof SharedArrayBuffer>"u")return!1;try{return typeof MessageChannel<"u"&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}},tr=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},Qr=async c=>{if(ln)return Promise.resolve();if(hn)throw new Error("multiple calls to 'initializeWebAssembly()' detected.");if(kn)throw new Error("previous call to 'initializeWebAssembly()' failed.");hn=!0;let h=c.initTimeout,_=c.numThreads;if(!tr())throw new Error("WebAssembly SIMD is not supported in the current environment.");let S=sa();_>1&&!S&&(typeof self<"u"&&!self.crossOriginIsolated&&console.warn("env.wasm.numThreads is set to "+_+", but this will not work unless you enable crossOriginIsolated mode. See https://web.dev/cross-origin-isolation-guide/ for more info."),console.warn("WebAssembly multi-threading is not supported in the current environment. Falling back to single-threading."),c.numThreads=_=1);let V=c.wasmPaths,n=typeof V=="string"?V:void 0,l=V==null?void 0:V.mjs,p=(l==null?void 0:l.href)??l,b=V==null?void 0:V.wasm,C=(b==null?void 0:b.href)??b,E=c.wasmBinary,[v,x]=await Ba(p,n,_>1),L=!1,W=[];if(h>0&&W.push(new Promise(te=>{setTimeout(()=>{L=!0,te()},h)})),W.push(new Promise((te,$)=>{let j={numThreads:_};if(E)j.wasmBinary=E;else if(C||n)j.locateFile=le=>C??n+le;else if(p&&p.indexOf("blob:")!==0)j.locateFile=le=>new URL(le,p).href;else if(v){let le=is();le&&(j.locateFile=me=>le+me)}x(j).then(le=>{hn=!1,ln=!0,In=le,te(),v&&URL.revokeObjectURL(v)},le=>{hn=!1,kn=!0,$(le)})})),await Promise.race(W),L)throw new Error(`WebAssembly backend initializing failed due to timeout: ${h}ms`)},jr=()=>{if(ln&&In)return In;throw new Error("WebAssembly is not initialized yet.")}}),R0=Me(()=>{bA(),Vs=(c,h)=>{let _=jr(),S=_.lengthBytesUTF8(c)+1,V=_._malloc(S);return _.stringToUTF8(c,V,S),h.push(V),V},xn=(c,h,_,S)=>{if(typeof c=="object"&&c!==null){if(_.has(c))throw new Error("Circular reference in options");_.add(c)}Object.entries(c).forEach(([V,n])=>{let l=h?h+V:V;if(typeof n=="object")xn(n,l+".",_,S);else if(typeof n=="string"||typeof n=="number")S(l,n.toString());else{if(typeof n!="boolean")throw new Error("Can't handle extra config type: "+typeof n);S(l,n?"1":"0")}})},Ss=c=>{let h=jr(),_=h.stackSave();try{let S=h.PTR_SIZE,V=h.stackAlloc(2*S);h._OrtGetLastError(V,V+S);let n=Number(h.getValue(V,S===4?"i32":"i64")),l=h.getValue(V+S,"*"),p=l?h.UTF8ToString(l):"";throw new Error(`${c} ERROR_CODE: ${n}, ERROR_MESSAGE: ${p}`)}finally{h.stackRestore(_)}}}),nu=Me(()=>{bA(),R0(),Ls=c=>{let h=jr(),_=0,S=[],V=c||{};try{if((c==null?void 0:c.logSeverityLevel)===void 0)V.logSeverityLevel=2;else if(typeof c.logSeverityLevel!="number"||!Number.isInteger(c.logSeverityLevel)||c.logSeverityLevel<0||c.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${c.logSeverityLevel}`);if((c==null?void 0:c.logVerbosityLevel)===void 0)V.logVerbosityLevel=0;else if(typeof c.logVerbosityLevel!="number"||!Number.isInteger(c.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${c.logVerbosityLevel}`);(c==null?void 0:c.terminate)===void 0&&(V.terminate=!1);let n=0;return(c==null?void 0:c.tag)!==void 0&&(n=Vs(c.tag,S)),_=h._OrtCreateRunOptions(V.logSeverityLevel,V.logVerbosityLevel,!!V.terminate,n),_===0&&Ss("Can't create run options."),(c==null?void 0:c.extra)!==void 0&&xn(c.extra,"",new WeakSet,(l,p)=>{let b=Vs(l,S),C=Vs(p,S);h._OrtAddRunConfigEntry(_,b,C)!==0&&Ss(`Can't set a run config entry: ${l} - ${p}.`)}),[_,S]}catch(n){throw _!==0&&h._OrtReleaseRunOptions(_),S.forEach(l=>h._free(l)),n}}}),ju=Me(()=>{bA(),R0(),Xa=c=>{switch(c){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${c}`)}},_a=c=>{switch(c){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${c}`)}},Tn=c=>{c.extra||(c.extra={}),c.extra.session||(c.extra.session={});let h=c.extra.session;h.use_ort_model_bytes_directly||(h.use_ort_model_bytes_directly="1"),c.executionProviders&&c.executionProviders.some(_=>(typeof _=="string"?_:_.name)==="webgpu")&&(c.enableMemPattern=!1)},Ms=(c,h,_)=>{for(let S of h){let V=typeof S=="string"?S:S.name;switch(V){case"webnn":if(V="WEBNN",typeof S!="string"){let l=S==null?void 0:S.deviceType;if(l){let p=Vs("deviceType",_),b=Vs(l,_);jr()._OrtAddSessionConfigEntry(c,p,b)!==0&&Ss(`Can't set a session config entry: 'deviceType' - ${l}.`)}}break;case"webgpu":if(V="JS",typeof S!="string"){let l=S;if(l!=null&&l.preferredLayout){if(l.preferredLayout!=="NCHW"&&l.preferredLayout!=="NHWC")throw new Error(`preferredLayout must be either 'NCHW' or 'NHWC': ${l.preferredLayout}`);let p=Vs("preferredLayout",_),b=Vs(l.preferredLayout,_);jr()._OrtAddSessionConfigEntry(c,p,b)!==0&&Ss(`Can't set a session config entry: 'preferredLayout' - ${l.preferredLayout}.`)}}break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${V}`)}let n=Vs(V,_);jr()._OrtAppendExecutionProvider(c,n)!==0&&Ss(`Can't append execution provider: ${V}.`)}},Mi=c=>{let h=jr(),_=0,S=[],V=c||{};Tn(V);try{let n=Xa(V.graphOptimizationLevel??"all"),l=_a(V.executionMode??"sequential"),p=typeof V.logId=="string"?Vs(V.logId,S):0,b=V.logSeverityLevel??2;if(!Number.isInteger(b)||b<0||b>4)throw new Error(`log serverity level is not valid: ${b}`);let C=V.logVerbosityLevel??0;if(!Number.isInteger(C)||C<0||C>4)throw new Error(`log verbosity level is not valid: ${C}`);let E=typeof V.optimizedModelFilePath=="string"?Vs(V.optimizedModelFilePath,S):0;if(_=h._OrtCreateSessionOptions(n,!!V.enableCpuMemArena,!!V.enableMemPattern,l,!!V.enableProfiling,0,p,b,C,E),_===0&&Ss("Can't create session options."),V.executionProviders&&Ms(_,V.executionProviders,S),V.enableGraphCapture!==void 0){if(typeof V.enableGraphCapture!="boolean")throw new Error(`enableGraphCapture must be a boolean value: ${V.enableGraphCapture}`);let v=Vs("enableGraphCapture",S),x=Vs(V.enableGraphCapture.toString(),S);h._OrtAddSessionConfigEntry(_,v,x)!==0&&Ss(`Can't set a session config entry: 'enableGraphCapture' - ${V.enableGraphCapture}.`)}if(V.freeDimensionOverrides)for(let[v,x]of Object.entries(V.freeDimensionOverrides)){if(typeof v!="string")throw new Error(`free dimension override name must be a string: ${v}`);if(typeof x!="number"||!Number.isInteger(x)||x<0)throw new Error(`free dimension override value must be a non-negative integer: ${x}`);let L=Vs(v,S);h._OrtAddFreeDimensionOverride(_,L,x)!==0&&Ss(`Can't set a free dimension override: ${v} - ${x}.`)}return V.extra!==void 0&&xn(V.extra,"",new WeakSet,(v,x)=>{let L=Vs(v,S),W=Vs(x,S);h._OrtAddSessionConfigEntry(_,L,W)!==0&&Ss(`Can't set a session config entry: ${v} - ${x}.`)}),[_,S]}catch(n){throw _!==0&&h._OrtReleaseSessionOptions(_)!==0&&Ss("Can't release session options."),S.forEach(l=>h._free(l)),n}}}),Is=Me(()=>{Ma=c=>{switch(c){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;case"int4":return 22;case"uint4":return 21;default:throw new Error(`unsupported data type: ${c}`)}},Jn=c=>{switch(c){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";case 22:return"int4";case 21:return"uint4";default:throw new Error(`unsupported data type: ${c}`)}},$n=(c,h)=>{let _=[-1,4,1,1,2,2,4,8,-1,1,2,8,4,8,-1,-1,-1,-1,-1,-1,-1,.5,.5][c],S=typeof h=="number"?h:h.reduce((V,n)=>V*n,1);return _>0?Math.ceil(S*_):void 0},Ei=c=>{switch(c){case"float16":return typeof Float16Array<"u"&&Float16Array.from?Float16Array:Uint16Array;case"float32":return Float32Array;case"uint8":case"bool":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${c}`)}},Pn=c=>{switch(c){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${c}`)}},Dn=c=>c==="float32"||c==="float16"||c==="int32"||c==="int64"||c==="uint32"||c==="uint8"||c==="bool"||c==="uint4"||c==="int4",ma=c=>c==="float32"||c==="float16"||c==="int32"||c==="int64"||c==="uint32"||c==="uint64"||c==="int8"||c==="uint8"||c==="bool"||c==="uint4"||c==="int4",Bi=c=>{switch(c){case"none":return 0;case"cpu":return 1;case"cpu-pinned":return 2;case"texture":return 3;case"gpu-buffer":return 4;case"ml-tensor":return 5;default:throw new Error(`unsupported data location: ${c}`)}}}),iu=Me(()=>{kt(),Vn=async c=>{if(typeof c=="string"){let h=await fetch(c);if(!h.ok)throw new Error(`failed to load external data file: ${c}`);let _=h.headers.get("Content-Length"),S=_?parseInt(_,10):0;if(S<1073741824)return new Uint8Array(await h.arrayBuffer());{if(!h.body)throw new Error(`failed to load external data file: ${c}, no response body.`);let V,n=h.body.getReader();try{V=new ArrayBuffer(S)}catch(p){if(!(p instanceof RangeError))throw p;{let b=Math.ceil(S/65536);V=new WebAssembly.Memory({initial:b,maximum:b}).buffer}}let l=0;for(;;){let{done:p,value:b}=await n.read();if(p)break;let C=b.byteLength;new Uint8Array(V,l,C).set(b),l+=C}return new Uint8Array(V,0,S)}}return c instanceof Blob?new Uint8Array(await c.arrayBuffer()):c instanceof Uint8Array?c:new Uint8Array(c)}}),_o=Me(()=>{Is(),Sn=["V","I","W","E","F"],cn=(c,h)=>{console.log(`[${Sn[c]},${new Date().toISOString()}]${h}`)},ri=(c,h)=>{ei=c,ti=h},ds=(c,h)=>{let _=Pn(c);_>=Pn(ei)&&cn(_,typeof h=="function"?h():h)},ys=(...c)=>{ti&&ds(...c)}}),ou=Me(()=>{Is(),qr=(c,h)=>new(Ei(h))(c)}),j0=Me(()=>{}),Vu=Me(()=>{_o(),j0(),pi=new Map([[64,250],[128,200],[256,200],[512,200],[2048,230],[4096,200],[8192,50],[16384,50],[32768,50],[65536,50],[131072,50],[262144,50],[524288,50],[1048576,50],[2097152,30],[4194304,20],[8388608,10],[12582912,10],[16777216,10],[26214400,15],[33554432,22],[44236800,2],[58982400,6],[67108864,6],[134217728,6],[167772160,6]]),Ai=[],hi=c=>16*Math.ceil(Number(c)/16),Wn=c=>{for(let h=0;h<Ai.length;h++){let _=Ai[h];if(c<=_)return _}return 16*Math.ceil(c/16)},Gn=1,qt=()=>Gn++,Qe=async(c,h,_,S)=>{let V=hi(_),n=c.device.createBuffer({size:V,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});try{let l=c.getCommandEncoder();c.endComputePass(),l.copyBufferToBuffer(h,0,n,0,V),c.flush(),await n.mapAsync(GPUMapMode.READ);let p=n.getMappedRange();if(S){let b=S();return b.set(new Uint8Array(p,0,_)),b}return new Uint8Array(p.slice(0,_))}finally{n.destroy()}},ut=class{constructor(c){this.backend=c,this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.buffersPending=[],this.capturedPendingBuffers=new Map;for(let[h]of pi)Ai.push(h),this.freeBuffers.set(h,[]),this.freeUniformBuffers.set(h,[]);this.sessionCount=0}upload(c,h){let _=h.buffer,S=h.byteOffset,V=h.byteLength,n=hi(V),l=this.storageCache.get(c);if(!l)throw new Error("gpu data for uploading does not exist");if(Number(l.originalSize)!==V)throw new Error(`inconsistent data size. gpu data size=${l.originalSize}, data size=${V}`);let p=this.backend.device.createBuffer({mappedAtCreation:!0,size:n,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),b=p.getMappedRange();new Uint8Array(b).set(new Uint8Array(_,S,V)),p.unmap();let C=this.backend.device.createCommandEncoder();C.copyBufferToBuffer(p,0,l.gpuData.buffer,0,n),this.backend.device.queue.submit([C.finish()]),p.destroy(),ys("verbose",()=>`[WebGPU] GpuDataManager.upload(id=${c})`)}memcpy(c,h){let _=this.storageCache.get(c);if(!_)throw new Error("source gpu data for memcpy does not exist");let S=this.storageCache.get(h);if(!S)throw new Error("destination gpu data for memcpy does not exist");if(_.originalSize!==S.originalSize)throw new Error("inconsistent source and destination gpu data size");let V=hi(_.originalSize),n=this.backend.getCommandEncoder();this.backend.endComputePass(),n.copyBufferToBuffer(_.gpuData.buffer,0,S.gpuData.buffer,0,V)}registerExternalBuffer(c,h,_){let S;if(_){if(S=_[0],c===_[1])return ys("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${h}) => id=${S}, buffer is the same, skip.`),S;if(this.backend.capturedCommandList.has(this.backend.currentSessionId))throw new Error(`Registering a different external buffer under graph capture mode is not supported yet.
             Please use the previous external buffer!`)}else S=qt();return this.storageCache.set(S,{gpuData:{id:S,type:0,buffer:c},originalSize:h}),ys("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${h}) => id=${S}, registered.`),S}unregisterExternalBuffer(c){c!==void 0&&(this.storageCache.delete(c),ys("verbose",()=>`[WebGPU] GpuDataManager.unregisterExternalBuffer() => id=${c}`))}create(c,h=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){let _,S=Wn(c),V=(h&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE,n=(h&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM;if(V||n){let p=(V?this.freeBuffers:this.freeUniformBuffers).get(S);_=p&&p.length>0?p.pop():this.backend.device.createBuffer({size:S,usage:h})}else _=this.backend.device.createBuffer({size:S,usage:h});let l={id:qt(),type:0,buffer:_};return this.storageCache.set(l.id,{gpuData:l,originalSize:Number(c)}),ys("verbose",()=>`[WebGPU] GpuDataManager.create(size=${c}) => id=${l.id}`),l}get(c){var h;return(h=this.storageCache.get(c))==null?void 0:h.gpuData}release(c){let h=typeof c=="bigint"?Number(c):c,_=this.storageCache.get(h);if(!_){if(this.storageCache.size===0)return 0;throw new Error("releasing data does not exist")}return ys("verbose",()=>`[WebGPU] GpuDataManager.release(id=${h}), gpuDataId=${_.gpuData.id}`),this.storageCache.delete(h),this.buffersPending.push(_.gpuData.buffer),_.originalSize}async download(c,h){let _=this.storageCache.get(Number(c));if(!_)throw new Error("data does not exist");await Qe(this.backend,_.gpuData.buffer,_.originalSize,h)}refreshPendingBuffers(){if(this.buffersPending.length!==0)if(this.backend.sessionStatus==="default"){for(let c of this.buffersPending){let h=pi.get(c.size);if((c.usage&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE){let _=this.freeBuffers.get(c.size)||[];h===void 0||_.length>=h?c.destroy():_.push(c)}else if((c.usage&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM){let _=this.freeUniformBuffers.get(c.size)||[];h===void 0||_.length>=h?c.destroy():_.push(c)}else c.destroy()}this.buffersPending=[]}else{let c=this.capturedPendingBuffers.get(this.backend.currentSessionId);c||(c=[],this.capturedPendingBuffers.set(this.backend.currentSessionId,c));for(let h of this.buffersPending)c.push(h);this.buffersPending=[]}}dispose(){this.freeBuffers.forEach(c=>{c.forEach(h=>{h.destroy()})}),this.freeUniformBuffers.forEach(c=>{c.forEach(h=>{h.destroy()})}),this.storageCache.forEach(c=>{c.gpuData.buffer.destroy()}),this.capturedPendingBuffers.forEach(c=>{c.forEach(h=>{h.destroy()})}),this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.capturedPendingBuffers=new Map}onCreateSession(){this.sessionCount+=1}onReleaseSession(c){let h=this.capturedPendingBuffers.get(c);h&&(h.forEach(_=>{_.destroy()}),this.capturedPendingBuffers.delete(c)),this.sessionCount-=1,this.sessionCount===0&&(ys("warning",()=>"[WebGPU] Clearing webgpu buffer cache"),this.storageCache.forEach(_=>{_.gpuData.buffer.destroy()}),this.storageCache=new Map)}},wt=(...c)=>new ut(...c)}),Ka=Me(()=>{tt=class{constructor(c){Object.assign(this,c)}get cacheKey(){return this.key||(this.key=Object.getOwnPropertyNames(this).sort().map(c=>`${this[c]}`).join(";")),this.key}},Ae=c=>new tt(c)}),Ps=Me(()=>{Ge=class{static calcMatMulShape(c,h){return c[1]!==h[0]?void 0:[c[0],h[1]]}},at=class{static calcShape(c,h,_=!1){let S=c.length,V=h.length;if(S===0)return h;if(V===0)return c;let n=Math.max(c.length,h.length),l=new Array(n);if(_){if(S<2||V<2)return;let p=Ge.calcMatMulShape([c[S-2],c[S-1]],[h[V-2],h[V-1]]);if(p===void 0)return;[l[n-2],l[n-1]]=p}for(let p=_?3:1;p<=n;p++){let b=S-p<0?1:c[S-p],C=V-p<0?1:h[V-p];if(b!==C&&b>1&&C>1)return;let E=Math.max(b,C);if(b&&C)l[n-p]=Math.max(b,C);else{if(E>1)return;l[n-p]=0}}return l}static isValidBroadcast(c,h){let _=c.length,S=h.length;if(_>S)return!1;for(let V=1;V<=_;V++)if(c[_-V]!==1&&c[_-V]!==h[S-V])return!1;return!0}},Le=class Cf{static size(h){return Cf.getSizeFromDimensionRange(h,0,h.length)}static convertShape(h,_=4){let S=h.length;if(S===0)return[];let V=new Array(S),n=S-1;for(;n>=0;){if(h[n]%_==0){V[n]=h[n]/_;break}if(_%h[n]!=0)throw new Error("cannot convert shape");V[n]=1,_/=h[n],n--}for(n--;n>=0;n--)V[n]=h[n];return V}static sizeFromDimension(h,_){if(_<0||_>h.length)throw new Error(`invalid dimension of ${_} for sizeFromDimension as Tensor has ${h.length} dimensions.`);return Cf.getSizeFromDimensionRange(h,_,h.length)}static sizeToDimension(h,_){if(_<0||_>h.length)throw new Error(`invalid dimension of ${_} for sizeToDimension as Tensor has ${h.length} dimensions.`);return Cf.getSizeFromDimensionRange(h,0,_)}static getSizeFromDimensionRange(h,_,S){let V=1;for(let n=_;n<S;n++){if(h[n]<0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains negative values in them.");V*=Number(h[n])}return V}static computeStrides(h){let _=h.length;if(_===0)return[];if(_===1)return[1];let S=new Array(_);S[_-1]=1,S[_-2]=h[_-1];for(let V=_-3;V>=0;--V)S[V]=S[V+1]*h[V+1];return S}static normalizeAxis(h,_){if(h<-_&&h>=_)throw new Error("unsupported axis for this operation.");return h<0?h+_:h}static normalizeAxes(h,_){return h.map(S=>this.normalizeAxis(S,_??h.length))}static sortBasedOnPerm(h,_){return _?_.map(S=>h[S]):h.slice().reverse()}static padShape(h,_){let S=h.length;return h.map((V,n)=>V+_[n]+_[n+S])}static areEqual(h,_){return h.length===_.length&&h.every((S,V)=>S===_[V])}},vt=class xg{static adjustPoolAttributes(h,_,S,V,n,l){if(!h&&S.length!==_.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(h)for(let p=0;p<_.length-2;p++)p>=S.length?S.push(_[p+2]):S[p]=_[p+2];for(let p=0;p<S.length;p++)if(p<V.length){if(V[p]<0)throw new Error("strides should be greater than or equal to 1")}else V.push(1);for(let p=0;p<S.length;p++)if(p<n.length){if(n[p]<0)throw new Error("dilations should be greater than or equal to 1")}else n.push(1);for(let p=0;p<2*S.length;p++)if(p<l.length){if(l[p]<0)throw new Error("pad should be greater than or equal to 1")}else l.push(0);for(let p=0;p<S.length;p++){if(S[p]<=0)throw new Error("kernel shapes need to be greater than 0");if(l[p]>=S[p]||l[p+S.length]>=S[p])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(h,_,S,V,n,l,p){if(p){if(n.length!==2*(h.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(_.length!==h.length-2)throw new Error("length of strides should be the length of data dimensions");if(V.length!==h.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let b=0;b<h.length-2;b++)xg.adjustPadAndReturnShape(h[b+(l?1:2)],_[b],S[b],V[b],n,b,b+h.length-2,p)}}static computePoolOutputShape(h,_,S,V,n,l,p){if(_.length<=0)throw new Error("input shape must be of size greater than 0");let b=[_[0],_[1]];return xg.computeShapeHelper(h,_,b,S,V,n,l,p),b}static computeConvOutputShape(h,_,S,V,n,l,p){if(h.length<=0||_.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let b=[h[0],_[0]];return xg.computeShapeHelper(!1,h,b,S,V,n,l,p),b}static computeShapeHelper(h,_,S,V,n,l,p,b){if(h)for(let C=0;C<_.length-2;C++)S.push(1);else for(let C=0;C<_.length-2;C++)S.push(xg.adjustPadAndReturnShape(_[C+2],V[C],n[C],l[C],p,C,C+_.length-2,b))}static adjustPadAndReturnShape(h,_,S,V,n,l,p,b){let C=S*(V-1)+1;if(!b||b==="NOTSET")return Math.floor((h+n[l]+n[p]-C)/_+1);switch(b){case"VALID":return n[l]=0,n[p]=0,Math.floor((h-C)/_+1);case"SAME_LOWER":case"SAME_UPPER":if(S!==1)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let E=((h+_-1)/_-1)*_+V-h;return n[l]=Math.floor(b==="SAME_LOWER"?(E+1)/2:E/2),n[p]=E-n[l],Math.floor((h+E-V)/_+1)}default:throw new Error("Unsupported AutoPad type")}}},Pt=class{static getShapeOfGemmResult(c,h,_,S,V){if(c.length!==2||_.length!==2)throw new Error("shape need to be of size 2");let n,l,p;h?(n=c[1],l=c[0]):(n=c[0],l=c[1]);let b=-1;if(S?(p=_[0],b=1):(p=_[1],b=0),_[b]!==l)throw new Error("dimension mismatch");if(n<=0||p<=0||l<=0)throw new Error("invalid shape specified");if(V&&!at.isValidBroadcast(V,[n,p]))throw new Error("gemm: invalid bias shape for broadcast");return[n,p,l]}},ir=-34028234663852886e22,yr=34028234663852886e22}),zs=Me(()=>{Is(),Ps(),hr=64,xr=(c,h)=>{if(h===3)throw new Error("vec3 has same alignment as vec4, use vec4 instead");switch(Number(c)){case 10:return h>1?`vec${h}<f16>`:"f16";case 1:return h>1?`vec${h}<f32>`:"f32";case 6:return h>1?`vec${h}<i32>`:"i32";case 12:return h>1?`vec${h}<u32>`:"u32";case 7:if(h>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","i32"];case 13:if(h>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","u32"];case 9:if(h!==4)throw new Error("bool must be vec4");return["u32","vec4<bool>"];case 22:return"i32";case 21:return"u32";default:throw new Error(`Unknown data type: ${c}`)}},Gr=(c,h=1)=>{let _=xr(c,h);return typeof _=="string"?_:_[0]},wr=(c,h=1)=>{let _=xr(c,h);return typeof _=="string"?_:_[1]},_r=(...c)=>{let h=[];return c.forEach(_=>{_.length!==0&&h.push({type:12,data:_},{type:12,data:Le.computeStrides(_)})}),h},gs=c=>c%4==0?4:c%2==0?2:1,Xr=(c="f32",h,_="0")=>h&&h!==1?`vec${h}<${c}>(${_})`:`${c}(${_})`,hs=(c,h,_)=>c==="f32"?_:h===1?`f32(${_})`:`vec${h}<f32>(${_})`,Bs=(c,h)=>h===4?`(${c}.x + ${c}.y + ${c}.z + ${c}.w)`:h===2?`(${c}.x + ${c}.y)`:h===3?`(${c}.x + ${c}.y + ${c}.z)`:c,Or=(c,h,_,S)=>c.startsWith("uniforms.")&&_>4?typeof h=="string"?S==="f16"?`${c}[(${h}) / 8][(${h}) % 8 / 4][(${h}) % 8 % 4]`:`${c}[(${h}) / 4][(${h}) % 4]`:S==="f16"?`${c}[${Math.floor(h/8)}][${Math.floor(h%8/4)}][${h%8%4}]`:`${c}[${Math.floor(h/4)}][${h%4}]`:_>1?`${c}[${h}]`:c,Kt=(c,h,_,S,V)=>{let n=typeof _=="number",l=n?_:_.length,p=[...new Array(l).keys()],b=l<2?"u32":l<=4?`vec${l}<u32>`:`array<u32, ${l}>`,C=xr(h,V),E=typeof C=="string"?C:C[1],v=typeof C=="string"?C:C[0],x={indices:b,value:E,storage:v,tensor:h},L=St=>typeof St=="string"?St:`${St}u`,W={offsetToIndices:!1,indicesToOffset:!1,broadcastedIndicesToOffset:!1,set:!1,setByIndices:!1,get:!1,getByIndices:!1},te=n?"uniforms.":"",$=`${te}${c}_shape`,j=`${te}${c}_strides`,le="";for(let St=0;St<l-1;St++)le+=`
    let dim${St} = current / ${Or(j,St,l)};
    let rest${St} = current % ${Or(j,St,l)};
    indices[${St}] = dim${St};
    current = rest${St};
    `;le+=`indices[${l-1}] = current;`;let me=l<2?"":`
  fn o2i_${c}(offset: u32) -> ${x.indices} {
    var indices: ${x.indices};
    var current = offset;
    ${le}
    return indices;
  }`,_e=[];if(l>=2)for(let St=l-1;St>=0;St--)_e.push(`${Or(j,St,l)} * (indices[${St}])`);let Ee=l<2?"":`
  fn i2o_${c}(indices: ${x.indices}) -> u32 {
    return ${_e.join("+")};
  }`,Fe=(...St)=>l===0?"0u":`${x.indices}(${St.map(L).join(",")})`,Ye=(St,kr)=>l<2?`${St}`:`${Or(St,kr,l)}`,dt={},mt=(St,kr)=>(()=>{if(x.storage===x.value)return`${c}[${St}]=${kr};`;if(x.storage==="vec2<u32>"&&x.value==="i32")return`${c}[${St}]=vec2<u32>(u32(${kr}), select(0u, 0xFFFFFFFFu, ${kr} < 0));`;if(x.storage==="vec2<u32>"&&x.value==="u32")return`${c}[${St}]=vec2<u32>(u32(${kr}), 0u);`;if(x.storage==="u32"&&x.value==="vec4<bool>")return`${c}[${St}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${kr}));`;throw new Error(`not supported combination of storage type ${x.storage} and value type ${x.value} yet`)})(),xt=St=>(()=>{if(x.storage===x.value)return`${c}[${St}]`;if(x.storage==="vec2<u32>"&&x.value==="i32")return`i32(${c}[${St}].x)`;if(x.storage==="vec2<u32>"&&x.value==="u32")return`u32(${c}[${St}].x)`;if(x.storage==="u32"&&x.value==="vec4<bool>")return`vec4<bool>(bool(${c}[${St}] & 0xFFu), bool(${c}[${St}] & 0xFF00u), bool(${c}[${St}] & 0xFF0000u), bool(${c}[${St}] & 0xFF000000u))`;throw new Error(`not supported combination of storage type ${x.storage} and value type ${x.value} yet`)})(),jt=l<2?"":`
  fn get_${c}ByIndices(indices: ${x.indices}) -> ${E} {
    return ${xt(`i2o_${c}(indices)`)};
  }`,Gt=l<2?"":(()=>{let St=p.map(fr=>`d${fr}: u32`).join(", "),kr=p.map(fr=>`d${fr}`).join(", ");return`
  fn get_${c}(${St}) -> ${E} {
    return get_${c}ByIndices(${Fe(kr)});
  }`})(),Zt=l<2?"":`
  fn set_${c}ByIndices(indices: ${x.indices}, value: ${E}) {
    ${mt(`i2o_${c}(indices)`,"value")}
  }`,ar=l<2?"":(()=>{let St=p.map(fr=>`d${fr}: u32`).join(", "),kr=p.map(fr=>`d${fr}`).join(", ");return`
  fn set_${c}(${St}, value: ${E}) {
    set_${c}ByIndices(${Fe(kr)}, value);
  }`})();return{impl:()=>{let St=[],kr=!1;return W.offsetToIndices&&(St.push(me),kr=!0),W.indicesToOffset&&(St.push(Ee),kr=!0),W.broadcastedIndicesToOffset&&(Object.values(dt).forEach(fr=>St.push(fr)),kr=!0),W.set&&(St.push(ar),kr=!0),W.setByIndices&&(St.push(Zt),kr=!0),W.get&&(St.push(Gt),kr=!0),W.getByIndices&&(St.push(jt),kr=!0),!n&&kr&&St.unshift(`const ${$} = ${x.indices}(${_.join(",")});`,`const ${j} = ${x.indices}(${Le.computeStrides(_).join(",")});`),St.join(`
`)},type:x,offsetToIndices:St=>(W.offsetToIndices=!0,l<2?St:`o2i_${c}(${St})`),indicesToOffset:St=>(W.indicesToOffset=!0,l<2?St:`i2o_${c}(${St})`),broadcastedIndicesToOffset:(St,kr)=>{W.broadcastedIndicesToOffset=!0;let fr=`${kr.name}broadcastedIndicesTo${c}Offset`;if(fr in dt)return`${fr}(${St})`;let ur=[];for(let Jr=l-1;Jr>=0;Jr--){let Sr=kr.indicesGet("outputIndices",Jr+kr.rank-l);ur.push(`${Ye(j,Jr)} * (${Sr} % ${Ye($,Jr)})`)}return dt[fr]=`fn ${fr}(outputIndices: ${kr.type.indices}) -> u32 {
             return ${ur.length>0?ur.join("+"):"0u"};
           }`,`${fr}(${St})`},indices:Fe,indicesGet:Ye,indicesSet:(St,kr,fr)=>l<2?`${St}=${fr};`:`${Or(St,kr,l)}=${fr};`,set:(...St)=>{if(St.length!==l+1)throw new Error(`indices length must be ${l}`);let kr=St[l];if(typeof kr!="string")throw new Error("value must be string");let fr=St.slice(0,l).map(L).join(",");return l===0?mt("0u",kr):l===1?mt(fr[0],kr):(W.set=!0,W.setByIndices=!0,W.indicesToOffset=!0,`set_${c}(${fr}, ${kr})`)},setByOffset:mt,setByIndices:(St,kr)=>l<2?mt(St,kr):(W.setByIndices=!0,W.indicesToOffset=!0,`set_${c}ByIndices(${St}, ${kr});`),get:(...St)=>{if(St.length!==l)throw new Error(`indices length must be ${l}`);let kr=St.map(L).join(",");return l===0?xt("0u"):l===1?xt(kr[0]):(W.get=!0,W.getByIndices=!0,W.indicesToOffset=!0,`get_${c}(${kr})`)},getByOffset:xt,getByIndices:St=>l<2?xt(St):(W.getByIndices=!0,W.indicesToOffset=!0,`get_${c}ByIndices(${St})`),usage:S,name:c,strides:j,shape:$,rank:l}},rr=(c,h,_,S=1)=>Kt(c,h,_,"input",S),Lr=(c,h,_,S=1)=>Kt(c,h,_,"output",S),Rs=(c,h,_)=>Kt(c,h,_,"atomicOutput",1),Ws=(c,h,_,S=1)=>Kt(c,h,_,"internal",S),Vr=class{constructor(c,h){this.normalizedDispatchGroup=c,this.limits=h,this.internalVariables=[],this.variables=[],this.uniforms=[],this.variableIndex=0}guardAgainstOutOfBoundsWorkgroupSizes(c){return`if (global_idx >= ${typeof c=="number"?`${c}u`:c}) { return; }`}mainStart(c=hr){let h=typeof c=="number"?c:c[0],_=typeof c=="number"?1:c[1],S=typeof c=="number"?1:c[2];if(h>this.limits.maxComputeWorkgroupSizeX||_>this.limits.maxComputeWorkgroupSizeY||S>this.limits.maxComputeWorkgroupSizeZ)throw new Error(`workgroup size [${h}, ${_}, ${S}] exceeds the maximum workgroup size [${this.limits.maxComputeWorkgroupSizeX}, ${this.limits.maxComputeWorkgroupSizeY}, ${this.limits.maxComputeWorkgroupSizeZ}].`);if(h*_*S>this.limits.maxComputeInvocationsPerWorkgroup)throw new Error(`workgroup size [${h}, ${_}, ${S}] exceeds the maximum workgroup invocations ${this.limits.maxComputeInvocationsPerWorkgroup}.`);let V=this.normalizedDispatchGroup[1]===1&&this.normalizedDispatchGroup[2]===1;return`@compute @workgroup_size(${h}, ${_}, ${S})
  fn main(${V?`@builtin(global_invocation_id) global_id : vec3<u32>,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(local_invocation_index) local_idx : u32,
    @builtin(local_invocation_id) local_id : vec3<u32>`:`@builtin(global_invocation_id) global_id : vec3<u32>,
                                             @builtin(local_invocation_id) local_id : vec3<u32>,
    @builtin(local_invocation_index) local_idx : u32,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(num_workgroups) num_workgroups : vec3<u32>`}) {
    ${V?`let global_idx = global_id.x;
         let workgroup_index = workgroup_id.x;`:`let workgroup_index = workgroup_id.z * num_workgroups[0] * num_workgroups[1] +
             workgroup_id.y * num_workgroups[0] + workgroup_id.x;
         let global_idx = workgroup_index * ${h*_*S}u + local_idx;`}
  `}appendVariableUniforms(c){c.rank!==0&&(c.shape.startsWith("uniforms.")&&this.uniforms.push({name:c.shape.replace("uniforms.",""),type:"u32",length:c.rank}),c.strides.startsWith("uniforms.")&&this.uniforms.push({name:c.strides.replace("uniforms.",""),type:"u32",length:c.rank}))}declareVariable(c,h){if(c.usage==="internal")throw new Error("cannot use internal variable with declareVariable(). use registerInternalVariables() instead.");this.variables.push(c),this.appendVariableUniforms(c);let _=c.usage==="input"?"read":"read_write",S=c.usage==="atomicOutput"?"atomic<i32>":c.type.storage;return`@group(0) @binding(${h}) var<storage, ${_}> ${c.name}: array<${S}>;`}declareVariables(...c){return c.map(h=>this.declareVariable(h,this.variableIndex++)).join(`
`)}registerInternalVariable(c){if(c.usage!=="internal")throw new Error("cannot use input or output variable with registerInternalVariable(). use declareVariables() instead.");this.internalVariables.push(c),this.appendVariableUniforms(c)}registerInternalVariables(...c){return c.forEach(h=>this.registerInternalVariable(h)),this}registerUniform(c,h,_=1){return this.uniforms.push({name:c,type:h,length:_}),this}registerUniforms(c){return this.uniforms=this.uniforms.concat(c),this}uniformDeclaration(){if(this.uniforms.length===0)return"";let c=[];for(let{name:h,type:_,length:S}of this.uniforms)if(S&&S>4)_==="f16"?c.push(`@align(16) ${h}:array<mat2x4<${_}>, ${Math.ceil(S/8)}>`):c.push(`${h}:array<vec4<${_}>, ${Math.ceil(S/4)}>`);else{let V=S==null||S===1?_:`vec${S}<${_}>`;c.push(`${h}:${V}`)}return`
      struct Uniforms { ${c.join(", ")} };
      @group(0) @binding(${this.variableIndex}) var<uniform> uniforms: Uniforms;`}get additionalImplementations(){return this.uniformDeclaration()+this.variables.map(c=>c.impl()).join(`
`)+this.internalVariables.map(c=>c.impl()).join(`
`)}get variablesInfo(){if(this.uniforms.length===0)return;let c=h=>[12,10,1,6][["u32","f16","f32","i32"].indexOf(h)];return this.uniforms.map(h=>[c(h.type),h.length??1])}},Js=(c,h)=>new Vr(c,h)}),Vo=Me(()=>{Is(),Ps(),Ka(),zs(),qs=(c,h)=>{if(!c||c.length!==1)throw new Error("Transpose requires 1 input.");if(h.length!==0&&h.length!==c[0].dims.length)throw new Error(`perm size ${h.length} does not match input rank ${c[0].dims.length}`)},es=(c,h)=>h.length!==0?h:[...new Array(c).keys()].reverse(),_s=(c,h)=>Le.sortBasedOnPerm(c,es(c.length,h)),Rr=(c,h,_,S)=>{let V=`fn perm(i: ${S.type.indices}) -> ${_.type.indices} {
    var a: ${_.type.indices};`;for(let n=0;n<h;++n)V+=`a[${c[n]}]=i[${n}];`;return V+"return a;}"},cs=(c,h)=>{let _=[],S=[];for(let V=0;V<c.length;++V)c[V]!==1&&_.push(c[V]),c[h[V]]!==1&&S.push(h[V]);return{newShape:_,newPerm:S}},Da=(c,h)=>{let _=0;for(let S=0;S<c.length;++S)if(h[c[S]]!==1){if(c[S]<_)return!1;_=c[S]}return!0},Us=(c,h)=>{let _,S=c.dataType,V=c.dims.length,n=es(V,h),l=_s(c.dims,n),p=c.dims,b=l;if(V<2||Da(n,c.dims))return _=L=>{let W=rr("input",S,p,4),te=Lr("output",S,b,4);return`
  ${L.registerUniform("output_size","u32").declareVariables(W,te)}
  ${L.mainStart()}
    ${L.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    output[global_idx] = input[global_idx];
  }`},{name:"TransposeCopy",shaderCache:{inputDependencies:["type"]},getRunData:()=>{let L=Le.size(l);return{outputs:[{dims:l,dataType:c.dataType}],dispatchGroup:{x:Math.ceil(L/64/4)},programUniforms:[{type:12,data:Math.ceil(L/4)}]}},getShaderSource:_};let{newShape:C,newPerm:E}=cs(c.dims,n),v=Le.areEqual(E,[2,3,1]),x=Le.areEqual(E,[3,1,2]);if(C.length===2||v||x){p=v?[C[0],C[1]*C[2]]:x?[C[0]*C[1],C[2]]:C,b=[p[1],p[0]];let L=16;return _=W=>{let te=rr("a",S,p.length),$=Lr("output",S,b.length);return`
  ${W.registerUniform("output_size","u32").declareVariables(te,$)}
  var<workgroup> tile : array<array<${$.type.value}, ${L+1}>, ${L}>;
  ${W.mainStart([L,L,1])}
    let stride = (uniforms.output_shape[1] - 1) / ${L} + 1;
    let workgroup_id_x = workgroup_index % stride;
    let workgroup_id_y = workgroup_index / stride;
    let input_col = workgroup_id_y * ${L}u + local_id.x;
    let input_row = workgroup_id_x * ${L}u + local_id.y;
    if (input_row < uniforms.a_shape[0] && input_col < uniforms.a_shape[1]) {
      tile[local_id.y][local_id.x] = ${te.getByIndices(`${te.type.indices}(input_row, input_col)`)};
    }
    workgroupBarrier();

    let output_col = workgroup_id_x * ${L}u + local_id.x;
    let output_row = workgroup_id_y * ${L}u + local_id.y;
    if (output_row < uniforms.output_shape[0] && output_col < uniforms.output_shape[1]) {
      ${$.setByIndices(`${$.type.indices}(output_row, output_col)`,"tile[local_id.x][local_id.y]")}
    }
  }`},{name:"TransposeShared",shaderCache:{inputDependencies:["type"]},getRunData:()=>{let W=Le.size(l);return{outputs:[{dims:l,dataType:c.dataType}],dispatchGroup:{x:Math.ceil(b[1]/L),y:Math.ceil(b[0]/L)},programUniforms:[{type:12,data:W},..._r(p,b)]}},getShaderSource:_}}return _=L=>{let W=rr("a",S,p.length),te=Lr("output",S,b.length);return`
  ${L.registerUniform("output_size","u32").declareVariables(W,te)}

  ${Rr(n,V,W,te)}

  ${L.mainStart()}
    ${L.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let indices = ${te.offsetToIndices("global_idx")};
    let aIndices = perm(indices);

    ${te.setByOffset("global_idx",W.getByIndices("aIndices"))}
  }`},{name:"Transpose",shaderCache:{hint:`${h}`,inputDependencies:["rank"]},getRunData:()=>{let L=Le.size(l);return{outputs:[{dims:l,dataType:c.dataType}],dispatchGroup:{x:Math.ceil(L/64)},programUniforms:[{type:12,data:L},..._r(p,b)]}},getShaderSource:_}},Ua=(c,h)=>{qs(c.inputs,h.perm),c.compute(Us(c.inputs[0],h.perm))},Ir=c=>Ae({perm:c.perm})}),Wu=Me(()=>{Is(),Ps(),zs(),V0(),Vo(),Sa={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate * candidate",logSumExp:"bestValue + exp(candidate)",l1:"bestValue + abs(candidate)",l2:"bestValue + candidate * candidate",logSum:"bestValue + candidate"},or={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate",logSumExp:"bestValue + candidate",l1:"bestValue + candidate",l2:"bestValue + candidate",logSum:"bestValue + candidate"},ss={max:"_A[offset]",min:"_A[offset]",mean:"0",sum:"0",prod:"1",sumSquare:"0",logSumExp:"0",l1:"0",l2:"0",logSum:"0"},qA={max:"bestValue",min:"bestValue",sum:"bestValue",prod:"bestValue",sumSquare:"bestValue",logSumExp:"log(bestValue)",l1:"bestValue",l2:"sqrt(bestValue)",logSum:"log(bestValue)"},kA=(c,h)=>{let _=[];for(let S=h-c;S<h;++S)_.push(S);return _},XA=(c,h)=>{let _=[],S=c.length;for(let n=0;n<S;n++)h.indexOf(n)===-1&&_.push(c[n]);let V=h.map(n=>c[n]);return[_,V]},lo=(c,h)=>{let _=c.length+h.length,S=[],V=0;for(let n=0;n<_;n++)h.indexOf(n)===-1?S.push(c[V++]):S.push(1);return S},ws=(c,h)=>{for(let _=0;_<c.length;++_)if(c[c.length-_-1]!==h-1-_)return!1;return!0},ZA=(c,h)=>{let _=[];if(!ws(c,h)){for(let S=0;S<h;++S)c.indexOf(S)===-1&&_.push(S);c.forEach(S=>_.push(S))}return _},Eo=(c,h,_,S,V,n,l)=>{let p=_[0].dims,b=Le.size(n),C=Le.size(l),E=rr("_A",_[0].dataType,p),v=Lr("output",V,n),x=64;b===1&&(x=256);let L=`
          var<workgroup> aBestValues : array<f32, ${x}>;
       `;return{name:c,shaderCache:{hint:`${h};${x}`,inputDependencies:["type"]},getShaderSource:W=>`
        ${W.registerUniform("reduceSize","u32").declareVariables(E,v)}
        ${L}
        fn DIV_CEIL(a : u32, b : u32) -> u32 {
          return ((a - 1u) / b + 1u);
         }
         ${W.mainStart(x)}

          let outputIndex = global_idx / ${x};
          let offset = outputIndex * uniforms.reduceSize;

          var bestValue = f32(${ss[S]});
          let Length = uniforms.reduceSize;
          for (var k = local_idx; k < Length; k = k + ${x}) {
           let candidate = f32(${E.getByOffset("offset + k")});
           bestValue = ${Sa[S]};
          }
          aBestValues[local_idx] = bestValue;
          workgroupBarrier();

         var reduceSize = min(Length, ${x}u);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (local_idx < currentSize) {
            let candidate = aBestValues[local_idx + interval];
            bestValue = ${or[S]};
            aBestValues[local_idx] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (local_idx == 0u) {
          ${v.setByOffset("outputIndex",S==="mean"?`${v.type.storage}(bestValue / f32(uniforms.reduceSize))`:`${v.type.storage}(${qA[S]})`)};
         }
        }`,getRunData:()=>({outputs:[{dims:n,dataType:V}],dispatchGroup:{x:b},programUniforms:[{type:12,data:C}]})}},Mn=(c,h,_,S)=>{let V=c.inputs.length===1?_:To(c.inputs,_),n=V.axes;n.length===0&&!V.noopWithEmptyAxes&&(n=c.inputs[0].dims.map((L,W)=>W));let l=Le.normalizeAxes(n,c.inputs[0].dims.length),p=l,b=c.inputs[0],C=ZA(p,c.inputs[0].dims.length);C.length>0&&(b=c.compute(Us(c.inputs[0],C),{inputs:[0],outputs:[-1]})[0],p=kA(p.length,b.dims.length));let[E,v]=XA(b.dims,p),x=E;V.keepDims&&(x=lo(E,l)),c.compute(Eo(h,V.cacheKey,[b],S,c.inputs[0].dataType,x,v),{inputs:[b]})},tn=(c,h)=>{Mn(c,"ReduceMeanShared",h,"mean")},Hr=(c,h)=>{Mn(c,"ReduceL1Shared",h,"l1")},yn=(c,h)=>{Mn(c,"ReduceL2Shared",h,"l2")},Un=(c,h)=>{Mn(c,"ReduceLogSumExpShared",h,"logSumExp")},Uo=(c,h)=>{Mn(c,"ReduceMaxShared",h,"max")},Ho=(c,h)=>{Mn(c,"ReduceMinShared",h,"min")},Ni=(c,h)=>{Mn(c,"ReduceProdShared",h,"prod")},Yo=(c,h)=>{Mn(c,"ReduceSumShared",h,"sum")},yA=(c,h)=>{Mn(c,"ReduceSumSquareShared",h,"sumSquare")},Dl=(c,h)=>{Mn(c,"ReduceLogSumShared",h,"logSum")}}),V0=Me(()=>{Is(),Ps(),Ka(),zs(),Wu(),Fn=c=>{if(!c||c.length===0||c.length>2)throw new Error("Reduce op requires 1 or 2 inputs.");if(c.length===2&&c[1].dims.length!==1)throw new Error("Invalid axes input dims.")},aa=c=>["","",`var value = ${c.getByIndices("input_indices")};`,""],Bo=(c,h,_,S,V,n,l=!1,p=!1)=>{let b=[],C=_[0].dims,E=C.length,v=Le.normalizeAxes(V,E),x=!p&&v.length===0;C.forEach((te,$)=>{x||v.indexOf($)>=0?l&&b.push(1):b.push(te)});let L=b.length,W=Le.size(b);return{name:c,shaderCache:h,getShaderSource:te=>{let $=[],j=rr("_A",_[0].dataType,E),le=Lr("output",n,L),me=S(j,le,v),_e=me[2];for(let Ee=0,Fe=0;Ee<E;Ee++)x||v.indexOf(Ee)>=0?(l&&Fe++,_e=`for(var j${Ee}: u32 = 0; j${Ee} < ${C[Ee]}; j${Ee}++) {
                  ${me[2].includes("last_index")?`let last_index = j${Ee};`:""}
                  ${j.indicesSet("input_indices",Ee,`j${Ee}`)}
                  ${_e}
                }`):($.push(`${j.indicesSet("input_indices",Ee,le.indicesGet("output_indices",Fe))};`),Fe++);return`

        ${te.registerUniform("output_size","u32").declareVariables(j,le)}

        ${te.mainStart()}
          ${te.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          var input_indices: ${j.type.indices};
          let output_indices = ${le.offsetToIndices("global_idx")};

          ${$.join(`
`)}
          ${me[0]}       // init ops for reduce max/min
          ${me[1]}
          ${_e}
          ${me[3]}
          ${me.length===4?le.setByOffset("global_idx","value"):me.slice(4).join(`
`)}
        }`},getRunData:()=>({outputs:[{dims:b,dataType:n}],dispatchGroup:{x:Math.ceil(W/64)},programUniforms:[{type:12,data:W},..._r(C,b)]})}},To=(c,h)=>{let _=[];return c[1].dims[0]>0&&c[1].getBigInt64Array().forEach(S=>_.push(Number(S))),Ae({axes:_,keepDims:h.keepDims,noopWithEmptyAxes:h.noopWithEmptyAxes})},_n=(c,h,_,S)=>{let V=c.inputs,n=V.length===1?_:To(V,_);c.compute(Bo(h,{hint:n.cacheKey,inputDependencies:["rank"]},[V[0]],n.noopWithEmptyAxes&&n.axes.length===0?aa:S,n.axes,V[0].dataType,n.keepDims,n.noopWithEmptyAxes),{inputs:[0]})},Li=(c,h)=>{Fn(c.inputs),_n(c,"ReduceLogSum",h,(_,S)=>[`var value = ${S.type.storage}(0);`,"",`value += ${_.getByIndices("input_indices")};`,"value = log(value);"])},mi=(c,h)=>{Fn(c.inputs),_n(c,"ReduceL1",h,(_,S)=>[`var value = ${S.type.storage}(0);`,"",`value += abs(${_.getByIndices("input_indices")});`,""])},Hn=(c,h)=>{Fn(c.inputs),_n(c,"ReduceL2",h,(_,S)=>[`var t = ${S.type.value}(0); var value = ${S.type.value}(0);`,"",`t = ${_.getByIndices("input_indices")}; value += (t * t);`,"value = sqrt(value);"])},Ri=(c,h)=>{Fn(c.inputs),_n(c,"ReduceLogSumExp",h,(_,S)=>[`var value = ${S.type.storage}(0);`,"",`value += exp(${_.getByIndices("input_indices")});`,"value = log(value);"])},Xi=(c,h)=>{Fn(c.inputs),_n(c,"ReduceMax",h,(_,S,V)=>{let n=[];for(let l=0;l<_.rank;l++)(V.indexOf(l)>=0||V.length===0)&&n.push(_.indicesSet("input_indices",l,0));return[`${n.join(`
`)}`,`var value = ${_.getByIndices("input_indices")};`,`value = max(value, ${_.getByIndices("input_indices")});`,""]})},JA=(c,h)=>{Fn(c.inputs),_n(c,"ReduceMean",h,(_,S,V)=>{let n=1;for(let l=0;l<_.rank;l++)(V.indexOf(l)>=0||V.length===0)&&(n*=c.inputs[0].dims[l]);return["var sum = f32(0);","",`sum += f32(${_.getByIndices("input_indices")});`,`let value = ${S.type.value}(sum / ${n});`]})},_A=(c,h)=>{Fn(c.inputs),_n(c,"ReduceMin",h,(_,S,V)=>{let n=[];for(let l=0;l<_.rank;l++)(V.indexOf(l)>=0||V.length===0)&&n.push(`input_indices[${l}] = 0;`);return[`${n.join(`
`)}`,`var value = ${_.getByIndices("input_indices")};`,`value = min(value, ${_.getByIndices("input_indices")});`,""]})},$A=(c,h)=>{Fn(c.inputs),_n(c,"ReduceProd",h,(_,S)=>[`var value = ${S.type.storage}(1);`,"",`value *= ${_.getByIndices("input_indices")};`,""])},Br=(c,h)=>{Fn(c.inputs),_n(c,"ReduceSum",h,(_,S)=>[`var value = ${S.type.storage}(0);`,"",`value += ${_.getByIndices("input_indices")};`,""])},ji=(c,h)=>{Fn(c.inputs),_n(c,"ReduceSumSquare",h,(_,S)=>[`var t = ${S.type.value}(0); var value = ${S.type.value}(0);`,"",`t = ${_.getByIndices("input_indices")}; value += t * t;`,""])},Nr=(c,h,_)=>{if(h.length===0)return _;let S=1,V=1;for(let n=0;n<h.length;n++)h.indexOf(n)===-1?S*=c[n]:V*=c[n];return V<32&&S>1024},vA=(c,h)=>{Nr(c.inputs[0].dims,h.axes,h.noopWithEmptyAxes)?JA(c,h):tn(c,h)},Ko=(c,h)=>{Nr(c.inputs[0].dims,h.axes,h.noopWithEmptyAxes)?mi(c,h):Hr(c,h)},En=(c,h)=>{Nr(c.inputs[0].dims,h.axes,h.noopWithEmptyAxes)?Hn(c,h):yn(c,h)},Ga=(c,h)=>{Nr(c.inputs[0].dims,h.axes,h.noopWithEmptyAxes)?Ri(c,h):Un(c,h)},Vi=(c,h)=>{Nr(c.inputs[0].dims,h.axes,h.noopWithEmptyAxes)?Xi(c,h):Uo(c,h)},Zi=(c,h)=>{Nr(c.inputs[0].dims,h.axes,h.noopWithEmptyAxes)?_A(c,h):Ho(c,h)},qo=(c,h)=>{Nr(c.inputs[0].dims,h.axes,h.noopWithEmptyAxes)?$A(c,h):Ni(c,h)},ia=(c,h)=>{Nr(c.inputs[0].dims,h.axes,h.noopWithEmptyAxes)?Br(c,h):Yo(c,h)},xA=(c,h)=>{Nr(c.inputs[0].dims,h.axes,h.noopWithEmptyAxes)?ji(c,h):yA(c,h)},el=(c,h)=>{Nr(c.inputs[0].dims,h.axes,h.noopWithEmptyAxes)?Li(c,h):Dl(c,h)}}),Uu=Me(()=>{Is(),Ka(),V0(),Wi=c=>{if(!c||c.length===0||c.length>2)throw new Error("ArgMinMaxOp op requires 1 or 2 inputs.");if(c[0].dataType!==1)throw new Error("Invalid input type.")},Ji=(c,h)=>{Wi(c.inputs),c.compute(Bo("ArgMin",{hint:h.cacheKey,inputDependencies:["rank"]},[c.inputs[0]],(_,S,V)=>{let n=[];for(let l=0;l<_.rank;l++)(V.indexOf(l)>=0||V.length===0)&&n.push(`input_indices[${l}] = 0;`);return[`${n.join(`
`)}`,`var value = ${_.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${_.getByIndices("input_indices")} ${h.selectLastIndex>0?"<=":"<"} value) {
         value = ${_.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",S.setByOffset("global_idx","best_index")]},[h.axis],7,h.keepDims),{inputs:[0]})},tl=(c,h)=>{Wi(c.inputs),c.compute(Bo("argMax",{hint:h.cacheKey,inputDependencies:["rank"]},[c.inputs[0]],(_,S,V)=>{let n=[];for(let l=0;l<_.rank;l++)(V.indexOf(l)>=0||V.length===0)&&n.push(`input_indices[${l}] = 0;`);return[`${n.join(`
`)}`,`var value = ${_.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${_.getByIndices("input_indices")} ${h.selectLastIndex>0?">=":">"} value) {
         value = ${_.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",S.setByOffset("global_idx","best_index")]},[h.axis],7,h.keepDims),{inputs:[0]})},Xo=c=>Ae(c)}),W0=Me(()=>{Is(),Ps(),j0(),zs(),$i=(c,h)=>{let _=c[0],S=c[1],V=c[2],n=c[3],l=c[4],p=c[5];if(l&&p)throw new Error("Attention cannot have both past and attention_bias");if(_.dims.length!==3)throw new Error('Input "input" must have 3 dimensions');let b=_.dims[0],C=_.dims[1],E=_.dims[2];if(V.dims.length!==1)throw new Error('Input "bias" is expected to have 1 dimensions');if(S.dims.length!==2)throw new Error('Input "weights" is expected to have 2 dimensions');if(S.dims[0]!==E)throw new Error("Input 1 dimension 0 should have same length as dimension 2 of input 0");if(V.dims[0]!==S.dims[1])throw new Error('Input "bias" dimension 0 should have same length as dimension 1 of input "weights"');let v=V.dims[0]/3,x=v,L=x;if(h.qkvHiddenSizes.length>0){if(h.qkvHiddenSizes.length!==3)throw new Error("qkv_hidden_sizes attribute should have 3 elements");for(let j of h.qkvHiddenSizes)if(j%h.numHeads!=0)throw new Error("qkv_hidden_sizes should be divisible by num_heads");v=h.qkvHiddenSizes[0],x=h.qkvHiddenSizes[1],L=h.qkvHiddenSizes[2]}let W=C;if(v!==x)throw new Error("qkv_hidden_sizes first element should be same as the second");if(V.dims[0]!==v+x+L)throw new Error('Input "bias" dimension 0 should have same length as sum of Q/K/V hidden sizes');let te=0;if(l){if(x!==L)throw new Error('Input "past" expect k_hidden_size == v_hidden_size');if(l.dims.length!==5)throw new Error('Input "past" must have 5 dimensions');if(l.dims[0]!==2)throw new Error('Input "past" first dimension must be 2');if(l.dims[1]!==b)throw new Error('Input "past" second dimension must be batch_size');if(l.dims[2]!==h.numHeads)throw new Error('Input "past" third dimension must be num_heads');if(l.dims[4]!==x/h.numHeads)throw new Error('Input "past" fifth dimension must be k_hidden_size / num_heads');h.pastPresentShareBuffer||(te=l.dims[3])}let $=W+te;if(n)throw new Error("Mask not supported");if(l)throw new Error("past is not supported");if(p){if(p.dims.length!==4)throw new Error('Input "attention_bias" must have 4 dimensions');if(p.dims[0]!==b||p.dims[1]!==h.numHeads||p.dims[2]!==C||p.dims[3]!==$)throw new Error('Expect "attention_bias" shape (batch_size, num_heads, sequence_length, total_sequence_length)')}return{batchSize:b,sequenceLength:C,pastSequenceLength:te,kvSequenceLength:W,totalSequenceLength:$,maxSequenceLength:-1,inputHiddenSize:E,hiddenSize:v,vHiddenSize:L,headSize:Math.floor(v/h.numHeads),vHeadSize:Math.floor(L/h.numHeads),numHeads:h.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:h.maskFilterValue,maskType:0,scale:h.scale,broadcastResPosBias:!1,passPastInKv:!1,qkvFormat:1}},zr=(c,h,_)=>h&&c?`
      let total_sequence_length_input = u32(${h.getByOffset("0")});
      let present_sequence_length = max(total_sequence_length_input, uniforms.past_sequence_length);
      let is_subsequent_prompt: bool = sequence_length > 1 && sequence_length != total_sequence_length_input;
      let is_first_prompt: bool = is_subsequent_prompt == false && sequence_length == total_sequence_length_input;
      total_sequence_length = u32(${c==null?void 0:c.getByOffset("batchIdx")}) + 1;
      var past_sequence_length: u32 = 0;
      if (is_first_prompt == false) {
        past_sequence_length = total_sequence_length - sequence_length;
      }
       `:`
    ${_?"let past_sequence_length = uniforms.past_sequence_length":""};
    let present_sequence_length = total_sequence_length;
    `,li=(c,h,_,S,V,n,l,p)=>{let b=gs(l?1:n),C=64,E=n/b;E<C&&(C=32);let v=Math.ceil(n/b/C),x=[{type:12,data:h},{type:12,data:_},{type:12,data:S},{type:12,data:V},{type:12,data:E},{type:12,data:v}],L=Gr(c.dataType,b),W=wr(1,b),te=["type"];return l&&te.push("type"),p&&te.push("type"),{name:"AttentionProbsSoftmax",shaderCache:{hint:`${C};${L};${b}`,inputDependencies:te},getShaderSource:$=>{let j=Lr("x",c.dataType,c.dims,b),le=[j],me=l?rr("seq_lens",l.dataType,l.dims):void 0;me&&le.push(me);let _e=p?rr("total_sequence_length_input",p.dataType,p.dims):void 0;_e&&le.push(_e);let Ee=wr(c.dataType);return`
  var<workgroup> thread_max: array<f32, ${C}>;
  var<workgroup> thread_sum: array<f32, ${C}>;
  ${$.registerUniforms([{name:"batch_size",type:"u32"},{name:"num_heads",type:"u32"},{name:"past_sequence_length",type:"u32"},{name:"sequence_length",type:"u32"},{name:"total_sequence_length",type:"u32"},{name:"elements_per_thread",type:"u32"}]).declareVariables(...le)}
  ${$.mainStart([C,1,1])}
    let batchIdx = workgroup_id.z / uniforms.num_heads;
    let headIdx = workgroup_id.z % uniforms.num_heads;
    let sequence_length = uniforms.sequence_length;
    var total_sequence_length = uniforms.total_sequence_length;
    ${zr(me,_e,!1)}
    let local_offset = local_idx * uniforms.elements_per_thread;
    let offset = (global_idx / ${C}) * uniforms.total_sequence_length + local_offset;
    let seq_causal_length = ${l?"u32(past_sequence_length + workgroup_id.y + 1)":"total_sequence_length"};
    var thread_max_vector = ${W}(-3.402823e+38f);
    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
      thread_max_vector = max(${W}(x[offset + i]), thread_max_vector);
    }
    thread_max[local_idx] = ${(()=>{switch(b){case 1:return"thread_max_vector";case 2:return"max(thread_max_vector.x, thread_max_vector.y)";case 4:return"max(max(thread_max_vector.x, thread_max_vector.y), max(thread_max_vector.z, thread_max_vector.w))";default:throw new Error(`Unsupported components: ${b}`)}})()};
    workgroupBarrier();

    var max_value =  f32(-3.402823e+38f);
    for (var i = 0u; i < ${C}; i++) {
      max_value = max(thread_max[i], max_value);
    }

    var sum_vector = ${W}(0);
    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
      sum_vector += exp(${W}(x[offset + i]) - max_value);
    }
    thread_sum[local_idx] = ${(()=>{switch(b){case 1:return"sum_vector";case 2:return"sum_vector.x + sum_vector.y";case 4:return"sum_vector.x + sum_vector.y + sum_vector.z + sum_vector.w";default:throw new Error(`Unsupported components: ${b}`)}})()};
    workgroupBarrier();

    var sum: f32 = 0;
    for (var i = 0u; i < ${C}; i++) {
      sum += thread_sum[i];
    }

    if (sum == 0) {
      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
        x[offset + i] = ${j.type.value}(${Ee}(1.0) / ${Ee}(seq_causal_length));
      }
    } else {
      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
        var f32input = ${W}(x[offset + i]);
        x[offset + i] = ${j.type.value}(exp(f32input - max_value) / sum);
      }
    }
      ${l?`
        for (var total_seq_id: u32 = seq_causal_length; total_seq_id + local_offset < uniforms.total_sequence_length; total_seq_id++) {
          x[offset + total_seq_id] = ${j.type.value}(${Ee}(0));
        }`:""};
  }`},getRunData:()=>({outputs:[],dispatchGroup:{x:Math.ceil(n/C),y:V,z:h*_},programUniforms:x})}},Zo=(c,h,_,S,V,n,l,p,b)=>{let C=l+n.kvSequenceLength,E=[n.batchSize,n.numHeads,n.sequenceLength,C],v=c>1&&S,x=n.kvNumHeads?n.kvNumHeads:n.numHeads,L=v?[n.batchSize,x,C,n.headSize]:void 0,W=n.nReps?n.nReps:1,te=n.scale===0?1/Math.sqrt(n.headSize):n.scale,$=gs(n.headSize),j=n.headSize/$,le=12,me={x:Math.ceil(C/le),y:Math.ceil(n.sequenceLength/le),z:n.batchSize*n.numHeads},_e=[{type:12,data:n.sequenceLength},{type:12,data:j},{type:12,data:C},{type:12,data:n.numHeads},{type:12,data:n.headSize},{type:1,data:te},{type:12,data:l},{type:12,data:n.kvSequenceLength},{type:12,data:W}],Ee=v&&S&&Le.size(S.dims)>0,Fe=["type","type"];Ee&&Fe.push("type"),V&&Fe.push("type"),p&&Fe.push("type"),b&&Fe.push("type");let Ye=[{dims:E,dataType:h.dataType,gpuDataType:0}];return v&&Ye.push({dims:L,dataType:h.dataType,gpuDataType:0}),{name:"AttentionProbs",shaderCache:{hint:`${$};${V!==void 0};${S!==void 0};${c}`,inputDependencies:Fe},getRunData:()=>({outputs:Ye,dispatchGroup:me,programUniforms:_e}),getShaderSource:dt=>{let mt=rr("q",h.dataType,h.dims,$),xt=[mt,rr("key",_.dataType,_.dims,$)];if(Ee){let kr=rr("past_key",S.dataType,S.dims,$);xt.push(kr)}V&&xt.push(rr("attention_bias",V.dataType,V.dims));let jt=p?rr("seq_lens",p.dataType,p.dims):void 0;jt&&xt.push(jt);let Gt=b?rr("total_sequence_length_input",b.dataType,b.dims):void 0;Gt&&xt.push(Gt);let Zt=Lr("output",h.dataType,E),ar=[Zt];v&&ar.push(Lr("present_key",h.dataType,L,$));let St=wr(1,$);return`
  const TILE_SIZE = 12u;

  var<workgroup> tileQ: array<${mt.type.storage}, 144>;
  var<workgroup> tileK: array<${mt.type.storage}, 144>;
  ${dt.registerUniforms([{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"alpha",type:"f32"},{name:"past_sequence_length",type:"u32"},{name:"kv_sequence_length",type:"u32"},{name:"n_reps",type:"u32"}]).declareVariables(...xt,...ar)}
  ${dt.mainStart([le,le,1])}
    // x holds the N and y holds the M
    let headIdx = workgroup_id.z % uniforms.num_heads;
    let kvHeadIdx = ${W===1?"headIdx":"headIdx / uniforms.n_reps"};
    let kv_num_heads = ${W===1?"uniforms.num_heads":"uniforms.num_heads / uniforms.n_reps"};
    let batchIdx = workgroup_id.z / uniforms.num_heads;
    let m = workgroup_id.y * TILE_SIZE;
    let n = workgroup_id.x * TILE_SIZE;
    let sequence_length = uniforms.M;
    var total_sequence_length = uniforms.N;
    ${zr(jt,Gt,!0)}
    let absKvHeadIdx = batchIdx * kv_num_heads + kvHeadIdx;
    let qOffset = workgroup_id.z * uniforms.M * uniforms.K + m * uniforms.K;
    ${Ee&&v?"let pastKeyOffset = absKvHeadIdx * uniforms.past_sequence_length * uniforms.K;":""};
    let kOffset = absKvHeadIdx * uniforms.kv_sequence_length * uniforms.K;
    ${v?"let presentKeyOffset = absKvHeadIdx * uniforms.N * uniforms.K;":""}
    var value = ${St}(0);
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (global_id.y < uniforms.M && w + local_id.x < uniforms.K) {
        tileQ[TILE_SIZE * local_id.y + local_id.x] = q[qOffset + local_id.y * uniforms.K + w + local_id.x];
      }
      if (n + local_id.y < uniforms.N && w + local_id.x < uniforms.K) {
        var idx = TILE_SIZE * local_id.y + local_id.x;
      ${Ee&&v?`
              if (n + local_id.y < past_sequence_length) {
                tileK[idx] = past_key[pastKeyOffset + (n + local_id.y) * uniforms.K + w + local_id.x];
              } else if (n + local_id.y - past_sequence_length < uniforms.kv_sequence_length) {
                tileK[idx] = key[kOffset + (n + local_id.y - past_sequence_length) * uniforms.K + w + local_id.x];
              }`:`
          if (n + local_id.y < uniforms.kv_sequence_length) {
            tileK[idx] = key[kOffset + (n + local_id.y) * uniforms.K + w + local_id.x];
          }`}
      ${v?`if (n + local_id.y < present_sequence_length) {
        present_key[presentKeyOffset + (n + local_id.y) * uniforms.K + w + local_id.x] = tileK[idx];
      }`:""}
      }
      workgroupBarrier();

      for (var k: u32 = 0u; k < TILE_SIZE && w+k < uniforms.K; k++) {
          value += ${St}(tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * local_id.x + k]);
      }

      workgroupBarrier();
    }

    if (global_id.y < uniforms.M && global_id.x < total_sequence_length) {
      let headOffset = workgroup_id.z * uniforms.M * uniforms.N;
      let outputIdx = headOffset + global_id.y * uniforms.N + global_id.x;
      var sum: f32 = ${(()=>{switch($){case 1:return"value";case 2:return"value.x + value.y";case 4:return"value.x + value.y + value.z + value.w";default:throw new Error(`Unsupported components: ${$}`)}})()};
        output[outputIdx] = ${Zt.type.value} (sum * uniforms.alpha) + ${V?"attention_bias[outputIdx]":"0.0"};
    }
  }`}}},zn=(c,h,_,S,V,n,l=void 0,p=void 0)=>{let b=n+V.kvSequenceLength,C=V.nReps?V.nReps:1,E=V.vHiddenSize*C,v=c>1&&S,x=V.kvNumHeads?V.kvNumHeads:V.numHeads,L=v?[V.batchSize,x,b,V.headSize]:void 0,W=[V.batchSize,V.sequenceLength,E],te=12,$={x:Math.ceil(V.vHeadSize/te),y:Math.ceil(V.sequenceLength/te),z:V.batchSize*V.numHeads},j=[{type:12,data:V.sequenceLength},{type:12,data:b},{type:12,data:V.vHeadSize},{type:12,data:V.numHeads},{type:12,data:V.headSize},{type:12,data:E},{type:12,data:n},{type:12,data:V.kvSequenceLength},{type:12,data:C}],le=v&&S&&Le.size(S.dims)>0,me=["type","type"];le&&me.push("type"),l&&me.push("type"),p&&me.push("type");let _e=[{dims:W,dataType:h.dataType,gpuDataType:0}];return v&&_e.push({dims:L,dataType:h.dataType,gpuDataType:0}),{name:"AttentionScore",shaderCache:{hint:`${S!==void 0};${c}`,inputDependencies:me},getRunData:()=>({outputs:_e,dispatchGroup:$,programUniforms:j}),getShaderSource:Ee=>{let Fe=rr("probs",h.dataType,h.dims),Ye=[Fe,rr("v",_.dataType,_.dims)];le&&Ye.push(rr("past_value",S.dataType,S.dims));let dt=l?rr("seq_lens",l.dataType,l.dims):void 0;l&&Ye.push(dt);let mt=p?rr("total_sequence_length_input",p.dataType,p.dims):void 0;p&&Ye.push(mt);let xt=[Lr("output",h.dataType,W)];return v&&xt.push(Lr("present_value",h.dataType,L)),`
  const TILE_SIZE = 12u;
  var<workgroup> tileQ: array<${Fe.type.value}, 144>;
  var<workgroup> tileV: array<${Fe.type.value}, 144>;
  ${Ee.registerUniforms([{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"v_hidden_size",type:"u32"},{name:"past_sequence_length",type:"u32"},{name:"kv_sequence_length",type:"u32"},{name:"n_reps",type:"u32"}]).declareVariables(...Ye,...xt)}
  ${Ee.mainStart([te,te,1])}
   let headIdx = workgroup_id.z % uniforms.num_heads;
   let batchIdx = workgroup_id.z / uniforms.num_heads;
   let kvHeadIdx = ${C===1?"headIdx":"headIdx / uniforms.n_reps"};
   let kv_num_heads = ${C===1?"uniforms.num_heads":"uniforms.num_heads / uniforms.n_reps"};
   let m = global_id.y;
   let n = global_id.x;
   let sequence_length = uniforms.M;
   var total_sequence_length = uniforms.K;
   ${zr(dt,mt,!0)}
   let offsetA = workgroup_id.z * uniforms.M * uniforms.K + m * uniforms.K;
   let absKvHeadIdx = batchIdx * kv_num_heads + kvHeadIdx; // kvHeadIdx is relative to the batch
   ${le&&v?"let pastValueOffset = absKvHeadIdx * uniforms.N * uniforms.past_sequence_length + n;":""};
   let vOffset = absKvHeadIdx * uniforms.N * uniforms.kv_sequence_length + n;
   ${v?"let presentValueOffset = absKvHeadIdx * uniforms.N * uniforms.K + n;":""}
   var value = ${Fe.type.storage}(0);
   for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (m < uniforms.M && w + local_id.x < uniforms.K) {
        tileQ[TILE_SIZE * local_id.y + local_id.x] = probs[offsetA + w + local_id.x];
      }
      if (n < uniforms.N && w + local_id.y < uniforms.K) {
        var idx = TILE_SIZE * local_id.y + local_id.x;
        ${le&&v?`
        if (w + local_id.y < past_sequence_length) {
          tileV[idx] = past_value[pastValueOffset + (w + local_id.y) * uniforms.N];
        } else if (w + local_id.y - past_sequence_length < uniforms.kv_sequence_length) {
          tileV[idx] = v[vOffset + (w + local_id.y - past_sequence_length) * uniforms.N];
        }
      `:`
            if (w + local_id.y < uniforms.kv_sequence_length) {
              tileV[idx] = v[vOffset + (w + local_id.y) * uniforms.N];
            }`}
        ${v?`
            if (w + local_id.y < present_sequence_length) {
          present_value[presentValueOffset + (w + local_id.y) * uniforms.N] = tileV[idx];
        }`:""}
      }
     workgroupBarrier();
     for (var k: u32 = 0u; k < TILE_SIZE && w+k < total_sequence_length; k++) {
       value += tileQ[TILE_SIZE * local_id.y + k] * tileV[TILE_SIZE * k + local_id.x];
     }
     workgroupBarrier();
   }

   // we need to transpose output from BNSH_v to BSND_v
   if (m < uniforms.M && n < uniforms.N) {
     let outputIdx = batchIdx * uniforms.M * uniforms.v_hidden_size + m * uniforms.v_hidden_size
       + headIdx * uniforms.N + n;
     output[outputIdx] = value;
   }
  }`}}},Ti=(c,h,_,S,V,n,l,p,b,C,E=void 0,v=void 0)=>{let x=Math.min(c.outputCount,1+(l?1:0)+(p?1:0)),L=x>1?C.pastSequenceLength:0,W=L+C.kvSequenceLength,te=b&&Le.size(b.dims)>0?b:void 0,$=[h,_];x>1&&l&&Le.size(l.dims)>0&&$.push(l),te&&$.push(te),E&&$.push(E),v&&$.push(v);let j=c.compute(Zo(x,h,_,l,te,C,L,E,v),{inputs:$,outputs:x>1?[-1,1]:[-1]})[0];c.compute(li(j,C.batchSize,C.numHeads,L,C.sequenceLength,W,E,v),{inputs:E&&v?[j,E,v]:[j],outputs:[]});let le=[j,S];x>1&&p&&Le.size(p.dims)>0&&le.push(p),E&&le.push(E),v&&le.push(v),c.compute(zn(x,j,S,p,C,L,E,v),{inputs:le,outputs:x>1?[0,2]:[0]})},Jo=(c,h)=>{let _=[h.batchSize,h.numHeads,h.sequenceLength,h.headSize],S=h.sequenceLength,V=h.inputHiddenSize,n=h.headSize,l=12,p={x:Math.ceil(h.headSize/l),y:Math.ceil(h.sequenceLength/l),z:h.batchSize*h.numHeads},b=[c.inputs[0],c.inputs[1],c.inputs[2]],C=[{type:12,data:S},{type:12,data:V},{type:12,data:n},{type:12,data:h.numHeads},{type:12,data:h.headSize},{type:12,data:h.hiddenSize},{type:12,data:h.hiddenSize+h.hiddenSize+h.vHiddenSize}];return c.compute({name:"AttentionPrepare",shaderCache:{inputDependencies:["type","type","type"]},getRunData:()=>({outputs:[{dims:_,dataType:c.inputs[0].dataType,gpuDataType:0},{dims:_,dataType:c.inputs[0].dataType,gpuDataType:0},{dims:_,dataType:c.inputs[0].dataType,gpuDataType:0}],dispatchGroup:p,programUniforms:C}),getShaderSource:E=>{let v=Lr("output_q",b[0].dataType,_),x=Lr("output_k",b[0].dataType,_),L=Lr("output_v",b[0].dataType,_),W=rr("input",b[0].dataType,b[0].dims),te=rr("weight",b[1].dataType,b[1].dims),$=rr("bias",b[2].dataType,b[2].dims),j=W.type.storage;return`
  const TILE_SIZE = 12u;
  var<workgroup> tileInput: array<${j}, 144>;
  var<workgroup> tileWeightQ: array<${j}, 144>;
  var<workgroup> tileWeightK: array<${j}, 144>;
  var<workgroup> tileWeightV: array<${j}, 144>;
  ${E.registerUniforms([{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"hidden_size",type:"u32"},{name:"ldb",type:"u32"}]).declareVariables(W,te,$,v,x,L)}
  ${E.mainStart([l,l,1])}
    let batchIndex = workgroup_id.z / uniforms.num_heads;
    let headNumber = workgroup_id.z % uniforms.num_heads;
    let m = global_id.y;
    let n = global_id.x;

    let inputOffset = batchIndex * (uniforms.M * uniforms.K) + m * uniforms.K;
    let biasOffsetQ = headNumber * uniforms.head_size;
    let biasOffsetK = uniforms.hidden_size + biasOffsetQ;
    let biasOffsetV = uniforms.hidden_size + biasOffsetK;

    var valueQ = ${j}(0);
    var valueK = ${j}(0);
    var valueV = ${j}(0);
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (m < uniforms.M && w + local_id.x < uniforms.K) {
        tileInput[TILE_SIZE * local_id.y + local_id.x] = input[inputOffset + w + local_id.x];
      }
      if (n < uniforms.N && w + local_id.y < uniforms.K) {
        let offset = n + (w + local_id.y) * uniforms.ldb;
        tileWeightQ[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetQ + offset];
        tileWeightK[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetK + offset];
        tileWeightV[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetV + offset];
      }
      workgroupBarrier();
      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {
        let inputTileOffset = TILE_SIZE * local_id.y + k;
        let weightTileOffset = TILE_SIZE * k + local_id.x;
        valueQ += tileInput[inputTileOffset] * tileWeightQ[weightTileOffset];
        valueK += tileInput[inputTileOffset] * tileWeightK[weightTileOffset];
        valueV += tileInput[inputTileOffset] * tileWeightV[weightTileOffset];
      }

      workgroupBarrier();
    }

    let headOffset = (m * uniforms.N + n) % uniforms.head_size;
    valueQ += bias[headOffset + biasOffsetQ];
    valueK += bias[headOffset + biasOffsetK];
    valueV += bias[headOffset + biasOffsetV];

    let offset = workgroup_id.z * uniforms.M * uniforms.N;
    if (m < uniforms.M && n < uniforms.N) {
      let outputIdx = offset + m * uniforms.N + n;
      output_q[outputIdx] = valueQ;
      output_k[outputIdx] = valueK;
      output_v[outputIdx] = valueV;
    }
  }`}},{inputs:b,outputs:[-1,-1,-1]})},rl=(c,h)=>{let _=$i(c.inputs,h),[S,V,n]=Jo(c,_);return Ti(c,S,V,n,c.inputs[4],void 0,void 0,void 0,c.inputs[5],_)}}),td=Me(()=>{ct(),Is(),Ps(),Ka(),zs(),sl=(c,h)=>{if(!c||c.length!==5)throw new Error("BatchNormalization requires 5 inputs");let _=(S,V,n)=>{let l=V.length;if(l!==S.length)throw new Error(`${n}: num dimensions != ${l}`);V.forEach((p,b)=>{if(p!==S[b])throw new Error(`${n}: dim[${b}] do not match`)})};if(c[0].dims.length>1){let S=h.format==="NHWC"?h.spatial?c[0].dims.slice(-1):c[0].dims.slice(-1).concat(c[0].dims.slice(1,c[0].dims.length-1)):c[0].dims.slice(1,h.spatial?2:void 0);_(c[1].dims,S,"Invalid input scale"),_(c[2].dims,S,"Invalid input B"),_(c[3].dims,S,"Invalid input mean"),_(c[4].dims,S,"Invalid input var")}else _(c[1].dims,[1],"Invalid input scale"),_(c[2].dims,[1],"Invalid input B"),_(c[3].dims,[1],"Invalid input mean"),_(c[4].dims,[1],"Invalid input var")},Po=(c,h)=>{let{epsilon:_,spatial:S,format:V}=h,n=c[0].dims,l=S?gs(n[n.length-1]):1,p=V==="NHWC"&&n.length>1?l:1,b=Le.size(n)/l,C=S,E=C?n.length:n,v=rr("x",c[0].dataType,c[0].dims,l),x=rr("scale",c[1].dataType,c[1].dims,p),L=rr("bias",c[2].dataType,c[2].dims,p),W=rr("inputMean",c[3].dataType,c[3].dims,p),te=rr("inputVar",c[4].dataType,c[4].dims,p),$=Lr("y",c[0].dataType,E,l);return{name:"BatchNormalization",shaderCache:{hint:`${h.epsilon}_${h.format}_${S}_${l}`,inputDependencies:C?["rank","type","type","type","type"]:void 0},getShaderSource:j=>`
  const epsilon = ${_};
  ${j.registerUniform("outputSize","u32").declareVariables(v,x,L,W,te,$)}
  ${j.mainStart()}
  ${j.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
    var outputIndices = ${$.offsetToIndices(`global_idx * ${l}`)};
    ${(()=>{let le="";if(S)le=`let cOffset = ${n.length===1?"0u":V==="NHWC"?`outputIndices[${n.length-1}] / ${l}`:"outputIndices[1]"};`;else if(V==="NCHW")le=`
            ${$.indicesSet("outputIndices","0","0")}
            let cOffset = ${$.indicesToOffset("outputIndices")};`;else{le=`var cIndices = ${x.type.indices}(0);
                       cIndices[0] = outputIndices[${n.length-1}];`;for(let me=1;me<x.rank;me++)le+=`cIndices[${me}] = outputIndices[${me}];`;le+=`let cOffset = ${x.indicesToOffset("cIndices")};`}return le})()}
    let scale = ${x.getByOffset("cOffset")};
    let bias = ${L.getByOffset("cOffset")};
    let inputMean = ${W.getByOffset("cOffset")};
    let inputVar = ${te.getByOffset("cOffset")};
    let x = ${v.getByOffset("global_idx")};
    let value = (x - inputMean) * inverseSqrt(inputVar + epsilon) * scale + bias;
    ${$.setByOffset("global_idx","value")}
  }`,getRunData:()=>({outputs:[{dims:c[0].dims,dataType:c[0].dataType}],dispatchGroup:{x:Math.ceil(b/64)},programUniforms:C?[{type:12,data:b},..._r(n)]:[{type:12,data:b}]})}},al=c=>Ae(c),nl=(c,h)=>{let{inputs:_,outputCount:S}=c,V=al({...h,outputCount:S});if(R.webgpu.validateInputContent&&sl(_,V),h.trainingMode)throw new Error("BatchNormalization trainingMode is not supported yet.");c.compute(Po(_,V))}}),Hu=Me(()=>{Ps(),zs(),La=c=>{if(c[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![320,640,1280].includes(c[0].dims[2]))throw new Error("number of channels should be 320, 640 or 1280");if(c[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(c[0].dims[2]!==c[1].dims[0])throw new Error("last dimension of input and bias are not the same")},il=c=>{let h=c[0].dims,_=c[0].dims[2],S=Le.size(h)/4,V=c[0].dataType,n=rr("input",V,h,4),l=rr("bias",V,[_],4),p=rr("residual",V,h,4),b=Lr("output",V,h,4);return{name:"BiasAdd",getRunData:()=>({outputs:[{dims:h,dataType:c[0].dataType}],dispatchGroup:{x:Math.ceil(S/64)}}),getShaderSource:C=>`
  const channels = ${_}u / 4;
  ${C.declareVariables(n,l,p,b)}

  ${C.mainStart()}
    ${C.guardAgainstOutOfBoundsWorkgroupSizes(S)}
    let value = ${n.getByOffset("global_idx")}
      + ${l.getByOffset("global_idx % channels")} + ${p.getByOffset("global_idx")};
    ${b.setByOffset("global_idx","value")}
  }`}},ol=c=>{La(c.inputs),c.compute(il(c.inputs))}}),U0=Me(()=>{Is(),Ps(),Ka(),zs(),ps=(c,h,_,S,V,n,l)=>{let p=Math.ceil(h/4),b="";b=typeof V=="string"?`${V}(a)`:V("a");let C=rr("inputData",_,[p],4),E=Lr("outputData",S,[p],4),v=[{name:"vec_size",type:"u32"}];return l&&v.push(...l),`
      ${c.registerUniforms(v).declareVariables(C,E)}

  ${n??""}

  ${c.mainStart()}
    ${c.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}

    let a = ${C.getByOffset("global_idx")};
    ${E.setByOffset("global_idx",b)}
  }`},Fs=(c,h,_,S,V,n=c.dataType,l,p)=>{let b=[{type:12,data:Math.ceil(Le.size(c.dims)/4)}];return l&&b.push(...l),{name:h,shaderCache:{hint:V,inputDependencies:["type"]},getShaderSource:C=>ps(C,Le.size(c.dims),c.dataType,n,_,S,p),getRunData:C=>({outputs:[{dims:c.dims,dataType:n}],dispatchGroup:{x:Math.ceil(Le.size(C[0].dims)/64/4)},programUniforms:b})}},MA=c=>{c.compute(Fs(c.inputs[0],"Abs","abs"))},ci=c=>{c.compute(Fs(c.inputs[0],"Acos","acos"))},EA=c=>{c.compute(Fs(c.inputs[0],"Acosh","acosh"))},mn=c=>{c.compute(Fs(c.inputs[0],"Asin","asin"))},bi=c=>{c.compute(Fs(c.inputs[0],"Asinh","asinh"))},Za=c=>{c.compute(Fs(c.inputs[0],"Atan","atan"))},Pi=c=>{c.compute(Fs(c.inputs[0],"Atanh","atanh"))},Do=c=>Ae(c),BA=(c,h)=>{let _;switch(h.to){case 10:_="vec4<f16>";break;case 1:_="vec4<f32>";break;case 12:_="vec4<u32>";break;case 6:_="vec4<i32>";break;case 9:_="vec4<bool>";break;default:throw new RangeError(`not supported type (specified in attribute 'to' from 'Cast' operator): ${h.to}`)}c.compute(Fs(c.inputs[0],"Cast",_,void 0,h.cacheKey,h.to))},So=c=>{let h,_,S=c.length>=2&&c[1].data!==0,V=c.length>=3&&c[2].data!==0;switch(c[0].dataType){case 1:h=S?c[1].getFloat32Array()[0]:-34028234663852886e22,_=V?c[2].getFloat32Array()[0]:34028234663852886e22;break;case 10:h=S?c[1].getUint16Array()[0]:64511,_=V?c[2].getUint16Array()[0]:31743;break;default:throw new Error("Unsupport data type")}return Ae({min:h,max:_})},Go=(c,h)=>{let _=h||So(c.inputs),S=wr(c.inputs[0].dataType);c.compute(Fs(c.inputs[0],"Clip",V=>`clamp(${V}, vec4<${S}>(uniforms.min), vec4<${S}>(uniforms.max))`,void 0,_.cacheKey,void 0,[{type:c.inputs[0].dataType,data:_.min},{type:c.inputs[0].dataType,data:_.max}],[{name:"min",type:S},{name:"max",type:S}]),{inputs:[0]})},Ta=c=>{c.compute(Fs(c.inputs[0],"Ceil","ceil"))},co=c=>{c.compute(Fs(c.inputs[0],"Cos","cos"))},$o=c=>{c.compute(Fs(c.inputs[0],"Cosh","cosh"))},un=c=>Ae(c),uo=(c,h)=>{let _=wr(c.inputs[0].dataType);c.compute(Fs(c.inputs[0],"Elu",S=>`elu_vf32(${S})`,`
  const elu_alpha_ = ${_}(${h.alpha});

  fn elu_f32(a: ${_}) -> ${_} {
  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);
  }

  fn elu_vf32(v: vec4<${_}>) -> vec4<${_}> {
  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));
  }`,h.cacheKey))},Ci=(c="f32")=>`
const r0: ${c} = 0.3275911;
const r1: ${c} = 0.254829592;
const r2: ${c} = -0.284496736;
const r3: ${c} = 1.421413741;
const r4: ${c} = -1.453152027;
const r5: ${c} = 1.061405429;

fn erf_vf32(v: vec4<${c}>) -> vec4<${c}> {
  let absv = abs(v);
  let x = 1.0 / (1.0 + r0 * absv);
  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));
}`,Al=c=>{let h=wr(c.inputs[0].dataType);c.compute(Fs(c.inputs[0],"Erf",_=>`erf_vf32(${_})`,Ci(h)))},TA=c=>{c.compute(Fs(c.inputs[0],"Exp","exp"))},eA=c=>{c.compute(Fs(c.inputs[0],"Floor","floor"))},tA=c=>{let h=wr(c.inputs[0].dataType);c.compute(Fs(c.inputs[0],"Gelu",_=>`0.5 * ${_} * (1.0 + erf_vf32(${_} * 0.7071067811865475))`,Ci(h)))},Di=(c,h)=>{let _=wr(c.inputs[0].dataType);c.compute(Fs(c.inputs[0],"LeakyRelu",S=>`select(leaky_relu_alpha_ * ${S}, ${S}, ${S} >= vec4<${_}>(0.0))`,`const leaky_relu_alpha_ = ${_}(${h.alpha});`,h.cacheKey))},Fo=c=>{c.compute(Fs(c.inputs[0],"Not",h=>`!${h}`))},ea=c=>{c.compute(Fs(c.inputs[0],"Neg",h=>`-${h}`))},PA=c=>{c.compute(Fs(c.inputs[0],"Reciprocal",h=>`1.0/${h}`))},rA=c=>{let h=wr(c.inputs[0].dataType);c.compute(Fs(c.inputs[0],"Relu",_=>`select(vec4<${h}>(0.0), ${_}, ${_} > vec4<${h}>(0.0))`))},Si=c=>{c.compute(Fs(c.inputs[0],"Sigmoid",h=>`(1.0 / (1.0 + exp(-${h})))`))},sA=c=>Ae(c),Ra=(c,h)=>{let _=wr(c.inputs[0].dataType);c.compute(Fs(c.inputs[0],"HardSigmoid",S=>`max(vec4<${_}>(0.0), min(vec4<${_}>(1.0), ${h.alpha} * ${S} + vec4<${_}>(${h.beta})))`,void 0,h.cacheKey))},DA=c=>{c.compute(Fs(c.inputs[0],"Sin","sin"))},aA=c=>{c.compute(Fs(c.inputs[0],"Sinh","sinh"))},go=c=>{c.compute(Fs(c.inputs[0],"Sqrt","sqrt"))},On=c=>{c.compute(Fs(c.inputs[0],"Tan","tan"))},zo=c=>`sign(${c}) * (1 - exp(-2 * abs(${c}))) / (1 + exp(-2 * abs(${c})))`,nA=c=>{c.compute(Fs(c.inputs[0],"Tanh",zo))},ui=(c="f32")=>`
const fast_gelu_a: ${c} = 0.5;
const fast_gelu_b: ${c} = 0.7978845608028654;
const fast_gelu_c: ${c} = 0.035677408136300125;

fn tanh_v(v: vec4<${c}>) -> vec4<${c}> {
  return ${zo("v")};
}
`,SA=c=>`(fast_gelu_a + fast_gelu_a * tanh_v(${c} * (fast_gelu_c * ${c} * ${c} + fast_gelu_b))) * ${c}`,Oo=c=>{let h=wr(c.inputs[0].dataType);c.compute(Fs(c.inputs[0],"FastGelu",SA,ui(h),void 0,c.inputs[0].dataType))},fo=(c,h)=>{let _=wr(c.inputs[0].dataType);return c.compute(Fs(c.inputs[0],"ThresholdedRelu",S=>`select(vec4<${_}>(0.0), ${S}, ${S} > thresholded_relu_alpha_)`,`const thresholded_relu_alpha_ = vec4<${_}>(${h.alpha});`,h.cacheKey)),0},po=c=>{c.compute(Fs(c.inputs[0],"Log","log"))},Qo=(c,h)=>`
const alpha = vec4<${c}>(${h});
const one = ${c}(1.0);
const zero = ${c}(0.0);

fn quick_gelu_impl(x: vec4<${c}>) -> vec4<${c}> {
  let v = x *alpha;
  var x1 : vec4<${c}>;
  for (var i = 0; i < 4; i = i + 1) {
    if (v[i] >= zero) {
      x1[i] = one / (one + exp(-v[i]));
    } else {
      x1[i] = one - one / (one + exp(v[i]));
    }
  }
  return x * x1;
}
`,ll=c=>`quick_gelu_impl(${c})`,GA=(c,h)=>{let _=wr(c.inputs[0].dataType);c.compute(Fs(c.inputs[0],"QuickGelu",ll,Qo(_,h.alpha),h.cacheKey,c.inputs[0].dataType))}}),Yu=Me(()=>{Ps(),zs(),U0(),dn=c=>{if(c[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![2560,5120,10240].includes(c[0].dims[2]))throw new Error("hidden state should be 2560, 5120 or 10240");if(c[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(c[0].dims[2]!==c[1].dims[0])throw new Error("last dimension of input and bias are not the same")},No=c=>{let h=c[0].dims.slice();h[2]=h[2]/2;let _=rr("input",c[0].dataType,c[0].dims,4),S=rr("bias",c[0].dataType,[c[0].dims[2]],4),V=Lr("output",c[0].dataType,h,4),n=Le.size(h)/4,l=Gr(c[0].dataType);return{name:"BiasSplitGelu",getRunData:()=>({outputs:[{dims:h,dataType:c[0].dataType}],dispatchGroup:{x:Math.ceil(n/64)}}),getShaderSource:p=>`
  const M_SQRT2 = sqrt(2.0);
  const halfChannels = ${c[0].dims[2]/4/2}u;

  ${p.declareVariables(_,S,V)}

  ${Ci(l)}

  ${p.mainStart()}
    ${p.guardAgainstOutOfBoundsWorkgroupSizes(n)}
    let biasIdx = global_idx % halfChannels;
    let batchIndex = global_idx / halfChannels;
    let inputOffset = biasIdx + batchIndex * halfChannels * 2;
    let valueLeft = input[inputOffset] + bias[biasIdx];
    let valueRight = input[inputOffset + halfChannels] + bias[biasIdx + halfChannels];
    let geluRight = valueRight * 0.5 * (erf_vf32(valueRight / M_SQRT2) + 1);

    ${V.setByOffset("global_idx","valueLeft * geluRight")}
  }`}},gn=c=>{dn(c.inputs),c.compute(No(c.inputs))}}),rd=Me(()=>{Is(),Ps(),zs(),FA=(c,h,_,S,V,n,l,p,b,C,E,v)=>{let x,L;typeof p=="string"?x=L=(le,me)=>`${p}((${le}),(${me}))`:typeof p=="function"?x=L=p:(x=p.scalar,L=p.vector);let W,te=Lr("outputData",E,S.length,4),$=rr("aData",b,h.length,4),j=rr("bData",C,_.length,4);if(V)if(n){let le=Le.size(h)===1,me=Le.size(_)===1,_e=h.length>0&&h[h.length-1]%4==0,Ee=_.length>0&&_[_.length-1]%4==0;W=le||me?te.setByOffset("global_idx",L(le?`${$.type.value}(${$.getByOffset("0")}.x)`:$.getByOffset("global_idx"),me?`${j.type.value}(${j.getByOffset("0")}.x)`:j.getByOffset("global_idx"))):`
            let outputIndices = ${te.offsetToIndices("global_idx * 4u")};
            let offsetA = ${$.broadcastedIndicesToOffset("outputIndices",te)};
            let offsetB = ${j.broadcastedIndicesToOffset("outputIndices",te)};
            ${te.setByOffset("global_idx",L(l||_e?$.getByOffset("offsetA / 4u"):`${$.type.value}(${$.getByOffset("offsetA / 4u")}[offsetA % 4u])`,l||Ee?j.getByOffset("offsetB / 4u"):`${j.type.value}(${j.getByOffset("offsetB / 4u")}[offsetB % 4u])`))}
          `}else W=te.setByOffset("global_idx",L($.getByOffset("global_idx"),j.getByOffset("global_idx")));else{if(!n)throw new Error("no necessary to use scalar implementation for element-wise binary op implementation.");let le=(me,_e,Ee="")=>{let Fe=`aData[indexA${_e}][componentA${_e}]`,Ye=`bData[indexB${_e}][componentB${_e}]`;return`
            let outputIndices${_e} = ${te.offsetToIndices(`global_idx * 4u + ${_e}u`)};
            let offsetA${_e} = ${$.broadcastedIndicesToOffset(`outputIndices${_e}`,te)};
            let offsetB${_e} = ${j.broadcastedIndicesToOffset(`outputIndices${_e}`,te)};
            let indexA${_e} = offsetA${_e} / 4u;
            let indexB${_e} = offsetB${_e} / 4u;
            let componentA${_e} = offsetA${_e} % 4u;
            let componentB${_e} = offsetB${_e} % 4u;
            ${me}[${_e}] = ${Ee}(${x(Fe,Ye)});
          `};W=E===9?`
            var data = vec4<u32>(0);
            ${le("data",0,"u32")}
            ${le("data",1,"u32")}
            ${le("data",2,"u32")}
            ${le("data",3,"u32")}
            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:`
            ${le("outputData[global_idx]",0)}
            ${le("outputData[global_idx]",1)}
            ${le("outputData[global_idx]",2)}
            ${le("outputData[global_idx]",3)}
          `}return`
        ${c.registerUniform("vec_size","u32").declareVariables($,j,te)}

        ${v??""}

        ${c.mainStart()}
        ${c.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${W}
      }`},iA=(c,h,_,S,V,n,l=_.dataType)=>{let p=_.dims.map(te=>Number(te)??1),b=S.dims.map(te=>Number(te)??1),C=!Le.areEqual(p,b),E=p,v=Le.size(p),x=!1,L=!1,W=[C];if(C){let te=at.calcShape(p,b,!1);if(!te)throw new Error("Can't perform binary op on the given tensors");E=te.slice(),v=Le.size(E);let $=Le.size(p)===1,j=Le.size(b)===1,le=p.length>0&&p[p.length-1]%4==0,me=b.length>0&&b[b.length-1]%4==0;W.push($),W.push(j),W.push(le),W.push(me);let _e=1;for(let Ee=1;Ee<E.length;Ee++){let Fe=p[p.length-Ee];if(Fe!==b[b.length-Ee])break;_e*=Fe}_e%4==0?(L=!0,x=!0):($||j||le||me)&&(x=!0)}else x=!0;return W.push(x),{name:c,shaderCache:{hint:h+W.map(te=>te.toString()).join("_"),inputDependencies:["rank","rank"]},getShaderSource:te=>FA(te,p,b,E,x,C,L,V,_.dataType,S.dataType,l,n),getRunData:()=>({outputs:[{dims:E,dataType:l}],dispatchGroup:{x:Math.ceil(v/64/4)},programUniforms:[{type:12,data:Math.ceil(Le.size(E)/4)},..._r(p,b,E)]})}},Yn=(c,h,_,S,V,n)=>{c.compute(iA(h,V??"",c.inputs[0],c.inputs[1],_,S,n))},ba=c=>{Yn(c,"Add",(h,_)=>`${h}+${_}`)},zA=c=>{Yn(c,"Div",(h,_)=>`${h}/${_}`)},Gi=c=>{Yn(c,"Equal",{scalar:(h,_)=>`u32(${h}==${_})`,vector:(h,_)=>`vec4<u32>(${h}==${_})`},void 0,void 0,9)},ho=c=>{Yn(c,"Mul",(h,_)=>`${h}*${_}`)},cl=c=>{let h=rr("input",c.inputs[0].dataType,c.inputs[0].dims).type.value;Yn(c,"Pow",{scalar:(_,S)=>`pow_custom(${_},${S})`,vector:(_,S)=>`pow_vector_custom(${_},${S})`},`
    fn pow_custom(a : ${h}, b : ${h}) -> ${h} {
      if (b == ${h}(0.0)) {
        return ${h}(1.0);
      } else if (a < ${h}(0.0) && f32(b) != floor(f32(b))) {
        return ${h}(pow(f32(a), f32(b))); // NaN
      }
      return select(sign(a), ${h}(1.0), round(f32(abs(b) % ${h}(2.0))) != 1.0) * ${h}(${h==="i32"?"round":""}(pow(f32(abs(a)), f32(b))));
    }
    fn pow_vector_custom(a : vec4<${h}>, b : vec4<${h}>) -> vec4<${h}> {
      // TODO: implement vectorized pow
      return vec4<${h}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));
    }
      `)},oA=c=>{Yn(c,"Sub",(h,_)=>`${h}-${_}`)},OA=c=>{Yn(c,"Greater",{scalar:(h,_)=>`u32(${h}>${_})`,vector:(h,_)=>`vec4<u32>(${h}>${_})`},void 0,void 0,9)},ul=c=>{Yn(c,"Less",{scalar:(h,_)=>`u32(${h}<${_})`,vector:(h,_)=>`vec4<u32>(${h}<${_})`},void 0,void 0,9)},wi=c=>{Yn(c,"GreaterOrEqual",{scalar:(h,_)=>`u32(${h}>=${_})`,vector:(h,_)=>`vec4<u32>(${h}>=${_})`},void 0,void 0,9)},di=c=>{Yn(c,"LessOrEqual",{scalar:(h,_)=>`u32(${h}<=${_})`,vector:(h,_)=>`vec4<u32>(${h}<=${_})`},void 0,void 0,9)}}),Ku=Me(()=>{Is(),Ps(),Ka(),zs(),AA=(c,h)=>{if(!c||c.length<1)throw new Error("too few inputs");let _=c[0],S=_.dataType,V=_.dims.length;c.forEach((n,l)=>{if(l!==0){if(n.dataType!==S)throw new Error("input tensors should be one type");if(n.dims.length!==V)throw new Error("input tensors should have the same shape");n.dims.forEach((p,b)=>{if(b!==h&&p!==_.dims[b])throw new Error("non concat dimensions must match")})}})},eo=(c,h)=>`
  fn calculateInputIndex(index: u32) -> u32 {
    let sizeInConcatAxis = array<u32, ${c}u>(${h});
    for (var i: u32 = 0u; i < ${c}; i += 1u ) {
      if (index < sizeInConcatAxis[i]) {
        return i;
      }
    }
    return ${c}u;
  }`,rn=(c,h)=>{let _=c.length,S=[];for(let V=0;V<_;++V){let n=h.setByOffset("global_idx",c[V].getByIndices("indices"));_===1?S.push(n):V===0?S.push(`if (inputIndex == ${V}u) { ${n} }`):V===_-1?S.push(`else { ${n} }`):S.push(`else if (inputIndex == ${V}) { ${n} }`)}return S.join(`
`)},na=(c,h,_,S)=>{let V=Le.size(_),n=new Array(c.length),l=new Array(c.length),p=0,b=[],C=[],E=[{type:12,data:V}];for(let W=0;W<c.length;++W)p+=c[W].dims[h],n[W]=p,C.push(c[W].dims.length),l[W]=rr(`input${W}`,S,C[W]),b.push("rank"),E.push({type:12,data:n[W]});for(let W=0;W<c.length;++W)E.push(..._r(c[W].dims));E.push(..._r(_));let v=Lr("output",S,_.length),x=v.indicesGet("indices",h),L=Array.from(Array(n.length).keys()).map(W=>`uniforms.sizeInConcatAxis${W}`).join(",");return{name:"Concat",shaderCache:{hint:`${h}`,inputDependencies:b},getRunData:()=>({outputs:[{dims:_,dataType:S}],dispatchGroup:{x:Math.ceil(V/64)},programUniforms:E}),getShaderSource:W=>`

  ${(()=>{W.registerUniform("outputSize","u32");for(let te=0;te<c.length;te++)W.registerUniform(`sizeInConcatAxis${te}`,"u32");return W.declareVariables(...l,v)})()}

  ${eo(n.length,L)}

  ${W.mainStart()}
    ${W.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

    var indices = ${v.offsetToIndices("global_idx")};

    let inputIndex = calculateInputIndex(${x});
    if (inputIndex != 0u) {
      let sizeInConcatAxis = array<u32, ${n.length}u>(${L});
      ${x} -= sizeInConcatAxis[inputIndex - 1u];
    }

    ${rn(l,v)}
  }`}},mo=(c,h)=>{let _=c.inputs,S=_[0].dims,V=Le.normalizeAxis(h.axis,S.length);AA(_,V);let n=S.slice();n[V]=_.reduce((p,b)=>p+(b.dims.length>V?b.dims[V]:0),0);let l=_.filter(p=>Le.size(p.dims)>0);c.compute(na(l,V,n,_[0].dataType),{inputs:l})},dl=c=>Ae({axis:c.axis})}),CA=Me(()=>{Is(),Ps(),Fi=(c,h,_="f32")=>{switch(c.activation){case"Relu":return`value = max(value, ${h}(0.0));`;case"Sigmoid":return`value = (${h}(1.0) / (${h}(1.0) + exp(-value)));`;case"Clip":return`value = clamp(value, ${h}(${_}(uniforms.clip_min)), ${h}(${_}(uniforms.clip_max)));`;case"HardSigmoid":return`value = max(${h}(0.0), min(${h}(1.0), ${_}(uniforms.alpha) * value + ${_}(uniforms.beta)));`;case"LeakyRelu":return`value = select(${_}(uniforms.alpha) * value, value, value >= ${h}(0.0));`;case"Tanh":return`let e2x = exp(-2.0 * abs(value));
              value = sign(value) * (1.0 - e2x) / (1.0 + e2x);
        `;case"":return"";default:throw new Error(`Unsupported activation ${c.activation}`)}},Ui=(c,h)=>{c.activation==="Clip"?h.push({type:1,data:c.clipMax},{type:1,data:c.clipMin}):c.activation==="HardSigmoid"?h.push({type:1,data:c.alpha},{type:1,data:c.beta}):c.activation==="LeakyRelu"&&h.push({type:1,data:c.alpha})},Hi=(c,h)=>{c.activation==="Clip"?h.push({name:"clip_max",type:"f32"},{name:"clip_min",type:"f32"}):c.activation==="HardSigmoid"?h.push({name:"alpha",type:"f32"},{name:"beta",type:"f32"}):c.activation==="LeakyRelu"&&h.push({name:"alpha",type:"f32"})},QA=c=>{let h=(c==null?void 0:c.activation)||"";if(h==="HardSigmoid"){let[_,S]=(c==null?void 0:c.activation_params)||[.2,.5];return{activation:h,alpha:_,beta:S}}if(h==="Clip"){let[_,S]=(c==null?void 0:c.activation_params)||[ir,yr];return{activation:h,clipMax:S,clipMin:_}}if(h==="LeakyRelu"){let[_]=(c==null?void 0:c.activation_params)||[.01];return{activation:h,alpha:_}}return{activation:h}}}),Au=Me(()=>{bn=(c,h)=>{switch(c){case 1:return h;case 2:return`vec2<${h}>`;case 3:return`vec3<${h}>`;case 4:return`vec4<${h}>`;default:throw new Error(`${c}-component is not supported.`)}},NA=c=>`
      ${c?"value = value + getBiasByOutputCoords(coords);":""}
      `}),Os=Me(()=>{gl=c=>`
fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
}
fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
    i32(${c}.x), i32(${c}.y), i32(${c}.z), 1));
}
`}),H0=Me(()=>{Is(),Ps(),zs(),CA(),bo=(c,h,_,S,V)=>{let n=S-_;return`
      ${Array.from({length:_}).map((l,p)=>`
      if (${Or(h.shape,p,h.rank)} != 1) {
        ${h.indicesSet(c,p,Or(V,p+n,S))}
      } else {
        ${h.indicesSet(c,p,0)}
      }`).join("")}
`},Lo=(c,h,_,S,V=!1,n)=>{let l=c[0].dims,p=c[1].dims,b=l[l.length-2],C=p[p.length-1],E=l[l.length-1],v=gs(C),x=gs(E),L=gs(b),W=Le.size(_)/v/L,te=c.length>2,$=S?S.slice(0,-2):_.slice(0,-2),j=[Le.size($),b,C],le=[{type:12,data:W},{type:12,data:b},{type:12,data:C},{type:12,data:E}];return Ui(h,le),le.push(..._r($,l,p)),te&&le.push(..._r(c[2].dims)),le.push(..._r(j)),{name:"MatMulNaive",shaderCache:{hint:`${h.activation};${v};${x};${L};${V}`,inputDependencies:te?["rank","rank","rank"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:n?n(_):_,dataType:c[0].dataType}],dispatchGroup:{x:Math.ceil(W/64)},programUniforms:le}),getShaderSource:me=>{let _e=Ws("batch_dims",c[0].dataType,$.length),Ee=rr("a",c[0].dataType,l.length,x),Fe=rr("b",c[1].dataType,p.length,v),Ye=Lr("output",c[0].dataType,j.length,v),dt=Gr(Ye.type.tensor),mt=Fi(h,Ye.type.value,dt),xt=[Ee,Fe],jt="";if(te){let Zt=V?v:1;xt.push(rr("bias",c[2].dataType,c[2].dims.length,Zt)),jt=V?`value += bias[col / ${Zt}];`:`value += ${Ye.type.value}(bias[row + i]);`}let Gt=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"}];return Hi(h,Gt),`
  ${me.registerUniforms(Gt).registerInternalVariables(_e).declareVariables(...xt,Ye)}
  ${me.mainStart()}
    ${me.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let col = (global_idx % (uniforms.N / ${v})) * ${v};
    var index1 = global_idx / (uniforms.N / ${v});
    let stride1 = uniforms.M / ${L};
    let row = (index1 % stride1) * ${L};
    let batch = index1 / stride1;

    ${_.length===2?"":`let batch_indices = ${_e.offsetToIndices("batch")};`}

    var a_indices: ${Ee.type.indices};
    ${bo("a_indices",Ee,Ee.rank-2,_e.rank,"batch_indices")}
    ${Ee.indicesSet("a_indices",Ee.rank-2,0)}
    ${Ee.indicesSet("a_indices",Ee.rank-1,0)}
    let a_offset = ${Ee.indicesToOffset("a_indices")};

    var b_indices: ${Fe.type.indices};
    ${bo("b_indices",Fe,Fe.rank-2,_e.rank,"batch_indices")}
    ${Fe.indicesSet("b_indices",Fe.rank-2,0)}
    ${Fe.indicesSet("b_indices",Fe.rank-1,0)}
    let b_offset = ${Fe.indicesToOffset("b_indices")};
    var values: array<${Ye.type.value}, ${L}>;
    for (var k: u32 = 0u; k < uniforms.K; k = k + ${x}) {
      ${(()=>{let Zt=`var a_data: ${Ee.type.value};`;for(let ar=0;ar<x;ar++)Zt+=`
              let b_data${ar} = b[(b_offset + (k + ${ar}) * uniforms.N + col) / ${v}];`;for(let ar=0;ar<L;ar++){Zt+=`a_data = a[(a_offset + (row + ${ar}) * uniforms.K + k) / ${x}];`;for(let St=0;St<x;St++)Zt+=`
            values[${ar}] = fma(${Fe.type.value}(a_data${x===1?"":`[${St}]`}), b_data${St}, values[${ar}]);
`}return Zt})()}
    }
    for (var i = 0u; i < ${L}u; i++) {
      var value = values[i];
      ${jt}
      ${mt}
      let cur_indices = ${Ye.type.indices}(batch, row + i, col);
      let offset = ${Ye.indicesToOffset("cur_indices")};
      ${Ye.setByOffset(`offset / ${v}`,"value")};
    }
  }
  `}}}}),$a=Me(()=>{Is(),Ps(),zs(),CA(),H0(),Au(),Ca=(c,h)=>c?`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          kStart + inputRow,
          globalRowStart / innerElementSize + inputCol${h?", batchIndices":""});
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          globalRow + innerRow,
          kStart / innerElementSize + inputCol${h?", batchIndices":""});
        `,lA=(c,h)=>c?`
        let ACached0 = mm_Asub[k * innerElementSize][localRow];
        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];
        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];
        ${h===3?"":"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];"}
        for (var i = 0; i < rowPerThread; i = i + 1) {
          acc[i] = BCached0 * ACached0[i] + acc[i];
          acc[i] = BCached1 * ACached1[i] + acc[i];
          acc[i] = BCached2 * ACached2[i] + acc[i];
          ${h===3?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}
        }`:`
        for (var i = 0; i < rowPerThread; i = i + 1) {
          let ACached = mm_Asub[tileRow + i][k];
          acc[i] = BCached0 * ACached.x + acc[i];
          acc[i] = BCached1 * ACached.y + acc[i];
          acc[i] = BCached2 * ACached.z + acc[i];
          ${h===3?"":"acc[i] = BCached3 * ACached.w + acc[i];"}
        }`,cA=(c,h,_="f32",S,V=!1,n=32,l=!1,p=32)=>{let b=h[1]*c[1],C=h[0]*c[0],E=V?b:n,v=V?n:b,x=E/h[0],L=n/h[1];if((!V||x!==4||c[1]!==4)&&(V||x!==3&&x!==4)||E%h[0]!=0||n%h[1]!=0||c[0]!==4)throw new Error(`If transposeA ${V} is true, innerElementSize ${x} and workPerThread[1] ${c[1]} must be 4.
      Otherwise, innerElementSize ${x} must be 3 or 4.
  tileAWidth ${E} must be divisible by workgroupSize[0]${h[0]}. tileInner ${n} must be divisible by workgroupSize[1] ${h[1]}. colPerThread ${c[0]} must be 4.`);return`
var<workgroup> mm_Asub: array<array<vec${x}<${_}>, ${E/x}>, ${v}>;
var<workgroup> mm_Bsub: array<array<vec4<${_}>, ${C/c[0]}>, ${n}>;

const rowPerThread = ${c[1]};
const colPerThread = ${c[0]};
const innerElementSize = ${x};
const tileInner = ${n};

@compute @workgroup_size(${h[0]}, ${h[1]}, ${h[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
  let localRow = i32(localId.y);
  let tileRow = localRow * rowPerThread;
  let tileCol = i32(localId.x);

  let globalRow =i32(globalId.y) * rowPerThread;
  let globalCol = i32(globalId.x);
  let batch = ${l?"0":"i32(globalId.z)"};
  ${S?`let batchIndices = ${S.offsetToIndices("u32(batch)")};`:""}
  let globalRowStart = i32(workgroupId.y) * ${b};

  let num_tiles = ${l?`${Math.ceil(p/n)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};
  var kStart = ${l?`i32(globalId.z) * ${p}`:"0"};

  var acc: array<vec4<${_}>, rowPerThread>;

  // Loop over shared dimension.
  let tileRowB = localRow * ${L};
  for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let inputRow = tileRow + innerRow;
          let inputCol = tileCol;
          ${Ca(V,S)}
      }

      // Load one tile of B into local memory.
      for (var innerRow = 0; innerRow < ${L}; innerRow = innerRow + 1) {
          let inputRow = tileRowB + innerRow;
          let inputCol = tileCol;
          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol${S?", batchIndices":""});
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {
          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];
          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];
          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];
          ${x===3?"":"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];"}

          ${lA(V,x)}
      }

      workgroupBarrier();
  }

  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);
  }
}`},to=(c,h)=>c?`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              kStart + inputRow,
              globalRowStart + inputCol${h?", batchIndices":""});
            `:`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              globalRowStart + inputRow,
              kStart + inputCol${h?", batchIndices":""});
            `,fl=c=>c?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];",Co=(c,h,_="f32",S,V=!1,n=32,l=!1,p=32,b=!1)=>{let C=c[1]*h[1],E=c[0]*h[0],v=V?C:n,x=V?n:C;if(x%h[1]!=0||v%h[0]!=0||n%h[1]!=0)throw new Error(`tileAHight ${x} must be divisible by workgroupSize[1]${h[1]}, tileAWidth ${v} must be divisible by workgroupSize[0]${h[0]}, tileInner ${n} must be divisible by workgroupSize[1]${h[1]}`);let L=x/h[1],W=v/h[0],te=n/h[1],$=b?`
    let localRow = i32(localId.y);
    let localCol = i32(localId.x);
    let globalRowStart = i32(workgroupId.y) * ${C};
    let globalColStart = i32(workgroupId.x) * ${E};

    // Loop over shared dimension.
    for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var inputRow = localRow; inputRow < ${x}; inputRow = inputRow + ${h[1]}) {
        for (var inputCol = localCol; inputCol < ${v}; inputCol = inputCol + ${h[0]}) {
          ${to(V,S)}
        }
      }
      // Load one tile of B into local memory.
      for (var inputRow = localRow; inputRow < ${n}; inputRow = inputRow + ${h[1]}) {
            for (var inputCol = localCol; inputCol < ${E}; inputCol = inputCol + ${h[0]}) {
          mm_Bsub[inputRow][inputCol] = mm_readB(batch,
            kStart + inputRow,
            globalColStart + inputCol${S?", batchIndices":""});
        }
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      var BCached : array<${_}, colPerThread>;
      for (var k = 0; k < tileInner; k = k + 1) {
        for (var inner = 0; inner < colPerThread; inner = inner + 1) {
          BCached[inner] = mm_Bsub[k][localCol + inner * ${h[0]}];
        }
        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let ACached = ${V?`mm_Asub[k][localRow + innerRow * ${h[1]}];`:`mm_Asub[localRow + innerRow * ${h[1]}][k];`}
          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
            acc[innerRow][innerCol] = acc[innerRow][innerCol] +
                ACached * BCached[innerCol];
          }
        }
      }
      workgroupBarrier();
    }
    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      let gRow = globalRowStart + localRow + innerRow * ${h[1]};
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        let gCol = globalColStart + localCol + innerCol * ${h[0]};
        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);
      }
    }
    `:`
let tileRow = i32(localId.y) * rowPerThread;
let tileCol = i32(localId.x) * colPerThread;

let globalRow = i32(globalId.y) * rowPerThread;
let globalCol = i32(globalId.x) * colPerThread;
let globalRowStart = i32(workgroupId.y) * ${C};

let tileRowA = i32(localId.y) * ${L};
let tileColA = i32(localId.x) * ${W};
let tileRowB = i32(localId.y) * ${te};
// Loop over shared dimension.
for (var t = 0; t < num_tiles; t = t + 1) {
  // Load one tile of A into local memory.
  for (var innerRow = 0; innerRow < ${L}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < ${W}; innerCol = innerCol + 1) {
      let inputRow = tileRowA + innerRow;
      let inputCol = tileColA + innerCol;
      ${to(V,S)}
    }
  }

  // Load one tile of B into local memory.
  for (var innerRow = 0; innerRow < ${te}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
      let inputRow = tileRowB + innerRow;
      let inputCol = tileCol + innerCol;
      mm_Bsub[inputRow][inputCol] = mm_readB(batch,
        kStart + inputRow,
        globalCol + innerCol${S?", batchIndices":""});
    }
  }
  kStart = kStart + tileInner;
  workgroupBarrier();

  // Compute acc values for a single thread.
  var BCached : array<${_}, colPerThread>;
  for (var k = 0; k < tileInner; k = k + 1) {
    for (var inner = 0; inner < colPerThread; inner = inner + 1) {
      BCached[inner] = mm_Bsub[k][tileCol + inner];
    }

    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      ${fl(V)}
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];
      }
    }
  }

  workgroupBarrier();
}

for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
    mm_write(batch, globalRow + innerRow, globalCol + innerCol,
        acc[innerRow][innerCol]);
  }
}
`;return`
  var<workgroup> mm_Asub : array<array<${_}, ${v}>, ${x}>;
  var<workgroup> mm_Bsub : array<array<${_}, ${E}>, ${n}>;
  const rowPerThread = ${c[1]};
  const colPerThread = ${c[0]};
  const tileInner = ${n};

@compute @workgroup_size(${h[0]}, ${h[1]}, ${h[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
    let batch = ${l?"0":"i32(globalId.z)"};
    ${S?`let batchIndices = ${S.offsetToIndices("u32(batch)")};`:""}
    let num_tiles = ${l?`${Math.ceil(p/n)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};
    var kStart = ${l?`i32(globalId.z) * ${p}`:"0"};

    var acc : array<array<${_}, colPerThread>, rowPerThread>;
    ${$}
  }
`},os=(c,h,_,S,V=!1)=>{let[n,l,p,b]=S,C=Gr(S[0].type.tensor);return`
    fn mm_readA(batch: i32, row: i32, colIn: i32, batchIndices: ${n.type.indices}) -> ${bn(c,C)} {
      var value = ${bn(c,C)}(0.0);
      let col = colIn * ${c};
      if(row < uniforms.dim_a_outer && col < uniforms.dim_inner)
      {
        var aIndices: ${l.type.indices};
        ${bo("aIndices",l,l.rank-2,n.rank,"batchIndices")}
        ${l.indicesSet("aIndices",l.rank-2,"u32(row)")}
        ${l.indicesSet("aIndices",l.rank-1,"u32(colIn)")}
        value = ${l.getByIndices("aIndices")};
      }
      return value;
    }

    fn mm_readB(batch: i32, row: i32, colIn: i32, batchIndices: ${n.type.indices}) -> ${bn(c,C)} {
      var value = ${bn(c,C)}(0.0);
      let col = colIn * ${c};
      if(row < uniforms.dim_inner && col < uniforms.dim_b_outer)
      {
        var bIndices: ${p.type.indices};
        ${bo("bIndices",p,p.rank-2,n.rank,"batchIndices")}
        ${p.indicesSet("bIndices",p.rank-2,"u32(row)")}
        ${p.indicesSet("bIndices",p.rank-1,"u32(colIn)")}
        value = ${p.getByIndices("bIndices")};
      }
      return value;
    }

    fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${bn(c,C)}) {
      let col = colIn * ${c};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {
        var value = valueIn;
        let coords = vec3<i32>(batch, row, colIn);
        ${h?`value = value + ${V?"bias[colIn]":`${bn(c,C)}(bias[row])`};`:""}
        ${_}
        ${b.setByIndices("vec3<u32>(coords)","value")}
      }
    }
    `},t=(c,h,_,S,V=!1,n)=>{let l=c[0].dims,p=c[1].dims,b=l.slice(0,-2),C=p.slice(0,-2),E=S?S.slice(0,-2):_.slice(0,-2),v=Le.size(E),x=l[l.length-2],L=l[l.length-1],W=p[p.length-1],te=L%4==0&&W%4==0,$=x<=8?[4,1,1]:[4,4,1],j=[8,8,1],le=[Math.ceil(W/j[0]/$[0]),Math.ceil(x/j[1]/$[1]),Math.ceil(v/j[2]/$[2])],me=te?4:1,_e=[...b,x,L/me],Ee=_e.length,Fe=[...C,L,W/me],Ye=Fe.length,dt=[v,x,W/me],mt=[{type:6,data:x},{type:6,data:W},{type:6,data:L}];Ui(h,mt),mt.push(..._r(E,_e,Fe));let xt=["rank","rank"],jt=c.length>2;return jt&&(mt.push(..._r(c[2].dims)),xt.push("rank")),mt.push(..._r(dt)),{name:"MatMul",shaderCache:{hint:`${$};${h.activation};${te};${V}`,inputDependencies:xt},getRunData:()=>({outputs:[{dims:n?n(_):_,dataType:c[0].dataType}],dispatchGroup:{x:le[0],y:le[1],z:le[2]},programUniforms:mt}),getShaderSource:Gt=>{let Zt=E.length,ar=Ws("batchDims",c[0].dataType,Zt,1),St=Gr(c[0].dataType),kr=rr("a",c[0].dataType,Ee,me),fr=rr("b",c[1].dataType,Ye,me),ur=Lr("result",c[0].dataType,dt.length,me),Jr=[kr,fr];if(jt){let vs=V?me:1;Jr.push(rr("bias",c[2].dataType,c[2].dims.length,vs))}let Sr=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"}];Hi(h,Sr);let As=Gr(ur.type.tensor),Xs=Fi(h,ur.type.value,As),bs=os(me,jt,Xs,[ar,kr,fr,ur],V);return`
  ${Gt.registerUniforms(Sr).registerInternalVariables(ar).declareVariables(...Jr,ur)}
  ${bs}
  ${te?cA($,j,St,ar):Co($,j,St,ar)}
                   `}}}}),Qn=Me(()=>{Is(),_o(),zs(),CA(),Au(),Os(),$a(),r=(c,h,_,S,V=!1,n,l=4,p=4,b=4,C="f32")=>{let E=dt=>{switch(dt){case 1:return"return w[row * i32(uniforms.w_shape[3]) + colIn];";case 4:return"return w[row * i32(uniforms.w_shape[3]) / 4 + colIn];";default:throw new Error(`innerElementSize ${dt} is not supported.`)}},v=c?`
    let coord = vec4<i32>(batch, xRow, xCol, xCh);
    `:`
    let coord = vec4<i32>(batch, xCh, xRow, xCol);
    `,x=c?`
    let coords = vec4<i32>(
      batch,
      row / outWidth,
      row % outWidth,
      col);
    `:`
    let coords = vec4<i32>(
      batch,
      row,
      col / outWidth,
      col % outWidth);
    `,L=c?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",W=c?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",te=c?"row":"col",$=c?"col":"row",j=`
    let inChannels = i32(uniforms.w_shape[2]);
    let outWidth = ${c?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
    let outRow = ${te} / outWidth;
    let outCol = ${te} % outWidth;

    let WRow = ${$} / (i32(uniforms.w_shape[1]) * inChannels);
    let WCol = ${$} / inChannels % i32(uniforms.w_shape[1]);
    let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];
    let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];
    let xCh = ${$} % inChannels;
    var resData = ${bn(l,C)}(0.0);
    // The bounds checking is always needed since we use it to pad zero for
    // the 'same' padding type.
    if (xRow >= 0 && xRow < ${L} && xCol >= 0 && xCol < ${W}) {
      ${v}
      let xIndex = getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape));
      ${(dt=>{switch(dt){case 1:return"resData = x[xIndex];";case 3:return`resData = vec3<${C}>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);`;case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${dt} is not supported.`)}})(l)}
    }
    return resData;`,le=c?h&&S?`
    let col = colIn * ${l};
    ${j}`:`
    let col = colIn * ${l};
    if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {
      ${j}
    }
    return ${bn(l,C)}(0.0);`:S&&_?`
    let col = colIn * ${l};
    ${j}`:`
    let col = colIn * ${l};
    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {
      ${j}
    }
    return ${bn(l,C)}(0.0);`,me=c?S&&_?E(p):`
    let col = colIn * ${p};
    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {
      ${E(p)}
    }
    return ${bn(p,C)}(0.0);`:`
    let col = colIn * ${p};
    if (row < uniforms.dim_inner && col < uniforms.dim_a_outer) {
      ${E(p)}
    }
    return ${bn(p,C)}(0.0);`,_e=bn(b,C),Ee=bn(c?l:p,C),Fe=bn(c?p:l,C),Ye=Fi(n,_e,C);return`
    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${Ee} {
      ${c?le:me}
    }

    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${Fe} {
      ${c?me:le}
    }

    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${_e}) {
      let col = colIn * ${b};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer)
      {
      var value = valueIn;
      let outWidth = ${c?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      ${x}
      ${NA(V)}
      ${Ye}
      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
      }
    }`},s=(c,h,_,S,V,n,l,p,b)=>{let C=h.format==="NHWC",E=C?c[0].dims[3]:c[0].dims[1],v=_[0],x=C?_[2]:_[3],L=C?_[1]:_[2],W=C?_[3]:_[1],te=C&&(E%4==0||E%3==0)&&W%4==0,$=C?W:x*L,j=C?x*L:W,le=[8,8,1],me=S<=8?[4,1,1]:[4,4,1],_e=[Math.ceil($/le[0]/me[0]),Math.ceil(j/le[1]/me[1]),Math.ceil(v/le[2]/me[2])];ys("verbose",()=>`[conv2d_mm_webgpu] dispatch = ${_e}`);let Ee=te?C&&E%4!=0?3:4:1,Fe=le[1]*me[1],Ye=le[0]*me[0],dt=Math.max(le[0]*Ee,le[1]),mt=S%Fe==0,xt=V%Ye==0,jt=n%dt==0,Gt=te?[Ee,4,4]:[1,1,1],Zt=[{type:6,data:S},{type:6,data:V},{type:6,data:n},{type:6,data:[h.pads[0],h.pads[1]]},{type:6,data:h.strides},{type:6,data:h.dilations}];Ui(h,Zt),Zt.push(..._r(c[0].dims,c[1].dims));let ar=["rank","rank"];return l&&(Zt.push(..._r(c[2].dims)),ar.push("rank")),Zt.push(..._r(_)),{name:"Conv2DMatMul",shaderCache:{hint:`${h.cacheKey};${Ee};${te};${mt};${xt};${jt};${Fe};${Ye};${dt}`,inputDependencies:ar},getRunData:()=>({outputs:[{dims:b?b(_):_,dataType:c[0].dataType}],dispatchGroup:{x:_e[0],y:_e[1],z:_e[2]},programUniforms:Zt}),getShaderSource:St=>{let kr=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"pad",type:"i32",length:2},{name:"stride",type:"i32",length:2},{name:"dilation",type:"i32",length:2}];Hi(h,kr);let fr=te?4:1,ur=Gr(c[0].dataType),Jr=`
      fn setOutputAtIndex(flatIndex : i32, value : ${te?`vec4<${ur}>`:ur}) {
        result[flatIndex] = ${te?`vec4<${ur}>`:ur}(value);
      }
      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${te?`vec4<${ur}>`:ur}) {
        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));
        setOutputAtIndex(flatIndex ${te?"/ 4":""}, value);
      }`,Sr=[rr("x",c[0].dataType,c[0].dims.length,Ee===3?1:Ee),rr("w",c[1].dataType,c[1].dims.length,fr)],As=Lr("result",c[0].dataType,_.length,fr);if(l){let Xs=rr("bias",c[2].dataType,c[2].dims.length,fr);Sr.push(Xs),Jr+=`
        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${te?`vec4<${ur}>`:ur} {
          return bias[coords.${C?"w":"y"}${te?"/ 4":""}];
        }`}return`
        ${gl("uniforms.result_strides")}
        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,
        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,
        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };
        ${St.registerUniforms(kr).declareVariables(...Sr,As)}
        ${Jr}
        ${r(C,mt,xt,jt,l,h,Gt[0],Gt[1],Gt[2],ur)}
        ${te?cA(me,le,ur,void 0,!C,dt):Co(me,le,ur,void 0,!C,dt,!1,void 0,p)}`}}}}),qn=Me(()=>{Is(),_o(),Ps(),zs(),CA(),Au(),a=c=>{let h=1;for(let _=0;_<c.length;_++)h*=c[_];return h},i=c=>typeof c=="number"?[c,c,c]:c,o=(c,h)=>h<=1?c:c+(c-1)*(h-1),d=(c,h,_,S=1)=>{let V=o(h,S);return Math.floor((c[0]*(_-1)-_+V)/2)},f=(c,h,_,S,V)=>{V==null&&(V=d(c,h[0],S[0]));let n=[0,0,0,_];for(let l=0;l<3;l++)c[l]+2*V>=h[l]&&(n[l]=Math.trunc((c[l]-h[l]+2*V)/S[l]+1));return n},m=(c,h,_,S,V,n,l,p,b,C)=>{let E,v,x,L;if(c==="VALID"&&(c=0),typeof c=="number"){E={top:c,bottom:c,left:c,right:c,front:c,back:c};let W=f([h,_,S,1],[p,b,C],1,[V,n,l],c);v=W[0],x=W[1],L=W[2]}else if(Array.isArray(c)){if(!c.every((te,$,j)=>te===j[0]))throw Error(`Unsupported padding parameter: ${c}`);E={top:c[0],bottom:c[1],left:c[2],right:c[3],front:c[4],back:c[5]};let W=f([h,_,S,1],[p,b,C],1,[V,n,l],c[0]);v=W[0],x=W[1],L=W[2]}else{if(c!=="SAME_UPPER")throw Error(`Unknown padding parameter: ${c}`);{v=Math.ceil(h/V),x=Math.ceil(_/n),L=Math.ceil(S/l);let W=(v-1)*V+p-h,te=(x-1)*n+b-_,$=(L-1)*l+C-S,j=Math.floor(W/2),le=W-j,me=Math.floor(te/2),_e=te-me,Ee=Math.floor($/2);E={top:me,bottom:_e,left:Ee,right:$-Ee,front:j,back:le}}}return{padInfo:E,outDepth:v,outHeight:x,outWidth:L}},M=(c,h,_,S,V,n=!1,l="channelsLast")=>{let p,b,C,E,v;if(l==="channelsLast")[p,b,C,E,v]=c;else{if(l!=="channelsFirst")throw new Error(`Unknown dataFormat ${l}`);[p,v,b,C,E]=c}let[x,,L,W,te]=h,[$,j,le]=i(_),[me,_e,Ee]=i(S),Fe=o(L,me),Ye=o(W,_e),dt=o(te,Ee),{padInfo:mt,outDepth:xt,outHeight:jt,outWidth:Gt}=m(V,b,C,E,$,j,le,Fe,Ye,dt),Zt=n?x*v:x,ar=[0,0,0,0,0];return l==="channelsFirst"?ar=[p,Zt,xt,jt,Gt]:l==="channelsLast"&&(ar=[p,xt,jt,Gt,Zt]),{batchSize:p,dataFormat:l,inDepth:b,inHeight:C,inWidth:E,inChannels:v,outDepth:xt,outHeight:jt,outWidth:Gt,outChannels:Zt,padInfo:mt,strideDepth:$,strideHeight:j,strideWidth:le,filterDepth:L,filterHeight:W,filterWidth:te,effectiveFilterDepth:Fe,effectiveFilterHeight:Ye,effectiveFilterWidth:dt,dilationDepth:me,dilationHeight:_e,dilationWidth:Ee,inShape:c,outShape:ar,filterShape:h}},y=(c,h,_,S,V,n)=>{let l=n==="channelsLast";l?c[0].dims[3]:c[0].dims[1];let p={x:_.map((x,L)=>L)},b=[Math.ceil(a(p.x.map(x=>_[x]))/64),1,1];ys("verbose",()=>`[conv3d_naive_webgpu] dispatch = ${b}`);let C=[{type:12,data:Le.size(_)},{type:12,data:S},{type:12,data:V},{type:12,data:h.strides},{type:12,data:h.dilations}];Ui(h,C),C.push(..._r(c[0].dims,c[1].dims));let E=["rank","rank"],v=c.length===3;return v&&(C.push(..._r(c[2].dims)),E.push("rank")),C.push(..._r(_)),{name:"Conv3DNaive",shaderCache:{hint:`${h.cacheKey};${l};1;${v}`,inputDependencies:E},getRunData:()=>({outputs:[{dims:_,dataType:c[0].dataType}],dispatchGroup:{x:b[0],y:b[1],z:b[2]},programUniforms:C}),getShaderSource:x=>{let L=[{name:"output_size",type:"u32"},{name:"filter_dims",type:"u32",length:S.length},{name:"pads",type:"u32",length:V.length},{name:"strides",type:"u32",length:h.strides.length},{name:"dilations",type:"u32",length:h.dilations.length}];Hi(h,L);let W=Gr(c[0].dataType),te=rr("x",c[0].dataType,c[0].dims.length,1),$=rr("W",c[1].dataType,c[1].dims.length,1),j=[te,$],le=Lr("result",c[0].dataType,_.length,1),me="";if(v){let Fe=rr("bias",c[2].dataType,c[2].dims.length,1);j.push(Fe),me+=`
        fn getBiasByOutputCoords(coords : array<u32, 5>) -> ${W} {
          return bias[${Or("coords",l?4:1,5)}];
        }`}let _e=bn(1,W),Ee=Fi(h,_e,W);return`
            ${me}
            fn getX(d0 : u32, d1 : u32, d2 : u32, d3 : u32, d4 : u32) -> f32 {
              let aIndices = array<u32, 5>(d0, d1, d2, d3, d4);
              return ${te.getByIndices("aIndices")};
            }
            fn getW(d0 : u32, d1 : u32, d2 : u32, d3 : u32, d4 : u32) -> f32 {
              let aIndices = array<u32, 5>(d0, d1, d2, d3, d4);
              return ${$.getByIndices("aIndices")};
            }
          ${x.registerUniforms(L).declareVariables(...j,le)}
          ${x.mainStart()}
          ${x.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
              let coords = ${le.offsetToIndices("global_idx")};
              let batch = ${Or("coords",0,te.rank)};
              let d2 = ${Or("coords",l?te.rank-1:1,te.rank)};
              let xFRCCorner = vec3<u32>(${Or("coords",l?1:2,te.rank)},
              ${Or("coords",l?2:3,te.rank)},
              ${Or("coords",l?3:4,te.rank)}) * uniforms.strides - uniforms.pads;
              let xFCorner = xFRCCorner.x;
              let xRCorner = xFRCCorner.y;
              let xCCorner = xFRCCorner.z;
              let xShapeY = ${Or("uniforms.x_shape",l?1:2,te.rank)};
              let xShapeZ = ${Or("uniforms.x_shape",l?2:3,te.rank)};
              let xShapeW = ${Or("uniforms.x_shape",l?3:4,te.rank)};
              let xShapeU = ${Or("uniforms.x_shape",l?4:1,te.rank)};
              let inputDepthNearestVec4 = (xShapeU / 4) * 4;
              let inputDepthVec4Remainder = xShapeU % 4;

              var value = 0.0;
              for (var wF = 0u; wF < uniforms.filter_dims[0]; wF++) {
                let xF = xFCorner + wF * uniforms.dilations[0];
                if (xF < 0 || xF >= xShapeY) {
                  continue;
                }

                for (var wR = 0u; wR < uniforms.filter_dims[1]; wR++) {
                  let xR = xRCorner + wR * uniforms.dilations[1];
                  if (xR < 0 || xR >= xShapeZ) {
                    continue;
                  }

                  for (var wC = 0u; wC < uniforms.filter_dims[2]; wC++) {
                    let xC = xCCorner + wC * uniforms.dilations[2];
                    if (xC < 0 || xC >= xShapeW) {
                      continue;
                    }

                    for (var d1 = 0u; d1 < inputDepthNearestVec4; d1 += 4) {
                      ${l?`let xValues = vec4<f32>(
                               getX(batch, xF, xR, xC, d1),
                               getX(batch, xF, xR, xC, d1 + 1),
                               getX(batch, xF, xR, xC, d1 + 2),
                               getX(batch, xF, xR, xC, d1 + 3));
                            `:`let xValues = vec4<f32>(
                               getX(batch, d1, xF, xR, xC),
                               getX(batch, d1 + 1, xF, xR, xC),
                               getX(batch, d1 + 2, xF, xR, xC),
                               getX(batch, d1 + 3, xF, xR, xC));
                            `}
                            let wValues = vec4<f32>(
                              getW(d2, d1, wF, wR, wC),
                              getW(d2, d1 + 1, wF, wR, wC),
                              getW(d2, d1 + 2, wF, wR, wC),
                              getW(d2, d1 + 3, wF, wR, wC));
                      value += dot(xValues, wValues);
                    }
                    if (inputDepthVec4Remainder == 1) {
                        ${l?`value += getX(batch, xF, xR, xC, inputDepthNearestVec4)
                          * getW(d2, inputDepthNearestVec4, wF, wR, wC);`:`value += getX(batch, inputDepthNearestVec4, xF, xR, xC)
                          * getW(d2, inputDepthNearestVec4, wF, wR, wC);`}
                    } else if (inputDepthVec4Remainder == 2) {
                      ${l?`let xValues = vec2<f32>(
                        getX(batch, xF, xR, xC, inputDepthNearestVec4),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1));
                      `:`let xValues = vec2<f32>(
                        getX(batch, inputDepthNearestVec4, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 1, xF, xR, xC));
                    `}
                    let wValues = vec2<f32>(
                      getW(d2, inputDepthNearestVec4, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 1, wF, wR, wC));
                      value += dot(xValues, wValues);
                    } else if (inputDepthVec4Remainder == 3) {
                      ${l?`let xValues = vec3<f32>(
                        getX(batch, xF, xR, xC, inputDepthNearestVec4),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 2));
                      `:`let xValues = vec3<f32>(
                        getX(batch, inputDepthNearestVec4, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 1, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 2, xF, xR, xC));
                    `}
                    let wValues = vec3<f32>(
                      getW(d2, inputDepthNearestVec4, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 1, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 2, wF, wR, wC));
                      value += dot(xValues, wValues);
                    }
                  }
                }
              }
              ${v?"value = value + getBiasByOutputCoords(coords)":""};
              ${Ee}
              result[global_idx] = f32(value);
          }`}}}}),Il=Me(()=>{Is(),Ps(),zs(),CA(),P=(c,h,_,S)=>{let V=c.length>2,n=V?"value += b[output_channel];":"",l=c[0].dims,p=c[1].dims,b=h.format==="NHWC",C=b?_[3]:_[1],E=C/h.group,v=b&&E>=4?gs(C):1,x=Le.size(_)/v,L=[{type:12,data:x},{type:12,data:h.dilations},{type:12,data:[h.strides[0],h.strides[1]]},{type:12,data:[h.pads[0],h.pads[1]]},{type:12,data:E}];Ui(h,L),L.push(..._r(l,[p[0],p[1],p[2],p[3]/v]));let W=V?["rank","rank","rank"]:["rank","rank"];return L.push(..._r([_[0],_[1],_[2],_[3]/v])),{name:"GroupedConv",shaderCache:{hint:`${h.cacheKey}_${v}`,inputDependencies:W},getRunData:()=>({outputs:[{dims:S?S(_):_,dataType:c[0].dataType}],dispatchGroup:{x:Math.ceil(x/64)},programUniforms:L}),getShaderSource:te=>{let $=Lr("output",c[0].dataType,_.length,v),j=Gr($.type.tensor),le=Fi(h,$.type.value,j),me=rr("x",c[0].dataType,l.length),_e=rr("w",c[1].dataType,p.length,v),Ee=[me,_e];V&&Ee.push(rr("b",c[2].dataType,c[2].dims,v));let Fe=[{name:"output_size",type:"u32"},{name:"dilations",type:"u32",length:h.dilations.length},{name:"strides",type:"u32",length:2},{name:"pads",type:"u32",length:2},{name:"output_channels_per_group",type:"u32"}];Hi(h,Fe);let Ye=b?`
      for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[0]; wHeight++) {
        let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];

        if (xHeight < 0u || xHeight >= uniforms.x_shape[1]) {
          continue;
        }

        for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[1]; wWidth++) {
          let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];
          if (xWidth < 0u || xWidth >= uniforms.x_shape[2]) {
            continue;
          }

          for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[2]; wInChannel++) {
            let input_channel = in_channel_offset + wInChannel;
            let xVal = ${me.get("batch","xHeight","xWidth","input_channel")};
            let wVal = ${_e.get("wHeight","wWidth","wInChannel","output_channel")};
            value += xVal * wVal;
          }
        }
      }
      `:`
      for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[1]; wInChannel++) {
        let input_channel = in_channel_offset + wInChannel;
        for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[2]; wHeight++) {
          let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];

          if (xHeight < 0u || xHeight >= uniforms.x_shape[2]) {
            continue;
          }

          for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[3]; wWidth++) {
            let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];
            if (xWidth < 0u || xWidth >= uniforms.x_shape[3]) {
              continue;
            }

            let xVal = ${me.get("batch","input_channel","xHeight","xWidth")};
            let wVal = ${_e.get("output_channel","wInChannel","wHeight","wWidth")};
            value += xVal * wVal;
          }
        }
      }
      `;return`
  ${te.registerUniforms(Fe).declareVariables(...Ee,$)}

  ${te.mainStart()}
    ${te.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let outputIndices = ${$.offsetToIndices("global_idx")};
    let batch: u32 = outputIndices[0];
    let output_channel: u32 = outputIndices[${b?3:1}];
    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${b?1:2}], outputIndices[${b?2:3}]) * uniforms.strides - uniforms.pads;
    let group_id: u32 = output_channel * ${v} / uniforms.output_channels_per_group;
    var in_channel_offset = group_id * uniforms.w_shape[${b?2:1}];

    var value: ${$.type.value} = ${$.type.value}(0);
    ${Ye}
    ${n}
    ${le}
    ${$.setByOffset("global_idx","value")}
  }`}}},q=(c,h,_,S)=>{let V=c.length>2,n=gs(_[3]),l=gs(_[2]),p=Le.size(_)/n/l,b=[c[0].dims[0],c[0].dims[1],c[0].dims[2],c[0].dims[3]/n],C=[c[1].dims[0],c[1].dims[1],c[1].dims[2],c[1].dims[3]/n],E=[_[0],_[1],_[2],_[3]/n],v=[{type:12,data:p},{type:6,data:[h.strides[0],h.strides[1]]},{type:6,data:[h.pads[0],h.pads[1]]}];Ui(h,v),v.push(..._r(b,C,E));let x=(l-1)*h.strides[1]+C[1];return{name:"GroupedConv-Vectorize",shaderCache:{hint:`${h.cacheKey};${n};${l};${x};${C[0]};${C[1]}`,inputDependencies:V?["rank","rank","type"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:S?S(_):_,dataType:c[0].dataType}],dispatchGroup:{x:Math.ceil(p/64)},programUniforms:v}),getShaderSource:L=>{let W=Lr("output",c[0].dataType,E.length,n),te=Gr(W.type.tensor),$=Fi(h,W.type.value,te),j=rr("x",c[0].dataType,b.length,n),le=rr("w",c[1].dataType,C.length,n),me=[j,le];V&&me.push(rr("b",c[2].dataType,c[2].dims,n));let _e=V?"value += b[output_channel];":"",Ee=[{name:"output_size",type:"u32"},{name:"strides",type:"i32",length:2},{name:"pads",type:"i32",length:2}];return Hi(h,Ee),`
  ${L.registerUniforms(Ee).declareVariables(...me,W)}
  ${L.mainStart()}
    ${L.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let width0 = uniforms.output_shape[3];
    let output_channel = global_idx % width0;
    var index1 = global_idx / width0;
    let width1 = uniforms.output_shape[2] / ${l}u;
    let col = (index1 % width1) * ${l}u;
    index1 = index1 / width1;
    let row = index1 % uniforms.output_shape[1];
    let batch = index1 / uniforms.output_shape[1];

    let x_corner = vec2<i32>(i32(row), i32(col)) * uniforms.strides - uniforms.pads;

    var x_vals: array<${j.type.value}, ${x}>;
    var values: array<${W.type.value}, ${l}>;
    let input_channel = output_channel;
    // Use constant instead of uniform can give better performance for w's height/width.
    for (var w_height: u32 = 0u; w_height < ${C[0]}; w_height++) {
      let x_height = x_corner.x + i32(w_height);
      if (x_height >= 0 && u32(x_height) < uniforms.x_shape[1]) {
        for (var i = 0; i < ${x}; i++) {
          let x_width = x_corner.y + i;
          if (x_width >= 0 && u32(x_width) < uniforms.x_shape[2]) {
            x_vals[i] = ${j.get("batch","u32(x_height)","u32(x_width)","input_channel")};
          } else {
            x_vals[i] = ${j.type.value}(0);
          }
        }
        for (var w_width: u32 = 0u; w_width < ${C[1]}; w_width++) {
          let w_val = ${le.get("w_height","w_width","0","output_channel")};
          for (var i = 0u; i < ${l}u; i++) {
            values[i] = fma(x_vals[i * u32(uniforms.strides[1]) + w_width], w_val, values[i]);
          }
        }
      }
    }

    for (var i = 0u; i < ${l}u; i++) {
      var value = values[i];
      ${_e}
      ${$}
      ${W.set("batch","row","col + i","output_channel","value")};
    }
  }`}}}}),Qs=Me(()=>{Ps(),Qn(),qn(),$a(),Il(),CA(),H0(),Vo(),ae=(c,h,_,S,V,n)=>{let l=c[0],p=c.slice(n?1:2,n?3:4),b=p.length,C=h[0],E=h.slice(2).map((x,L)=>x+(x-1)*(_[L]-1)),v=p.map((x,L)=>x+S[L]+S[L+b]).map((x,L)=>Math.floor((x-E[L]+V[L])/V[L]));return v.splice(0,0,l),v.splice(n?3:1,0,C),v},de=[2,3,1,0],ye=(c,h)=>{if(!c||c.length!==2&&c.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(c[0].dims.length>5)throw new Error("greater than 5D is not supported");if(c[0].dims.length!==c[1].dims.length)throw new Error("filter does not have same dimension as input");if(c[0].dims[h.format==="NHWC"?c[0].dims.length-1:1]!==c[1].dims[1]*h.group)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(c.length===3&&(c[2].dims.length!==1||c[1].dims[0]!==c[2].dims[0]))throw new Error("invalid bias");let _=c[0].dims.length-2;if(h.dilations.length!==_)throw new Error(`dilations should be ${_}D`);if(h.strides.length!==_)throw new Error(`strides should be ${_}D`);if(h.pads.length!==2*_)throw new Error(`pads should be ${2*_}D`);if(h.kernelShape.length!==0&&h.kernelShape.length!==c[1].dims.length-2)throw new Error("invalid kernel shape")},Be=(c,h)=>{let _=c.kernelShape.slice();_.length<h[1].dims.length-2&&_.push(...Array(h[1].dims.length-2-_.length).fill(0));for(let n=2;n<h[1].dims.length;++n)_[n-2]===0&&(_[n-2]=h[1].dims[n]);let S=c.pads.slice();vt.adjustPadsBasedOnAutoPad(h[0].dims,c.strides,c.dilations,_,S,c.format==="NHWC",c.autoPad);let V=Object.assign({},c);return Object.assign(V,{kernelShape:_,pads:S}),V},qe=c=>{let h=QA(c),_=c.format;return{autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][c.auto_pad],format:_,dilations:c.dilations,group:c.group,kernelShape:c.kernel_shape,pads:c.pads,strides:c.strides,wIsConst:c.w_is_const(),...h,cacheKey:`${c.format};${h.activation};`}},ot=(c,h,_,S)=>{let V=_.format==="NHWC",n=ae(h[0].dims,h[1].dims,_.dilations,_.pads,_.strides,V);if(_.group!==1){let Ee=[h[0]];if(V){let Fe=c.kernelCustomData.wT??c.compute(Us(h[1],de),{inputs:[1],outputs:[_.wIsConst?-2:-1]})[0];_.wIsConst&&!c.kernelCustomData.wT&&(c.kernelCustomData.wT=Fe),Ee.push(Fe)}else Ee.push(h[1]);return h.length===3&&Ee.push(h[2]),void(!c.adapterInfo.isArchitecture("ampere")&&V&&h[1].dims[0]===_.group&&h[1].dims[1]===1&&_.dilations[0]===1&&_.dilations[1]===1?c.compute(q(Ee,_,n,S),{inputs:Ee}):c.compute(P(Ee,_,n,S),{inputs:Ee}))}let l=h.length===3,p=h[0].dims[V?1:2],b=h[0].dims[V?2:3],C=h[0].dims[V?3:1],E=h[1].dims[2],v=h[1].dims[3],x=n[V?1:2],L=n[V?2:3],W=n[V?3:1],te=V&&E===p&&v===b&&_.pads[0]===0&&_.pads[1]===0;if(te||E===1&&v===1&&_.dilations[0]===1&&_.dilations[1]===1&&_.strides[0]===1&&_.strides[1]===1&&_.pads[0]===0&&_.pads[1]===0){let Ee,Fe,Ye,dt=n[0],mt=[];if(V){let Gt=c.kernelCustomData.wT??c.compute(Us(h[1],de),{inputs:[1],outputs:[_.wIsConst?-2:-1]})[0];if(_.wIsConst&&!c.kernelCustomData.wT&&(c.kernelCustomData.wT=Gt),te){let Zt=p*b*C;Ee=h[0].reshape([1,dt,Zt]),Fe=Gt.reshape([1,Zt,W]),Ye=[1,dt,W]}else Ee=h[0].reshape([dt,p*b,C]),Fe=Gt.reshape([1,C,W]),Ye=[dt,x*L,W];mt.push(Ee),mt.push(Fe)}else Ee=h[0].reshape([dt,C,p*b]),Fe=h[1].reshape([1,W,C]),Ye=[dt,W,x*L],mt.push(Fe),mt.push(Ee);l&&mt.push(h[2]);let xt=Ye[2],jt=mt[0].dims[mt[0].dims.length-1];return void(xt<8&&jt<8?c.compute(Lo(mt,_,n,Ye,V,S),{inputs:mt}):c.compute(t(mt,_,n,Ye,V,S),{inputs:mt}))}let $=c.kernelCustomData.wT??c.compute(Us(h[1],de),{inputs:[1],outputs:[_.wIsConst?-2:-1]})[0];_.wIsConst&&!c.kernelCustomData.wT&&(c.kernelCustomData.wT=$);let j=[h[0],$];l&&j.push(h[2]);let le=V?x*L:W,me=V?W:x*L,_e=E*v*C;c.compute(s(j,_,n,le,me,_e,l,!0,S),{inputs:j})},pt=(c,h)=>{let _=h.format==="NHWC",S=[c.inputs[0].reshape(_?[c.inputs[0].dims[0],1,c.inputs[0].dims[1],c.inputs[0].dims[2]]:[c.inputs[0].dims[0],c.inputs[0].dims[1],1,c.inputs[0].dims[2]]),c.inputs[1].reshape([c.inputs[1].dims[0],c.inputs[1].dims[1],1,c.inputs[1].dims[2]])];c.inputs.length===3&&S.push(c.inputs[2]);let V=[0,h.pads[0],0,h.pads[1]],n=[1].concat(h.strides),l=[1].concat(h.dilations),p=[1].concat(h.kernelShape),b=Be({...h,pads:V,strides:n,dilations:l,kernelShape:p},S);ot(c,S,b,C=>_?[C[0],C[2],C[3]]:[C[0],C[1],C[3]])},Mt=(c,h,_)=>{let S=_.format==="NHWC"?"channelsLast":"channelsFirst",V=Be(_,h),n=_.autoPad==="NOTSET"?_.pads:_.autoPad,l=M(h[0].dims,h[1].dims,_.strides,_.dilations,n,!1,S);c.compute(y(h,V,l.outShape,[l.filterDepth,l.filterHeight,l.filterWidth],[l.padInfo.front,l.padInfo.top,l.padInfo.left],S))},Ft=(c,h)=>{if(ye(c.inputs,h),c.inputs[0].dims.length===3)pt(c,h);else if(c.inputs[0].dims.length===5)Mt(c,c.inputs,h);else{let _=Be(h,c.inputs);ot(c,c.inputs,_)}}}),qu=Me(()=>{Is(),_o(),Ps(),zs(),Lt=(c,h,_)=>{let S=c.length>2,V=h.outputShape,n=h.format==="NHWC",l=h.group,p=c[1].dims,b=p[2]/l,C=p[3],E=n?gs(b):1,v=n?gs(C):1,x=n?C===1?E:v:1,L=Le.size(V)/v,W=[Math.ceil(L/64),1,1];ys("verbose",()=>`[conv2d_backprop_webgpu] dispatch = ${W}`);let te=["rank","rank"],$=[h.strides[0],h.strides[1]],j=[h.kernelShape[n?1:2],h.kernelShape[n?2:3]],le=[h.dilations[0],h.dilations[1]],me=[j[0]+(h.dilations[0]<=1?0:(h.kernelShape[n?1:2]-1)*(h.dilations[0]-1)),j[1]+(h.dilations[1]<=1?0:(h.kernelShape[n?2:3]-1)*(h.dilations[1]-1))],_e=[me[0]-1-Math.floor((h.pads[0]+h.pads[2])/2),me[1]-1-Math.floor((h.pads[1]+h.pads[3])/2)],Ee=[{type:12,data:L},{type:12,data:$},{type:12,data:j},{type:12,data:le},{type:12,data:me},{type:6,data:_e},{type:12,data:b},{type:12,data:C},..._r(c[0].dims,c[1].dims)];return S&&(Ee.push(..._r(c[2].dims)),te.push("rank")),Ee.push(..._r(V)),{name:"ConvTranspose2D",shaderCache:{hint:`${h.cacheKey};${E}${x}${v}${C===1}`,inputDependencies:te},getRunData:()=>({dispatchGroup:{x:W[0],y:W[1],z:W[2]},outputs:[{dims:_?_(V):V,dataType:c[0].dataType}],programUniforms:Ee}),getShaderSource:Fe=>{let Ye=[{name:"output_size",type:"u32"},{name:"strides",type:"u32",length:$.length},{name:"filter_dims",type:"u32",length:j.length},{name:"dilations",type:"u32",length:j.length},{name:"effective_filter_dims",type:"u32",length:me.length},{name:"pads",type:"i32",length:_e.length},{name:"input_channels_per_group",type:"u32"},{name:"output_channels_per_group",type:"u32"}],dt=Gr(c[0].dataType),mt=n?1:2,xt=n?2:3,jt=n?3:1,Gt=rr("W",c[1].dataType,c[1].dims.length,x),Zt=rr("Dy",c[0].dataType,c[0].dims.length,E),ar=[Zt,Gt];S&&ar.push(rr("bias",c[2].dataType,[V[jt]].length,v));let St=Lr("result",c[0].dataType,V.length,v),kr=`
            let outputIndices = ${St.offsetToIndices(`global_idx * ${v}`)};
            let batch = ${St.indicesGet("outputIndices",0)};
            let d1 = ${St.indicesGet("outputIndices",jt)};
            let r = ${St.indicesGet("outputIndices",mt)};
            let c = ${St.indicesGet("outputIndices",xt)};
            let dyCorner = vec2<i32>(i32(r), i32(c)) - uniforms.pads;
            let dyRCorner = dyCorner.x;
            let dyCCorner = dyCorner.y;
            let groupId = d1 / uniforms.output_channels_per_group;
            let wOutChannel = d1 - groupId * uniforms.output_channels_per_group;
            // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
            // ? = to be determined. : = across all values in that axis.
            var dotProd = ${St.type.value}(0.0);
            var wR: u32 = 0;
            if (uniforms.dilations.x == 1) {
              // Minimum wR >= 0 that satisfies (dyRCorner + wR) % (uniforms.strides.x) == 0
              wR = u32(((dyRCorner + i32(uniforms.strides.x) - 1) / i32(uniforms.strides.x)) * i32(uniforms.strides.x) - dyRCorner);
            }
            for (; wR < uniforms.effective_filter_dims.x; wR = wR + 1) {
              if (wR % uniforms.dilations.x != 0) {
                continue;
              }
              let dyR = (${dt}(dyRCorner) + ${dt}(wR)) / ${dt}(uniforms.strides[0]);
              let wRPerm = uniforms.filter_dims.x - 1 - wR / uniforms.dilations.x;
              if (dyR < 0.0 || dyR >= ${dt}(uniforms.Dy_shape[${mt}]) || fract(dyR) > 0.0 ||
                  wRPerm < 0) {
                continue;
              }
              let idyR: u32 = u32(dyR);
              var wC: u32 = 0;
              if (uniforms.dilations.y == 1) {
                // Minimum wC >= 0 that satisfies (dyCCorner + wC) % (uniforms.strides.y) == 0
                wC = u32(((dyCCorner + i32(uniforms.strides.y) - 1) / i32(uniforms.strides.y)) * i32(uniforms.strides.y) - dyCCorner);
              }

              for (; wC < uniforms.effective_filter_dims.y; wC = wC + 1) {
                if (wC % uniforms.dilations.y != 0) {
                  continue;
                }
                let dyC = (${dt}(dyCCorner) + ${dt}(wC)) / ${dt}(uniforms.strides.y);
                let wCPerm = uniforms.filter_dims.y - 1 - wC / uniforms.dilations.y;
                if (dyC < 0.0 || dyC >= ${dt}(uniforms.Dy_shape[${xt}]) ||
                    fract(dyC) > 0.0 || wCPerm < 0) {
                  continue;
                }
                let idyC: u32 = u32(dyC);
                var inputChannel = groupId * uniforms.input_channels_per_group;
                for (var d2: u32 = 0; d2 < uniforms.input_channels_per_group; d2 = d2 + ${E}) {
                  let xValue = ${n?Zt.getByOffset(`${Zt.indicesToOffset(`${Zt.type.indices}(batch, idyR, idyC, inputChannel)`)} / ${E}`):Zt.get("batch","inputChannel","idyR","idyC")};
                  ${(()=>{let fr="";if(E===1)fr+=`
        let w_offset = ${Gt.indicesToOffset(`${Gt.type.indices}(u32(wRPerm), u32(wCPerm), inputChannel, wOutChannel)`)};
        let wValue = ${Gt.getByOffset(`w_offset / ${x}`)};
        dotProd = dotProd + xValue * wValue;`;else if(C===1)fr+=`
          let wValue = ${Gt.getByOffset(`${Gt.indicesToOffset(`${Gt.type.indices}(u32(wRPerm), u32(wCPerm), inputChannel, wOutChannel)`)} / ${x}`)};
          dotProd = dotProd + dot(xValue, wValue);`;else for(let ur=0;ur<E;ur++)fr+=`
            let wValue${ur} = ${Gt.getByOffset(`${Gt.indicesToOffset(`${Gt.type.indices}(u32(wRPerm), u32(wCPerm), inputChannel + ${ur}, wOutChannel)`)} / ${x}`)};
            dotProd = dotProd + xValue[${ur}] * wValue${ur};`;return fr})()}
                  inputChannel = inputChannel + ${E};
                }
                wC = wC + uniforms.strides.y - 1;
              }
              wR = wR + uniforms.strides[0] - 1;
            }
            let value = dotProd${S?` + bias[d1 / ${v}]`:""};
            ${St.setByOffset("global_idx","value")};
          `;return`
    ${Fe.registerUniforms(Ye).declareVariables(...ar,St)}
      ${Fe.mainStart()}
      ${Fe.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")};
    ${kr}}`}}}}),Bn=Me(()=>{qu(),CA(),Vo(),Xt=(c,h,_,S,V,n)=>(c-1)*h+_+(S-1)*V+1-n,Ar=(c,h,_,S,V)=>{let n=Math.floor(c/2);h==="SAME_UPPER"?(_[S]=n,_[V]=c-n):h==="SAME_LOWER"&&(_[S]=c-n,_[V]=n)},Mr=(c,h,_,S,V,n,l,p,b,C)=>{let E=c.length-2,v=C.length===0;b.length<E&&b.push(...Array(E-b.length).fill(0));let x=c[0],L=h[p?3:1]*V;for(let W=0,te=c.length-E-(p?1:0);W<E;++W,++te){let $=c[te],j=v?$*l[W]:C[W],le=Xt($,l[W],n[W],h[te],_[W],j);Ar(le,S,n,W,W+E),v&&C.push(l[W]*($-1)+b[W]+(h[te]-1)*_[W]+1-n[W]-n[W+E])}C.splice(0,0,x),C.splice(p?3:1,0,L)},Tr=(c,h)=>{let _=c.kernelShape.slice();if(c.kernelShape.length===0||c.kernelShape.reduce((v,x)=>v*x,1)===0){_.length=0;for(let v=2;v<h[1].dims.length;++v)_.push(h[1].dims[v])}let S=c.format==="NHWC";_.splice(0,0,h[1].dims[0]),_.splice(S?3:1,0,h[1].dims[1]);let V=c.pads.slice(),n=c.outputShape.slice(),l=c.outputPadding.slice(),p=h[0].dims,b=c.dilations.slice();if(b.reduce((v,x)=>v+x,0)===0){let v=h[0].dims.length-2;b=new Array(v).fill(1)}let C=c.strides.slice();if(C.reduce((v,x)=>v+x,0)===0){let v=h[0].dims.length-2;C=new Array(v).fill(1)}Mr(p,_,b,c.autoPad,c.group,V,C,S,l,n);let E=Object.assign({},c);return Object.assign(E,{kernelShape:_,pads:V,outputPadding:l,outputShape:n,dilations:b,strides:C}),E},Yr=c=>{let h=QA(c),_=c.format,S=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][typeof c.autoPad>"u"?0:c.autoPad],V=c.dilations,n=c.group,l=c.kernelShape,p=c.pads,b=c.strides,C=c.wIsConst();return{autoPad:S,format:_,dilations:V,group:n,kernelShape:l,outputPadding:c.outputPadding,outputShape:c.outputShape,pads:p,strides:b,wIsConst:C,...h,cacheKey:`${c.format};${h.activation};`}},$r=(c,h)=>{if(!c||c.length!==2&&c.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(c[0].dims.length!==4&&c[0].dims.length!==3)throw new Error("currently only support 2-dimensional conv");if(c[0].dims.length!==c[1].dims.length)throw new Error("filter does not have same dimension as input");if(c[0].dims[h.format==="NHWC"?c[0].dims.length-1:1]!==c[1].dims[0])throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let _=c[1].dims[1]*h.group;if(c.length===3&&(c[2].dims.length!==1||c[2].dims[0]!==_))throw new Error("invalid bias");let S=c[0].dims.length-2;if(h.dilations.reduce((V,n)=>V+n,0)>0&&h.dilations.length!==S)throw new Error(`dilations should be ${S}D`);if(h.strides.reduce((V,n)=>V+n,0)>0&&h.strides.length!==S)throw new Error(`strides should be ${S}D`);if(h.pads.reduce((V,n)=>V+n,0)>0&&h.pads.length!==2*S)throw new Error(`pads should be ${2*S}D`);if(h.outputPadding.length!==S&&h.outputPadding.length!==0)throw new Error(`output_padding should be ${S}D`);if(h.kernelShape.reduce((V,n)=>V+n,0)>0&&h.kernelShape.length!==0&&h.kernelShape.length!==c[1].dims.length-2)throw new Error("invalid kernel shape");if(h.outputShape.length!==0&&h.outputShape.length!==c[0].dims.length-2)throw new Error("invalid output shape")},ls=(c,h,_,S)=>{let V=c.kernelCustomData.wT??c.compute(Us(h[1],[2,3,0,1]),{inputs:[1],outputs:[_.wIsConst?-2:-1]})[0];_.wIsConst&&!c.kernelCustomData.wT&&(c.kernelCustomData.wT=V);let n=[h[0],V];h.length===3&&n.push(h[2]),c.compute(Lt(n,_,S),{inputs:n})},Ts=(c,h)=>{let _=h.format==="NHWC",S=[c.inputs[0].reshape(_?[c.inputs[0].dims[0],1,c.inputs[0].dims[1],c.inputs[0].dims[2]]:[c.inputs[0].dims[0],c.inputs[0].dims[1],1,c.inputs[0].dims[2]]),c.inputs[1].reshape([c.inputs[1].dims[0],c.inputs[1].dims[1],1,c.inputs[1].dims[2]])];c.inputs.length===3&&S.push(c.inputs[2]);let V=h.kernelShape;(V.length===0||V[0]===0)&&(V=[c.inputs[1].dims[2]]);let n=h.dilations;(n.length===0||n[0]===0)&&(n=[1]);let l=h.strides;(l.length===0||l[0]===0)&&(l=[1]);let p=h.pads;p.length===0&&(p=[0,0]),p=[0,p[0],0,p[1]],l=[1].concat(l),n=[1].concat(n),V=[1].concat(V);let b=h.outputPadding;b=[0].concat(b);let C=Tr({...h,pads:p,strides:l,dilations:n,kernelShape:V,outputPadding:b},S);ls(c,S,C,E=>_?[E[0],E[2],E[3]]:[E[0],E[1],E[3]])},Hs=(c,h)=>{if($r(c.inputs,h),c.inputs[0].dims.length===3)Ts(c,h);else{let _=Tr(h,c.inputs);ls(c,c.inputs,_)}}}),he=Me(()=>{Is(),Ps(),Ka(),zs(),$s=(c,h,_,S)=>{let V=Le.size(h),n=h.length,l=rr("input",c,n),p=Lr("output",c,n),b=_.dataType===6?_.getInt32Array()[0]:Number(_.getBigInt64Array()[0]),C=Le.normalizeAxis(b,n);return{name:"CumSum",shaderCache:{hint:S.cacheKey,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:h,dataType:c}],dispatchGroup:{x:Math.ceil(V/64)},programUniforms:[{type:12,data:V},{type:12,data:C},..._r(h,h)]}),getShaderSource:E=>{let v=` i32(${l.indicesGet("inputIndices","uniforms.axis")}) `,x=Or("uniforms.input_shape","uniforms.axis",n),L=S.reverse?v+(S.exclusive?" + 1":""):"0",W=S.reverse?x:v+(S.exclusive?"":" + 1");return`
                ${E.registerUniform("outputSize","u32").registerUniform("axis","u32").declareVariables(l,p)}
                ${E.mainStart()}
                  ${E.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
                  var inputIndices = ${p.offsetToIndices("global_idx")};
                  var sum = ${p.type.value}(0);
                  let first : i32 = ${L};
                  let last : i32 = ${W};
                  for (var i : i32 = first; i < last; i++) {
                    ${l.indicesSet("inputIndices","uniforms.axis","u32(i)")};
                    sum = sum + ${l.getByIndices("inputIndices")};
                  }
                  ${p.setByOffset("global_idx","sum")};
                }`}}},ga=(c,h)=>{let _=c.inputs[0].dims,S=c.inputs[0].dataType,V=c.inputs[1];c.compute($s(S,_,V,h),{inputs:[0]})},fa=c=>{let h=c.exclusive===1,_=c.reverse===1;return Ae({exclusive:h,reverse:_})}}),Te=Me(()=>{Is(),Ps(),Ka(),zs(),Pa=c=>{if(!c||c.length!==1)throw new Error("DepthToSpace requires 1 input.");if(c[0].dims.length!==4)throw new Error("DepthToSpace requires 4D input.")},Fa=(c,h,_,S)=>{let V=[];V.push(`fn perm(i: ${S.type.indices}) -> ${_.type.indices} {
    var a: ${_.type.indices};`);for(let n=0;n<h;++n)V.push(_.indicesSet("a",c[n],`i[${n}]`));return V.push("return a;}"),V.join(`
`)},za=(c,h)=>{let _,S,V,n,l,p,b=h.format==="NHWC",C=h.blocksize,E=h.mode==="DCR";b?([_,S,V,n]=c.dims,l=E?[_,S,V,C,C,n/C**2]:[_,S,V,n/C**2,C,C],p=E?[0,1,3,2,4,5]:[0,1,4,2,5,3]):([_,S,V,n]=[c.dims[0],c.dims[2],c.dims[3],c.dims[1]],l=E?[_,C,C,n/C**2,S,V]:[_,n/C**2,C,C,S,V],p=E?[0,3,4,1,5,2]:[0,1,4,2,5,3]);let v=c.reshape(l),x=v.dims.length,L=c.dataType,W=rr("a",L,x),te=Lr("output",L,x);return{name:"DepthToSpace",shaderCache:{hint:`${c.dims};${h.blocksize};${h.mode}`,inputDependencies:["rank"]},getRunData:$=>{let j=b?[_,S*C,V*C,n/C**2]:[_,n/C**2,S*C,V*C],le=Le.size(j),me=v.dims,_e=Le.sortBasedOnPerm(me,p);return{outputs:[{dims:j,dataType:$[0].dataType}],dispatchGroup:{x:Math.ceil(le/64)},programUniforms:[{type:12,data:le},..._r(me,_e)]}},getShaderSource:$=>`
  ${$.registerUniform("output_size","u32").declareVariables(W,te)}

  ${Fa(p,x,W,te)}

  ${$.mainStart()}
    ${$.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let indices = ${te.offsetToIndices("global_idx")};
    let aIndices = perm(indices);

    ${te.setByOffset("global_idx",W.getByIndices("aIndices"))}
  }`}},Ha=(c,h)=>{Pa(c.inputs),c.compute(za(c.inputs[0],h))},Ya=c=>Ae({blocksize:c.blocksize,mode:c.mode,format:c.format})}),st=Me(()=>{Is(),Ps(),Ka(),zs(),vn="^"+(sn="("+(Ja="[a-zA-Z]|\\.\\.\\.")+")+")+"$",si="^"+("("+sn+",)*"+sn)+"$",Ii=class{constructor(c=-1){this.symbolToIndices=new Map,this.inputIndex=c}addSymbol(c,h){let _=this.symbolToIndices.get(c);_===void 0?_=[h]:_.push(h),this.symbolToIndices.set(c,_)}},zi=class{constructor(c,h){var V;this.equation=h,this.hasEllipsis=!1,this.symbolToInfo=new Map,this.lhs=new Array,this.outputDims=[];let[_,S]=h.includes("->")?h.split("->",2):[h,""];if(!_.match(RegExp(si)))throw new Error("Invalid LHS term");if(_.split(",").forEach((n,l)=>{let p=c[l].dims.slice();if(!n.match(RegExp(vn)))throw new Error("Invalid LHS term");let b=this.processTerm(n,!0,p,l);this.lhs.push(b)}),S==="")S+=[...this.symbolToInfo.entries()].filter(([n,l])=>l.count===1||n==="...").map(([n])=>n).join("");else if(!S.match(RegExp(sn)))throw new Error("Invalid RHS");(V=S.match(RegExp(Ja,"g")))==null||V.forEach(n=>{if(n==="...")this.outputDims=this.outputDims.concat(this.ellipsisDims);else{let l=this.symbolToInfo.get(n);if(l===void 0)throw new Error("Invalid RHS symbol");this.outputDims.push(l.dimValue)}}),this.rhs=this.processTerm(S,!1,this.outputDims)}addSymbol(c,h,_){let S=this.symbolToInfo.get(c);if(S!==void 0){if(S.dimValue!==h&&S.count!==1)throw new Error("Dimension mismatch");S.count++,S.inputIndices.push(_)}else S={count:1,dimValue:h,inputIndices:[_]};this.symbolToInfo.set(c,S)}processTerm(c,h,_,S=-1){let V=_.length,n=!1,l=[],p=0;if(!c.match(RegExp(vn))&&!h&&c!=="")throw new Error("Invalid LHS term");let b=c.match(RegExp(Ja,"g")),C=new Ii(S);return b==null||b.forEach((E,v)=>{if(E==="..."){if(n)throw new Error("Only one ellipsis is allowed per input term");n=!0;let x=V-b.length+1;if(x<0)throw new Error("Ellipsis out of bounds");if(l=_.slice(p,p+x),this.hasEllipsis){if(this.ellipsisDims.length!==l.length||this.ellipsisDims.toString()!==l.toString())throw new Error("Ellipsis dimensions mismatch")}else{if(!h)throw new Error("Ellipsis must be specified in the LHS");this.hasEllipsis=!0,this.ellipsisDims=l}for(let L=0;L<l.length;L++){let W=String.fromCharCode(48+L);C.addSymbol(W,v+L),this.addSymbol(W,_[p++],S)}}else C.addSymbol(E,v+(this.hasEllipsis?this.ellipsisDims.length-1:0)),this.addSymbol(E,_[p++],S)}),C}},Yi=c=>c+"_max",Ro=(c,h,_,S)=>{let V=c.map(b=>b.length).map((b,C)=>rr(`input${C}`,h,b)),n=Le.size(S),l=Lr("output",h,S.length),p=[..._.symbolToInfo.keys()].filter(b=>!_.rhs.symbolToIndices.has(b));return{name:"Einsum",shaderCache:{hint:_.equation,inputDependencies:c.map(()=>"rank")},getRunData:()=>{let b=p.filter(E=>_.symbolToInfo.has(E)).map(E=>{var v;return{type:12,data:((v=_.symbolToInfo.get(E))==null?void 0:v.dimValue)||0}});b.push({type:12,data:n});let C=c.map((E,v)=>[..._r(E)]).reduce((E,v)=>E.concat(v),b);return C.push(..._r(S)),{outputs:[{dims:S,dataType:h}],dispatchGroup:{x:Math.ceil(n/64)},programUniforms:C}},getShaderSource:b=>{let C=[],E=[],v=[],x=[],L=[],W=_.symbolToInfo.size===_.rhs.symbolToIndices.size;_.symbolToInfo.forEach(($,j)=>{var le;if(_.rhs.symbolToIndices.has(j)){let me=(le=_.rhs.symbolToIndices.get(j))==null?void 0:le[0];me!==void 0&&_.lhs.forEach((_e,Ee)=>{if($.inputIndices.includes(Ee)){let Fe=_e.symbolToIndices.get(j);if(Fe===void 0)throw new Error("Invalid symbol error");Fe.forEach(Ye=>{C.push(`${V[Ee].indicesSet(`input${Ee}Indices`,Ye,l.indicesGet("outputIndices",me))}`)})}})}else _.lhs.forEach((me,_e)=>{if($.inputIndices.includes(_e)){let Ee=me.symbolToIndices.get(j);if(Ee===void 0)throw new Error("Invalid symbol error");Ee.forEach(Fe=>{E.push(`${V[_e].indicesSet(`input${_e}Indices`,Fe,`${j}`)}`)}),L.push(`prod *= ${V[_e].getByIndices(`input${_e}Indices`)};`)}}),v.push(`for(var ${j}: u32 = 0; ${j} < uniforms.${Yi(j)}; ${j}++) {`),x.push("}")});let te=W?[...C,`let sum = ${V.map(($,j)=>$.getByIndices(`input${j}Indices`)).join(" * ")};`]:[...C,"var sum = 0.0;",...v,...E,"var prod = 1.0;",...L,"sum += prod;",...x];return`
            ${b.registerUniforms(p.map($=>({name:`${Yi($)}`,type:"u32"}))).registerUniform("outputSize","u32").declareVariables(...V,l)}

            ${b.mainStart()}
            ${b.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
            var outputIndices = ${l.offsetToIndices("global_idx")};
            ${V.map(($,j)=>`var input${j}Indices: ${V[j].type.indices};`).join(`
`)}
            ${te.join(`
`)};
            ${l.setByOffset("global_idx","sum")};
          }`}}},ro=(c,h)=>{let _=new zi(c.inputs,h.equation),S=_.outputDims,V=c.inputs.map((n,l)=>n.dims);c.compute(Ro(V,c.inputs[0].dataType,_,S))},wo=c=>{let h=c.equation.replace(/\s+/g,"");return Ae({equation:h})}}),Qt=Me(()=>{Is(),Ps(),zs(),so=c=>{if(!c||c.length!==2)throw new Error("Expand requires 2 input.");let h=c[0].dims,_=Array.from(c[1].getBigInt64Array(),Number),S=_.length<h.length?0:_.length-h.length,V=h.length<_.length?0:h.length-_.length;for(;S<_.length&&V<h.length;++S,++V)if(_[S]!==h[V]&&_[S]!==1&&h[V]!==1)throw new Error("Expand requires shape to be broadcastable to input")},LA=(c,h)=>{let _=c.length-h.length,S=[];for(let V=0;V<_;++V)S.push(c[V]);for(let V=0;V<h.length;++V)S.push(h[V]===1?c[V+_]:h[V]);return S},uA=(c,h)=>c.length>h.length?LA(c,h):LA(h,c),RA=c=>{let h=c[0].dims,_=Array.from(c[1].getBigInt64Array(),Number),S=uA(h,_),V=c[0].dataType,n=V===9||Le.size(h)===1,l=V===9||h.length>0&&h[h.length-1]%4==0?4:1,p=n||S.length>0&&S[S.length-1]%4==0?4:1,b=Math.ceil(Le.size(S)/p),C=[{type:12,data:b},..._r(h,S)];return{name:"Expand",shaderCache:{hint:`${S.length};${l}${p}`,inputDependencies:["rank"]},getShaderSource:E=>{let v,x=rr("input",V,h.length,l),L=Lr("output",V,S.length,p);if(V===9){let W=(te,$,j="")=>`
          let outputIndices${$} = ${L.offsetToIndices(`outputOffset + ${$}u`)};
          let offset${$} = ${x.broadcastedIndicesToOffset(`outputIndices${$}`,L)};
          let index${$} = offset${$} / 4u;
          let component${$} = offset${$} % 4u;
          ${te}[${$}] = ${j}(${x.getByOffset(`index${$}`)}[component${$}]);
        `;v=`
        let outputOffset = global_idx * ${p};
        var data = vec4<u32>(0);
        ${W("data",0,"u32")}
        ${W("data",1,"u32")}
        ${W("data",2,"u32")}
        ${W("data",3,"u32")}
        ${L.setByOffset("global_idx","data")}
      }`}else v=`
        let outputIndices = ${L.offsetToIndices(`global_idx * ${p}`)};
        let inputOffset = ${x.broadcastedIndicesToOffset("outputIndices",L)};
        let data = ${L.type.value}(${x.getByOffset(`inputOffset / ${l}`)});
        ${L.setByOffset("global_idx","data")}
      }`;return`
    ${E.registerUniform("vec_size","u32").declareVariables(x,L)}
    ${E.mainStart()}
    ${E.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
    ${v}`},getRunData:()=>({outputs:[{dims:S,dataType:c[0].dataType}],dispatchGroup:{x:Math.ceil(b/64)},programUniforms:C})}},Io=c=>{so(c.inputs),c.compute(RA(c.inputs),{inputs:[0]})}}),Jt=Me(()=>{Is(),Ps(),zs(),U0(),J0=c=>{let h=c[0].dataType,_=Le.size(c[0].dims),S=Le.size(c[1].dims),V=S%4==0;return{name:"FastGeluWithBias",shaderCache:{hint:`${V}`,inputDependencies:["type","type"]},getShaderSource:n=>{let l=rr("x",h,[1],4),p=rr("bias",h,[1],4),b=Lr("y",h,[1],4),C=v=>`
      let bias${v}_offset: u32 = (global_idx * 4 + ${v}) % uniforms.bias_size;
      let bias${v} = ${p.getByOffset(`bias${v}_offset / 4`)}[bias${v}_offset % 4];`,E=V?`
      let bias = ${p.getByOffset("global_idx % (uniforms.bias_size / 4)")};`:`${C(0)}${C(1)}${C(2)}${C(3)}
      let bias = ${l.type.value}(bias0, bias1, bias2, bias3);`;return`${n.registerUniforms([{name:"output_vec_size",type:"u32"},{name:"bias_size",type:"u32"}]).declareVariables(l,p,b)}

    ${ui(wr(h))}

    ${n.mainStart(hr)}
      ${n.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_vec_size")}

      let x = ${l.getByOffset("global_idx")};
      ${E}
      let x_in = x + bias;
      ${b.setByOffset("global_idx",SA("x_in"))}
    }`},getRunData:n=>({outputs:[{dims:n[0].dims,dataType:n[0].dataType}],programUniforms:[{type:12,data:Math.ceil(_/4)},{type:12,data:S}],dispatchGroup:{x:Math.ceil(_/hr/4)}})}},$0=c=>{c.inputs.length<2||Le.size(c.inputs[1].dims)===0?Oo(c):c.compute(J0(c.inputs))}}),$t=Me(()=>{Is(),Ps(),Ka(),zs(),Sl=c=>{if(!c||c.length!==2)throw new Error("Gather requires 2 inputs.")},fu=(c,h)=>{let _=c[0].dims,S=c[1].dims,V=_.length,n=Le.normalizeAxis(h.axis,V),l=_.slice(0);l.splice(n,1,...S);let p=_[n],b=c[0].dataType===9?4:1,C=Math.ceil(Le.size(l)/b),E=[{type:12,data:C},{type:6,data:p},{type:12,data:n},..._r(c[0].dims,c[1].dims,l)];return{name:"Gather",shaderCache:{hint:h.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:l,dataType:c[0].dataType}],dispatchGroup:{x:Math.ceil(C/64)},programUniforms:E}),getShaderSource:v=>{let x,L=rr("data",c[0].dataType,c[0].dims.length,b),W=rr("inputIndices",c[1].dataType,c[1].dims.length),te=Lr("output",c[0].dataType,l.length,b),$=j=>{let le=S.length,me=`var indicesIndices${j}  = ${W.type.indices}(0);`;for(let _e=0;_e<le;_e++)me+=`${le>1?`indicesIndices${j}[${_e}]`:`indicesIndices${j}`} = ${l.length>1?`outputIndices${j}[uniforms.axis + ${_e}]`:`outputIndices${j}`};`;me+=`
          var idx${j} = ${W.getByIndices(`indicesIndices${j}`)};
          if (idx${j} < 0) {
            idx${j} = idx${j} + uniforms.axisDimLimit;
          }
          var dataIndices${j} : ${L.type.indices};
        `;for(let _e=0,Ee=0;_e<V;_e++)_e===n?(me+=`${V>1?`dataIndices${j}[${_e}]`:`dataIndices${j}`} = u32(idx${j});`,Ee+=le):(me+=`${V>1?`dataIndices${j}[${_e}]`:`dataIndices${j}`} = ${l.length>1?`outputIndices${j}[${Ee}]`:`outputIndices${j}`};`,Ee++);return me};if(c[0].dataType===9){let j=(le,me,_e="")=>`
          let outputIndices${me} = ${te.offsetToIndices(`outputOffset + ${me}u`)};
          ${$(me)};
          let offset${me} = ${L.indicesToOffset(`dataIndices${me}`)};
          let index${me} = offset${me} / 4u;
          let component${me} = offset${me} % 4u;
          ${le}[${me}] = ${_e}(${L.getByOffset(`index${me}`)}[component${me}]);
        `;x=`
        let outputOffset = global_idx * ${b};
        var value = vec4<u32>(0);
        ${j("value",0,"u32")}
        ${j("value",1,"u32")}
        ${j("value",2,"u32")}
        ${j("value",3,"u32")}
        ${te.setByOffset("global_idx","value")}
      `}else x=`
      let outputIndices = ${te.offsetToIndices("global_idx")};
      ${$("")};
      let value = ${L.getByIndices("dataIndices")};
      ${te.setByOffset("global_idx","value")};
      `;return`
      ${v.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(L,W,te)}
      ${v.mainStart()}
        ${v.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        ${x}
      }`}}},ec=c=>Ae({axis:c.axis}),tc=(c,h)=>{let _=c.inputs;Sl(_),c.compute(fu(c.inputs,h))}}),ie=Me(()=>{Is(),Ps(),zs(),rc=(c,h,_,S,V,n,l,p,b)=>{let C=[{type:12,data:n},{type:12,data:S},{type:12,data:V},{type:12,data:_},{type:12,data:l},{type:12,data:p},{type:12,data:b}],E=[n];return C.push(..._r(h.dims,E)),c.compute({name:"computeSliceOffsets",shaderCache:{hint:`${V.length}_${_.length}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:E,dataType:c.inputs[1].dataType}],dispatchGroup:{x:Math.ceil(n/64)},programUniforms:C}),getShaderSource:v=>{let x=[rr("indices_data",h.dataType,h.dims.length),Lr("input_slice_offsets_data",12,1,1)],L=[{name:"output_size",type:"u32"},{name:"batch_dims",type:"u32"},{name:"input_dims",type:"u32",length:V.length},{name:"sizes_from_slice_dims_data",type:"u32",length:_.length},{name:"num_slices_per_batch",type:"u32"},{name:"input_batch_stride",type:"u32"},{name:"num_slice_dims",type:"u32"}];return`
  ${v.registerUniforms(L).declareVariables(...x)}
  ${v.mainStart()}
    ${v.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let batch_idx = global_idx / uniforms.num_slices_per_batch;
    let base_offset = batch_idx * uniforms.input_batch_stride;

    let slice_indices_base_offset = global_idx * uniforms.num_slice_dims;
    var relative_slice_offset = 0;
    for (var dim_idx = 0u; dim_idx < uniforms.num_slice_dims; dim_idx ++) {
      var index = i32(indices_data[dim_idx + slice_indices_base_offset].x);
      let input_dim_idx = uniforms.batch_dims + dim_idx;
      if (index < 0) {
        ${V.length===1?"index += i32(uniforms.input_dims);":"index += i32(uniforms.input_dims[input_dim_idx]);"}
      }
      ${_.length===1?"relative_slice_offset += index * i32(uniforms.sizes_from_slice_dims_data);":"relative_slice_offset += index * i32(uniforms.sizes_from_slice_dims_data[dim_idx]);"}
    }

    input_slice_offsets_data[global_idx] =  base_offset + u32(relative_slice_offset);
  }`}},{inputs:[h],outputs:[-1]})[0]},i0=(c,h)=>{let _=c.inputs,S=_[0].dims,V=_[0].dataType,n=_[1].dims,l=n[n.length-1],p=Le.sizeToDimension(n,n.length-1),b=Le.sizeFromDimension(S,h.batchDims+l),C=Le.sizeToDimension(S,h.batchDims),E=Le.sizeFromDimension(S,h.batchDims),v=p/C,x=new Array(l),L=b;for(let me=0;me<l;++me)x[l-1-me]=L,L*=S[h.batchDims+l-1-me];let W=rc(c,_[1],x,h.batchDims,S,p,v,E,l),te=h.batchDims+l;if(te>S.length)throw new Error("last dimension of indices must not be larger than rank of input tensor");let $=n.slice(0,-1).concat(S.slice(te)),j=Le.size($),le=[{type:12,data:j},{type:12,data:b},..._r(_[0].dims,W.dims,$)];c.compute({name:"GatherND",shaderCache:{hint:h.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:$,dataType:V}],dispatchGroup:{x:Math.ceil(j/64)},programUniforms:le}),getShaderSource:me=>{let _e=rr("data",_[0].dataType,_[0].dims.length),Ee=rr("slice_offsets",12,W.dims.length),Fe=Lr("output",_[0].dataType,$.length);return`
          ${me.registerUniform("output_size","u32").registerUniform("slice_size","u32").declareVariables(_e,Ee,Fe)}
            ${me.mainStart()}
            ${me.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          let slice_offset = slice_offsets[global_idx / uniforms.slice_size];
          output[global_idx] = data[u32(slice_offset) + global_idx % uniforms.slice_size];
        }`}},{inputs:[_[0],W]})},o0=c=>({batchDims:c.batch_dims,cacheKey:""})}),ke=Me(()=>{Is(),Ps(),Ka(),zs(),A0=(c,h)=>{if(c.length<3||c.length>4)throw new Error("GatherBlockQuantized requires 3 or 4 inputs.");let _=Le.normalizeAxis(h.quantizeAxis,c[0].dims.length),S=h.blockSize,V=c[0],n=c[2],l=c.length===4?c[3]:void 0;if(n.dims.length!==V.dims.length||!V.dims.map((p,b)=>b===_?Math.ceil(p/S)===n.dims[b]:p===n.dims[b]).reduce((p,b)=>p&&b,!0))throw new Error("Scales must have the same rank as the input tensor and the dims should match except on gatherAxis.");if(l){if(l.dataType!==V.dataType)throw new Error("Zero point must have the same data type as the input tensor.");if(l.dims.length!==n.dims.length||!l.dims.map((p,b)=>p===n.dims[b]).reduce((p,b)=>p&&b,!0))throw new Error("Zero point must have the same rank as the input tensor and the dims should match except on quantizeAxis.")}},l0=(c,h)=>{let _=c[0].dims,S=c[1].dims,V=_.length,n=Le.normalizeAxis(h.gatherAxis,V),l=Le.normalizeAxis(h.quantizeAxis,V),p=_.slice(0);p.splice(n,1,...S);let b=Le.size(p),C=c[2].dataType,E=c[0].dataType===22,v=[{type:12,data:b},{type:12,data:l},{type:12,data:n},{type:12,data:h.blockSize},..._r(...c.map((x,L)=>x.dims),p)];return{name:"GatherBlockQuantized",shaderCache:{hint:`${h.cacheKey};${c.filter((x,L)=>L!==1).map(x=>x.dims.join("_")).join(";")}`,inputDependencies:Array.from({length:c.length},(x,L)=>"rank")},getRunData:()=>({outputs:[{dims:p,dataType:C}],dispatchGroup:{x:Math.ceil(b/64)},programUniforms:v}),getShaderSource:x=>{let L=rr("data",c[0].dataType,c[0].dims.length),W=rr("inputIndices",c[1].dataType,c[1].dims.length),te=rr("scales",c[2].dataType,c[2].dims.length),$=c.length>3?rr("zeroPoint",c[3].dataType,c[3].dims.length):void 0,j=Lr("output",C,p.length),le=[L,W,te];return $&&le.push($),`
        ${x.registerUniforms([{name:"output_size",type:"u32"},{name:"quantize_axis",type:"u32"},{name:"gather_axis",type:"u32"},{name:"block_size",type:"u32"}]).declareVariables(...le,j)}
        ${x.mainStart()}
        let output_indices = ${j.offsetToIndices("global_idx")};
        var indices_indices = ${W.type.indices}(0);
        ${S.length>1?`
          for (var i: u32 = 0; i < ${S.length}; i++) {
            let index = ${j.indicesGet("output_indices","uniforms.gather_axis + i")};
            ${W.indicesSet("indices_indices","i","index")};
          }`:`indices_indices = ${j.indicesGet("output_indices","uniforms.gather_axis")};`};
        var data_indices = ${L.type.indices}(0);
        for (var i: u32 = 0; i < uniforms.gather_axis; i++) {
          let index = ${j.indicesGet("output_indices","i")};
          ${L.indicesSet("data_indices","i","index")};
        }
        var index_from_indices = ${W.getByIndices("indices_indices")};
        if (index_from_indices < 0) {
          index_from_indices += ${_[n]};
        }
        ${L.indicesSet("data_indices","uniforms.gather_axis","u32(index_from_indices)")};
        for (var i = uniforms.gather_axis + 1; i < ${p.length}; i++) {
          let index = ${j.indicesGet("output_indices",`i + ${S.length} - 1`)};
          ${L.indicesSet("data_indices","i","index")};
        }
        let data_offset = ${L.indicesToOffset("data_indices")};
        let data_index = data_offset % 8;
        // Convert 4-bit packed data to 8-bit packed data.
        let packed_4bit_quantized_data = ${L.getByOffset("data_offset / 8")};
        let packed_8bit_quantized_data = (packed_4bit_quantized_data >> (4 * (data_index % 2))) & 0x0f0f0f0f;
        let quantized_data_vec = ${E?"unpack4xI8":"unpack4xU8"}(u32(packed_8bit_quantized_data));
        let quantized_data = quantized_data_vec[data_index / 2];
        var scale_indices = data_indices;
        let quantize_axis_index = ${te.indicesGet("data_indices","uniforms.quantize_axis")} / uniforms.block_size;
        ${te.indicesSet("scale_indices","uniforms.quantize_axis","quantize_axis_index")};
        var scale = ${te.getByIndices("scale_indices")};
        ${$?`
              let zero_point_indices = scale_indices;
              let zero_point_offset = ${$.indicesToOffset("zero_point_indices")};
              let zero_point_index = zero_point_offset % 8;
              let packed_4bit_zero_points = ${$.getByOffset("zero_point_offset / 8")};
              let packed_8bit_zero_points = (packed_4bit_zero_points >> (4 * (zero_point_index % 2))) & 0x0f0f0f0f;
              let zero_point_vec = ${E?"unpack4xI8":"unpack4xU8"}(u32(packed_8bit_zero_points));
              let zero_point = zero_point_vec[zero_point_index / 2];`:"var zero_point = 0"};
        let dequantized_data = ${wr(C)}(quantized_data - zero_point) * scale;
        ${j.setByOffset("global_idx","dequantized_data")};
    }`}}},sc=(c,h)=>{let _=c.inputs;A0(_,h),c.compute(l0(c.inputs,h))},c0=c=>Ae({blockSize:c.blockSize,gatherAxis:c.gatherAxis,quantizeAxis:c.quantizeAxis})}),Ue=Me(()=>{Is(),Ps(),Ka(),zs(),Gl=c=>{if(!c||c.length!==2)throw new Error("GatherElements requires 2 inputs.");if(c[0].dims.length<1)throw new Error("GatherElements requires that the data input be rank >= 1.");if(c[0].dims.length!==c[1].dims.length)throw new Error(`GatherElements requires that the data input and
                     indices input tensors be of same rank.`)},ac=(c,h)=>{let _=c[0].dims,S=c[0].dataType,V=_.length,n=c[1].dims,l=c[1].dataType,p=Le.normalizeAxis(h.axis,V),b=_[p],C=n.slice(0),E=Le.size(C),v=rr("input",S,V),x=rr("indicesInput",l,n.length),L=Lr("output",S,C.length),W=[{type:12,data:E},{type:6,data:b},{type:12,data:p}];return W.push(..._r(_,n,C)),{name:"GatherElements",shaderCache:{inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:C,dataType:c[0].dataType}],dispatchGroup:{x:Math.ceil(E/64)},programUniforms:W}),getShaderSource:te=>`
      ${te.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(v,x,L)}
      ${te.mainStart()}
      ${te.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

      let outputIndices = ${L.offsetToIndices("global_idx")};

      var idx = ${x.getByOffset("global_idx")};
      if (idx < 0) {
        idx = idx + uniforms.axisDimLimit;
      }
      var inputIndices = ${v.type.indices}(outputIndices);
      ${v.indicesSet("inputIndices","uniforms.axis","u32(idx)")};
      let value = ${v.getByIndices("inputIndices")};

      ${L.setByOffset("global_idx","value")};
  }`}},pu=c=>Ae({axis:c.axis}),Fl=(c,h)=>{let _=c.inputs;Gl(_),c.compute(ac(c.inputs,h))}}),yt=Me(()=>{Is(),Ps(),zs(),nc=c=>{if(!c)throw new Error("Input is missing");if(c.length<2||c.length>3)throw new Error("Invaid input number.");if(c.length===3&&c[2].dims.length>2)throw new Error("Invalid input shape of C");if(c[0].dataType!==c[1].dataType||c.length===3&&c[0].dataType!==c[2].dataType)throw new Error("Input types are mismatched")},ic=(c,h)=>{let _=c[0].dims.slice(),S=c[1].dims.slice(),[V,n,l]=Pt.getShapeOfGemmResult(_,h.transA,S,h.transB,c.length===3?c[2].dims:void 0),p=[V,n];if(!p)throw new Error("Can't use gemm on the given tensors");let b=16,C=Math.ceil(n/b),E=Math.ceil(V/b),v=(Le.size(p),[{type:12,data:C},{type:12,data:V},{type:12,data:n},{type:12,data:l},{type:1,data:h.alpha},{type:1,data:h.beta}]),x=["type","type"];return c.length===3&&(v.push(..._r(c[2].dims)),x.push("rank")),v.push(..._r(p)),{name:"GemmShared",shaderCache:{hint:`${h.cacheKey}`,inputDependencies:x},getRunData:()=>({outputs:[{dims:p,dataType:c[0].dataType}],dispatchGroup:{x:C*E},programUniforms:v}),getShaderSource:L=>{let W=rr("a",c[0].dataType,c[0].dims),te=rr("b",c[1].dataType,c[1].dims),$=null,j=[W,te];c.length===3&&($=rr("c",c[2].dataType,c[2].dims.length),j.push($));let le=Lr("output",c[0].dataType,p.length);j.push(le);let me="",_e="";h.transA&&h.transB?(_e=`
      var col = tile_row_start + local_id.x;
      var row = k_start + local_id.y;
      if (col < uniforms.M && row < uniforms.K) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.M + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${W.type.value}(0);
      }

      col = k_start + local_id.x;
      row = tile_col_start + local_id.y;
      if (col < uniforms.K && row < uniforms.N) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.K + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${te.type.value}(0);
      }
      `,me="value += tile_a[k][local_id.y] * tile_b[local_id.x][k];"):h.transA&&!h.transB?(_e=`
      var col = tile_row_start + local_id.x;
      var row = k_start + local_id.y;
      if (col < uniforms.M && row < uniforms.K) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.M + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${W.type.value}(0);
      }

      col = tile_col_start + local_id.x;
      row = k_start + local_id.y;
      if (col < uniforms.N && row < uniforms.K) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.N + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${te.type.value}(0);
      }
      `,me="value += tile_a[k][local_id.y] * tile_b[k][local_id.x];"):!h.transA&&h.transB?(_e=`
      var col = k_start + local_id.x;
      var row = tile_row_start + local_id.y;
      if (col < uniforms.K && row < uniforms.M) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.K + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${W.type.value}(0);
      }

      col = k_start + local_id.x;
      row = tile_col_start + local_id.y;
      if (col < uniforms.K && row < uniforms.N) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.K + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${te.type.value}(0);
      }
      `,me="value += tile_a[local_id.y][k] * tile_b[local_id.x][k];"):!h.transA&&!h.transB&&(_e=`
      var col = k_start + local_id.x;
      var row = tile_row_start + local_id.y;
      if (col < uniforms.K && row < uniforms.M) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.K + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${W.type.value}(0);
      }

      col = tile_col_start + local_id.x;
      row = k_start + local_id.y;
      if (col < uniforms.N && row < uniforms.K) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.N + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${te.type.value}(0);
      }
      `,me="value += tile_a[local_id.y][k] * tile_b[k][local_id.x];");let Ee=h.alpha===1?"":"value *= uniforms.alpha;";return`
  ${L.registerUniforms([{name:"num_tile_n",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"},{name:"alpha",type:"f32"},{name:"beta",type:"f32"}]).declareVariables(...j)}
  var<workgroup> tile_a: array<array<${W.type.storage}, 16>, 16>;
  var<workgroup> tile_b: array<array<${te.type.storage}, 16>, 16>;
  ${L.mainStart([b,b,1])}
    let tile_col_start = (workgroup_index % uniforms.num_tile_n) * 16;
    let tile_row_start = (workgroup_index / uniforms.num_tile_n) * 16;
    let num_tiles = (uniforms.K - 1) / 16 + 1;
    var k_start = 0u;
    var value = ${le.type.value}(0);
    for (var t: u32 = 0u; t < num_tiles; t++) {
      ${_e}
      k_start = k_start + 16;
      workgroupBarrier();

      for (var k: u32 = 0u; k < 16; k++) {
        ${me}
      }
      workgroupBarrier();
    }

    ${Ee}
    let m = tile_row_start + local_id.y;
    let n = tile_col_start + local_id.x;
    ${$!=null?`let cOffset = ${$.broadcastedIndicesToOffset("vec2(m, n)",le)}; value += ${le.type.value}(uniforms.beta) * ${$.getByOffset("cOffset")};`:""}
    if (m < uniforms.M && n < uniforms.N) {
      output[m * uniforms.N + n] = value;
    }
  }`}}},oc=c=>({transA:c.transA,transB:c.transB,alpha:c.alpha,beta:c.beta,cacheKey:`${c.transA};${c.transB};${c.alpha===1}`}),Ac=(c,h)=>{nc(c.inputs),c.compute(ic(c.inputs,h))}}),Nt=Me(()=>{Is(),Ps(),Ka(),zs(),[Ki,ao,dA,gA]=[0,1,2,3],hu=c=>{if(c[0].dims.length!==4)throw new Error("only 4-D tensor is supported.");if(c[0].dims.length!==c[1].dims.length)throw new Error("input dimensions must be equal to grid dimensions");if(c[0].dims.length-2!==c[1].dims[c[1].dims.length-1])throw new Error("last dimension of grid must be equal to "+(c[0].dims.length-2));if(c[0].dims[0]!==c[1].dims[0])throw new Error("grid batch size must match input batch size")},zl=c=>`
  fn gs_bicubic_interpolate(p: mat4x4<${c}>, x: f32, y: f32) -> ${c} {
    var v: vec4<f32>;
    var coeffs = gs_get_cubic_coeffs(x);
    for (var i = 0; i < 4; i++) {
      v[i] = coeffs[0] * p[i][0] + coeffs[1] * p[i][1] + coeffs[2] * p[i][2] + coeffs[3] * p[i][3];
    }
    coeffs = gs_get_cubic_coeffs(y);
    let pixel = ${c}(coeffs[0] * v[0] + coeffs[1] * v[1] + coeffs[2] * v[2] + coeffs[3] * v[3]);
    return pixel;
  }
`,jA=c=>`
  fn gs_denormalize(n: f32, length: i32) -> f32 {
    ${c.alignCorners===0?`
    // alignCorners: false => [-1, 1] to [-0.5, length - 0.5]
    return ((n + 1.0) * f32(length) - 1.0) / 2.0;
    `:`
    // alignCorners: true => [-1, 1] to [0, length - 1]
    return (n + 1.0) / 2.0 * (f32(length - 1));
    `}
  }
`,Ol=c=>`
  ${c.paddingMode==="reflection"?`
      fn gs_reflect(x: i32, x_min: f32, x_max: f32) -> u32 {
        var dx = 0.0;
        var fx = f32(x);
        let range = x_max - x_min;
        if (fx < x_min) {
          dx = x_min - fx;
          let n = u32(dx / range);
          let r = dx - f32(n) * range;
          if (n % 2 == 0) {
            fx = x_min + r;
          } else {
            fx = x_max - r;
          }
        } else if (fx > x_max) {
          dx = fx - x_max;
          let n = u32(dx / range);
          let r = dx - f32(n) * range;
          if (n % 2 == 0) {
            fx = x_max - r;
          } else {
            fx = x_min + r;
          }
        }
        return u32(fx);
      }`:""}
`,lc=(c,h,_)=>`
  fn pixel_at_grid(r: i32, c: i32, H: i32, W: i32, batch: u32, channel: u32, border: vec4<f32>) -> ${h} {
     var pixel = ${h}(0);
     var indices = vec4<u32>(0);
     indices[${Ki}] = batch;
     indices[${ao}] = channel;`+(()=>{switch(_.paddingMode){case"zeros":return`
          if (r >= 0 && r < H && c >=0 && c < W) {
            indices[${dA}] = u32(r);
            indices[${gA}] = u32(c);
          }
        `;case"border":return`
          indices[${dA}] = u32(clamp(r, 0, H - 1));
          indices[${gA}] = u32(clamp(c, 0, W - 1));
        `;case"reflection":return`
          indices[${dA}] = gs_reflect(r, border[1], border[3]);
          indices[${gA}] = gs_reflect(c, border[0], border[2]);
        `;default:throw new Error(`padding mode ${_.paddingMode} is not supported`)}})()+`
    return ${c.getByIndices("indices")};
  }
`,cc=(c,h,_)=>(()=>{switch(_.mode){case"nearest":return`
          let result = pixel_at_grid(i32(round(y)), i32(round(x)), H_in, W_in, indices[${Ki}], indices[${ao}], border);
        `;case"bilinear":return`
          let x1 = i32(floor(x));
          let y1 = i32(floor(y));
          let x2 = x1 + 1;
          let y2 = y1 + 1;

          let p11 = pixel_at_grid(y1, x1, H_in, W_in, indices[${Ki}], indices[${ao}], border);
          let p12 = pixel_at_grid(y1, x2, H_in, W_in, indices[${Ki}], indices[${ao}], border);
          let p21 = pixel_at_grid(y2, x1, H_in, W_in, indices[${Ki}], indices[${ao}], border);
          let p22 = pixel_at_grid(y2, x2, H_in, W_in, indices[${Ki}], indices[${ao}], border);

          let dx2 = ${h}(f32(x2) - x);
          let dx1 = ${h}(x - f32(x1));
          let dy2 = ${h}(f32(y2) - y);
          let dy1 = ${h}(y - f32(y1));
          let result = dy2 * (dx2 * p11 + dx1 * p12) + dy1 * (dx2 * p21 + dx1 * p22);
        `;case"bicubic":return`
          let x0 = i32(floor(x)) - 1;
          let y0 = i32(floor(y)) - 1;
          var p: mat4x4<${h}>;
          for (var h = 0; h < 4; h++) {
            for (var w = 0; w < 4; w++) {
              p[h][w] = pixel_at_grid(h + y0, w + x0, H_in, W_in, indices[${Ki}], indices[${ao}], border);
            }
          }

          let dx = x - f32(x0 + 1);
          let dy = y - f32(y0 + 1);
          let result = gs_bicubic_interpolate(p, dx, dy);
        `;default:throw new Error(`mode ${_.mode} is not supported`)}})()+`${c.setByOffset("global_idx","result")}`,u0=(c,h)=>{let _=rr("x",c[0].dataType,c[0].dims.length),S=[c[1].dims[0],c[1].dims[1],c[1].dims[2]],V=rr("grid",c[1].dataType,S.length,2),n=[c[0].dims[0],c[0].dims[1],c[1].dims[1],c[1].dims[2]];h.format==="NHWC"&&(n=[c[0].dims[0],c[1].dims[1],c[1].dims[2],c[0].dims[3]],[Ki,ao,dA,gA]=[0,3,1,2]);let l=Lr("output",c[0].dataType,n.length),p=_.type.value,b=[{type:12,data:Le.size(n)},..._r(c[0].dims,S,n)];return{name:"GridSample",shaderCache:{hint:`${h.cacheKey}`,inputDependencies:["type","type"]},getRunData:C=>{let E=Le.size(n);return{outputs:[{dims:n,dataType:C[0].dataType}],dispatchGroup:{x:Math.ceil(E/64)},programUniforms:b}},getShaderSource:C=>`
  ${C.registerUniform("output_size","u32").declareVariables(_,V,l)}
  
  fn gs_get_cubic_coeffs(x: f32) -> vec4<f32> {
    let cubic_alpha = -0.75f;
    let x_abs = abs(x);
    var coeffs: vec4<f32>;
    coeffs[0] = (((cubic_alpha * (x_abs + 1) - 5 * cubic_alpha) * (x_abs + 1) + 8 * cubic_alpha) * (x_abs + 1) - 4 * cubic_alpha);
    coeffs[1] = (((cubic_alpha + 2) * x_abs - (cubic_alpha + 3)) * x_abs * x_abs + 1);
    coeffs[2] = (((cubic_alpha + 2) * (1 - x_abs) - (cubic_alpha + 3)) * (1 - x_abs) * (1 - x_abs) + 1);
    coeffs[3] = (((cubic_alpha * (2 - x_abs) - 5 * cubic_alpha) * (2 - x_abs) + 8 * cubic_alpha) * (2 - x_abs) - 4 * cubic_alpha);
    return coeffs;
  }

  ${zl(p)}
  ${jA(h)}
  ${Ol(h)}
  ${lc(_,p,h)}

  ${C.mainStart()}
    ${C.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let H_in = i32(uniforms.x_shape[${dA}]);
      let W_in = i32(uniforms.x_shape[${gA}]);

      ${h.alignCorners===0?`
      let x_min = -0.5;
      let x_max = f32(W_in) - 0.5;
      let y_min = -0.5;
      let y_max = f32(H_in) - 0.5;
      `:`
      let x_min = 0.0;
      let x_max = f32(W_in) - 1.0;
      let y_min = 0.0;
      let y_max = f32(H_in) - 1.0;
      `};
      let border = vec4<f32>(x_min, y_min, x_max, y_max);

      let indices = ${l.offsetToIndices("global_idx")};
      var grid_indices = vec3<u32>(indices[${Ki}], indices[${dA}], indices[${gA}]);
      let nxy = ${V.getByIndices("grid_indices")};
      var x = gs_denormalize(f32(nxy[0]), W_in);
      var y = gs_denormalize(f32(nxy[1]), H_in);

      ${cc(l,p,h)}
  }`}},uc=(c,h)=>{hu(c.inputs),c.compute(u0(c.inputs,h))},d0=c=>Ae({alignCorners:c.align_corners,mode:c.mode,paddingMode:c.padding_mode,format:c.format})}),Rt=Me(()=>{Is(),Ps(),Ka(),j0(),W0(),zs(),Vo(),an=(c,h)=>c.length>h&&c[h].dims.length>0?c[h]:void 0,dc=(c,h)=>{let _=c[0],S=an(c,1),V=an(c,2),n=an(c,3),l=an(c,4),p=an(c,5),b=an(c,6),C=an(c,7);if(_.dims.length!==3&&_.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let E,v=_.dims[0],x=_.dims[1],L=_.dims.length===3?_.dims[2]:h.numHeads*_.dims[4],W=x,te=0,$=0,j=Math.floor(L/h.numHeads);if(b&&C&&Le.size(b.dims)&&Le.size(C.dims)){if(b.dims.length!==4)throw new Error('Input "past_key" is expected to have 4 dimensions');if(b.dims[0]!==v||b.dims[1]!==h.numHeads||b.dims[3]!==j)throw new Error('Input "past_key" shape (batch_size, num_heads, past_sequence_length, head_size)');if(C.dims[0]!==v||C.dims[1]!==h.numHeads||C.dims[3]!==j)throw new Error('Input "past_value" shape (batch_size, num_heads, past_sequence_length, head_size)');if(b.dims[2]!==C.dims[2])throw new Error('Input "past_key" and "past_value" shall have same dim 2 (past_sequence_length)');if(C.dims.length!==4)throw new Error('Input "past_value" is expected to have 4 dimensions');te=b.dims[2],$=b.dims[2]}else if(b&&Le.size(b.dims)||C&&Le.size(C.dims))throw new Error('Input "past_key" and "past_value" shall be both present or both absent');if(S&&Le.size(S.dims)>0){if(_.dims.length!==3)throw new Error('Input "query" is expected to have 3 dimensions when key is given');if(S.dims.length<3||S.dims.length>5)throw new Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(_.dims[0]!==S.dims[0])throw new Error('Input "query" and "key" shall have same dim 0 (batch size)');if(S.dims.length===3){if(S.dims[2]!==_.dims[2])throw new Error('Input "query" and "key" shall have same dim 2 (hidden_size)');E=2,W=S.dims[1]}else if(S.dims.length===5){if(S.dims[2]!==h.numHeads||S.dims[3]!==2||S.dims[4]!==j)throw new Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(V)throw new Error('Expect "value" be none when "key" has packed kv format.');E=5,W=S.dims[1]}else{if(S.dims[1]!==h.numHeads||S.dims[3]!==j)throw new Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');E=0,W=S.dims[2]}}else{if(_.dims.length!==5)throw new Error('Input "query" is expected to have 5 dimensions when key is empty');if(_.dims[2]!==h.numHeads||_.dims[3]!==3)throw new Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');E=3}if(n&&Le.size(n.dims)>0){if(n.dims.length!==1)throw new Error('Input "bias" is expected to have 1 dimension');if(S&&S.dims.length===5&&S.dims[3]===2)throw new Error("bias is not allowed for packed kv.")}let le=te+W,me=0;if(l&&Le.size(l.dims)>0){me=8;let Fe=l.dims;throw Fe.length===1?Fe[0]===v?me=1:Fe[0]===3*v+2&&(me=3):Fe.length===2&&Fe[0]===v&&Fe[1]===le&&(me=5),me===8?new Error('Input "key_padding_mask" shape shall be (batch_size) or (batch_size, total_sequence_length)'):new Error("Mask not supported")}let _e=!1,Ee=L;if(V&&Le.size(V.dims)>0){if(V.dims.length!==3&&V.dims.length!==4)throw new Error('Input "value" is expected to have 3 or 4 dimensions');if(_.dims[0]!==V.dims[0])throw new Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(V.dims.length===3){if(W!==V.dims[1])throw new Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');Ee=V.dims[2]}else{if(W!==V.dims[2])throw new Error('Input "key" and "value" shall have the same dim 2 (kv_sequence_length)');Ee=V.dims[1]*V.dims[3],_e=!0}}if(l&&Le.size(l.dims)>0)throw new Error("Key padding mask is not supported");if(p&&Le.size(p.dims)>0){if(p.dims.length!==4)throw new Error('Input "attention_bias" is expected to have 4 dimensions');if(p.dims[0]!==v||p.dims[1]!==h.numHeads||p.dims[2]!==x||p.dims[3]!==le)throw new Error('Expect "attention_bias" shape (batch_size, num_heads, sequence_length, total_sequence_length)')}return{batchSize:v,sequenceLength:x,pastSequenceLength:te,kvSequenceLength:W,totalSequenceLength:le,maxSequenceLength:$,inputHiddenSize:0,hiddenSize:L,vHiddenSize:Ee,headSize:j,vHeadSize:Math.floor(Ee/h.numHeads),numHeads:h.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:h.maskFilterValue,maskType:me,scale:h.scale,broadcastResPosBias:!1,passPastInKv:_e,qkvFormat:E}},gc=c=>Ae({...c}),g0=Ae({perm:[0,2,1,3]}),fc=(c,h,_,S,V,n,l)=>{let p=[S,V,n],b=Le.size(p),C=[{type:12,data:b},{type:12,data:l},{type:12,data:n}];return c.compute({name:"MultiHeadAttentionAddBias",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:p,dataType:h.dataType,gpuDataType:0}],dispatchGroup:{x:Math.ceil(b/64)},programUniforms:C}),getShaderSource:E=>{let v=Lr("qkv_with_bias",h.dataType,p),x=rr("qkv",h.dataType,p),L=rr("bias",_.dataType,p);return`
  ${E.registerUniforms([{name:"output_size",type:"u32"},{name:"bias_offset",type:"u32"},{name:"hidden_size",type:"u32"}]).declareVariables(x,L,v)}
  ${E.mainStart()}
    ${E.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let bias_offset_idx = (global_idx % uniforms.hidden_size) + uniforms.bias_offset;

    qkv_with_bias[global_idx] = qkv[global_idx] + bias[bias_offset_idx];
  }`}},{inputs:[h,_],outputs:[-1]})[0]},fA=(c,h,_,S,V,n,l,p)=>{let b=n;if(l&&Le.size(l.dims)>0){if(S===1)throw new Error("AddBiasReshape is not implemented. Please export your model with packed QKV or KV");return b=fc(c,n,l,h,S,_*V,p),b=b.reshape([h,S,_,V]),_===1||S===1?b:c.compute(Us(b,g0.perm),{inputs:[b],outputs:[-1]})[0]}return n.dims.length===3&&(b=n.reshape([h,S,_,V])),_===1||S===1?b:c.compute(Us(b,g0.perm),{inputs:[b],outputs:[-1]})[0]},jo=(c,h)=>{let _=dc(c.inputs,h),S=c.inputs[0],V=an(c.inputs,1),n=an(c.inputs,2),l=an(c.inputs,3),p=an(c.inputs,4),b=an(c.inputs,5),C=an(c.inputs,6),E=an(c.inputs,7);if(S.dims.length===5)throw new Error("Packed QKV is not implemented");if((V==null?void 0:V.dims.length)===5)throw new Error("Packed KV is not implemented");let v=V&&n&&V.dims.length===4&&n.dims.length===4,x=fA(c,_.batchSize,_.numHeads,_.sequenceLength,_.headSize,S,l,0);if(v)return Ti(c,x,V,n,p,void 0,C,E,b,_);if(!V||!n)throw new Error("key and value must be provided");let L=fA(c,_.batchSize,_.numHeads,_.kvSequenceLength,_.headSize,V,l,_.hiddenSize),W=fA(c,_.batchSize,_.numHeads,_.kvSequenceLength,_.vHeadSize,n,l,2*_.hiddenSize);Ti(c,x,L,W,p,void 0,C,E,b,_)}}),Yt=Me(()=>{Is(),Ps(),Ka(),zs(),pc=c=>{if(!c||c.length<1)throw new Error("too few inputs")},hc=(c,h)=>{let _=[],S=h.numOutputs;return c[1].dims[0]>0&&(c[1].getBigInt64Array().forEach(V=>_.push(Number(V))),S=_.length),Ae({numOutputs:S,axis:h.axis,splitSizes:_})},mu=c=>`
fn calculateOutputIndex(index: u32) -> u32 {
    for (var i: u32 = 0u; i < ${c}u; i += 1u ) {
    if (index < ${Or("uniforms.size_in_split_axis","i",c)}) {
        return i;
    }
    }
    return ${c}u;
}`,Ql=c=>{let h=c.length,_=[];for(let S=0;S<h;++S){let V=c[S].setByIndices("indices","input[global_idx]");h===1?_.push(V):S===0?_.push(`if (output_number == ${S}u) { ${V} }`):S===h-1?_.push(`else { ${V} }`):_.push(`else if (output_number == ${S}) { ${V} }`)}return`
      fn writeBufferData(output_number: u32, indices: ${c[0].type.indices}, global_idx: u32) {
        ${_.join(`
`)}
      }`},Nl=(c,h)=>{let _=c[0].dims,S=Le.size(_),V=c[0].dataType,n=Le.normalizeAxis(h.axis,_.length),l=new Array(h.numOutputs),p=rr("input",V,_.length),b=new Array(h.numOutputs),C=[],E=[],v=0,x=[{type:12,data:S}];for(let L=0;L<h.numOutputs;L++){v+=h.splitSizes[L],b[L]=v;let W=_.slice();W[n]=h.splitSizes[L],E.push(W),l[L]=Lr(`output${L}`,V,W.length),C.push({dims:E[L],dataType:c[0].dataType})}return x.push({type:12,data:b},..._r(_,...E)),{name:"Split",shaderCache:{hint:h.cacheKey,inputDependencies:["rank"]},getShaderSource:L=>`
  ${L.registerUniform("input_size","u32").registerUniform("size_in_split_axis","u32",b.length).declareVariables(p,...l)}
  ${mu(b.length)}
  ${Ql(l)}

  ${L.mainStart()}
    ${L.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.input_size")}

    var indices = ${p.offsetToIndices("global_idx")};
    var index = ${p.indicesGet("indices",n)};
    let output_number = calculateOutputIndex(index);
    if (output_number != 0) {
      index -= ${Or("uniforms.size_in_split_axis","output_number - 1u",b.length)};
      ${p.indicesSet("indices",n,"index")};
    }
    writeBufferData(output_number, indices, global_idx);
  }`,getRunData:()=>({outputs:C,dispatchGroup:{x:Math.ceil(S/64)},programUniforms:x})}},bu=(c,h)=>{pc(c.inputs);let _=c.inputs.length===1?h:hc(c.inputs,h);c.compute(Nl(c.inputs,_),{inputs:[0]})},mc=c=>{let h=c.axis,_=c.splitSizes,S=c.numOutputs<0?_.length:c.numOutputs;if(S!==_.length)throw new Error("numOutputs and splitSizes lengh must be equal");return Ae({axis:h,numOutputs:S,splitSizes:_})}}),cr=Me(()=>{Ka(),W0(),Rt(),Yt(),Vo(),pl=(c,h)=>{if(h.doRotary)throw new Error("GroupQuerryAttention do_rotary attribute is not supported");if(h.doRotary&&c.length<=7)throw new Error("cos_cache and sin_cache inputs are required if do_rotary is specified");let _=c[0],S=c[1],V=c[2],n=c[3],l=c[4];if(h.localWindowSize!==-1)throw new Error("Local attention is not supported");if(h.softcap!==0)throw new Error("Softcap is not supported");if(h.rotaryInterleaved!==0)throw new Error("Rotary interleaved is not supported");if(h.smoothSoftmax)throw new Error("Smooth softmax is not supported");if(_.dims.length!==3&&_.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let p=_.dims[0],b=_.dims[1],C=_.dims.length===3?_.dims[2]:h.numHeads*_.dims[4],E=b,v=0,x=!S||S.dims.length===0,L=Math.floor(x?C/(h.numHeads+2*h.kvNumHeads):C/h.numHeads);x&&(C=L*h.numHeads);let W=n&&n.dims.length!==0,te=l&&l.dims.length!==0;if(W&&n.dims.length===4&&n.dims[0]===p&&n.dims[1]!==h.kvNumHeads&&n.dims[2]===h.kvNumHeads&&n.dims[3]===L)throw new Error("BSNH pastKey/pastValue is not supported");if(W&&te){if(n.dims.length!==4)throw new Error('Input "past_key" is expected to have 4 dimensions');if(l.dims.length!==4)throw new Error('Input "past_value" is expected to have 4 dimensions');v=n.dims[2]}else if(W||te)throw new Error('Input "past_key" and "past_value" shall be both present or both absent');let $=1;if(S&&S.dims.length>0){if(_.dims.length!==3)throw new Error('Input "query" is expected to have 3 dimensions when key is given');if(S.dims.length<3||S.dims.length>5)throw new Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(_.dims[0]!==S.dims[0])throw new Error('Input "query" and "key" shall have same dim 0 (batch size)');if(S.dims.length===3){if(_.dims[2]%S.dims[2]!=0)throw new Error('Dimension 2 of "query" should be a multiple of "key"');E=S.dims[1]}else if(S.dims.length===5){if(S.dims[2]!==h.numHeads||S.dims[3]!==2||S.dims[4]!==L)throw new Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(V)throw new Error('Expect "value" be none when "key" has packed kv format.');E=S.dims[1]}else{if(S.dims[1]!==h.numHeads||S.dims[3]!==L)throw new Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');E=S.dims[2]}}else{if(_.dims.length!==3&&_.dims.length!==5)throw new Error('Input "query" is expected to have 3 or 5 dimensions when key is empty');if(_.dims.length===5&&(_.dims[2]!==h.numHeads||_.dims[3]!==3))throw new Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');$=3}let j=!1,le=h.kvNumHeads?L*h.kvNumHeads:C;if(V&&V.dims.length>0){if(V.dims.length!==3&&V.dims.length!==4)throw new Error('Input "value" is expected to have 3 or 4 dimensions');if(_.dims[0]!==V.dims[0])throw new Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(V.dims.length===3){if(E!==V.dims[1])throw new Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');le=V.dims[2]}else{if(E!==V.dims[2])throw new Error('Input "past_key" and "past_value" shall have the same dim 2 (kv_sequence_length)');le=V.dims[1]*V.dims[3],j=!0}}let me=c.length>4?c[5]:void 0;if(me&&me.dims.length!==1&&me.dims[0]!==p)throw new Error('Input "seqlens" is expected to have 1 dimension and the same dim 0 as batch_size');return{batchSize:p,sequenceLength:b,pastSequenceLength:v,kvSequenceLength:E,totalSequenceLength:-1,maxSequenceLength:-1,inputHiddenSize:0,hiddenSize:C,vHiddenSize:le,headSize:L,vHeadSize:Math.floor(le/h.kvNumHeads),numHeads:h.numHeads,kvNumHeads:h.kvNumHeads,nReps:h.numHeads/h.kvNumHeads,pastPresentShareBuffer:!1,maskType:0,scale:h.scale,broadcastResPosBias:!1,passPastInKv:j,qkvFormat:$}},bc=Ae({perm:[0,2,1,3]}),hl=(c,h,_)=>{let S=h,V=_.kvNumHeads;return h.dims.length===3&&_.kvSequenceLength!==0&&(S=h.reshape([_.batchSize,_.kvSequenceLength,V,_.headSize]),S=c.compute(Us(S,bc.perm),{inputs:[S],outputs:[-1]})[0]),S},Cu=(c,h)=>{var $;let _=pl(c.inputs,h);if(c.inputs[0].dims.length===5)throw new Error("Packed QKV is not implemented");if((($=c.inputs[1])==null?void 0:$.dims.length)===5)throw new Error("Packed KV is not implemented");let S=c.inputs[0],V=c.inputs[1]&&c.inputs[1].dims.length>0?c.inputs[1]:void 0,n=c.inputs[2]&&c.inputs[2].dims.length>0?c.inputs[2]:void 0,l=c.inputs[3]&&c.inputs[3].dims.length!==0?c.inputs[3]:void 0,p=c.inputs[4]&&c.inputs[4].dims.length!==0?c.inputs[4]:void 0,b=c.inputs.length>4?c.inputs[5]:void 0,C=c.inputs.length>5?c.inputs[6]:void 0,E=_.kvNumHeads?_.kvNumHeads:_.numHeads,v=Ae({axis:2,numOutputs:3,splitSizes:[_.numHeads*_.headSize,E*_.headSize,E*_.headSize]}),[x,L,W]=V||n?[S,V,n]:c.compute(Nl([S],v),{inputs:[S],outputs:[-1,-1,-1]}),te=fA(c,_.batchSize,_.numHeads,_.sequenceLength,_.headSize,x,void 0,0);Ti(c,te,hl(c,L,_),hl(c,W,_),void 0,void 0,l,p,void 0,_,b,C)}}),mr=Me(()=>{Is(),Ps(),Vo(),zs(),f0=(c,h,_,S,V,n,l,p)=>{let b=gs(n),C=b===1?"f32":`vec${b}f`,E=b===1?"vec2f":`mat2x${b}f`,v=V*l,x=64;v===1&&(x=256);let L=[V,l,n/b],W=[V,l,2],te=[];return te.push(..._r(L,W)),c.compute({name:"InstanceNormComputeChannelScaleShift",shaderCache:{hint:`${b};${p};${x}`,inputDependencies:["rank","type","type"]},getRunData:()=>({outputs:[{dims:W,dataType:1}],dispatchGroup:{x:v},programUniforms:te}),getShaderSource:$=>{let j=rr("x",h.dataType,3,b),le=[j,rr("scale",_.dataType,_.dims),rr("bias",S.dataType,S.dims),Lr("output",1,3,2)];return`
  var<workgroup> workgroup_shared : array<${E}, ${x}>;
  const workgroup_size = ${x}u;
  ${$.declareVariables(...le)}
  ${$.mainStart(x)}
    let batch = workgroup_index / uniforms.x_shape[1];
    let channel = workgroup_index % uniforms.x_shape[1];
    let hight = uniforms.x_shape[2];
    // initialize workgroup memory
    var sum = ${C}(0);
    var squared_sum = ${C}(0);
    for (var h = local_idx; h < hight; h += workgroup_size) {
      let value = ${C}(${j.get("batch","channel","h")});
      sum += value;
      squared_sum += value * value;
    }
    workgroup_shared[local_idx] = ${E}(sum, squared_sum);
    workgroupBarrier();

    for (var currSize = workgroup_size >> 1;  currSize > 0; currSize = currSize >> 1) {
      if (local_idx < currSize) {
        workgroup_shared[local_idx] = workgroup_shared[local_idx] + workgroup_shared[local_idx + currSize];
      }
      workgroupBarrier();
    }
    if (local_idx == 0) {
      let sum_final = ${Bs("workgroup_shared[0][0]",b)} / f32(hight * ${b});
      let squared_sum_final = ${Bs("workgroup_shared[0][1]",b)} / f32(hight * ${b});

      let inv_std_dev = inverseSqrt(squared_sum_final - sum_final * sum_final + f32(${p}));
      let channel_scale = inv_std_dev * f32(scale[channel]);
      let channel_shift = f32(bias[channel]) - sum_final * channel_scale;
      output[workgroup_index] = vec2f(channel_scale, channel_shift);
    }
  }`}},{inputs:[h,_,S],outputs:[-1]})[0]},Ll=(c,h,_)=>{let S=h[0].dims,V=S,n=S[0],l=S[1],p=Le.sizeFromDimension(S,2),b=gs(p),C=Le.size(V)/b,E=f0(c,h[0],h[1],h[2],n,p,l,_.epsilon),v=[n,l,p/b],x=[n,l];c.compute({name:"InstanceNormalization",shaderCache:{hint:`${b}`,inputDependencies:["type","none"]},getRunData:()=>({outputs:[{dims:V,dataType:h[0].dataType}],dispatchGroup:{x:Math.ceil(C/64)},programUniforms:[{type:12,data:C},..._r(v,x,v)]}),getShaderSource:L=>{let W=rr("x",h[0].dataType,v.length,b),te=rr("scale_shift",1,x.length,2),$=Lr("output",h[0].dataType,v.length,b),j=[W,te,$];return`
  ${L.registerUniform("output_size","u32").declareVariables(...j)}
  ${L.mainStart()}
  ${L.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let outputIndices = ${$.offsetToIndices("global_idx")};
      let batch = outputIndices[0];
      let channel = outputIndices[1];
      let scale_shift = ${te.getByIndices("vec2<u32>(batch, channel)")};
      let value = ${W.getByOffset("global_idx")} * ${$.type.value}(scale_shift.x) + ${$.type.value}(scale_shift.y);
      ${$.setByOffset("global_idx","value")};
  }`}},{inputs:[h[0],E]})},ml=(c,h,_)=>{let S=h[0].dims,V=S,n=S[0],l=S[S.length-1],p=Le.sizeFromDimension(S,1)/l,b=gs(l),C=Le.size(V)/b,E=[{type:12,data:p},{type:12,data:Math.floor(l/b)}],v=!1,x=[0,S.length-1];for(let te=0;te<S.length-2;te++)v=v||S[te+1]!==1,x.push(te+1);v=v&&S[S.length-1]!==1;let L=v?c.compute(Us(c.inputs[0],x),{inputs:[c.inputs[0]],outputs:[-1]})[0]:c.inputs[0].reshape(Array.from({length:S.length},(te,$)=>S[x[$]])),W=f0(c,L,h[1],h[2],n,p,l,_.epsilon);c.compute({name:"InstanceNormalizationNHWC",shaderCache:{hint:`${b}`,inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:V,dataType:h[0].dataType}],dispatchGroup:{x:Math.ceil(C/64)},programUniforms:E}),getShaderSource:te=>{let $=Gr(h[0].dataType),j=b===1?"vec2f":`mat${b}x2f`,le=Ee=>{let Fe=Ee===0?"x":"y",Ye=b===1?"f32":`vec${b}f`;switch(b){case 1:return`${$}(${Ye}(scale.${Fe}))`;case 2:return`vec2<${$}>(${Ye}(scale[0].${Fe}, scale[1].${Fe}))`;case 4:return`vec4<${$}>(${Ye}(scale[0].${Fe}, scale[1].${Fe}, scale[2].${Fe}, scale[3].${Fe}))`;default:throw new Error(`Not supported compoents ${b}`)}},me=rr("input",h[0].dataType,h[0].dims,b),_e=Lr("output",h[0].dataType,V,b);return`
  @group(0) @binding(0) var<storage, read> input : array<${me.type.storage}>;
  @group(0) @binding(1) var<storage, read> scale_input : array<${j}>;
  @group(0) @binding(2) var<storage, read_write> output : array<${_e.type.storage}>;
  struct Uniforms {H: u32, C : u32};
  @group(0) @binding(3) var<uniform> uniforms: Uniforms;

  ${te.mainStart()}
    let current_image_number = global_idx / (uniforms.C * uniforms.H);
    let current_channel_number = global_idx % uniforms.C;

    let scale_offset = current_image_number * uniforms.C + current_channel_number;
    let scale = scale_input[scale_offset];
    output[global_idx] = fma(input[global_idx], ${le(0)}, ${le(1)});
  }`}},{inputs:[h[0],W]})},wu=(c,h)=>{h.format==="NHWC"?ml(c,c.inputs,h):Ll(c,c.inputs,h)}}),br=Me(()=>{Is(),Ps(),zs(),Cc=c=>{if(!c||c.length<2)throw new Error("layerNorm requires at least 2 inputs.")},Iu=(c,h,_)=>{let S=h.simplified,V=c[0].dims,n=c[1],l=!S&&c[2],p=V,b=Le.normalizeAxis(h.axis,V.length),C=Le.sizeToDimension(V,b),E=Le.sizeFromDimension(V,b),v=Le.size(n.dims),x=l?Le.size(l.dims):0;if(v!==E||l&&x!==E)throw new Error(`Size of X.shape()[axis:] == ${E}.
       Size of scale and bias (if provided) must match this.
       Got scale size of ${v} and bias size of ${x}`);let L=[];for(let _e=0;_e<V.length;++_e)_e<b?L.push(V[_e]):L.push(1);let W=gs(E),te=["type","type"],$=[{type:12,data:C},{type:1,data:E},{type:12,data:Math.floor(E/W)},{type:1,data:h.epsilon}];l&&te.push("type");let j=_>1,le=_>2,me=[{dims:p,dataType:c[0].dataType}];return j&&me.push({dims:L,dataType:1}),le&&me.push({dims:L,dataType:1}),{name:"LayerNormalization",shaderCache:{hint:`${W};${_};${S}`,inputDependencies:te},getRunData:()=>({outputs:me,dispatchGroup:{x:Math.ceil(C/64)},programUniforms:$}),getShaderSource:_e=>{let Ee=Gr(c[0].dataType),Fe=[rr("x",c[0].dataType,c[0].dims,W),rr("scale",n.dataType,n.dims,W)];return l&&Fe.push(rr("bias",l.dataType,l.dims,W)),Fe.push(Lr("output",c[0].dataType,p,W)),j&&Fe.push(Lr("mean_data_output",1,L)),le&&Fe.push(Lr("inv_std_output",1,L)),`
  ${_e.registerUniforms([{name:"norm_count",type:"u32"},{name:"norm_size",type:"f32"},{name:"norm_size_vectorized",type:"u32"},{name:"epsilon",type:"f32"}]).declareVariables(...Fe)}
  ${_e.mainStart()}
    ${_e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.norm_count")}
    let offset = global_idx * uniforms.norm_size_vectorized;
    var mean_vector = ${Xr("f32",W)};
    var mean_square_vector = ${Xr("f32",W)};

    for (var h: u32 = 0u; h < uniforms.norm_size_vectorized; h++) {
      let value = ${hs(Ee,W,"x[h + offset]")};
      mean_vector += value;
      mean_square_vector += value * value;
    }
    let mean = ${Bs("mean_vector",W)} / uniforms.norm_size;
    let inv_std_dev = inverseSqrt(${Bs("mean_square_vector",W)} / uniforms.norm_size ${S?"":"- mean * mean"} + uniforms.epsilon);

    for (var j: u32 = 0; j < uniforms.norm_size_vectorized; j++) {
      let f32input = ${hs(Ee,W,"x[j + offset]")};
      let f32scale = ${hs(Ee,W,"scale[j]")};
      output[j + offset] = ${Fe[0].type.value}((f32input ${S?"":"- mean"}) * inv_std_dev * f32scale
        ${l?`+ ${hs(Ee,W,"bias[j]")}`:""}
      );
    }

    ${j?"mean_data_output[global_idx] = mean":""};
    ${le?"inv_std_output[global_idx] = inv_std_dev":""};
  }`}}},wc=(c,h)=>{Cc(c.inputs),c.compute(Iu(c.inputs,h,c.outputCount))}}),Cr=Me(()=>{Ps(),H0(),$a(),Rl=c=>{if(!c||c.length!==2)throw new Error("MatMul requires 2 inputs.");if(c[0].dims[c[0].dims.length-1]!==c[1].dims[c[1].dims.length-2])throw new Error("shared dimension does not match.")},ku=c=>{Rl(c.inputs);let h=at.calcShape(c.inputs[0].dims,c.inputs[1].dims,!0);if(!h)throw new Error("Can't use matmul on the given tensors");let _=h[h.length-1],S=c.inputs[0].dims[c.inputs[0].dims.length-1];if(_<8&&S<8)c.compute(Lo(c.inputs,{activation:""},h));else{let V=h[h.length-2],n=Le.size(c.inputs[0].dims.slice(0,-2)),l=Le.size(c.inputs[1].dims.slice(0,-2));if(n!==1&&V===1&&l===1){let p=[1,n,_],b=[c.inputs[0].reshape([1,n,S]),c.inputs[1].reshape([1,S,_])];c.compute(t(b,{activation:""},h,p),{inputs:b})}else c.compute(t(c.inputs,{activation:""},h))}}}),Pr=Me(()=>{Is(),Ps(),Ka(),zs(),VA=(c,h)=>{if(c.length<3||c.length>4)throw new Error("MatMulNBits requires 3 or 4 inputs");let _=c[0],S=_.dims.length;if(_.dims[S-1]!==h.k)throw new Error("The last dim of input shape does not match the k value");let V=Math.floor((h.k+h.blockSize-1)/h.blockSize),n=h.blockSize/8*h.bits,l=c[1];if(!Le.areEqual(l.dims,[h.n,V,n]))throw new Error("The second inputs must be 3D tensor with shape N X nBlocksPerCol X blobSize");let p=c[2].dims;if(Le.size(p)!==h.n*V)throw new Error("scales input size error.");if(c.length===4){let b=c[3].dims,C=h.bits>4?h.n*V:h.n*Math.floor((V+1)/2);if(Le.size(b)!==C)throw new Error("zeroPoints input size error.")}},Ic=(c,h)=>{let _=c[0].dims,S=_.length,V=_[S-2],n=h.k,l=h.n,p=_.slice(0,S-2),b=Le.size(p),C=c[1].dims[2]/4,E=c[0].dataType,v=gs(h.k),x=gs(C),L=gs(l),W=p.concat([V,l]),te=V>1&&l/L%2==0?2:1,$=Le.size(W)/L/te,j=64,le=[],me=[b,V,n/v],_e=Le.convertShape(c[1].dims).slice();_e.splice(-1,1,C/x),le.push(..._r(me)),le.push(..._r(_e)),le.push(..._r(c[2].dims)),c.length===4&&le.push(..._r(Le.convertShape(c[3].dims)));let Ee=[b,V,l/L];return le.push(..._r(Ee)),{name:"MatMulNBits",shaderCache:{hint:`${h.blockSize};${h.bits};${v};${x};${L};${te};64`,inputDependencies:Array(c.length).fill("rank")},getRunData:()=>({outputs:[{dims:W,dataType:E}],dispatchGroup:{x:$},programUniforms:le}),getShaderSource:Fe=>{let Ye=me.length,dt=rr("a",c[0].dataType,Ye,v),mt=rr("b",12,_e.length,x),xt=rr("scales",c[2].dataType,c[2].dims.length),jt=[dt,mt,xt],Gt=c.length===4?rr("zero_points",12,c[3].dims.length):void 0;Gt&&jt.push(Gt);let Zt=Ee.length,ar=Lr("output",c[0].dataType,Zt,L),St=Gr(c[0].dataType),kr=(()=>{switch(v){case 1:return`array<${St}, 8>`;case 2:return`mat4x2<${St}>`;case 4:return`mat2x4<${St}>`;default:throw new Error(`${v}-component is not supported.`)}})();return`
        var<workgroup> workgroup_shared: array<${ar.type.value}, ${te*j}>;
        ${Fe.declareVariables(...jt,ar)}
        ${Fe.mainStart([j,1,1])}
          let output_indices = ${ar.offsetToIndices(`(global_idx / 64) * ${te}`)};
          let col = output_indices[2];
          let row = output_indices[1];
          let batch = output_indices[0];
          let nBlocksPerCol = uniforms.b_shape[1];

          for (var block = local_id.x; block < nBlocksPerCol; block += 64) {
            //process one block
            var word_offset: u32 = block * ${h.blockSize/v};
            ${(()=>{let fr=`
            var col_index = col * ${L};
            ${Gt?`
            let zero_point_bytes_per_col = (nBlocksPerCol + 1) / 2;
            var zero_point_byte_count: u32;
            var zero_point_word_index: u32;
            var zero_point_byte_offset: u32;
            let zero_point_nibble_offset: u32 = block & 0x1u;
            var zero_point_bits_offset: u32;
            var zero_point_word: u32;`:`
            // The default zero point is 8 for unsigned 4-bit quantization.
            let zero_point = ${St}(8);`}
            `;for(let ur=0;ur<L*te;ur++)fr+=`
            let scale${ur} = ${xt.getByOffset("col_index * nBlocksPerCol + block")};
            ${Gt?`
            zero_point_byte_count = col_index * zero_point_bytes_per_col + (block >> 0x1u);
            zero_point_word_index = zero_point_byte_count >> 0x2u;
            zero_point_byte_offset = zero_point_byte_count & 0x3u;
            zero_point_bits_offset = (zero_point_byte_offset << 3) + (zero_point_nibble_offset << 2);
            zero_point_word = ${Gt.getByOffset("zero_point_word_index")} >> zero_point_bits_offset;
            let zero_point${ur} = ${St}((zero_point_word) & 0xFu);`:""}
            col_index += 1;`;return fr})()}
            for (var word: u32 = 0; word < ${C}; word += ${x}) {
              ${(()=>{let fr=`col_index = col * ${L};`;for(let ur=0;ur<L*te;ur++)fr+=`
            let b${ur}_data = ${mt.getByIndices(`${mt.type.indices}(col_index, block, word)`)};
            col_index += 1;`;return fr+=`
            var b_value: u32;
            let b_mask: u32 = 0x0F0F0F0Fu;
            var b_value_lower: vec4<u32>;
            var b_value_upper: vec4<u32>;
            var b_quantized_values: ${kr};
            var b_dequantized_values: ${kr};`,fr})()}
              for (var i: u32 = 0; i < ${x}; i++) {
                ${(()=>{let fr=`
          // reuse a data
            var input_offset = ${dt.indicesToOffset(`${dt.type.indices}(batch, row, word_offset)`)};
            var a_data: ${kr};
            for (var j: u32 = 0; j < ${8/v}; j++) {
              a_data[j] = ${dt.getByOffset("input_offset")};
              input_offset++;
            }
          `;for(let ur=0;ur<L*te;ur++)fr+=`
            b_value = ${x===1?`b${ur}_data`:`b${ur}_data[i]`};
            b_value_lower = unpack4xU8(b_value & b_mask);
            b_value_upper = unpack4xU8((b_value >> 4) & b_mask);
            b_quantized_values = ${kr}(${Array.from({length:4},(Jr,Sr)=>`${St}(b_value_lower[${Sr}]), ${St}(b_value_upper[${Sr}])`).join(", ")});
            b_dequantized_values = ${v===1?`${kr}(${Array.from({length:8},(Jr,Sr)=>`(b_quantized_values[${Sr}] - ${Gt?`zero_point${ur}`:"zero_point"}) * scale${ur}`).join(", ")});`:`(b_quantized_values - ${kr}(${Array(8).fill(Gt?`zero_point${ur}`:"zero_point").join(",")})) * scale${ur};`};
            workgroup_shared[local_id.x * ${te} + ${Math.floor(ur/L)}]${L>1?`[${ur%L}]`:""} += ${Array.from({length:8/v},(Jr,Sr)=>v===1?`a_data[${Sr}] * b_dequantized_values[${Sr}]`:`dot(a_data[${Sr}], b_dequantized_values[${Sr}])`).join(" + ")};
          `;return fr})()}
                word_offset += ${8/v};
              }
            }
          }
          workgroupBarrier();

          if (local_id.x < ${te}) {
            var output_value: ${ar.type.value} = ${ar.type.value}(0);
            var workgroup_shared_offset: u32 = local_id.x;
            for (var b: u32 = 0u; b < 64u; b++) {
              output_value += workgroup_shared[workgroup_shared_offset];
              workgroup_shared_offset += ${te};
            }
            ${ar.setByIndices(`${ar.type.indices}(batch, row, col + local_id.x)`,"output_value")};
          }
        }`}}},yu=(c,h)=>{let _=c[0].dims,S=_.length,V=_[S-2],n=h.k,l=h.n,p=_.slice(0,S-2),b=Le.size(p),C=c[1].dims[2]/4,E=c[0].dataType,v=gs(h.k),x=gs(C),L=p.concat([V,l]),W=l%8==0?8:l%4==0?4:1,te=128/W,$=te*x*8,j=$/v,le=$/h.blockSize,me=Le.size(L)/W,_e=[],Ee=[b,V,n/v],Fe=Le.convertShape(c[1].dims).slice();Fe.splice(-1,1,C/x),_e.push(..._r(Ee)),_e.push(..._r(Fe)),_e.push(..._r(c[2].dims)),c.length===4&&_e.push(..._r(Le.convertShape(c[3].dims)));let Ye=[b,V,l];return _e.push(..._r(Ye)),{name:"BlockwiseMatMulNBits32",shaderCache:{hint:`${h.blockSize};${v};${x};${te};${W}`,inputDependencies:Array(c.length).fill("rank")},getRunData:()=>({outputs:[{dims:L,dataType:E}],dispatchGroup:{x:me},programUniforms:_e}),getShaderSource:dt=>{let mt=Ee.length,xt=rr("a",c[0].dataType,mt,v),jt=rr("b",12,Fe.length,x),Gt=rr("scales",c[2].dataType,c[2].dims.length),Zt=[xt,jt,Gt],ar=c.length===4?rr("zero_points",12,c[3].dims.length):void 0;ar&&Zt.push(ar);let St=Ye.length,kr=Lr("output",c[0].dataType,St),fr=Gr(c[0].dataType);return`
        var<workgroup> sub_a: array<${xt.type.value}, ${j}>;
        var<workgroup> inter_results: array<array<${kr.type.value}, ${te}>, ${W}>;
        ${dt.declareVariables(...Zt,kr)}
        ${dt.mainStart([te,W,1])}
          let output_indices = ${kr.offsetToIndices(`workgroup_index * ${W}`)};
          let col = output_indices[2];
          let row = output_indices[1];
          let batch = output_indices[0];
          let n_blocks_per_col = uniforms.b_shape[1];
          let num_tiles =  (n_blocks_per_col - 1) / ${le} + 1;

          // Loop over shared dimension.
          for (var tile: u32 = 0; tile < num_tiles; tile += 1) {
            let a_col_start = tile * ${j};
            // load one tile A data into shared memory.
            for (var a_offset = local_idx; a_offset < ${j}; a_offset += 128)
            {
              let a_col = a_col_start + a_offset;
              if (a_col < uniforms.a_shape[2])
              {
                sub_a[a_offset] = ${xt.getByIndices(`${xt.type.indices}(batch, row, a_col)`)};
              } else {
                sub_a[a_offset] = ${xt.type.value}(0);
              }
            }
            workgroupBarrier();

            // each thread process one block
            let b_row = col + local_id.y;
            let block = tile * ${le} + local_id.x;
            ${ar?`
            let zero_point_bytes_per_col = (n_blocks_per_col + 1) / 2;
            let zero_point_byte_count = b_row * zero_point_bytes_per_col + (block >> 0x1u);
            let zero_point_word_index = zero_point_byte_count >> 0x2u;
            let zero_point_byte_offset = zero_point_byte_count & 0x3u;
            let zero_point_nibble_offset: u32 = block & 0x1u;
            let zero_point_bits_offset = (zero_point_byte_offset << 3) + (zero_point_nibble_offset << 2);
            let zero_point_word = ${ar.getByOffset("zero_point_word_index")} >> zero_point_bits_offset;
            let zero_point = ${fr}((zero_point_word) & 0xFu);`:`
            // The default zero point is 8 for unsigned 4-bit quantization.
            let zero_point = ${fr}(8);`}
            let scale = ${Gt.getByOffset("b_row * n_blocks_per_col + block")};
            let b_data = ${jt.getByIndices(`${jt.type.indices}(b_row, block, 0)`)};
            var word_offset = local_id.x * ${h.blockSize/v};
            for (var i: u32 = 0; i < ${x}; i++) {
              ${(()=>{switch(v){case 1:return`
          let a_data0 = vec4<${fr}>(sub_a[word_offset], sub_a[word_offset + 1], sub_a[word_offset + 2], sub_a[word_offset + 3]);
          let a_data1 = vec4<${fr}>(sub_a[word_offset + 4], sub_a[word_offset + 5], sub_a[word_offset + 6], sub_a[word_offset + 7]);`;case 2:return`
          let a_data0 = vec4<${fr}>(sub_a[word_offset], sub_a[word_offset + 1]);
          let a_data1 = vec4<${fr}>(sub_a[word_offset + 2], sub_a[word_offset + 3]);`;case 4:return`
          let a_data0 = sub_a[word_offset];
          let a_data1 = sub_a[word_offset + 1];`;default:throw new Error(`${v}-component is not supported.`)}})()}
              let b_value = ${x===1?"b_data":"b_data[i]"};
              let b_value_lower = unpack4xU8(b_value & 0x0F0F0F0Fu);
              let b_value_upper = unpack4xU8((b_value >> 4) & 0x0F0F0F0Fu);
              let b_quantized_values = mat2x4<${fr}>(${Array.from({length:4},(ur,Jr)=>`${fr}(b_value_lower[${Jr}]), ${fr}(b_value_upper[${Jr}])`).join(", ")});
              let b_dequantized_values = (b_quantized_values - mat2x4<${fr}>(${Array(8).fill("zero_point").join(",")})) * scale;
              inter_results[local_id.y][local_id.x] += ${Array.from({length:2},(ur,Jr)=>`dot(a_data${Jr}, b_dequantized_values[${Jr}])`).join(" + ")};
              word_offset += ${8/v};
            }
            workgroupBarrier();
          }

          if (local_idx < ${W}) {
            var output_value: ${kr.type.value} = ${kr.type.value}(0);
            for (var b = 0u; b < ${te}; b++) {
              output_value += inter_results[local_idx][b];
            }
            if (col + local_idx < uniforms.output_shape[2])
            {
              ${kr.setByIndices(`${kr.type.indices}(batch, row, col + local_idx)`,"output_value")}
            }
          }
        }`}}},kc=(c,h)=>{VA(c.inputs,h),h.blockSize===32&&c.adapterInfo.isVendor("intel")&&c.adapterInfo.isArchitecture("gen-12lp")?c.compute(yu(c.inputs,h)):c.compute(Ic(c.inputs,h))},_u=c=>Ae(c)}),Zr=Me(()=>{Is(),Ps(),zs(),yc=c=>{if(!c||c.length<1)throw new Error("Too few inputs");if(c[0].dataType!==1&&c[0].dataType!==10)throw new Error("Input type must be float or float16.");if(c.length>=2){let h=2*c[0].dims.length===c[1].dims[0];if(c.length===4&&(h=2*c[3].dims[0]===c[1].dims[0]),!h)throw new Error("The pads should be a 1D tensor of shape [2 * input_rank] or [2 * num_axes].")}},WA=(c,h,_)=>{let S="";for(let V=h-1;V>=0;--V)S+=`
            k = i32(${c.indicesGet("indices",V)}) - ${Or("uniforms.pads",V,_)};
            if (k < 0) {
              break;
            }
            if (k >= i32(${Or("uniforms.x_shape",V,h)})) {
              break;
            }
            offset += k * i32(${Or("uniforms.x_strides",V,h)});
        `;return`
          value = ${c.type.value}(uniforms.constant_value);
          for (var i = 0; i < 1; i++) {
            var offset = 0;
            var k = 0;
            ${S}
            value = x[offset];
          }
      `},_c=(c,h,_)=>{let S="";for(let V=h-1;V>=0;--V)S+=`
                k = i32(${c.indicesGet("indices",V)}) - ${Or("uniforms.pads",V,_)};
                if (k < 0) {
                  k = -k;
                }
                {
                  let _2n_1 = 2 * (i32(${Or("uniforms.x_shape",V,h)}) - 1);
                  k = k % _2n_1;
                  if(k >= i32(${Or("uniforms.x_shape",V,h)})) {
                    k = _2n_1 - k;
                  }
                }
                offset += k * i32(${Or("uniforms.x_strides",V,h)});
            `;return`
              var offset = 0;
              var k = 0;
              ${S}
              value = x[offset];
          `},jl=(c,h,_)=>{let S="";for(let V=h-1;V>=0;--V)S+=`
                k = i32(${c.indicesGet("indices",V)}) - ${Or("uniforms.pads",V,_)};
                if (k < 0) {
                  k = 0;
                }
                if (k >= i32(${Or("uniforms.x_shape",V,h)})) {
                  k = i32(${Or("uniforms.x_shape",V,h)}) - 1;
                }
                offset += k * i32(${Or("uniforms.x_strides",V,h)});
            `;return`
              var offset = 0;
              var k = 0;
              ${S}
              value = x[offset];
          `},ed=(c,h,_)=>{let S="";for(let V=h-1;V>=0;--V)S+=`
                k = i32(${c.indicesGet("indices",V)}) - ${Or("uniforms.pads",V,_)};
                if (k < 0)  {
                  k += i32(${Or("uniforms.x_shape",V,h)}]);
                }
                if (k >= i32(${Or("uniforms.x_shape",V,h)})) {
                  k -= i32(${Or("uniforms.x_shape",V,h)});
                }
                offset += k * i32(${Or("uniforms.x_strides",V,h)});
            `;return`
              var offset = 0;
              var k = 0;
              ${S}
              value = x[offset];
          `},no=(c,h,_)=>{switch(_.mode){case 0:return WA(c,h,_.pads.length);case 1:return _c(c,h,_.pads.length);case 2:return jl(c,h,_.pads.length);case 3:return ed(c,h,_.pads.length);default:throw new Error("Invalid mode")}},ko=(c,h)=>{let _=Le.padShape(c[0].dims.slice(),h.pads),S=c[0].dims,V=[{type:12,data:Le.size(_)},{type:6,data:h.pads}],n=c.length>=3&&c[2].data;return h.mode===0&&V.push({type:n?c[2].dataType:1,data:h.value}),V.push(..._r(c[0].dims,_)),{name:"Pad",shaderCache:{hint:`${h.mode}${n}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:_,dataType:c[0].dataType}],dispatchGroup:{x:Math.ceil(Le.size(_)/64)},programUniforms:V}),getShaderSource:l=>{let p=Lr("output",c[0].dataType,_.length),b=rr("x",c[0].dataType,S.length),C=b.type.value,E=no(p,S.length,h),v=[{name:"output_size",type:"u32"},{name:"pads",type:"i32",length:h.pads.length}];return h.mode===0&&v.push({name:"constant_value",type:n?C:"f32"}),`
            ${l.registerUniforms(v).declareVariables(b,p)}
            ${l.mainStart()}
            ${l.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

            let indices = ${p.offsetToIndices("global_idx")};

            var value = ${C}(0);
            ${E}
            output[global_idx] = value;
        }`}}},pA=(c,h)=>{if(c.length>1){let _=c[1].getBigInt64Array(),S=c.length>=3&&c[2].data?c[2].dataType===10?c[2].getUint16Array()[0]:c[2].getFloat32Array()[0]:0,V=c[0].dims.length,n=new Int32Array(2*V).fill(0);if(c.length>=4){let p=c[3].getBigInt64Array();for(let b=0;b<p.length;b++)n[Number(p[b])]=Number(_[b]),n[Number(p[b])+V]=Number(_[b+p.length])}else _.forEach((p,b)=>n[Number(b)]=Number(p));let l=[];return n.forEach(p=>l.push(p)),{mode:h.mode,value:S,pads:l}}return h},hA=(c,h)=>{yc(c.inputs);let _=pA(c.inputs,h);c.compute(ko(c.inputs,_),{inputs:[0]})}}),ms=Me(()=>{ct(),Is(),Ps(),zs(),mA=c=>{if(R.webgpu.validateInputContent&&(!c||c.length!==1))throw new Error("Pool ops requires 1 input.")},p0=(c,h,_)=>{let S=h.format==="NHWC",V=c.dims.slice();S&&V.splice(1,0,V.pop());let n=Object.hasOwnProperty.call(h,"dilations"),l=h.kernelShape.slice(),p=h.strides.slice(),b=n?h.dilations.slice():[],C=h.pads.slice();vt.adjustPoolAttributes(_,V,l,p,b,C);let E=vt.computePoolOutputShape(_,V,p,b,l,C,h.autoPad),v=Object.assign({},h);n?Object.assign(v,{kernelShape:l,strides:p,pads:C,dilations:b,cacheKey:h.cacheKey}):Object.assign(v,{kernelShape:l,strides:p,pads:C,cacheKey:h.cacheKey});let x=E.slice();return x.push(x.splice(1,1)[0]),[v,S?x:E]},h0=(c,h)=>{let _=h.format==="NHWC",S=[{type:12,data:Le.size(c)},{type:12,data:Le.size(h.kernelShape)}],V=[{name:"outputSize",type:"u32"},{name:"kernelSize",type:"u32"}];if(h.kernelShape.length<=2){let n=h.kernelShape[h.kernelShape.length-1],l=h.strides[h.strides.length-1],p=h.pads[h.pads.length/2-1],b=h.pads[h.pads.length-1],C=!!(p+b);S.push({type:12,data:n},{type:12,data:l},{type:12,data:p},{type:12,data:b}),V.push({name:"kw",type:"u32"},{name:"sw",type:"u32"},{name:"pwStart",type:"u32"},{name:"pwEnd",type:"u32"});let E=!1;if(h.kernelShape.length===2){let v=h.kernelShape[h.kernelShape.length-2],x=h.strides[h.strides.length-2],L=h.pads[h.pads.length/2-2],W=h.pads[h.pads.length-2];E=!!(L+W),S.push({type:12,data:v},{type:12,data:x},{type:12,data:L},{type:12,data:W}),V.push({name:"kh",type:"u32"},{name:"sh",type:"u32"},{name:"phStart",type:"u32"},{name:"phEnd",type:"u32"})}return[S,V,!0,C,E]}{if(_)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let n=Le.computeStrides(h.kernelShape);S.push({type:12,data:n},{type:12,data:h.pads},{type:12,data:h.strides}),V.push({name:"kernelStrides",type:"u32",length:n.length},{name:"pads",type:"u32",length:h.pads.length},{name:"strides",type:"u32",length:h.strides.length});let l=h.pads.reduce((p,b)=>p+b);return[S,V,!!l,!1,!1]}},m0=(c,h,_,S,V,n,l,p,b,C,E,v)=>{let x=V.format==="NHWC",L=h.type.value,W=Lr("output",h.type.tensor,S);if(V.kernelShape.length<=2){let te="",$="",j="",le=_-(x?2:1);if(te=E?`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${le}] = indices[${le}] * uniforms.sw - uniforms.pwStart + i;
                  if (xIndices[${le}] < 0 || xIndices[${le}]
                      >= uniforms.x_shape[${le}]) {
                    pad++;
                    continue;
                  }
                  let x_val = x[${h.indicesToOffset("xIndices")}];
                  ${n}
                }`:`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${le}] = indices[${le}] * uniforms.sw - uniforms.pwStart + i;
                  let x_val = x[${h.indicesToOffset("xIndices")}];
                  ${n}
                }`,V.kernelShape.length===2){let me=_-(x?3:2);$=v?`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${me}] = indices[${me}] * uniforms.sh - uniforms.phStart + j;
                  if (xIndices[${me}] < 0 || xIndices[${me}] >= uniforms.x_shape[${me}]) {
                    pad += i32(uniforms.kw);
                    continue;
                  }
              `:`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${me}] = indices[${me}] * uniforms.sh - uniforms.phStart + j;
                `,j=`
              }
            `}return`
            ${c.registerUniforms(b).declareVariables(h,W)}

            ${c.mainStart()}
              ${c.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

              let indices = ${W.offsetToIndices("global_idx")};
              var xIndices = ${W.offsetToIndices("global_idx")};

              var value = ${L}(${p});
              var pad = 0;
              ${$}
              ${te}
              ${j}
              ${l}

              output[global_idx] = value;
            }`}{if(x)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let te=V.kernelShape.length,$=V.pads.length,j="";return j=C?`
                if (xIndices[j] >= uniforms.x_shape[j]) {
                  pad++;
                  isPad = true;
                  break;
                }
              }
              if (!isPad) {
                let x_val = x[${h.indicesToOffset("xIndices")}];
                ${n}
              }`:`
              }
              let x_val = x[${h.indicesToOffset("xIndices")}];
              ${n}
            `,`
            ${c.registerUniforms(b).declareVariables(h,W)}

            ${c.mainStart()}
              ${c.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
              let indices = ${W.offsetToIndices("global_idx")};
              var xIndices = ${W.offsetToIndices("global_idx")};

              var offsets: array<u32, ${te}>;

              var value = ${L}(${p});
              var pad = 0;
              var isPad = false;

              for (var i: u32 = 0u; i < uniforms.kernelSize; i++) {
                var offset = i;
                for (var j = 0u; j < ${te-1}u; j++) {
                  offsets[j] = offset / ${Or("uniforms.kernelStrides","j",te)};
                  offset -= offsets[j] * ${Or("uniforms.kernelStrides","j",te)};
                }
                offsets[${te-1}] = offset;

                isPad = false;
                for (var j = ${_-te}u; j < ${_}u; j++) {
                  xIndices[j] = indices[j] * ${Or("uniforms.strides",`j - ${_-te}u`,te)}
                    + offsets[j - ${_-te}u] - ${Or("uniforms.pads","j - 2u",$)};
                  ${j}
              }
              ${l}

              output[global_idx] = value;
            }`}},Vl=c=>`${c.format};${c.ceilMode};${c.autoPad};${c.kernelShape.length}`,vc=c=>`${Vl(c)};${c.countIncludePad}`,xc=c=>`${Vl(c)};${c.storageOrder};${c.dilations}`,bl=c=>({format:c.format,autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][c.auto_pad],ceilMode:c.ceil_mode,kernelShape:c.kernel_shape,strides:c.strides,pads:c.pads}),b0=(c,h,_,S)=>{let[V,n]=p0(h,S,_),l=rr("x",h.dataType,h.dims.length),p=l.type.value,b="";V.countIncludePad?b+=`value /= ${p}(uniforms.kernelSize);`:b+=`value /= ${p}(i32(uniforms.kernelSize) - pad);`;let[C,E,v,x,L]=h0(n,V);return C.push(..._r(h.dims,n)),{name:c,shaderCache:{hint:`${S.cacheKey};${v};${x};${L}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:n,dataType:h.dataType}],dispatchGroup:{x:Math.ceil(Le.size(n)/64)},programUniforms:C}),getShaderSource:W=>m0(W,l,h.dims.length,n.length,V,"value += x_val;",b,0,E,v,x,L)}},Mc=c=>{let h=c.count_include_pad!==0,_=bl(c);if(_.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");let S={countIncludePad:h,..._,cacheKey:""};return{...S,cacheKey:vc(S)}},Wl=(c,h)=>{mA(c.inputs),c.compute(b0("AveragePool",c.inputs[0],!1,h))},Kn={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[]},Ec=c=>{let h=c.format;return{format:h,...Kn,cacheKey:h}},C0=(c,h)=>{mA(c.inputs),c.compute(b0("GlobalAveragePool",c.inputs[0],!0,h))},Ul=(c,h,_,S)=>{let[V,n]=p0(h,S,_),l=rr("x",h.dataType,h.dims.length),[p,b,C,E,v]=h0(n,V);return p.push(..._r(h.dims,n)),{name:c,shaderCache:{hint:`${S.cacheKey};${C};${E};${v}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:n,dataType:h.dataType}],dispatchGroup:{x:Math.ceil(Le.size(n)/64)},programUniforms:p}),getShaderSource:x=>m0(x,l,h.dims.length,n.length,V,`
      value = max(x_val, value);
    `,"",h.dataType===10?-65504:-1e5,b,C,E,v)}},w0=(c,h)=>{mA(c.inputs),c.compute(Ul("MaxPool",c.inputs[0],!1,h))},yo=c=>{let h=c.storage_order,_=c.dilations,S=bl(c);if(h!==0)throw new Error("column major storage order is not yet supported for MaxPool");if(S.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");let V={storageOrder:h,dilations:_,...S,cacheKey:""};return{...V,cacheKey:xc(V)}},vu=c=>{let h=c.format;return{format:h,...Kn,cacheKey:h}},Bc=(c,h)=>{mA(c.inputs),c.compute(Ul("GlobalMaxPool",c.inputs[0],!0,h))}}),Ur=Me(()=>{Is(),Ps(),Ka(),zs(),Tc=(c,h)=>{if(c.length<2||c.length>3)throw new Error("DequantizeLinear requires 2 or 3 inputs.");if(c.length===3&&c[1].dims===c[2].dims)throw new Error("x-scale and x-zero-point must have the same shape.");if(c.length===3&&c[0].dataType!==c[2].dataType)throw new Error("x and x-zero-point must have the same data type.");if(c[0].dataType===6&&c.length>2)throw new Error("In the case of dequantizing int32 there is no zero point.");if(c[1].dims.length!==0&&c[1].dims.length!==1&&c[1].dims.length!==c[0].dims.length)throw new Error("scale input must be a scalar, a 1D tensor, or have the same rank as the input tensor.");if(c.length>2){if(c[0].dataType!==c[2].dataType)throw new Error("x and x-zero-point must have the same data type.");if(c[1].dims.length!==c[2].dims.length)throw new Error("scale and zero-point inputs must have the same rank.");if(!c[1].dims.map((_,S)=>_===c[2].dims[S]).reduce((_,S)=>_&&S,!0))throw new Error("scale and zero-point inputs must have the same shape.")}if(h.blockSize>0){if(c[1].dims.length===0||c[1].dims.length===1&&c[1].dims[0]===1)throw new Error("blockSize must be set only for block quantization.");if(!c[1].dims.map((V,n)=>n===h.axis||V===c[0].dims[n]).reduce((V,n)=>V&&n,!0))throw new Error("For block qunatization, scale input shape to match the input shape except for the axis");if(c[1].dims.length!==c[0].dims.length)throw new Error("For block qunatization the scale input rank must be the same as the x rank.");let _=c[0].dims[h.axis],S=c[1].dims[h.axis];if(h.blockSize<Math.ceil(_/S)||h.blockSize>Math.ceil(_/(S-1)-1))throw new Error("blockSize must be with in the range [ceil(dI / Si), ceil(dI / (Si - 1) - 1)].")}},I0=(c,h)=>{let _=Le.normalizeAxis(h.axis,c[0].dims.length),S=c[0].dataType,V=S===3,n=c[0].dims,l=c[1].dataType,p=Le.size(n),b=S===3||S===2,C=b?[Math.ceil(Le.size(c[0].dims)/4)]:c[0].dims,E=c[1].dims,v=c.length>2?c[2]:void 0,x=v?b?[Math.ceil(Le.size(v.dims)/4)]:v.dims:void 0,L=E.length===0||E.length===1&&E[0]===1,W=L===!1&&E.length===1,te=gs(p),$=L&&(!b||te===4),j=$?te:1,le=$&&!b?te:1,me=rr("input",b?12:S,C.length,le),_e=rr("scale",l,E.length),Ee=v?rr("zero_point",b?12:S,x.length):void 0,Fe=Lr("output",l,n.length,j),Ye=[me,_e];Ee&&Ye.push(Ee);let dt=[C,E];v&&dt.push(x);let mt=[{type:12,data:p/j},{type:12,data:_},{type:12,data:h.blockSize},..._r(...dt,n)];return{name:"DequantizeLinear",shaderCache:{hint:h.cacheKey,inputDependencies:Ee?["rank","rank","rank"]:["rank","rank"]},getShaderSource:xt=>`
      ${xt.registerUniforms([{name:"output_size",type:"u32"},{name:"axis",type:"u32"},{name:"block_size",type:"u32"}]).declareVariables(...Ye,Fe)}
      ${xt.mainStart()}
          ${xt.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          let output_indices = ${Fe.offsetToIndices("global_idx")};

          // Set input x
          ${b?`
            let input = ${me.getByOffset("global_idx / 4")};
            let x_vec = ${V?"unpack4xI8(input)":"unpack4xU8(input)"};
            let x_value = ${j===1?"x_vec[global_idx % 4]":"x_vec"};`:`let x_value = ${me.getByOffset("global_idx")};`};

          // Set scale input
          ${L?`let scale_value= ${_e.getByOffset("0")}`:W?`
            let scale_index = ${Fe.indicesGet("output_indices","uniforms.axis")};
            let scale_value= ${_e.getByOffset("scale_index")};`:`
            var scale_indices: ${_e.type.indices} = output_indices;
            let index = ${_e.indicesGet("scale_indices","uniforms.axis")} / uniforms.block_size;
            ${_e.indicesSet("scale_indices","uniforms.axis","index")};
            let scale_value= ${_e.getByIndices("scale_indices")};`};

          // Set zero-point input
          ${Ee?L?b?`
                let zero_point_input = ${Ee.getByOffset("0")};
                let zero_point_vec =  ${V?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value= zero_point_vec[0]`:`let zero_point_value = ${Ee.getByOffset("0")}`:W?b?`
                let zero_point_index = ${Fe.indicesGet("output_indices","uniforms.axis")};
                let zero_point_input = ${Ee.getByOffset("zero_point_index / 4")};
                let zero_point_vec =  ${V?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value = zero_point_vec[zero_point_index % 4]`:`
                let zero_point_index = ${Fe.indicesGet("output_indices","uniforms.axis")};
                let zero_point_value = ${Ee.getByOffset("zero_point_index")};`:b?`
                let zero_point_offset = ${_e.indicesToOffset("scale_indices")};
                let zero_point_input = ${Ee.getByOffset("zero_point_offset / 4")};
                let zero_point_vec = ${V?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value = zero_point_vec[zero_point_offset % 4];`:`let zero_point_value = ${Ee.getByIndices("scale_indices")};`:`let zero_point_value = ${b?V?"i32":"u32":me.type.value}(0);`};
      // Compute and write output
      ${Fe.setByOffset("global_idx",`${Fe.type.value}(x_value - zero_point_value) * scale_value`)};
      }`,getRunData:()=>({outputs:[{dims:n,dataType:l}],dispatchGroup:{x:Math.ceil(p/j/64),y:1,z:1},programUniforms:mt})}},k0=(c,h)=>{Tc(c.inputs,h),c.compute(I0(c.inputs,h))},Hl=c=>Ae({axis:c.axis,blockSize:c.blockSize})}),rs=Me(()=>{ct(),Is(),zs(),y0=(c,h,_)=>{if(c===h||c<h&&_<0||c>h&&_>0)throw new Error("Range these inputs' contents are invalid.")},Pc=(c,h,_,S)=>{let V=Math.abs(Math.ceil((h-c)/_)),n=[V],l=V,p=[{type:12,data:l},{type:S,data:c},{type:S,data:_},..._r(n)];return{name:"Range",shaderCache:{hint:`${S}`},getShaderSource:b=>{let C=Lr("output",S,n.length),E=C.type.value,v=[{name:"outputSize",type:"u32"},{name:"start",type:E},{name:"delta",type:E}];return`
        ${b.registerUniforms(v).declareVariables(C)}
        ${b.mainStart()}
        ${b.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        output[global_idx] = uniforms.start + ${E}(global_idx) * uniforms.delta;
      }`},getRunData:()=>({outputs:[{dims:n,dataType:S}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:p})}},Dc=c=>{let h=0,_=0,S=0;c.inputs[0].dataType===6?(h=c.inputs[0].getInt32Array()[0],_=c.inputs[1].getInt32Array()[0],S=c.inputs[2].getInt32Array()[0]):c.inputs[0].dataType===1&&(h=c.inputs[0].getFloat32Array()[0],_=c.inputs[1].getFloat32Array()[0],S=c.inputs[2].getFloat32Array()[0]),R.webgpu.validateInputContent&&y0(h,_,S),c.compute(Pc(h,_,S,c.inputs[0].dataType),{inputs:[]})}}),as=Me(()=>{Is(),Ps(),Ka(),zs(),Yl=(c,h,_,S)=>{if(c!=="none"&&S!=="i32"&&S!=="u32"&&S!=="f32")throw new Error(`Input ${S} is not supported with reduction ${c}.`);let V=`{
                var oldValue = 0;
                loop {
                  let newValueF32 =`,n=`;
                  let newValue = bitcast<i32>(newValueF32);
                  let res = atomicCompareExchangeWeak(&${h}, oldValue, newValue);
                  if res.exchanged {
                    break;
                  }
                  oldValue = res.old_value;
                }
              }`;switch(c){case"none":return`${h}=${_};`;case"add":return S==="i32"||S==="u32"?`atomicAdd(&${h}, bitcast<${S}>(${_}));`:`
              ${V}bitcast<${S}>(oldValue) + (${_})${n}`;case"max":return S==="i32"||S==="u32"?`atomicMax(&${h}, bitcast<${S}>(${_}));`:`
                ${V}max(bitcast<f32>(oldValue), (${_}))${n}`;case"min":return S==="i32"||S==="u32"?`atomicMin(&${h}, bitcast<${S}>(${_}));`:`${V}min(bitcast<${S}>(oldValue), (${_}))${n}`;case"mul":return`${V}(bitcast<${S}>(oldValue) * (${_}))${n}`;default:throw new Error(`Reduction ${c} is not supported.`)}},xu=(c,h)=>{let _=c[0].dims,S=c[1].dims,V=_,n=Math.ceil(Le.size(S)/1),l=S[S.length-1],p=Le.sizeFromDimension(_,l),b=[{type:12,data:n},{type:12,data:l},{type:12,data:p},..._r(c[1].dims,c[2].dims,V)];return{name:"ScatterND",shaderCache:{hint:`${h.cacheKey}_${h.reduction}`,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:V,dataType:c[0].dataType}],dispatchGroup:{x:Math.ceil(n/64)},programUniforms:b}),getShaderSource:C=>{let E=rr("indices",c[1].dataType,c[1].dims.length),v=rr("updates",c[2].dataType,c[2].dims.length,1),x=h.reduction!=="none"&&h.reduction!==""?Rs("output",c[0].dataType,V.length):Lr("output",c[0].dataType,V.length,1);return`
      ${C.registerUniform("output_size","u32").registerUniform("last_index_dimension","u32").registerUniform("num_updates_elements","u32").declareVariables(E,v,x)}
      ${C.mainStart()}
        ${C.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
  var data_offset = 0u;
  let indices_start = uniforms.last_index_dimension * global_idx;
  let indices_end = indices_start + uniforms.last_index_dimension;
  for (var i = indices_start; i < indices_end; i++) {
    var index = i32(indices[i].x);
    ${c[0].dims.length===1?`
    let element_count_dim = uniforms.output_strides;
    let dim_value = uniforms.output_shape;`:`
    let element_count_dim = uniforms.output_strides[i - indices_start];
    let dim_value = uniforms.output_shape[i - indices_start + uniforms.last_index_dimension];`}
    if (index >= 0) {
      if (index >= i32(dim_value)) {
        index = i32(dim_value - 1);
      }
    } else {
      if (index < -i32(dim_value)) {
        index = 0;
      } else {
        index += i32(dim_value);
      }
    }
    data_offset += u32((u32(index) * element_count_dim));
  }

  for (var i = 0u; i < uniforms.num_updates_elements; i++) {
    let value = updates[uniforms.num_updates_elements * global_idx + i];
    ${Yl(h.reduction,"output[data_offset + i]","value",x.type.value)}
  }

      }`}}},Mu=c=>Ae({reduction:c.reduction}),Cl=(c,h)=>{c.compute(xu(c.inputs,h),{inputs:[c.inputs[1],c.inputs[2]],outputs:[]})}}),xs=Me(()=>{Is(),Ps(),Ka(),zs(),_0=(c,h)=>{if(c.every(_=>_>0||(()=>{throw new Error("Resize requires scales input values to be positive")})),c.length>0){if(h.mode==="linear"){if(!(c.length===2||c.length===3||c.length===4&&c[0]===1&&c[1]===1||c.length===4&&c[0]===1&&c[3]===1||c.length===5&&c[0]===1&&c[1]===1))throw new Error(`For linear mode, Resize requires scales to be 2D, 3D, 4D with either two outermost or one innermost and
            one outermost scale values equal to 1, or 5D with two outermost scale values equal to 1`)}else if(h.mode==="cubic"&&!(c.length===2||c.length===4&&c[0]===1&&c[1]===1||c.length===4&&c[0]===1&&c[3]===1))throw new Error("Resize requires scales input size to be 2 or 4 for cubic mode")}},Eu=(c,h,_)=>{h.every(V=>V>=0&&V<_||(()=>{throw new Error("Resize requires axes input values to be positive and less than rank")}));let S=new Array(_).fill(1);return h.forEach((V,n)=>S[V]=c[n]),S},Kl=(c,h,_,S,V,n)=>{let[l,p,b]=_>10?[1,2,3]:[-1,c.length>1?1:-1,-1],C=c[0].dims.length;if(l>0&&c.length>l&&c[l].dims.length>0)c[l].getFloat32Array().forEach(E=>n.push(E));else if(h.coordinateTransformMode==="tf_crop_and_resize")throw new Error("Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize");if(p>0&&c.length>p&&c[p].dims.length===1&&c[p].dims[0]>0){if(c[p].getFloat32Array().forEach(E=>S.push(E)),S.length!==0&&S.length!==C&&_>=18&&S.length!==h.axes.length)throw new Error("Resize requires scales input size to be same as input rank or axes size for opset 18 and up");_0(S,h),h.axes.length>0&&Eu(S,h.axes,C).forEach((E,v)=>S[v]=E)}if(b>0&&c.length>b&&c[b].dims.length===1&&c[b].dims[0]>0&&(c[b].getBigInt64Array().forEach(E=>V.push(Number(E))),V.length!==0&&V.length!==C&&_>=18&&V.length!==h.axes.length))throw new Error("Resize requires sizes input size to be same as input rank or axes size for opset 18 and up");if(h.axes.length>0){if(S.length!==0&&S.length!==h.axes.length)throw new Error('Resize requires "scales" input size to be of axes rank when axes attributes is specified');if(V.length!==0&&V.length!==h.axes.length)throw new Error('Resize requires "sizes" input size to be of rank axes rank when axes attributes is specified')}if(typeof S<"u"&&typeof V<"u"&&S.length>0&&V.length>C)throw new Error("Resize requires only of scales or sizes to be specified")},v0=(c,h,_,S)=>`
  // The whole part and the fractional part are calculated separately due to inaccuracy of floating
  // point division. As an example, f32(21) / f32(7) may evaluate to 2.99... instead of 3, causing an
  // offset-by-one error later in floor().
  let big = (${c}) * (${h});
  let whole = ${S}(big / (${_}));
  let fract = ${S}(big % (${_})) / ${S}(${_});
  return whole + fract;
`,Bu=(c,h)=>`fn getOriginalCoordinateFromResizedCoordinate(xResized: u32, xScale: f32, lengthResized: u32,
     lengthOriginal: u32, roiStart: f32, roiEnd: f32) -> ${h} { `+(()=>{switch(c){case"asymmetric":return`
          if (xScale < 1.0 || floor(xScale) != xScale) {
            return ${h}(xResized) / ${h}(xScale);
          } else {
            ${v0("xResized","lengthOriginal","lengthResized",h)}
          }
        `;case"pytorch_half_pixel":return`if (lengthResized > 1) {
                    return (${h}(xResized) + 0.5) / ${h}(xScale) - 0.5;
                  } else {
                    return 0.0;
                  }`;case"tf_half_pixel_for_nn":return`return (${h}(xResized) + 0.5) / ${h}(xScale);`;case"align_corners":return`if (lengthResized == 1) {
                    return 0.0;
                  } else {
                    ${v0("xResized","lengthOriginal - 1","lengthResized - 1",h)}
                  }`;case"tf_crop_and_resize":return`if (lengthResized > 1) {
                    return ${h}(roiStart) * ${h}(lengthOriginal - 1) +
                        (${h}(xResized) * ${h}(roiEnd - roiStart) * ${h}(lengthOriginal - 1)) /
                        ${h}(lengthResized - 1);
                  } else {
                    return 0.5 * ${h}(roiStart + roiEnd) * ${h}(lengthOriginal - 1);
                  }`;case"half_pixel_symmetric":return`const outputWidth = ${h}xScale * ${h}(lengthResized);
                  const adjustment = ${h}(lengthResized) / outputWidth;
                  const center = ${h}(lengthOriginal) / 2;
                  const offset = center * (1 - adjustment);
                  return offset + ((${h}(xResized) + 0.5) / ${h}(xScale)) - 0.5;`;case"half_pixel":return`return ((${h}(xResized) + 0.5) / ${h}(xScale)) - 0.5;`;default:throw new Error(`Coordinate transform mode ${c} is not supported`)}})()+"}",x0=(c,h,_)=>`fn getNearestPixelFromOriginal(xOriginal: ${_}, isDownSample: bool) -> ${_} {`+(()=>{switch(c){case"round_prefer_ceil":return"if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }";case"floor":return"return floor(xOriginal);";case"ceil":return"return ceil(xOriginal);";case"round_prefer_floor":return"if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }";default:if(h<11)return"if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }";throw new Error(`Nearest mode ${c} is not supported`)}})()+"}",M0=(c,h,_)=>{let S=new Array(_).fill(0).concat(new Array(_).fill(1)),V=c.length===0?S:c.slice();return h.length>0?(h.forEach((n,l)=>{S[n]=V[l],S[l+_]=V[h.length+l]}),S):V},Sc=(c,h,_,S)=>{let V=[];if(_.length>0)if(S.length>0){if(c.forEach(n=>V.push(n)),Math.max(...S)>c.length)throw new Error("axes is out of bound");S.forEach((n,l)=>V[n]=_[l])}else _.forEach(n=>V.push(n));else{if(h.length===0)throw new Error("Resize requires either scales or sizes.");V=c.map((n,l)=>Math.round(n*h[l]))}return V},Gc=(c,h,_)=>{let S=(()=>{switch(_.keepAspectRatioPolicy){case"not_larger":return _.axes.length>0?Math.min(..._.axes.map(n=>h[n]),Number.MAX_VALUE):Math.min(...h,Number.MAX_VALUE);case"not_smaller":return _.axes.length>0?Math.max(..._.axes.map(n=>h[n]),Number.MIN_VALUE):Math.max(...h,Number.MIN_VALUE);default:throw new Error(`Keep aspect ratio policy ${_.keepAspectRatioPolicy} is not supported`)}})();h.fill(1,0,h.length);let V=c.slice();return _.axes.length>0?(_.axes.forEach(n=>h[n]=S),_.axes.forEach(n=>V[n]=Math.round(c[n]*h[n]))):(h.fill(S,0,h.length),V.forEach((n,l)=>V[l]=Math.round(n*h[l]))),V},ql=(c,h,_,S,V)=>`
    fn calculateOriginalIndicesFromOutputIndices(output_indices: ${c.type.indices}) -> array<${c.type.value}, ${_.length}> {
      var original_indices: array<${c.type.value}, ${_.length}>;
      for (var i:u32 = 0; i < ${_.length}; i++) {
        var output_index = ${c.indicesGet("output_indices","i")};
        var scale = ${Or("uniforms.scales","i",S)};
        var roi_low = ${Or("uniforms.roi","i",V)};
        var roi_hi = ${Or("uniforms.roi",`i + ${h.length}`,V)};
        if (scale == 1.0) {
          original_indices[i] = ${c.type.value}(output_index);
        } else {
          var input_shape_i = ${Or("uniforms.input_shape","i",h.length)};
          var output_shape_i = ${Or("uniforms.output_shape","i",_.length)};
          original_indices[i] = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                           input_shape_i, roi_low, roi_hi);
        }
      }
      return original_indices;
    }`,Tu=(c,h,_,S,V,n,l)=>`
    fn calculateInputIndicesFromOutputIndices(output_indices: ${h.type.indices}) -> ${c.type.indices} {
      var input_indices: ${c.type.indices};
      for (var i:u32 = 0; i < ${S.length}; i++) {
        var output_index = ${h.indicesGet("output_indices","i")};
        var input_index: u32;
        var scale = ${Or("uniforms.scales","i",V)};
        if (scale == 1.0) {
          input_index = output_index;
        } else {
          var roi_low = ${Or("uniforms.roi","i",n)};
          var roi_hi = ${Or("uniforms.roi",`i + ${_.length}`,n)};
          var input_shape_i = ${Or("uniforms.input_shape","i",_.length)};
          var output_shape_i = ${Or("uniforms.output_shape","i",S.length)};
          var original_idx = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                        input_shape_i, roi_low, roi_hi);
          if (!${l} || (original_idx >= 0 && original_idx < ${h.type.value}(input_shape_i))) {
            if (original_idx < 0) {
              input_index = 0;
            } else if (original_idx > ${h.type.value}(input_shape_i - 1)) {
              input_index = input_shape_i - 1;
            } else {
              input_index = u32(getNearestPixelFromOriginal(original_idx, scale < 1));
            }
          } else {
            input_index = u32(original_idx);
          }
        }
        ${c.indicesSet("input_indices","i","input_index")}
      }
      return input_indices;
    }`,Fc=(c,h)=>`
    fn checkInputIndices(input_indices: ${c.type.indices}) -> bool {
      for (var i:u32 = 0; i < ${h.length}; i++) {
        var input_index = ${c.indicesGet("input_indices","i")};
        if (input_index < 0 || input_index >= ${Or("uniforms.input_shape","i",h.length)}) {
          return false;
        }
      }
      return true;
    }`,Xl=(c,h,_,S)=>c.rank>S?`
    ${c.indicesSet("input_indices",h,"channel")};
    ${c.indicesSet("input_indices",_,"batch")};
`:"",Pu=(c,h,_,S,V)=>{let[n,l,p,b]=_.length===2?[-1,0,1,-1]:[0,2,3,1],C=c.type.value;return`
    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> ${C} {
      var input_indices: ${c.type.indices};
      ${c.indicesSet("input_indices",l,`max(0, min(row, ${_[l]} - 1))`)};
      ${c.indicesSet("input_indices",p,`max(0, min(col, ${_[p]} - 1))`)};
      ${Xl(c,b,n,2)}
      return ${c.getByIndices("input_indices")};
    }

    fn bilinearInterpolation(output_indices: ${h.type.indices}) -> ${C} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var row:${C} = originalIndices[${l}];
      var col:${C} = originalIndices[${p}];
      ${S?`if (row < 0 || row > (${_[l]} - 1) || col < 0 || col > (${_[p]} - 1)) {
        return ${V};
      }`:""};
      row = max(0, min(row, ${_[l]} - 1));
      col = max(0, min(col, ${_[p]} - 1));
      var row1: u32 = u32(row);
      var col1: u32 = u32(col);
      var row2: u32 = u32(row + 1);
      var col2: u32 = u32(col + 1);
      var channel: u32 = ${_.length>2?`u32(originalIndices[${b}])`:"0"};
      var batch: u32 =  ${_.length>2?`u32(originalIndices[${n}])`:"0"};
      var x11: ${C} = getInputValue(batch, channel, row1, col1);
      var x12: ${C} = getInputValue(batch, channel, row1, col2);
      var x21: ${C} = getInputValue(batch, channel, row2, col1);
      var x22: ${C} = getInputValue(batch, channel, row2, col2);
      var dx1: ${C} = abs(row - ${C}(row1));
      var dx2: ${C} = abs(${C}(row2) - row);
      var dy1: ${C} = abs(col - ${C}(col1));
      var dy2: ${C} = abs(${C}(col2) - col);
      if (row1 == row2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (col1 == col2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);
    }`},zc=(c,h,_,S,V,n,l,p,b,C)=>{let E=_.length===2,[v,x]=E?[0,1]:[2,3],L=c.type.value,W=te=>{let $=te===v?"row":"col";return`
      fn ${$}CubicInterpolation(input_indices: ${c.type.indices}, output_indices: ${h.type.indices}) -> ${L} {
        var output_index = ${h.indicesGet("output_indices",te)};
        var originalIdx: ${L} = getOriginalCoordinateFromResizedCoordinate(output_index, ${V[te]},
        ${S[te]}, ${_[te]}, ${n[te]}, ${n[te]} + ${_.length});
        var fractOriginalIdx: ${L} = originalIdx - floor(originalIdx);
        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);

        if (${p} && (originalIdx < 0 || originalIdx > (${_[te]} - 1))) {
          return ${b};
        }
        var data: array<${L}, 4> = array<${L}, 4>(0.0, 0.0, 0.0, 0.0);
        for (var i: i32 = -1; i < 3; i++) {
          var ${$}: ${L} = originalIdx + ${L}(i);
          if (${$} < 0 || ${$} >= ${_[te]}) {
            ${C?`coefs[i + 1] = 0.0;
                        continue;`:p?`return ${b};`:`${$} = max(0, min(${$}, ${_[te]} - 1));`};
          }
        var input_indices_copy: ${c.type.indices} = input_indices;
          ${c.indicesSet("input_indices_copy",te,`u32(${$})`)};
          data[i + 1] = ${te===v?c.getByIndices("input_indices_copy"):"rowCubicInterpolation(input_indices_copy, output_indices)"};
        }
        return cubicInterpolation1D(data, coefs);
      }`};return`
    ${W(v)};
    ${W(x)};
  fn getCubicInterpolationCoefs(s: ${L}) -> array<${L}, 4> {
    var absS = abs(s);
    var coeffs: array<${L}, 4> = array<${L}, 4>(0.0, 0.0, 0.0, 0.0);
    var oneMinusAbsS: ${L} = 1.0 - absS;
    var twoMinusAbsS: ${L} = 2.0 - absS;
    var onePlusAbsS: ${L} = 1.0 + absS;
    coeffs[0] = ((${l} * onePlusAbsS - 5 * ${l}) * onePlusAbsS + 8 * ${l}) * onePlusAbsS - 4 * ${l};
    coeffs[1] = ((${l} + 2) * absS - (${l} + 3)) * absS * absS + 1;
    coeffs[2] = ((${l} + 2) * oneMinusAbsS - (${l} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;
    coeffs[3] = ((${l} * twoMinusAbsS - 5 * ${l}) * twoMinusAbsS + 8 * ${l}) * twoMinusAbsS - 4 * ${l};
    return coeffs;
  }

  fn cubicInterpolation1D(x: array<${L}, 4>, coefs: array<${L}, 4>) -> ${L} {
    var coefsSum: ${L} = coefs[0] + coefs[1] + coefs[2] + coefs[3];
    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;
  }

  fn bicubicInterpolation(output_indices: ${h.type.indices}) -> ${L} {
    var input_indices: ${c.type.indices} = output_indices;
    return colCubicInterpolation(input_indices, output_indices);
  }
    `},E0=(c,h,_,S,V)=>{let[n,l,p,b,C]=_.length===3?[-1,0,1,2,-1]:[0,2,3,4,1],E=c.type.value;return`
    fn getInputValue(batch: u32, channel: u32, depth:u32, height: u32, width: u32) -> ${E} {
      var input_indices: ${c.type.indices};
      ${c.indicesSet("input_indices",l,`max(0, min(depth, ${_[l]} - 1))`)};
      ${c.indicesSet("input_indices",p,`max(0, min(height, ${_[p]} - 1))`)};
      ${c.indicesSet("input_indices",b,`max(0, min(width, ${_[b]} - 1))`)};
      ${Xl(c,C,n,3)}
      return ${c.getByIndices("input_indices")};
    }

    fn trilinearInterpolation(output_indices: ${h.type.indices}) -> ${E} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var depth:${E} = originalIndices[${l}];
      var height:${E} = originalIndices[${p}];
      var width:${E} = originalIndices[${b}];
      ${S?`if (depth < 0 || depth > (${_[l]} - 1) || height < 0 || height > (${_[p]} - 1) || width < 0 || (width > ${_[b]} - 1)) {
      return ${V};
        }`:""};

    depth = max(0, min(depth, ${_[l]} - 1));
      height = max(0, min(height, ${_[p]} - 1));
      width = max(0, min(width, ${_[b]} - 1));
      var depth1: u32 = u32(depth);
      var height1: u32 = u32(height);
      var width1: u32 = u32(width);
      var depth2: u32 = u32(depth + 1);
      var height2: u32 = u32(height + 1);
      var width2: u32 = u32(width + 1);
      var channel: u32 = ${_.length>3?`u32(originalIndices[${C}])`:"0"};
      var batch: u32 =  ${_.length>3?`u32(originalIndices[${n}])`:"0"};

      var x111: ${E} = getInputValue(batch, channel, depth1, height1, width1);
      var x112: ${E} = getInputValue(batch, channel, depth1, height1, width2);
      var x121: ${E} = getInputValue(batch, channel, depth1, height2, width1);
      var x122: ${E} = getInputValue(batch, channel, depth1, height2, width2);
      var x211: ${E} = getInputValue(batch, channel, depth2, height1, width1);
      var x212: ${E} = getInputValue(batch, channel, depth2, height1, width2);
      var x221: ${E} = getInputValue(batch, channel, depth2, height2, width1);
      var x222: ${E} = getInputValue(batch, channel, depth2, height2, width2);
      var dx1: ${E} = abs(depth - ${E}(depth1));
      var dx2: ${E} = abs(${E}(depth2) - depth);
      var dy1: ${E} = abs(height - ${E}(height1));
      var dy2: ${E} = abs(${E}(height2) - height);
      var dz1: ${E} = abs(width - ${E}(width1));
      var dz2: ${E} = abs(${E}(width2) - width);
      if (depth1 == depth2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (height1 == height2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      if (width1 == width2) {
        dz1 = 0.5;
        dz2 = 0.5;
      }
      return (x111 * dx2 * dy2 * dz2 + x112 * dx2 * dy2 * dz1 + x121 * dx2 * dy1 *dz2 + x122 * dx2 * dy1 * dz1 +
              x211 * dx1 * dy2 * dz2 + x212 * dx1 * dy2 * dz1 + x221 * dx1 * dy1 *dz2 + x222 * dx1 * dy1 * dz1);
    }`},Oc=(c,h,_,S,V,n)=>{let l=c.dims,p=M0(n,h.axes,l.length),b=Sc(l,S,V,h.axes),C=S.slice();S.length===0&&(C=l.map((j,le)=>j===0?1:b[le]/j),h.keepAspectRatioPolicy!=="stretch"&&(b=Gc(l,C,h)));let E=Lr("output",c.dataType,b.length),v=rr("input",c.dataType,l.length),x=Le.size(b),L=l.length===b.length&&l.every((j,le)=>j===b[le]),W=h.coordinateTransformMode==="tf_crop_and_resize",te=h.extrapolationValue,$=v.type.value;return{name:"Resize",shaderCache:{hint:`${h.cacheKey}|${_}|${C.length>0?h.mode==="cubic"?C:C.length:""}|${V.length>0?V:""}|${p.length>0?p:""}|${L}|${h.mode==="nearest"?l.length:l}`,inputDependencies:["rank"]},getShaderSource:j=>`
      ${L?"":`
      ${Bu(h.coordinateTransformMode,$)};
      ${(()=>{switch(h.mode){case"nearest":return`
              ${Fc(v,l)};
              ${x0(h.nearestMode,_,$)};
              ${Tu(v,E,l,b,C.length,p.length,W)};
              `;case"linear":return`
              ${ql(E,l,b,C.length,p.length)};
              ${(()=>{if(l.length===2||l.length===4)return`${Pu(v,E,l,W,te)}`;if(l.length===3||l.length===5)return`${E0(v,E,l,W,te)}`;throw Error("Linear mode only supports input dims 2, 3, 4 and 5 are supported in linear mode.")})()};
            `;case"cubic":return`
            ${(()=>{if(l.length===2||l.length===4)return`${zc(v,E,l,b,C,p,h.cubicCoeffA,W,h.extrapolationValue,h.excludeOutside)}`;throw Error("Cubic mode only supports input dims 2 and 4 are supported in linear mode.")})()};
            `;default:throw Error("Invalid resize mode")}})()};
      `}
      ${j.registerUniform("output_size","u32").registerUniform("scales","f32",C.length).registerUniform("roi","f32",p.length).declareVariables(v,E)}
      ${j.mainStart()}
        ${j.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
        ${L?"output[global_idx] = input[global_idx];":`
        let output_indices = ${E.offsetToIndices("global_idx")};
        var input_indices: ${v.type.indices};
        ${(()=>{switch(h.mode){case"nearest":return`input_indices = calculateInputIndicesFromOutputIndices(output_indices);
                if (checkInputIndices(input_indices)) {
                  output[global_idx] = ${v.getByIndices("input_indices")};
                } else {
                  output[global_idx] = ${h.extrapolationValue};
                }`;case"linear":return`output[global_idx] = ${l.length===2||l.length===4?"bilinearInterpolation":"trilinearInterpolation"}(output_indices);`;case"cubic":return"output[global_idx] = bicubicInterpolation(output_indices);";default:throw Error(`Unsupported resize mode: ${h.mode}`)}})()};
`}
      }`,getRunData:()=>({outputs:[{dims:b,dataType:c.dataType}],dispatchGroup:{x:Math.ceil(x/64)},programUniforms:[{type:12,data:x},{type:1,data:C},{type:1,data:p},..._r(l,b)]})}},Qc=c=>{let h=c.customDataBuffer;return new Uint32Array(h,h.byteOffset,1)[0]},Nc=(c,h)=>{let _=[],S=[],V=[],n=Qc(c);if(h.antialias!==0)throw Error("Only default value (0) for Antialias attribute is supported");Kl(c.inputs,h,n,_,S,V),c.compute(Oc(c.inputs[0],h,n,_,S,V),{inputs:[0]})},Lc=c=>{let h=c.antialias,_=c.axes,S=c.coordinateTransformMode,V=c.cubicCoeffA,n=c.excludeOutside!==0,l=c.extrapolationValue,p=c.keepAspectRatioPolicy,b=c.mode,C=c.nearestMode===""?"simple":c.nearestMode;return Ae({antialias:h,axes:_,coordinateTransformMode:S,cubicCoeffA:V,excludeOutside:n,extrapolationValue:l,keepAspectRatioPolicy:p,mode:b,nearestMode:C})}}),Ns=Me(()=>{Is(),Ps(),Ka(),zs(),Rc=(c,h)=>{let[_,S,V,n]=c,{numHeads:l,rotaryEmbeddingDim:p}=h;if(_.dims.length!==3&&_.dims.length!==4)throw new Error(`Input 'x' is expected to have 3 or 4 dimensions, got ${_.dims.length}`);if(!Le.areEqual(S.dims,[])&&!Le.areEqual(S.dims,[1])&&S.dims.length!==2)throw new Error(`Input 'position_ids' is expected to have 0, 1, or 2 dimensions, got ${S.dims.length}`);if(V.dims.length!==2)throw new Error(`Input 'cos_cache' is expected to have 2 dimensions, got ${V.dims.length}`);if(n.dims.length!==2)throw new Error(`Input 'sin_cache' is expected to have 2 dimensions, got ${n.dims.length}`);if(!Le.areEqual(V.dims,n.dims))throw new Error("Inputs 'cos_cache' and 'sin_cache' are expected to have the same shape");if(p>0&&l===0)throw new Error("num_heads must be provided if rotary_embedding_dim is specified");let b=_.dims[0],C=_.dims[_.dims.length-2],E=V.dims[0],v=Le.sizeFromDimension(_.dims,1)/C,x=p===0?2*V.dims[1]:v/l;if(p>x)throw new Error("rotary_embedding_dim must be less than or equal to head_size");if(S.dims.length===2){if(b!==S.dims[0])throw new Error(`Input 'position_ids' dimension 0 should be of size batch_size, got ${S.dims[0]}`);if(C!==S.dims[1])throw new Error(`Input 'position_ids' dimension 1 should be of size sequence_length, got ${S.dims[1]}`)}if(x/2!==V.dims[1]&&p/2!==V.dims[1])throw new Error(`Input 'cos_cache' dimension 1 should be same as head_size / 2 or rotary_embedding_dim / 2, got ${V.dims[1]}`);if(C>E)throw new Error("Updating cos_cache and sin_cache in RotaryEmbedding is not currently supported")},jc=(c,h)=>{let{interleaved:_,numHeads:S,rotaryEmbeddingDim:V,scale:n}=h,l=c[0].dims[0],p=Le.sizeFromDimension(c[0].dims,1),b=c[0].dims[c[0].dims.length-2],C=p/b,E=c[2].dims[1],v=V===0?2*E:C/S,x=new Array(l,b,C/v,v-E),L=Le.computeStrides(x),W=[{type:1,data:n},{type:12,data:x},{type:12,data:L},...c[0].dims.length===3?new Array({type:12,data:[p,C,v,1]}):[],...c[0].dims.length===4?new Array({type:12,data:[p,v,b*v,1]}):[],..._r(c[0].dims,c[1].dims,c[2].dims,c[3].dims,c[0].dims)];return{name:"RotaryEmbedding",shaderCache:{hint:Ae({interleaved:_}).cacheKey,inputDependencies:["rank","rank","rank","rank"]},getShaderSource:te=>{let $=rr("input",c[0].dataType,c[0].dims.length),j=rr("position_ids",c[1].dataType,c[1].dims.length),le=rr("cos_cache",c[2].dataType,c[2].dims.length),me=rr("sin_cache",c[3].dataType,c[3].dims.length),_e=Lr("output",c[0].dataType,c[0].dims.length);return te.registerUniforms([{name:"scale",type:"f32"},{name:"global_shape",type:"u32",length:x.length},{name:"global_strides",type:"u32",length:L.length},{name:"input_output_strides",type:"u32",length:L.length}]),`
        ${te.declareVariables($,j,le,me,_e)}

        ${te.mainStart(hr)}
          let half_rotary_emb_dim = uniforms.${le.name}_shape[1];
          let bsnh = global_idx / uniforms.global_strides % uniforms.global_shape;
          let size = uniforms.global_shape[0] * uniforms.global_strides[0];
          ${te.guardAgainstOutOfBoundsWorkgroupSizes("size")}

          if (bsnh[3] < half_rotary_emb_dim) {
            let position_ids_idx =
                ${j.broadcastedIndicesToOffset("bsnh.xy",Lr("",j.type.tensor,2))};
            let position_id =
                u32(${j.getByOffset("position_ids_idx")}) + select(0, bsnh[1], position_ids_idx == 0);
            let i = dot(bsnh, uniforms.input_output_strides) + select(0, bsnh[3], ${_});
            let j = i + select(half_rotary_emb_dim, 1, ${_});
            let re = ${$.getByOffset("i")} * ${le.get("position_id","bsnh[3]")} -
                ${$.getByOffset("j")} * ${me.get("position_id","bsnh[3]")};
            ${_e.setByOffset("i","re")}
            let im = ${$.getByOffset("i")} * ${me.get("position_id","bsnh[3]")} +
                ${$.getByOffset("j")} * ${le.get("position_id","bsnh[3]")};
            ${_e.setByOffset("j","im")}
          } else {
            let k = dot(bsnh, uniforms.input_output_strides) + half_rotary_emb_dim;
            ${_e.setByOffset("k",$.getByOffset("k"))}
          }
        }`},getRunData:()=>({outputs:[{dims:c[0].dims,dataType:c[0].dataType}],dispatchGroup:{x:Math.ceil(Le.size(x)/hr)},programUniforms:W})}},B0=(c,h)=>{Rc(c.inputs,h),c.compute(jc(c.inputs,h))}}),ca=Me(()=>{Is(),Ps(),zs(),Vc=c=>{if(!c||c.length<3)throw new Error("layerNorm requires at least 3 inputs.");let h=c[0],_=c[1],S=c[2];if(h.dataType!==_.dataType||h.dataType!==S.dataType)throw new Error("All inputs must have the same data type");if(h.dims.length!==3&&h.dims.length!==2)throw new Error("Input must be 2D or 3D");if(_.dims.length!==3&&_.dims.length!==2)throw new Error("Skip must be 2D or 3D");let V=h.dims[h.dims.length-1],n=h.dims[h.dims.length-2];if(_.dims[_.dims.length-1]!==V)throw new Error("Skip must have the same hidden size as input");if(_.dims[_.dims.length-2]!==n)throw new Error("Skip must have the same sequence length as input");if(S.dims.length!==1)throw new Error("Gamma must be 1D");if(S.dims[S.dims.length-1]!==V)throw new Error("Gamma must have the same hidden size as input");if(c.length>3){let l=c[3];if(l.dims.length!==1)throw new Error("Beta must be 1D");if(l.dims[l.dims.length-1]!==V)throw new Error("Beta must have the same hidden size as input")}if(c.length>4){let l=c[4];if(l.dims.length!==1)throw new Error("Bias must be 1D");if(l.dims[l.dims.length-1]!==V)throw new Error("Bias must have the same hidden size as input")}},Wc=(c,h,_,S)=>{let V=h.simplified,n=c[0].dims,l=Le.size(n),p=n,b=l,C=n.slice(-1)[0],E=S?n.slice(0,-1).concat(1):[],v=!V&&c.length>3,x=c.length>4,L=S&&_>1,W=S&&_>2,te=_>3,$=64,j=gs(C),le=[{type:12,data:b},{type:12,data:j},{type:12,data:C},{type:1,data:h.epsilon}],me=[{dims:p,dataType:c[0].dataType}];return _>1&&me.push({dims:E,dataType:1}),_>2&&me.push({dims:E,dataType:1}),_>3&&me.push({dims:n,dataType:c[0].dataType}),{name:"SkipLayerNormalization",shaderCache:{hint:`${j};${L};${W};${te}`,inputDependencies:c.map((_e,Ee)=>"type")},getShaderSource:_e=>{let Ee=[rr("x",c[0].dataType,c[0].dims,j),rr("skip",c[1].dataType,c[1].dims,j),rr("gamma",c[2].dataType,c[2].dims,j)];v&&Ee.push(rr("beta",c[3].dataType,c[3].dims,j)),x&&Ee.push(rr("bias",c[4].dataType,c[4].dims,j)),Ee.push(Lr("output",c[0].dataType,p,j)),L&&Ee.push(Lr("mean_output",1,E)),W&&Ee.push(Lr("inv_std_output",1,E)),te&&Ee.push(Lr("input_skip_bias_sum",c[0].dataType,p,j));let Fe=Gr(c[0].dataType),Ye=Gr(1,j);return`

      ${_e.registerUniforms([{name:"output_size",type:"u32"},{name:"components",type:"u32"},{name:"hidden_size",type:"u32"},{name:"epsilon",type:"f32"}]).declareVariables(...Ee)}
      var<workgroup> sum_shared : array<${Ye}, 64>;
      var<workgroup> sum_squared_shared : array<${Ye}, 64>;

      ${_e.mainStart([$,1,1])}
        let ix = local_id.x;
        let iy = global_id.x / 64;

        let hidden_size_vectorized: u32 = uniforms.hidden_size / uniforms.components;
        var stride = hidden_size_vectorized / 64;
        let offset = ix * stride + iy * hidden_size_vectorized;
        let offset1d = stride * ix;
        if (ix == 63) {
          stride = hidden_size_vectorized - stride * ix;
        }
        for (var i: u32 = 0; i < stride; i++) {
          let skip_value = skip[offset + i];
          let bias_value = ${x?"bias[offset1d + i]":Fe+"(0.0)"};
          let input_value = x[offset + i];
          let value = input_value + skip_value + bias_value;
          ${te?"input_skip_bias_sum[offset + i] = value;":""}
          output[offset + i] = value;
          let f32_value = ${hs(Fe,j,"value")};
          sum_shared[ix] += f32_value;
          sum_squared_shared[ix] += f32_value * f32_value;
        }
        workgroupBarrier();

        var reduce_size : u32 = 64;
        for (var curr_size = reduce_size >> 1;  curr_size > 0; curr_size = reduce_size >> 1) {
          reduce_size = curr_size + (reduce_size & 1);
          if (ix < curr_size) {
            sum_shared[ix] += sum_shared[ix + reduce_size];
            sum_squared_shared[ix] += sum_squared_shared[ix + reduce_size];
          }
          workgroupBarrier();
        }

        let sum = sum_shared[0];
        let square_sum = sum_squared_shared[0];
        let mean = ${Bs("sum",j)} / f32(uniforms.hidden_size);
        let inv_std_dev = inverseSqrt(${Bs("square_sum",j)} / f32(uniforms.hidden_size) ${V?"":"- mean * mean"} + uniforms.epsilon);
        ${L?"mean_output[global_idx] = mean;":""}
        ${W?"inv_std_output[global_idx] = inv_std_dev;":""}

        for (var i: u32 = 0; i < stride; i++) {
          output[offset + i] = (output[offset + i] ${V?"":`- ${Fe}(mean)`}) *
            ${Fe}(inv_std_dev) * gamma[offset1d + i]
            ${v?"+ beta[offset1d + i]":""};
        }
      }`},getRunData:()=>({outputs:me,dispatchGroup:{x:Math.ceil(b/C)},programUniforms:le})}},Aa=(c,h)=>{Vc(c.inputs);let _=[0];c.outputCount>1&&_.push(-3),c.outputCount>2&&_.push(-3),c.outputCount>3&&_.push(3),c.compute(Wc(c.inputs,h,c.outputCount,!1),{outputs:_})}}),pa=Me(()=>{Is(),Ps(),Ka(),zs(),Du=(c,h)=>{if(!c||c.length<1)throw new Error("too few inputs");if(h.axes.length!==0){if(h.axes.length!==h.starts.length||h.axes.length!==h.ends.length)throw new Error("axes, starts and ends must have the same length")}else if(h.starts.length!==h.ends.length)throw new Error("starts and ends must have the same length");c.slice(1).forEach((_,S)=>{if(c[S+1].dataType!==6&&c[S+1].dataType!==7)throw new Error(`Input ${S} must be an array of int32 or int64`)})},Zl=(c,h)=>{let _=[];if(c.length>h)if(c[h].dataType===7)c[h].getBigInt64Array().forEach(S=>_.push(Number(S)));else{if(c[h].dataType!==6)throw new Error(`Input ${h} must be an array of int32 or int64`);c[h].getInt32Array().forEach(S=>_.push(Number(S)))}return _},Uc=(c,h)=>{if(c.length>1){let _=Zl(c,1),S=Zl(c,2),V=Zl(c,3);return V.length===0&&(V=[...Array(c[0].dims.length).keys()]),Ae({starts:_,ends:S,axes:V})}return h},T0=(c,h,_,S,V)=>{let n=c;return c<0&&(n+=_[S[h]]),V[h]<0?Math.max(0,Math.min(n,_[S[h]]-1)):Math.max(0,Math.min(n,_[S[h]]))},wl=(c,h,_)=>`fn calculateInputIndices(output_indices: ${h.type.indices}) -> ${c.type.indices} {
          var input_indices: ${c.type.indices};
          var carry = 0u;
          for (var i = ${_.length}; i >= 0; i--) {
            let input_shape_i = ${Or("uniforms.input_shape","i",_.length)};
            let steps_i = ${Or("uniforms.steps","i",_.length)};
            let signs_i = ${Or("uniforms.signs","i",_.length)};
            let starts_i = ${Or("uniforms.starts","i",_.length)};
            var output_index = ${h.indicesGet("output_indices","i")};
            var input_index = output_index * steps_i + starts_i + carry;
            carry = input_index / input_shape_i;
            input_index = input_index % input_shape_i;
            if (signs_i < 0) {
              input_index = input_shape_i - input_index - 1u + starts_i;
            }
            ${c.indicesSet("input_indices","i","input_index")};
          }
          return input_indices;
      }`,la=(c,h)=>{let _=c[0].dims,S=Le.size(_),V=h.axes.length>0?Le.normalizeAxes(h.axes,_.length):[...Array(_.length).keys()],n=Zl(c,4);n.forEach($=>$!==0||(()=>{throw new Error("step cannot be 0")})),n.length===0&&(n=Array(V.length).fill(1));let l=h.starts.map(($,j)=>T0($,j,_,V,n)),p=h.ends.map(($,j)=>T0($,j,_,V,n));if(V.length!==l.length||V.length!==p.length)throw new Error("start, ends and axes should have the same number of elements");if(V.length!==_.length)for(let $=0;$<_.length;++$)V.includes($)||(l.splice($,0,0),p.splice($,0,_[$]),n.splice($,0,1));let b=n.map($=>Math.sign($));n.forEach(($,j,le)=>{if($<0){let me=(p[j]-l[j])/$,_e=l[j],Ee=_e+me*n[j];l[j]=Ee,p[j]=_e,le[j]=-$}});let C=_.slice(0);V.forEach(($,j)=>{C[$]=Math.ceil((p[$]-l[$])/n[$])});let E={dims:C,dataType:c[0].dataType},v=Lr("output",c[0].dataType,C.length),x=rr("input",c[0].dataType,c[0].dims.length),L=Le.size(C),W=[{name:"outputSize",type:"u32"},{name:"starts",type:"u32",length:l.length},{name:"signs",type:"i32",length:b.length},{name:"steps",type:"u32",length:n.length}],te=[{type:12,data:L},{type:12,data:l},{type:6,data:b},{type:12,data:n},..._r(c[0].dims,C)];return{name:"Slice",shaderCache:{hint:`${b.length}_${l.length}_${n.length}`,inputDependencies:["rank"]},getShaderSource:$=>`
      ${$.registerUniforms(W).declareVariables(x,v)}
        ${wl(x,v,_)}
        ${$.mainStart()}
          ${$.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
          let output_indices = ${v.offsetToIndices("global_idx")};
          let input_indices = calculateInputIndices(output_indices);
          ${v.setByOffset("global_idx",x.getByIndices("input_indices"))}
      }`,getRunData:()=>({outputs:[E],dispatchGroup:{x:Math.ceil(S/64)},programUniforms:te})}},Hc=(c,h)=>{Du(c.inputs,h);let _=Uc(c.inputs,h);c.compute(la(c.inputs,_),{inputs:[0]})},Yc=c=>{let h=c.starts,_=c.ends,S=c.axes;return Ae({starts:h,ends:_,axes:S})}}),nn=Me(()=>{Is(),Ps(),Ka(),Vo(),zs(),P0=c=>{if(!c||c.length!==1)throw new Error("Softmax op requires 1 input.")},Jl=(c,h)=>{let _,S=c.inputs[0],V=S.dims,n=Le.size(V),l=V.length,p=Le.normalizeAxis(h.axis,l),b=p<V.length-1,C=[];b?(C=Array.from({length:l},(Ee,Fe)=>Fe),C[p]=l-1,C[l-1]=p,_=c.compute(Us(S,C),{inputs:[S],outputs:[-1]})[0]):_=S;let E=_.dims,v=E[l-1],x=n/v,L=gs(v),W=v/L,te=64;x===1&&(te=256);let $=rr("x",_.dataType,_.dims,L),j=Lr("result",_.dataType,_.dims,L),le=$.type.value,me=Gr(_.dataType)==="f32"?`var threadMax = ${le}(-3.402823e+38f);`:`var threadMax = ${le}(-65504.0h);`,_e=c.compute({name:"Softmax",shaderCache:{hint:`${L};${te}`,inputDependencies:["type"]},getRunData:()=>({outputs:[{dims:E,dataType:_.dataType}],dispatchGroup:{x},programUniforms:[{type:6,data:W}]}),getShaderSource:Ee=>`
      var<workgroup> rowMaxShared : ${le};
      var<workgroup> rowSumShared : ${le};
      var<workgroup> threadShared : array<${le}, ${te}>;

      fn getValue(row: i32, col: i32, row_stride: i32) -> ${le} {
        let index = row * row_stride + col;
        return x[index];
      }

      fn setValue(row: i32, col: i32, row_stride: i32, value: ${le}) {
        let index = row * row_stride + col;
        result[index] = value;
      }
      ${Ee.registerUniform("packedCols","i32").declareVariables($,j)}
      ${Ee.mainStart(te)}
        let gindex = i32(global_idx);
        let lindex = i32(local_idx);
        const wg = ${te};
        let row = gindex / wg;
        let cols = uniforms.packedCols;
        let row_stride : i32 = uniforms.packedCols;

        // find the rows max
        ${me}
        for (var col = lindex; col < cols; col += wg) {
          let value = getValue(row, col, row_stride);
          threadMax = max(threadMax, value);
        }
        if (lindex < cols) {
          threadShared[lindex] = threadMax;
        }
        workgroupBarrier();

        var reduceSize = min(cols, wg);
        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {
          reduceSize = currSize + (reduceSize & 1);
          if (lindex < currSize) {
            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowMaxShared = ${le}(${((Fe,Ye)=>Ye===4?`max(max(${Fe}.x, ${Fe}.y), max(${Fe}.z, ${Fe}.w))`:Ye===2?`max(${Fe}.x, ${Fe}.y)`:Ye===3?`max(max(${Fe}.x, ${Fe}.y), ${Fe}.z)`:Fe)("threadShared[0]",L)});
        }
        workgroupBarrier();

        // find the rows sum
        var threadSum = ${le}(0.0);
        for (var col = lindex; col < cols; col += wg) {
          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);
          threadSum += subExp;
        }
        threadShared[lindex] = threadSum;
        workgroupBarrier();

        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {
          if (lindex < currSize) {
            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowSumShared = ${le}(${Bs("threadShared[0]",L)});
        }
        workgroupBarrier();

        // calculate final value for each element in the row
        for (var col = lindex; col < cols; col += wg) {
          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;
          setValue(row, col, row_stride, value);
        }
      }`},{inputs:[_],outputs:[b?-1:0]})[0];b&&c.compute(Us(_e,C),{inputs:[_e]})},Su=(c,h)=>{P0(c.inputs),Jl(c,h)},D0=c=>Ae({axis:c.axis})}),ha=Me(()=>{Is(),Ps(),zs(),$l=c=>Array.from(c.getBigInt64Array(),Number),S0=c=>{if(!c||c.length!==2)throw new Error("Tile requires 2 inputs.");if(c[0].dataType!==1&&c[0].dataType!==10&&c[0].dataType!==6&&c[0].dataType!==12)throw new Error("Tile only support float, float16, int32, and uint32 data types");if(c[1].dataType!==7)throw new Error("Tile `repeats` input should be of int64 data type");if(c[1].dims.length!==1)throw new Error("Tile `repeats` input should be 1-D");if($l(c[1]).length!==c[0].dims.length)throw new Error("Tile `repeats` input should have same number of elements as rank of input data tensor")},Kc=(c,h)=>{let _=[];for(let S=0;S<c.length;++S)_.push(c[S]*h[S]);return _},G0=(c,h)=>{let _=c[0].dims,S=h??$l(c[1]),V=Kc(_,S),n=Le.size(V),l=c[0].dataType,p=rr("input",l,_.length),b=Lr("output",l,V.length);return{name:"Tile",shaderCache:{hint:`${S}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:V,dataType:c[0].dataType}],dispatchGroup:{x:Math.ceil(n/64)},programUniforms:[{type:12,data:n},..._r(c[0].dims,V)]}),getShaderSource:C=>`
      const inputShape = ${p.indices(..._)};
      ${C.registerUniform("output_size","u32").declareVariables(p,b)}
      ${C.mainStart()}
      ${C.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let output_indices = ${b.offsetToIndices("global_idx")};
      var input_indices: ${p.type.indices};
      for (var i = 0; i < ${_.length}; i++) {
        let input_dim_i = ${p.indicesGet("uniforms.input_shape","i")};
        let input_dim_value = ${b.indicesGet("output_indices","i")}  % input_dim_i;

        ${p.indicesSet("input_indices","i","input_dim_value")}
      }
      ${b.setByOffset("global_idx",p.getByIndices("input_indices"))}
    }`}},Gu=c=>{S0(c.inputs),c.compute(G0(c.inputs),{inputs:[0]})}}),wa=Me(()=>{Is(),Ps(),zs(),qc=(c,h,_,S,V)=>{let n,l=Lr("output_data",V,_.length,4),p=rr("a_data",h[1].dataType,h[1].dims.length,4),b=rr("b_data",h[2].dataType,h[2].dims.length,4),C=rr("c_data",h[0].dataType,h[0].dims.length,4),E=(v,x,L)=>`select(${x}, ${v}, ${L})`;if(S){let v=(x,L,W="")=>{let te=`a_data[index_a${L}][component_a${L}]`,$=`b_data[index_b${L}][component_b${L}]`,j=`bool(c_data[index_c${L}] & (0xffu << (component_c${L} * 8)))`;return`
            let output_indices${L} = ${l.offsetToIndices(`global_idx * 4u + ${L}u`)};
            let offset_a${L} = ${p.broadcastedIndicesToOffset(`output_indices${L}`,l)};
            let offset_b${L} = ${b.broadcastedIndicesToOffset(`output_indices${L}`,l)};
            let offset_c${L} = ${C.broadcastedIndicesToOffset(`output_indices${L}`,l)};
            let index_a${L} = offset_a${L} / 4u;
            let index_b${L} = offset_b${L} / 4u;
            let index_c${L} = offset_c${L} / 4u;
            let component_a${L} = offset_a${L} % 4u;
            let component_b${L} = offset_b${L} % 4u;
            let component_c${L} = offset_c${L} % 4u;
            ${x}[${L}] = ${W}(${E(te,$,j)});
          `};n=V===9?`
            var data = vec4<u32>(0);
            ${v("data",0,"u32")}
            ${v("data",1,"u32")}
            ${v("data",2,"u32")}
            ${v("data",3,"u32")}
            output_data[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:`
            ${v("output_data[global_idx]",0)}
            ${v("output_data[global_idx]",1)}
            ${v("output_data[global_idx]",2)}
            ${v("output_data[global_idx]",3)}
          `}else n=l.setByOffset("global_idx",E(p.getByOffset("global_idx"),b.getByOffset("global_idx"),C.getByOffset("global_idx")));return`
        ${c.registerUniform("vec_size","u32").declareVariables(C,p,b,l)}
        ${c.mainStart()}
        ${c.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${n}
      }`},F0=c=>{let h=c[1].dims,_=c[2].dims,S=c[0].dims,V=c[1].dataType,n=!(Le.areEqual(h,_)&&Le.areEqual(_,S)),l=h,p=Le.size(h);if(n){let C=at.calcShape(at.calcShape(h,_,!1),S,!1);if(!C)throw new Error("Can't perform where op on the given tensors");l=C,p=Le.size(l)}let b=Math.ceil(p/4);return{name:"Where",shaderCache:{inputDependencies:["rank","rank","rank"]},getShaderSource:C=>qc(C,c,l,n,V),getRunData:()=>({outputs:[{dims:l,dataType:V}],dispatchGroup:{x:Math.ceil(p/64/4)},programUniforms:[{type:12,data:b},..._r(S,h,_,l)]})}},z0=c=>{c.compute(F0(c.inputs))}}),qa=Me(()=>{Uu(),W0(),td(),Hu(),Yu(),rd(),Ku(),Qs(),Bn(),he(),Te(),st(),Qt(),Jt(),$t(),ie(),ke(),Ue(),yt(),Nt(),cr(),mr(),br(),Cr(),Pr(),Rt(),Zr(),ms(),Ur(),rs(),as(),V0(),xs(),Ns(),ca(),pa(),nn(),Yt(),ha(),Vo(),U0(),wa(),Fu=new Map([["Abs",[MA]],["Acos",[ci]],["Acosh",[EA]],["Add",[ba]],["ArgMax",[tl,Xo]],["ArgMin",[Ji,Xo]],["Asin",[mn]],["Asinh",[bi]],["Atan",[Za]],["Atanh",[Pi]],["Attention",[rl]],["AveragePool",[Wl,Mc]],["BatchNormalization",[nl]],["BiasAdd",[ol]],["BiasSplitGelu",[gn]],["Cast",[BA,Do]],["Ceil",[Ta]],["Clip",[Go]],["Concat",[mo,dl]],["Conv",[Ft,qe]],["ConvTranspose",[Hs,Yr]],["Cos",[co]],["Cosh",[$o]],["CumSum",[ga,fa]],["DepthToSpace",[Ha,Ya]],["DequantizeLinear",[k0,Hl]],["Div",[zA]],["Einsum",[ro,wo]],["Elu",[uo,un]],["Equal",[Gi]],["Erf",[Al]],["Exp",[TA]],["Expand",[Io]],["FastGelu",[$0]],["Floor",[eA]],["FusedConv",[Ft,qe]],["Gather",[tc,ec]],["GatherElements",[Fl,pu]],["GatherBlockQuantized",[sc,c0]],["GatherND",[i0,o0]],["Gelu",[tA]],["Gemm",[Ac,oc]],["GlobalAveragePool",[C0,Ec]],["GlobalMaxPool",[Bc,vu]],["Greater",[OA]],["GreaterOrEqual",[wi]],["GridSample",[uc,d0]],["GroupQueryAttention",[Cu]],["HardSigmoid",[Ra,sA]],["InstanceNormalization",[wu]],["LayerNormalization",[wc]],["LeakyRelu",[Di,un]],["Less",[ul]],["LessOrEqual",[di]],["Log",[po]],["MatMul",[ku]],["MatMulNBits",[kc,_u]],["MaxPool",[w0,yo]],["Mul",[ho]],["MultiHeadAttention",[jo,gc]],["Neg",[ea]],["Not",[Fo]],["Pad",[hA]],["Pow",[cl]],["QuickGelu",[GA,un]],["Range",[Dc]],["Reciprocal",[PA]],["ReduceMin",[Zi]],["ReduceMean",[vA]],["ReduceMax",[Vi]],["ReduceSum",[ia]],["ReduceProd",[qo]],["ReduceL1",[Ko]],["ReduceL2",[En]],["ReduceLogSum",[el]],["ReduceLogSumExp",[Ga]],["ReduceSumSquare",[xA]],["Relu",[rA]],["Resize",[Nc,Lc]],["RotaryEmbedding",[B0]],["ScatterND",[Cl,Mu]],["Sigmoid",[Si]],["Sin",[DA]],["Sinh",[aA]],["Slice",[Hc,Yc]],["SkipLayerNormalization",[Aa]],["Split",[bu,mc]],["Sqrt",[go]],["Softmax",[Su,D0]],["Sub",[oA]],["Tan",[On]],["Tanh",[nA]],["ThresholdedRelu",[fo,un]],["Tile",[Gu]],["Transpose",[Ua,Ir]],["Where",[z0]]])}),Nn=Me(()=>{ct(),_o(),zs(),zu=class{constructor(c){this.backend=c,this.repo=new Map,this.attributesBound=!1}getArtifact(c){return this.repo.get(c)}setArtifact(c,h){this.repo.set(c,h)}run(c,h,_,S,V){Re(c.programInfo.name);let n=this.backend.device,l=this.backend.getComputePassEncoder();this.backend.writeTimestamp(2*this.backend.pendingDispatchNumber);let p=[];for(let C of h)p.push({binding:p.length,resource:{buffer:C.buffer}});for(let C of _)p.push({binding:p.length,resource:{buffer:C.buffer}});V&&p.push({binding:p.length,resource:V});let b=n.createBindGroup({layout:c.computePipeline.getBindGroupLayout(0),entries:p,label:c.programInfo.name});if(this.backend.sessionStatus==="capturing"){let C={kernelId:this.backend.currentKernelId,computePipeline:c.computePipeline,bindGroup:b,dispatchGroup:S};this.backend.capturedCommandList.get(this.backend.currentSessionId).push(C)}l.setPipeline(c.computePipeline),l.setBindGroup(0,b),l.dispatchWorkgroups(...S),this.backend.writeTimestamp(2*this.backend.pendingDispatchNumber+1),this.backend.pendingDispatchNumber++,(this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber||this.backend.queryType==="at-passes")&&this.backend.endComputePass(),this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber&&this.backend.flush(),Ke(c.programInfo.name)}dispose(){}build(c,h){Re(c.name);let _=this.backend.device,S=[];[{feature:"shader-f16",extension:"f16"},{feature:"subgroups",extension:"subgroups"},{feature:"subgroups-f16",extension:"subgroups_f16"}].forEach(C=>{_.features.has(C.feature)&&S.push(`enable ${C.extension};`)});let V=Js(h,this.backend.device.limits),n=c.getShaderSource(V),l=`${S.join(`
`)}
${V.additionalImplementations}
${n}`,p=_.createShaderModule({code:l,label:c.name});ys("verbose",()=>`[WebGPU] ${c.name} shader code: ${l}`);let b=_.createComputePipeline({compute:{module:p,entryPoint:"main"},layout:"auto",label:c.name});return Ke(c.name),{programInfo:c,computePipeline:b,uniformVariablesInfo:V.variablesInfo}}normalizeDispatchGroupSize(c){let h=typeof c=="number"?c:c.x,_=typeof c=="number"?1:c.y||1,S=typeof c=="number"?1:c.z||1,V=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(h<=V&&_<=V&&S<=V)return[h,_,S];let n=h*_*S,l=Math.ceil(Math.sqrt(n));if(l>V){if(l=Math.ceil(Math.cbrt(n)),l>V)throw new Error("Total dispatch size exceeds WebGPU maximum.");return[l,l,l]}return[l,l,1]}}}),ua=Me(()=>{ct(),Is(),_o(),ou(),Vu(),qa(),Nn(),Xc=(c,h)=>{if(h.length!==c.length)throw new Error(`inputDependencies length ${h.length} is not equal to inputTensors length ${c.length}.`);let _=[];for(let S=0;S<c.length;++S){let V=c[S].dataType;switch(h[S]){case"none":_.push("");break;case"type":_.push(`${V}`);break;case"rank":{let n=c[S].dims.length;_.push(`${V};${n}`);break}case"dims":{let n=c[S].dims.join(",");_.push(`${V};${n}`);break}default:throw new Error(`unsupported input dependency: ${h[S]}`)}}return _.join("|")},Ou=(c,h,_)=>{var V,n;let S=c.name;return(V=c.shaderCache)!=null&&V.hint&&(S+="["+c.shaderCache.hint+"]"),S+=":"+_+`:${Xc(h,((n=c.shaderCache)==null?void 0:n.inputDependencies)??new Array(h.length).fill("dims"))}`,S},Zc=class{constructor(c){c&&(this.architecture=c.architecture,this.vendor=c.vendor)}isArchitecture(c){return this.architecture===c}isVendor(c){return this.vendor===c}},Jc=class{constructor(c){this.subgroupsSupported=c.features.has("subgroups"),this.subgroupsF16Supported=c.features.has("subgroups");let h=c.limits;this.subgroupsSupported&&h.minSubgroupSize&&h.maxSubgroupSize?this.subgroupSizeRange=[h.minSubgroupSize,h.maxSubgroupSize]:this.subgroupSizeRange=void 0}},$c=class{constructor(){this.currentSessionId=null,this.currentKernelId=null,this.commandEncoder=null,this.computePassEncoder=null,this.maxDispatchNumber=16,this.pendingDispatchNumber=0,this.pendingKernels=[],this.pendingQueries=new Map,this.sessionStatus="default",this.capturedCommandList=new Map,this.capturedPendingKernels=new Map,this.sessionExternalDataMapping=new Map}get currentKernelCustomData(){if(this.currentKernelId===null)throw new Error("currentKernelCustomData(): currentKernelId is null. (should not happen)");let c=this.kernelCustomData.get(this.currentKernelId);return c||(c={},this.kernelCustomData.set(this.currentKernelId,c)),c}async initialize(c,h){this.env=c;let _=[],S={requiredLimits:{maxComputeWorkgroupStorageSize:h.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:h.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:h.limits.maxStorageBufferBindingSize,maxBufferSize:h.limits.maxBufferSize,maxComputeInvocationsPerWorkgroup:h.limits.maxComputeInvocationsPerWorkgroup,maxComputeWorkgroupSizeX:h.limits.maxComputeWorkgroupSizeX,maxComputeWorkgroupSizeY:h.limits.maxComputeWorkgroupSizeY,maxComputeWorkgroupSizeZ:h.limits.maxComputeWorkgroupSizeZ},requiredFeatures:_},V=n=>h.features.has(n)&&_.push(n)&&!0;V("chromium-experimental-timestamp-query-inside-passes")||V("timestamp-query"),V("shader-f16"),V("subgroups")&&V("subgroups-f16"),this.device=await h.requestDevice(S),this.deviceInfo=new Jc(this.device),this.adapterInfo=new Zc(h.info||await h.requestAdapterInfo()),this.gpuDataManager=wt(this),this.programManager=new zu(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,ri(c.logLevel,!!c.debug),this.device.onuncapturederror=n=>{n.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${n.error.message}`)},Object.defineProperty(this.env.webgpu,"device",{value:this.device,writable:!1,enumerable:!0,configurable:!1}),Object.defineProperty(this.env.webgpu,"adapter",{value:h,writable:!1,enumerable:!0,configurable:!1}),this.setQueryType()}dispose(){typeof this.querySet<"u"&&this.querySet.destroy(),this.gpuDataManager.dispose()}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder()),this.commandEncoder}getComputePassEncoder(){if(!this.computePassEncoder){let c=this.getCommandEncoder(),h={};this.queryType==="at-passes"&&(h.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:2*this.pendingDispatchNumber,endOfPassWriteIndex:2*this.pendingDispatchNumber+1}),this.computePassEncoder=c.beginComputePass(h)}return this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){if(!this.commandEncoder)return;let c;Re(),this.endComputePass(),this.queryType!=="none"&&(this.commandEncoder.resolveQuerySet(this.querySet,0,2*this.pendingDispatchNumber,this.queryResolveBuffer,0),c=this.device.createBuffer({size:2*this.pendingDispatchNumber*8,usage:GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST}),this.pendingQueries.set(c,this.pendingKernels),this.pendingKernels=[],this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,c,0,2*this.pendingDispatchNumber*8)),this.device.queue.submit([this.commandEncoder.finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0,this.queryType!=="none"&&c.mapAsync(GPUMapMode.READ).then(()=>{var S;let h=new BigUint64Array(c.getMappedRange()),_=this.pendingQueries.get(c);for(let V=0;V<h.length/2;V++){let n=_[V],l=n.kernelId,p=this.kernels.get(l),b=p.kernelType,C=p.kernelName,E=n.programName,v=n.inputTensorViews,x=n.outputTensorViews,L=h[2*V],W=h[2*V+1];typeof this.queryTimeBase>"u"&&(this.queryTimeBase=L);let te=Number(L-this.queryTimeBase),$=Number(W-this.queryTimeBase);if(!Number.isSafeInteger(te)||!Number.isSafeInteger($))throw new RangeError("incorrect timestamp range");if((S=this.env.webgpu.profiling)!=null&&S.ondata)this.env.webgpu.profiling.ondata({version:1,inputsMetadata:v.map(j=>({dims:j.dims,dataType:Jn(j.dataType)})),outputsMetadata:x.map(j=>({dims:j.dims,dataType:Jn(j.dataType)})),kernelId:l,kernelType:b,kernelName:C,programName:E,startTime:te,endTime:$});else{let j="";v.forEach((me,_e)=>{j+=`input[${_e}]: [${me.dims}] | ${Jn(me.dataType)}, `});let le="";x.forEach((me,_e)=>{le+=`output[${_e}]: [${me.dims}] | ${Jn(me.dataType)}, `}),console.log(`[profiling] kernel "${l}|${b}|${C}|${E}" ${j}${le}execution time: ${$-te} ns`)}Ve("GPU",`${E}::${L}::${W}`)}c.unmap(),this.pendingQueries.delete(c)}),Ke()}run(c,h,_,S,V,n){Re(c.name);let l=[];for(let le=0;le<h.length;++le){let me=h[le].data;if(me===0)continue;let _e=this.gpuDataManager.get(me);if(!_e)throw new Error(`no GPU data for input: ${me}`);l.push(_e)}let{outputs:p,dispatchGroup:b,programUniforms:C}=c.getRunData(h),E=_.length===0?p.map((le,me)=>me):_;if(E.length!==p.length)throw new Error(`Output size ${E.length} must be equal to ${p.length}.`);let v,x=[],L=[];for(let le=0;le<p.length;++le){if(!Number.isInteger(E[le])||E[le]<-3||E[le]>=n)throw new Error(`Invalid output index: ${E[le]}`);if(E[le]===-3)continue;let me=E[le]===-1,_e=E[le]===-2,Ee=me||_e?V(p[le].dataType,p[le].dims):S(E[le],p[le].dataType,p[le].dims);if(x.push(Ee),Ee.data===0)continue;let Fe=this.gpuDataManager.get(Ee.data);if(!Fe)throw new Error(`no GPU data for output: ${Ee.data}`);if(me&&this.temporaryData.push(Fe),_e){let Ye=this.kernelPersistentData.get(this.currentKernelId);Ye||(Ye=[],this.kernelPersistentData.set(this.currentKernelId,Ye)),Ye.push(Fe)}L.push(Fe)}if(l.length!==h.length||L.length!==x.length){if(L.length===0)return Ke(c.name),x;throw new Error(`Program ${c.name} has zero-sized tensor(s) in inputs or outputs. This is not supported now.`)}if(C){let le=0,me=[];C.forEach(Ye=>{let dt=typeof Ye.data=="number"?[Ye.data]:Ye.data;if(dt.length===0)return;let mt,xt,jt=Ye.type===10?2:4;Ye.type===10?(xt=dt.length>4?16:dt.length>2?8:dt.length*jt,mt=dt.length>4?16:jt*dt.length):(xt=dt.length<=2?dt.length*jt:16,mt=16),le=Math.ceil(le/xt)*xt,me.push(le);let Gt=Ye.type===10?8:4;le+=dt.length>4?Math.ceil(dt.length/Gt)*mt:dt.length*jt});let _e=16;le=Math.ceil(le/_e)*_e;let Ee=new ArrayBuffer(le);C.forEach((Ye,dt)=>{let mt=me[dt],xt=typeof Ye.data=="number"?[Ye.data]:Ye.data;if(Ye.type===6)new Int32Array(Ee,mt,xt.length).set(xt);else if(Ye.type===12)new Uint32Array(Ee,mt,xt.length).set(xt);else if(Ye.type===10)new Uint16Array(Ee,mt,xt.length).set(xt);else{if(Ye.type!==1)throw new Error(`Unsupported uniform type: ${Jn(Ye.type)}`);new Float32Array(Ee,mt,xt.length).set(xt)}});let Fe=this.gpuDataManager.create(le,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.device.queue.writeBuffer(Fe.buffer,0,Ee,0,le),this.gpuDataManager.release(Fe.id),v={offset:0,size:le,buffer:Fe.buffer}}let W=this.programManager.normalizeDispatchGroupSize(b),te=W[1]===1&&W[2]===1,$=Ou(c,h,te),j=this.programManager.getArtifact($);if(j||(j=this.programManager.build(c,W),this.programManager.setArtifact($,j),ys("info",()=>`[artifact] key: ${$}, programName: ${c.name}`)),C&&j.uniformVariablesInfo){if(C.length!==j.uniformVariablesInfo.length)throw new Error(`Uniform variables count mismatch: expect ${j.uniformVariablesInfo.length}, got ${C.length} in program "${j.programInfo.name}".`);for(let le=0;le<C.length;le++){let me=C[le],_e=me.type,Ee=typeof me.data=="number"?1:me.data.length,[Fe,Ye]=j.uniformVariablesInfo[le];if(_e!==Fe||Ee!==Ye)throw new Error(`Uniform variable ${le} mismatch: expect type ${Fe} with size ${Ye}, got type ${_e} with size ${Ee} in program "${j.programInfo.name}".`)}}if(ys("info",()=>`[ProgramManager] run "${c.name}" (key=${$}) with ${W[0]}x${W[1]}x${W[2]}`),this.queryType!=="none"||this.sessionStatus==="capturing"){let le={kernelId:this.currentKernelId,programName:j.programInfo.name,inputTensorViews:h,outputTensorViews:x};this.pendingKernels.push(le),this.sessionStatus==="capturing"&&this.capturedPendingKernels.get(this.currentSessionId).push(le)}return this.programManager.run(j,l,L,W,v),Ke(c.name),x}upload(c,h){this.gpuDataManager.upload(c,h)}memcpy(c,h){this.gpuDataManager.memcpy(c,h)}async download(c,h){await this.gpuDataManager.download(c,h)}alloc(c){return this.gpuDataManager.create(c).id}free(c){return this.gpuDataManager.release(c)}createKernel(c,h,_,S){let V=Fu.get(c);if(!V)throw new Error(`kernel not implemented: ${c}`);let n={kernelType:c,kernelName:S,kernelEntry:V[0],attributes:[V[1],_]};this.kernels.set(h,n)}releaseKernel(c){let h=this.kernelPersistentData.get(c);if(h){for(let _ of h)this.gpuDataManager.release(_.id);this.kernelPersistentData.delete(c)}this.kernelCustomData.delete(c),this.kernels.delete(c)}computeKernel(c,h,_){let S=this.kernels.get(c);if(!S)throw new Error(`kernel not created: ${c}`);let V=S.kernelType,n=S.kernelName,l=S.kernelEntry,p=S.attributes;if(this.currentKernelId!==null)throw new Error(`kernel "[${V}] ${n}" is not allowed to be called recursively`);this.currentKernelId=c,p[0]&&(p[1]=p[0](p[1]),p[0]=void 0),ys("info",()=>`[WebGPU] Start to run kernel "[${V}] ${n}"...`);let b=this.env.debug;this.temporaryData=[];try{return b&&this.device.pushErrorScope("validation"),l(h,p[1]),0}catch(C){return _.push(Promise.resolve(`[WebGPU] Kernel "[${V}] ${n}" failed. ${C}`)),1}finally{b&&_.push(this.device.popErrorScope().then(C=>C?`GPU validation error for kernel "[${V}] ${n}": ${C.message}`:null));for(let C of this.temporaryData)this.gpuDataManager.release(C.id);this.temporaryData=[],this.currentKernelId=null}}registerBuffer(c,h,_,S){let V=this.sessionExternalDataMapping.get(c);V||(V=new Map,this.sessionExternalDataMapping.set(c,V));let n=V.get(h),l=this.gpuDataManager.registerExternalBuffer(_,S,n);return V.set(h,[l,_]),l}unregisterBuffers(c){let h=this.sessionExternalDataMapping.get(c);h&&(h.forEach(_=>this.gpuDataManager.unregisterExternalBuffer(_[0])),this.sessionExternalDataMapping.delete(c))}getBuffer(c){let h=this.gpuDataManager.get(c);if(!h)throw new Error(`no GPU data for buffer: ${c}`);return h.buffer}createDownloader(c,h,_){return async()=>{let S=await Qe(this,c,h);return qr(S.buffer,_)}}writeTimestamp(c){this.queryType==="inside-passes"&&this.computePassEncoder.writeTimestamp(this.querySet,c)}setQueryType(){var c;this.queryType="none",(((c=this.env.webgpu.profiling)==null?void 0:c.mode)==="default"||(typeof this.env.trace>"u"?this.env.wasm.trace:this.env.trace))&&(this.device.features.has("chromium-experimental-timestamp-query-inside-passes")?this.queryType="inside-passes":this.device.features.has("timestamp-query")&&(this.queryType="at-passes"),this.queryType!=="none"&&typeof this.querySet>"u"&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:2*this.maxDispatchNumber}),this.queryResolveBuffer=this.device.createBuffer({size:2*this.maxDispatchNumber*8,usage:GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE})))}captureBegin(){ys("info","captureBegin"),this.capturedCommandList.get(this.currentSessionId)||this.capturedCommandList.set(this.currentSessionId,[]),this.capturedPendingKernels.get(this.currentSessionId)||this.capturedPendingKernels.set(this.currentSessionId,[]),this.flush(),this.sessionStatus="capturing"}captureEnd(){ys("info","captureEnd"),this.flush(),this.sessionStatus="default"}replay(){ys("info","replay"),this.sessionStatus="replaying";let c=this.capturedCommandList.get(this.currentSessionId),h=this.capturedPendingKernels.get(this.currentSessionId),_=c.length;this.pendingKernels=[];for(let S=0;S<_;S++){let V=this.getComputePassEncoder(),n=c[S];this.writeTimestamp(2*this.pendingDispatchNumber),V.setPipeline(n.computePipeline),V.setBindGroup(0,n.bindGroup),V.dispatchWorkgroups(...n.dispatchGroup),this.writeTimestamp(2*this.pendingDispatchNumber+1),this.pendingDispatchNumber++,this.queryType!=="none"&&this.pendingKernels.push(h[S]),(this.pendingDispatchNumber>=this.maxDispatchNumber||this.queryType==="at-passes")&&this.endComputePass(),this.pendingDispatchNumber>=this.maxDispatchNumber&&this.flush()}this.flush(),this.sessionStatus="default"}onCreateSession(){this.gpuDataManager.onCreateSession()}onReleaseSession(c){this.unregisterBuffers(c),this.capturedCommandList.has(c)&&this.capturedCommandList.delete(c),this.capturedPendingKernels.has(c)&&this.capturedPendingKernels.delete(c),this.gpuDataManager.onReleaseSession(c)}onRunStart(c){this.currentSessionId=c,this.setQueryType()}}}),Ln=Me(()=>{_o(),eu=1,Qu=()=>eu++,tu=new Map([["float32",32],["float16",16],["int32",32],["uint32",32],["int64",64],["uint64",64],["int8",8],["uint8",8],["int4",4],["uint4",4]]),O0=(c,h)=>{let _=tu.get(c);if(!_)throw new Error("Unsupported data type.");return h.length>0?Math.ceil(h.reduce((S,V)=>S*V)*_/8):0},Q0=class{constructor(c){this.sessionId=c.sessionId,this.mlContext=c.context,this.mlTensor=c.tensor,this.dataType=c.dataType,this.tensorShape=c.shape}get tensor(){return this.mlTensor}get type(){return this.dataType}get shape(){return this.tensorShape}get byteLength(){return O0(this.dataType,this.tensorShape)}destroy(){ys("verbose",()=>"[WebNN] TensorWrapper.destroy"),this.mlTensor.destroy()}write(c){this.mlContext.writeTensor(this.mlTensor,c)}async read(c){return c?this.mlContext.readTensor(this.mlTensor,c):this.mlContext.readTensor(this.mlTensor)}canReuseTensor(c,h,_){return this.mlContext===c&&this.dataType===h&&this.tensorShape.length===_.length&&this.tensorShape.every((S,V)=>S===_[V])}},ru=class{constructor(c,h){this.tensorManager=c,this.wrapper=h}get tensorWrapper(){return this.wrapper}releaseTensor(){this.tensorWrapper&&(this.tensorManager.releaseTensor(this.tensorWrapper),this.wrapper=void 0)}async ensureTensor(c,h,_,S){if(this.wrapper){if(this.wrapper.canReuseTensor(c,h,_))return this.wrapper.tensor;if(S){if(this.wrapper.byteLength!==O0(h,_))throw new Error("Unable to copy data to tensor with different size.");this.activeUpload=new Uint8Array(await this.wrapper.read())}this.tensorManager.releaseTensor(this.wrapper)}let V=typeof MLTensorUsage>"u"?void 0:MLTensorUsage.READ|MLTensorUsage.WRITE;return this.wrapper=await this.tensorManager.getCachedTensor(h,_,V,!0,!0),S&&this.activeUpload&&(this.wrapper.write(this.activeUpload),this.activeUpload=void 0),this.wrapper.tensor}upload(c){if(this.wrapper){if(c.byteLength===this.wrapper.byteLength)return void this.wrapper.write(c);ys("verbose",()=>"Data size does not match tensor size. Releasing tensor."),this.releaseTensor()}this.activeUpload?this.activeUpload.set(c):this.activeUpload=new Uint8Array(c)}async download(c){if(this.activeUpload)return c?void(c instanceof ArrayBuffer?new Uint8Array(c).set(this.activeUpload):new Uint8Array(c.buffer,c.byteOffset,c.byteLength).set(this.activeUpload)):this.activeUpload.buffer;if(!this.wrapper)throw new Error("Tensor has not been created.");return c?this.wrapper.read(c):this.wrapper.read()}},su=class{constructor(c){this.backend=c,this.tensorTrackersById=new Map,this.freeTensors=[],this.externalTensors=new Set}reserveTensorId(){let c=Qu();return this.tensorTrackersById.set(c,new ru(this)),c}releaseTensorId(c){let h=this.tensorTrackersById.get(c);h&&(this.tensorTrackersById.delete(c),h.tensorWrapper&&this.releaseTensor(h.tensorWrapper))}async ensureTensor(c,h,_,S){ys("verbose",()=>`[WebNN] TensorManager.ensureTensor {tensorId: ${c}, dataType: ${h}, shape: ${_}, copyOld: ${S}}`);let V=this.tensorTrackersById.get(c);if(!V)throw new Error("Tensor not found.");return V.ensureTensor(this.backend.currentContext,h,_,S)}upload(c,h){let _=this.tensorTrackersById.get(c);if(!_)throw new Error("Tensor not found.");_.upload(h)}async download(c,h){ys("verbose",()=>`[WebNN] TensorManager.download {tensorId: ${c}, dstBuffer: ${h==null?void 0:h.byteLength}}`);let _=this.tensorTrackersById.get(c);if(!_)throw new Error("Tensor not found.");return _.download(h)}releaseTensorsForSession(c){for(let h of this.freeTensors)h.sessionId===c&&h.destroy();this.freeTensors=this.freeTensors.filter(h=>h.sessionId!==c)}registerTensor(c,h,_,S){let V=Qu(),n=new Q0({sessionId:this.backend.currentSessionId,context:c,tensor:h,dataType:_,shape:S});return this.tensorTrackersById.set(V,new ru(this,n)),this.externalTensors.add(n),V}async getCachedTensor(c,h,_,S,V){let n=this.backend.currentSessionId,l=this.backend.currentContext;for(let[b,C]of this.freeTensors.entries())if(C.canReuseTensor(l,c,h)){ys("verbose",()=>`[WebNN] Reusing tensor {dataType: ${c}, shape: ${h}}`);let E=this.freeTensors.splice(b,1)[0];return E.sessionId=n,E}ys("verbose",()=>`[WebNN] MLContext.createTensor {dataType: ${c}, shape: ${h}}`);let p=await l.createTensor({dataType:c,shape:h,dimensions:h,usage:_,writable:S,readable:V});return new Q0({sessionId:n,context:l,tensor:p,dataType:c,shape:h})}releaseTensor(c){this.externalTensors.has(c)&&this.externalTensors.delete(c),this.freeTensors.push(c)}},Nu=(...c)=>new su(...c)}),Ia=Me(()=>{Is(),bA(),ou(),Ln(),_o(),au=new Map([[1,"float32"],[10,"float16"],[6,"int32"],[12,"uint32"],[7,"int64"],[13,"uint64"],[22,"int4"],[21,"uint4"],[3,"int8"],[2,"uint8"],[9,"uint8"]]),N0=(c,h)=>{if(c===h)return!0;if(c===void 0||h===void 0)return!1;let _=Object.keys(c).sort(),S=Object.keys(h).sort();return _.length===S.length&&_.every((V,n)=>V===S[n]&&c[V]===h[V])},Lu=class{constructor(c){this.tensorManager=Nu(this),this.mlContextBySessionId=new Map,this.sessionIdsByMLContext=new Map,this.mlContextCache=[],ri(c.logLevel,!!c.debug)}get currentSessionId(){if(this.activeSessionId===void 0)throw new Error("No active session");return this.activeSessionId}onRunStart(c){this.activeSessionId=c}async createMLContext(c){if(c instanceof GPUDevice){let _=this.mlContextCache.findIndex(S=>S.gpuDevice===c);if(_!==-1)return this.mlContextCache[_].mlContext;{let S=await navigator.ml.createContext(c);return this.mlContextCache.push({gpuDevice:c,mlContext:S}),S}}if(c===void 0){let _=this.mlContextCache.findIndex(S=>S.options===void 0&&S.gpuDevice===void 0);if(_!==-1)return this.mlContextCache[_].mlContext;{let S=await navigator.ml.createContext();return this.mlContextCache.push({mlContext:S}),S}}let h=this.mlContextCache.findIndex(_=>N0(_.options,c));if(h!==-1)return this.mlContextCache[h].mlContext;{let _=await navigator.ml.createContext(c);return this.mlContextCache.push({options:c,mlContext:_}),_}}get currentContext(){let c=this.getMLContext(this.currentSessionId);if(!c)throw new Error(`No MLContext found for session ${this.currentSessionId}`);return c}registerMLContext(c,h){this.mlContextBySessionId.set(c,h);let _=this.sessionIdsByMLContext.get(h);_||(_=new Set,this.sessionIdsByMLContext.set(h,_)),_.add(c)}onReleaseSession(c){let h=this.mlContextBySessionId.get(c);if(!h)return;this.tensorManager.releaseTensorsForSession(c),this.mlContextBySessionId.delete(c);let _=this.sessionIdsByMLContext.get(h);if(_.delete(c),_.size===0){this.sessionIdsByMLContext.delete(h);let S=this.mlContextCache.findIndex(V=>V.mlContext===h);S!==-1&&this.mlContextCache.splice(S,1)}}getMLContext(c){return this.mlContextBySessionId.get(c)}reserveTensorId(){return this.tensorManager.reserveTensorId()}releaseTensorId(c){ys("verbose",()=>`[WebNN] releaseTensorId {tensorId: ${c}}`),this.tensorManager.releaseTensorId(c)}async ensureTensor(c,h,_,S){let V=au.get(h);if(!V)throw new Error(`Unsupported ONNX data type: ${h}`);return this.tensorManager.ensureTensor(c,V,_,S)}uploadTensor(c,h){if(!jr().shouldTransferToMLTensor)throw new Error("Trying to upload to a MLTensor while shouldTransferToMLTensor is false");ys("verbose",()=>`[WebNN] uploadTensor {tensorId: ${c}, data: ${h.byteLength}}`),this.tensorManager.upload(c,h)}async downloadTensor(c,h){return this.tensorManager.download(c,h)}createMLTensorDownloader(c,h){return async()=>{let _=await this.tensorManager.download(c);return qr(_,h)}}registerMLTensor(c,h,_){let S=au.get(h);if(!S)throw new Error(`Unsupported ONNX data type: ${h}`);let V=this.tensorManager.registerTensor(this.currentContext,c,S,_);return ys("verbose",()=>`[WebNN] registerMLTensor {tensor: ${c}, dataType: ${S}, dimensions: ${_}} -> {tensorId: ${V}}`),V}registerMLConstant(c,h,_,S,V,n){if(!n)throw new Error("External mounted files are not available.");let l=c;c.startsWith("./")&&(l=c.substring(2));let p=n.get(l);if(!p)throw new Error(`File with name ${l} not found in preloaded files.`);if(h+_>p.byteLength)throw new Error("Out of bounds: data offset and length exceed the external file data size.");let b,C=p.slice(h,h+_).buffer;switch(V.dataType){case"float32":b=new Float32Array(C);break;case"float16":b=new Uint16Array(C);break;case"int32":b=new Int32Array(C);break;case"uint32":b=new Uint32Array(C);break;case"int64":b=new BigInt64Array(C);break;case"uint64":b=new BigUint64Array(C);break;case"int8":b=new Int8Array(C);break;case"int4":case"uint4":case"uint8":b=new Uint8Array(C);break;default:throw new Error(`Unsupported data type: ${V.dataType} in creating WebNN Constant from external data.`)}return ys("verbose",()=>`[WebNN] registerMLConstant {dataType: ${V.dataType}, shape: ${V.shape}}}`),S.constant(V,b)}flush(){}}}),ja={};ft(ja,{init:()=>kl});var ki,io,kl,Y0,ka,on,ai,yl,vo,Wo,UA,oo,_l,HA,e0,Ao,gi,Oi,Xn,vl,sd,xl,Qi,yi,Zn,hd,yd,Vd,_d,Xu,Zu,D2,S2,Wd,G2,F2,Bg=Me(()=>{Is(),ua(),_o(),Ps(),Ia(),ki=class zp{constructor(h,_,S,V){this.module=h,this.dataType=_,this.data=S,this.dims=V}getFloat32Array(){if(this.dataType!==1)throw new Error("Invalid data type");let h=Le.size(this.dims);return h===0?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,h)}getBigInt64Array(){if(this.dataType!==7)throw new Error("Invalid data type");let h=Le.size(this.dims);return h===0?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,h)}getInt32Array(){if(this.dataType!==6)throw new Error("Invalid data type");let h=Le.size(this.dims);return h===0?new Int32Array:new Int32Array(this.module.HEAP8.buffer,this.data,h)}getUint16Array(){if(this.dataType!==10&&this.dataType!==4)throw new Error("Invalid data type");let h=Le.size(this.dims);return h===0?new Uint16Array:new Uint16Array(this.module.HEAP8.buffer,this.data,h)}reshape(h){if(Le.size(h)!==Le.size(this.dims))throw new Error("Invalid new shape");return new zp(this.module,this.dataType,this.data,h)}},io=class{constructor(c,h,_){this.module=c,this.backend=h,this.customDataOffset=0,this.customDataSize=0,this.adapterInfo=h.adapterInfo,this.deviceInfo=h.deviceInfo;let S=c.PTR_SIZE,V=_/c.PTR_SIZE,n=S===4?"i32":"i64";this.opKernelContext=Number(c.getValue(S*V++,n));let l=Number(c.getValue(S*V++,n));this.outputCount=Number(c.getValue(S*V++,n)),this.customDataOffset=Number(c.getValue(S*V++,"*")),this.customDataSize=Number(c.getValue(S*V++,n));let p=[];for(let b=0;b<l;b++){let C=Number(c.getValue(S*V++,n)),E=Number(c.getValue(S*V++,"*")),v=Number(c.getValue(S*V++,n)),x=[];for(let L=0;L<v;L++)x.push(Number(c.getValue(S*V++,n)));p.push(new ki(c,C,E,x))}this.inputs=p}get kernelCustomData(){return this.backend.currentKernelCustomData}get customDataBuffer(){return this.module.HEAPU8.subarray(this.customDataOffset,this.customDataOffset+this.customDataSize)}compute(c,h){var V;let _=((V=h==null?void 0:h.inputs)==null?void 0:V.map(n=>typeof n=="number"?this.inputs[n]:n))??this.inputs,S=(h==null?void 0:h.outputs)??[];return this.backend.run(c,_,S,(n,l,p)=>new ki(this.module,l,this.output(n,p),p),(n,l)=>{let p=$n(n,l);if(!p)throw new Error(`Unsupported data type: ${n}`);let b=p>0?this.backend.gpuDataManager.create(p).id:0;return new ki(this.module,n,b,l)},this.outputCount)}output(c,h){let _=this.module.stackSave();try{let S=this.module.PTR_SIZE,V=S===4?"i32":"i64",n=this.module.stackAlloc((1+h.length)*S);this.module.setValue(n,h.length,V);for(let l=0;l<h.length;l++)this.module.setValue(n+S*(l+1),h[l],V);return this.module._JsepOutput(this.opKernelContext,c,n)}catch(S){throw new Error(`Failed to generate kernel's output[${c}] with dims [${h}]. If you are running with pre-allocated output, please make sure the output type/dims are correct. Error: ${S}`)}finally{this.module.stackRestore(_)}}},kl=async(c,h,_,S)=>{let V=h.jsepInit;if(!V)throw new Error("Failed to initialize JSEP. The WebAssembly module is not built with JSEP support.");if(c==="webgpu"){let n=new $c;await n.initialize(_,S),V("webgpu",[n,l=>n.alloc(Number(l)),l=>n.free(l),(l,p,b,C=!1)=>{if(C)ys("verbose",()=>`[WebGPU] jsepCopyGpuToGpu: src=${Number(l)}, dst=${Number(p)}, size=${Number(b)}`),n.memcpy(Number(l),Number(p));else{ys("verbose",()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${Number(l)}, gpuDataId=${Number(p)}, size=${Number(b)}`);let E=h.HEAPU8.subarray(Number(l>>>0),Number(l>>>0)+Number(b));n.upload(Number(p),E)}},async(l,p,b)=>{ys("verbose",()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${l}, dataOffset=${p}, size=${b}`),await n.download(Number(l),()=>h.HEAPU8.subarray(Number(p)>>>0,Number(p+b)>>>0))},(l,p,b)=>n.createKernel(l,Number(p),b,h.UTF8ToString(h._JsepGetNodeName(Number(p)))),l=>n.releaseKernel(l),(l,p,b,C)=>{ys("verbose",()=>`[WebGPU] jsepRun: sessionHandle=${b}, kernel=${l}, contextDataOffset=${p}`);let E=new io(h,n,Number(p));return n.computeKernel(Number(l),E,C)},()=>n.captureBegin(),()=>n.captureEnd(),()=>n.replay()])}else{let n=new Lu(_);V("webnn",[n,()=>n.reserveTensorId(),l=>n.releaseTensorId(l),async(l,p,b,C)=>n.ensureTensor(l,p,b,C),(l,p)=>{n.uploadTensor(l,p)},async(l,p)=>n.downloadTensor(l,p)])}}}),z2=Me(()=>{nu(),ju(),Is(),bA(),R0(),iu(),Y0=(c,h)=>{jr()._OrtInit(c,h)!==0&&Ss("Can't initialize onnxruntime.")},ka=async c=>{Y0(c.wasm.numThreads,Pn(c.logLevel))},on=async(c,h)=>{{let _=(Bg(),gt(ja)).init;if(h==="webgpu"){if(typeof navigator>"u"||!navigator.gpu)throw new Error("WebGPU is not supported in current environment");let S=c.webgpu.adapter;if(S){if(typeof S.limits!="object"||typeof S.features!="object"||typeof S.requestDevice!="function")throw new Error("Invalid GPU adapter set in `env.webgpu.adapter`. It must be a GPUAdapter object.")}else{let V=c.webgpu.powerPreference;if(V!==void 0&&V!=="low-power"&&V!=="high-performance")throw new Error(`Invalid powerPreference setting: "${V}"`);let n=c.webgpu.forceFallbackAdapter;if(n!==void 0&&typeof n!="boolean")throw new Error(`Invalid forceFallbackAdapter setting: "${n}"`);if(S=await navigator.gpu.requestAdapter({powerPreference:V,forceFallbackAdapter:n}),!S)throw new Error('Failed to get GPU adapter. You may need to enable flag "--enable-unsafe-webgpu" if you are using Chrome.')}await _("webgpu",jr(),c,S)}if(h==="webnn"){if(typeof navigator>"u"||!navigator.ml)throw new Error("WebNN is not supported in current environment");await _("webnn",jr(),c)}}},ai=new Map,yl=c=>{let h=jr(),_=h.stackSave();try{let S=h.PTR_SIZE,V=h.stackAlloc(2*S);h._OrtGetInputOutputCount(c,V,V+S)!==0&&Ss("Can't get session input/output count.");let n=S===4?"i32":"i64";return[Number(h.getValue(V,n)),Number(h.getValue(V+S,n))]}finally{h.stackRestore(_)}},vo=c=>{let h=jr(),_=h._malloc(c.byteLength);if(_===0)throw new Error(`Can't create a session. failed to allocate a buffer of size ${c.byteLength}.`);return h.HEAPU8.set(c,_),[_,c.byteLength]},Wo=async(c,h)=>{var v,x,L;let _,S,V=jr();Array.isArray(c)?[_,S]=c:c.buffer===V.HEAPU8.buffer?[_,S]=[c.byteOffset,c.byteLength]:[_,S]=vo(c);let n=0,l=0,p=0,b=[],C=[],E=[];try{if([l,b]=Mi(h),(h==null?void 0:h.externalData)&&V.mountExternalData){let Ee=[];for(let Fe of h.externalData){let Ye=typeof Fe=="string"?Fe:Fe.path;Ee.push(Vn(typeof Fe=="string"?Fe:Fe.data).then(dt=>{V.mountExternalData(Ye,dt)}))}await Promise.all(Ee)}for(let Ee of(h==null?void 0:h.executionProviders)??[])if((typeof Ee=="string"?Ee:Ee.name)==="webnn"){if(V.shouldTransferToMLTensor=!1,typeof Ee!="string"){let Fe=Ee,Ye=Fe==null?void 0:Fe.context,dt=Fe==null?void 0:Fe.gpuDevice,mt=Fe==null?void 0:Fe.deviceType,xt=Fe==null?void 0:Fe.powerPreference;V.currentContext=Ye||(dt?await V.jsepCreateMLContext(dt):await V.jsepCreateMLContext({deviceType:mt,powerPreference:xt}))}else V.currentContext=await V.jsepCreateMLContext();break}n=await V._OrtCreateSession(_,S,l),n===0&&Ss("Can't create a session."),(v=V.jsepOnCreateSession)==null||v.call(V),V.currentContext&&(V.jsepRegisterMLContext(n,V.currentContext),V.currentContext=void 0,V.shouldTransferToMLTensor=!0);let[W,te]=yl(n),$=!!(h!=null&&h.enableGraphCapture),j=[],le=[],me=[];for(let Ee=0;Ee<W;Ee++){let Fe=V._OrtGetInputName(n,Ee);Fe===0&&Ss("Can't get an input name."),C.push(Fe),j.push(V.UTF8ToString(Fe))}for(let Ee=0;Ee<te;Ee++){let Fe=V._OrtGetOutputName(n,Ee);Fe===0&&Ss("Can't get an output name."),E.push(Fe);let Ye=V.UTF8ToString(Fe);le.push(Ye);{if($&&(h==null?void 0:h.preferredOutputLocation)===void 0){me.push("gpu-buffer");continue}let dt=typeof(h==null?void 0:h.preferredOutputLocation)=="string"?h.preferredOutputLocation:((x=h==null?void 0:h.preferredOutputLocation)==null?void 0:x[Ye])??"cpu";if(dt!=="cpu"&&dt!=="cpu-pinned"&&dt!=="gpu-buffer"&&dt!=="ml-tensor")throw new Error(`Not supported preferred output location: ${dt}.`);if($&&dt!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${dt}. Only 'gpu-buffer' location is supported when enableGraphCapture is true.`);me.push(dt)}}let _e=null;return me.some(Ee=>Ee==="gpu-buffer"||Ee==="ml-tensor")&&(p=V._OrtCreateBinding(n),p===0&&Ss("Can't create IO binding."),_e={handle:p,outputPreferredLocations:me,outputPreferredLocationsEncoded:me.map(Ee=>Bi(Ee))}),ai.set(n,[n,C,E,_e,$,!1]),[n,j,le]}catch(W){throw C.forEach(te=>V._OrtFree(te)),E.forEach(te=>V._OrtFree(te)),p!==0&&V._OrtReleaseBinding(p)!==0&&Ss("Can't release IO binding."),n!==0&&V._OrtReleaseSession(n)!==0&&Ss("Can't release session."),W}finally{V._free(_),l!==0&&V._OrtReleaseSessionOptions(l)!==0&&Ss("Can't release session options."),b.forEach(W=>V._free(W)),(L=V.unmountExternalData)==null||L.call(V)}},UA=c=>{var b;let h=jr(),_=ai.get(c);if(!_)throw new Error(`cannot release session. invalid session id: ${c}`);let[S,V,n,l,p]=_;l&&(p&&h._OrtClearBoundOutputs(l.handle)!==0&&Ss("Can't clear bound outputs."),h._OrtReleaseBinding(l.handle)!==0&&Ss("Can't release IO binding.")),(b=h.jsepOnReleaseSession)==null||b.call(h,c),V.forEach(C=>h._OrtFree(C)),n.forEach(C=>h._OrtFree(C)),h._OrtReleaseSession(S)!==0&&Ss("Can't release session."),ai.delete(c)},oo=(c,h,_,S,V,n=!1)=>{if(!c)return void h.push(0);let l,p,b=jr(),C=b.PTR_SIZE,E=c[0],v=c[1],x=c[3];if(E==="string"&&(x==="gpu-buffer"||x==="ml-tensor"))throw new Error("String tensor is not supported on GPU.");if(n&&x!=="gpu-buffer")throw new Error(`External buffer must be provided for input/output index ${V} when enableGraphCapture is true.`);if(x==="gpu-buffer"){let te=c[2].gpuBuffer;p=$n(Ma(E),v);let $=b.jsepRegisterBuffer;if(!$)throw new Error('Tensor location "gpu-buffer" is not supported without using WebGPU.');l=$(S,V,te,p)}else if(x==="ml-tensor"){let te=c[2].mlTensor;p=$n(Ma(E),v);let $=b.jsepRegisterMLTensor;if(!$)throw new Error('Tensor location "ml-tensor" is not supported without using WebNN.');l=$(te,Ma(E),v)}else{let te=c[2];if(Array.isArray(te)){p=C*te.length,l=b._malloc(p),_.push(l);for(let $=0;$<te.length;$++){if(typeof te[$]!="string")throw new TypeError(`tensor data at index ${$} is not a string`);b.setValue(l+$*C,Vs(te[$],_),"*")}}else p=te.byteLength,l=b._malloc(p),_.push(l),b.HEAPU8.set(new Uint8Array(te.buffer,te.byteOffset,p),l)}let L=b.stackSave(),W=b.stackAlloc(4*v.length);try{v.forEach(($,j)=>b.setValue(W+j*C,$,C===4?"i32":"i64"));let te=b._OrtCreateTensor(Ma(E),l,p,W,v.length,Bi(x));te===0&&Ss(`Can't create tensor for input/output. session=${S}, index=${V}.`),h.push(te)}finally{b.stackRestore(L)}},_l=async(c,h,_,S,V,n)=>{var jt,Gt;let l=jr(),p=l.PTR_SIZE,b=ai.get(c);if(!b)throw new Error(`cannot run inference. invalid session id: ${c}`);let C=b[0],E=b[1],v=b[2],x=b[3],L=b[4],W=b[5],te=h.length,$=S.length,j=0,le=[],me=[],_e=[],Ee=[],Fe=l.stackSave(),Ye=l.stackAlloc(te*p),dt=l.stackAlloc(te*p),mt=l.stackAlloc($*p),xt=l.stackAlloc($*p);try{(jt=l.jsepOnRunStart)==null||jt.call(l,C),[j,le]=Ls(n);for(let St=0;St<te;St++)oo(_[St],me,Ee,c,h[St],L);for(let St=0;St<$;St++)oo(V[St],_e,Ee,c,te+S[St],L);for(let St=0;St<te;St++)l.setValue(Ye+St*p,me[St],"*"),l.setValue(dt+St*p,E[h[St]],"*");for(let St=0;St<$;St++)l.setValue(mt+St*p,_e[St],"*"),l.setValue(xt+St*p,v[S[St]],"*");if(x&&!W){let{handle:St,outputPreferredLocations:kr,outputPreferredLocationsEncoded:fr}=x;if(E.length!==te)throw new Error(`input count from feeds (${te}) is expected to be always equal to model's input count (${E.length}).`);for(let ur=0;ur<te;ur++){let Jr=h[ur];await l._OrtBindInput(St,E[Jr],me[ur])!==0&&Ss(`Can't bind input[${ur}] for session=${c}.`)}for(let ur=0;ur<$;ur++){let Jr=S[ur];(Gt=V[ur])!=null&&Gt[3]?l._OrtBindOutput(St,v[Jr],_e[ur],0)!==0&&Ss(`Can't bind pre-allocated output[${ur}] for session=${c}.`):l._OrtBindOutput(St,v[Jr],0,fr[Jr])!==0&&Ss(`Can't bind output[${ur}] to ${kr[ur]} for session=${c}.`)}ai.set(c,[C,E,v,x,L,!0])}let Zt;Zt=x?await l._OrtRunWithBinding(C,x.handle,$,mt,j):await l._OrtRun(C,dt,Ye,te,xt,$,mt,j),Zt!==0&&Ss("failed to call OrtRun().");let ar=[];for(let St=0;St<$;St++){let kr=Number(l.getValue(mt+St*p,"*"));if(kr===_e[St]){ar.push(V[St]);continue}let fr,ur=l.stackSave(),Jr=l.stackAlloc(4*p),Sr=!1,As=0;try{l._OrtGetTensorData(kr,Jr,Jr+p,Jr+2*p,Jr+3*p)!==0&&Ss(`Can't access output tensor data on index ${St}.`);let Xs=p===4?"i32":"i64",bs=Number(l.getValue(Jr,Xs));As=l.getValue(Jr+p,"*");let vs=l.getValue(Jr+2*p,"*"),Ys=Number(l.getValue(Jr+3*p,Xs)),Er=[];for(let Ds=0;Ds<Ys;Ds++)Er.push(Number(l.getValue(vs+Ds*p,Xs)));l._OrtFree(vs)!==0&&Ss("Can't free memory for tensor dims.");let Kr=Er.reduce((Ds,va)=>Ds*va,1);fr=Jn(bs);let js=x==null?void 0:x.outputPreferredLocations[S[St]];if(fr==="string"){if(js==="gpu-buffer"||js==="ml-tensor")throw new Error("String tensor is not supported on GPU.");let Ds=[];for(let va=0;va<Kr;va++){let _i=l.getValue(As+va*p,"*"),Ml=l.getValue(As+(va+1)*p,"*"),qi=va===Kr-1?void 0:Ml-_i;Ds.push(l.UTF8ToString(_i,qi))}ar.push([fr,Er,Ds,"cpu"])}else if(js==="gpu-buffer"&&Kr>0){let Ds=l.jsepGetBuffer;if(!Ds)throw new Error('preferredLocation "gpu-buffer" is not supported without using WebGPU.');let va=Ds(As),_i=$n(bs,Kr);if(_i===void 0||!Dn(fr))throw new Error(`Unsupported data type: ${fr}`);Sr=!0,ar.push([fr,Er,{gpuBuffer:va,download:l.jsepCreateDownloader(va,_i,fr),dispose:()=>{l._OrtReleaseTensor(kr)!==0&&Ss("Can't release tensor.")}},"gpu-buffer"])}else if(js==="ml-tensor"&&Kr>0){let Ds=l.jsepEnsureTensor;if(!Ds)throw new Error('preferredLocation "ml-tensor" is not supported without using WebNN.');if($n(bs,Kr)===void 0||!ma(fr))throw new Error(`Unsupported data type: ${fr}`);let va=await Ds(As,bs,Er,!1);Sr=!0,ar.push([fr,Er,{mlTensor:va,download:l.jsepCreateMLTensorDownloader(As,fr),dispose:()=>{l.jsepReleaseTensorId(As),l._OrtReleaseTensor(kr)}},"ml-tensor"])}else{let Ds=new(Ei(fr))(Kr);new Uint8Array(Ds.buffer,Ds.byteOffset,Ds.byteLength).set(l.HEAPU8.subarray(As,As+Ds.byteLength)),ar.push([fr,Er,Ds,"cpu"])}}finally{l.stackRestore(ur),fr==="string"&&As&&l._free(As),Sr||l._OrtReleaseTensor(kr)}}return x&&!L&&(l._OrtClearBoundOutputs(x.handle)!==0&&Ss("Can't clear bound outputs."),ai.set(c,[C,E,v,x,L,!1])),ar}finally{l.stackRestore(Fe),me.forEach(Zt=>l._OrtReleaseTensor(Zt)),_e.forEach(Zt=>l._OrtReleaseTensor(Zt)),Ee.forEach(Zt=>l._free(Zt)),j!==0&&l._OrtReleaseRunOptions(j),le.forEach(Zt=>l._free(Zt))}},HA=c=>{let h=jr(),_=ai.get(c);if(!_)throw new Error("invalid session id");let S=_[0],V=h._OrtEndProfiling(S);V===0&&Ss("Can't get an profile file name."),h._OrtFree(V)},e0=c=>{let h=[];for(let _ of c){let S=_[2];!Array.isArray(S)&&"buffer"in S&&h.push(S.buffer)}return h}}),O2=Me(()=>{ct(),z2(),bA(),L0(),Ao=()=>!!R.wasm.proxy&&typeof document<"u",Oi=!1,Xn=!1,vl=!1,Qi=new Map,yi=(c,h)=>{let _=Qi.get(c);_?_.push(h):Qi.set(c,[h])},Zn=()=>{if(Oi||!Xn||vl||!gi)throw new Error("worker not ready")},hd=c=>{switch(c.data.type){case"init-wasm":Oi=!1,c.data.err?(vl=!0,xl[1](c.data.err)):(Xn=!0,xl[0]()),sd&&(URL.revokeObjectURL(sd),sd=void 0);break;case"init-ep":case"copy-from":case"create":case"release":case"run":case"end-profiling":{let h=Qi.get(c.data.type);c.data.err?h.shift()[1](c.data.err):h.shift()[0](c.data.out);break}}},yd=async()=>{if(!Xn){if(Oi)throw new Error("multiple calls to 'initWasm()' detected.");if(vl)throw new Error("previous call to 'initWasm()' failed.");if(Oi=!0,Ao())return new Promise((c,h)=>{gi==null||gi.terminate(),Es().then(([_,S])=>{var V;try{(gi=S).onerror=l=>h(l),gi.onmessage=hd,xl=[c,h];let n={type:"init-wasm",in:R};!n.in.wasm.wasmPaths&&(_||(V=import.meta.url)!=null&&V.startsWith("file:"))&&(n.in.wasm.wasmPaths={wasm:new URL(A("./node_modules/onnxruntime-web/dist/ort-wasm-simd-threaded.jsep.wasm"),A.b).href}),gi.postMessage(n),sd=_}catch(n){h(n)}},h)});try{await Qr(R.wasm),await ka(R),Xn=!0}catch(c){throw vl=!0,c}finally{Oi=!1}}},Vd=async c=>{if(Ao())return Zn(),new Promise((h,_)=>{yi("init-ep",[h,_]);let S={type:"init-ep",in:{epName:c,env:R}};gi.postMessage(S)});await on(R,c)},_d=async c=>Ao()?(Zn(),new Promise((h,_)=>{yi("copy-from",[h,_]);let S={type:"copy-from",in:{buffer:c}};gi.postMessage(S,[c.buffer])})):vo(c),Xu=async(c,h)=>{if(Ao()){if(h!=null&&h.preferredOutputLocation)throw new Error('session option "preferredOutputLocation" is not supported for proxy.');return Zn(),new Promise((_,S)=>{yi("create",[_,S]);let V={type:"create",in:{model:c,options:{...h}}},n=[];c instanceof Uint8Array&&n.push(c.buffer),gi.postMessage(V,n)})}return Wo(c,h)},Zu=async c=>{if(Ao())return Zn(),new Promise((h,_)=>{yi("release",[h,_]);let S={type:"release",in:c};gi.postMessage(S)});UA(c)},D2=async(c,h,_,S,V,n)=>{if(Ao()){if(_.some(l=>l[3]!=="cpu"))throw new Error("input tensor on GPU is not supported for proxy.");if(V.some(l=>l))throw new Error("pre-allocated output tensor is not supported for proxy.");return Zn(),new Promise((l,p)=>{yi("run",[l,p]);let b=_,C={type:"run",in:{sessionId:c,inputIndices:h,inputs:b,outputIndices:S,options:n}};gi.postMessage(C,e0(b))})}return _l(c,h,_,S,V,n)},S2=async c=>{if(Ao())return Zn(),new Promise((h,_)=>{yi("end-profiling",[h,_]);let S={type:"end-profiling",in:c};gi.postMessage(S)});HA(c)}}),Tg=Me(()=>{ct(),O2(),Is(),kt(),iu(),Wd=(c,h)=>{switch(c.location){case"cpu":return[c.type,c.dims,c.data,"cpu"];case"gpu-buffer":return[c.type,c.dims,{gpuBuffer:c.gpuBuffer},"gpu-buffer"];case"ml-tensor":return[c.type,c.dims,{mlTensor:c.mlTensor},"ml-tensor"];default:throw new Error(`invalid data location: ${c.location} for ${h()}`)}},G2=c=>{switch(c[3]){case"cpu":return new K(c[0],c[2],c[1]);case"gpu-buffer":{let h=c[0];if(!Dn(h))throw new Error(`not supported data type: ${h} for deserializing GPU tensor`);let{gpuBuffer:_,download:S,dispose:V}=c[2];return K.fromGpuBuffer(_,{dataType:h,dims:c[1],download:S,dispose:V})}case"ml-tensor":{let h=c[0];if(!ma(h))throw new Error(`not supported data type: ${h} for deserializing MLTensor tensor`);let{mlTensor:_,download:S,dispose:V}=c[2];return K.fromMLTensor(_,{dataType:h,dims:c[1],download:S,dispose:V})}default:throw new Error(`invalid data location: ${c[3]}`)}},F2=class{async fetchModelAndCopyToWasmMemory(c){return _d(await Vn(c))}async loadModel(c,h){let _;Re(),_=typeof c=="string"?await this.fetchModelAndCopyToWasmMemory(c):c,[this.sessionId,this.inputNames,this.outputNames]=await Xu(_,h),Ke()}async dispose(){return Zu(this.sessionId)}async run(c,h,_){Re();let S=[],V=[];Object.entries(c).forEach(v=>{let x=v[0],L=v[1],W=this.inputNames.indexOf(x);if(W===-1)throw new Error(`invalid input '${x}'`);S.push(L),V.push(W)});let n=[],l=[];Object.entries(h).forEach(v=>{let x=v[0],L=v[1],W=this.outputNames.indexOf(x);if(W===-1)throw new Error(`invalid output '${x}'`);n.push(L),l.push(W)});let p=S.map((v,x)=>Wd(v,()=>`input "${this.inputNames[V[x]]}"`)),b=n.map((v,x)=>v?Wd(v,()=>`output "${this.outputNames[l[x]]}"`):null),C=await D2(this.sessionId,V,p,l,b,_),E={};for(let v=0;v<C.length;v++)E[this.outputNames[l[v]]]=n[v]??G2(C[v]);return Ke(),E}startProfiling(){}endProfiling(){S2(this.sessionId)}}}),Ud={};ft(Ud,{OnnxruntimeWebAssemblyBackend:()=>Yd,initializeFlags:()=>Hd,wasmBackend:()=>Pg});var Hd,Yd,Pg,Dg=Me(()=>{ct(),O2(),Tg(),Hd=()=>{if((typeof R.wasm.initTimeout!="number"||R.wasm.initTimeout<0)&&(R.wasm.initTimeout=0),R.wasm.simd===!1&&console.warn('Deprecated property "env.wasm.simd" is set to false. non-SIMD build is no longer provided, and this setting will be ignored.'),typeof R.wasm.proxy!="boolean"&&(R.wasm.proxy=!1),typeof R.wasm.trace!="boolean"&&(R.wasm.trace=!1),typeof R.wasm.numThreads!="number"||!Number.isInteger(R.wasm.numThreads)||R.wasm.numThreads<=0)if(typeof self<"u"&&!self.crossOriginIsolated)R.wasm.numThreads=1;else{let c=typeof navigator>"u"?xe("node:os").cpus().length:navigator.hardwareConcurrency;R.wasm.numThreads=Math.min(4,Math.ceil((c||1)/2))}},Yd=class{async init(c){Hd(),await yd(),await Vd(c)}async createInferenceSessionHandler(c,h){let _=new F2;return await _.loadModel(c,h),Promise.resolve(_)}},Pg=new Yd});ct(),ct(),ct();var Q2=He;{let c=(Dg(),gt(Ud)).wasmBackend;Y("webgpu",c,5),Y("webnn",c,5),Y("cpu",c,10),Y("wasm",c,10)}Object.defineProperty(R.versions,"web",{value:"1.21.0-dev.20250206-d981b153d3",enumerable:!0})},"./src/backends/onnx.js":(T,k,A)=>{var w;A.r(k),A.d(k,{Tensor:()=>H.Tensor,createInferenceSession:()=>Ie,deviceToExecutionProviders:()=>oe,isONNXProxy:()=>ce,isONNXTensor:()=>ee});var F=A("./src/env.js"),Y=A("?2ce3"),U=A("./node_modules/onnxruntime-web/dist/ort.bundle.min.mjs?3a96"),H=A("./node_modules/onnxruntime-common/dist/esm/index.js");const z=Object.freeze({auto:null,gpu:null,cpu:"cpu",wasm:"wasm",webgpu:"webgpu",cuda:"cuda",dml:"dml",webnn:{name:"webnn",deviceType:"cpu"},"webnn-npu":{name:"webnn",deviceType:"npu"},"webnn-gpu":{name:"webnn",deviceType:"gpu"},"webnn-cpu":{name:"webnn",deviceType:"cpu"}}),N=[];let D,R;const Q=Symbol.for("onnxruntime");if(Q in globalThis)R=globalThis[Q];else if(F.apis.IS_NODE_ENV){switch(R=Y??(w||(w=A.t(Y,2))),process.platform){case"win32":N.push("dml");break;case"linux":process.arch==="x64"&&N.push("cuda")}N.push("cpu"),D=["cpu"]}else R=U,F.apis.IS_WEBNN_AVAILABLE&&N.push("webnn-npu","webnn-gpu","webnn-cpu","webnn"),F.apis.IS_WEBGPU_AVAILABLE&&N.push("webgpu"),N.push("wasm"),D=["wasm"];const J=R.InferenceSession;function oe(g=null){if(!g)return D;switch(g){case"auto":return N;case"gpu":return N.filter(I=>["webgpu","cuda","dml","webnn-gpu"].includes(I))}if(N.includes(g))return[z[g]??g];throw new Error(`Unsupported device: "${g}". Should be one of: ${N.join(", ")}.`)}let be=null;async function Ie(g,I,e){be&&await be;const u=J.create(g,I);be??(be=u);const B=await u;return B.config=e,B}function ee(g){return g instanceof R.Tensor}const re=R==null?void 0:R.env;function ce(){var g;return(g=re==null?void 0:re.wasm)==null?void 0:g.proxy}re!=null&&re.wasm&&(re.wasm.wasmPaths=`https://cdn.jsdelivr.net/npm/@huggingface/transformers@${F.env.version}/dist/`,re.wasm.proxy=!1,typeof crossOriginIsolated<"u"&&crossOriginIsolated||(re.wasm.numThreads=1)),re!=null&&re.webgpu&&(re.webgpu.powerPreference="high-performance"),F.env.backends.onnx=re},"./src/base/feature_extraction_utils.js":(T,k,A)=>{A.r(k),A.d(k,{FeatureExtractor:()=>U,validate_audio_inputs:()=>H});var w=A("./src/utils/constants.js"),F=A("./src/utils/generic.js"),Y=A("./src/utils/hub.js");class U extends F.Callable{constructor(N){super(),this.config=N}static async from_pretrained(N,D){return new this(await(0,Y.getModelJSON)(N,w.FEATURE_EXTRACTOR_NAME,!0,D))}}function H(z,N){var D;if(!(z instanceof Float32Array||z instanceof Float64Array))throw new Error(`${N} expects input to be a Float32Array or a Float64Array, but got ${((D=z==null?void 0:z.constructor)==null?void 0:D.name)??typeof z} instead. If using the feature extractor directly, remember to use \`read_audio(url, sampling_rate)\` to obtain the raw audio data of the file/url.`)}},"./src/base/image_processors_utils.js":(T,k,A)=>{A.r(k),A.d(k,{ImageProcessor:()=>ce,center_to_corners_format:()=>R,post_process_instance_segmentation:()=>re,post_process_object_detection:()=>Q,post_process_panoptic_segmentation:()=>ee,post_process_semantic_segmentation:()=>J});var w=A("./src/utils/generic.js"),F=A("./src/utils/tensor.js"),Y=A("./src/utils/maths.js");A("./src/utils/image.js");var U=A("./src/utils/core.js"),H=A("./src/utils/hub.js"),z=A("./src/utils/constants.js");function N(g,I,e=0,u=null){const B=g/I;let ue=(0,Y.bankers_round)(B)*I;return u!==null&&ue>u&&(ue=Math.floor(B)*I),ue<e&&(ue=Math.ceil(B)*I),ue}function D([g,I],e){return[Math.max(Math.floor(g/e),1)*e,Math.max(Math.floor(I/e),1)*e]}function R([g,I,e,u]){return[g-e/2,I-u/2,g+e/2,I+u/2]}function Q(g,I=.5,e=null,u=!1){const B=g.logits,ue=g.pred_boxes,[G,K,Ve]=B.dims;if(e!==null&&e.length!==G)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let ve=[];for(let Re=0;Re<G;++Re){let Ke=e!==null?e[Re]:null,nt={boxes:[],classes:[],scores:[]},Ct=B[Re],ht=ue[Re];for(let et=0;et<K;++et){let ze,Se=Ct[et],xe=[];if(u){ze=Se.sigmoid().data;for(let Me=0;Me<ze.length;++Me)ze[Me]>I&&xe.push(Me)}else{let Me=(0,Y.max)(Se.data)[1];if(Me===Ve-1||(ze=(0,Y.softmax)(Se.data),ze[Me]<I))continue;xe.push(Me)}for(const Me of xe){let ft=ht[et].data;ft=R(ft),Ke!==null&&(ft=ft.map((gt,_t)=>gt*Ke[(_t+1)%2])),nt.boxes.push(ft),nt.classes.push(Me),nt.scores.push(ze[Me])}}ve.push(nt)}return ve}function J(g,I=null){const e=g.logits,u=e.dims[0];if(I!==null&&I.length!==u)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");const B=[];for(let ue=0;ue<u;++ue){const G=I!==null?I[ue]:null;let K=e[ue];G!==null&&(K=(0,F.interpolate)(K,G,"bilinear",!1));const[Ve,ve]=G??K.dims.slice(-2),Re=new F.Tensor("int32",new Int32Array(Ve*ve),[Ve,ve]),Ke=K[0].data,nt=Re.data;for(let et=1;et<K.dims[0];++et){const ze=K[et].data;for(let Se=0;Se<ze.length;++Se)ze[Se]>Ke[Se]&&(Ke[Se]=ze[Se],nt[Se]=et)}const Ct=new Array(K.dims[0]);for(let et=0;et<nt.length;++et){const ze=nt[et];Ct[ze]=ze}const ht=Ct.filter(et=>et!==void 0);B.push({segmentation:Re,labels:ht})}return B}function oe(g,I,e,u){const B=[],ue=[],G=[];for(let K=0;K<g.dims[0];++K){const Ve=g[K],ve=I[K],Re=(0,Y.max)(Ve.data)[1];if(Re===u)continue;const Ke=(0,Y.softmax)(Ve.data)[Re];Ke>e&&(B.push(ve),ue.push(Ke),G.push(Re))}return[B,ue,G]}function be(g,I,e,u=.5,B=.8){const ue=[];let G=0,K=0;const Ve=I[e].data;for(let Re=0;Re<g.length;++Re)g[Re]===e&&(ue.push(Re),++G),Ve[Re]>=u&&++K;let ve=G>0&&K>0;return ve&&(ve=G/K>B),[ve,ue]}function Ie(g,I,e,u,B,ue=null,G=null){const[K,Ve]=G??g[0].dims,ve=new F.Tensor("int32",new Int32Array(K*Ve),[K,Ve]),Re=[];if(G!==null)for(let et=0;et<g.length;++et)g[et]=(0,F.interpolate)(g[et],G,"bilinear",!1);const Ke=new Int32Array(g[0].data.length),nt=new Float32Array(g[0].data.length);for(let et=0;et<g.length;++et){let ze=I[et];const Se=g[et].data;for(let xe=0;xe<Se.length;++xe)Se[xe]*=ze,Se[xe]>nt[xe]&&(Ke[xe]=et,nt[xe]=Se[xe])}let Ct=0;const ht=ve.data;for(let et=0;et<e.length;++et){const ze=e[et],[Se,xe]=be(Ke,g,et,u,B);if(Se){++Ct;for(const Me of xe)ht[Me]=Ct;Re.push({id:Ct,label_id:ze,score:I[et]})}}return[ve,Re]}function ee(g,I=.5,e=.5,u=.8,B=null,ue=null){B===null&&(console.warn("`label_ids_to_fuse` unset. No instance will be fused."),B=new Set);const G=g.class_queries_logits??g.logits,K=(g.masks_queries_logits??g.pred_masks).sigmoid();let[Ve,ve,Re]=G.dims;if(Re-=1,ue!==null&&ue.length!==Ve)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let Ke=[];for(let nt=0;nt<Ve;++nt){let Ct=ue!==null?ue[nt]:null,ht=G[nt],et=K[nt],[ze,Se,xe]=oe(ht,et,I,Re);if(xe.length===0){let[gt,_t]=Ct??et.dims.slice(-2),Je=new F.Tensor("int32",new Int32Array(gt*_t).fill(-1),[gt,_t]);Ke.push({segmentation:Je,segments_info:[]});continue}let[Me,ft]=Ie(ze,Se,xe,e,u,B,Ct);Ke.push({segmentation:Me,segments_info:ft})}return Ke}function re(g,I=.5,e=null){throw new Error("`post_process_instance_segmentation` is not yet implemented.")}class ce extends w.Callable{constructor(I){super(),this.image_mean=I.image_mean??I.mean,this.image_std=I.image_std??I.std,this.resample=I.resample??2,this.do_rescale=I.do_rescale??!0,this.rescale_factor=I.rescale_factor??1/255,this.do_normalize=I.do_normalize,this.do_thumbnail=I.do_thumbnail,this.size=I.size??I.image_size,this.do_resize=I.do_resize??this.size!==void 0,this.size_divisibility=I.size_divisibility??I.size_divisor,this.do_center_crop=I.do_center_crop,this.crop_size=I.crop_size,this.do_convert_rgb=I.do_convert_rgb??!0,this.do_crop_margin=I.do_crop_margin,this.pad_size=I.pad_size,this.do_pad=I.do_pad,this.do_pad&&!this.pad_size&&this.size&&this.size.width!==void 0&&this.size.height!==void 0&&(this.pad_size=this.size),this.do_flip_channel_order=I.do_flip_channel_order??!1,this.config=I}async thumbnail(I,e,u=2){const B=I.height,ue=I.width,G=e.height,K=e.width;let Ve=Math.min(B,G),ve=Math.min(ue,K);return Ve===B&&ve===ue?I:(B>ue?ve=Math.floor(ue*Ve/B):ue>B&&(Ve=Math.floor(B*ve/ue)),await I.resize(ve,Ve,{resample:u}))}async crop_margin(I,e=200){const u=I.clone().grayscale(),B=(0,Y.min)(u.data)[0],ue=(0,Y.max)(u.data)[0]-B;if(ue===0)return I;const G=e/255;let K=u.width,Ve=u.height,ve=0,Re=0;const Ke=u.data;for(let nt=0;nt<u.height;++nt){const Ct=nt*u.width;for(let ht=0;ht<u.width;++ht)(Ke[Ct+ht]-B)/ue<G&&(K=Math.min(K,ht),Ve=Math.min(Ve,nt),ve=Math.max(ve,ht),Re=Math.max(Re,nt))}return I=await I.crop([K,Ve,ve,Re])}pad_image(I,e,u,{mode:B="constant",center:ue=!1,constant_values:G=0}={}){const[K,Ve,ve]=e;let Re,Ke;if(typeof u=="number"?(Re=u,Ke=u):u==="square"?Re=Ke=Math.max(K,Ve):(Re=u.width,Ke=u.height),Re!==Ve||Ke!==K){const nt=new Float32Array(Re*Ke*ve);if(Array.isArray(G))for(let et=0;et<nt.length;++et)nt[et]=G[et%ve];else G!==0&&nt.fill(G);const[Ct,ht]=ue?[Math.floor((Re-Ve)/2),Math.floor((Ke-K)/2)]:[0,0];for(let et=0;et<K;++et){const ze=(et+ht)*Re,Se=et*Ve;for(let xe=0;xe<Ve;++xe){const Me=(ze+xe+Ct)*ve,ft=(Se+xe)*ve;for(let gt=0;gt<ve;++gt)nt[Me+gt]=I[ft+gt]}}if(B==="symmetric"){if(ue)throw new Error("`center` padding is not supported when `mode` is set to `symmetric`.");const et=K-1,ze=Ve-1;for(let Se=0;Se<Ke;++Se){const xe=Se*Re,Me=(0,U.calculateReflectOffset)(Se,et)*Ve;for(let ft=0;ft<Re;++ft){if(Se<K&&ft<Ve)continue;const gt=(xe+ft)*ve,_t=(Me+(0,U.calculateReflectOffset)(ft,ze))*ve;for(let Je=0;Je<ve;++Je)nt[gt+Je]=I[_t+Je]}}}I=nt,e=[Ke,Re,ve]}return[I,e]}rescale(I){for(let e=0;e<I.length;++e)I[e]=this.rescale_factor*I[e]}get_resize_output_image_size(I,e){const[u,B]=I.size;let ue,G;if(this.do_thumbnail){const{height:K,width:Ve}=e;ue=Math.min(K,Ve)}else Number.isInteger(e)?(ue=e,G=this.config.max_size??ue):e!==void 0&&(ue=e.shortest_edge,G=e.longest_edge);if(ue!==void 0||G!==void 0){const K=ue===void 0?1:Math.max(ue/u,ue/B),Ve=u*K,ve=B*K,Re=G===void 0?1:Math.min(G/Ve,G/ve);let Ke=Math.floor(Number((Ve*Re).toFixed(2))),nt=Math.floor(Number((ve*Re).toFixed(2)));return this.size_divisibility!==void 0&&([Ke,nt]=D([Ke,nt],this.size_divisibility)),[Ke,nt]}if(e!==void 0&&e.width!==void 0&&e.height!==void 0){let K=e.width,Ve=e.height;if(this.config.keep_aspect_ratio&&this.config.ensure_multiple_of){let ve=Ve/B,Re=K/u;Math.abs(1-Re)<Math.abs(1-ve)?ve=Re:Re=ve,Ve=N(ve*B,this.config.ensure_multiple_of),K=N(Re*u,this.config.ensure_multiple_of)}return[K,Ve]}if(this.size_divisibility!==void 0)return D([u,B],this.size_divisibility);if(e.min_pixels!==void 0&&e.max_pixels!==void 0){const{min_pixels:K,max_pixels:Ve}=e;return function(ve,Re,Ke=28,nt=3136,Ct=1003520){if(ve<Ke||Re<Ke)throw new Error(`height:${ve} or width:${Re} must be larger than factor:${Ke}`);if(Math.max(ve,Re)/Math.min(ve,Re)>200)throw new Error("absolute aspect ratio must be smaller than 200, got "+Math.max(ve,Re)/Math.min(ve,Re));let ht=Math.round(ve/Ke)*Ke,et=Math.round(Re/Ke)*Ke;if(ht*et>Ct){const ze=Math.sqrt(ve*Re/Ct);ht=Math.floor(ve/ze/Ke)*Ke,et=Math.floor(Re/ze/Ke)*Ke}else if(ht*et<nt){const ze=Math.sqrt(nt/(ve*Re));ht=Math.ceil(ve*ze/Ke)*Ke,et=Math.ceil(Re*ze/Ke)*Ke}return[ht,et]}(B,u,this.config.patch_size*this.config.merge_size,K,Ve)}throw new Error(`Could not resize image due to unsupported \`this.size\` option in config: ${JSON.stringify(e)}`)}async resize(I){const[e,u]=this.get_resize_output_image_size(I,this.size);return await I.resize(e,u,{resample:this.resample})}async preprocess(I,{do_normalize:e=null,do_pad:u=null,do_convert_rgb:B=null,do_convert_grayscale:ue=null,do_flip_channel_order:G=null}={}){this.do_crop_margin&&(I=await this.crop_margin(I));const[K,Ve]=I.size;if(B??this.do_convert_rgb?I=I.rgb():ue&&(I=I.grayscale()),this.do_resize&&(I=await this.resize(I)),this.do_thumbnail&&(I=await this.thumbnail(I,this.size,this.resample)),this.do_center_crop){let nt,Ct;Number.isInteger(this.crop_size)?(nt=this.crop_size,Ct=this.crop_size):(nt=this.crop_size.width,Ct=this.crop_size.height),I=await I.center_crop(nt,Ct)}const ve=[I.height,I.width];let Re=Float32Array.from(I.data),Ke=[I.height,I.width,I.channels];if(this.do_rescale&&this.rescale(Re),e??this.do_normalize){let nt=this.image_mean;Array.isArray(this.image_mean)||(nt=new Array(I.channels).fill(nt));let Ct=this.image_std;if(Array.isArray(this.image_std)||(Ct=new Array(I.channels).fill(nt)),nt.length!==I.channels||Ct.length!==I.channels)throw new Error(`When set to arrays, the length of \`image_mean\` (${nt.length}) and \`image_std\` (${Ct.length}) must match the number of channels in the image (${I.channels}).`);for(let ht=0;ht<Re.length;ht+=I.channels)for(let et=0;et<I.channels;++et)Re[ht+et]=(Re[ht+et]-nt[et])/Ct[et]}if(u??this.do_pad){if(this.pad_size)[Re,Ke]=this.pad_image(Re,[I.height,I.width,I.channels],this.pad_size);else if(this.size_divisibility){const[nt,Ct]=D([Ke[1],Ke[0]],this.size_divisibility);[Re,Ke]=this.pad_image(Re,Ke,{width:nt,height:Ct})}}if(G??this.do_flip_channel_order){if(Ke[2]!==3)throw new Error("Flipping channel order is only supported for RGB images.");for(let nt=0;nt<Re.length;nt+=3){const Ct=Re[nt];Re[nt]=Re[nt+2],Re[nt+2]=Ct}}return{original_size:[Ve,K],reshaped_input_size:ve,pixel_values:new F.Tensor("float32",Re,Ke).permute(2,0,1)}}async _call(I,...e){Array.isArray(I)||(I=[I]);const u=await Promise.all(I.map(ue=>this.preprocess(ue)));return{pixel_values:(0,F.stack)(u.map(ue=>ue.pixel_values),0),original_sizes:u.map(ue=>ue.original_size),reshaped_input_sizes:u.map(ue=>ue.reshaped_input_size)}}static async from_pretrained(I,e){return new this(await(0,H.getModelJSON)(I,z.IMAGE_PROCESSOR_NAME,!0,e))}}},"./src/base/processing_utils.js":(T,k,A)=>{A.r(k),A.d(k,{Processor:()=>U});var w=A("./src/utils/constants.js"),F=A("./src/utils/generic.js"),Y=A("./src/utils/hub.js");class U extends F.Callable{constructor(z,N){super(),this.config=z,this.components=N}get image_processor(){return this.components.image_processor}get tokenizer(){return this.components.tokenizer}get feature_extractor(){return this.components.feature_extractor}apply_chat_template(z,N={}){if(!this.tokenizer)throw new Error("Unable to apply chat template without a tokenizer.");return this.tokenizer.apply_chat_template(z,{tokenize:!1,...N})}batch_decode(...z){if(!this.tokenizer)throw new Error("Unable to decode without a tokenizer.");return this.tokenizer.batch_decode(...z)}decode(...z){if(!this.tokenizer)throw new Error("Unable to decode without a tokenizer.");return this.tokenizer.decode(...z)}async _call(z,...N){for(const D of[this.image_processor,this.feature_extractor,this.tokenizer])if(D)return D(z,...N);throw new Error("No image processor, feature extractor, or tokenizer found.")}static async from_pretrained(z,N){const[D,R]=await Promise.all([this.uses_processor_config?(0,Y.getModelJSON)(z,w.PROCESSOR_NAME,!0,N):{},Promise.all(this.classes.filter(Q=>Q in this).map(async Q=>{const J=await this[Q].from_pretrained(z,N);return[Q.replace(/_class$/,""),J]})).then(Object.fromEntries)]);return new this(D,R)}}We(U,"classes",["image_processor_class","tokenizer_class","feature_extractor_class"]),We(U,"uses_processor_config",!1)},"./src/configs.js":(T,k,A)=>{A.r(k),A.d(k,{AutoConfig:()=>z,PretrainedConfig:()=>H,getKeyValueShapes:()=>U});var w=A("./src/utils/core.js"),F=A("./src/utils/hub.js");function Y(N){const D={};let R={};switch(N.model_type){case"llava":case"paligemma":case"florence2":case"llava_onevision":case"idefics3":R=Y(N.text_config);break;case"moondream1":R=Y(N.phi_config);break;case"musicgen":R=Y(N.decoder);break;case"multi_modality":R=Y(N.language_config);break;case"gpt2":case"gptj":case"jais":case"codegen":case"gpt_bigcode":D.num_heads="n_head",D.num_layers="n_layer",D.hidden_size="n_embd";break;case"gpt_neox":case"stablelm":case"opt":case"falcon":D.num_heads="num_attention_heads",D.num_layers="num_hidden_layers",D.hidden_size="hidden_size";break;case"llama":case"olmo":case"olmo2":case"mobilellm":case"granite":case"cohere":case"mistral":case"starcoder2":case"qwen2":case"qwen2_vl":case"phi":case"phi3":case"phi3_v":D.num_heads="num_key_value_heads",D.num_layers="num_hidden_layers",D.hidden_size="hidden_size",D.num_attention_heads="num_attention_heads";break;case"gemma":case"gemma2":case"glm":case"helium":D.num_heads="num_key_value_heads",D.num_layers="num_hidden_layers",D.dim_kv="head_dim";break;case"openelm":D.num_heads="num_kv_heads",D.num_layers="num_transformer_layers",D.dim_kv="head_dim";break;case"gpt_neo":case"donut-swin":D.num_heads="num_heads",D.num_layers="num_layers",D.hidden_size="hidden_size";break;case"bloom":D.num_heads="n_head",D.num_layers="n_layer",D.hidden_size="hidden_size";break;case"mpt":D.num_heads="n_heads",D.num_layers="n_layers",D.hidden_size="d_model";break;case"exaone":D.num_heads="num_key_value_heads",D.num_layers="num_layers",D.dim_kv="head_dim",D.num_attention_heads="num_attention_heads";break;case"t5":case"mt5":case"longt5":D.num_decoder_layers="num_decoder_layers",D.num_decoder_heads="num_heads",D.decoder_dim_kv="d_kv",D.num_encoder_layers="num_layers",D.num_encoder_heads="num_heads",D.encoder_dim_kv="d_kv";break;case"bart":case"mbart":case"marian":case"whisper":case"m2m_100":case"blenderbot":case"blenderbot-small":case"florence2_language":D.num_decoder_layers="decoder_layers",D.num_decoder_heads="decoder_attention_heads",D.decoder_hidden_size="d_model",D.num_encoder_layers="encoder_layers",D.num_encoder_heads="encoder_attention_heads",D.encoder_hidden_size="d_model";break;case"speecht5":D.num_decoder_layers="decoder_layers",D.num_decoder_heads="decoder_attention_heads",D.decoder_hidden_size="hidden_size",D.num_encoder_layers="encoder_layers",D.num_encoder_heads="encoder_attention_heads",D.encoder_hidden_size="hidden_size";break;case"trocr":D.num_encoder_layers=D.num_decoder_layers="decoder_layers",D.num_encoder_heads=D.num_decoder_heads="decoder_attention_heads",D.encoder_hidden_size=D.decoder_hidden_size="d_model";break;case"musicgen_decoder":D.num_encoder_layers=D.num_decoder_layers="num_hidden_layers",D.num_encoder_heads=D.num_decoder_heads="num_attention_heads",D.encoder_hidden_size=D.decoder_hidden_size="hidden_size";break;case"moonshine":D.num_decoder_layers="decoder_num_hidden_layers",D.num_decoder_heads="decoder_num_key_value_heads",D.num_encoder_layers="encoder_num_hidden_layers",D.num_encoder_heads="encoder_num_key_value_heads",D.encoder_hidden_size=D.decoder_hidden_size="hidden_size";break;case"vision-encoder-decoder":const J=Y(N.decoder),oe="num_decoder_layers"in J,be=(0,w.pick)(N,["model_type","is_encoder_decoder"]);return oe?(be.num_decoder_layers=J.num_decoder_layers,be.num_decoder_heads=J.num_decoder_heads,be.decoder_hidden_size=J.decoder_hidden_size,be.num_encoder_layers=J.num_encoder_layers,be.num_encoder_heads=J.num_encoder_heads,be.encoder_hidden_size=J.encoder_hidden_size):(be.num_layers=J.num_layers,be.num_heads=J.num_heads,be.hidden_size=J.hidden_size),be}const Q={...R,...(0,w.pick)(N,["model_type","multi_query","is_encoder_decoder"])};for(const J in D)Q[J]=N[D[J]];return Q}function U(N,{prefix:D="past_key_values",batch_size:R=1}={}){const Q={},J=N.normalized_config;if(J.is_encoder_decoder&&"num_encoder_heads"in J&&"num_decoder_heads"in J){const oe=J.encoder_dim_kv??J.encoder_hidden_size/J.num_encoder_heads,be=J.decoder_dim_kv??J.decoder_hidden_size/J.num_decoder_heads,Ie=[R,J.num_encoder_heads,0,oe],ee=[R,J.num_decoder_heads,0,be];for(let re=0;re<J.num_decoder_layers;++re)Q[`${D}.${re}.encoder.key`]=Ie,Q[`${D}.${re}.encoder.value`]=Ie,Q[`${D}.${re}.decoder.key`]=ee,Q[`${D}.${re}.decoder.value`]=ee}else{const oe=J.num_heads,be=J.num_layers,Ie=J.dim_kv??J.hidden_size/(J.num_attention_heads??oe);if(J.model_type==="falcon"){const ee=[R*oe,0,Ie];for(let re=0;re<be;++re)Q[`${D}.${re}.key`]=ee,Q[`${D}.${re}.value`]=ee}else if(J.multi_query){const ee=[R*oe,0,2*Ie];for(let re=0;re<be;++re)Q[`${D}.${re}.key_value`]=ee}else if(J.model_type==="bloom"){const ee=[R*oe,Ie,0],re=[R*oe,0,Ie];for(let ce=0;ce<be;++ce)Q[`${D}.${ce}.key`]=ee,Q[`${D}.${ce}.value`]=re}else if(J.model_type==="openelm")for(let ee=0;ee<be;++ee){const re=[R,oe[ee],0,Ie];Q[`${D}.${ee}.key`]=re,Q[`${D}.${ee}.value`]=re}else{const ee=[R,oe,0,Ie];for(let re=0;re<be;++re)Q[`${D}.${re}.key`]=ee,Q[`${D}.${re}.value`]=ee}}return Q}class H{constructor(D){We(this,"model_type",null);We(this,"is_encoder_decoder",!1);We(this,"max_position_embeddings");We(this,"transformers.js_config");Object.assign(this,D),this.normalized_config=Y(this)}static async from_pretrained(D,{progress_callback:R=null,config:Q=null,cache_dir:J=null,local_files_only:oe=!1,revision:be="main"}={}){!Q||Q instanceof H||(Q=new H(Q));const Ie=Q??await async function(ee,re){return await(0,F.getModelJSON)(ee,"config.json",!0,re)}(D,{progress_callback:R,config:Q,cache_dir:J,local_files_only:oe,revision:be});return new this(Ie)}}class z{static async from_pretrained(...D){return H.from_pretrained(...D)}}},"./src/env.js":(T,k,A)=>{var e,u;A.r(k),A.d(k,{apis:()=>be,env:()=>g});var w=A("?569f"),F=A("?3f59"),Y=A("?154a");const U=typeof window<"u"&&window.document!==void 0,H=typeof self<"u"&&((e=self.constructor)==null?void 0:e.name)==="DedicatedWorkerGlobalScope",z=typeof self<"u"&&"caches"in self,N=typeof navigator<"u"&&"gpu"in navigator,D=typeof navigator<"u"&&"ml"in navigator,R=typeof process<"u",Q=R&&((u=process==null?void 0:process.release)==null?void 0:u.name)==="node",J=!I(w),oe=!I(F),be=Object.freeze({IS_BROWSER_ENV:U,IS_WEBWORKER_ENV:H,IS_WEB_CACHE_AVAILABLE:z,IS_WEBGPU_AVAILABLE:N,IS_WEBNN_AVAILABLE:D,IS_PROCESS_AVAILABLE:R,IS_NODE_ENV:Q,IS_FS_AVAILABLE:J,IS_PATH_AVAILABLE:oe}),Ie=J&&oe;let ee="./";if(Ie){const B=Object(import.meta).url;B?ee=F.dirname(F.dirname(Y.fileURLToPath(B))):typeof __dirname<"u"&&(ee=F.dirname(__dirname))}const re=Ie?F.join(ee,"/.cache/"):null,ce="/models/",g={version:"3.3.3",backends:{onnx:{}},allowRemoteModels:!0,remoteHost:"https://huggingface.co/",remotePathTemplate:"{model}/resolve/{revision}/",allowLocalModels:!(U||H),localModelPath:Ie?F.join(ee,ce):ce,useFS:J,useBrowserCache:z,useFSCache:J,cacheDir:re,useCustomCache:!1,customCache:null};function I(B){return Object.keys(B).length===0}},"./src/generation/configuration_utils.js":(T,k,A)=>{A.r(k),A.d(k,{GenerationConfig:()=>F});var w=A("./src/utils/core.js");class F{constructor(U){We(this,"max_length",20);We(this,"max_new_tokens",null);We(this,"min_length",0);We(this,"min_new_tokens",null);We(this,"early_stopping",!1);We(this,"max_time",null);We(this,"do_sample",!1);We(this,"num_beams",1);We(this,"num_beam_groups",1);We(this,"penalty_alpha",null);We(this,"use_cache",!0);We(this,"temperature",1);We(this,"top_k",50);We(this,"top_p",1);We(this,"typical_p",1);We(this,"epsilon_cutoff",0);We(this,"eta_cutoff",0);We(this,"diversity_penalty",0);We(this,"repetition_penalty",1);We(this,"encoder_repetition_penalty",1);We(this,"length_penalty",1);We(this,"no_repeat_ngram_size",0);We(this,"bad_words_ids",null);We(this,"force_words_ids",null);We(this,"renormalize_logits",!1);We(this,"constraints",null);We(this,"forced_bos_token_id",null);We(this,"forced_eos_token_id",null);We(this,"remove_invalid_values",!1);We(this,"exponential_decay_length_penalty",null);We(this,"suppress_tokens",null);We(this,"streamer",null);We(this,"begin_suppress_tokens",null);We(this,"forced_decoder_ids",null);We(this,"guidance_scale",null);We(this,"num_return_sequences",1);We(this,"output_attentions",!1);We(this,"output_hidden_states",!1);We(this,"output_scores",!1);We(this,"return_dict_in_generate",!1);We(this,"pad_token_id",null);We(this,"bos_token_id",null);We(this,"eos_token_id",null);We(this,"encoder_no_repeat_ngram_size",0);We(this,"decoder_start_token_id",null);We(this,"generation_kwargs",{});Object.assign(this,(0,w.pick)(U,Object.getOwnPropertyNames(this)))}}},"./src/generation/logits_process.js":(T,k,A)=>{A.r(k),A.d(k,{ClassifierFreeGuidanceLogitsProcessor:()=>ee,ForcedBOSTokenLogitsProcessor:()=>z,ForcedEOSTokenLogitsProcessor:()=>N,LogitsProcessor:()=>Y,LogitsProcessorList:()=>H,LogitsWarper:()=>U,MinLengthLogitsProcessor:()=>oe,MinNewTokensLengthLogitsProcessor:()=>be,NoBadWordsLogitsProcessor:()=>Ie,NoRepeatNGramLogitsProcessor:()=>Q,RepetitionPenaltyLogitsProcessor:()=>J,SuppressTokensAtBeginLogitsProcessor:()=>D,TemperatureLogitsWarper:()=>re,TopKLogitsWarper:()=>g,TopPLogitsWarper:()=>ce,WhisperTimeStampLogitsProcessor:()=>R});var w=A("./src/utils/generic.js");A("./src/utils/tensor.js");var F=A("./src/utils/maths.js");class Y extends w.Callable{_call(e,u){throw Error("`_call` should be implemented in a subclass")}}class U extends w.Callable{_call(e,u){throw Error("`_call` should be implemented in a subclass")}}class H extends w.Callable{constructor(){super(),this.processors=[]}push(e){this.processors.push(e)}extend(e){this.processors.push(...e)}_call(e,u){let B=u;for(const ue of this.processors)B=ue(e,B);return B}[Symbol.iterator](){return this.processors.values()}}class z extends Y{constructor(e){super(),this.bos_token_id=e}_call(e,u){for(let B=0;B<e.length;++B)if(e[B].length===1){const ue=u[B].data;ue.fill(-1/0),ue[this.bos_token_id]=0}return u}}class N extends Y{constructor(e,u){super(),this.max_length=e,this.eos_token_id=Array.isArray(u)?u:[u]}_call(e,u){for(let B=0;B<e.length;++B)if(e[B].length===this.max_length-1){const ue=u[B].data;ue.fill(-1/0);for(const G of this.eos_token_id)ue[G]=0}return u}}class D extends Y{constructor(e,u){super(),this.begin_suppress_tokens=e,this.begin_index=u}_call(e,u){for(let B=0;B<e.length;++B)if(e[B].length===this.begin_index){const ue=u[B].data;for(const G of this.begin_suppress_tokens)ue[G]=-1/0}return u}}class R extends Y{constructor(e,u){super(),this.eos_token_id=Array.isArray(e.eos_token_id)?e.eos_token_id[0]:e.eos_token_id,this.no_timestamps_token_id=e.no_timestamps_token_id,this.timestamp_begin=this.no_timestamps_token_id+1,this.begin_index=u.length,u.at(-1)===this.no_timestamps_token_id&&(this.begin_index-=1),this.max_initial_timestamp_index=e.max_initial_timestamp_index}_call(e,u){for(let B=0;B<e.length;++B){const ue=u[B].data;if(ue[this.no_timestamps_token_id]=-1/0,e[B].length===this.begin_index-1){ue.fill(-1/0),ue[this.timestamp_begin]=0;continue}const G=e[B].slice(this.begin_index),K=G.length>=1&&G[G.length-1]>=this.timestamp_begin,Ve=G.length<2||G[G.length-2]>=this.timestamp_begin;if(K&&(Ve?ue.subarray(this.timestamp_begin).fill(-1/0):ue.subarray(0,this.eos_token_id).fill(-1/0)),e[B].length===this.begin_index&&this.max_initial_timestamp_index!==null){const Ke=this.timestamp_begin+this.max_initial_timestamp_index;ue.subarray(Ke+1).fill(-1/0)}const ve=(0,F.log_softmax)(ue);Math.log(ve.subarray(this.timestamp_begin).map(Math.exp).reduce((Ke,nt)=>Ke+nt))>(0,F.max)(ve.subarray(0,this.timestamp_begin))[0]&&ue.subarray(0,this.timestamp_begin).fill(-1/0)}return u}}class Q extends Y{constructor(e){super(),this.no_repeat_ngram_size=e}getNgrams(e){const u=e.length,B=[];for(let G=0;G<u+1-this.no_repeat_ngram_size;++G){const K=[];for(let Ve=0;Ve<this.no_repeat_ngram_size;++Ve)K.push(e[G+Ve]);B.push(K.map(Number))}const ue=new Map;for(const G of B){const K=G.slice(0,G.length-1),Ve=JSON.stringify(K),ve=ue.get(Ve)??[];ve.push(G[G.length-1]),ue.set(Ve,ve)}return ue}getGeneratedNgrams(e,u){const B=u.slice(u.length+1-this.no_repeat_ngram_size,u.length);return e.get(JSON.stringify(B.map(Number)))??[]}calcBannedNgramTokens(e){const u=[];if(e.length+1<this.no_repeat_ngram_size)return u;{const B=this.getNgrams(e);return this.getGeneratedNgrams(B,e)}}_call(e,u){for(let B=0;B<e.length;++B){const ue=u[B].data,G=this.calcBannedNgramTokens(e[B]);for(const K of G)ue[K]=-1/0}return u}}class J extends Y{constructor(e){super(),this.penalty=e}_call(e,u){for(let B=0;B<e.length;++B){const ue=u[B].data;for(const G of new Set(e[B])){const K=Number(G);ue[K]<0?ue[K]*=this.penalty:ue[K]/=this.penalty}}return u}}class oe extends Y{constructor(e,u){super(),this.min_length=e,this.eos_token_id=Array.isArray(u)?u:[u]}_call(e,u){for(let B=0;B<e.length;++B)if(e[B].length<this.min_length){const ue=u[B].data;for(const G of this.eos_token_id)ue[G]=-1/0}return u}}class be extends Y{constructor(e,u,B){super(),this.prompt_length_to_skip=e,this.min_new_tokens=u,this.eos_token_id=Array.isArray(B)?B:[B]}_call(e,u){for(let B=0;B<e.length;++B)if(e[B].length-this.prompt_length_to_skip<this.min_new_tokens){const ue=u[B].data;for(const G of this.eos_token_id)ue[G]=-1/0}return u}}class Ie extends Y{constructor(e,u){super(),this.bad_words_ids=e,this.eos_token_id=Array.isArray(u)?u:[u]}_call(e,u){for(let B=0;B<e.length;++B){const ue=u[B].data,G=e[B];for(const K of this.bad_words_ids){let Ve=!0;for(let ve=1;ve<=K.length-1&&K.length<G.length;++ve)if(K.at(-ve-1)!=G.at(-ve)){Ve=!1;break}Ve&&(ue[K.at(-1)]=-1/0)}}return u}}class ee extends Y{constructor(e){if(super(),e<=1)throw new Error(`Require guidance scale >1 to use the classifier free guidance processor, got guidance scale ${e}.`);this.guidance_scale=e}_call(e,u){if(u.dims[0]!==2*e.length)throw new Error(`Logits should have twice the batch size of the input ids, the first half of batches corresponding to the conditional inputs, and the second half of batches corresponding to the unconditional inputs. Got batch size ${u.dims[0]} for the logits and ${e.length} for the input ids.`);const B=e.length,ue=u.slice([0,B],null),G=u.slice([B,u.dims[0]],null);for(let K=0;K<G.data.length;++K)G.data[K]+=(ue.data[K]-G.data[K])*this.guidance_scale;return G}}class re extends U{constructor(e){super(),this.temperature=e}_call(e,u){const B=u.data;for(let ue=0;ue<B.length;++ue)B[ue]/=this.temperature;return u}}class ce extends U{constructor(e,{filter_value:u=-1/0,min_tokens_to_keep:B=1}={}){if(super(),e<0||e>1)throw new Error(`\`top_p\` must be a float > 0 and < 1, but is ${e}`);if(!Number.isInteger(B)||B<1)throw new Error(`\`min_tokens_to_keep\` must be a positive integer, but is ${B}`);this.top_p=e,this.filter_value=u,this.min_tokens_to_keep=B}}class g extends U{constructor(e,{filter_value:u=-1/0,min_tokens_to_keep:B=1}={}){if(super(),!Number.isInteger(e)||e<0)throw new Error(`\`top_k\` must be a positive integer, but is ${e}`);this.top_k=Math.max(e,B),this.filter_value=u}}},"./src/generation/logits_sampler.js":(T,k,A)=>{A.r(k),A.d(k,{LogitsSampler:()=>U});var w=A("./src/utils/generic.js"),F=A("./src/utils/tensor.js"),Y=A("./src/utils/maths.js");A("./src/generation/configuration_utils.js");class U extends w.Callable{constructor(R){super(),this.generation_config=R}async _call(R){return this.sample(R)}async sample(R){throw Error("sample should be implemented in subclasses.")}getLogits(R,Q){let J=R.dims.at(-1),oe=R.data;if(Q===-1)oe=oe.slice(-J);else{let be=Q*J;oe=oe.slice(be,be+J)}return oe}randomSelect(R){let Q=0;for(let oe=0;oe<R.length;++oe)Q+=R[oe];let J=Math.random()*Q;for(let oe=0;oe<R.length;++oe)if(J-=R[oe],J<=0)return oe;return 0}static getSampler(R){if(R.do_sample)return new z(R);if(R.num_beams>1)return new N(R);if(R.num_return_sequences>1)throw Error(`num_return_sequences has to be 1 when doing greedy search, but is ${R.num_return_sequences}.`);return new H(R)}}class H extends U{async sample(R){const Q=(0,Y.max)(R.data)[1];return[[BigInt(Q),0]]}}class z extends U{async sample(R){let Q=R.dims.at(-1);this.generation_config.top_k>0&&(Q=Math.min(this.generation_config.top_k,Q));const[J,oe]=await(0,F.topk)(R,Q),be=(0,Y.softmax)(J.data);return Array.from({length:this.generation_config.num_beams},()=>{const Ie=this.randomSelect(be);return[oe.data[Ie],Math.log(be[Ie])]})}}class N extends U{async sample(R){let Q=R.dims.at(-1);this.generation_config.top_k>0&&(Q=Math.min(this.generation_config.top_k,Q));const[J,oe]=await(0,F.topk)(R,Q),be=(0,Y.softmax)(J.data);return Array.from({length:this.generation_config.num_beams},(Ie,ee)=>[oe.data[ee],Math.log(be[ee])])}}},"./src/generation/stopping_criteria.js":(T,k,A)=>{A.r(k),A.d(k,{EosTokenCriteria:()=>H,InterruptableStoppingCriteria:()=>z,MaxLengthCriteria:()=>U,StoppingCriteria:()=>F,StoppingCriteriaList:()=>Y});var w=A("./src/utils/generic.js");class F extends w.Callable{_call(D,R){throw Error("StoppingCriteria needs to be subclassed")}}class Y extends w.Callable{constructor(){super(),this.criteria=[]}push(D){this.criteria.push(D)}extend(D){D instanceof Y?D=D.criteria:D instanceof F&&(D=[D]),this.criteria.push(...D)}_call(D,R){const Q=new Array(D.length).fill(!1);for(const J of this.criteria){const oe=J(D,R);for(let be=0;be<Q.length;++be)Q[be]||(Q[be]=oe[be])}return Q}[Symbol.iterator](){return this.criteria.values()}}class U extends F{constructor(D,R=null){super(),this.max_length=D,this.max_position_embeddings=R}_call(D){return D.map(R=>R.length>=this.max_length)}}class H extends F{constructor(D){super(),Array.isArray(D)||(D=[D]),this.eos_token_id=D}_call(D,R){return D.map(Q=>{const J=Q.at(-1);return this.eos_token_id.some(oe=>J==oe)})}}class z extends F{constructor(){super(),this.interrupted=!1}interrupt(){this.interrupted=!0}reset(){this.interrupted=!1}_call(D,R){return new Array(D.length).fill(this.interrupted)}}},"./src/generation/streamers.js":(T,k,A)=>{A.r(k),A.d(k,{BaseStreamer:()=>U,TextStreamer:()=>z,WhisperTextStreamer:()=>N});var w=A("./src/utils/core.js"),F=A("./src/tokenizers.js"),Y=A("./src/env.js");class U{put(R){throw Error("Not implemented")}end(){throw Error("Not implemented")}}const H=Y.apis.IS_PROCESS_AVAILABLE?D=>process.stdout.write(D):D=>console.log(D);class z extends U{constructor(R,{skip_prompt:Q=!1,callback_function:J=null,token_callback_function:oe=null,skip_special_tokens:be=!0,decode_kwargs:Ie={},...ee}={}){super(),this.tokenizer=R,this.skip_prompt=Q,this.callback_function=J??H,this.token_callback_function=oe,this.decode_kwargs={skip_special_tokens:be,...Ie,...ee},this.token_cache=[],this.print_len=0,this.next_tokens_are_prompt=!0}put(R){var be;if(R.length>1)throw Error("TextStreamer only supports batch size of 1");if(this.skip_prompt&&this.next_tokens_are_prompt)return void(this.next_tokens_are_prompt=!1);const Q=R[0];(be=this.token_callback_function)==null||be.call(this,Q),this.token_cache=(0,w.mergeArrays)(this.token_cache,Q);const J=this.tokenizer.decode(this.token_cache,this.decode_kwargs);let oe;J.endsWith(`
`)?(oe=J.slice(this.print_len),this.token_cache=[],this.print_len=0):J.length>0&&(0,F.is_chinese_char)(J.charCodeAt(J.length-1))?(oe=J.slice(this.print_len),this.print_len+=oe.length):(oe=J.slice(this.print_len,J.lastIndexOf(" ")+1),this.print_len+=oe.length),this.on_finalized_text(oe,!1)}end(){let R;this.token_cache.length>0?(R=this.tokenizer.decode(this.token_cache,this.decode_kwargs).slice(this.print_len),this.token_cache=[],this.print_len=0):R="",this.next_tokens_are_prompt=!0,this.on_finalized_text(R,!0)}on_finalized_text(R,Q){var J,oe;R.length>0&&((J=this.callback_function)==null||J.call(this,R)),Q&&this.callback_function===H&&Y.apis.IS_PROCESS_AVAILABLE&&((oe=this.callback_function)==null||oe.call(this,`
`))}}class N extends z{constructor(R,{skip_prompt:Q=!1,callback_function:J=null,token_callback_function:oe=null,on_chunk_start:be=null,on_chunk_end:Ie=null,on_finalize:ee=null,time_precision:re=.02,skip_special_tokens:ce=!0,decode_kwargs:g={}}={}){super(R,{skip_prompt:Q,skip_special_tokens:ce,callback_function:J,token_callback_function:oe,decode_kwargs:g}),this.timestamp_begin=R.timestamp_begin,this.on_chunk_start=be,this.on_chunk_end=Ie,this.on_finalize=ee,this.time_precision=re,this.waiting_for_timestamp=!1}put(R){var J,oe;if(R.length>1)throw Error("WhisperTextStreamer only supports batch size of 1");const Q=R[0];if(Q.length===1){const be=Number(Q[0])-this.timestamp_begin;if(be>=0){const Ie=be*this.time_precision;this.waiting_for_timestamp?(J=this.on_chunk_end)==null||J.call(this,Ie):(oe=this.on_chunk_start)==null||oe.call(this,Ie),this.waiting_for_timestamp=!this.waiting_for_timestamp,R=[[]]}}return super.put(R)}end(){var R;super.end(),(R=this.on_finalize)==null||R.call(this)}}},"./src/models.js":(T,k,A)=>{A.r(k),A.d(k,{ASTForAudioClassification:()=>Uo,ASTModel:()=>Un,ASTPreTrainedModel:()=>yn,AlbertForMaskedLM:()=>vt,AlbertForQuestionAnswering:()=>Le,AlbertForSequenceClassification:()=>at,AlbertModel:()=>Ge,AlbertPreTrainedModel:()=>Ae,AutoModel:()=>nu,AutoModelForAudioClassification:()=>Yu,AutoModelForAudioFrameClassification:()=>Ku,AutoModelForCTC:()=>U0,AutoModelForCausalLM:()=>Vu,AutoModelForDepthEstimation:()=>H0,AutoModelForDocumentQuestionAnswering:()=>CA,AutoModelForImageClassification:()=>Vo,AutoModelForImageFeatureExtraction:()=>qn,AutoModelForImageMatting:()=>Au,AutoModelForImageSegmentation:()=>Wu,AutoModelForImageToImage:()=>Os,AutoModelForMaskGeneration:()=>Hu,AutoModelForMaskedLM:()=>Ka,AutoModelForNormalEstimation:()=>$a,AutoModelForObjectDetection:()=>W0,AutoModelForPoseEstimation:()=>Qn,AutoModelForQuestionAnswering:()=>Ps,AutoModelForSemanticSegmentation:()=>V0,AutoModelForSeq2SeqLM:()=>iu,AutoModelForSequenceClassification:()=>ju,AutoModelForSpeechSeq2Seq:()=>_o,AutoModelForTextToSpectrogram:()=>ou,AutoModelForTextToWaveform:()=>j0,AutoModelForTokenClassification:()=>Is,AutoModelForUniversalSegmentation:()=>Uu,AutoModelForVision2Seq:()=>zs,AutoModelForXVector:()=>rd,AutoModelForZeroShotObjectDetection:()=>td,BartForConditionalGeneration:()=>Bs,BartForSequenceClassification:()=>Or,BartModel:()=>hs,BartPretrainedModel:()=>Xr,BaseModelOutput:()=>Tt,BeitForImageClassification:()=>pt,BeitModel:()=>ot,BeitPreTrainedModel:()=>qe,BertForMaskedLM:()=>pe,BertForQuestionAnswering:()=>X,BertForSequenceClassification:()=>Ut,BertForTokenClassification:()=>Pe,BertModel:()=>Wt,BertPreTrainedModel:()=>zt,BlenderbotForConditionalGeneration:()=>qs,BlenderbotModel:()=>Js,BlenderbotPreTrainedModel:()=>Vr,BlenderbotSmallForConditionalGeneration:()=>Rr,BlenderbotSmallModel:()=>_s,BlenderbotSmallPreTrainedModel:()=>es,BloomForCausalLM:()=>ul,BloomModel:()=>OA,BloomPreTrainedModel:()=>oA,CLIPModel:()=>Nr,CLIPPreTrainedModel:()=>ji,CLIPSegForImageSegmentation:()=>li,CLIPSegModel:()=>zr,CLIPSegPreTrainedModel:()=>$i,CLIPTextModel:()=>vA,CLIPTextModelWithProjection:()=>Ko,CLIPVisionModel:()=>En,CLIPVisionModelWithProjection:()=>Ga,CamembertForMaskedLM:()=>ln,CamembertForQuestionAnswering:()=>sa,CamembertForSequenceClassification:()=>hn,CamembertForTokenClassification:()=>kn,CamembertModel:()=>In,CamembertPreTrainedModel:()=>Ba,CausalLMOutput:()=>st,CausalLMOutputWithPast:()=>Qt,ChineseCLIPModel:()=>el,ChineseCLIPPreTrainedModel:()=>xA,ClapAudioModelWithProjection:()=>Tc,ClapModel:()=>vu,ClapPreTrainedModel:()=>yo,ClapTextModelWithProjection:()=>Bc,CodeGenForCausalLM:()=>Pi,CodeGenModel:()=>Za,CodeGenPreTrainedModel:()=>bi,CohereForCausalLM:()=>zo,CohereModel:()=>On,CoherePreTrainedModel:()=>go,ConvBertForMaskedLM:()=>Ks,ConvBertForQuestionAnswering:()=>oa,ConvBertForSequenceClassification:()=>is,ConvBertForTokenClassification:()=>wn,ConvBertModel:()=>Cs,ConvBertPreTrainedModel:()=>Gs,ConvNextForImageClassification:()=>pu,ConvNextModel:()=>ac,ConvNextPreTrainedModel:()=>Gl,ConvNextV2ForImageClassification:()=>ic,ConvNextV2Model:()=>nc,ConvNextV2PreTrainedModel:()=>Fl,DPTForDepthEstimation:()=>LA,DPTModel:()=>so,DPTPreTrainedModel:()=>wo,DebertaForMaskedLM:()=>jr,DebertaForQuestionAnswering:()=>Ss,DebertaForSequenceClassification:()=>Vs,DebertaForTokenClassification:()=>xn,DebertaModel:()=>Qr,DebertaPreTrainedModel:()=>tr,DebertaV2ForMaskedLM:()=>_a,DebertaV2ForQuestionAnswering:()=>Mi,DebertaV2ForSequenceClassification:()=>Tn,DebertaV2ForTokenClassification:()=>Ms,DebertaV2Model:()=>Xa,DebertaV2PreTrainedModel:()=>Ls,DecisionTransformerModel:()=>Lc,DecisionTransformerPreTrainedModel:()=>Nc,DeiTForImageClassification:()=>Fa,DeiTModel:()=>Pa,DeiTPreTrainedModel:()=>fa,DepthAnythingForDepthEstimation:()=>RA,DepthAnythingPreTrainedModel:()=>uA,DepthProForDepthEstimation:()=>ec,DepthProPreTrainedModel:()=>fu,DetrForObjectDetection:()=>Lt,DetrForSegmentation:()=>Xt,DetrModel:()=>Ft,DetrObjectDetectionOutput:()=>Ar,DetrPreTrainedModel:()=>Mt,DetrSegmentationOutput:()=>Mr,Dinov2ForImageClassification:()=>Ki,Dinov2Model:()=>Ac,Dinov2PreTrainedModel:()=>oc,Dinov2WithRegistersForImageClassification:()=>gA,Dinov2WithRegistersModel:()=>dA,Dinov2WithRegistersPreTrainedModel:()=>ao,DistilBertForMaskedLM:()=>Dn,DistilBertForQuestionAnswering:()=>Pn,DistilBertForSequenceClassification:()=>$n,DistilBertForTokenClassification:()=>Ei,DistilBertModel:()=>Jn,DistilBertPreTrainedModel:()=>Ma,DonutSwinModel:()=>c0,DonutSwinPreTrainedModel:()=>sc,EfficientNetForImageClassification:()=>Eu,EfficientNetModel:()=>_0,EfficientNetPreTrainedModel:()=>Cl,ElectraForMaskedLM:()=>Wr,ElectraForQuestionAnswering:()=>pn,ElectraForSequenceClassification:()=>vr,ElectraForTokenClassification:()=>Es,ElectraModel:()=>gr,ElectraPreTrainedModel:()=>Ea,EsmForMaskedLM:()=>Vn,EsmForSequenceClassification:()=>Sn,EsmForTokenClassification:()=>cn,EsmModel:()=>Bi,EsmPreTrainedModel:()=>ma,ExaoneForCausalLM:()=>TA,ExaoneModel:()=>Al,ExaonePreTrainedModel:()=>Ci,FalconForCausalLM:()=>w0,FalconModel:()=>Ul,FalconPreTrainedModel:()=>C0,FastViTForImageClassification:()=>s,FastViTModel:()=>r,FastViTPreTrainedModel:()=>t,Florence2ForConditionalGeneration:()=>Hn,Florence2PreTrainedModel:()=>mi,GLPNForDepthEstimation:()=>l0,GLPNModel:()=>A0,GLPNPreTrainedModel:()=>o0,GPT2LMHeadModel:()=>Ti,GPT2Model:()=>zn,GPT2PreTrainedModel:()=>Zo,GPTBigCodeForCausalLM:()=>mn,GPTBigCodeModel:()=>EA,GPTBigCodePreTrainedModel:()=>ci,GPTJForCausalLM:()=>MA,GPTJModel:()=>Fs,GPTJPreTrainedModel:()=>ps,GPTNeoForCausalLM:()=>nl,GPTNeoModel:()=>al,GPTNeoPreTrainedModel:()=>Po,GPTNeoXForCausalLM:()=>ol,GPTNeoXModel:()=>il,GPTNeoXPreTrainedModel:()=>La,Gemma2ForCausalLM:()=>po,Gemma2Model:()=>fo,Gemma2PreTrainedModel:()=>Oo,GemmaForCausalLM:()=>SA,GemmaModel:()=>ui,GemmaPreTrainedModel:()=>nA,GlmForCausalLM:()=>uo,GlmModel:()=>un,GlmPreTrainedModel:()=>$o,GraniteForCausalLM:()=>aA,GraniteModel:()=>DA,GranitePreTrainedModel:()=>Ra,GroundingDinoForObjectDetection:()=>zl,GroundingDinoPreTrainedModel:()=>hu,GroupViTModel:()=>os,GroupViTPreTrainedModel:()=>Co,HeliumForCausalLM:()=>co,HeliumModel:()=>Ta,HeliumPreTrainedModel:()=>Go,HieraForImageClassification:()=>Ya,HieraModel:()=>Ha,HieraPreTrainedModel:()=>za,HubertForCTC:()=>_u,HubertForSequenceClassification:()=>yc,HubertModel:()=>kc,HubertPreTrainedModel:()=>yu,IJepaForImageClassification:()=>QA,IJepaModel:()=>Hi,IJepaPreTrainedModel:()=>Ui,Idefics3ForConditionalGeneration:()=>_A,Idefics3PreTrainedModel:()=>JA,ImageMattingOutput:()=>Jt,JAISLMHeadModel:()=>sl,JAISModel:()=>rl,JAISPreTrainedModel:()=>Jo,JinaCLIPModel:()=>Ji,JinaCLIPPreTrainedModel:()=>Wi,JinaCLIPTextModel:()=>tl,JinaCLIPVisionModel:()=>Xo,LlamaForCausalLM:()=>So,LlamaModel:()=>BA,LlamaPreTrainedModel:()=>Do,LlavaForConditionalGeneration:()=>To,LlavaOnevisionForConditionalGeneration:()=>_n,LlavaPreTrainedModel:()=>Bo,LongT5ForConditionalGeneration:()=>Gr,LongT5Model:()=>xr,LongT5PreTrainedModel:()=>hr,M2M100ForConditionalGeneration:()=>fA,M2M100Model:()=>fc,M2M100PreTrainedModel:()=>g0,MBartForCausalLM:()=>Ws,MBartForConditionalGeneration:()=>Lr,MBartForSequenceClassification:()=>Rs,MBartModel:()=>rr,MBartPreTrainedModel:()=>Kt,MPNetForMaskedLM:()=>Ai,MPNetForQuestionAnswering:()=>Gn,MPNetForSequenceClassification:()=>hi,MPNetForTokenClassification:()=>Wn,MPNetModel:()=>pi,MPNetPreTrainedModel:()=>qr,MT5ForConditionalGeneration:()=>gs,MT5Model:()=>_r,MT5PreTrainedModel:()=>wr,MarianMTModel:()=>gc,MarianModel:()=>dc,MarianPreTrainedModel:()=>an,MaskFormerForInstanceSegmentation:()=>i0,MaskFormerModel:()=>rc,MaskFormerPreTrainedModel:()=>tc,MaskedLMOutput:()=>he,MgpstrForSceneTextRecognition:()=>Wc,MgpstrModelOutput:()=>B0,MgpstrPreTrainedModel:()=>Vc,MistralForCausalLM:()=>Mc,MistralModel:()=>b0,MistralPreTrainedModel:()=>bl,MobileBertForMaskedLM:()=>ri,MobileBertForQuestionAnswering:()=>ys,MobileBertForSequenceClassification:()=>ds,MobileBertModel:()=>ti,MobileBertPreTrainedModel:()=>ei,MobileLLMForCausalLM:()=>Di,MobileLLMModel:()=>tA,MobileLLMPreTrainedModel:()=>eA,MobileNetV1ForImageClassification:()=>Gc,MobileNetV1Model:()=>Sc,MobileNetV1PreTrainedModel:()=>M0,MobileNetV2ForImageClassification:()=>Fc,MobileNetV2Model:()=>Tu,MobileNetV2PreTrainedModel:()=>ql,MobileNetV3ForImageClassification:()=>zc,MobileNetV3Model:()=>Pu,MobileNetV3PreTrainedModel:()=>Xl,MobileNetV4ForImageClassification:()=>Qc,MobileNetV4Model:()=>Oc,MobileNetV4PreTrainedModel:()=>E0,MobileViTForImageClassification:()=>f,MobileViTModel:()=>d,MobileViTPreTrainedModel:()=>o,MobileViTV2ForImageClassification:()=>y,MobileViTV2Model:()=>M,MobileViTV2PreTrainedModel:()=>m,ModelOutput:()=>It,ModernBertForMaskedLM:()=>He,ModernBertForSequenceClassification:()=>ct,ModernBertForTokenClassification:()=>kt,ModernBertModel:()=>fe,ModernBertPreTrainedModel:()=>ge,Moondream1ForConditionalGeneration:()=>Li,MoonshineForConditionalGeneration:()=>Fn,MoonshineModel:()=>Dl,MoonshinePreTrainedModel:()=>yA,MptForCausalLM:()=>AA,MptModel:()=>di,MptPreTrainedModel:()=>wi,MultiModalityCausalLM:()=>jc,MultiModalityPreTrainedModel:()=>Rc,MusicgenForCausalLM:()=>Bu,MusicgenForConditionalGeneration:()=>x0,MusicgenModel:()=>v0,MusicgenPreTrainedModel:()=>Kl,NomicBertModel:()=>Ht,NomicBertPreTrainedModel:()=>Dt,OPTForCausalLM:()=>na,OPTModel:()=>rn,OPTPreTrainedModel:()=>eo,Olmo2ForCausalLM:()=>sA,Olmo2Model:()=>Si,Olmo2PreTrainedModel:()=>rA,OlmoForCausalLM:()=>PA,OlmoModel:()=>ea,OlmoPreTrainedModel:()=>Fo,OpenELMForCausalLM:()=>GA,OpenELMModel:()=>ll,OpenELMPreTrainedModel:()=>Qo,OwlViTForObjectDetection:()=>ae,OwlViTModel:()=>q,OwlViTPreTrainedModel:()=>P,Owlv2ForObjectDetection:()=>Be,Owlv2Model:()=>ye,Owlv2PreTrainedModel:()=>de,PaliGemmaForConditionalGeneration:()=>Xi,PaliGemmaPreTrainedModel:()=>Ri,PatchTSMixerForPrediction:()=>wl,PatchTSMixerModel:()=>T0,PatchTSMixerPreTrainedModel:()=>Uc,PatchTSTForPrediction:()=>Zl,PatchTSTModel:()=>Du,PatchTSTPreTrainedModel:()=>Aa,Phi3ForCausalLM:()=>cl,Phi3Model:()=>ho,Phi3PreTrainedModel:()=>Gi,Phi3VForCausalLM:()=>Br,Phi3VPreTrainedModel:()=>$A,PhiForCausalLM:()=>zA,PhiModel:()=>ba,PhiPreTrainedModel:()=>Yn,PreTrainedModel:()=>$e,PretrainedMixin:()=>la,PvtForImageClassification:()=>Lo,PvtModel:()=>bo,PvtPreTrainedModel:()=>gl,PyAnnoteForAudioFrameClassification:()=>mc,PyAnnoteModel:()=>bu,PyAnnotePreTrainedModel:()=>Nl,QuestionAnsweringModelOutput:()=>Te,Qwen2ForCausalLM:()=>gn,Qwen2Model:()=>No,Qwen2PreTrainedModel:()=>dn,Qwen2VLForConditionalGeneration:()=>iA,Qwen2VLPreTrainedModel:()=>FA,RTDetrForObjectDetection:()=>$r,RTDetrModel:()=>Yr,RTDetrObjectDetectionOutput:()=>ls,RTDetrPreTrainedModel:()=>Tr,ResNetForImageClassification:()=>vn,ResNetModel:()=>sn,ResNetPreTrainedModel:()=>Ja,RoFormerForMaskedLM:()=>nr,RoFormerForQuestionAnswering:()=>ns,RoFormerForSequenceClassification:()=>lr,RoFormerForTokenClassification:()=>Fr,RoFormerModel:()=>sr,RoFormerPreTrainedModel:()=>Vt,RobertaForMaskedLM:()=>Us,RobertaForQuestionAnswering:()=>Sa,RobertaForSequenceClassification:()=>Ua,RobertaForTokenClassification:()=>Ir,RobertaModel:()=>Da,RobertaPreTrainedModel:()=>cs,SamImageSegmentationOutput:()=>d0,SamModel:()=>uc,SamPreTrainedModel:()=>u0,SapiensForDepthEstimation:()=>$0,SapiensForNormalEstimation:()=>Sl,SapiensForSemanticSegmentation:()=>J0,SapiensPreTrainedModel:()=>Io,SegformerForImageClassification:()=>Pc,SegformerForSemanticSegmentation:()=>Dc,SegformerModel:()=>y0,SegformerPreTrainedModel:()=>Hl,Seq2SeqLMOutput:()=>Il,SequenceClassifierOutput:()=>Qs,SiglipModel:()=>Zi,SiglipPreTrainedModel:()=>Vi,SiglipTextModel:()=>qo,SiglipVisionModel:()=>ia,SpeechT5ForSpeechToText:()=>h0,SpeechT5ForTextToSpeech:()=>m0,SpeechT5HifiGan:()=>Vl,SpeechT5Model:()=>p0,SpeechT5PreTrainedModel:()=>mA,SqueezeBertForMaskedLM:()=>ut,SqueezeBertForQuestionAnswering:()=>tt,SqueezeBertForSequenceClassification:()=>wt,SqueezeBertModel:()=>Qe,SqueezeBertPreTrainedModel:()=>qt,StableLmForCausalLM:()=>Mu,StableLmModel:()=>xu,StableLmPreTrainedModel:()=>Yl,Starcoder2ForCausalLM:()=>Ec,Starcoder2Model:()=>Kn,Starcoder2PreTrainedModel:()=>Wl,StyleTextToSpeech2Model:()=>hA,StyleTextToSpeech2PreTrainedModel:()=>pA,Swin2SRForImageSuperResolution:()=>ro,Swin2SRModel:()=>Ro,Swin2SRPreTrainedModel:()=>Yi,SwinForImageClassification:()=>zi,SwinModel:()=>Ii,SwinPreTrainedModel:()=>si,T5ForConditionalGeneration:()=>yr,T5Model:()=>ir,T5PreTrainedModel:()=>Pt,TableTransformerForObjectDetection:()=>$s,TableTransformerModel:()=>Hs,TableTransformerObjectDetectionOutput:()=>ga,TableTransformerPreTrainedModel:()=>Ts,TokenClassifierOutput:()=>Bn,TrOCRForCausalLM:()=>xc,TrOCRPreTrainedModel:()=>vc,UniSpeechForCTC:()=>f0,UniSpeechForSequenceClassification:()=>Ll,UniSpeechModel:()=>Cu,UniSpeechPreTrainedModel:()=>hl,UniSpeechSatForAudioFrameClassification:()=>wc,UniSpeechSatForCTC:()=>Cc,UniSpeechSatForSequenceClassification:()=>Iu,UniSpeechSatModel:()=>wu,UniSpeechSatPreTrainedModel:()=>ml,ViTForImageClassification:()=>Fi,ViTMAEModel:()=>lA,ViTMAEPreTrainedModel:()=>Ca,ViTMSNForImageClassification:()=>fl,ViTMSNModel:()=>to,ViTMSNPreTrainedModel:()=>cA,ViTModel:()=>dl,ViTPreTrainedModel:()=>mo,VisionEncoderDecoderModel:()=>aa,VitMatteForImageMatting:()=>i,VitMattePreTrainedModel:()=>a,VitPoseForPoseEstimation:()=>NA,VitPosePreTrainedModel:()=>bn,VitsModel:()=>k0,VitsModelOutput:()=>$t,VitsPreTrainedModel:()=>I0,Wav2Vec2BertForCTC:()=>VA,Wav2Vec2BertForSequenceClassification:()=>Ic,Wav2Vec2BertModel:()=>ku,Wav2Vec2BertPreTrainedModel:()=>Rl,Wav2Vec2ForAudioFrameClassification:()=>Ql,Wav2Vec2ForCTC:()=>hc,Wav2Vec2ForSequenceClassification:()=>mu,Wav2Vec2Model:()=>pc,Wav2Vec2PreTrainedModel:()=>jo,WavLMForAudioFrameClassification:()=>ko,WavLMForCTC:()=>jl,WavLMForSequenceClassification:()=>ed,WavLMForXVector:()=>no,WavLMModel:()=>_c,WavLMPreTrainedModel:()=>WA,WeSpeakerResNetModel:()=>bc,WeSpeakerResNetPreTrainedModel:()=>pl,WhisperForConditionalGeneration:()=>Yo,WhisperModel:()=>Ni,WhisperPreTrainedModel:()=>Ho,XLMForQuestionAnswering:()=>lo,XLMForSequenceClassification:()=>kA,XLMForTokenClassification:()=>XA,XLMModel:()=>ss,XLMPreTrainedModel:()=>or,XLMRobertaForMaskedLM:()=>Eo,XLMRobertaForQuestionAnswering:()=>Hr,XLMRobertaForSequenceClassification:()=>Mn,XLMRobertaForTokenClassification:()=>tn,XLMRobertaModel:()=>ZA,XLMRobertaPreTrainedModel:()=>ws,XLMWithLMHeadModel:()=>qA,XVectorOutput:()=>qu,YolosForObjectDetection:()=>lc,YolosModel:()=>Ol,YolosObjectDetectionOutput:()=>cc,YolosPreTrainedModel:()=>jA});var w=A("./src/configs.js"),F=A("./src/backends/onnx.js"),Y=A("./src/utils/dtypes.js"),U=A("./src/utils/generic.js"),H=A("./src/utils/core.js"),z=A("./src/utils/hub.js"),N=A("./src/utils/constants.js"),D=A("./src/generation/logits_process.js"),R=A("./src/generation/configuration_utils.js"),Q=A("./src/utils/tensor.js"),J=A("./src/utils/image.js"),oe=A("./src/utils/maths.js"),be=A("./src/generation/stopping_criteria.js"),Ie=A("./src/generation/logits_sampler.js"),ee=A("./src/env.js"),re=A("./src/models/whisper/generation_whisper.js"),ce=A("./src/models/whisper/common_whisper.js");const g=0,I=1,e=2,u=3,B=4,ue=5,G=6,K=7,Ve=8,ve=9,Re=new Map,Ke=new Map,nt=new Map;async function Ct(ie,ke,Ue){return Object.fromEntries(await Promise.all(Object.keys(ke).map(async yt=>{const{buffer:Nt,session_options:Rt,session_config:Yt}=await async function(cr,mr,br){var Nn;const Cr=((Nn=br.config)==null?void 0:Nn["transformers.js_config"])??{};let Pr=br.device??Cr.device;Pr&&typeof Pr!="string"&&(Pr.hasOwnProperty(mr)?Pr=Pr[mr]:(console.warn(`device not specified for "${mr}". Using the default device.`),Pr=null));const Zr=Pr??(ee.apis.IS_NODE_ENV?"cpu":"wasm"),ms=(0,F.deviceToExecutionProviders)(Zr);let Ur=br.dtype??Cr.dtype;if(typeof Ur!="string"&&(Ur&&Ur.hasOwnProperty(mr)?Ur=Ur[mr]:(Ur=Y.DEFAULT_DEVICE_DTYPE_MAPPING[Zr]??Y.DATA_TYPES.fp32,console.warn(`dtype not specified for "${mr}". Using the default dtype (${Ur}) for this device (${Zr}).`))),Ur===Y.DATA_TYPES.auto){let ua=Cr.dtype;typeof ua!="string"&&(ua=ua[mr]),Ur=ua&&ua!==Y.DATA_TYPES.auto&&Y.DATA_TYPES.hasOwnProperty(ua)?ua:Y.DEFAULT_DEVICE_DTYPE_MAPPING[Zr]??Y.DATA_TYPES.fp32}const rs=Ur;if(!Y.DEFAULT_DTYPE_SUFFIX_MAPPING.hasOwnProperty(rs))throw new Error(`Invalid dtype: ${rs}. Should be one of: ${Object.keys(Y.DATA_TYPES).join(", ")}`);if(rs===Y.DATA_TYPES.fp16&&Zr==="webgpu"&&!await(0,Y.isWebGpuFp16Supported)())throw new Error(`The device (${Zr}) does not support fp16.`);const as=Cr.kv_cache_dtype?typeof Cr.kv_cache_dtype=="string"?Cr.kv_cache_dtype:Cr.kv_cache_dtype[rs]??"float32":void 0;if(as&&!["float32","float16"].includes(as))throw new Error(`Invalid kv_cache_dtype: ${as}. Should be one of: float32, float16`);const xs={dtype:rs,kv_cache_dtype:as},Ns=Y.DEFAULT_DTYPE_SUFFIX_MAPPING[rs],ca=`${br.subfolder??""}/${mr}${Ns}.onnx`,pa={...br.session_options};pa.executionProviders??(pa.executionProviders=ms);const nn=Cr.free_dimension_overrides;nn?pa.freeDimensionOverrides??(pa.freeDimensionOverrides=nn):Zr.startsWith("webnn")&&!pa.freeDimensionOverrides&&console.warn('WebNN does not currently support dynamic shapes and requires `free_dimension_overrides` to be set in config.json as a field within "transformers.js_config". When `free_dimension_overrides` is not set, you may experience significant performance degradation.');const ha=(0,z.getModelFile)(cr,ca,!0,br),wa=br.use_external_data_format??Cr.use_external_data_format;let qa=[];if(wa&&(wa===!0||typeof wa=="object"&&wa.hasOwnProperty(mr)&&wa[mr]===!0)){if(ee.apis.IS_NODE_ENV)throw new Error("External data format is not yet supported in Node.js");const ua=`${mr}${Ns}.onnx_data`,Ln=`${br.subfolder??""}/${ua}`;qa.push(new Promise(async(Ia,ja)=>{const ki=await(0,z.getModelFile)(cr,Ln,!0,br);Ia({path:ua,data:ki})}))}else pa.externalData!==void 0&&(qa=pa.externalData.map(async ua=>{if(typeof ua.data=="string"){const Ln=await(0,z.getModelFile)(cr,ua.data,!0,br);return{...ua,data:Ln}}return ua}));if(qa.length>0&&(pa.externalData=await Promise.all(qa)),Zr==="webgpu"){const ua=(0,w.getKeyValueShapes)(br.config,{prefix:"present"});if(Object.keys(ua).length>0&&!(0,F.isONNXProxy)()){const Ln={};for(const Ia in ua)Ln[Ia]="gpu-buffer";pa.preferredOutputLocation=Ln}}return{buffer:await ha,session_options:pa,session_config:xs}}(ie,ke[yt],Ue);return[yt,await(0,F.createInferenceSession)(Nt,Rt,Yt)]})))}async function ht(ie,ke,Ue){return Object.fromEntries(await Promise.all(Object.keys(ke).map(async yt=>[yt,await(0,z.getModelJSON)(ie,ke[yt],!1,Ue)])))}async function et(ie,ke){const Ue=function(yt,Nt){const Rt=Object.create(null),Yt=[];for(const br of yt.inputNames){const Cr=Nt[br];Cr instanceof Q.Tensor?Rt[br]=(0,F.isONNXProxy)()?Cr.clone():Cr:Yt.push(br)}if(Yt.length>0)throw new Error(`An error occurred during model execution: "Missing the following inputs: ${Yt.join(", ")}.`);const cr=Object.keys(Nt).length,mr=yt.inputNames.length;if(cr>mr){let br=Object.keys(Nt).filter(Cr=>!yt.inputNames.includes(Cr));console.warn(`WARNING: Too many inputs were provided (${cr} > ${mr}). The following inputs will be ignored: "${br.join(", ")}".`)}return Rt}(ie,ke);try{const yt=Object.fromEntries(Object.entries(Ue).map(([Rt,Yt])=>[Rt,Yt.ort_tensor]));let Nt=await ie.run(yt);return Nt=ze(Nt),Nt}catch(yt){const Nt=Object.fromEntries(Object.entries(Ue).map(([Rt,{type:Yt,dims:cr,data:mr}])=>[Rt,{type:Yt,dims:cr,data:mr}]));throw console.error(`An error occurred during model execution: "${yt}".`),console.error("Inputs given to model:",Nt),yt}}function ze(ie){for(let ke in ie)(0,F.isONNXTensor)(ie[ke])?ie[ke]=new Q.Tensor(ie[ke]):typeof ie[ke]=="object"&&ze(ie[ke]);return ie}function Se(ie){if(ie instanceof Q.Tensor)return ie;if(ie.length===0)throw Error("items must be non-empty");if(Array.isArray(ie[0])){if(ie.some(ke=>ke.length!==ie[0].length))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=True' and/or 'truncation=True' to have batched tensors with the same length.");return new Q.Tensor("int64",BigInt64Array.from(ie.flat().map(ke=>BigInt(ke))),[ie.length,ie[0].length])}return new Q.Tensor("int64",BigInt64Array.from(ie.map(ke=>BigInt(ke))),[1,ie.length])}function xe(ie){return new Q.Tensor("bool",[ie],[1])}async function Me(ie,ke){let{encoder_outputs:Ue,input_ids:yt,decoder_input_ids:Nt,...Rt}=ke;if(!Ue){const Yt=(0,H.pick)(ke,ie.sessions.model.inputNames);Ue=(await ft(ie,Yt)).last_hidden_state}return Rt.input_ids=Nt,Rt.encoder_hidden_states=Ue,ie.sessions.decoder_model_merged.inputNames.includes("encoder_attention_mask")&&(Rt.encoder_attention_mask=ke.attention_mask),await gt(ie,Rt,!0)}async function ft(ie,ke){const Ue=ie.sessions.model,yt=(0,H.pick)(ke,Ue.inputNames);if(Ue.inputNames.includes("inputs_embeds")&&!yt.inputs_embeds){if(!ke.input_ids)throw new Error("Both `input_ids` and `inputs_embeds` are missing in the model inputs.");yt.inputs_embeds=await ie.encode_text({input_ids:ke.input_ids})}if(Ue.inputNames.includes("token_type_ids")&&!yt.token_type_ids){if(!yt.input_ids)throw new Error("Both `input_ids` and `token_type_ids` are missing in the model inputs.");yt.token_type_ids=(0,Q.zeros_like)(yt.input_ids)}if(Ue.inputNames.includes("pixel_mask")&&!yt.pixel_mask){if(!yt.pixel_values)throw new Error("Both `pixel_values` and `pixel_mask` are missing in the model inputs.");const Nt=yt.pixel_values.dims;yt.pixel_mask=(0,Q.ones)([Nt[0],Nt[2],Nt[3]])}return await et(Ue,yt)}async function gt(ie,ke,Ue=!1){const yt=ie.sessions[Ue?"decoder_model_merged":"model"],{past_key_values:Nt,...Rt}=ke;if(yt.inputNames.includes("use_cache_branch")&&(Rt.use_cache_branch=xe(!!Nt)),yt.inputNames.includes("position_ids")&&Rt.attention_mask&&!Rt.position_ids){const cr=ie.config.model_type==="paligemma"?1:0;Rt.position_ids=function(mr,br=null,Cr=0){const{input_ids:Pr,inputs_embeds:Zr,attention_mask:ms}=mr,{data:Ur,dims:rs}=bt(ms,Cr);let as=new Q.Tensor("int64",Ur,rs);if(br){const xs=-(Pr??Zr).dims.at(1);as=as.slice(null,[xs,null])}return as}(Rt,Nt,cr)}ie.addPastKeyValues(Rt,Nt);const Yt=(0,H.pick)(Rt,yt.inputNames);return await et(yt,Yt)}function _t({image_token_id:ie,inputs_embeds:ke,image_features:Ue,input_ids:yt,attention_mask:Nt}){const Rt=yt.tolist().map(br=>br.reduce((Cr,Pr,Zr)=>(Pr==ie&&Cr.push(Zr),Cr),[])),Yt=Rt.reduce((br,Cr)=>br+Cr.length,0),cr=Ue.dims[0];if(Yt!==cr)throw new Error(`Image features and image tokens do not match: tokens: ${Yt}, features ${cr}`);let mr=0;for(let br=0;br<Rt.length;++br){const Cr=Rt[br],Pr=ke[br];for(let Zr=0;Zr<Cr.length;++Zr)Pr[Cr[Zr]].data.set(Ue[mr++].data)}return{inputs_embeds:ke,attention_mask:Nt}}async function Je(ie,{input_ids:ke=null,attention_mask:Ue=null,pixel_values:yt=null,position_ids:Nt=null,inputs_embeds:Rt=null,past_key_values:Yt=null,generation_config:cr=null,logits_processor:mr=null,...br}){if(!Rt){if(Rt=await ie.encode_text({input_ids:ke,...br}),yt&&ke.dims[1]!==1){const Cr=await ie.encode_image({pixel_values:yt,...br});({inputs_embeds:Rt,attention_mask:Ue}=ie._merge_input_ids_with_image_features({image_features:Cr,inputs_embeds:Rt,input_ids:ke,attention_mask:Ue}))}else if(Yt&&yt&&ke.dims[1]===1){const Cr=ke.dims[1],Pr=Object.values(Yt)[0].dims.at(-2);Ue=(0,Q.cat)([(0,Q.ones)([ke.dims[0],Pr]),Ue.slice(null,[Ue.dims[1]-Cr,Ue.dims[1]])],1)}}if(!Nt&&ie.config.model_type==="qwen2_vl"){const{image_grid_thw:Cr,video_grid_thw:Pr}=br;[Nt]=ie.get_rope_index(ke,Cr,Pr,Ue)}return await gt(ie,{inputs_embeds:Rt,past_key_values:Yt,attention_mask:Ue,position_ids:Nt,generation_config:cr,logits_processor:mr},!0)}function bt(ie,ke=0){const[Ue,yt]=ie.dims,Nt=ie.data,Rt=new BigInt64Array(Nt.length);for(let Yt=0;Yt<Ue;++Yt){const cr=Yt*yt;let mr=BigInt(ke);for(let br=0;br<yt;++br){const Cr=cr+br;Nt[Cr]===0n?Rt[Cr]=BigInt(1):(Rt[Cr]=mr,mr+=Nt[Cr])}}return{data:Rt,dims:ie.dims}}function rt(ie,ke,Ue,yt){if(Ue.past_key_values){const Nt=Object.values(Ue.past_key_values)[0].dims.at(-2),{input_ids:Rt,attention_mask:Yt}=Ue;if(!(Yt&&Yt.dims[1]>Rt.dims[1])){if(Nt<Rt.dims[1])Ue.input_ids=Rt.slice(null,[Nt,null]);else if(ie.config.image_token_index!=null&&Rt.data.some(cr=>cr==ie.config.image_token_index)){const cr=ie.config.num_image_tokens;if(!cr)throw new Error("`num_image_tokens` is missing in the model configuration.");const mr=Rt.dims[1]-(Nt-cr);Ue.input_ids=Rt.slice(null,[-mr,null]),Ue.attention_mask=(0,Q.ones)([1,Nt+mr])}}}return Ue}function Ne(ie,ke,Ue,yt){return Ue.past_key_values&&(ke=ke.map(Nt=>[Nt.at(-1)])),{...Ue,decoder_input_ids:Se(ke)}}function it(ie,...ke){return ie.config.is_encoder_decoder?Ne(ie,...ke):rt(ie,...ke)}function Et(ie,ke,Ue,yt){const Nt=!!Ue.past_key_values;return yt.guidance_scale!==null&&yt.guidance_scale>1&&(Nt?Ue.input_ids=(0,Q.cat)([Ue.input_ids,Ue.input_ids],0):(Ue.input_ids=(0,Q.cat)([Ue.input_ids,(0,Q.full_like)(Ue.input_ids,BigInt(yt.pad_token_id))],0),Ue.attention_mask=(0,Q.cat)([Ue.attention_mask,(0,Q.full_like)(Ue.attention_mask,0n)],0))),!Nt&&Ue.pixel_values||(Ue.pixel_values=(0,Q.full)([0,0,3,384,384],1)),Nt&&(Ue.images_seq_mask=new Q.Tensor("bool",new Array(1).fill(!0).fill(!1,0,1),[1,1]),Ue.images_emb_mask=new Q.Tensor("bool",new Array(0).fill(!1),[1,1,0])),Ue}class $e extends U.Callable{constructor(Ue,yt,Nt){super();We(this,"main_input_name","input_ids");We(this,"forward_params",["input_ids","attention_mask"]);this.config=Ue,this.sessions=yt,this.configs=Nt;const Rt=nt.get(this.constructor),Yt=Re.get(Rt);switch(this.can_generate=!1,this._forward=null,this._prepare_inputs_for_generation=null,Yt){case B:this.can_generate=!0,this._forward=gt,this._prepare_inputs_for_generation=rt;break;case e:case u:case K:this.can_generate=!0,this._forward=Me,this._prepare_inputs_for_generation=Ne;break;case I:this._forward=Me;break;case G:this.can_generate=!0,this._forward=Je,this._prepare_inputs_for_generation=it;break;case ve:this.can_generate=!0,this._prepare_inputs_for_generation=it;break;case Ve:this.can_generate=!0,this._prepare_inputs_for_generation=Et;break;default:this._forward=ft}this.can_generate&&this.forward_params.push("past_key_values"),this.custom_config=this.config["transformers.js_config"]??{}}async dispose(){var yt;const Ue=[];for(const Nt of Object.values(this.sessions))(yt=Nt==null?void 0:Nt.handler)!=null&&yt.dispose&&Ue.push(Nt.handler.dispose());return await Promise.all(Ue)}static async from_pretrained(Ue,{progress_callback:yt=null,config:Nt=null,cache_dir:Rt=null,local_files_only:Yt=!1,revision:cr="main",model_file_name:mr=null,subfolder:br="onnx",device:Cr=null,dtype:Pr=null,use_external_data_format:Zr=null,session_options:ms={}}={}){let Ur={progress_callback:yt,config:Nt,cache_dir:Rt,local_files_only:Yt,revision:cr,model_file_name:mr,subfolder:br,device:Cr,dtype:Pr,use_external_data_format:Zr,session_options:ms};const rs=nt.get(this),as=Re.get(rs);let xs;if(Nt=Ur.config=await w.AutoConfig.from_pretrained(Ue,Ur),as===B)xs=await Promise.all([Ct(Ue,{model:Ur.model_file_name??"model"},Ur),ht(Ue,{generation_config:"generation_config.json"},Ur)]);else if(as===e||as===u)xs=await Promise.all([Ct(Ue,{model:"encoder_model",decoder_model_merged:"decoder_model_merged"},Ur),ht(Ue,{generation_config:"generation_config.json"},Ur)]);else if(as===ue)xs=await Promise.all([Ct(Ue,{model:"vision_encoder",prompt_encoder_mask_decoder:"prompt_encoder_mask_decoder"},Ur)]);else if(as===I)xs=await Promise.all([Ct(Ue,{model:"encoder_model",decoder_model_merged:"decoder_model_merged"},Ur)]);else if(as===G){const Ns={embed_tokens:"embed_tokens",vision_encoder:"vision_encoder",decoder_model_merged:"decoder_model_merged"};Nt.is_encoder_decoder&&(Ns.model="encoder_model"),xs=await Promise.all([Ct(Ue,Ns,Ur),ht(Ue,{generation_config:"generation_config.json"},Ur)])}else if(as===K)xs=await Promise.all([Ct(Ue,{model:"text_encoder",decoder_model_merged:"decoder_model_merged",encodec_decode:"encodec_decode"},Ur),ht(Ue,{generation_config:"generation_config.json"},Ur)]);else if(as===Ve)xs=await Promise.all([Ct(Ue,{prepare_inputs_embeds:"prepare_inputs_embeds",model:"language_model",lm_head:"lm_head",gen_head:"gen_head",gen_img_embeds:"gen_img_embeds",image_decode:"image_decode"},Ur),ht(Ue,{generation_config:"generation_config.json"},Ur)]);else if(as===ve)xs=await Promise.all([Ct(Ue,{prepare_inputs_embeds:"prepare_inputs_embeds",model:"model",vision_encoder:"vision_encoder"},Ur),ht(Ue,{generation_config:"generation_config.json"},Ur)]);else{if(as!==g){const Ns=rs??(Nt==null?void 0:Nt.model_type);Ns!=="custom"&&console.warn(`Model type for '${Ns}' not found, assuming encoder-only architecture. Please report this at ${N.GITHUB_ISSUE_URL}.`)}xs=await Promise.all([Ct(Ue,{model:Ur.model_file_name??"model"},Ur)])}return new this(Nt,...xs)}async _call(Ue){return await this.forward(Ue)}async forward(Ue){return await this._forward(this,Ue)}get generation_config(){var Ue;return((Ue=this.configs)==null?void 0:Ue.generation_config)??null}_get_logits_warper(Ue){const yt=new D.LogitsProcessorList;return Ue.temperature!==null&&Ue.temperature!==1&&yt.push(new D.TemperatureLogitsWarper(Ue.temperature)),Ue.top_k!==null&&Ue.top_k!==0&&yt.push(new D.TopKLogitsWarper(Ue.top_k)),Ue.top_p!==null&&Ue.top_p<1&&yt.push(new D.TopPLogitsWarper(Ue.top_p)),yt}_get_logits_processor(Ue,yt,Nt=null){const Rt=new D.LogitsProcessorList;if(Ue.repetition_penalty!==null&&Ue.repetition_penalty!==1&&Rt.push(new D.RepetitionPenaltyLogitsProcessor(Ue.repetition_penalty)),Ue.no_repeat_ngram_size!==null&&Ue.no_repeat_ngram_size>0&&Rt.push(new D.NoRepeatNGramLogitsProcessor(Ue.no_repeat_ngram_size)),Ue.bad_words_ids!==null&&Rt.push(new D.NoBadWordsLogitsProcessor(Ue.bad_words_ids,Ue.eos_token_id)),Ue.min_length!==null&&Ue.eos_token_id!==null&&Ue.min_length>0&&Rt.push(new D.MinLengthLogitsProcessor(Ue.min_length,Ue.eos_token_id)),Ue.min_new_tokens!==null&&Ue.eos_token_id!==null&&Ue.min_new_tokens>0&&Rt.push(new D.MinNewTokensLengthLogitsProcessor(yt,Ue.min_new_tokens,Ue.eos_token_id)),Ue.forced_bos_token_id!==null&&Rt.push(new D.ForcedBOSTokenLogitsProcessor(Ue.forced_bos_token_id)),Ue.forced_eos_token_id!==null&&Rt.push(new D.ForcedEOSTokenLogitsProcessor(Ue.max_length,Ue.forced_eos_token_id)),Ue.begin_suppress_tokens!==null){const Yt=yt>1||Ue.forced_bos_token_id===null?yt:yt+1;Rt.push(new D.SuppressTokensAtBeginLogitsProcessor(Ue.begin_suppress_tokens,Yt))}return Ue.guidance_scale!==null&&Ue.guidance_scale>1&&Rt.push(new D.ClassifierFreeGuidanceLogitsProcessor(Ue.guidance_scale)),Nt!==null&&Rt.extend(Nt),Rt}_prepare_generation_config(Ue,yt,Nt=R.GenerationConfig){const Rt={...this.config};for(const cr of["decoder","generator","text_config"])cr in Rt&&Object.assign(Rt,Rt[cr]);const Yt=new Nt(Rt);return Object.assign(Yt,this.generation_config??{}),Ue&&Object.assign(Yt,Ue),yt&&Object.assign(Yt,(0,H.pick)(yt,Object.getOwnPropertyNames(Yt))),Yt}_get_stopping_criteria(Ue,yt=null){const Nt=new be.StoppingCriteriaList;return Ue.max_length!==null&&Nt.push(new be.MaxLengthCriteria(Ue.max_length,this.config.max_position_embeddings??null)),Ue.eos_token_id!==null&&Nt.push(new be.EosTokenCriteria(Ue.eos_token_id)),yt&&Nt.extend(yt),Nt}_validate_model_class(){if(!this.can_generate){const Ue=[G0,z0,Kc,Jl],yt=nt.get(this.constructor),Nt=new Set,Rt=this.config.model_type;for(const cr of Ue){const mr=cr.get(Rt);mr&&Nt.add(mr[0])}let Yt=`The current model class (${yt}) is not compatible with \`.generate()\`, as it doesn't have a language model head.`;throw Nt.size>0&&(Yt+=` Please use the following class instead: ${[...Nt].join(", ")}`),Error(Yt)}}prepare_inputs_for_generation(...Ue){return this._prepare_inputs_for_generation(this,...Ue)}_update_model_kwargs_for_generation({generated_input_ids:Ue,outputs:yt,model_inputs:Nt,is_encoder_decoder:Rt}){return Nt.past_key_values=this.getPastKeyValues(yt,Nt.past_key_values),Nt.input_ids=new Q.Tensor("int64",Ue.flat(),[Ue.length,1]),Rt||(Nt.attention_mask=(0,Q.cat)([Nt.attention_mask,(0,Q.ones)([Nt.attention_mask.dims[0],1])],1)),Nt.position_ids=null,Nt}_prepare_model_inputs({inputs:Ue,bos_token_id:yt,model_kwargs:Nt}){const Rt=(0,H.pick)(Nt,this.forward_params),Yt=this.main_input_name;if(Yt in Rt){if(Ue)throw new Error("`inputs`: {inputs}` were passed alongside {input_name} which is not allowed. Make sure to either pass {inputs} or {input_name}=...")}else Rt[Yt]=Ue;return{inputs_tensor:Rt[Yt],model_inputs:Rt,model_input_name:Yt}}async _prepare_encoder_decoder_kwargs_for_generation({inputs_tensor:Ue,model_inputs:yt,model_input_name:Nt,generation_config:Rt}){if(this.sessions.model.inputNames.includes("inputs_embeds")&&!yt.inputs_embeds&&"_prepare_inputs_embeds"in this){const{input_ids:cr,pixel_values:mr,attention_mask:br,...Cr}=yt,Pr=await this._prepare_inputs_embeds(yt);yt={...Cr,...(0,H.pick)(Pr,["inputs_embeds","attention_mask"])}}let{last_hidden_state:Yt}=await ft(this,yt);if(Rt.guidance_scale!==null&&Rt.guidance_scale>1)Yt=(0,Q.cat)([Yt,(0,Q.full_like)(Yt,0)],0),"attention_mask"in yt&&(yt.attention_mask=(0,Q.cat)([yt.attention_mask,(0,Q.zeros_like)(yt.attention_mask)],0));else if(yt.decoder_input_ids){const cr=Se(yt.decoder_input_ids).dims[0];if(cr!==Yt.dims[0]){if(Yt.dims[0]!==1)throw new Error(`The encoder outputs have a different batch size (${Yt.dims[0]}) than the decoder inputs (${cr}).`);Yt=(0,Q.cat)(Array.from({length:cr},()=>Yt),0)}}return yt.encoder_outputs=Yt,yt}_prepare_decoder_input_ids_for_generation({batch_size:Ue,model_input_name:yt,model_kwargs:Nt,decoder_start_token_id:Rt,bos_token_id:Yt,generation_config:cr}){let{decoder_input_ids:mr,...br}=Nt;if(!(mr instanceof Q.Tensor)){if(mr)Array.isArray(mr[0])||(mr=Array.from({length:Ue},()=>mr));else if(Rt??(Rt=Yt),this.config.model_type==="musicgen")mr=Array.from({length:Ue*this.config.decoder.num_codebooks},()=>[Rt]);else if(Array.isArray(Rt)){if(Rt.length!==Ue)throw new Error(`\`decoder_start_token_id\` expcted to have length ${Ue} but got ${Rt.length}`);mr=Rt}else mr=Array.from({length:Ue},()=>[Rt]);mr=Se(mr)}return Nt.decoder_attention_mask=(0,Q.ones_like)(mr),{input_ids:mr,model_inputs:br}}async generate({inputs:Ue=null,generation_config:yt=null,logits_processor:Nt=null,stopping_criteria:Rt=null,streamer:Yt=null,...cr}){this._validate_model_class(),yt=this._prepare_generation_config(yt,cr);let{inputs_tensor:mr,model_inputs:br,model_input_name:Cr}=this._prepare_model_inputs({inputs:Ue,model_kwargs:cr});const Pr=this.config.is_encoder_decoder;let Zr;Pr&&("encoder_outputs"in br||(br=await this._prepare_encoder_decoder_kwargs_for_generation({inputs_tensor:mr,model_inputs:br,model_input_name:Cr,generation_config:yt}))),Pr?{input_ids:Zr,model_inputs:br}=this._prepare_decoder_input_ids_for_generation({batch_size:br[Cr].dims.at(0),model_input_name:Cr,model_kwargs:br,decoder_start_token_id:yt.decoder_start_token_id,bos_token_id:yt.bos_token_id,generation_config:yt}):Zr=br[Cr];let ms=Zr.dims.at(-1);yt.max_new_tokens!==null&&(yt.max_length=ms+yt.max_new_tokens);const Ur=this._get_logits_processor(yt,ms,Nt),rs=this._get_stopping_criteria(yt,Rt),as=br[Cr].dims.at(0),xs=Ie.LogitsSampler.getSampler(yt),Ns=new Array(as).fill(0),ca=Zr.tolist();let pa;Yt&&Yt.put(ca);let nn={};for(;;){if(br=this.prepare_inputs_for_generation(ca,br,yt),pa=await this.forward(br),yt.output_attentions&&yt.return_dict_in_generate){const ua=this.getAttentions(pa);for(const Ln in ua)Ln in nn||(nn[Ln]=[]),nn[Ln].push(ua[Ln])}const qa=Ur(ca,pa.logits.slice(null,-1,null)),Nn=[];for(let ua=0;ua<qa.dims.at(0);++ua){const Ln=qa[ua],Ia=await xs(Ln);for(const[ja,ki]of Ia){const io=BigInt(ja);Ns[ua]+=ki,ca[ua].push(io),Nn.push([io]);break}}if(Yt&&Yt.put(Nn),rs(ca).every(ua=>ua))break;br=this._update_model_kwargs_for_generation({generated_input_ids:Nn,outputs:pa,model_inputs:br,is_encoder_decoder:Pr})}Yt&&Yt.end();const ha=this.getPastKeyValues(pa,br.past_key_values,!0),wa=new Q.Tensor("int64",ca.flat(),[ca.length,ca[0].length]);if(yt.return_dict_in_generate)return{sequences:wa,past_key_values:ha,...nn};for(const qa of Object.values(pa))qa.location==="gpu-buffer"&&qa.dispose();return wa}getPastKeyValues(Ue,yt,Nt=!1){const Rt=Object.create(null);for(const Yt in Ue)if(Yt.startsWith("present")){const cr=Yt.replace("present","past_key_values"),mr=Yt.includes("encoder");if(Rt[cr]=mr&&yt?yt[cr]:Ue[Yt],yt&&(!mr||Nt)){const br=yt[cr];br.location==="gpu-buffer"&&br.dispose()}}return Rt}getAttentions(Ue){const yt={};for(const Nt of["cross_attentions","encoder_attentions","decoder_attentions"])for(const Rt in Ue)Rt.startsWith(Nt)&&(Nt in yt||(yt[Nt]=[]),yt[Nt].push(Ue[Rt]));return yt}addPastKeyValues(Ue,yt){var Nt,Rt,Yt;if(yt)Object.assign(Ue,yt);else{const cr=this.sessions.decoder_model_merged??this.sessions.model,mr=((Nt=cr==null?void 0:cr.config)==null?void 0:Nt.kv_cache_dtype)??"float32",br=mr==="float16"?new Uint16Array:[],Cr=((Yt=(Rt=Ue[this.main_input_name]??Ue.attention_mask)==null?void 0:Rt.dims)==null?void 0:Yt[0])??1,Pr=(0,w.getKeyValueShapes)(this.config,{batch_size:Cr});for(const Zr in Pr)Ue[Zr]=new Q.Tensor(mr,br,Pr[Zr])}}async encode_image({pixel_values:Ue}){const yt=(await et(this.sessions.vision_encoder,{pixel_values:Ue})).image_features;return this.config.num_image_tokens||(console.warn(`The number of image tokens was not set in the model configuration. Setting it to the number of features detected by the vision encoder (${yt.dims[1]}).`),this.config.num_image_tokens=yt.dims[1]),yt}async encode_text({input_ids:Ue}){return(await et(this.sessions.embed_tokens,{input_ids:Ue})).inputs_embeds}}class It{}class Tt extends It{constructor({last_hidden_state:ke,hidden_states:Ue=null,attentions:yt=null}){super(),this.last_hidden_state=ke,this.hidden_states=Ue,this.attentions=yt}}class zt extends $e{}class Wt extends zt{}class pe extends zt{async _call(ke){return new he(await super._call(ke))}}class Ut extends zt{async _call(ke){return new Qs(await super._call(ke))}}class Pe extends zt{async _call(ke){return new Bn(await super._call(ke))}}class X extends zt{async _call(ke){return new Te(await super._call(ke))}}class ge extends $e{}class fe extends ge{}class He extends ge{async _call(ke){return new he(await super._call(ke))}}class ct extends ge{async _call(ke){return new Qs(await super._call(ke))}}class kt extends ge{async _call(ke){return new Bn(await super._call(ke))}}class Dt extends $e{}class Ht extends Dt{}class Vt extends $e{}class sr extends Vt{}class nr extends Vt{async _call(ke){return new he(await super._call(ke))}}class lr extends Vt{async _call(ke){return new Qs(await super._call(ke))}}class Fr extends Vt{async _call(ke){return new Bn(await super._call(ke))}}class ns extends Vt{async _call(ke){return new Te(await super._call(ke))}}class Gs extends $e{}class Cs extends Gs{}class Ks extends Gs{async _call(ke){return new he(await super._call(ke))}}class is extends Gs{async _call(ke){return new Qs(await super._call(ke))}}class wn extends Gs{async _call(ke){return new Bn(await super._call(ke))}}class oa extends Gs{async _call(ke){return new Te(await super._call(ke))}}class Ea extends $e{}class gr extends Ea{}class Wr extends Ea{async _call(ke){return new he(await super._call(ke))}}class vr extends Ea{async _call(ke){return new Qs(await super._call(ke))}}class Es extends Ea{async _call(ke){return new Bn(await super._call(ke))}}class pn extends Ea{async _call(ke){return new Te(await super._call(ke))}}class Ba extends $e{}class In extends Ba{}class ln extends Ba{async _call(ke){return new he(await super._call(ke))}}class hn extends Ba{async _call(ke){return new Qs(await super._call(ke))}}class kn extends Ba{async _call(ke){return new Bn(await super._call(ke))}}class sa extends Ba{async _call(ke){return new Te(await super._call(ke))}}class tr extends $e{}class Qr extends tr{}class jr extends tr{async _call(ke){return new he(await super._call(ke))}}class Vs extends tr{async _call(ke){return new Qs(await super._call(ke))}}class xn extends tr{async _call(ke){return new Bn(await super._call(ke))}}class Ss extends tr{async _call(ke){return new Te(await super._call(ke))}}class Ls extends $e{}class Xa extends Ls{}class _a extends Ls{async _call(ke){return new he(await super._call(ke))}}class Tn extends Ls{async _call(ke){return new Qs(await super._call(ke))}}class Ms extends Ls{async _call(ke){return new Bn(await super._call(ke))}}class Mi extends Ls{async _call(ke){return new Te(await super._call(ke))}}class Ma extends $e{}class Jn extends Ma{}class $n extends Ma{async _call(ke){return new Qs(await super._call(ke))}}class Ei extends Ma{async _call(ke){return new Bn(await super._call(ke))}}class Pn extends Ma{async _call(ke){return new Te(await super._call(ke))}}class Dn extends Ma{async _call(ke){return new he(await super._call(ke))}}class ma extends $e{}class Bi extends ma{}class Vn extends ma{async _call(ke){return new he(await super._call(ke))}}class Sn extends ma{async _call(ke){return new Qs(await super._call(ke))}}class cn extends ma{async _call(ke){return new Bn(await super._call(ke))}}class ei extends $e{}class ti extends ei{}class ri extends ei{async _call(ke){return new he(await super._call(ke))}}class ds extends ei{async _call(ke){return new Qs(await super._call(ke))}}class ys extends ei{async _call(ke){return new Te(await super._call(ke))}}class qr extends $e{}class pi extends qr{}class Ai extends qr{async _call(ke){return new he(await super._call(ke))}}class hi extends qr{async _call(ke){return new Qs(await super._call(ke))}}class Wn extends qr{async _call(ke){return new Bn(await super._call(ke))}}class Gn extends qr{async _call(ke){return new Te(await super._call(ke))}}class qt extends $e{}class Qe extends qt{}class ut extends qt{async _call(ke){return new he(await super._call(ke))}}class wt extends qt{async _call(ke){return new Qs(await super._call(ke))}}class tt extends qt{async _call(ke){return new Te(await super._call(ke))}}class Ae extends $e{}class Ge extends Ae{}class at extends Ae{async _call(ke){return new Qs(await super._call(ke))}}class Le extends Ae{async _call(ke){return new Te(await super._call(ke))}}class vt extends Ae{async _call(ke){return new he(await super._call(ke))}}class Pt extends $e{constructor(){super(...arguments);We(this,"forward_params",["input_ids","attention_mask","encoder_outputs","decoder_input_ids","decoder_attention_mask","past_key_values"])}}class ir extends Pt{}class yr extends Pt{}class hr extends $e{}class xr extends hr{}class Gr extends hr{}class wr extends $e{}class _r extends wr{}class gs extends wr{}class Xr extends $e{}class hs extends Xr{}class Bs extends Xr{}class Or extends Xr{async _call(ke){return new Qs(await super._call(ke))}}class Kt extends $e{}class rr extends Kt{}class Lr extends Kt{}class Rs extends Kt{async _call(ke){return new Qs(await super._call(ke))}}class Ws extends Kt{}class Vr extends $e{}class Js extends Vr{}class qs extends Vr{}class es extends $e{}class _s extends es{}class Rr extends es{}class cs extends $e{}class Da extends cs{}class Us extends cs{async _call(ke){return new he(await super._call(ke))}}class Ua extends cs{async _call(ke){return new Qs(await super._call(ke))}}class Ir extends cs{async _call(ke){return new Bn(await super._call(ke))}}class Sa extends cs{async _call(ke){return new Te(await super._call(ke))}}class or extends $e{}class ss extends or{}class qA extends or{async _call(ke){return new he(await super._call(ke))}}class kA extends or{async _call(ke){return new Qs(await super._call(ke))}}class XA extends or{async _call(ke){return new Bn(await super._call(ke))}}class lo extends or{async _call(ke){return new Te(await super._call(ke))}}class ws extends $e{}class ZA extends ws{}class Eo extends ws{async _call(ke){return new he(await super._call(ke))}}class Mn extends ws{async _call(ke){return new Qs(await super._call(ke))}}class tn extends ws{async _call(ke){return new Bn(await super._call(ke))}}class Hr extends ws{async _call(ke){return new Te(await super._call(ke))}}class yn extends $e{}class Un extends yn{}class Uo extends yn{}class Ho extends $e{constructor(){super(...arguments);We(this,"requires_attention_mask",!1);We(this,"main_input_name","input_features");We(this,"forward_params",["input_features","attention_mask","decoder_input_ids","decoder_attention_mask","past_key_values"])}}class Ni extends Ho{}class Yo extends Ho{_prepare_generation_config(ke,Ue){return super._prepare_generation_config(ke,Ue,re.WhisperGenerationConfig)}_retrieve_init_tokens(ke){const Ue=[ke.decoder_start_token_id];let yt=ke.language;const Nt=ke.task;if(ke.is_multilingual){yt||(console.warn("No language specified - defaulting to English (en)."),yt="en");const Rt=`<|${(0,ce.whisper_language_to_code)(yt)}|>`;Ue.push(ke.lang_to_id[Rt]),Ue.push(ke.task_to_id[Nt??"transcribe"])}else if(yt||Nt)throw new Error("Cannot specify `task` or `language` for an English-only model. If the model is intended to be multilingual, pass `is_multilingual=true` to generate, or update the generation config.");return!ke.return_timestamps&&ke.no_timestamps_token_id&&Ue.at(-1)!==ke.no_timestamps_token_id?Ue.push(ke.no_timestamps_token_id):ke.return_timestamps&&Ue.at(-1)===ke.no_timestamps_token_id&&(console.warn("<|notimestamps|> prompt token is removed from generation_config since `return_timestamps` is set to `true`."),Ue.pop()),Ue.filter(Rt=>Rt!=null)}async generate({inputs:ke=null,generation_config:Ue=null,logits_processor:yt=null,stopping_criteria:Nt=null,...Rt}){Ue=this._prepare_generation_config(Ue,Rt);const Yt=Rt.decoder_input_ids??this._retrieve_init_tokens(Ue);if(Ue.return_timestamps&&(yt??(yt=new D.LogitsProcessorList),yt.push(new D.WhisperTimeStampLogitsProcessor(Ue,Yt))),Ue.begin_suppress_tokens&&(yt??(yt=new D.LogitsProcessorList),yt.push(new D.SuppressTokensAtBeginLogitsProcessor(Ue.begin_suppress_tokens,Yt.length))),Ue.return_token_timestamps){if(!Ue.alignment_heads)throw new Error("Model generation config has no `alignment_heads`, token-level timestamps not available. See https://gist.github.com/hollance/42e32852f24243b748ae6bc1f985b13a on how to add this property to the generation config.");Ue.task==="translate"&&console.warn("Token-level timestamps may not be reliable for task 'translate'."),Ue.output_attentions=!0,Ue.return_dict_in_generate=!0}const cr=await super.generate({inputs:ke,generation_config:Ue,logits_processor:yt,decoder_input_ids:Yt,...Rt});return Ue.return_token_timestamps&&(cr.token_timestamps=this._extract_token_timestamps(cr,Ue.alignment_heads,Ue.num_frames)),cr}_extract_token_timestamps(ke,Ue,yt=null,Nt=.02){if(!ke.cross_attentions)throw new Error("Model outputs must contain cross attentions to extract timestamps. This is most likely because the model was not exported with `output_attentions=True`.");yt==null&&console.warn("`num_frames` has not been set, meaning the entire audio will be analyzed. This may lead to inaccurate token-level timestamps for short audios (< 30 seconds).");let Rt=this.config.median_filter_width;Rt===void 0&&(console.warn("Model config has no `median_filter_width`, using default value of 7."),Rt=7);const Yt=ke.cross_attentions,cr=Array.from({length:this.config.decoder_layers},(rs,as)=>(0,Q.cat)(Yt.map(xs=>xs[as]),2)),mr=(0,Q.stack)(Ue.map(([rs,as])=>{if(rs>=cr.length)throw new Error(`Layer index ${rs} is out of bounds for cross attentions (length ${cr.length}).`);return yt?cr[rs].slice(null,as,null,[0,yt]):cr[rs].slice(null,as)})).transpose(1,0,2,3),[br,Cr]=(0,Q.std_mean)(mr,-2,0,!0),Pr=mr.clone();for(let rs=0;rs<Pr.dims[0];++rs){const as=Pr[rs];for(let xs=0;xs<as.dims[0];++xs){const Ns=as[xs],ca=br[rs][xs][0].data,pa=Cr[rs][xs][0].data;for(let nn=0;nn<Ns.dims[0];++nn){let ha=Ns[nn].data;for(let wa=0;wa<ha.length;++wa)ha[wa]=(ha[wa]-pa[wa])/ca[wa];ha.set((0,oe.medianFilter)(ha,Rt))}}}const Zr=[(0,Q.mean)(Pr,1)],ms=ke.sequences.dims,Ur=new Q.Tensor("float32",new Float32Array(ms[0]*ms[1]),ms);for(let rs=0;rs<ms[0];++rs){const as=Zr[rs].neg().squeeze_(0),[xs,Ns]=(0,oe.dynamic_time_warping)(as.tolist()),ca=Array.from({length:xs.length-1},(ha,wa)=>xs[wa+1]-xs[wa]),pa=(0,H.mergeArrays)([1],ca).map(ha=>!!ha),nn=[];for(let ha=0;ha<pa.length;++ha)pa[ha]&&nn.push(Ns[ha]*Nt);Ur[rs].data.set(nn,1)}return Ur}}class yA extends $e{constructor(){super(...arguments);We(this,"requires_attention_mask",!1);We(this,"main_input_name","input_values");We(this,"forward_params",["input_values","decoder_input_ids","past_key_values"])}}class Dl extends yA{}class Fn extends yA{}class aa extends $e{constructor(){super(...arguments);We(this,"main_input_name","pixel_values");We(this,"forward_params",["pixel_values","decoder_input_ids","encoder_hidden_states","past_key_values"])}}class Bo extends $e{constructor(){super(...arguments);We(this,"forward_params",["input_ids","attention_mask","pixel_values","position_ids","past_key_values"])}}class To extends Bo{_merge_input_ids_with_image_features({inputs_embeds:ke,image_features:Ue,input_ids:yt,attention_mask:Nt}){const Rt=this.config.image_token_index,Yt=yt.tolist().map(Pr=>Pr.findIndex(Zr=>Zr==Rt)),cr=Yt.every(Pr=>Pr===-1),mr=Yt.every(Pr=>Pr!==-1);if(!cr&&!mr)throw new Error("Every input should contain either 0 or 1 image token.");if(cr)return{inputs_embeds:ke,attention_mask:Nt};const br=[],Cr=[];for(let Pr=0;Pr<Yt.length;++Pr){const Zr=Yt[Pr],ms=ke[Pr],Ur=Ue[Pr],rs=Nt[Pr];br.push((0,Q.cat)([ms.slice([0,Zr]),Ur,ms.slice([Zr+1,ms.dims[0]])],0)),Cr.push((0,Q.cat)([rs.slice([0,Zr]),(0,Q.ones)([Ur.dims[0]]),rs.slice([Zr+1,rs.dims[0]])],0))}return{inputs_embeds:(0,Q.stack)(br,0),attention_mask:(0,Q.stack)(Cr,0)}}}class _n extends To{}class Li extends To{}class mi extends $e{constructor(){super(...arguments);We(this,"forward_params",["input_ids","inputs_embeds","attention_mask","pixel_values","encoder_outputs","decoder_input_ids","decoder_inputs_embeds","decoder_attention_mask","past_key_values"]);We(this,"main_input_name","inputs_embeds")}}class Hn extends mi{_merge_input_ids_with_image_features({inputs_embeds:ke,image_features:Ue,input_ids:yt,attention_mask:Nt}){return{inputs_embeds:(0,Q.cat)([Ue,ke],1),attention_mask:(0,Q.cat)([(0,Q.ones)(Ue.dims.slice(0,2)),Nt],1)}}async _prepare_inputs_embeds({input_ids:ke,pixel_values:Ue,inputs_embeds:yt,attention_mask:Nt}){if(!ke&&!Ue)throw new Error("Either `input_ids` or `pixel_values` should be provided.");let Rt,Yt;return ke&&(Rt=await this.encode_text({input_ids:ke})),Ue&&(Yt=await this.encode_image({pixel_values:Ue})),Rt&&Yt?{inputs_embeds:yt,attention_mask:Nt}=this._merge_input_ids_with_image_features({inputs_embeds:Rt,image_features:Yt,input_ids:ke,attention_mask:Nt}):yt=Rt||Yt,{inputs_embeds:yt,attention_mask:Nt}}async forward({input_ids:ke,pixel_values:Ue,attention_mask:yt,decoder_input_ids:Nt,decoder_attention_mask:Rt,encoder_outputs:Yt,past_key_values:cr,inputs_embeds:mr,decoder_inputs_embeds:br}){if(mr||({inputs_embeds:mr,attention_mask:yt}=await this._prepare_inputs_embeds({input_ids:ke,pixel_values:Ue,inputs_embeds:mr,attention_mask:yt})),!Yt){let{last_hidden_state:Pr}=await ft(this,{inputs_embeds:mr,attention_mask:yt});Yt=Pr}if(!br){if(!Nt)throw new Error("Either `decoder_input_ids` or `decoder_inputs_embeds` should be provided.");br=await this.encode_text({input_ids:Nt})}return await gt(this,{inputs_embeds:br,attention_mask:Rt,encoder_attention_mask:yt,encoder_hidden_states:Yt,past_key_values:cr},!0)}}class Ri extends $e{constructor(){super(...arguments);We(this,"forward_params",["input_ids","attention_mask","pixel_values","position_ids","past_key_values"])}}class Xi extends Ri{_merge_input_ids_with_image_features(ke){const Ue=ke.image_features.dims.at(-1),yt=ke.image_features.view(-1,Ue);return _t({image_token_id:this.config.image_token_index,...ke,image_features:yt})}}class JA extends $e{constructor(){super(...arguments);We(this,"forward_params",["input_ids","attention_mask","pixel_values","pixel_attention_mask","position_ids","past_key_values"])}}class _A extends JA{async encode_image({pixel_values:ke,pixel_attention_mask:Ue}){return(await et(this.sessions.vision_encoder,{pixel_values:ke,pixel_attention_mask:Ue})).image_features}_merge_input_ids_with_image_features(ke){const Ue=ke.image_features.dims.at(-1),yt=ke.image_features.view(-1,Ue);return _t({image_token_id:this.config.image_token_id,...ke,image_features:yt})}}class $A extends $e{constructor(){super(...arguments);We(this,"forward_params",["input_ids","inputs_embeds","attention_mask","position_ids","pixel_values","image_sizes","past_key_values"])}}class Br extends $A{async forward({input_ids:ke=null,attention_mask:Ue=null,pixel_values:yt=null,image_sizes:Nt=null,position_ids:Rt=null,inputs_embeds:Yt=null,past_key_values:cr=null,generation_config:mr=null,logits_processor:br=null,...Cr}){if(!Yt){let Pr;if(yt&&ke.dims[1]!==1){if(!Nt)throw new Error("`image_sizes` must be provided when `pixel_values` is provided.");({image_features:Pr}=await et(this.sessions.vision_encoder,{pixel_values:yt,image_sizes:Nt}))}else{const Zr=this.config.normalized_config.hidden_size;Pr=new Q.Tensor("float32",[],[0,Zr])}({inputs_embeds:Yt}=await et(this.sessions.prepare_inputs_embeds,{input_ids:ke,image_features:Pr}))}return await gt(this,{inputs_embeds:Yt,past_key_values:cr,attention_mask:Ue,position_ids:Rt,generation_config:mr,logits_processor:br},!1)}}class ji extends $e{}class Nr extends ji{}class vA extends ji{static async from_pretrained(ke,Ue={}){return super.from_pretrained(ke,{...Ue,model_file_name:Ue.model_file_name??"text_model"})}}class Ko extends ji{static async from_pretrained(ke,Ue={}){return super.from_pretrained(ke,{...Ue,model_file_name:Ue.model_file_name??"text_model"})}}class En extends ji{static async from_pretrained(ke,Ue={}){return super.from_pretrained(ke,{...Ue,model_file_name:Ue.model_file_name??"vision_model"})}}class Ga extends ji{static async from_pretrained(ke,Ue={}){return super.from_pretrained(ke,{...Ue,model_file_name:Ue.model_file_name??"vision_model"})}}class Vi extends $e{}class Zi extends Vi{}class qo extends Vi{static async from_pretrained(ke,Ue={}){return super.from_pretrained(ke,{...Ue,model_file_name:Ue.model_file_name??"text_model"})}}class ia extends ji{static async from_pretrained(ke,Ue={}){return super.from_pretrained(ke,{...Ue,model_file_name:Ue.model_file_name??"vision_model"})}}class xA extends $e{}class el extends xA{}class Wi extends $e{}class Ji extends Wi{async forward(ke){const Ue=!ke.input_ids,yt=!ke.pixel_values;if(Ue&&yt)throw new Error("Either `input_ids` or `pixel_values` should be provided.");if(Ue&&(ke.input_ids=(0,Q.ones)([ke.pixel_values.dims[0],1])),yt){const{image_size:br}=this.config.vision_config;ke.pixel_values=(0,Q.full)([0,3,br,br],0)}const{text_embeddings:Nt,image_embeddings:Rt,l2norm_text_embeddings:Yt,l2norm_image_embeddings:cr}=await super.forward(ke),mr={};return Ue||(mr.text_embeddings=Nt,mr.l2norm_text_embeddings=Yt),yt||(mr.image_embeddings=Rt,mr.l2norm_image_embeddings=cr),mr}}class tl extends Wi{static async from_pretrained(ke,Ue={}){return super.from_pretrained(ke,{...Ue,model_file_name:Ue.model_file_name??"text_model"})}}class Xo extends Wi{static async from_pretrained(ke,Ue={}){return super.from_pretrained(ke,{...Ue,model_file_name:Ue.model_file_name??"vision_model"})}}class $i extends $e{}class zr extends $i{}class li extends $i{}class Zo extends $e{}class zn extends Zo{}class Ti extends Zo{}class Jo extends $e{}class rl extends Jo{}class sl extends Jo{}class Po extends $e{}class al extends Po{}class nl extends Po{}class La extends $e{}class il extends La{}class ol extends La{}class ps extends $e{}class Fs extends ps{}class MA extends ps{}class ci extends $e{}class EA extends ci{}class mn extends ci{}class bi extends $e{}class Za extends bi{}class Pi extends bi{}class Do extends $e{}class BA extends Do{}class So extends Do{}class Go extends $e{}class Ta extends Go{}class co extends Go{}class $o extends $e{}class un extends $o{}class uo extends $o{}class Ci extends $e{}class Al extends Ci{}class TA extends Ci{}class eA extends $e{}class tA extends eA{}class Di extends eA{}class Fo extends $e{}class ea extends Fo{}class PA extends Fo{}class rA extends $e{}class Si extends rA{}class sA extends rA{}class Ra extends $e{}class DA extends Ra{}class aA extends Ra{}class go extends $e{}class On extends go{}class zo extends go{}class nA extends $e{}class ui extends nA{}class SA extends nA{}class Oo extends $e{}class fo extends Oo{}class po extends Oo{}class Qo extends $e{}class ll extends Qo{}class GA extends Qo{}class dn extends $e{}class No extends dn{}class gn extends dn{}class FA extends $e{constructor(){super(...arguments);We(this,"forward_params",["input_ids","attention_mask","position_ids","past_key_values","pixel_values","image_grid_thw"])}}class iA extends FA{get_rope_index(ke,Ue,yt,Nt){const{vision_config:Rt,image_token_id:Yt,video_token_id:cr,vision_start_token_id:mr}=this.config,br=Rt.spatial_merge_size??2,Cr=[];if(Ue||yt){let Pr=ke.tolist();Nt||(Nt=(0,Q.ones_like)(ke));const Zr=Nt.tolist(),ms=Array.from({length:3},Ns=>Array.from({length:ke.dims[0]},ca=>Array.from({length:ke.dims[1]},pa=>1))),Ur=Ue?Ue.tolist():[],rs=yt?yt.tolist():[];let as=0,xs=0;for(let Ns=0;Ns<Pr.length;++Ns){const ca=Pr[Ns].filter((ka,on)=>Zr[Ns][on]==1),pa=ca.reduce((ka,on,ai)=>(on==mr&&ka.push(ai),ka),[]),nn=pa.map(ka=>ca[ka+1]),ha=nn.filter(ka=>ka==Yt).length,wa=nn.filter(ka=>ka==cr).length;let qa=[],Nn=0,ua=ha,Ln=wa;for(let ka=0;ka<nn.length;++ka){const on=ca.findIndex((yi,Zn)=>Zn>Nn&&yi==Yt),ai=ca.findIndex((yi,Zn)=>Zn>Nn&&yi==cr),yl=ua>0&&on!==-1?on:ca.length+1,vo=Ln>0&&ai!==-1?ai:ca.length+1;let Wo,UA,oo,_l;yl<vo?([UA,oo,_l]=Ur[as],++as,--ua,Wo=yl):([UA,oo,_l]=rs[xs],++xs,--Ln,Wo=vo);const[HA,e0,Ao]=[Number(UA),Math.floor(Number(oo)/br),Math.floor(Number(_l)/br)],gi=Wo-Nn,Oi=qa.length>0?(0,oe.max)(qa.at(-1))[0]+1:0;qa.push(Array.from({length:3*gi},(yi,Zn)=>Oi+Zn%gi));const Xn=gi+Oi,vl=HA*e0*Ao,sd=Array.from({length:vl},(yi,Zn)=>Xn+Math.floor(Zn/(e0*Ao))),xl=Array.from({length:vl},(yi,Zn)=>Xn+Math.floor(Zn/Ao)%e0),Qi=Array.from({length:vl},(yi,Zn)=>Xn+Zn%Ao);qa.push([sd,xl,Qi].flat()),Nn=Wo+vl}if(Nn<ca.length){const ka=qa.length>0?(0,oe.max)(qa.at(-1))[0]+1:0,on=ca.length-Nn;qa.push(Array.from({length:3*on},(ai,yl)=>ka+yl%on))}const Ia=qa.reduce((ka,on)=>ka+on.length,0),ja=new Array(Ia);let ki=0;for(let ka=0;ka<3;++ka)for(let on=0;on<qa.length;++on){const ai=qa[on],yl=ai.length/3;for(let vo=ka*yl;vo<(ka+1)*yl;++vo)ja[ki++]=ai[vo]}let io=0;const kl=Zr[Ns];for(let ka=0;ka<kl.length;++ka)if(kl[ka]==1){for(let on=0;on<3;++on)ms[on][Ns][ka]=ja[on*Ia/3+io];++io}const Y0=(0,oe.max)(ja)[0];Cr.push(Y0+1-Pr[Ns].length)}return[new Q.Tensor("int64",ms.flat(1/0),[3,ke.dims[0],ke.dims[1]]),new Q.Tensor("int64",Cr,[Cr.length,1])]}if(Nt){const{data:Pr,dims:Zr}=bt(Nt),ms=BigInt64Array.from({length:3*Pr.length},(rs,as)=>Pr[as%Pr.length]),Ur=Array.from({length:Zr[0]},(rs,as)=>(0,oe.max)(Pr.subarray(Zr[1]*as,Zr[1]*(as+1)))[0]+1n+BigInt(Zr[1]));return[new Q.Tensor("int64",ms,[3,...Zr]),new Q.Tensor("int64",Ur,[Ur.length,1])]}{const[Pr,Zr]=ke.dims,ms=BigInt64Array.from({length:3*Pr*Zr},(Ur,rs)=>BigInt(Math.floor(rs%Zr/Pr)));return[new Q.Tensor("int64",ms,[3,...ke.dims]),(0,Q.zeros)([Pr,1])]}}async encode_image({pixel_values:ke,image_grid_thw:Ue}){return(await et(this.sessions.vision_encoder,{pixel_values:ke,grid_thw:Ue})).image_features}_merge_input_ids_with_image_features(ke){return _t({image_token_id:this.config.image_token_id,...ke})}prepare_inputs_for_generation(ke,Ue,yt){if(Ue.attention_mask&&!Ue.position_ids)if(Ue.past_key_values){Ue.pixel_values=null;const Nt=BigInt(Object.values(Ue.past_key_values)[0].dims.at(-2)),Rt=Ue.rope_deltas.map(Yt=>Nt+Yt);Ue.position_ids=(0,Q.stack)([Rt,Rt,Rt],0)}else[Ue.position_ids,Ue.rope_deltas]=this.get_rope_index(Ue.input_ids,Ue.image_grid_thw,Ue.video_grid_thw,Ue.attention_mask);return Ue}}class Yn extends $e{}class ba extends Yn{}class zA extends Yn{}class Gi extends $e{}class ho extends Gi{}class cl extends Gi{}class oA extends $e{}class OA extends oA{}class ul extends oA{}class wi extends $e{}class di extends wi{}class AA extends wi{}class eo extends $e{}class rn extends eo{}class na extends eo{}class mo extends $e{}class dl extends mo{}class Fi extends mo{async _call(ke){return new Qs(await super._call(ke))}}class Ui extends $e{}class Hi extends Ui{}class QA extends Ui{async _call(ke){return new Qs(await super._call(ke))}}class bn extends $e{}class NA extends bn{}class gl extends $e{}class bo extends gl{}class Lo extends gl{async _call(ke){return new Qs(await super._call(ke))}}class Ca extends $e{}class lA extends Ca{}class cA extends $e{}class to extends cA{}class fl extends cA{async _call(ke){return new Qs(await super._call(ke))}}class Co extends $e{}class os extends Co{}class t extends $e{}class r extends t{}class s extends t{async _call(ke){return new Qs(await super._call(ke))}}class a extends $e{}class i extends a{async _call(ke){return new Jt(await super._call(ke))}}class o extends $e{}class d extends o{}class f extends o{async _call(ke){return new Qs(await super._call(ke))}}class m extends $e{}class M extends m{}class y extends m{async _call(ke){return new Qs(await super._call(ke))}}class P extends $e{}class q extends P{}class ae extends P{}class de extends $e{}class ye extends de{}class Be extends de{}class qe extends $e{}class ot extends qe{}class pt extends qe{async _call(ke){return new Qs(await super._call(ke))}}class Mt extends $e{}class Ft extends Mt{}class Lt extends Mt{async _call(ke){return new Ar(await super._call(ke))}}class Xt extends Mt{async _call(ke){return new Mr(await super._call(ke))}}class Ar extends It{constructor({logits:ke,pred_boxes:Ue}){super(),this.logits=ke,this.pred_boxes=Ue}}class Mr extends It{constructor({logits:ke,pred_boxes:Ue,pred_masks:yt}){super(),this.logits=ke,this.pred_boxes=Ue,this.pred_masks=yt}}class Tr extends $e{}class Yr extends Tr{}class $r extends Tr{async _call(ke){return new ls(await super._call(ke))}}class ls extends It{constructor({logits:ke,pred_boxes:Ue}){super(),this.logits=ke,this.pred_boxes=Ue}}class Ts extends $e{}class Hs extends Ts{}class $s extends Ts{async _call(ke){return new ga(await super._call(ke))}}class ga extends Ar{}class fa extends $e{}class Pa extends fa{}class Fa extends fa{async _call(ke){return new Qs(await super._call(ke))}}class za extends $e{}class Ha extends za{}class Ya extends za{async _call(ke){return new Qs(await super._call(ke))}}class Ja extends $e{}class sn extends Ja{}class vn extends Ja{async _call(ke){return new Qs(await super._call(ke))}}class si extends $e{}class Ii extends si{}class zi extends si{async _call(ke){return new Qs(await super._call(ke))}}class Yi extends $e{}class Ro extends Yi{}class ro extends Yi{}class wo extends $e{}class so extends wo{}class LA extends wo{}class uA extends $e{}class RA extends uA{}class Io extends $e{}class J0 extends Io{}class $0 extends Io{}class Sl extends Io{}class fu extends $e{}class ec extends fu{}class tc extends $e{}class rc extends tc{}class i0 extends tc{}class o0 extends $e{}class A0 extends o0{}class l0 extends o0{}class sc extends $e{}class c0 extends sc{}class Gl extends $e{}class ac extends Gl{}class pu extends Gl{async _call(ke){return new Qs(await super._call(ke))}}class Fl extends $e{}class nc extends Fl{}class ic extends Fl{async _call(ke){return new Qs(await super._call(ke))}}class oc extends $e{}class Ac extends oc{}class Ki extends oc{async _call(ke){return new Qs(await super._call(ke))}}class ao extends $e{}class dA extends ao{}class gA extends ao{async _call(ke){return new Qs(await super._call(ke))}}class hu extends $e{}class zl extends hu{}class jA extends $e{}class Ol extends jA{}class lc extends jA{async _call(ke){return new cc(await super._call(ke))}}class cc extends It{constructor({logits:ke,pred_boxes:Ue}){super(),this.logits=ke,this.pred_boxes=Ue}}class u0 extends $e{}class uc extends u0{async get_image_embeddings({pixel_values:ke}){return await ft(this,{pixel_values:ke})}async forward(ke){if(ke.image_embeddings&&ke.image_positional_embeddings||(ke={...ke,...await this.get_image_embeddings(ke)}),!ke.input_labels&&ke.input_points){const yt=ke.input_points.dims.slice(0,-1),Nt=yt.reduce((Rt,Yt)=>Rt*Yt,1);ke.input_labels=new Q.Tensor("int64",new BigInt64Array(Nt).fill(1n),yt)}const Ue={image_embeddings:ke.image_embeddings,image_positional_embeddings:ke.image_positional_embeddings};return ke.input_points&&(Ue.input_points=ke.input_points),ke.input_labels&&(Ue.input_labels=ke.input_labels),ke.input_boxes&&(Ue.input_boxes=ke.input_boxes),await et(this.sessions.prompt_encoder_mask_decoder,Ue)}async _call(ke){return new d0(await super._call(ke))}}class d0 extends It{constructor({iou_scores:ke,pred_masks:Ue}){super(),this.iou_scores=ke,this.pred_masks=Ue}}class an extends $e{}class dc extends an{}class gc extends an{}class g0 extends $e{}class fc extends g0{}class fA extends g0{}class jo extends $e{}class pc extends jo{}class hc extends jo{async _call(ke){return new st(await super._call(ke))}}class mu extends jo{async _call(ke){return new Qs(await super._call(ke))}}class Ql extends jo{async _call(ke){return new Bn(await super._call(ke))}}class Nl extends $e{}class bu extends Nl{}class mc extends Nl{async _call(ke){return new Bn(await super._call(ke))}}class pl extends $e{}class bc extends pl{}class hl extends $e{}class Cu extends hl{}class f0 extends hl{async _call(ke){return new st(await super._call(ke))}}class Ll extends hl{async _call(ke){return new Qs(await super._call(ke))}}class ml extends $e{}class wu extends ml{}class Cc extends ml{async _call(ke){return new st(await super._call(ke))}}class Iu extends ml{async _call(ke){return new Qs(await super._call(ke))}}class wc extends ml{async _call(ke){return new Bn(await super._call(ke))}}class Rl extends $e{}class ku extends Rl{}class VA extends Rl{async _call(ke){return new st(await super._call(ke))}}class Ic extends Rl{async _call(ke){return new Qs(await super._call(ke))}}class yu extends $e{}class kc extends jo{}class _u extends jo{async _call(ke){return new st(await super._call(ke))}}class yc extends jo{async _call(ke){return new Qs(await super._call(ke))}}class WA extends $e{}class _c extends WA{}class jl extends WA{async _call(ke){return new st(await super._call(ke))}}class ed extends WA{async _call(ke){return new Qs(await super._call(ke))}}class no extends WA{async _call(ke){return new qu(await super._call(ke))}}class ko extends WA{async _call(ke){return new Bn(await super._call(ke))}}class pA extends $e{}class hA extends pA{}class mA extends $e{}class p0 extends mA{}class h0 extends mA{}class m0 extends mA{async generate_speech(ke,Ue,{threshold:yt=.5,minlenratio:Nt=0,maxlenratio:Rt=20,vocoder:Yt=null}={}){const cr={input_ids:ke},{encoder_outputs:mr,encoder_attention_mask:br}=await ft(this,cr),Cr=mr.dims[1]/this.config.reduction_factor,Pr=Math.floor(Cr*Rt),Zr=Math.floor(Cr*Nt),ms=this.config.num_mel_bins;let Ur=[],rs=null,as=null,xs=0;for(;;){++xs;const pa=xe(!!as);let nn;nn=as?as.output_sequence_out:new Q.Tensor("float32",new Float32Array(ms),[1,1,ms]);let ha={use_cache_branch:pa,output_sequence:nn,encoder_attention_mask:br,speaker_embeddings:Ue,encoder_hidden_states:mr};this.addPastKeyValues(ha,rs),as=await et(this.sessions.decoder_model_merged,ha),rs=this.getPastKeyValues(as,rs);const{prob:wa,spectrum:qa}=as;if(Ur.push(qa),xs>=Zr&&(Array.from(wa.data).filter(Nn=>Nn>=yt).length>0||xs>=Pr))break}const Ns=(0,Q.cat)(Ur),{waveform:ca}=await et(Yt.sessions.model,{spectrogram:Ns});return{spectrogram:Ns,waveform:ca}}}class Vl extends $e{constructor(){super(...arguments);We(this,"main_input_name","spectrogram")}}class vc extends $e{}class xc extends vc{}class bl extends $e{}class b0 extends bl{}class Mc extends bl{}class Wl extends $e{}class Kn extends Wl{}class Ec extends Wl{}class C0 extends $e{}class Ul extends C0{}class w0 extends C0{}class yo extends $e{}class vu extends yo{}class Bc extends yo{static async from_pretrained(ke,Ue={}){return super.from_pretrained(ke,{...Ue,model_file_name:Ue.model_file_name??"text_model"})}}class Tc extends yo{static async from_pretrained(ke,Ue={}){return super.from_pretrained(ke,{...Ue,model_file_name:Ue.model_file_name??"audio_model"})}}class I0 extends $e{}class k0 extends I0{async _call(ke){return new $t(await super._call(ke))}}class Hl extends $e{}class y0 extends Hl{}class Pc extends Hl{}class Dc extends Hl{}class Yl extends $e{}class xu extends Yl{}class Mu extends Yl{}class Cl extends $e{}class _0 extends Cl{}class Eu extends Cl{async _call(ke){return new Qs(await super._call(ke))}}class Kl extends $e{}class v0 extends Kl{}class Bu extends Kl{}class x0 extends $e{constructor(){super(...arguments);We(this,"forward_params",["input_ids","attention_mask","encoder_outputs","decoder_input_ids","decoder_attention_mask","past_key_values"])}_apply_and_filter_by_delay_pattern_mask(Ue){const[yt,Nt]=Ue.dims,Rt=this.config.decoder.num_codebooks,Yt=Nt-Rt;let cr=0;for(let Cr=0;Cr<Ue.size;++Cr){if(Ue.data[Cr]===this.config.decoder.pad_token_id)continue;const Pr=Cr%Nt-Math.floor(Cr/Nt)%Rt;Pr>0&&Pr<=Yt&&(Ue.data[cr++]=Ue.data[Cr])}const mr=Math.floor(yt/Rt),br=cr/(mr*Rt);return new Q.Tensor(Ue.type,Ue.data.slice(0,cr),[mr,Rt,br])}prepare_inputs_for_generation(Ue,yt,Nt){let Rt=structuredClone(Ue);for(let Yt=0;Yt<Rt.length;++Yt)for(let cr=0;cr<Rt[Yt].length;++cr)Yt%this.config.decoder.num_codebooks>=cr&&(Rt[Yt][cr]=BigInt(this.config.decoder.pad_token_id));return Nt.guidance_scale!==null&&Nt.guidance_scale>1&&(Rt=Rt.concat(Rt)),super.prepare_inputs_for_generation(Rt,yt,Nt)}async generate(Ue){const yt=await super.generate(Ue),Nt=this._apply_and_filter_by_delay_pattern_mask(yt).unsqueeze_(0),{audio_values:Rt}=await et(this.sessions.encodec_decode,{audio_codes:Nt});return Rt}}class M0 extends $e{}class Sc extends M0{}class Gc extends M0{async _call(ke){return new Qs(await super._call(ke))}}class ql extends $e{}class Tu extends ql{}class Fc extends ql{async _call(ke){return new Qs(await super._call(ke))}}class Xl extends $e{}class Pu extends Xl{}class zc extends Xl{async _call(ke){return new Qs(await super._call(ke))}}class E0 extends $e{}class Oc extends E0{}class Qc extends E0{async _call(ke){return new Qs(await super._call(ke))}}class Nc extends $e{}class Lc extends Nc{}class Rc extends $e{}class jc extends Rc{constructor(...Ue){super(...Ue);We(this,"forward_params",["input_ids","pixel_values","images_seq_mask","images_emb_mask","attention_mask","position_ids","past_key_values"]);this._generation_mode="text"}async forward(Ue){const yt=this._generation_mode??"text";let Nt;if(yt!=="text"&&Ue.past_key_values){const br=this.sessions.gen_img_embeds,Cr=(0,H.pick)({image_ids:Ue.input_ids},br.inputNames);Nt=await et(br,Cr)}else{const br=this.sessions.prepare_inputs_embeds,Cr=(0,H.pick)(Ue,br.inputNames);Nt=await et(br,Cr)}const Rt={...Ue,...Nt},Yt=await gt(this,Rt),cr=this.sessions[yt==="text"?"lm_head":"gen_head"];if(!cr)throw new Error(`Unable to find "${cr}" generation head`);const mr=await et(cr,(0,H.pick)(Yt,cr.inputNames));return{...Nt,...Yt,...mr}}async generate(Ue){return this._generation_mode="text",super.generate(Ue)}async generate_images(Ue){this._generation_mode="image";const yt=(Ue.inputs??Ue[this.main_input_name]).dims[1],Nt=(await super.generate(Ue)).slice(null,[yt,null]),Rt=this.sessions.image_decode,{decoded_image:Yt}=await et(Rt,{generated_tokens:Nt}),cr=Yt.add_(1).mul_(127.5).clamp_(0,255).to("uint8"),mr=[];for(const br of cr){const Cr=J.RawImage.fromTensor(br);mr.push(Cr)}return mr}}class B0 extends It{constructor({char_logits:ke,bpe_logits:Ue,wp_logits:yt}){super(),this.char_logits=ke,this.bpe_logits=Ue,this.wp_logits=yt}get logits(){return[this.char_logits,this.bpe_logits,this.wp_logits]}}class Vc extends $e{}class Wc extends Vc{async _call(ke){return new B0(await super._call(ke))}}class Aa extends $e{}class Du extends Aa{}class Zl extends Aa{}class Uc extends $e{}class T0 extends Uc{}class wl extends Uc{}class la{static async from_pretrained(ke,{progress_callback:Ue=null,config:yt=null,cache_dir:Nt=null,local_files_only:Rt=!1,revision:Yt="main",model_file_name:cr=null,subfolder:mr="onnx",device:br=null,dtype:Cr=null,use_external_data_format:Pr=null,session_options:Zr={}}={}){const ms={progress_callback:Ue,config:yt,cache_dir:Nt,local_files_only:Rt,revision:Yt,model_file_name:cr,subfolder:mr,device:br,dtype:Cr,use_external_data_format:Pr,session_options:Zr};if(ms.config=await w.AutoConfig.from_pretrained(ke,ms),!this.MODEL_CLASS_MAPPINGS)throw new Error("`MODEL_CLASS_MAPPINGS` not implemented for this type of `AutoClass`: "+this.name);for(const Ur of this.MODEL_CLASS_MAPPINGS){const rs=Ur.get(ms.config.model_type);if(rs)return await rs[1].from_pretrained(ke,ms)}if(this.BASE_IF_FAIL)return console.warn(`Unknown model class "${ms.config.model_type}", attempting to construct from base class.`),await $e.from_pretrained(ke,ms);throw Error(`Unsupported model type: ${ms.config.model_type}`)}}We(la,"MODEL_CLASS_MAPPINGS",null),We(la,"BASE_IF_FAIL",!1);const Hc=new Map([["bert",["BertModel",Wt]],["modernbert",["ModernBertModel",fe]],["nomic_bert",["NomicBertModel",Ht]],["roformer",["RoFormerModel",sr]],["electra",["ElectraModel",gr]],["esm",["EsmModel",Bi]],["convbert",["ConvBertModel",Cs]],["camembert",["CamembertModel",In]],["deberta",["DebertaModel",Qr]],["deberta-v2",["DebertaV2Model",Xa]],["mpnet",["MPNetModel",pi]],["albert",["AlbertModel",Ge]],["distilbert",["DistilBertModel",Jn]],["roberta",["RobertaModel",Da]],["xlm",["XLMModel",ss]],["xlm-roberta",["XLMRobertaModel",ZA]],["clap",["ClapModel",vu]],["clip",["CLIPModel",Nr]],["clipseg",["CLIPSegModel",zr]],["chinese_clip",["ChineseCLIPModel",el]],["siglip",["SiglipModel",Zi]],["jina_clip",["JinaCLIPModel",Ji]],["mobilebert",["MobileBertModel",ti]],["squeezebert",["SqueezeBertModel",Qe]],["wav2vec2",["Wav2Vec2Model",pc]],["wav2vec2-bert",["Wav2Vec2BertModel",ku]],["unispeech",["UniSpeechModel",Cu]],["unispeech-sat",["UniSpeechSatModel",wu]],["hubert",["HubertModel",kc]],["wavlm",["WavLMModel",_c]],["audio-spectrogram-transformer",["ASTModel",Un]],["vits",["VitsModel",k0]],["pyannote",["PyAnnoteModel",bu]],["wespeaker-resnet",["WeSpeakerResNetModel",bc]],["detr",["DetrModel",Ft]],["rt_detr",["RTDetrModel",Yr]],["table-transformer",["TableTransformerModel",Hs]],["vit",["ViTModel",dl]],["ijepa",["IJepaModel",Hi]],["pvt",["PvtModel",bo]],["vit_msn",["ViTMSNModel",to]],["vit_mae",["ViTMAEModel",lA]],["groupvit",["GroupViTModel",os]],["fastvit",["FastViTModel",r]],["mobilevit",["MobileViTModel",d]],["mobilevitv2",["MobileViTV2Model",M]],["owlvit",["OwlViTModel",q]],["owlv2",["Owlv2Model",ye]],["beit",["BeitModel",ot]],["deit",["DeiTModel",Pa]],["hiera",["HieraModel",Ha]],["convnext",["ConvNextModel",ac]],["convnextv2",["ConvNextV2Model",nc]],["dinov2",["Dinov2Model",Ac]],["dinov2_with_registers",["Dinov2WithRegistersModel",dA]],["resnet",["ResNetModel",sn]],["swin",["SwinModel",Ii]],["swin2sr",["Swin2SRModel",Ro]],["donut-swin",["DonutSwinModel",c0]],["yolos",["YolosModel",Ol]],["dpt",["DPTModel",so]],["glpn",["GLPNModel",A0]],["hifigan",["SpeechT5HifiGan",Vl]],["efficientnet",["EfficientNetModel",_0]],["decision_transformer",["DecisionTransformerModel",Lc]],["patchtst",["PatchTSTForPrediction",Du]],["patchtsmixer",["PatchTSMixerForPrediction",T0]],["mobilenet_v1",["MobileNetV1Model",Sc]],["mobilenet_v2",["MobileNetV2Model",Tu]],["mobilenet_v3",["MobileNetV3Model",Pu]],["mobilenet_v4",["MobileNetV4Model",Oc]],["maskformer",["MaskFormerModel",rc]],["mgp-str",["MgpstrForSceneTextRecognition",Wc]],["style_text_to_speech_2",["StyleTextToSpeech2Model",hA]]]),Yc=new Map([["t5",["T5Model",ir]],["longt5",["LongT5Model",xr]],["mt5",["MT5Model",_r]],["bart",["BartModel",hs]],["mbart",["MBartModel",rr]],["marian",["MarianModel",dc]],["whisper",["WhisperModel",Ni]],["m2m_100",["M2M100Model",fc]],["blenderbot",["BlenderbotModel",Js]],["blenderbot-small",["BlenderbotSmallModel",_s]]]),P0=new Map([["bloom",["BloomModel",OA]],["jais",["JAISModel",rl]],["gpt2",["GPT2Model",zn]],["gptj",["GPTJModel",Fs]],["gpt_bigcode",["GPTBigCodeModel",EA]],["gpt_neo",["GPTNeoModel",al]],["gpt_neox",["GPTNeoXModel",il]],["codegen",["CodeGenModel",Za]],["llama",["LlamaModel",BA]],["exaone",["ExaoneModel",Al]],["olmo",["OlmoModel",ea]],["olmo2",["Olmo2Model",Si]],["mobilellm",["MobileLLMModel",tA]],["granite",["GraniteModel",DA]],["cohere",["CohereModel",On]],["gemma",["GemmaModel",ui]],["gemma2",["Gemma2Model",fo]],["helium",["HeliumModel",Ta]],["glm",["GlmModel",un]],["openelm",["OpenELMModel",ll]],["qwen2",["Qwen2Model",No]],["phi",["PhiModel",ba]],["phi3",["Phi3Model",ho]],["mpt",["MptModel",di]],["opt",["OPTModel",rn]],["mistral",["MistralModel",b0]],["starcoder2",["Starcoder2Model",Kn]],["falcon",["FalconModel",Ul]],["stablelm",["StableLmModel",xu]]]),Jl=new Map([["speecht5",["SpeechT5ForSpeechToText",h0]],["whisper",["WhisperForConditionalGeneration",Yo]],["moonshine",["MoonshineForConditionalGeneration",Fn]]]),Su=new Map([["speecht5",["SpeechT5ForTextToSpeech",m0]]]),D0=new Map([["vits",["VitsModel",k0]],["musicgen",["MusicgenForConditionalGeneration",x0]]]),$l=new Map([["bert",["BertForSequenceClassification",Ut]],["modernbert",["ModernBertForSequenceClassification",ct]],["roformer",["RoFormerForSequenceClassification",lr]],["electra",["ElectraForSequenceClassification",vr]],["esm",["EsmForSequenceClassification",Sn]],["convbert",["ConvBertForSequenceClassification",is]],["camembert",["CamembertForSequenceClassification",hn]],["deberta",["DebertaForSequenceClassification",Vs]],["deberta-v2",["DebertaV2ForSequenceClassification",Tn]],["mpnet",["MPNetForSequenceClassification",hi]],["albert",["AlbertForSequenceClassification",at]],["distilbert",["DistilBertForSequenceClassification",$n]],["roberta",["RobertaForSequenceClassification",Ua]],["xlm",["XLMForSequenceClassification",kA]],["xlm-roberta",["XLMRobertaForSequenceClassification",Mn]],["bart",["BartForSequenceClassification",Or]],["mbart",["MBartForSequenceClassification",Rs]],["mobilebert",["MobileBertForSequenceClassification",ds]],["squeezebert",["SqueezeBertForSequenceClassification",wt]]]),S0=new Map([["bert",["BertForTokenClassification",Pe]],["modernbert",["ModernBertForTokenClassification",kt]],["roformer",["RoFormerForTokenClassification",Fr]],["electra",["ElectraForTokenClassification",Es]],["esm",["EsmForTokenClassification",cn]],["convbert",["ConvBertForTokenClassification",wn]],["camembert",["CamembertForTokenClassification",kn]],["deberta",["DebertaForTokenClassification",xn]],["deberta-v2",["DebertaV2ForTokenClassification",Ms]],["mpnet",["MPNetForTokenClassification",Wn]],["distilbert",["DistilBertForTokenClassification",Ei]],["roberta",["RobertaForTokenClassification",Ir]],["xlm",["XLMForTokenClassification",XA]],["xlm-roberta",["XLMRobertaForTokenClassification",tn]]]),Kc=new Map([["t5",["T5ForConditionalGeneration",yr]],["longt5",["LongT5ForConditionalGeneration",Gr]],["mt5",["MT5ForConditionalGeneration",gs]],["bart",["BartForConditionalGeneration",Bs]],["mbart",["MBartForConditionalGeneration",Lr]],["marian",["MarianMTModel",gc]],["m2m_100",["M2M100ForConditionalGeneration",fA]],["blenderbot",["BlenderbotForConditionalGeneration",qs]],["blenderbot-small",["BlenderbotSmallForConditionalGeneration",Rr]]]),G0=new Map([["bloom",["BloomForCausalLM",ul]],["gpt2",["GPT2LMHeadModel",Ti]],["jais",["JAISLMHeadModel",sl]],["gptj",["GPTJForCausalLM",MA]],["gpt_bigcode",["GPTBigCodeForCausalLM",mn]],["gpt_neo",["GPTNeoForCausalLM",nl]],["gpt_neox",["GPTNeoXForCausalLM",ol]],["codegen",["CodeGenForCausalLM",Pi]],["llama",["LlamaForCausalLM",So]],["exaone",["ExaoneForCausalLM",TA]],["olmo",["OlmoForCausalLM",PA]],["olmo2",["Olmo2ForCausalLM",sA]],["mobilellm",["MobileLLMForCausalLM",Di]],["granite",["GraniteForCausalLM",aA]],["cohere",["CohereForCausalLM",zo]],["gemma",["GemmaForCausalLM",SA]],["gemma2",["Gemma2ForCausalLM",po]],["helium",["HeliumForCausalLM",co]],["glm",["GlmForCausalLM",uo]],["openelm",["OpenELMForCausalLM",GA]],["qwen2",["Qwen2ForCausalLM",gn]],["phi",["PhiForCausalLM",zA]],["phi3",["Phi3ForCausalLM",cl]],["mpt",["MptForCausalLM",AA]],["opt",["OPTForCausalLM",na]],["mbart",["MBartForCausalLM",Ws]],["mistral",["MistralForCausalLM",Mc]],["starcoder2",["Starcoder2ForCausalLM",Ec]],["falcon",["FalconForCausalLM",w0]],["trocr",["TrOCRForCausalLM",xc]],["stablelm",["StableLmForCausalLM",Mu]],["phi3_v",["Phi3VForCausalLM",Br]]]),Gu=new Map([["multi_modality",["MultiModalityCausalLM",jc]]]),qc=new Map([["bert",["BertForMaskedLM",pe]],["modernbert",["ModernBertForMaskedLM",He]],["roformer",["RoFormerForMaskedLM",nr]],["electra",["ElectraForMaskedLM",Wr]],["esm",["EsmForMaskedLM",Vn]],["convbert",["ConvBertForMaskedLM",Ks]],["camembert",["CamembertForMaskedLM",ln]],["deberta",["DebertaForMaskedLM",jr]],["deberta-v2",["DebertaV2ForMaskedLM",_a]],["mpnet",["MPNetForMaskedLM",Ai]],["albert",["AlbertForMaskedLM",vt]],["distilbert",["DistilBertForMaskedLM",Dn]],["roberta",["RobertaForMaskedLM",Us]],["xlm",["XLMWithLMHeadModel",qA]],["xlm-roberta",["XLMRobertaForMaskedLM",Eo]],["mobilebert",["MobileBertForMaskedLM",ri]],["squeezebert",["SqueezeBertForMaskedLM",ut]]]),F0=new Map([["bert",["BertForQuestionAnswering",X]],["roformer",["RoFormerForQuestionAnswering",ns]],["electra",["ElectraForQuestionAnswering",pn]],["convbert",["ConvBertForQuestionAnswering",oa]],["camembert",["CamembertForQuestionAnswering",sa]],["deberta",["DebertaForQuestionAnswering",Ss]],["deberta-v2",["DebertaV2ForQuestionAnswering",Mi]],["mpnet",["MPNetForQuestionAnswering",Gn]],["albert",["AlbertForQuestionAnswering",Le]],["distilbert",["DistilBertForQuestionAnswering",Pn]],["roberta",["RobertaForQuestionAnswering",Sa]],["xlm",["XLMForQuestionAnswering",lo]],["xlm-roberta",["XLMRobertaForQuestionAnswering",Hr]],["mobilebert",["MobileBertForQuestionAnswering",ys]],["squeezebert",["SqueezeBertForQuestionAnswering",tt]]]),z0=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",aa]],["idefics3",["Idefics3ForConditionalGeneration",_A]]]),Fu=new Map([["llava",["LlavaForConditionalGeneration",To]],["llava_onevision",["LlavaOnevisionForConditionalGeneration",_n]],["moondream1",["Moondream1ForConditionalGeneration",Li]],["florence2",["Florence2ForConditionalGeneration",Hn]],["qwen2-vl",["Qwen2VLForConditionalGeneration",iA]],["idefics3",["Idefics3ForConditionalGeneration",_A]],["paligemma",["PaliGemmaForConditionalGeneration",Xi]]]),zu=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",aa]]]),Xc=new Map([["vit",["ViTForImageClassification",Fi]],["ijepa",["IJepaForImageClassification",QA]],["pvt",["PvtForImageClassification",Lo]],["vit_msn",["ViTMSNForImageClassification",fl]],["fastvit",["FastViTForImageClassification",s]],["mobilevit",["MobileViTForImageClassification",f]],["mobilevitv2",["MobileViTV2ForImageClassification",y]],["beit",["BeitForImageClassification",pt]],["deit",["DeiTForImageClassification",Fa]],["hiera",["HieraForImageClassification",Ya]],["convnext",["ConvNextForImageClassification",pu]],["convnextv2",["ConvNextV2ForImageClassification",ic]],["dinov2",["Dinov2ForImageClassification",Ki]],["dinov2_with_registers",["Dinov2WithRegistersForImageClassification",gA]],["resnet",["ResNetForImageClassification",vn]],["swin",["SwinForImageClassification",zi]],["segformer",["SegformerForImageClassification",Pc]],["efficientnet",["EfficientNetForImageClassification",Eu]],["mobilenet_v1",["MobileNetV1ForImageClassification",Gc]],["mobilenet_v2",["MobileNetV2ForImageClassification",Fc]],["mobilenet_v3",["MobileNetV3ForImageClassification",zc]],["mobilenet_v4",["MobileNetV4ForImageClassification",Qc]]]),Ou=new Map([["detr",["DetrForObjectDetection",Lt]],["rt_detr",["RTDetrForObjectDetection",$r]],["table-transformer",["TableTransformerForObjectDetection",$s]],["yolos",["YolosForObjectDetection",lc]]]),Zc=new Map([["owlvit",["OwlViTForObjectDetection",ae]],["owlv2",["Owlv2ForObjectDetection",Be]],["grounding-dino",["GroundingDinoForObjectDetection",zl]]]),Jc=new Map([["detr",["DetrForSegmentation",Xt]],["clipseg",["CLIPSegForImageSegmentation",li]]]),$c=new Map([["segformer",["SegformerForSemanticSegmentation",Dc]],["sapiens",["SapiensForSemanticSegmentation",J0]]]),eu=new Map([["detr",["DetrForSegmentation",Xt]],["maskformer",["MaskFormerForInstanceSegmentation",i0]]]),Qu=new Map([["sam",["SamModel",uc]]]),tu=new Map([["wav2vec2",["Wav2Vec2ForCTC",hc]],["wav2vec2-bert",["Wav2Vec2BertForCTC",VA]],["unispeech",["UniSpeechForCTC",f0]],["unispeech-sat",["UniSpeechSatForCTC",Cc]],["wavlm",["WavLMForCTC",jl]],["hubert",["HubertForCTC",_u]]]),O0=new Map([["wav2vec2",["Wav2Vec2ForSequenceClassification",mu]],["wav2vec2-bert",["Wav2Vec2BertForSequenceClassification",Ic]],["unispeech",["UniSpeechForSequenceClassification",Ll]],["unispeech-sat",["UniSpeechSatForSequenceClassification",Iu]],["wavlm",["WavLMForSequenceClassification",ed]],["hubert",["HubertForSequenceClassification",yc]],["audio-spectrogram-transformer",["ASTForAudioClassification",Uo]]]),Q0=new Map([["wavlm",["WavLMForXVector",no]]]),ru=new Map([["unispeech-sat",["UniSpeechSatForAudioFrameClassification",wc]],["wavlm",["WavLMForAudioFrameClassification",ko]],["wav2vec2",["Wav2Vec2ForAudioFrameClassification",Ql]],["pyannote",["PyAnnoteForAudioFrameClassification",mc]]]),su=new Map([["vitmatte",["VitMatteForImageMatting",i]]]),Nu=new Map([["patchtst",["PatchTSTForPrediction",Zl]],["patchtsmixer",["PatchTSMixerForPrediction",wl]]]),au=new Map([["swin2sr",["Swin2SRForImageSuperResolution",ro]]]),N0=new Map([["dpt",["DPTForDepthEstimation",LA]],["depth_anything",["DepthAnythingForDepthEstimation",RA]],["glpn",["GLPNForDepthEstimation",l0]],["sapiens",["SapiensForDepthEstimation",$0]],["depth_pro",["DepthProForDepthEstimation",ec]]]),Lu=new Map([["sapiens",["SapiensForNormalEstimation",Sl]]]),Ru=new Map([["vitpose",["VitPoseForPoseEstimation",NA]]]),L0=new Map([["clip",["CLIPVisionModelWithProjection",Ga]],["siglip",["SiglipVisionModel",ia]],["jina_clip",["JinaCLIPVisionModel",Xo]]]),bA=[[Hc,g],[Yc,I],[P0,B],[$l,g],[S0,g],[Kc,e],[Jl,e],[G0,B],[Gu,Ve],[qc,g],[F0,g],[z0,u],[Fu,G],[Xc,g],[Jc,g],[eu,g],[$c,g],[su,g],[Nu,g],[au,g],[N0,g],[Lu,g],[Ru,g],[Ou,g],[Zc,g],[Qu,ue],[tu,g],[O0,g],[Su,e],[D0,g],[Q0,g],[ru,g],[L0,g]];for(const[ie,ke]of bA)for(const[Ue,yt]of ie.values())Re.set(Ue,ke),nt.set(yt,Ue),Ke.set(Ue,yt);const R0=[["MusicgenForConditionalGeneration",x0,K],["Phi3VForCausalLM",Br,ve],["CLIPTextModelWithProjection",Ko,g],["SiglipTextModel",qo,g],["JinaCLIPTextModel",tl,g],["ClapTextModelWithProjection",Bc,g],["ClapAudioModelWithProjection",Tc,g]];for(const[ie,ke,Ue]of R0)Re.set(ie,Ue),nt.set(ke,ie),Ke.set(ie,ke);class nu extends la{}We(nu,"MODEL_CLASS_MAPPINGS",bA.map(ke=>ke[0])),We(nu,"BASE_IF_FAIL",!0);class ju extends la{}We(ju,"MODEL_CLASS_MAPPINGS",[$l]);class Is extends la{}We(Is,"MODEL_CLASS_MAPPINGS",[S0]);class iu extends la{}We(iu,"MODEL_CLASS_MAPPINGS",[Kc]);class _o extends la{}We(_o,"MODEL_CLASS_MAPPINGS",[Jl]);class ou extends la{}We(ou,"MODEL_CLASS_MAPPINGS",[Su]);class j0 extends la{}We(j0,"MODEL_CLASS_MAPPINGS",[D0]);class Vu extends la{}We(Vu,"MODEL_CLASS_MAPPINGS",[G0]);class Ka extends la{}We(Ka,"MODEL_CLASS_MAPPINGS",[qc]);class Ps extends la{}We(Ps,"MODEL_CLASS_MAPPINGS",[F0]);class zs extends la{}We(zs,"MODEL_CLASS_MAPPINGS",[z0]);class Vo extends la{}We(Vo,"MODEL_CLASS_MAPPINGS",[Xc]);class Wu extends la{}We(Wu,"MODEL_CLASS_MAPPINGS",[Jc]);class V0 extends la{}We(V0,"MODEL_CLASS_MAPPINGS",[$c]);class Uu extends la{}We(Uu,"MODEL_CLASS_MAPPINGS",[eu]);class W0 extends la{}We(W0,"MODEL_CLASS_MAPPINGS",[Ou]);class td extends la{}We(td,"MODEL_CLASS_MAPPINGS",[Zc]);class Hu extends la{}We(Hu,"MODEL_CLASS_MAPPINGS",[Qu]);class U0 extends la{}We(U0,"MODEL_CLASS_MAPPINGS",[tu]);class Yu extends la{}We(Yu,"MODEL_CLASS_MAPPINGS",[O0]);class rd extends la{}We(rd,"MODEL_CLASS_MAPPINGS",[Q0]);class Ku extends la{}We(Ku,"MODEL_CLASS_MAPPINGS",[ru]);class CA extends la{}We(CA,"MODEL_CLASS_MAPPINGS",[zu]);class Au extends la{}We(Au,"MODEL_CLASS_MAPPINGS",[su]);class Os extends la{}We(Os,"MODEL_CLASS_MAPPINGS",[au]);class H0 extends la{}We(H0,"MODEL_CLASS_MAPPINGS",[N0]);class $a extends la{}We($a,"MODEL_CLASS_MAPPINGS",[Lu]);class Qn extends la{}We(Qn,"MODEL_CLASS_MAPPINGS",[Ru]);class qn extends la{}We(qn,"MODEL_CLASS_MAPPINGS",[L0]);class Il extends It{constructor({logits:ke,past_key_values:Ue,encoder_outputs:yt,decoder_attentions:Nt=null,cross_attentions:Rt=null}){super(),this.logits=ke,this.past_key_values=Ue,this.encoder_outputs=yt,this.decoder_attentions=Nt,this.cross_attentions=Rt}}class Qs extends It{constructor({logits:ke,...Ue}){super(),this.logits=ke;const yt=Object.values(Ue);yt.length>0&&(this.attentions=yt)}}class qu extends It{constructor({logits:ke,embeddings:Ue}){super(),this.logits=ke,this.embeddings=Ue}}class Bn extends It{constructor({logits:ke}){super(),this.logits=ke}}class he extends It{constructor({logits:ke}){super(),this.logits=ke}}class Te extends It{constructor({start_logits:ke,end_logits:Ue}){super(),this.start_logits=ke,this.end_logits=Ue}}class st extends It{constructor({logits:ke}){super(),this.logits=ke}}class Qt extends It{constructor({logits:ke,past_key_values:Ue}){super(),this.logits=ke,this.past_key_values=Ue}}class Jt extends It{constructor({alphas:ke}){super(),this.alphas=ke}}class $t extends It{constructor({waveform:ke,spectrogram:Ue}){super(),this.waveform=ke,this.spectrogram=Ue}}},"./src/models/audio_spectrogram_transformer/feature_extraction_audio_spectrogram_transformer.js":(T,k,A)=>{A.r(k),A.d(k,{ASTFeatureExtractor:()=>Y});var w=A("./src/base/feature_extraction_utils.js");A("./src/utils/tensor.js");var F=A("./src/utils/audio.js");class Y extends w.FeatureExtractor{constructor(H){super(H);const z=this.config.sampling_rate,N=(0,F.mel_filter_bank)(256,this.config.num_mel_bins,20,Math.floor(z/2),z,null,"kaldi",!0);for(let D=0;D<N.length;++D)N[D].push(0);this.mel_filters=N,this.window=(0,F.window_function)(400,"hann",{periodic:!1}),this.mean=this.config.mean,this.std=this.config.std}async _extract_fbank_features(H,z){return(0,F.spectrogram)(H,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,max_num_frames:z,transpose:!0})}async _call(H){(0,w.validate_audio_inputs)(H,"ASTFeatureExtractor");const z=await this._extract_fbank_features(H,this.config.max_length);if(this.config.do_normalize){const N=2*this.std,D=z.data;for(let R=0;R<D.length;++R)D[R]=(D[R]-this.mean)/N}return{input_values:z.unsqueeze_(0)}}}},"./src/models/auto/feature_extraction_auto.js":(T,k,A)=>{A.r(k),A.d(k,{AutoFeatureExtractor:()=>U});var w=A("./src/utils/constants.js"),F=A("./src/utils/hub.js");A("./src/base/feature_extraction_utils.js");var Y=A("./src/models/feature_extractors.js");class U{static async from_pretrained(z,N={}){const D=await(0,F.getModelJSON)(z,w.FEATURE_EXTRACTOR_NAME,!0,N),R=D.feature_extractor_type,Q=Y[R];if(!Q)throw new Error(`Unknown feature_extractor_type: '${R}'. Please report this at ${w.GITHUB_ISSUE_URL}.`);return new Q(D)}}},"./src/models/auto/image_processing_auto.js":(T,k,A)=>{A.r(k),A.d(k,{AutoImageProcessor:()=>H});var w=A("./src/utils/constants.js"),F=A("./src/utils/hub.js"),Y=A("./src/base/image_processors_utils.js"),U=A("./src/models/image_processors.js");class H{static async from_pretrained(N,D={}){const R=await(0,F.getModelJSON)(N,w.IMAGE_PROCESSOR_NAME,!0,D),Q=R.image_processor_type??R.feature_extractor_type;let J=U[Q];return J||(Q!==void 0&&console.warn(`Image processor type '${Q}' not found, assuming base ImageProcessor. Please report this at ${w.GITHUB_ISSUE_URL}.`),J=Y.ImageProcessor),new J(R)}}},"./src/models/auto/processing_auto.js":(T,k,A)=>{A.r(k),A.d(k,{AutoProcessor:()=>N});var w=A("./src/utils/constants.js"),F=A("./src/utils/hub.js"),Y=A("./src/base/processing_utils.js"),U=A("./src/models/processors.js"),H=A("./src/models/image_processors.js"),z=A("./src/models/feature_extractors.js");class N{static async from_pretrained(R,Q={}){const J=await(0,F.getModelJSON)(R,w.IMAGE_PROCESSOR_NAME,!0,Q),{image_processor_type:oe,feature_extractor_type:be,processor_class:Ie}=J;if(Ie&&U[Ie])return U[Ie].from_pretrained(R,Q);if(!oe&&!be)throw new Error("No `image_processor_type` or `feature_extractor_type` found in the config.");const ee={};if(oe){const re=H[oe];if(!re)throw new Error(`Unknown image_processor_type: '${oe}'.`);ee.image_processor=new re(J)}if(be){const re=H[be];if(re)ee.image_processor=new re(J);else{const ce=z[be];if(!ce)throw new Error(`Unknown feature_extractor_type: '${be}'.`);ee.feature_extractor=new ce(J)}}return new Y.Processor({},ee)}}},"./src/models/beit/image_processing_beit.js":(T,k,A)=>{A.r(k),A.d(k,{BeitFeatureExtractor:()=>F});var w=A("./src/base/image_processors_utils.js");class F extends w.ImageProcessor{}},"./src/models/bit/image_processing_bit.js":(T,k,A)=>{A.r(k),A.d(k,{BitImageProcessor:()=>F});var w=A("./src/base/image_processors_utils.js");class F extends w.ImageProcessor{}},"./src/models/chinese_clip/image_processing_chinese_clip.js":(T,k,A)=>{A.r(k),A.d(k,{ChineseCLIPFeatureExtractor:()=>F});var w=A("./src/base/image_processors_utils.js");class F extends w.ImageProcessor{}},"./src/models/clap/feature_extraction_clap.js":(T,k,A)=>{A.r(k),A.d(k,{ClapFeatureExtractor:()=>Y});var w=A("./src/base/feature_extraction_utils.js");A("./src/utils/tensor.js");var F=A("./src/utils/audio.js");class Y extends w.FeatureExtractor{constructor(H){super(H),this.mel_filters=(0,F.mel_filter_bank)(this.config.nb_frequency_bins,this.config.feature_size,this.config.frequency_min,this.config.frequency_max,this.config.sampling_rate,null,"htk"),this.mel_filters_slaney=(0,F.mel_filter_bank)(this.config.nb_frequency_bins,this.config.feature_size,this.config.frequency_min,this.config.frequency_max,this.config.sampling_rate,"slaney","slaney"),this.window=(0,F.window_function)(this.config.fft_window_size,"hann")}async _get_input_mel(H,z,N,D){let R;const Q=H.length-z;if(Q>0){if(N!=="rand_trunc")throw new Error(`Truncation strategy "${N}" not implemented`);{const J=Math.floor(Math.random()*(Q+1));H=H.subarray(J,J+z),R=await this._extract_fbank_features(H,this.mel_filters_slaney,this.config.nb_max_samples)}}else{if(Q<0){let J=new Float64Array(z);if(J.set(H),D==="repeat")for(let oe=H.length;oe<z;oe+=H.length)J.set(H.subarray(0,Math.min(H.length,z-oe)),oe);else if(D==="repeatpad")for(let oe=H.length;oe<-Q;oe+=H.length)J.set(H,oe);H=J}if(N==="fusion")throw new Error(`Truncation strategy "${N}" not implemented`);R=await this._extract_fbank_features(H,this.mel_filters_slaney,this.config.nb_max_samples)}return R.unsqueeze_(0)}async _extract_fbank_features(H,z,N=null){return(0,F.spectrogram)(H,this.window,this.config.fft_window_size,this.config.hop_length,{power:2,mel_filters:z,log_mel:"dB",max_num_frames:N,do_pad:!1,transpose:!0})}async _call(H,{max_length:z=null}={}){return(0,w.validate_audio_inputs)(H,"ClapFeatureExtractor"),{input_features:(await this._get_input_mel(H,z??this.config.nb_max_samples,this.config.truncation,this.config.padding)).unsqueeze_(0)}}}},"./src/models/clip/image_processing_clip.js":(T,k,A)=>{A.r(k),A.d(k,{CLIPFeatureExtractor:()=>Y,CLIPImageProcessor:()=>F});var w=A("./src/base/image_processors_utils.js");class F extends w.ImageProcessor{}class Y extends F{}},"./src/models/convnext/image_processing_convnext.js":(T,k,A)=>{A.r(k),A.d(k,{ConvNextFeatureExtractor:()=>Y,ConvNextImageProcessor:()=>F});var w=A("./src/base/image_processors_utils.js");class F extends w.ImageProcessor{constructor(H){super(H),this.crop_pct=this.config.crop_pct??.875}async resize(H){var N;const z=(N=this.size)==null?void 0:N.shortest_edge;if(z===void 0)throw new Error("Size dictionary must contain 'shortest_edge' key.");if(z<384){const D=Math.floor(z/this.crop_pct),[R,Q]=this.get_resize_output_image_size(H,{shortest_edge:D});H=await H.resize(R,Q,{resample:this.resample}),H=await H.center_crop(z,z)}else H=await H.resize(z,z,{resample:this.resample});return H}}class Y extends F{}},"./src/models/deit/image_processing_deit.js":(T,k,A)=>{A.r(k),A.d(k,{DeiTFeatureExtractor:()=>Y,DeiTImageProcessor:()=>F});var w=A("./src/base/image_processors_utils.js");class F extends w.ImageProcessor{}class Y extends F{}},"./src/models/detr/image_processing_detr.js":(T,k,A)=>{A.r(k),A.d(k,{DetrFeatureExtractor:()=>U,DetrImageProcessor:()=>Y});var w=A("./src/base/image_processors_utils.js"),F=A("./src/utils/tensor.js");class Y extends w.ImageProcessor{async _call(z){const N=await super._call(z),D=[N.pixel_values.dims[0],64,64],R=(0,F.full)(D,1n);return{...N,pixel_mask:R}}post_process_object_detection(...z){return(0,w.post_process_object_detection)(...z)}post_process_panoptic_segmentation(...z){return(0,w.post_process_panoptic_segmentation)(...z)}post_process_instance_segmentation(...z){return(0,w.post_process_instance_segmentation)(...z)}}class U extends Y{}},"./src/models/donut/image_processing_donut.js":(T,k,A)=>{A.r(k),A.d(k,{DonutFeatureExtractor:()=>Y,DonutImageProcessor:()=>F});var w=A("./src/base/image_processors_utils.js");class F extends w.ImageProcessor{pad_image(H,z,N,D={}){const[R,Q,J]=z;let oe=this.image_mean;Array.isArray(this.image_mean)||(oe=new Array(J).fill(oe));let be=this.image_std;Array.isArray(be)||(be=new Array(J).fill(oe));const Ie=oe.map((ee,re)=>-ee/be[re]);return super.pad_image(H,z,N,{center:!0,constant_values:Ie,...D})}}class Y extends F{}},"./src/models/dpt/image_processing_dpt.js":(T,k,A)=>{A.r(k),A.d(k,{DPTFeatureExtractor:()=>Y,DPTImageProcessor:()=>F});var w=A("./src/base/image_processors_utils.js");class F extends w.ImageProcessor{}class Y extends F{}},"./src/models/efficientnet/image_processing_efficientnet.js":(T,k,A)=>{A.r(k),A.d(k,{EfficientNetImageProcessor:()=>F});var w=A("./src/base/image_processors_utils.js");class F extends w.ImageProcessor{constructor(U){super(U),this.include_top=this.config.include_top??!0,this.include_top&&(this.image_std=this.image_std.map(H=>H*H))}}},"./src/models/feature_extractors.js":(T,k,A)=>{A.r(k),A.d(k,{ASTFeatureExtractor:()=>w.ASTFeatureExtractor,ClapFeatureExtractor:()=>F.ClapFeatureExtractor,ImageFeatureExtractor:()=>Q.ImageProcessor,MoonshineFeatureExtractor:()=>Y.MoonshineFeatureExtractor,PyAnnoteFeatureExtractor:()=>U.PyAnnoteFeatureExtractor,SeamlessM4TFeatureExtractor:()=>H.SeamlessM4TFeatureExtractor,SpeechT5FeatureExtractor:()=>z.SpeechT5FeatureExtractor,Wav2Vec2FeatureExtractor:()=>N.Wav2Vec2FeatureExtractor,WeSpeakerFeatureExtractor:()=>D.WeSpeakerFeatureExtractor,WhisperFeatureExtractor:()=>R.WhisperFeatureExtractor});var w=A("./src/models/audio_spectrogram_transformer/feature_extraction_audio_spectrogram_transformer.js"),F=A("./src/models/clap/feature_extraction_clap.js"),Y=A("./src/models/moonshine/feature_extraction_moonshine.js"),U=A("./src/models/pyannote/feature_extraction_pyannote.js"),H=A("./src/models/seamless_m4t/feature_extraction_seamless_m4t.js"),z=A("./src/models/speecht5/feature_extraction_speecht5.js"),N=A("./src/models/wav2vec2/feature_extraction_wav2vec2.js"),D=A("./src/models/wespeaker/feature_extraction_wespeaker.js"),R=A("./src/models/whisper/feature_extraction_whisper.js"),Q=A("./src/base/image_processors_utils.js")},"./src/models/florence2/processing_florence2.js":(T,k,A)=>{A.r(k),A.d(k,{Florence2Processor:()=>U});var w=A("./src/base/processing_utils.js"),F=A("./src/models/auto/image_processing_auto.js"),Y=A("./src/tokenizers.js");class U extends w.Processor{constructor(z,N){super(z,N);const{tasks_answer_post_processing_type:D,task_prompts_without_inputs:R,task_prompts_with_input:Q}=this.image_processor.config;this.tasks_answer_post_processing_type=new Map(Object.entries(D??{})),this.task_prompts_without_inputs=new Map(Object.entries(R??{})),this.task_prompts_with_input=new Map(Object.entries(Q??{})),this.regexes={quad_boxes:/(.+?)<loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)>/gm,bboxes:/([^<]+)?<loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)>/gm},this.size_per_bin=1e3}construct_prompts(z){typeof z=="string"&&(z=[z]);const N=[];for(const D of z)if(this.task_prompts_without_inputs.has(D))N.push(this.task_prompts_without_inputs.get(D));else{for(const[R,Q]of this.task_prompts_with_input)if(D.includes(R)){N.push(Q.replaceAll("{input}",D).replaceAll(R,""));break}N.length!==z.length&&N.push(D)}return N}post_process_generation(z,N,D){const R=this.tasks_answer_post_processing_type.get(N)??"pure_text";let Q;switch(z=z.replaceAll("<s>","").replaceAll("</s>",""),R){case"pure_text":Q=z;break;case"description_with_bboxes":case"bboxes":case"phrase_grounding":case"ocr":const J=R==="ocr"?"quad_boxes":"bboxes",oe=z.matchAll(this.regexes[J]),be=[],Ie=[];for(const[ee,re,...ce]of oe)be.push(re?re.trim():be.at(-1)??""),Ie.push(ce.map((g,I)=>(Number(g)+.5)/this.size_per_bin*D[I%2]));Q={labels:be,[J]:Ie};break;default:throw new Error(`Task "${N}" (of type "${R}") not yet implemented.`)}return{[N]:Q}}async _call(z,N=null,D={}){if(!z&&!N)throw new Error("Either text or images must be provided");return{...await this.image_processor(z,D),...N?this.tokenizer(N,D):{}}}}We(U,"tokenizer_class",Y.AutoTokenizer),We(U,"image_processor_class",F.AutoImageProcessor)},"./src/models/glpn/image_processing_glpn.js":(T,k,A)=>{A.r(k),A.d(k,{GLPNFeatureExtractor:()=>F});var w=A("./src/base/image_processors_utils.js");class F extends w.ImageProcessor{}},"./src/models/grounding_dino/image_processing_grounding_dino.js":(T,k,A)=>{A.r(k),A.d(k,{GroundingDinoImageProcessor:()=>Y});var w=A("./src/base/image_processors_utils.js"),F=A("./src/utils/tensor.js");class Y extends w.ImageProcessor{async _call(H){const z=await super._call(H),N=z.pixel_values.dims,D=(0,F.ones)([N[0],N[2],N[3]]);return{...z,pixel_mask:D}}}},"./src/models/grounding_dino/processing_grounding_dino.js":(T,k,A)=>{A.r(k),A.d(k,{GroundingDinoProcessor:()=>z});var w=A("./src/base/processing_utils.js"),F=A("./src/models/auto/image_processing_auto.js"),Y=A("./src/tokenizers.js"),U=A("./src/base/image_processors_utils.js");function H(N,D){const R=N.dims.at(-1)-1,Q=N.tolist();Q.fill(!1,0,1),Q.fill(!1,R);const J=D.tolist();return Q.map((oe,be)=>oe?be:null).filter(oe=>oe!==null).map(oe=>J[oe])}class z extends w.Processor{async _call(D,R,Q={}){const J=D?await this.image_processor(D,Q):{};return{...R?this.tokenizer(R,Q):{},...J}}post_process_grounded_object_detection(D,R,{box_threshold:Q=.25,text_threshold:J=.25,target_sizes:oe=null}={}){const{logits:be,pred_boxes:Ie}=D,ee=be.dims[0];if(oe!==null&&oe.length!==ee)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");const re=be.dims.at(1),ce=be.sigmoid(),g=ce.max(-1).tolist(),I=Ie.tolist().map(u=>u.map(B=>(0,U.center_to_corners_format)(B))),e=[];for(let u=0;u<ee;++u){const B=oe!==null?oe[u]:null;B!==null&&(I[u]=I[u].map(ve=>ve.map((Re,Ke)=>Re*B[(Ke+1)%2])));const ue=g[u],G=[],K=[],Ve=[];for(let ve=0;ve<re;++ve){const Re=ue[ve];if(Re<=Q)continue;const Ke=I[u][ve],nt=ce[u][ve];G.push(Re),Ve.push(Ke);const Ct=H(nt.gt(J),R[u]);K.push(Ct)}e.push({scores:G,boxes:Ve,labels:this.batch_decode(K)})}return e}}We(z,"tokenizer_class",Y.AutoTokenizer),We(z,"image_processor_class",F.AutoImageProcessor)},"./src/models/idefics3/image_processing_idefics3.js":(T,k,A)=>{A.r(k),A.d(k,{Idefics3ImageProcessor:()=>Y});var w=A("./src/base/image_processors_utils.js"),F=A("./src/utils/tensor.js");class Y extends w.ImageProcessor{constructor(H){super(H),this.do_image_splitting=H.do_image_splitting??!0,this.max_image_size=H.max_image_size}get_resize_for_vision_encoder(H,z){let[N,D]=H.dims.slice(-2);const R=D/N;return D>=N?(D=Math.ceil(D/z)*z,N=Math.floor(D/R),N=Math.ceil(N/z)*z):(N=Math.ceil(N/z)*z,D=Math.floor(N*R),D=Math.ceil(D/z)*z),{height:N,width:D}}async _call(H,{do_image_splitting:z=null,return_row_col_info:N=!1}={}){let D;if(Array.isArray(H)){if(H.length===0||!H[0])throw new Error("No images provided.");D=Array.isArray(H[0])?H:[H]}else D=[[H]];let R=[],Q=[],J=[];const oe=[],be=[];for(const u of D){let B=await Promise.all(u.map(K=>this.preprocess(K)));oe.push(...B.map(K=>K.original_size)),be.push(...B.map(K=>K.reshaped_input_size)),B.forEach(K=>K.pixel_values.unsqueeze_(0));const{longest_edge:ue}=this.max_image_size;let G;if(z??this.do_image_splitting){let K=new Array(B.length),Ve=new Array(B.length);G=await Promise.all(B.map(async(ve,Re)=>{const Ke=this.get_resize_for_vision_encoder(ve.pixel_values,ue),nt=await(0,F.interpolate_4d)(ve.pixel_values,{size:[Ke.height,Ke.width]}),{frames:Ct,num_splits_h:ht,num_splits_w:et}=await this.split_image(nt,this.max_image_size);return K[Re]=ht,Ve[Re]=et,(0,F.cat)(Ct,0)})),Q.push(K),J.push(Ve)}else{const K=[ue,ue];G=await Promise.all(B.map(Ve=>(0,F.interpolate_4d)(Ve.pixel_values,{size:K}))),Q.push(new Array(B.length).fill(0)),J.push(new Array(B.length).fill(0))}R.push((0,F.cat)(G,0))}const Ie=R.length,[ee,re,ce,g]=R[0].dims;let I,e;if(Ie===1)I=R[0].unsqueeze_(0),e=(0,F.full)([Ie,ee,ce,g],!0);else{const u=Math.max(...R.map(G=>G.dims.at(0)));e=(0,F.full)([Ie,u,ce,g],!0);const B=e.data,ue=u*ce*g;for(let G=0;G<Ie;++G){const K=R[G].dims[0];if(K<u){R[G]=(0,F.cat)([R[G],(0,F.full)([u-K,re,ce,g],0)],0);const Ve=G*ue+K*ce*g,ve=(G+1)*ue;B.fill(!1,Ve,ve)}}I=(0,F.stack)(R,0)}return{pixel_values:I,pixel_attention_mask:e,original_sizes:oe,reshaped_input_sizes:be,...N?{rows:Q,cols:J}:{}}}async split_image(H,{longest_edge:z}){const N=z,D=z,R=[],[Q,J]=H.dims.slice(-2);let oe=0,be=0;if(Q>N||J>D){oe=Math.ceil(Q/N),be=Math.ceil(J/D);const Ie=Math.ceil(Q/oe),ee=Math.ceil(J/be);for(let g=0;g<oe;++g)for(let I=0;I<be;++I){let e,u,B,ue;g===oe-1?(u=Q-Ie,ue=Q):(u=g*Ie,ue=(g+1)*Ie),I===be-1?(e=J-ee,B=J):(e=I*ee,B=(I+1)*ee);const G=[u,e],K=[ue,B],Ve=await(0,F.slice)(H,G,K,[2,3]);R.push(Ve)}const re=N,ce=D;Q===re&&J===ce||(H=await(0,F.interpolate_4d)(H,{size:[re,ce]}))}return R.push(H),{frames:R,num_splits_h:oe,num_splits_w:be}}}},"./src/models/idefics3/processing_idefics3.js":(T,k,A)=>{A.r(k),A.d(k,{Idefics3Processor:()=>z});var w=A("./src/base/processing_utils.js"),F=A("./src/models/auto/image_processing_auto.js"),Y=A("./src/tokenizers.js");A("./src/utils/image.js");var U=A("./src/utils/core.js");function H(N,D,R,Q,J,oe){return N===0&&D===0?function(be,Ie,ee,re){return`${Ie}${re}`+ee.repeat(be)+`${Ie}`}(R,Q,J,oe):function(be,Ie,ee,re,ce,g){let I="";for(let e=0;e<Ie;++e){for(let u=0;u<ee;++u)I+=re+`<row_${e+1}_col_${u+1}>`+ce.repeat(be);I+=`
`}return I+=`
${re}${g}`+ce.repeat(be)+`${re}`,I}(R,N,D,Q,J,oe)}class z extends w.Processor{constructor(){super(...arguments);We(this,"fake_image_token","<fake_token_around_image>");We(this,"image_token","<image>");We(this,"global_img_token","<global-img>")}async _call(R,Q=null,J={}){let oe;J.return_row_col_info??(J.return_row_col_info=!0),Q&&(oe=await this.image_processor(Q,J)),Array.isArray(R)||(R=[R]);const be=oe.rows??[new Array(R.length).fill(0)],Ie=oe.cols??[new Array(R.length).fill(0)],ee=this.config.image_seq_len,re=[],ce=[];for(let g=0;g<R.length;++g){const I=R[g],e=be[g],u=Ie[g];re.push((0,U.count)(I,this.image_token));const B=e.map((K,Ve)=>H(K,u[Ve],ee,this.fake_image_token,this.image_token,this.global_img_token)),ue=I.split(this.image_token);if(ue.length===0)throw new Error("The image token should be present in the text.");let G=ue[0];for(let K=0;K<B.length;++K)G+=B[K]+ue[K+1];ce.push(G)}return{...this.tokenizer(ce),...oe}}}We(z,"image_processor_class",F.AutoImageProcessor),We(z,"tokenizer_class",Y.AutoTokenizer),We(z,"uses_processor_config",!0)},"./src/models/image_processors.js":(T,k,A)=>{A.r(k),A.d(k,{BeitFeatureExtractor:()=>w.BeitFeatureExtractor,BitImageProcessor:()=>F.BitImageProcessor,CLIPFeatureExtractor:()=>U.CLIPFeatureExtractor,CLIPImageProcessor:()=>U.CLIPImageProcessor,ChineseCLIPFeatureExtractor:()=>Y.ChineseCLIPFeatureExtractor,ConvNextFeatureExtractor:()=>H.ConvNextFeatureExtractor,ConvNextImageProcessor:()=>H.ConvNextImageProcessor,DPTFeatureExtractor:()=>R.DPTFeatureExtractor,DPTImageProcessor:()=>R.DPTImageProcessor,DeiTFeatureExtractor:()=>z.DeiTFeatureExtractor,DeiTImageProcessor:()=>z.DeiTImageProcessor,DetrFeatureExtractor:()=>N.DetrFeatureExtractor,DetrImageProcessor:()=>N.DetrImageProcessor,DonutFeatureExtractor:()=>D.DonutFeatureExtractor,DonutImageProcessor:()=>D.DonutImageProcessor,EfficientNetImageProcessor:()=>Q.EfficientNetImageProcessor,GLPNFeatureExtractor:()=>J.GLPNFeatureExtractor,GroundingDinoImageProcessor:()=>oe.GroundingDinoImageProcessor,Idefics3ImageProcessor:()=>be.Idefics3ImageProcessor,JinaCLIPImageProcessor:()=>ee.JinaCLIPImageProcessor,LlavaOnevisionImageProcessor:()=>re.LlavaOnevisionImageProcessor,Mask2FormerImageProcessor:()=>ce.Mask2FormerImageProcessor,MaskFormerFeatureExtractor:()=>g.MaskFormerFeatureExtractor,MaskFormerImageProcessor:()=>g.MaskFormerImageProcessor,MobileNetV1FeatureExtractor:()=>I.MobileNetV1FeatureExtractor,MobileNetV1ImageProcessor:()=>I.MobileNetV1ImageProcessor,MobileNetV2FeatureExtractor:()=>e.MobileNetV2FeatureExtractor,MobileNetV2ImageProcessor:()=>e.MobileNetV2ImageProcessor,MobileNetV3FeatureExtractor:()=>u.MobileNetV3FeatureExtractor,MobileNetV3ImageProcessor:()=>u.MobileNetV3ImageProcessor,MobileNetV4FeatureExtractor:()=>B.MobileNetV4FeatureExtractor,MobileNetV4ImageProcessor:()=>B.MobileNetV4ImageProcessor,MobileViTFeatureExtractor:()=>ue.MobileViTFeatureExtractor,MobileViTImageProcessor:()=>ue.MobileViTImageProcessor,NougatImageProcessor:()=>G.NougatImageProcessor,OwlViTFeatureExtractor:()=>Ve.OwlViTFeatureExtractor,OwlViTImageProcessor:()=>Ve.OwlViTImageProcessor,Owlv2ImageProcessor:()=>K.Owlv2ImageProcessor,Phi3VImageProcessor:()=>ve.Phi3VImageProcessor,PvtImageProcessor:()=>Re.PvtImageProcessor,Qwen2VLImageProcessor:()=>Ke.Qwen2VLImageProcessor,RTDetrImageProcessor:()=>nt.RTDetrImageProcessor,SamImageProcessor:()=>Ct.SamImageProcessor,SegformerFeatureExtractor:()=>ht.SegformerFeatureExtractor,SegformerImageProcessor:()=>ht.SegformerImageProcessor,SiglipImageProcessor:()=>et.SiglipImageProcessor,Swin2SRImageProcessor:()=>ze.Swin2SRImageProcessor,VLMImageProcessor:()=>Ie.VLMImageProcessor,ViTFeatureExtractor:()=>Se.ViTFeatureExtractor,ViTImageProcessor:()=>Se.ViTImageProcessor,VitMatteImageProcessor:()=>xe.VitMatteImageProcessor,VitPoseImageProcessor:()=>Me.VitPoseImageProcessor,YolosFeatureExtractor:()=>ft.YolosFeatureExtractor,YolosImageProcessor:()=>ft.YolosImageProcessor});var w=A("./src/models/beit/image_processing_beit.js"),F=A("./src/models/bit/image_processing_bit.js"),Y=A("./src/models/chinese_clip/image_processing_chinese_clip.js"),U=A("./src/models/clip/image_processing_clip.js"),H=A("./src/models/convnext/image_processing_convnext.js"),z=A("./src/models/deit/image_processing_deit.js"),N=A("./src/models/detr/image_processing_detr.js"),D=A("./src/models/donut/image_processing_donut.js"),R=A("./src/models/dpt/image_processing_dpt.js"),Q=A("./src/models/efficientnet/image_processing_efficientnet.js"),J=A("./src/models/glpn/image_processing_glpn.js"),oe=A("./src/models/grounding_dino/image_processing_grounding_dino.js"),be=A("./src/models/idefics3/image_processing_idefics3.js"),Ie=A("./src/models/janus/image_processing_janus.js"),ee=A("./src/models/jina_clip/image_processing_jina_clip.js"),re=A("./src/models/llava_onevision/image_processing_llava_onevision.js"),ce=A("./src/models/mask2former/image_processing_mask2former.js"),g=A("./src/models/maskformer/image_processing_maskformer.js"),I=A("./src/models/mobilenet_v1/image_processing_mobilenet_v1.js"),e=A("./src/models/mobilenet_v2/image_processing_mobilenet_v2.js"),u=A("./src/models/mobilenet_v3/image_processing_mobilenet_v3.js"),B=A("./src/models/mobilenet_v4/image_processing_mobilenet_v4.js"),ue=A("./src/models/mobilevit/image_processing_mobilevit.js"),G=A("./src/models/nougat/image_processing_nougat.js"),K=A("./src/models/owlv2/image_processing_owlv2.js"),Ve=A("./src/models/owlvit/image_processing_owlvit.js"),ve=A("./src/models/phi3_v/image_processing_phi3_v.js"),Re=A("./src/models/pvt/image_processing_pvt.js"),Ke=A("./src/models/qwen2_vl/image_processing_qwen2_vl.js"),nt=A("./src/models/rt_detr/image_processing_rt_detr.js"),Ct=A("./src/models/sam/image_processing_sam.js"),ht=A("./src/models/segformer/image_processing_segformer.js"),et=A("./src/models/siglip/image_processing_siglip.js"),ze=A("./src/models/swin2sr/image_processing_swin2sr.js"),Se=A("./src/models/vit/image_processing_vit.js"),xe=A("./src/models/vitmatte/image_processing_vitmatte.js"),Me=A("./src/models/vitpose/image_processing_vitpose.js"),ft=A("./src/models/yolos/image_processing_yolos.js")},"./src/models/janus/image_processing_janus.js":(T,k,A)=>{A.r(k),A.d(k,{VLMImageProcessor:()=>F});var w=A("./src/base/image_processors_utils.js");class F extends w.ImageProcessor{constructor(U){super({do_pad:!0,pad_size:{width:U.image_size,height:U.image_size},...U}),this.constant_values=this.config.background_color.map(H=>H*this.rescale_factor)}pad_image(U,H,z,N){return super.pad_image(U,H,z,{constant_values:this.constant_values,center:!0,...N})}}},"./src/models/janus/processing_janus.js":(T,k,A)=>{A.r(k),A.d(k,{VLChatProcessor:()=>N});var w=A("./src/base/processing_utils.js"),F=A("./src/models/auto/image_processing_auto.js"),Y=A("./src/tokenizers.js"),U=A("./src/utils/core.js"),H=A("./src/utils/tensor.js"),z=A("./src/utils/image.js");class N extends w.Processor{constructor(R,Q){super(R,Q),this.image_tag=this.config.image_tag,this.image_start_tag=this.config.image_start_tag,this.image_end_tag=this.config.image_end_tag,this.num_image_tokens=this.config.num_image_tokens}async _call(R,{images:Q=null,chat_template:J="default"}={}){Q?Array.isArray(Q)||(Q=[Q]):Q=await Promise.all(R.filter(ue=>ue.images).flatMap(ue=>ue.images).map(ue=>z.RawImage.read(ue)));const oe=this.tokenizer,be=ue=>oe.encode(ue,{add_special_tokens:!1}),Ie=oe.apply_chat_template(R,{tokenize:!1,add_generation_prompt:!0,chat_template:J}).split(this.image_tag),ee=Ie.length-1;if(Q.length!==ee)throw new Error(`Number of images provided (${Q.length}) does not match number of "${this.image_tag}" image tags (${ee})`);const[re,ce,g]=oe.model.convert_tokens_to_ids([this.image_tag,this.image_start_tag,this.image_end_tag]);let I=be(Ie[0]),e=new Array(I.length).fill(!1);for(let ue=1;ue<Ie.length;++ue){const G=new Array(this.num_image_tokens).fill(re),K=be(Ie[ue]);I=(0,U.mergeArrays)(I,[ce],G,[g],K);const Ve=new Array(this.num_image_tokens).fill(!0);e=(0,U.mergeArrays)(e,[!1],Ve,[!1],new Array(K.length).fill(!1))}const u=[1,I.length],B={input_ids:new H.Tensor("int64",I,u),attention_mask:new H.Tensor("int64",new Array(I.length).fill(1),u),images_seq_mask:new H.Tensor("bool",e,u),images_emb_mask:new H.Tensor("bool",new Array(ee*this.num_image_tokens).fill(!0),[1,ee,this.num_image_tokens])};if(Q&&Q.length>0){const ue=await this.image_processor(Q);return ue.pixel_values.unsqueeze_(0),{...B,...ue}}return B}}We(N,"image_processor_class",F.AutoImageProcessor),We(N,"tokenizer_class",Y.AutoTokenizer),We(N,"uses_processor_config",!0)},"./src/models/jina_clip/image_processing_jina_clip.js":(T,k,A)=>{A.r(k),A.d(k,{JinaCLIPImageProcessor:()=>F});var w=A("./src/base/image_processors_utils.js");class F extends w.ImageProcessor{constructor(U){const{resize_mode:H,fill_color:z,interpolation:N,size:D,...R}=U;super({...R,size:H==="squash"?{width:D,height:D}:H==="shortest"?{shortest_edge:D}:{longest_edge:D},resample:N==="bicubic"?3:2,do_center_crop:!0,crop_size:D,do_normalize:!0})}}},"./src/models/jina_clip/processing_jina_clip.js":(T,k,A)=>{A.r(k),A.d(k,{JinaCLIPProcessor:()=>U});var w=A("./src/base/processing_utils.js"),F=A("./src/models/auto/image_processing_auto.js"),Y=A("./src/tokenizers.js");class U extends w.Processor{async _call(z=null,N=null,D={}){if(!z&&!N)throw new Error("Either text or images must be provided");return{...z?this.tokenizer(z,D):{},...N?await this.image_processor(N,D):{}}}}We(U,"tokenizer_class",Y.AutoTokenizer),We(U,"image_processor_class",F.AutoImageProcessor)},"./src/models/llava_onevision/image_processing_llava_onevision.js":(T,k,A)=>{A.r(k),A.d(k,{LlavaOnevisionImageProcessor:()=>F});var w=A("./src/base/image_processors_utils.js");class F extends w.ImageProcessor{}},"./src/models/mask2former/image_processing_mask2former.js":(T,k,A)=>{A.r(k),A.d(k,{Mask2FormerImageProcessor:()=>F});var w=A("./src/models/maskformer/image_processing_maskformer.js");class F extends w.MaskFormerImageProcessor{}},"./src/models/maskformer/image_processing_maskformer.js":(T,k,A)=>{A.r(k),A.d(k,{MaskFormerFeatureExtractor:()=>Y,MaskFormerImageProcessor:()=>F});var w=A("./src/base/image_processors_utils.js");class F extends w.ImageProcessor{post_process_panoptic_segmentation(...H){return(0,w.post_process_panoptic_segmentation)(...H)}post_process_instance_segmentation(...H){return(0,w.post_process_instance_segmentation)(...H)}}class Y extends F{}},"./src/models/mgp_str/processing_mgp_str.js":(T,k,A)=>{A.r(k),A.d(k,{MgpstrProcessor:()=>z});var w=A("./src/base/processing_utils.js"),F=A("./src/models/auto/image_processing_auto.js"),Y=A("./src/tokenizers.js"),U=A("./src/utils/maths.js");const H={char:["char_decode",1],bpe:["bpe_decode",2],wp:["wp_decode",102]};class z extends w.Processor{get char_tokenizer(){return this.components.char_tokenizer}get bpe_tokenizer(){return this.components.bpe_tokenizer}get wp_tokenizer(){return this.components.wp_tokenizer}_decode_helper(D,R){if(!H.hasOwnProperty(R))throw new Error(`Format ${R} is not supported.`);const[Q,J]=H[R],oe=this[Q].bind(this),[be,Ie]=D.dims,ee=[],re=[],ce=D.tolist();for(let g=0;g<be;++g){const I=ce[g],e=[],u=[];for(let ue=1;ue<Ie;++ue){const[G,K]=(0,U.max)((0,U.softmax)(I[ue]));if(u.push(G),K==J)break;e.push(K)}const B=u.length>0?u.reduce((ue,G)=>ue*G,1):0;re.push(e),ee.push(B)}return[oe(re),ee]}char_decode(D){return this.char_tokenizer.batch_decode(D).map(R=>R.replaceAll(" ",""))}bpe_decode(D){return this.bpe_tokenizer.batch_decode(D)}wp_decode(D){return this.wp_tokenizer.batch_decode(D).map(R=>R.replaceAll(" ",""))}batch_decode([D,R,Q]){const[J,oe]=this._decode_helper(D,"char"),[be,Ie]=this._decode_helper(R,"bpe"),[ee,re]=this._decode_helper(Q,"wp"),ce=[],g=[];for(let I=0;I<J.length;++I){const[e,u]=(0,U.max)([oe[I],Ie[I],re[I]]);ce.push([J[I],be[I],ee[I]][u]),g.push(e)}return{generated_text:ce,scores:g,char_preds:J,bpe_preds:be,wp_preds:ee}}static async from_pretrained(...D){const R=await super.from_pretrained(...D),Q=await Y.AutoTokenizer.from_pretrained("Xenova/gpt2"),J=await Y.AutoTokenizer.from_pretrained("Xenova/bert-base-uncased");return R.components={image_processor:R.image_processor,char_tokenizer:R.tokenizer,bpe_tokenizer:Q,wp_tokenizer:J},R}async _call(D,R=null){const Q=await this.image_processor(D);return R&&(Q.labels=this.tokenizer(R).input_ids),Q}}We(z,"tokenizer_class",Y.AutoTokenizer),We(z,"image_processor_class",F.AutoImageProcessor)},"./src/models/mobilenet_v1/image_processing_mobilenet_v1.js":(T,k,A)=>{A.r(k),A.d(k,{MobileNetV1FeatureExtractor:()=>Y,MobileNetV1ImageProcessor:()=>F});var w=A("./src/base/image_processors_utils.js");class F extends w.ImageProcessor{}class Y extends F{}},"./src/models/mobilenet_v2/image_processing_mobilenet_v2.js":(T,k,A)=>{A.r(k),A.d(k,{MobileNetV2FeatureExtractor:()=>Y,MobileNetV2ImageProcessor:()=>F});var w=A("./src/base/image_processors_utils.js");class F extends w.ImageProcessor{}class Y extends F{}},"./src/models/mobilenet_v3/image_processing_mobilenet_v3.js":(T,k,A)=>{A.r(k),A.d(k,{MobileNetV3FeatureExtractor:()=>Y,MobileNetV3ImageProcessor:()=>F});var w=A("./src/base/image_processors_utils.js");class F extends w.ImageProcessor{}class Y extends F{}},"./src/models/mobilenet_v4/image_processing_mobilenet_v4.js":(T,k,A)=>{A.r(k),A.d(k,{MobileNetV4FeatureExtractor:()=>Y,MobileNetV4ImageProcessor:()=>F});var w=A("./src/base/image_processors_utils.js");class F extends w.ImageProcessor{}class Y extends F{}},"./src/models/mobilevit/image_processing_mobilevit.js":(T,k,A)=>{A.r(k),A.d(k,{MobileViTFeatureExtractor:()=>Y,MobileViTImageProcessor:()=>F});var w=A("./src/base/image_processors_utils.js");class F extends w.ImageProcessor{}class Y extends F{}},"./src/models/moonshine/feature_extraction_moonshine.js":(T,k,A)=>{A.r(k),A.d(k,{MoonshineFeatureExtractor:()=>Y});var w=A("./src/base/feature_extraction_utils.js"),F=A("./src/utils/tensor.js");class Y extends w.FeatureExtractor{async _call(H){(0,w.validate_audio_inputs)(H,"MoonshineFeatureExtractor"),H instanceof Float64Array&&(H=new Float32Array(H));const z=[1,H.length];return{input_values:new F.Tensor("float32",H,z)}}}},"./src/models/moonshine/processing_moonshine.js":(T,k,A)=>{A.r(k),A.d(k,{MoonshineProcessor:()=>U});var w=A("./src/models/auto/feature_extraction_auto.js"),F=A("./src/tokenizers.js"),Y=A("./src/base/processing_utils.js");class U extends Y.Processor{async _call(z){return await this.feature_extractor(z)}}We(U,"tokenizer_class",F.AutoTokenizer),We(U,"feature_extractor_class",w.AutoFeatureExtractor)},"./src/models/nougat/image_processing_nougat.js":(T,k,A)=>{A.r(k),A.d(k,{NougatImageProcessor:()=>F});var w=A("./src/models/donut/image_processing_donut.js");class F extends w.DonutImageProcessor{}},"./src/models/owlv2/image_processing_owlv2.js":(T,k,A)=>{A.r(k),A.d(k,{Owlv2ImageProcessor:()=>F});var w=A("./src/models/owlvit/image_processing_owlvit.js");class F extends w.OwlViTImageProcessor{}},"./src/models/owlvit/image_processing_owlvit.js":(T,k,A)=>{A.r(k),A.d(k,{OwlViTFeatureExtractor:()=>Y,OwlViTImageProcessor:()=>F});var w=A("./src/base/image_processors_utils.js");class F extends w.ImageProcessor{post_process_object_detection(...H){return(0,w.post_process_object_detection)(...H)}}class Y extends F{}},"./src/models/owlvit/processing_owlvit.js":(T,k,A)=>{A.r(k),A.d(k,{OwlViTProcessor:()=>U});var w=A("./src/base/processing_utils.js"),F=A("./src/models/auto/image_processing_auto.js"),Y=A("./src/tokenizers.js");class U extends w.Processor{}We(U,"tokenizer_class",Y.AutoTokenizer),We(U,"image_processor_class",F.AutoImageProcessor)},"./src/models/paligemma/processing_paligemma.js":(T,k,A)=>{A.r(k),A.d(k,{PaliGemmaProcessor:()=>H});var w=A("./src/base/processing_utils.js"),F=A("./src/models/auto/image_processing_auto.js"),Y=A("./src/tokenizers.js");const U="<image>";class H extends w.Processor{async _call(N,D=null,R={}){D||(console.warn("You are using PaliGemma without a text prefix. It will perform as a picture-captioning model."),D=""),Array.isArray(N)||(N=[N]),Array.isArray(D)||(D=[D]);const Q=this.tokenizer.bos_token,J=this.image_processor.config.image_seq_length;let oe;D.some(Ie=>Ie.includes(U))?oe=D.map(Ie=>{const ee=Ie.replaceAll(U,U.repeat(J)),re=ee.lastIndexOf(U),ce=re===-1?0:re+7;return ee.slice(0,ce)+Q+ee.slice(ce)+`
`}):(console.warn("You are passing both `text` and `images` to `PaliGemmaProcessor`. The processor expects special image tokens in the text, as many tokens as there are images per each text. It is recommended to add `<image>` tokens in the very beginning of your text. For this call, we will infer how many images each text has and add special tokens."),oe=D.map(Ie=>function(ee,re,ce,g,I){return`${g.repeat(ce*I)}${re}${ee}
`}(Ie,Q,J,U,N.length)));const be=this.tokenizer(oe,R);return{...await this.image_processor(N,R),...be}}}We(H,"tokenizer_class",Y.AutoTokenizer),We(H,"image_processor_class",F.AutoImageProcessor),We(H,"uses_processor_config",!1)},"./src/models/phi3_v/image_processing_phi3_v.js":(T,k,A)=>{A.r(k),A.d(k,{Phi3VImageProcessor:()=>D});var w=A("./src/base/image_processors_utils.js"),F=A("./src/utils/tensor.js");const Y=336,U=[2,3],{ceil:H,floor:z,sqrt:N}=Math;class D extends w.ImageProcessor{constructor(Q){super({...Q,do_normalize:!0,do_pad:!0,pad_size:"custom",do_convert_rgb:!0,do_resize:!0}),this._num_crops=Q.num_crops}calc_num_image_tokens_from_image_size(Q,J){const{num_img_tokens:oe}=this.config;return z((z(J/Y)*z(Q/Y)+1)*oe+1+(z(J/Y)+1)*N(oe))}get_resize_output_image_size(Q,J){const oe=this._num_crops,[be,Ie]=Q.size;let ee=be/Ie,re=1;for(;re*Math.ceil(re/ee)<=oe;)re+=1;re-=1;const ce=Math.floor(336*re);return[ce,Math.floor(ce/ee)]}pad_image(Q,J,oe,be={}){const[Ie,ee]=J,re=Y*H(Ie/Y),ce=Y*H(ee/Y),g=[1,1,1].map((I,e)=>(I-this.image_mean[e])/this.image_std[e]);return super.pad_image(Q,J,{width:ce,height:re},{center:!0,constant_values:g,...be})}async _call(Q,{num_crops:J=null}={}){if(this._num_crops=J??(J=this.config.num_crops),J<4||N(J)%1!=0)throw new Error("num_crops must be a square number >= 4");Array.isArray(Q)||(Q=[Q]);const oe=Q.length,be=await Promise.all(Q.map(I=>this.preprocess(I))),Ie=be.map(I=>I.original_size),ee=be.map(I=>I.reshaped_input_size),re=[];for(const{pixel_values:I}of be){I.unsqueeze_(0);const[e,u]=I.dims.slice(-2),B=await(0,F.interpolate_4d)(I,{size:[Y,Y],mode:"bicubic"});if(J>0){const ue=[],G=N(J),K=z(u/G),Ve=z(e/G);for(let Re=0;Re<G;++Re)for(let Ke=0;Ke<G;++Ke){let nt,Ct,ht,et;Re===G-1?(Ct=e-Ve,et=e):(Ct=Re*Ve,et=(Re+1)*Ve),Ke===G-1?(nt=u-K,ht=u):(nt=Ke*K,ht=(Ke+1)*K);const ze=[Ct,nt],Se=[et,ht],xe=await(0,F.slice)(I,ze,Se,U);ue.push(xe)}const ve=await(0,F.interpolate_4d)((0,F.cat)(ue,0),{size:[Y,Y],mode:"bicubic"});re.push((0,F.cat)([B,ve],0))}else re.push(B)}const ce=(0,F.stack)(re,0),g=ee.map(I=>I.map(e=>Y*H(e/Y)));return{pixel_values:ce,original_sizes:Ie,reshaped_input_sizes:ee,image_sizes:new F.Tensor("int64",g.flat(),[oe,2]),num_img_tokens:g.map(([I,e])=>this.calc_num_image_tokens_from_image_size(e,I))}}}},"./src/models/phi3_v/processing_phi3_v.js":(T,k,A)=>{A.r(k),A.d(k,{Phi3VProcessor:()=>z});var w=A("./src/base/processing_utils.js"),F=A("./src/models/auto/image_processing_auto.js"),Y=A("./src/tokenizers.js");A("./src/utils/image.js");const U="<|image|>",H=/<\|image_\d+\|>/g;class z extends w.Processor{async _call(D,R=null,{padding:Q=!0,truncation:J=!0,num_crops:oe=null}={}){let be,Ie;if(Array.isArray(D)||(D=[D]),R){Ie=await this.image_processor(R,{num_crops:oe});const{num_img_tokens:ee}=Ie,re=D.map((g,I)=>g.split(H).join(U.repeat(ee[I])));be=this.tokenizer(re,{padding:Q,truncation:J});const ce=this.tokenizer.model.convert_tokens_to_ids([U])[0];be.input_ids.map_(g=>g==ce?-g:g)}else be=this.tokenizer(D);return{...be,...Ie}}}We(z,"image_processor_class",F.AutoImageProcessor),We(z,"tokenizer_class",Y.AutoTokenizer)},"./src/models/processors.js":(T,k,A)=>{A.r(k),A.d(k,{Florence2Processor:()=>w.Florence2Processor,GroundingDinoProcessor:()=>F.GroundingDinoProcessor,Idefics3Processor:()=>Y.Idefics3Processor,JinaCLIPProcessor:()=>H.JinaCLIPProcessor,MgpstrProcessor:()=>z.MgpstrProcessor,MoonshineProcessor:()=>N.MoonshineProcessor,OwlViTProcessor:()=>D.OwlViTProcessor,PaliGemmaProcessor:()=>Q.PaliGemmaProcessor,Phi3VProcessor:()=>R.Phi3VProcessor,PyAnnoteProcessor:()=>J.PyAnnoteProcessor,Qwen2VLProcessor:()=>oe.Qwen2VLProcessor,SamProcessor:()=>be.SamProcessor,SpeechT5Processor:()=>Ie.SpeechT5Processor,VLChatProcessor:()=>U.VLChatProcessor,Wav2Vec2Processor:()=>ee.Wav2Vec2Processor,Wav2Vec2ProcessorWithLM:()=>re.Wav2Vec2ProcessorWithLM,WhisperProcessor:()=>ce.WhisperProcessor});var w=A("./src/models/florence2/processing_florence2.js"),F=A("./src/models/grounding_dino/processing_grounding_dino.js"),Y=A("./src/models/idefics3/processing_idefics3.js"),U=A("./src/models/janus/processing_janus.js"),H=A("./src/models/jina_clip/processing_jina_clip.js"),z=A("./src/models/mgp_str/processing_mgp_str.js"),N=A("./src/models/moonshine/processing_moonshine.js"),D=A("./src/models/owlvit/processing_owlvit.js"),R=A("./src/models/phi3_v/processing_phi3_v.js"),Q=A("./src/models/paligemma/processing_paligemma.js"),J=A("./src/models/pyannote/processing_pyannote.js"),oe=A("./src/models/qwen2_vl/processing_qwen2_vl.js"),be=A("./src/models/sam/processing_sam.js"),Ie=A("./src/models/speecht5/processing_speecht5.js"),ee=A("./src/models/wav2vec2/processing_wav2vec2.js"),re=A("./src/models/wav2vec2_with_lm/processing_wav2vec2_with_lm.js"),ce=A("./src/models/whisper/processing_whisper.js")},"./src/models/pvt/image_processing_pvt.js":(T,k,A)=>{A.r(k),A.d(k,{PvtImageProcessor:()=>F});var w=A("./src/base/image_processors_utils.js");class F extends w.ImageProcessor{}},"./src/models/pyannote/feature_extraction_pyannote.js":(T,k,A)=>{A.r(k),A.d(k,{PyAnnoteFeatureExtractor:()=>U});var w=A("./src/base/feature_extraction_utils.js"),F=A("./src/utils/tensor.js"),Y=A("./src/utils/maths.js");class U extends w.FeatureExtractor{async _call(z){(0,w.validate_audio_inputs)(z,"PyAnnoteFeatureExtractor"),z instanceof Float64Array&&(z=new Float32Array(z));const N=[1,1,z.length];return{input_values:new F.Tensor("float32",z,N)}}samples_to_frames(z){return(z-this.config.offset)/this.config.step}post_process_speaker_diarization(z,N){const D=N/this.samples_to_frames(N)/this.config.sampling_rate,R=[];for(const Q of z.tolist()){const J=[];let oe=-1;for(let be=0;be<Q.length;++be){const Ie=(0,Y.softmax)(Q[be]),[ee,re]=(0,Y.max)(Ie),[ce,g]=[be,be+1];re!==oe?(oe=re,J.push({id:re,start:ce,end:g,score:ee})):(J.at(-1).end=g,J.at(-1).score+=ee)}R.push(J.map(({id:be,start:Ie,end:ee,score:re})=>({id:be,start:Ie*D,end:ee*D,confidence:re/(ee-Ie)})))}return R}}},"./src/models/pyannote/processing_pyannote.js":(T,k,A)=>{A.r(k),A.d(k,{PyAnnoteProcessor:()=>Y});var w=A("./src/base/processing_utils.js"),F=A("./src/models/pyannote/feature_extraction_pyannote.js");class Y extends w.Processor{async _call(H){return await this.feature_extractor(H)}post_process_speaker_diarization(...H){return this.feature_extractor.post_process_speaker_diarization(...H)}get sampling_rate(){return this.feature_extractor.config.sampling_rate}}We(Y,"feature_extractor_class",F.PyAnnoteFeatureExtractor)},"./src/models/qwen2_vl/image_processing_qwen2_vl.js":(T,k,A)=>{A.r(k),A.d(k,{Qwen2VLImageProcessor:()=>Y});var w=A("./src/base/image_processors_utils.js"),F=A("./src/utils/tensor.js");class Y extends w.ImageProcessor{async _call(H,...z){const{pixel_values:N,original_sizes:D,reshaped_input_sizes:R}=await super._call(H,...z);let Q=N;const{temporal_patch_size:J,merge_size:oe,patch_size:be}=this.config;Q.dims[0]===1&&(Q=(0,F.cat)(Array.from({length:J},()=>Q),0));const Ie=Q.dims[0]/J,ee=Q.dims[1],re=Math.floor(Q.dims[2]/be),ce=Math.floor(Q.dims[3]/be);return{pixel_values:Q.view(Ie,J,ee,Math.floor(re/oe),oe,be,Math.floor(ce/oe),oe,be).permute(0,3,6,4,7,2,1,5,8).view(Ie*re*ce,ee*J*be*be),image_grid_thw:new F.Tensor("int64",[Ie,re,ce],[1,3]),original_sizes:D,reshaped_input_sizes:R}}}},"./src/models/qwen2_vl/processing_qwen2_vl.js":(T,k,A)=>{A.r(k),A.d(k,{Qwen2VLProcessor:()=>U});var w=A("./src/base/processing_utils.js"),F=A("./src/models/auto/image_processing_auto.js"),Y=A("./src/tokenizers.js");A("./src/utils/image.js");class U extends w.Processor{async _call(z,N=null,...D){let R,Q;if(Array.isArray(z)||(z=[z]),N&&(R=await this.image_processor(N),Q=R.image_grid_thw),Q){let J=this.image_processor.config.merge_size**2,oe=0;const be=Q.tolist();z=z.map(Ie=>{for(;Ie.includes("<|image_pad|>");){const ee=Number(be[oe++].reduce((re,ce)=>re*ce,1n));Ie=Ie.replace("<|image_pad|>","<|placeholder|>".repeat(Math.floor(ee/J)))}return Ie.replaceAll("<|placeholder|>","<|image_pad|>")})}return{...this.tokenizer(z),...R}}}We(U,"image_processor_class",F.AutoImageProcessor),We(U,"tokenizer_class",Y.AutoTokenizer)},"./src/models/rt_detr/image_processing_rt_detr.js":(T,k,A)=>{A.r(k),A.d(k,{RTDetrImageProcessor:()=>F});var w=A("./src/base/image_processors_utils.js");class F extends w.ImageProcessor{post_process_object_detection(...U){return(0,w.post_process_object_detection)(...U)}}},"./src/models/sam/image_processing_sam.js":(T,k,A)=>{A.r(k),A.d(k,{SamImageProcessor:()=>U});var w=A("./src/base/image_processors_utils.js"),F=A("./src/utils/core.js"),Y=A("./src/utils/tensor.js");class U extends w.ImageProcessor{reshape_input_points(z,N,D,R=!1){z=structuredClone(z);let Q=(0,F.calculateDimensions)(z);if(Q.length===3)R||(Q=[1,...Q]),z=[z];else if(Q.length!==4)throw Error("The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.");for(let J=0;J<z.length;++J){let oe=N[J],be=D[J],Ie=[be[0]/oe[0],be[1]/oe[1]];for(let ee=0;ee<z[J].length;++ee)for(let re=0;re<z[J][ee].length;++re)for(let ce=0;ce<z[J][ee][re].length;++ce)z[J][ee][re][ce]*=Ie[ce%2]}return new Y.Tensor("float32",Float32Array.from(z.flat(1/0)),Q)}add_input_labels(z,N){let D=(0,F.calculateDimensions)(z);if(D.length===2)D=[1,...D],z=[z];else if(D.length!==3)throw Error("The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.");if(D.some((R,Q)=>R!==N.dims[Q]))throw Error(`The first ${D.length} dimensions of 'input_points' and 'input_labels' must be the same.`);return new Y.Tensor("int64",z.flat(1/0).map(BigInt),D)}async _call(z,{input_points:N=null,input_labels:D=null,input_boxes:R=null}={}){const Q=await super._call(z);if(N&&(Q.input_points=this.reshape_input_points(N,Q.original_sizes,Q.reshaped_input_sizes)),D){if(!Q.input_points)throw Error("`input_points` must be provided if `input_labels` are provided.");Q.input_labels=this.add_input_labels(D,Q.input_points)}return R&&(Q.input_boxes=this.reshape_input_points(R,Q.original_sizes,Q.reshaped_input_sizes,!0)),Q}async post_process_masks(z,N,D,{mask_threshold:R=0,binarize:Q=!0,pad_size:J=null}={}){const oe=[],be=[(J=J??this.pad_size).height,J.width];for(let Ie=0;Ie<N.length;++Ie){const ee=N[Ie],re=D[Ie];let ce=await(0,Y.interpolate_4d)(z[Ie],{mode:"bilinear",size:be});if(ce=ce.slice(null,null,[0,re[0]],[0,re[1]]),ce=await(0,Y.interpolate_4d)(ce,{mode:"bilinear",size:ee}),Q){const g=ce.data,I=new Uint8Array(g.length);for(let e=0;e<g.length;++e)g[e]>R&&(I[e]=1);ce=new Y.Tensor("bool",I,ce.dims)}oe.push(ce)}return oe}generate_crop_boxes(z,N,{crop_n_layers:D=0,overlap_ratio:R=512/1500,points_per_crop:Q=32,crop_n_points_downscale_factor:J=1}={}){}}},"./src/models/sam/processing_sam.js":(T,k,A)=>{A.r(k),A.d(k,{SamProcessor:()=>Y});var w=A("./src/base/processing_utils.js"),F=A("./src/models/auto/image_processing_auto.js");class Y extends w.Processor{async _call(...H){return await this.image_processor(...H)}post_process_masks(...H){return this.image_processor.post_process_masks(...H)}reshape_input_points(...H){return this.image_processor.reshape_input_points(...H)}}We(Y,"image_processor_class",F.AutoImageProcessor)},"./src/models/seamless_m4t/feature_extraction_seamless_m4t.js":(T,k,A)=>{A.r(k),A.d(k,{SeamlessM4TFeatureExtractor:()=>U});var w=A("./src/base/feature_extraction_utils.js"),F=A("./src/utils/tensor.js"),Y=A("./src/utils/audio.js");class U extends w.FeatureExtractor{constructor(z){super(z);const N=this.config.sampling_rate,D=(0,Y.mel_filter_bank)(256,this.config.num_mel_bins,20,Math.floor(N/2),N,null,"kaldi",!0);for(let R=0;R<D.length;++R)D[R].push(0);this.mel_filters=D,this.window=(0,Y.window_function)(400,"povey",{periodic:!1})}async _extract_fbank_features(z,N){return z=z.map(D=>32768*D),(0,Y.spectrogram)(z,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,max_num_frames:N,transpose:!0})}async _call(z,{padding:N=!0,pad_to_multiple_of:D=2,do_normalize_per_mel_bins:R=!0,return_attention_mask:Q=!0}={}){(0,w.validate_audio_inputs)(z,"SeamlessM4TFeatureExtractor");let J,oe=await this._extract_fbank_features(z,this.config.max_length);if(R){const[g,I]=oe.dims,e=oe.data;for(let u=0;u<I;++u){let B=0;for(let Ve=0;Ve<g;++Ve)B+=e[Ve*I+u];const ue=B/g;let G=0;for(let Ve=0;Ve<g;++Ve)G+=(e[Ve*I+u]-ue)**2;G/=g-1;const K=Math.sqrt(G+1e-7);for(let Ve=0;Ve<g;++Ve){const ve=Ve*I+u;e[ve]=(e[ve]-ue)/K}}}if(N){const[g,I]=oe.dims,e=oe.data,u=g%D;if(u>0){const B=new Float32Array(I*(g+u));B.set(e),B.fill(this.config.padding_value,e.length);const ue=g+u;oe=new F.Tensor(oe.type,B,[ue,I]),Q&&(J=new F.Tensor("int64",new BigInt64Array(ue),[1,ue]),J.data.fill(1n,0,g))}}const[be,Ie]=oe.dims,ee=this.config.stride;if(be%ee!==0)throw new Error(`The number of frames (${be}) must be a multiple of the stride (${ee}).`);const re=oe.view(1,Math.floor(be/ee),Ie*ee),ce={input_features:re};if(Q){const g=re.dims[1],I=new BigInt64Array(g);if(J){const e=J.data;for(let u=1,B=0;u<be;u+=ee,++B)I[B]=e[u]}else I.fill(1n);ce.attention_mask=new F.Tensor("int64",I,[1,g])}return ce}}},"./src/models/segformer/image_processing_segformer.js":(T,k,A)=>{A.r(k),A.d(k,{SegformerFeatureExtractor:()=>Y,SegformerImageProcessor:()=>F});var w=A("./src/base/image_processors_utils.js");class F extends w.ImageProcessor{post_process_semantic_segmentation(...H){return(0,w.post_process_semantic_segmentation)(...H)}}class Y extends F{}},"./src/models/siglip/image_processing_siglip.js":(T,k,A)=>{A.r(k),A.d(k,{SiglipImageProcessor:()=>F});var w=A("./src/base/image_processors_utils.js");class F extends w.ImageProcessor{}},"./src/models/speecht5/feature_extraction_speecht5.js":(T,k,A)=>{A.r(k),A.d(k,{SpeechT5FeatureExtractor:()=>F});var w=A("./src/base/feature_extraction_utils.js");class F extends w.FeatureExtractor{}},"./src/models/speecht5/processing_speecht5.js":(T,k,A)=>{A.r(k),A.d(k,{SpeechT5Processor:()=>U});var w=A("./src/base/processing_utils.js"),F=A("./src/tokenizers.js"),Y=A("./src/models/auto/feature_extraction_auto.js");class U extends w.Processor{async _call(z){return await this.feature_extractor(z)}}We(U,"tokenizer_class",F.AutoTokenizer),We(U,"feature_extractor_class",Y.AutoFeatureExtractor)},"./src/models/swin2sr/image_processing_swin2sr.js":(T,k,A)=>{A.r(k),A.d(k,{Swin2SRImageProcessor:()=>F});var w=A("./src/base/image_processors_utils.js");class F extends w.ImageProcessor{pad_image(U,H,z,N={}){const[D,R,Q]=H;return super.pad_image(U,H,{width:R+(z-R%z)%z,height:D+(z-D%z)%z},{mode:"symmetric",center:!1,constant_values:-1,...N})}}},"./src/models/vit/image_processing_vit.js":(T,k,A)=>{A.r(k),A.d(k,{ViTFeatureExtractor:()=>Y,ViTImageProcessor:()=>F});var w=A("./src/base/image_processors_utils.js");class F extends w.ImageProcessor{}class Y extends F{}},"./src/models/vitmatte/image_processing_vitmatte.js":(T,k,A)=>{A.r(k),A.d(k,{VitMatteImageProcessor:()=>Y});var w=A("./src/base/image_processors_utils.js"),F=A("./src/utils/tensor.js");class Y extends w.ImageProcessor{async _call(H,z){Array.isArray(H)||(H=[H]),Array.isArray(z)||(z=[z]);const N=await Promise.all(H.map(Q=>this.preprocess(Q))),D=await Promise.all(z.map(Q=>this.preprocess(Q,{do_normalize:!1,do_convert_rgb:!1,do_convert_grayscale:!0})));return{pixel_values:(0,F.stack)(N.map((Q,J)=>(0,F.cat)([Q.pixel_values,D[J].pixel_values],0)),0),original_sizes:N.map(Q=>Q.original_size),reshaped_input_sizes:N.map(Q=>Q.reshaped_input_size)}}}},"./src/models/vitpose/image_processing_vitpose.js":(T,k,A)=>{A.r(k),A.d(k,{VitPoseImageProcessor:()=>F});var w=A("./src/base/image_processors_utils.js");class F extends w.ImageProcessor{post_process_pose_estimation(U,H,{threshold:z=null}={}){const N=U.tolist(),[D,R,Q,J]=U.dims,oe=[];for(let be=0;be<D;++be){const Ie=N[be],ee=H[be],re=[];for(let ce=0;ce<ee.length;++ce){const g=ee[ce],I=[],e=[],u=[],B=g.at(-2)/J,ue=g.at(-1)/Q;for(let G=0;G<Ie.length;++G){let[K,Ve]=[0,0],ve=0,Re=-1/0;const Ke=Ie[G];for(let Ct=0;Ct<Ke.length;++Ct){const ht=Ke[Ct];for(let et=0;et<ht.length;++et){const ze=ht[et];ve+=ze,Re=Math.max(Re,ze),K+=(et+.5)*ze,Ve+=Ct*ze}}if(z!=null&&Re<z)continue;const nt=[B*K/ve,ue*Ve/ve];I.push(nt),u.push(G),e.push(Re)}re.push({bbox:g,scores:e,labels:u,keypoints:I})}oe.push(re)}return oe}}},"./src/models/wav2vec2/feature_extraction_wav2vec2.js":(T,k,A)=>{A.r(k),A.d(k,{Wav2Vec2FeatureExtractor:()=>Y});var w=A("./src/base/feature_extraction_utils.js"),F=A("./src/utils/tensor.js");class Y extends w.FeatureExtractor{_zero_mean_unit_var_norm(H){const z=H.reduce((R,Q)=>R+Q,0),N=z/H.length,D=H.reduce((R,Q)=>R+(Q-N)**2,0)/H.length;return H.map(R=>(R-N)/Math.sqrt(D+1e-7))}async _call(H){(0,w.validate_audio_inputs)(H,"Wav2Vec2FeatureExtractor"),H instanceof Float64Array&&(H=new Float32Array(H));let z=H;this.config.do_normalize&&(z=this._zero_mean_unit_var_norm(z));const N=[1,z.length];return{input_values:new F.Tensor("float32",z,N),attention_mask:new F.Tensor("int64",new BigInt64Array(z.length).fill(1n),N)}}}},"./src/models/wav2vec2/processing_wav2vec2.js":(T,k,A)=>{A.r(k),A.d(k,{Wav2Vec2Processor:()=>U});var w=A("./src/tokenizers.js"),F=A("./src/models/auto/feature_extraction_auto.js"),Y=A("./src/base/processing_utils.js");class U extends Y.Processor{async _call(z){return await this.feature_extractor(z)}}We(U,"tokenizer_class",w.AutoTokenizer),We(U,"feature_extractor_class",F.AutoFeatureExtractor)},"./src/models/wav2vec2_with_lm/processing_wav2vec2_with_lm.js":(T,k,A)=>{A.r(k),A.d(k,{Wav2Vec2ProcessorWithLM:()=>U});var w=A("./src/tokenizers.js"),F=A("./src/models/auto/feature_extraction_auto.js"),Y=A("./src/base/processing_utils.js");class U extends Y.Processor{async _call(z){return await this.feature_extractor(z)}}We(U,"tokenizer_class",w.AutoTokenizer),We(U,"feature_extractor_class",F.AutoFeatureExtractor)},"./src/models/wespeaker/feature_extraction_wespeaker.js":(T,k,A)=>{A.r(k),A.d(k,{WeSpeakerFeatureExtractor:()=>Y});var w=A("./src/base/feature_extraction_utils.js");A("./src/utils/tensor.js");var F=A("./src/utils/audio.js");class Y extends w.FeatureExtractor{constructor(H){super(H);const z=this.config.sampling_rate,N=(0,F.mel_filter_bank)(256,this.config.num_mel_bins,20,Math.floor(z/2),z,null,"kaldi",!0);for(let D=0;D<N.length;++D)N[D].push(0);this.mel_filters=N,this.window=(0,F.window_function)(400,"hamming",{periodic:!1}),this.min_num_frames=this.config.min_num_frames}async _extract_fbank_features(H){return H=H.map(z=>32768*z),(0,F.spectrogram)(H,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,transpose:!0,min_num_frames:this.min_num_frames})}async _call(H){(0,w.validate_audio_inputs)(H,"WeSpeakerFeatureExtractor");const z=(await this._extract_fbank_features(H)).unsqueeze_(0);if(this.config.fbank_centering_span===null){const N=z.mean(1).data,D=z.data,[R,Q,J]=z.dims;for(let oe=0;oe<R;++oe){const be=oe*Q*J,Ie=oe*J;for(let ee=0;ee<Q;++ee){const re=be+ee*J;for(let ce=0;ce<J;++ce)D[re+ce]-=N[Ie+ce]}}}return{input_features:z}}}},"./src/models/whisper/common_whisper.js":(T,k,A)=>{A.r(k),A.d(k,{WHISPER_LANGUAGE_MAPPING:()=>F,WHISPER_TO_LANGUAGE_CODE_MAPPING:()=>Y,whisper_language_to_code:()=>U});const w=[["en","english"],["zh","chinese"],["de","german"],["es","spanish"],["ru","russian"],["ko","korean"],["fr","french"],["ja","japanese"],["pt","portuguese"],["tr","turkish"],["pl","polish"],["ca","catalan"],["nl","dutch"],["ar","arabic"],["sv","swedish"],["it","italian"],["id","indonesian"],["hi","hindi"],["fi","finnish"],["vi","vietnamese"],["he","hebrew"],["uk","ukrainian"],["el","greek"],["ms","malay"],["cs","czech"],["ro","romanian"],["da","danish"],["hu","hungarian"],["ta","tamil"],["no","norwegian"],["th","thai"],["ur","urdu"],["hr","croatian"],["bg","bulgarian"],["lt","lithuanian"],["la","latin"],["mi","maori"],["ml","malayalam"],["cy","welsh"],["sk","slovak"],["te","telugu"],["fa","persian"],["lv","latvian"],["bn","bengali"],["sr","serbian"],["az","azerbaijani"],["sl","slovenian"],["kn","kannada"],["et","estonian"],["mk","macedonian"],["br","breton"],["eu","basque"],["is","icelandic"],["hy","armenian"],["ne","nepali"],["mn","mongolian"],["bs","bosnian"],["kk","kazakh"],["sq","albanian"],["sw","swahili"],["gl","galician"],["mr","marathi"],["pa","punjabi"],["si","sinhala"],["km","khmer"],["sn","shona"],["yo","yoruba"],["so","somali"],["af","afrikaans"],["oc","occitan"],["ka","georgian"],["be","belarusian"],["tg","tajik"],["sd","sindhi"],["gu","gujarati"],["am","amharic"],["yi","yiddish"],["lo","lao"],["uz","uzbek"],["fo","faroese"],["ht","haitian creole"],["ps","pashto"],["tk","turkmen"],["nn","nynorsk"],["mt","maltese"],["sa","sanskrit"],["lb","luxembourgish"],["my","myanmar"],["bo","tibetan"],["tl","tagalog"],["mg","malagasy"],["as","assamese"],["tt","tatar"],["haw","hawaiian"],["ln","lingala"],["ha","hausa"],["ba","bashkir"],["jw","javanese"],["su","sundanese"]],F=new Map(w),Y=new Map([...w.map(([H,z])=>[z,H]),["burmese","my"],["valencian","ca"],["flemish","nl"],["haitian","ht"],["letzeburgesch","lb"],["pushto","ps"],["panjabi","pa"],["moldavian","ro"],["moldovan","ro"],["sinhalese","si"],["castilian","es"]]);function U(H){H=H.toLowerCase();let z=Y.get(H);if(z===void 0){if(!F.has(H)){const N=H.length===2?F.keys():F.values();throw new Error(`Language "${H}" is not supported. Must be one of: ${JSON.stringify(N)}`)}z=H}return z}},"./src/models/whisper/feature_extraction_whisper.js":(T,k,A)=>{A.r(k),A.d(k,{WhisperFeatureExtractor:()=>U});var w=A("./src/base/feature_extraction_utils.js");A("./src/utils/tensor.js");var F=A("./src/utils/audio.js"),Y=A("./src/utils/maths.js");class U extends w.FeatureExtractor{constructor(z){var N;super(z),(N=this.config).mel_filters??(N.mel_filters=(0,F.mel_filter_bank)(Math.floor(1+this.config.n_fft/2),this.config.feature_size,0,8e3,this.config.sampling_rate,"slaney","slaney")),this.window=(0,F.window_function)(this.config.n_fft,"hann")}async _extract_fbank_features(z){const N=await(0,F.spectrogram)(z,this.window,this.config.n_fft,this.config.hop_length,{power:2,mel_filters:this.config.mel_filters,log_mel:"log10",max_num_frames:this.config.nb_max_frames}),D=N.data,R=(0,Y.max)(D)[0];for(let Q=0;Q<D.length;++Q)D[Q]=(Math.max(D[Q],R-8)+4)/4;return N}async _call(z){let N;return(0,w.validate_audio_inputs)(z,"WhisperFeatureExtractor"),z.length>this.config.n_samples?(console.warn("Attempting to extract features for audio longer than 30 seconds. If using a pipeline to extract transcript from a long audio clip, remember to specify `chunk_length_s` and/or `stride_length_s`."),N=z.slice(0,this.config.n_samples)):(N=new Float32Array(this.config.n_samples),N.set(z)),{input_features:(await this._extract_fbank_features(N)).unsqueeze_(0)}}}},"./src/models/whisper/generation_whisper.js":(T,k,A)=>{A.r(k),A.d(k,{WhisperGenerationConfig:()=>F});var w=A("./src/generation/configuration_utils.js");class F extends w.GenerationConfig{constructor(){super(...arguments);We(this,"return_timestamps",null);We(this,"return_token_timestamps",null);We(this,"num_frames",null);We(this,"alignment_heads",null);We(this,"task",null);We(this,"language",null);We(this,"no_timestamps_token_id",null);We(this,"prompt_ids",null);We(this,"is_multilingual",null);We(this,"lang_to_id",null);We(this,"task_to_id",null);We(this,"max_initial_timestamp_index",1)}}},"./src/models/whisper/processing_whisper.js":(T,k,A)=>{A.r(k),A.d(k,{WhisperProcessor:()=>U});var w=A("./src/models/auto/feature_extraction_auto.js"),F=A("./src/tokenizers.js"),Y=A("./src/base/processing_utils.js");class U extends Y.Processor{async _call(z){return await this.feature_extractor(z)}}We(U,"tokenizer_class",F.AutoTokenizer),We(U,"feature_extractor_class",w.AutoFeatureExtractor)},"./src/models/yolos/image_processing_yolos.js":(T,k,A)=>{A.r(k),A.d(k,{YolosFeatureExtractor:()=>Y,YolosImageProcessor:()=>F});var w=A("./src/base/image_processors_utils.js");class F extends w.ImageProcessor{post_process_object_detection(...H){return(0,w.post_process_object_detection)(...H)}}class Y extends F{}},"./src/ops/registry.js":(T,k,A)=>{A.r(k),A.d(k,{TensorOpRegistry:()=>z});var w=A("./src/backends/onnx.js"),F=A("./src/utils/tensor.js"),Y=A("./src/env.js");const U=Y.apis.IS_BROWSER_ENV||Y.apis.IS_WEBWORKER_ENV,H=async(N,D,R)=>{const Q=await(0,w.createInferenceSession)(new Uint8Array(N),D);let J=Promise.resolve();return async oe=>{const be=(0,w.isONNXProxy)(),Ie=Object.fromEntries(Object.entries(oe).map(([re,ce])=>[re,(be?ce.clone():ce).ort_tensor])),ee=await(J=U?J.then(()=>Q.run(Ie)):Q.run(Ie));return Array.isArray(R)?R.map(re=>new F.Tensor(ee[re])):new F.Tensor(ee[R])}};class z{static get nearest_interpolate_4d(){return this._nearest_interpolate_4d||(this._nearest_interpolate_4d=H([8,10,18,0,58,129,1,10,41,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,18,10,4,109,111,100,101,34,7,110,101,97,114,101,115,116,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,21],this.session_options,"y")),this._nearest_interpolate_4d}static get bilinear_interpolate_4d(){return this._bilinear_interpolate_4d||(this._bilinear_interpolate_4d=H([8,9,18,0,58,128,1,10,40,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,17,10,4,109,111,100,101,34,6,108,105,110,101,97,114,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,20],this.session_options,"y")),this._bilinear_interpolate_4d}static get bicubic_interpolate_4d(){return this._bicubic_interpolate_4d||(this._bicubic_interpolate_4d=H([8,9,18,0,58,127,10,39,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,16,10,4,109,111,100,101,34,5,99,117,98,105,99,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,20],this.session_options,"y")),this._bicubic_interpolate_4d}static get matmul(){return this._matmul||(this._matmul=H([8,9,18,0,58,55,10,17,10,1,97,10,1,98,18,1,99,34,6,77,97,116,77,117,108,18,1,114,90,9,10,1,97,18,4,10,2,8,1,90,9,10,1,98,18,4,10,2,8,1,98,9,10,1,99,18,4,10,2,8,1,66,2,16,20],this.session_options,"c")),this._matmul}static get stft(){return this._stft||(this._stft=H([8,7,18,0,58,148,1,10,38,10,1,115,10,1,106,10,1,119,10,1,108,18,1,111,34,4,83,84,70,84,42,15,10,8,111,110,101,115,105,100,101,100,24,1,160,1,2,18,1,115,90,26,10,1,115,18,21,10,19,8,1,18,15,10,3,18,1,98,10,3,18,1,115,10,3,18,1,99,90,11,10,1,106,18,6,10,4,8,7,18,0,90,16,10,1,119,18,11,10,9,8,1,18,5,10,3,18,1,119,90,11,10,1,108,18,6,10,4,8,7,18,0,98,31,10,1,111,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,102,10,3,18,1,100,10,3,18,1,99,66,2,16,17],this.session_options,"o")),this._stft}static get rfft(){return this._rfft||(this._rfft=H([8,9,18,0,58,97,10,33,10,1,120,10,0,10,1,97,18,1,121,34,3,68,70,84,42,15,10,8,111,110,101,115,105,100,101,100,24,1,160,1,2,18,1,100,90,21,10,1,120,18,16,10,14,8,1,18,10,10,3,18,1,115,10,3,18,1,99,90,11,10,1,97,18,6,10,4,8,7,18,0,98,21,10,1,121,18,16,10,14,8,1,18,10,10,3,18,1,115,10,3,18,1,99,66,2,16,20],this.session_options,"y")),this._rfft}static get top_k(){return this._top_k||(this._top_k=H([8,10,18,0,58,73,10,18,10,1,120,10,1,107,18,1,118,18,1,105,34,4,84,111,112,75,18,1,116,90,9,10,1,120,18,4,10,2,8,1,90,15,10,1,107,18,10,10,8,8,7,18,4,10,2,8,1,98,9,10,1,118,18,4,10,2,8,1,98,9,10,1,105,18,4,10,2,8,7,66,2,16,21],this.session_options,["v","i"])),this._top_k}static get slice(){return this._slice||(this._slice=H([8,7,18,0,58,96,10,25,10,1,120,10,1,115,10,1,101,10,1,97,10,1,116,18,1,121,34,5,83,108,105,99,101,18,1,114,90,9,10,1,120,18,4,10,2,8,1,90,9,10,1,115,18,4,10,2,8,7,90,9,10,1,101,18,4,10,2,8,7,90,9,10,1,97,18,4,10,2,8,7,90,9,10,1,116,18,4,10,2,8,7,98,9,10,1,121,18,4,10,2,8,1,66,2,16,13],this.session_options,"y")),this._slice}}We(z,"session_options",{})},"./src/pipelines.js":(T,k,A)=>{A.r(k),A.d(k,{AudioClassificationPipeline:()=>Ve,AutomaticSpeechRecognitionPipeline:()=>Re,DepthEstimationPipeline:()=>ft,DocumentQuestionAnsweringPipeline:()=>Se,FeatureExtractionPipeline:()=>G,FillMaskPipeline:()=>ce,ImageClassificationPipeline:()=>nt,ImageFeatureExtractionPipeline:()=>K,ImageSegmentationPipeline:()=>Ct,ImageToImagePipeline:()=>Me,ImageToTextPipeline:()=>Ke,ObjectDetectionPipeline:()=>et,Pipeline:()=>be,QuestionAnsweringPipeline:()=>re,SummarizationPipeline:()=>I,Text2TextGenerationPipeline:()=>g,TextClassificationPipeline:()=>Ie,TextGenerationPipeline:()=>B,TextToAudioPipeline:()=>xe,TokenClassificationPipeline:()=>ee,TranslationPipeline:()=>e,ZeroShotAudioClassificationPipeline:()=>ve,ZeroShotClassificationPipeline:()=>ue,ZeroShotImageClassificationPipeline:()=>ht,ZeroShotObjectDetectionPipeline:()=>ze,pipeline:()=>Je});var w=A("./src/tokenizers.js"),F=A("./src/models.js"),Y=A("./src/models/auto/processing_auto.js");A("./src/base/processing_utils.js");var U=A("./src/utils/generic.js"),H=A("./src/utils/core.js"),z=A("./src/utils/maths.js"),N=A("./src/utils/audio.js"),D=A("./src/utils/tensor.js"),R=A("./src/utils/image.js");async function Q(bt){return Array.isArray(bt)||(bt=[bt]),await Promise.all(bt.map(rt=>R.RawImage.read(rt)))}async function J(bt,rt){return Array.isArray(bt)||(bt=[bt]),await Promise.all(bt.map(Ne=>typeof Ne=="string"||Ne instanceof URL?(0,N.read_audio)(Ne,rt):Ne instanceof Float64Array?new Float32Array(Ne):Ne))}function oe(bt,rt){rt&&(bt=bt.map(It=>0|It));const[Ne,it,Et,$e]=bt;return{xmin:Ne,ymin:it,xmax:Et,ymax:$e}}class be extends U.Callable{constructor({task:rt,model:Ne,tokenizer:it=null,processor:Et=null}){super(),this.task=rt,this.model=Ne,this.tokenizer=it,this.processor=Et}async dispose(){await this.model.dispose()}}class Ie extends be{constructor(rt){super(rt)}async _call(rt,{top_k:Ne=1}={}){const it=this.tokenizer(rt,{padding:!0,truncation:!0}),Et=await this.model(it),$e=this.model.config.problem_type==="multi_label_classification"?zt=>zt.sigmoid():zt=>new D.Tensor("float32",(0,z.softmax)(zt.data),zt.dims),It=this.model.config.id2label,Tt=[];for(const zt of Et.logits){const Wt=$e(zt),pe=await(0,D.topk)(Wt,Ne),Ut=pe[0].tolist(),Pe=pe[1].tolist().map((X,ge)=>({label:It?It[X]:`LABEL_${X}`,score:Ut[ge]}));Ne===1?Tt.push(...Pe):Tt.push(Pe)}return Array.isArray(rt)||Ne===1?Tt:Tt[0]}}class ee extends be{constructor(rt){super(rt)}async _call(rt,{ignore_labels:Ne=["O"]}={}){const it=Array.isArray(rt),Et=this.tokenizer(it?rt:[rt],{padding:!0,truncation:!0}),$e=(await this.model(Et)).logits,It=this.model.config.id2label,Tt=[];for(let zt=0;zt<$e.dims[0];++zt){const Wt=Et.input_ids[zt],pe=$e[zt],Ut=[];for(let Pe=0;Pe<pe.dims[0];++Pe){const X=pe[Pe],ge=(0,z.max)(X.data)[1],fe=It?It[ge]:`LABEL_${ge}`;if(Ne.includes(fe))continue;const He=this.tokenizer.decode([Wt[Pe].item()],{skip_special_tokens:!0});if(He==="")continue;const ct=(0,z.softmax)(X.data);Ut.push({entity:fe,score:ct[ge],index:Pe,word:He})}Tt.push(Ut)}return it?Tt:Tt[0]}}class re extends be{constructor(rt){super(rt)}async _call(rt,Ne,{top_k:it=1}={}){const Et=this.tokenizer(rt,{text_pair:Ne,padding:!0,truncation:!0}),{start_logits:$e,end_logits:It}=await this.model(Et),Tt=Et.input_ids.tolist(),zt=Et.attention_mask.tolist(),Wt=this.tokenizer.all_special_ids,pe=[];for(let Ut=0;Ut<$e.dims[0];++Ut){const Pe=Tt[Ut],X=Pe.findIndex(Dt=>Dt==this.tokenizer.sep_token_id);zt[Ut].map((Dt,Ht)=>Dt==1&&(Ht===0||Ht>X&&Wt.findIndex(Vt=>Vt==Pe[Ht])===-1));const ge=$e[Ut].tolist(),fe=It[Ut].tolist();for(let Dt=1;Dt<ge.length;++Dt)(zt[Ut]==0||Dt<=X||Wt.findIndex(Ht=>Ht==Pe[Dt])!==-1)&&(ge[Dt]=-1/0,fe[Dt]=-1/0);const He=(0,z.softmax)(ge).map((Dt,Ht)=>[Dt,Ht]),ct=(0,z.softmax)(fe).map((Dt,Ht)=>[Dt,Ht]);He[0][0]=0,ct[0][0]=0;const kt=(0,H.product)(He,ct).filter(Dt=>Dt[0][1]<=Dt[1][1]).map(Dt=>[Dt[0][1],Dt[1][1],Dt[0][0]*Dt[1][0]]).sort((Dt,Ht)=>Ht[2]-Dt[2]);for(let Dt=0;Dt<Math.min(kt.length,it);++Dt){const[Ht,Vt,sr]=kt[Dt],nr=Pe.slice(Ht,Vt+1),lr=this.tokenizer.decode(nr,{skip_special_tokens:!0});pe.push({answer:lr,score:sr})}}return it===1?pe[0]:pe}}class ce extends be{constructor(rt){super(rt)}async _call(rt,{top_k:Ne=5}={}){const it=this.tokenizer(rt,{padding:!0,truncation:!0}),{logits:Et}=await this.model(it),$e=[],It=it.input_ids.tolist();for(let Tt=0;Tt<It.length;++Tt){const zt=It[Tt],Wt=zt.findIndex(ge=>ge==this.tokenizer.mask_token_id);if(Wt===-1)throw Error(`Mask token (${this.tokenizer.mask_token}) not found in text.`);const pe=Et[Tt][Wt],Ut=await(0,D.topk)(new D.Tensor("float32",(0,z.softmax)(pe.data),pe.dims),Ne),Pe=Ut[0].tolist(),X=Ut[1].tolist();$e.push(X.map((ge,fe)=>{const He=zt.slice();return He[Wt]=ge,{score:Pe[fe],token:Number(ge),token_str:this.tokenizer.decode([ge]),sequence:this.tokenizer.decode(He,{skip_special_tokens:!0})}}))}return Array.isArray(rt)?$e:$e[0]}}class g extends be{constructor(Ne){super(Ne);We(this,"_key","generated_text")}async _call(Ne,it={}){Array.isArray(Ne)||(Ne=[Ne]),this.model.config.prefix&&(Ne=Ne.map(Wt=>this.model.config.prefix+Wt));const Et=this.model.config.task_specific_params;Et&&Et[this.task]&&Et[this.task].prefix&&(Ne=Ne.map(Wt=>Et[this.task].prefix+Wt));const $e=this.tokenizer,It={padding:!0,truncation:!0};let Tt;Tt=this instanceof e&&"_build_translation_inputs"in $e?$e._build_translation_inputs(Ne,It,it):$e(Ne,It);const zt=await this.model.generate({...Tt,...it});return $e.batch_decode(zt,{skip_special_tokens:!0}).map(Wt=>({[this._key]:Wt}))}}class I extends g{constructor(Ne){super(Ne);We(this,"_key","summary_text")}}class e extends g{constructor(Ne){super(Ne);We(this,"_key","translation_text")}}function u(bt){return Array.isArray(bt)&&bt.every(rt=>"role"in rt&&"content"in rt)}class B extends be{constructor(rt){super(rt)}async _call(rt,Ne={}){let it,Et=!1,$e=!1;if(typeof rt=="string")it=rt=[rt];else if(Array.isArray(rt)&&rt.every(X=>typeof X=="string"))Et=!0,it=rt;else{if(u(rt))rt=[rt];else{if(!Array.isArray(rt)||!rt.every(u))throw new Error("Input must be a string, an array of strings, a Chat, or an array of Chats");Et=!0}$e=!0,it=rt.map(X=>this.tokenizer.apply_chat_template(X,{tokenize:!1,add_generation_prompt:!0}))}const It=Ne.add_special_tokens??!1,Tt=!$e&&(Ne.return_full_text??!0);this.tokenizer.padding_side="left";const zt=this.tokenizer(it,{add_special_tokens:It,padding:!0,truncation:!0}),Wt=await this.model.generate({...zt,...Ne}),pe=this.tokenizer.batch_decode(Wt,{skip_special_tokens:!0});let Ut;!Tt&&zt.input_ids.dims.at(-1)>0&&(Ut=this.tokenizer.batch_decode(zt.input_ids,{skip_special_tokens:!0}).map(X=>X.length));const Pe=Array.from({length:rt.length},X=>[]);for(let X=0;X<pe.length;++X){const ge=Math.floor(X/Wt.dims[0]*rt.length);Ut&&(pe[X]=pe[X].slice(Ut[ge])),Pe[ge].push({generated_text:$e?[...rt[ge],{role:"assistant",content:pe[X]}]:pe[X]})}return Et||Pe.length!==1?Pe:Pe[0]}}class ue extends be{constructor(rt){super(rt),this.label2id=Object.fromEntries(Object.entries(this.model.config.label2id).map(([Ne,it])=>[Ne.toLowerCase(),it])),this.entailment_id=this.label2id.entailment,this.entailment_id===void 0&&(console.warn("Could not find 'entailment' in label2id mapping. Using 2 as entailment_id."),this.entailment_id=2),this.contradiction_id=this.label2id.contradiction??this.label2id.not_entailment,this.contradiction_id===void 0&&(console.warn("Could not find 'contradiction' in label2id mapping. Using 0 as contradiction_id."),this.contradiction_id=0)}async _call(rt,Ne,{hypothesis_template:it="This example is {}.",multi_label:Et=!1}={}){const $e=Array.isArray(rt);$e||(rt=[rt]),Array.isArray(Ne)||(Ne=[Ne]);const It=Ne.map(Wt=>it.replace("{}",Wt)),Tt=Et||Ne.length===1,zt=[];for(const Wt of rt){const pe=[];for(const X of It){const ge=this.tokenizer(Wt,{text_pair:X,padding:!0,truncation:!0}),fe=await this.model(ge);Tt?pe.push([fe.logits.data[this.contradiction_id],fe.logits.data[this.entailment_id]]):pe.push(fe.logits.data[this.entailment_id])}const Ut=Tt?pe.map(X=>(0,z.softmax)(X)[1]):(0,z.softmax)(pe),Pe=Ut.map((X,ge)=>[X,ge]).sort((X,ge)=>ge[0]-X[0]);zt.push({sequence:Wt,labels:Pe.map(X=>Ne[X[1]]),scores:Pe.map(X=>X[0])})}return $e?zt:zt[0]}}class G extends be{constructor(rt){super(rt)}async _call(rt,{pooling:Ne="none",normalize:it=!1,quantize:Et=!1,precision:$e="binary"}={}){const It=this.tokenizer(rt,{padding:!0,truncation:!0}),Tt=await this.model(It);let zt=Tt.last_hidden_state??Tt.logits??Tt.token_embeddings;if(Ne!=="none")if(Ne==="mean")zt=(0,D.mean_pooling)(zt,It.attention_mask);else{if(Ne!=="cls")throw Error(`Pooling method '${Ne}' not supported.`);zt=zt.slice(null,0)}return it&&(zt=zt.normalize(2,-1)),Et&&(zt=(0,D.quantize_embeddings)(zt,$e)),zt}}class K extends be{constructor(rt){super(rt)}async _call(rt,{pool:Ne=null}={}){const it=await Q(rt),{pixel_values:Et}=await this.processor(it),$e=await this.model({pixel_values:Et});let It;if(Ne){if(!("pooler_output"in $e))throw Error("No pooled output was returned. Make sure the model has a 'pooler' layer when using the 'pool' option.");It=$e.pooler_output}else It=$e.last_hidden_state??$e.logits??$e.image_embeds;return It}}class Ve extends be{constructor(rt){super(rt)}async _call(rt,{top_k:Ne=5}={}){const it=this.processor.feature_extractor.config.sampling_rate,Et=await J(rt,it),$e=this.model.config.id2label,It=[];for(const Tt of Et){const zt=await this.processor(Tt),Wt=(await this.model(zt)).logits[0],pe=await(0,D.topk)(new D.Tensor("float32",(0,z.softmax)(Wt.data),Wt.dims),Ne),Ut=pe[0].tolist(),Pe=pe[1].tolist().map((X,ge)=>({label:$e?$e[X]:`LABEL_${X}`,score:Ut[ge]}));It.push(Pe)}return Array.isArray(rt)?It:It[0]}}class ve extends be{constructor(rt){super(rt)}async _call(rt,Ne,{hypothesis_template:it="This is a sound of {}."}={}){const Et=!Array.isArray(rt);Et&&(rt=[rt]);const $e=Ne.map(pe=>it.replace("{}",pe)),It=this.tokenizer($e,{padding:!0,truncation:!0}),Tt=this.processor.feature_extractor.config.sampling_rate,zt=await J(rt,Tt),Wt=[];for(const pe of zt){const Ut=await this.processor(pe),Pe=await this.model({...It,...Ut}),X=(0,z.softmax)(Pe.logits_per_audio.data);Wt.push([...X].map((ge,fe)=>({score:ge,label:Ne[fe]})))}return Et?Wt[0]:Wt}}class Re extends be{constructor(rt){super(rt)}async _call(rt,Ne={}){switch(this.model.config.model_type){case"whisper":return this._call_whisper(rt,Ne);case"wav2vec2":case"wav2vec2-bert":case"unispeech":case"unispeech-sat":case"hubert":return this._call_wav2vec2(rt,Ne);case"moonshine":return this._call_moonshine(rt,Ne);default:throw new Error(`AutomaticSpeechRecognitionPipeline does not support model type '${this.model.config.model_type}'.`)}}async _call_wav2vec2(rt,Ne){Ne.language&&console.warn('`language` parameter is not yet supported for `wav2vec2` models, defaulting to "English".'),Ne.task&&console.warn('`task` parameter is not yet supported for `wav2vec2` models, defaulting to "transcribe".');const it=!Array.isArray(rt);it&&(rt=[rt]);const Et=this.processor.feature_extractor.config.sampling_rate,$e=await J(rt,Et),It=[];for(const Tt of $e){const zt=await this.processor(Tt),Wt=(await this.model(zt)).logits[0],pe=[];for(const Pe of Wt)pe.push((0,z.max)(Pe.data)[1]);const Ut=this.tokenizer.decode(pe);It.push({text:Ut})}return it?It[0]:It}async _call_whisper(rt,Ne){const it=Ne.return_timestamps??!1,Et=Ne.chunk_length_s??0,$e=Ne.force_full_sequences??!1;let It=Ne.stride_length_s??null;const Tt={...Ne};it==="word"&&(Tt.return_token_timestamps=!0,Tt.return_timestamps=!1);const zt=!Array.isArray(rt);zt&&(rt=[rt]);const Wt=this.processor.feature_extractor.config.chunk_length/this.model.config.max_source_positions,pe=this.processor.feature_extractor.config.hop_length,Ut=this.processor.feature_extractor.config.sampling_rate,Pe=await J(rt,Ut),X=[];for(const ge of Pe){let fe=[];if(Et>0){if(It===null)It=Et/6;else if(Et<=It)throw Error("`chunk_length_s` must be larger than `stride_length_s`.");const kt=Ut*Et,Dt=Ut*It,Ht=kt-2*Dt;let Vt=0;for(;;){const sr=Vt+kt,nr=ge.subarray(Vt,sr),lr=await this.processor(nr),Fr=Vt===0,ns=sr>=ge.length;if(fe.push({stride:[nr.length,Fr?0:Dt,ns?0:Dt],input_features:lr.input_features,is_last:ns}),ns)break;Vt+=Ht}}else fe=[{stride:[ge.length,0,0],input_features:(await this.processor(ge)).input_features,is_last:!0}];for(const kt of fe){Tt.num_frames=Math.floor(kt.stride[0]/pe);const Dt=await this.model.generate({inputs:kt.input_features,...Tt});it==="word"?(kt.tokens=Dt.sequences.tolist()[0],kt.token_timestamps=Dt.token_timestamps.tolist()[0].map(Ht=>(0,z.round)(Ht,2))):kt.tokens=Dt[0].tolist(),kt.stride=kt.stride.map(Ht=>Ht/Ut)}const[He,ct]=this.tokenizer._decode_asr(fe,{time_precision:Wt,return_timestamps:it,force_full_sequences:$e});X.push({text:He,...ct})}return zt?X[0]:X}async _call_moonshine(rt,Ne){const it=!Array.isArray(rt);it&&(rt=[rt]);const Et=this.processor.feature_extractor.config.sampling_rate,$e=await J(rt,Et),It=[];for(const Tt of $e){const zt=await this.processor(Tt),Wt=6*Math.floor(Tt.length/Et),pe=await this.model.generate({max_new_tokens:Wt,...Ne,...zt}),Ut=this.processor.batch_decode(pe,{skip_special_tokens:!0})[0];It.push({text:Ut})}return it?It[0]:It}}class Ke extends be{constructor(rt){super(rt)}async _call(rt,Ne={}){const it=Array.isArray(rt),Et=await Q(rt),{pixel_values:$e}=await this.processor(Et),It=[];for(const Tt of $e){Tt.dims=[1,...Tt.dims];const zt=await this.model.generate({inputs:Tt,...Ne}),Wt=this.tokenizer.batch_decode(zt,{skip_special_tokens:!0}).map(pe=>({generated_text:pe.trim()}));It.push(Wt)}return it?It:It[0]}}class nt extends be{constructor(rt){super(rt)}async _call(rt,{top_k:Ne=5}={}){const it=await Q(rt),{pixel_values:Et}=await this.processor(it),$e=await this.model({pixel_values:Et}),It=this.model.config.id2label,Tt=[];for(const zt of $e.logits){const Wt=await(0,D.topk)(new D.Tensor("float32",(0,z.softmax)(zt.data),zt.dims),Ne),pe=Wt[0].tolist(),Ut=Wt[1].tolist().map((Pe,X)=>({label:It?It[Pe]:`LABEL_${Pe}`,score:pe[X]}));Tt.push(Ut)}return Array.isArray(rt)?Tt:Tt[0]}}class Ct extends be{constructor(rt){super(rt),this.subtasks_mapping={panoptic:"post_process_panoptic_segmentation",instance:"post_process_instance_segmentation",semantic:"post_process_semantic_segmentation"}}async _call(rt,{threshold:Ne=.5,mask_threshold:it=.5,overlap_mask_area_threshold:Et=.8,label_ids_to_fuse:$e=null,target_sizes:It=null,subtask:Tt=null}={}){if(Array.isArray(rt)&&rt.length!==1)throw Error("Image segmentation pipeline currently only supports a batch size of 1.");const zt=await Q(rt),Wt=zt.map(He=>[He.height,He.width]),{pixel_values:pe,pixel_mask:Ut}=await this.processor(zt),Pe=await this.model({pixel_values:pe,pixel_mask:Ut});let X=null;if(Tt!==null)X=this.subtasks_mapping[Tt];else for(let[He,ct]of Object.entries(this.subtasks_mapping))if(ct in this.processor.image_processor){X=this.processor.image_processor[ct].bind(this.processor.image_processor),Tt=He;break}const ge=this.model.config.id2label,fe=[];if(Tt==="panoptic"||Tt==="instance"){const He=X(Pe,Ne,it,Et,$e,It??Wt)[0],ct=He.segmentation;for(const kt of He.segments_info){const Dt=new Uint8ClampedArray(ct.data.length);for(let Vt=0;Vt<ct.data.length;++Vt)ct.data[Vt]===kt.id&&(Dt[Vt]=255);const Ht=new R.RawImage(Dt,ct.dims[1],ct.dims[0],1);fe.push({score:kt.score,label:ge[kt.label_id],mask:Ht})}}else{if(Tt!=="semantic")throw Error(`Subtask ${Tt} not supported.`);{const{segmentation:He,labels:ct}=X(Pe,It??Wt)[0];for(const kt of ct){const Dt=new Uint8ClampedArray(He.data.length);for(let Vt=0;Vt<He.data.length;++Vt)He.data[Vt]===kt&&(Dt[Vt]=255);const Ht=new R.RawImage(Dt,He.dims[1],He.dims[0],1);fe.push({score:null,label:ge[kt],mask:Ht})}}}return fe}}class ht extends be{constructor(rt){super(rt)}async _call(rt,Ne,{hypothesis_template:it="This is a photo of {}"}={}){const Et=Array.isArray(rt),$e=await Q(rt),It=Ne.map(Pe=>it.replace("{}",Pe)),Tt=this.tokenizer(It,{padding:this.model.config.model_type!=="siglip"||"max_length",truncation:!0}),{pixel_values:zt}=await this.processor($e),Wt=await this.model({...Tt,pixel_values:zt}),pe=this.model.config.model_type==="siglip"?Pe=>Pe.sigmoid().data:Pe=>(0,z.softmax)(Pe.data),Ut=[];for(const Pe of Wt.logits_per_image){const X=[...pe(Pe)].map((ge,fe)=>({score:ge,label:Ne[fe]}));X.sort((ge,fe)=>fe.score-ge.score),Ut.push(X)}return Et?Ut:Ut[0]}}class et extends be{constructor(rt){super(rt)}async _call(rt,{threshold:Ne=.9,percentage:it=!1}={}){const Et=Array.isArray(rt);if(Et&&rt.length!==1)throw Error("Object detection pipeline currently only supports a batch size of 1.");const $e=await Q(rt),It=it?null:$e.map(X=>[X.height,X.width]),{pixel_values:Tt,pixel_mask:zt}=await this.processor($e),Wt=await this.model({pixel_values:Tt,pixel_mask:zt}),pe=this.processor.image_processor.post_process_object_detection(Wt,Ne,It),Ut=this.model.config.id2label,Pe=pe.map(X=>X.boxes.map((ge,fe)=>({score:X.scores[fe],label:Ut[X.classes[fe]],box:oe(ge,!it)})));return Et?Pe:Pe[0]}}class ze extends be{constructor(rt){super(rt)}async _call(rt,Ne,{threshold:it=.1,top_k:Et=null,percentage:$e=!1}={}){const It=Array.isArray(rt),Tt=await Q(rt),zt=this.tokenizer(Ne,{padding:!0,truncation:!0}),Wt=await this.processor(Tt),pe=[];for(let Ut=0;Ut<Tt.length;++Ut){const Pe=Tt[Ut],X=$e?null:[[Pe.height,Pe.width]],ge=Wt.pixel_values[Ut].unsqueeze_(0),fe=await this.model({...zt,pixel_values:ge});let He;if("post_process_grounded_object_detection"in this.processor){const ct=this.processor.post_process_grounded_object_detection(fe,zt.input_ids,{box_threshold:it,text_threshold:it,target_sizes:X})[0];He=ct.boxes.map((kt,Dt)=>({score:ct.scores[Dt],label:ct.labels[Dt],box:oe(kt,!$e)}))}else{const ct=this.processor.image_processor.post_process_object_detection(fe,it,X,!0)[0];He=ct.boxes.map((kt,Dt)=>({score:ct.scores[Dt],label:Ne[ct.classes[Dt]],box:oe(kt,!$e)}))}He.sort((ct,kt)=>kt.score-ct.score),Et!==null&&(He=He.slice(0,Et)),pe.push(He)}return It?pe:pe[0]}}class Se extends be{constructor(rt){super(rt)}async _call(rt,Ne,it={}){const Et=(await Q(rt))[0],{pixel_values:$e}=await this.processor(Et),It=`<s_docvqa><s_question>${Ne}</s_question><s_answer>`,Tt=this.tokenizer(It,{add_special_tokens:!1,padding:!0,truncation:!0}).input_ids,zt=await this.model.generate({inputs:$e,max_length:this.model.config.decoder.max_position_embeddings,decoder_input_ids:Tt,...it}),Wt=this.tokenizer.batch_decode(zt)[0].match(/<s_answer>(.*?)<\/s_answer>/);let pe=null;return Wt&&Wt.length>=2&&(pe=Wt[1].trim()),[{answer:pe}]}}class xe extends be{constructor(Ne){super(Ne);We(this,"DEFAULT_VOCODER_ID","Xenova/speecht5_hifigan");this.vocoder=Ne.vocoder??null}async _call(Ne,{speaker_embeddings:it=null}={}){return this.processor?this._call_text_to_spectrogram(Ne,{speaker_embeddings:it}):this._call_text_to_waveform(Ne)}async _call_text_to_waveform(Ne){const it=this.tokenizer(Ne,{padding:!0,truncation:!0}),{waveform:Et}=await this.model(it),$e=this.model.config.sampling_rate;return new N.RawAudio(Et.data,$e)}async _call_text_to_spectrogram(Ne,{speaker_embeddings:it}){if(this.vocoder||(console.log("No vocoder specified, using default HifiGan vocoder."),this.vocoder=await F.AutoModel.from_pretrained(this.DEFAULT_VOCODER_ID,{dtype:"fp32"})),(typeof it=="string"||it instanceof URL)&&(it=new Float32Array(await(await fetch(it)).arrayBuffer())),it instanceof Float32Array)it=new D.Tensor("float32",it,[1,it.length]);else if(!(it instanceof D.Tensor))throw new Error("Speaker embeddings must be a `Tensor`, `Float32Array`, `string`, or `URL`.");const{input_ids:Et}=this.tokenizer(Ne,{padding:!0,truncation:!0}),{waveform:$e}=await this.model.generate_speech(Et,it,{vocoder:this.vocoder}),It=this.processor.feature_extractor.config.sampling_rate;return new N.RawAudio($e.data,It)}}class Me extends be{constructor(rt){super(rt)}async _call(rt){const Ne=await Q(rt),it=await this.processor(Ne),Et=await this.model(it),$e=[];for(const It of Et.reconstruction){const Tt=It.squeeze().clamp_(0,1).mul_(255).round_().to("uint8");$e.push(R.RawImage.fromTensor(Tt))}return $e.length>1?$e:$e[0]}}class ft extends be{constructor(rt){super(rt)}async _call(rt){const Ne=await Q(rt),it=await this.processor(Ne),{predicted_depth:Et}=await this.model(it),$e=[];for(let It=0;It<Ne.length;++It){const Tt=Et[It],[zt,Wt]=Tt.dims.slice(-2),[pe,Ut]=Ne[It].size,Pe=(await(0,D.interpolate_4d)(Tt.view(1,1,zt,Wt),{size:[Ut,pe],mode:"bilinear"})).view(Ut,pe),X=Pe.min().item(),ge=Pe.max().item(),fe=Pe.sub(X).div_(ge-X).mul_(255).to("uint8").unsqueeze(0),He=R.RawImage.fromTensor(fe);$e.push({predicted_depth:Pe,depth:He})}return $e.length>1?$e:$e[0]}}const gt=Object.freeze({"text-classification":{tokenizer:w.AutoTokenizer,pipeline:Ie,model:F.AutoModelForSequenceClassification,default:{model:"Xenova/distilbert-base-uncased-finetuned-sst-2-english"},type:"text"},"token-classification":{tokenizer:w.AutoTokenizer,pipeline:ee,model:F.AutoModelForTokenClassification,default:{model:"Xenova/bert-base-multilingual-cased-ner-hrl"},type:"text"},"question-answering":{tokenizer:w.AutoTokenizer,pipeline:re,model:F.AutoModelForQuestionAnswering,default:{model:"Xenova/distilbert-base-cased-distilled-squad"},type:"text"},"fill-mask":{tokenizer:w.AutoTokenizer,pipeline:ce,model:F.AutoModelForMaskedLM,default:{model:"Xenova/bert-base-uncased"},type:"text"},summarization:{tokenizer:w.AutoTokenizer,pipeline:I,model:F.AutoModelForSeq2SeqLM,default:{model:"Xenova/distilbart-cnn-6-6"},type:"text"},translation:{tokenizer:w.AutoTokenizer,pipeline:e,model:F.AutoModelForSeq2SeqLM,default:{model:"Xenova/t5-small"},type:"text"},"text2text-generation":{tokenizer:w.AutoTokenizer,pipeline:g,model:F.AutoModelForSeq2SeqLM,default:{model:"Xenova/flan-t5-small"},type:"text"},"text-generation":{tokenizer:w.AutoTokenizer,pipeline:B,model:F.AutoModelForCausalLM,default:{model:"Xenova/gpt2"},type:"text"},"zero-shot-classification":{tokenizer:w.AutoTokenizer,pipeline:ue,model:F.AutoModelForSequenceClassification,default:{model:"Xenova/distilbert-base-uncased-mnli"},type:"text"},"audio-classification":{pipeline:Ve,model:F.AutoModelForAudioClassification,processor:Y.AutoProcessor,default:{model:"Xenova/wav2vec2-base-superb-ks"},type:"audio"},"zero-shot-audio-classification":{tokenizer:w.AutoTokenizer,pipeline:ve,model:F.AutoModel,processor:Y.AutoProcessor,default:{model:"Xenova/clap-htsat-unfused"},type:"multimodal"},"automatic-speech-recognition":{tokenizer:w.AutoTokenizer,pipeline:Re,model:[F.AutoModelForSpeechSeq2Seq,F.AutoModelForCTC],processor:Y.AutoProcessor,default:{model:"Xenova/whisper-tiny.en"},type:"multimodal"},"text-to-audio":{tokenizer:w.AutoTokenizer,pipeline:xe,model:[F.AutoModelForTextToWaveform,F.AutoModelForTextToSpectrogram],processor:[Y.AutoProcessor,null],default:{model:"Xenova/speecht5_tts"},type:"text"},"image-to-text":{tokenizer:w.AutoTokenizer,pipeline:Ke,model:F.AutoModelForVision2Seq,processor:Y.AutoProcessor,default:{model:"Xenova/vit-gpt2-image-captioning"},type:"multimodal"},"image-classification":{pipeline:nt,model:F.AutoModelForImageClassification,processor:Y.AutoProcessor,default:{model:"Xenova/vit-base-patch16-224"},type:"multimodal"},"image-segmentation":{pipeline:Ct,model:[F.AutoModelForImageSegmentation,F.AutoModelForSemanticSegmentation,F.AutoModelForUniversalSegmentation],processor:Y.AutoProcessor,default:{model:"Xenova/detr-resnet-50-panoptic"},type:"multimodal"},"zero-shot-image-classification":{tokenizer:w.AutoTokenizer,pipeline:ht,model:F.AutoModel,processor:Y.AutoProcessor,default:{model:"Xenova/clip-vit-base-patch32"},type:"multimodal"},"object-detection":{pipeline:et,model:F.AutoModelForObjectDetection,processor:Y.AutoProcessor,default:{model:"Xenova/detr-resnet-50"},type:"multimodal"},"zero-shot-object-detection":{tokenizer:w.AutoTokenizer,pipeline:ze,model:F.AutoModelForZeroShotObjectDetection,processor:Y.AutoProcessor,default:{model:"Xenova/owlvit-base-patch32"},type:"multimodal"},"document-question-answering":{tokenizer:w.AutoTokenizer,pipeline:Se,model:F.AutoModelForDocumentQuestionAnswering,processor:Y.AutoProcessor,default:{model:"Xenova/donut-base-finetuned-docvqa"},type:"multimodal"},"image-to-image":{pipeline:Me,model:F.AutoModelForImageToImage,processor:Y.AutoProcessor,default:{model:"Xenova/swin2SR-classical-sr-x2-64"},type:"image"},"depth-estimation":{pipeline:ft,model:F.AutoModelForDepthEstimation,processor:Y.AutoProcessor,default:{model:"Xenova/dpt-large"},type:"image"},"feature-extraction":{tokenizer:w.AutoTokenizer,pipeline:G,model:F.AutoModel,default:{model:"Xenova/all-MiniLM-L6-v2"},type:"text"},"image-feature-extraction":{processor:Y.AutoProcessor,pipeline:K,model:[F.AutoModelForImageFeatureExtraction,F.AutoModel],default:{model:"Xenova/vit-base-patch16-224-in21k"},type:"image"}}),_t=Object.freeze({"sentiment-analysis":"text-classification",ner:"token-classification",asr:"automatic-speech-recognition","text-to-speech":"text-to-audio",embeddings:"feature-extraction"});async function Je(bt,rt=null,{progress_callback:Ne=null,config:it=null,cache_dir:Et=null,local_files_only:$e=!1,revision:It="main",device:Tt=null,dtype:zt=null,model_file_name:Wt=null,session_options:pe={}}={}){bt=_t[bt]??bt;const Ut=gt[bt.split("_",1)[0]];if(!Ut)throw Error(`Unsupported pipeline: ${bt}. Must be one of [${Object.keys(gt)}]`);rt||(rt=Ut.default.model,console.log(`No model specified. Using default model: "${rt}".`));const Pe={progress_callback:Ne,config:it,cache_dir:Et,local_files_only:$e,revision:It,device:Tt,dtype:zt,model_file_name:Wt,session_options:pe},X=new Map([["tokenizer",Ut.tokenizer],["model",Ut.model],["processor",Ut.processor]]),ge=await async function(fe,He,ct){const kt=Object.create(null),Dt=[];for(const[Ht,Vt]of fe.entries()){if(!Vt)continue;let sr;sr=Array.isArray(Vt)?new Promise(async(nr,lr)=>{var ns,Gs;let Fr;for(const Cs of Vt){if(Cs===null)return void nr(null);try{return void nr(await Cs.from_pretrained(He,ct))}catch(Ks){if((ns=Ks.message)!=null&&ns.includes("Unsupported model type"))Fr=Ks;else{if(!((Gs=Ks.message)!=null&&Gs.includes("Could not locate file")))return void lr(Ks);Fr=Ks}}}lr(Fr)}):Vt.from_pretrained(He,ct),kt[Ht]=sr,Dt.push(sr)}await Promise.all(Dt);for(const[Ht,Vt]of Object.entries(kt))kt[Ht]=await Vt;return kt}(X,rt,Pe);return ge.task=bt,(0,H.dispatchCallback)(Ne,{status:"ready",task:bt,model:rt}),new Ut.pipeline(ge)}},"./src/tokenizers.js":(T,k,A)=>{A.r(k),A.d(k,{AlbertTokenizer:()=>oa,AutoTokenizer:()=>Gn,BartTokenizer:()=>Qr,BertTokenizer:()=>wn,BlenderbotSmallTokenizer:()=>ys,BlenderbotTokenizer:()=>ds,BloomTokenizer:()=>Ss,CLIPTokenizer:()=>cn,CamembertTokenizer:()=>ln,CodeGenTokenizer:()=>Sn,CodeLlamaTokenizer:()=>_a,CohereTokenizer:()=>hi,ConvBertTokenizer:()=>pn,DebertaTokenizer:()=>Wr,DebertaV2Tokenizer:()=>vr,DistilBertTokenizer:()=>In,ElectraTokenizer:()=>kn,EsmTokenizer:()=>Jn,FalconTokenizer:()=>Mi,GPT2Tokenizer:()=>tr,GPTNeoXTokenizer:()=>Ma,GemmaTokenizer:()=>Ei,Grok1Tokenizer:()=>Pn,HerbertTokenizer:()=>Es,LlamaTokenizer:()=>Xa,M2M100Tokenizer:()=>Bi,MBart50Tokenizer:()=>Vs,MBartTokenizer:()=>jr,MPNetTokenizer:()=>Ms,MarianTokenizer:()=>ti,MgpstrTokenizer:()=>Wn,MobileBertTokenizer:()=>Ea,NllbTokenizer:()=>ma,NougatTokenizer:()=>pi,PreTrainedTokenizer:()=>is,Qwen2Tokenizer:()=>$n,RoFormerTokenizer:()=>Ba,RobertaTokenizer:()=>xn,SiglipTokenizer:()=>ei,SpeechT5Tokenizer:()=>qr,SqueezeBertTokenizer:()=>gr,T5Tokenizer:()=>sa,TokenizerModel:()=>u,VitsTokenizer:()=>Ai,Wav2Vec2CTCTokenizer:()=>ri,WhisperTokenizer:()=>Vn,XLMRobertaTokenizer:()=>Tn,XLMTokenizer:()=>hn,is_chinese_char:()=>ee});var w=A("./src/utils/generic.js"),F=A("./src/utils/core.js"),Y=A("./src/utils/hub.js"),U=A("./src/utils/maths.js"),H=A("./src/utils/tensor.js"),z=A("./src/utils/data-structures.js"),N=A("./node_modules/@huggingface/jinja/dist/index.js"),D=A("./src/models/whisper/common_whisper.js");async function R(qt,Qe){const ut=await Promise.all([(0,Y.getModelJSON)(qt,"tokenizer.json",!0,Qe),(0,Y.getModelJSON)(qt,"tokenizer_config.json",!0,Qe)]);return Qe.legacy!==null&&(ut[1].legacy=Qe.legacy),ut}function Q(qt,Qe=!0){if(qt.Regex!==void 0){let ut=qt.Regex.replace(/\\([#&~])/g,"$1");for(const[wt,tt]of I)ut=ut.replaceAll(wt,tt);return new RegExp(ut,"gu")}if(qt.String!==void 0){const ut=(0,F.escapeRegExp)(qt.String);return new RegExp(Qe?ut:`(${ut})`,"gu")}return console.warn("Unknown pattern type:",qt),null}function J(qt){return new Map(Object.entries(qt))}function oe(qt){const Qe=qt.dims;switch(Qe.length){case 1:return qt.tolist();case 2:if(Qe[0]!==1)throw new Error("Unable to decode tensor with `batch size !== 1`. Use `tokenizer.batch_decode(...)` for batched inputs.");return qt.tolist()[0];default:throw new Error(`Expected tensor to have 1-2 dimensions, got ${Qe.length}.`)}}function be(qt){return qt.replace(/ \./g,".").replace(/ \?/g,"?").replace(/ \!/g,"!").replace(/ ,/g,",").replace(/ \' /g,"'").replace(/ n\'t/g,"n't").replace(/ \'m/g,"'m").replace(/ \'s/g,"'s").replace(/ \'ve/g,"'ve").replace(/ \'re/g,"'re")}function Ie(qt){return qt.replace(new RegExp("\\p{M}","gu"),"")}function ee(qt){return qt>=19968&&qt<=40959||qt>=13312&&qt<=19903||qt>=131072&&qt<=173791||qt>=173824&&qt<=177983||qt>=177984&&qt<=178207||qt>=178208&&qt<=183983||qt>=63744&&qt<=64255||qt>=194560&&qt<=195103}const re="\\p{P}\\u0021-\\u002F\\u003A-\\u0040\\u005B-\\u0060\\u007B-\\u007E",ce=new RegExp(`^[${re}]+$`,"gu"),g=".,!?…。，、।۔،",I=new Map([["(?i:'s|'t|'re|'ve|'m|'ll|'d)","(?:'([sS]|[tT]|[rR][eE]|[vV][eE]|[mM]|[lL][lL]|[dD]))"],[` ?[^(\\s|[${g}])]+`,` ?[^\\s${g}]+`]]);class e{constructor(Qe){this.content=Qe.content,this.id=Qe.id,this.single_word=Qe.single_word??!1,this.lstrip=Qe.lstrip??!1,this.rstrip=Qe.rstrip??!1,this.special=Qe.special??!1,this.normalized=Qe.normalized??null}}class u extends w.Callable{constructor(Qe){super(),this.config=Qe,this.vocab=[],this.tokens_to_ids=new Map,this.unk_token_id=void 0,this.unk_token=void 0,this.end_of_word_suffix=void 0,this.fuse_unk=this.config.fuse_unk??!1}static fromConfig(Qe,...ut){switch(Qe.type){case"WordPiece":return new B(Qe);case"Unigram":return new ue(Qe,...ut);case"BPE":return new Ve(Qe);default:if(Qe.vocab)return Array.isArray(Qe.vocab)?new ue(Qe,...ut):typeof Qe.vocab=="object"&&Qe.continuing_subword_prefix&&Qe.unk_token?new B(Qe):new ve(Qe,...ut);throw new Error(`Unknown TokenizerModel type: ${Qe.type}`)}}_call(Qe){return Qe=this.encode(Qe),this.fuse_unk&&(Qe=function(ut,wt,tt){const Ae=[];let Ge=0;for(;Ge<ut.length;)if(Ae.push(ut[Ge]),(wt.get(ut[Ge])??tt)===tt)for(;++Ge<ut.length&&(wt.get(ut[Ge])??tt)===tt;)wt.get(Ae.at(-1))!==tt&&(Ae[Ae.length-1]+=ut[Ge]);else++Ge;return Ae}(Qe,this.tokens_to_ids,this.unk_token_id)),Qe}encode(Qe){throw Error("encode should be implemented in subclass.")}convert_tokens_to_ids(Qe){return Qe.map(ut=>this.tokens_to_ids.get(ut)??this.unk_token_id)}convert_ids_to_tokens(Qe){return Qe.map(ut=>this.vocab[ut]??this.unk_token)}}class B extends u{constructor(Qe){super(Qe),this.tokens_to_ids=J(Qe.vocab),this.unk_token_id=this.tokens_to_ids.get(Qe.unk_token),this.unk_token=Qe.unk_token,this.max_input_chars_per_word=Qe.max_input_chars_per_word??100,this.vocab=new Array(this.tokens_to_ids.size);for(const[ut,wt]of this.tokens_to_ids)this.vocab[wt]=ut}encode(Qe){const ut=[];for(const wt of Qe){const tt=[...wt];if(tt.length>this.max_input_chars_per_word){ut.push(this.unk_token);continue}let Ae=!1,Ge=0;const at=[];for(;Ge<tt.length;){let Le=tt.length,vt=null;for(;Ge<Le;){let Pt=tt.slice(Ge,Le).join("");if(Ge>0&&(Pt=this.config.continuing_subword_prefix+Pt),this.tokens_to_ids.has(Pt)){vt=Pt;break}--Le}if(vt===null){Ae=!0;break}at.push(vt),Ge=Le}Ae?ut.push(this.unk_token):ut.push(...at)}return ut}}class ue extends u{constructor(Qe,ut){super(Qe);const wt=Qe.vocab.length;this.vocab=new Array(wt),this.scores=new Array(wt);for(let tt=0;tt<wt;++tt)[this.vocab[tt],this.scores[tt]]=Qe.vocab[tt];this.unk_token_id=Qe.unk_id,this.unk_token=this.vocab[Qe.unk_id],this.tokens_to_ids=new Map(this.vocab.map((tt,Ae)=>[tt,Ae])),this.bos_token=" ",this.bos_token_id=this.tokens_to_ids.get(this.bos_token),this.eos_token=ut.eos_token,this.eos_token_id=this.tokens_to_ids.get(this.eos_token),this.unk_token=this.vocab[this.unk_token_id],this.minScore=(0,U.min)(this.scores)[0],this.unk_score=this.minScore-10,this.scores[this.unk_token_id]=this.unk_score,this.trie=new z.CharTrie,this.trie.extend(this.vocab),this.fuse_unk=!0}populateNodes(Qe){const ut=Qe.chars;let wt=0;for(;wt<ut.length;){let tt=!1;const Ae=ut.slice(wt).join(""),Ge=this.trie.commonPrefixSearch(Ae);for(const at of Ge){const Le=this.tokens_to_ids.get(at),vt=this.scores[Le],Pt=(0,F.len)(at);Qe.insert(wt,Pt,vt,Le),tt||Pt!==1||(tt=!0)}tt||Qe.insert(wt,1,this.unk_score,this.unk_token_id),wt+=1}}tokenize(Qe){const ut=new z.TokenLattice(Qe,this.bos_token_id,this.eos_token_id);return this.populateNodes(ut),ut.tokens()}encode(Qe){const ut=[];for(const wt of Qe){const tt=this.tokenize(wt);ut.push(...tt)}return ut}}const G=(()=>{const qt=[...Array.from({length:94},(tt,Ae)=>Ae+33),...Array.from({length:12},(tt,Ae)=>Ae+161),...Array.from({length:82},(tt,Ae)=>Ae+174)],Qe=qt.slice();let ut=0;for(let tt=0;tt<256;++tt)qt.includes(tt)||(qt.push(tt),Qe.push(256+ut),ut+=1);const wt=Qe.map(tt=>String.fromCharCode(tt));return Object.fromEntries(qt.map((tt,Ae)=>[tt,wt[Ae]]))})(),K=(0,F.reverseDictionary)(G);class Ve extends u{constructor(Qe){super(Qe),this.tokens_to_ids=J(Qe.vocab),this.unk_token_id=this.tokens_to_ids.get(Qe.unk_token),this.unk_token=Qe.unk_token,this.vocab=new Array(this.tokens_to_ids.size);for(const[wt,tt]of this.tokens_to_ids)this.vocab[tt]=wt;const ut=Array.isArray(Qe.merges[0]);this.merges=ut?Qe.merges:Qe.merges.map(wt=>wt.split(" ",2)),this.bpe_ranks=new Map(this.merges.map((wt,tt)=>[JSON.stringify(wt),tt])),this.end_of_word_suffix=Qe.end_of_word_suffix,this.continuing_subword_suffix=Qe.continuing_subword_suffix??null,this.byte_fallback=this.config.byte_fallback??!1,this.byte_fallback&&(this.text_encoder=new TextEncoder),this.ignore_merges=this.config.ignore_merges??!1,this.cache=new Map}bpe(Qe){if(Qe.length===0)return[];const ut=this.cache.get(Qe);if(ut!==void 0)return ut;const wt=Array.from(Qe);this.end_of_word_suffix&&(wt[wt.length-1]+=this.end_of_word_suffix);let tt=[];if(wt.length>1){const Ae=new z.PriorityQueue((Le,vt)=>Le.score<vt.score);let Ge={token:wt[0],bias:0,prev:null,next:null},at=Ge;for(let Le=1;Le<wt.length;++Le){const vt={bias:Le/wt.length,token:wt[Le],prev:at,next:null};at.next=vt,this._add_node(Ae,at),at=vt}for(;!Ae.isEmpty();){const Le=Ae.pop();if(Le.deleted||!Le.next||Le.next.deleted)continue;if(Le.deleted=!0,Le.next.deleted=!0,Le.prev){const Pt={...Le.prev};Le.prev.deleted=!0,Le.prev=Pt,Pt.prev?Pt.prev.next=Pt:Ge=Pt}const vt={token:Le.token+Le.next.token,bias:Le.bias,prev:Le.prev,next:Le.next.next};vt.prev?(vt.prev.next=vt,this._add_node(Ae,vt.prev)):Ge=vt,vt.next&&(vt.next.prev=vt,this._add_node(Ae,vt))}for(let Le=Ge;Le!==null;Le=Le.next)tt.push(Le.token)}else tt=wt;if(this.continuing_subword_suffix)for(let Ae=0;Ae<tt.length-1;++Ae)tt[Ae]+=this.continuing_subword_suffix;return this.cache.set(Qe,tt),tt}_add_node(Qe,ut){const wt=this.bpe_ranks.get(JSON.stringify([ut.token,ut.next.token]));wt!==void 0&&(ut.score=wt+ut.bias,Qe.push(ut))}encode(Qe){const ut=[];for(const wt of Qe){if(this.ignore_merges&&this.tokens_to_ids.has(wt)){ut.push(wt);continue}const tt=this.bpe(wt);for(const Ae of tt)if(this.tokens_to_ids.has(Ae))ut.push(Ae);else if(this.byte_fallback){const Ge=Array.from(this.text_encoder.encode(Ae)).map(at=>`<0x${at.toString(16).toUpperCase().padStart(2,"0")}>`);Ge.every(at=>this.tokens_to_ids.has(at))?ut.push(...Ge):ut.push(this.unk_token)}else ut.push(this.unk_token)}return ut}}class ve extends u{constructor(Qe,ut){super(Qe),this.tokens_to_ids=J(ut.target_lang?Qe.vocab[ut.target_lang]:Qe.vocab),this.bos_token=ut.bos_token,this.bos_token_id=this.tokens_to_ids.get(this.bos_token),this.eos_token=ut.eos_token,this.eos_token_id=this.tokens_to_ids.get(this.eos_token),this.pad_token=ut.pad_token,this.pad_token_id=this.tokens_to_ids.get(this.pad_token),this.unk_token=ut.unk_token,this.unk_token_id=this.tokens_to_ids.get(this.unk_token),this.vocab=new Array(this.tokens_to_ids.size);for(const[wt,tt]of this.tokens_to_ids)this.vocab[tt]=wt}encode(Qe){return Qe}}class Re extends w.Callable{constructor(Qe){super(),this.config=Qe}static fromConfig(Qe){if(Qe===null)return null;switch(Qe.type){case"BertNormalizer":return new ft(Qe);case"Precompiled":return new sr(Qe);case"Sequence":return new Me(Qe);case"Replace":return new Ke(Qe);case"NFC":return new nt(Qe);case"NFKC":return new Ct(Qe);case"NFKD":return new ht(Qe);case"Strip":return new et(Qe);case"StripAccents":return new ze(Qe);case"Lowercase":return new Se(Qe);case"Prepend":return new xe(Qe);default:throw new Error(`Unknown Normalizer type: ${Qe.type}`)}}normalize(Qe){throw Error("normalize should be implemented in subclass.")}_call(Qe){return this.normalize(Qe)}}class Ke extends Re{normalize(Qe){const ut=Q(this.config.pattern);return ut===null?Qe:Qe.replaceAll(ut,this.config.content)}}class nt extends Re{normalize(Qe){return Qe=Qe.normalize("NFC")}}class Ct extends Re{normalize(Qe){return Qe=Qe.normalize("NFKC")}}class ht extends Re{normalize(Qe){return Qe=Qe.normalize("NFKD")}}class et extends Re{normalize(Qe){return this.config.strip_left&&this.config.strip_right?Qe=Qe.trim():(this.config.strip_left&&(Qe=Qe.trimStart()),this.config.strip_right&&(Qe=Qe.trimEnd())),Qe}}class ze extends Re{normalize(Qe){return Qe=Ie(Qe)}}class Se extends Re{normalize(Qe){return Qe=Qe.toLowerCase()}}class xe extends Re{normalize(Qe){return Qe=this.config.prepend+Qe}}class Me extends Re{constructor(Qe){super(Qe),this.normalizers=Qe.normalizers.map(ut=>Re.fromConfig(ut))}normalize(Qe){return this.normalizers.reduce((ut,wt)=>wt.normalize(ut),Qe)}}class ft extends Re{_tokenize_chinese_chars(Qe){const ut=[];for(let wt=0;wt<Qe.length;++wt){const tt=Qe[wt];ee(tt.charCodeAt(0))?(ut.push(" "),ut.push(tt),ut.push(" ")):ut.push(tt)}return ut.join("")}stripAccents(Qe){return Qe.normalize("NFD").replace(new RegExp("\\p{Mn}","gu"),"")}_is_control(Qe){switch(Qe){case"	":case`
`:case"\r":return!1;default:return new RegExp("^\\p{Cc}|\\p{Cf}|\\p{Co}|\\p{Cs}$","u").test(Qe)}}_clean_text(Qe){const ut=[];for(const wt of Qe){const tt=wt.charCodeAt(0);tt===0||tt===65533||this._is_control(wt)||(/^\s$/.test(wt)?ut.push(" "):ut.push(wt))}return ut.join("")}normalize(Qe){return this.config.clean_text&&(Qe=this._clean_text(Qe)),this.config.handle_chinese_chars&&(Qe=this._tokenize_chinese_chars(Qe)),this.config.lowercase?(Qe=Qe.toLowerCase(),this.config.strip_accents!==!1&&(Qe=this.stripAccents(Qe))):this.config.strip_accents&&(Qe=this.stripAccents(Qe)),Qe}}class gt extends w.Callable{static fromConfig(Qe){if(Qe===null)return null;switch(Qe.type){case"BertPreTokenizer":return new _t(Qe);case"Sequence":return new nr(Qe);case"Whitespace":return new lr(Qe);case"WhitespaceSplit":return new Fr(Qe);case"Metaspace":return new Ht(Qe);case"ByteLevel":return new Je(Qe);case"Split":return new bt(Qe);case"Punctuation":return new rt(Qe);case"Digits":return new Ne(Qe);case"Replace":return new ns(Qe);default:throw new Error(`Unknown PreTokenizer type: ${Qe.type}`)}}pre_tokenize_text(Qe,ut){throw Error("pre_tokenize_text should be implemented in subclass.")}pre_tokenize(Qe,ut){return(Array.isArray(Qe)?Qe.map(wt=>this.pre_tokenize_text(wt,ut)):this.pre_tokenize_text(Qe,ut)).flat()}_call(Qe,ut){return this.pre_tokenize(Qe,ut)}}class _t extends gt{constructor(Qe){super(),this.pattern=new RegExp(`[^\\s${re}]+|[${re}]`,"gu")}pre_tokenize_text(Qe,ut){return Qe.trim().match(this.pattern)||[]}}class Je extends gt{constructor(Qe){super(),this.config=Qe,this.add_prefix_space=this.config.add_prefix_space,this.trim_offsets=this.config.trim_offsets,this.use_regex=this.config.use_regex??!0,this.pattern=new RegExp("'s|'t|'re|'ve|'m|'ll|'d| ?\\p{L}+| ?\\p{N}+| ?[^\\s\\p{L}\\p{N}]+|\\s+(?!\\S)|\\s+","gu"),this.byte_encoder=G,this.text_encoder=new TextEncoder}pre_tokenize_text(Qe,ut){return this.add_prefix_space&&!Qe.startsWith(" ")&&(Qe=" "+Qe),(this.use_regex?Qe.match(this.pattern)||[]:[Qe]).map(wt=>Array.from(this.text_encoder.encode(wt),tt=>this.byte_encoder[tt]).join(""))}}class bt extends gt{constructor(Qe){super(),this.config=Qe,this.pattern=Q(this.config.pattern,this.config.invert)}pre_tokenize_text(Qe,ut){var wt;return this.pattern===null?[]:this.config.invert?Qe.match(this.pattern)||[]:((wt=this.config.behavior)==null?void 0:wt.toLowerCase())==="removed"?Qe.split(this.pattern).filter(tt=>tt):function(tt,Ae){const Ge=[];let at=0;for(const Le of tt.matchAll(Ae)){const vt=Le[0];at<Le.index&&Ge.push(tt.slice(at,Le.index)),vt.length>0&&Ge.push(vt),at=Le.index+vt.length}return at<tt.length&&Ge.push(tt.slice(at)),Ge}(Qe,this.pattern)}}class rt extends gt{constructor(Qe){super(),this.config=Qe,this.pattern=new RegExp(`[^${re}]+|[${re}]+`,"gu")}pre_tokenize_text(Qe,ut){return Qe.match(this.pattern)||[]}}class Ne extends gt{constructor(Qe){super(),this.config=Qe;const ut="[^\\d]+|\\d"+(this.config.individual_digits?"":"+");this.pattern=new RegExp(ut,"gu")}pre_tokenize_text(Qe,ut){return Qe.match(this.pattern)||[]}}class it extends w.Callable{constructor(Qe){super(),this.config=Qe}static fromConfig(Qe){if(Qe===null)return null;switch(Qe.type){case"TemplateProcessing":return new It(Qe);case"ByteLevel":return new Tt(Qe);case"RobertaProcessing":return new $e(Qe);case"BertProcessing":return new Et(Qe);case"Sequence":return new zt(Qe);default:throw new Error(`Unknown PostProcessor type: ${Qe.type}`)}}post_process(Qe,...ut){throw Error("post_process should be implemented in subclass.")}_call(Qe,...ut){return this.post_process(Qe,...ut)}}class Et extends it{constructor(Qe){super(Qe),this.cls=Qe.cls[0],this.sep=Qe.sep[0]}post_process(Qe,ut=null,{add_special_tokens:wt=!0}={}){wt&&(Qe=(0,F.mergeArrays)([this.cls],Qe,[this.sep]));let tt=new Array(Qe.length).fill(0);if(ut!==null){const Ae=wt&&this instanceof $e?[this.sep]:[],Ge=wt?[this.sep]:[];Qe=(0,F.mergeArrays)(Qe,Ae,ut,Ge),tt=(0,F.mergeArrays)(tt,new Array(ut.length+Ae.length+Ge.length).fill(1))}return{tokens:Qe,token_type_ids:tt}}}class $e extends Et{}class It extends it{constructor(Qe){super(Qe),this.single=Qe.single,this.pair=Qe.pair}post_process(Qe,ut=null,{add_special_tokens:wt=!0}={}){const tt=ut===null?this.single:this.pair;let Ae=[],Ge=[];for(const at of tt)"SpecialToken"in at?wt&&(Ae.push(at.SpecialToken.id),Ge.push(at.SpecialToken.type_id)):"Sequence"in at&&(at.Sequence.id==="A"?(Ae=(0,F.mergeArrays)(Ae,Qe),Ge=(0,F.mergeArrays)(Ge,new Array(Qe.length).fill(at.Sequence.type_id))):at.Sequence.id==="B"&&(Ae=(0,F.mergeArrays)(Ae,ut),Ge=(0,F.mergeArrays)(Ge,new Array(ut.length).fill(at.Sequence.type_id))));return{tokens:Ae,token_type_ids:Ge}}}class Tt extends it{post_process(Qe,ut=null){return ut&&(Qe=(0,F.mergeArrays)(Qe,ut)),{tokens:Qe}}}class zt extends it{constructor(Qe){super(Qe),this.processors=Qe.processors.map(ut=>it.fromConfig(ut))}post_process(Qe,ut=null,wt={}){let tt;for(const Ae of this.processors)if(Ae instanceof Tt)Qe=Ae.post_process(Qe).tokens,ut&&(ut=Ae.post_process(ut).tokens);else{const Ge=Ae.post_process(Qe,ut,wt);Qe=Ge.tokens,tt=Ge.token_type_ids}return{tokens:Qe,token_type_ids:tt}}}class Wt extends w.Callable{constructor(Qe){super(),this.config=Qe,this.added_tokens=[],this.end_of_word_suffix=null,this.trim_offsets=Qe.trim_offsets}static fromConfig(Qe){if(Qe===null)return null;switch(Qe.type){case"WordPiece":return new ge(Qe);case"Metaspace":return new Vt(Qe);case"ByteLevel":return new fe(Qe);case"Replace":return new pe(Qe);case"ByteFallback":return new Ut(Qe);case"Fuse":return new Pe(Qe);case"Strip":return new X(Qe);case"Sequence":return new ct(Qe);case"CTC":return new He(Qe);case"BPEDecoder":return new kt(Qe);default:throw new Error(`Unknown Decoder type: ${Qe.type}`)}}_call(Qe){return this.decode(Qe)}decode(Qe){return this.decode_chain(Qe).join("")}decode_chain(Qe){throw Error("`decode_chain` should be implemented in subclass.")}}class pe extends Wt{decode_chain(Qe){const ut=Q(this.config.pattern);return ut===null?Qe:Qe.map(wt=>wt.replaceAll(ut,this.config.content))}}class Ut extends Wt{constructor(Qe){super(Qe),this.text_decoder=new TextDecoder}decode_chain(Qe){const ut=[];let wt=[];for(const tt of Qe){let Ae=null;if(tt.length===6&&tt.startsWith("<0x")&&tt.endsWith(">")){const Ge=parseInt(tt.slice(3,5),16);isNaN(Ge)||(Ae=Ge)}if(Ae!==null)wt.push(Ae);else{if(wt.length>0){const Ge=this.text_decoder.decode(Uint8Array.from(wt));ut.push(Ge),wt=[]}ut.push(tt)}}if(wt.length>0){const tt=this.text_decoder.decode(Uint8Array.from(wt));ut.push(tt),wt=[]}return ut}}class Pe extends Wt{decode_chain(Qe){return[Qe.join("")]}}class X extends Wt{constructor(Qe){super(Qe),this.content=this.config.content,this.start=this.config.start,this.stop=this.config.stop}decode_chain(Qe){return Qe.map(ut=>{let wt=0;for(let Ae=0;Ae<this.start&&ut[Ae]===this.content;++Ae)wt=Ae+1;let tt=ut.length;for(let Ae=0;Ae<this.stop;++Ae){const Ge=ut.length-Ae-1;if(ut[Ge]!==this.content)break;tt=Ge}return ut.slice(wt,tt)})}}class ge extends Wt{constructor(Qe){super(Qe),this.cleanup=Qe.cleanup}decode_chain(Qe){return Qe.map((ut,wt)=>(wt!==0&&(ut=ut.startsWith(this.config.prefix)?ut.replace(this.config.prefix,""):" "+ut),this.cleanup&&(ut=be(ut)),ut))}}class fe extends Wt{constructor(Qe){super(Qe),this.byte_decoder=K,this.text_decoder=new TextDecoder("utf-8",{fatal:!1,ignoreBOM:!0}),this.end_of_word_suffix=null}convert_tokens_to_string(Qe){const ut=Qe.join(""),wt=new Uint8Array([...ut].map(tt=>this.byte_decoder[tt]));return this.text_decoder.decode(wt)}decode_chain(Qe){const ut=[];let wt=[];for(const tt of Qe)this.added_tokens.find(Ae=>Ae.content===tt)!==void 0?(wt.length>0&&(ut.push(this.convert_tokens_to_string(wt)),wt=[]),ut.push(tt)):wt.push(tt);return wt.length>0&&ut.push(this.convert_tokens_to_string(wt)),ut}}class He extends Wt{constructor(Qe){super(Qe),this.pad_token=this.config.pad_token,this.word_delimiter_token=this.config.word_delimiter_token,this.cleanup=this.config.cleanup}convert_tokens_to_string(Qe){if(Qe.length===0)return"";const ut=[Qe[0]];for(let tt=1;tt<Qe.length;++tt)Qe[tt]!==ut.at(-1)&&ut.push(Qe[tt]);let wt=ut.filter(tt=>tt!==this.pad_token).join("");return this.cleanup&&(wt=be(wt).replaceAll(this.word_delimiter_token," ").trim()),wt}decode_chain(Qe){return[this.convert_tokens_to_string(Qe)]}}class ct extends Wt{constructor(Qe){super(Qe),this.decoders=Qe.decoders.map(ut=>Wt.fromConfig(ut))}decode_chain(Qe){return this.decoders.reduce((ut,wt)=>wt.decode_chain(ut),Qe)}}class kt extends Wt{constructor(Qe){super(Qe),this.suffix=this.config.suffix}decode_chain(Qe){return Qe.map((ut,wt)=>ut.replaceAll(this.suffix,wt===Qe.length-1?"":" "))}}class Dt extends Wt{decode_chain(Qe){let ut="";for(let wt=1;wt<Qe.length;wt+=2)ut+=Qe[wt];return[ut]}}class Ht extends gt{constructor(Qe){super(),this.addPrefixSpace=Qe.add_prefix_space,this.replacement=Qe.replacement,this.strRep=Qe.str_rep||this.replacement,this.prepend_scheme=Qe.prepend_scheme??"always"}pre_tokenize_text(Qe,{section_index:ut}={}){let wt=Qe.replaceAll(" ",this.strRep);return this.addPrefixSpace&&!wt.startsWith(this.replacement)&&(this.prepend_scheme==="always"||this.prepend_scheme==="first"&&ut===0)&&(wt=this.strRep+wt),[wt]}}class Vt extends Wt{constructor(Qe){super(Qe),this.addPrefixSpace=Qe.add_prefix_space,this.replacement=Qe.replacement}decode_chain(Qe){const ut=[];for(let wt=0;wt<Qe.length;++wt){let tt=Qe[wt].replaceAll(this.replacement," ");this.addPrefixSpace&&wt==0&&tt.startsWith(" ")&&(tt=tt.substring(1)),ut.push(tt)}return ut}}class sr extends Re{constructor(Qe){super(Qe),this.charsmap=Qe.precompiled_charsmap}normalize(Qe){return(Qe=(Qe=Qe.replace(/[\u0001-\u0008\u000B\u000E-\u001F\u007F\u008F\u009F]/gm,"")).replace(/[\u0009\u000A\u000C\u000D\u00A0\u1680\u2000-\u200F\u2028\u2029\u202F\u205F\u2581\u3000\uFEFF\uFFFD]/gm," ")).includes("～")?Qe=Qe.split("～").map(wt=>wt.normalize("NFKC")).join("～"):Qe=Qe.normalize("NFKC"),Qe}}class nr extends gt{constructor(Qe){super(),this.tokenizers=Qe.pretokenizers.map(ut=>gt.fromConfig(ut))}pre_tokenize_text(Qe,ut){return this.tokenizers.reduce((wt,tt)=>tt.pre_tokenize(wt,ut),[Qe])}}class lr extends gt{constructor(Qe){super()}pre_tokenize_text(Qe,ut){return Qe.match(/\w+|[^\w\s]+/g)||[]}}class Fr extends gt{constructor(Qe){super()}pre_tokenize_text(Qe,ut){return function(wt){return wt.match(/\S+/g)||[]}(Qe)}}class ns extends gt{constructor(Qe){super(),this.config=Qe,this.pattern=Q(this.config.pattern),this.content=this.config.content}pre_tokenize_text(Qe,ut){return this.pattern===null?[Qe]:[Qe.replaceAll(this.pattern,this.config.content)]}}const Gs=["bos_token","eos_token","unk_token","sep_token","pad_token","cls_token","mask_token"];function Cs(qt,Qe,ut,wt){for(const tt of Object.keys(qt)){const Ae=Qe-qt[tt].length,Ge=ut(tt),at=new Array(Ae).fill(Ge);qt[tt]=wt==="right"?(0,F.mergeArrays)(qt[tt],at):(0,F.mergeArrays)(at,qt[tt])}}function Ks(qt,Qe){for(const ut of Object.keys(qt))qt[ut].length=Qe}class is extends w.Callable{constructor(ut,wt){super();We(this,"return_token_type_ids",!1);We(this,"padding_side","right");this._tokenizer_config=wt,this.normalizer=Re.fromConfig(ut.normalizer),this.pre_tokenizer=gt.fromConfig(ut.pre_tokenizer),this.model=u.fromConfig(ut.model,wt),this.post_processor=it.fromConfig(ut.post_processor),this.decoder=Wt.fromConfig(ut.decoder),this.special_tokens=[],this.all_special_ids=[],this.added_tokens=[];for(const tt of ut.added_tokens){const Ae=new e(tt);this.added_tokens.push(Ae),this.model.tokens_to_ids.set(Ae.content,Ae.id),this.model.vocab[Ae.id]=Ae.content,Ae.special&&(this.special_tokens.push(Ae.content),this.all_special_ids.push(Ae.id))}if(this.additional_special_tokens=wt.additional_special_tokens??[],this.special_tokens.push(...this.additional_special_tokens),this.special_tokens=[...new Set(this.special_tokens)],this.decoder&&(this.decoder.added_tokens=this.added_tokens,this.decoder.end_of_word_suffix=this.model.end_of_word_suffix),this.added_tokens_regex=this.added_tokens.length>0?new RegExp(this.added_tokens.slice().sort((tt,Ae)=>Ae.content.length-tt.content.length).map(tt=>`${tt.lstrip?"\\s*":""}(${(0,F.escapeRegExp)(tt.content)})${tt.rstrip?"\\s*":""}`).join("|")):null,this.mask_token=this.getToken("mask_token"),this.mask_token_id=this.model.tokens_to_ids.get(this.mask_token),this.pad_token=this.getToken("pad_token","eos_token"),this.pad_token_id=this.model.tokens_to_ids.get(this.pad_token),this.sep_token=this.getToken("sep_token"),this.sep_token_id=this.model.tokens_to_ids.get(this.sep_token),this.unk_token=this.getToken("unk_token"),this.unk_token_id=this.model.tokens_to_ids.get(this.unk_token),this.bos_token=this.getToken("bos_token"),this.bos_token_id=this.model.tokens_to_ids.get(this.bos_token),this.eos_token=this.getToken("eos_token"),this.eos_token_id=this.model.tokens_to_ids.get(this.eos_token),this.model_max_length=wt.model_max_length,this.remove_space=wt.remove_space,this.clean_up_tokenization_spaces=wt.clean_up_tokenization_spaces??!0,this.do_lowercase_and_remove_accent=wt.do_lowercase_and_remove_accent??!1,wt.padding_side&&(this.padding_side=wt.padding_side),this.legacy=!1,this.chat_template=wt.chat_template??null,Array.isArray(this.chat_template)){const tt=Object.create(null);for(const{name:Ae,template:Ge}of this.chat_template){if(typeof Ae!="string"||typeof Ge!="string")throw new Error('Chat template must be a list of objects with "name" and "template" properties');tt[Ae]=Ge}this.chat_template=tt}this._compiled_template_cache=new Map}getToken(...ut){for(const wt of ut){const tt=this._tokenizer_config[wt];if(tt){if(typeof tt=="object"){if(tt.__type==="AddedToken")return tt.content;throw Error(`Unknown token: ${tt}`)}return tt}}return null}static async from_pretrained(ut,{progress_callback:wt=null,config:tt=null,cache_dir:Ae=null,local_files_only:Ge=!1,revision:at="main",legacy:Le=null}={}){return new this(...await R(ut,{progress_callback:wt,config:tt,cache_dir:Ae,local_files_only:Ge,revision:at,legacy:Le}))}_call(ut,{text_pair:wt=null,add_special_tokens:tt=!0,padding:Ae=!1,truncation:Ge=null,max_length:at=null,return_tensor:Le=!0,return_token_type_ids:vt=null}={}){const Pt=Array.isArray(ut);let ir;if(Pt){if(ut.length===0)throw Error("text array must be non-empty");if(wt!==null){if(!Array.isArray(wt))throw Error("text_pair must also be an array");if(ut.length!==wt.length)throw Error("text and text_pair must have the same length");ir=ut.map((hr,xr)=>this._encode_plus(hr,{text_pair:wt[xr],add_special_tokens:tt,return_token_type_ids:vt}))}else ir=ut.map(hr=>this._encode_plus(hr,{add_special_tokens:tt,return_token_type_ids:vt}))}else{if(ut==null)throw Error("text may not be null or undefined");if(Array.isArray(wt))throw Error("When specifying `text_pair`, since `text` is a string, `text_pair` must also be a string (i.e., not an array).");ir=[this._encode_plus(ut,{text_pair:wt,add_special_tokens:tt,return_token_type_ids:vt})]}if(at===null?at=Ae==="max_length"?this.model_max_length:(0,U.max)(ir.map(hr=>hr.input_ids.length))[0]:Ge||console.warn("Truncation was not explicitly activated but `max_length` is provided a specific value, please use `truncation=true` to explicitly truncate examples to max length."),at=Math.min(at,this.model_max_length??1/0),Ae||Ge)for(let hr=0;hr<ir.length;++hr)ir[hr].input_ids.length!==at&&(ir[hr].input_ids.length>at?Ge&&Ks(ir[hr],at):Ae&&Cs(ir[hr],at,xr=>xr==="input_ids"?this.pad_token_id:0,this.padding_side));const yr={};if(Le){if((!Ae||!Ge)&&ir.some(xr=>{var Gr;for(const wr of Object.keys(xr))if(xr[wr].length!==((Gr=ir[0][wr])==null?void 0:Gr.length))return!0;return!1}))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=true' and 'truncation=true' to have batched tensors with the same length.");const hr=[ir.length,ir[0].input_ids.length];for(const xr of Object.keys(ir[0]))yr[xr]=new H.Tensor("int64",BigInt64Array.from(ir.flatMap(Gr=>Gr[xr]).map(BigInt)),hr)}else{for(const hr of Object.keys(ir[0]))yr[hr]=ir.map(xr=>xr[hr]);if(!Pt)for(const hr of Object.keys(yr))yr[hr]=yr[hr][0]}return yr}_encode_text(ut){return ut===null?null:(this.added_tokens_regex?ut.split(this.added_tokens_regex).filter(Ae=>Ae):[ut]).map((Ae,Ge)=>{if(this.added_tokens.find(Le=>Le.content===Ae)!==void 0)return Ae;{if(this.remove_space===!0&&(Ae=Ae.trim().split(/\s+/).join(" ")),this.do_lowercase_and_remove_accent&&(Ae=function(vt){return Ie(vt.toLowerCase())}(Ae)),this.normalizer!==null&&(Ae=this.normalizer(Ae)),Ae.length===0)return[];const Le=this.pre_tokenizer!==null?this.pre_tokenizer(Ae,{section_index:Ge}):[Ae];return this.model(Le)}}).flat()}_encode_plus(ut,{text_pair:wt=null,add_special_tokens:tt=!0,return_token_type_ids:Ae=null}={}){const{tokens:Ge,token_type_ids:at}=this._tokenize_helper(ut,{pair:wt,add_special_tokens:tt}),Le=this.model.convert_tokens_to_ids(Ge),vt={input_ids:Le,attention_mask:new Array(Le.length).fill(1)};return(Ae??this.return_token_type_ids)&&at&&(vt.token_type_ids=at),vt}_tokenize_helper(ut,{pair:wt=null,add_special_tokens:tt=!1}={}){const Ae=this._encode_text(ut),Ge=this._encode_text(wt);return this.post_processor?this.post_processor(Ae,Ge,{add_special_tokens:tt}):{tokens:(0,F.mergeArrays)(Ae??[],Ge??[])}}tokenize(ut,{pair:wt=null,add_special_tokens:tt=!1}={}){return this._tokenize_helper(ut,{pair:wt,add_special_tokens:tt}).tokens}encode(ut,{text_pair:wt=null,add_special_tokens:tt=!0,return_token_type_ids:Ae=null}={}){return this._encode_plus(ut,{text_pair:wt,add_special_tokens:tt,return_token_type_ids:Ae}).input_ids}batch_decode(ut,wt={}){return ut instanceof H.Tensor&&(ut=ut.tolist()),ut.map(tt=>this.decode(tt,wt))}decode(ut,wt={}){if(ut instanceof H.Tensor&&(ut=oe(ut)),!Array.isArray(ut)||ut.length===0||!(0,F.isIntegralNumber)(ut[0]))throw Error("token_ids must be a non-empty array of integers.");return this.decode_single(ut,wt)}decode_single(ut,{skip_special_tokens:wt=!1,clean_up_tokenization_spaces:tt=null}){let Ae=this.model.convert_ids_to_tokens(ut);wt&&(Ae=Ae.filter(at=>!this.special_tokens.includes(at)));let Ge=this.decoder?this.decoder(Ae):Ae.join(" ");return this.decoder&&this.decoder.end_of_word_suffix&&(Ge=Ge.replaceAll(this.decoder.end_of_word_suffix," "),wt&&(Ge=Ge.trim())),(tt??this.clean_up_tokenization_spaces)&&(Ge=be(Ge)),Ge}get_chat_template({chat_template:ut=null,tools:wt=null}={}){if(this.chat_template&&typeof this.chat_template=="object"){const tt=this.chat_template;if(ut!==null&&Object.hasOwn(tt,ut))ut=tt[ut];else if(ut===null)if(wt!==null&&"tool_use"in tt)ut=tt.tool_use;else{if(!("default"in tt))throw Error(`This model has multiple chat templates with no default specified! Please either pass a chat template or the name of the template you wish to use to the 'chat_template' argument. Available template names are ${Object.keys(tt).sort()}.`);ut=tt.default}}else if(ut===null){if(!this.chat_template)throw Error("Cannot use apply_chat_template() because tokenizer.chat_template is not set and no template argument was passed! For information about writing templates and setting the tokenizer.chat_template attribute, please see the documentation at https://huggingface.co/docs/transformers/main/en/chat_templating");ut=this.chat_template}return ut}apply_chat_template(ut,{tools:wt=null,documents:tt=null,chat_template:Ae=null,add_generation_prompt:Ge=!1,tokenize:at=!0,padding:Le=!1,truncation:vt=!1,max_length:Pt=null,return_tensor:ir=!0,return_dict:yr=!1,tokenizer_kwargs:hr={},...xr}={}){if(typeof(Ae=this.get_chat_template({chat_template:Ae,tools:wt}))!="string")throw Error("chat_template must be a string, but got "+typeof Ae);let Gr=this._compiled_template_cache.get(Ae);Gr===void 0&&(Gr=new N.Template(Ae),this._compiled_template_cache.set(Ae,Gr));const wr=Object.create(null);for(const gs of Gs){const Xr=this.getToken(gs);Xr&&(wr[gs]=Xr)}const _r=Gr.render({messages:ut,add_generation_prompt:Ge,tools:wt,documents:tt,...wr,...xr});if(at){const gs=this._call(_r,{add_special_tokens:!1,padding:Le,truncation:vt,max_length:Pt,return_tensor:ir,...hr});return yr?gs:gs.input_ids}return _r}}class wn extends is{constructor(){super(...arguments);We(this,"return_token_type_ids",!0)}}class oa extends is{constructor(){super(...arguments);We(this,"return_token_type_ids",!0)}}class Ea extends is{constructor(){super(...arguments);We(this,"return_token_type_ids",!0)}}class gr extends is{constructor(){super(...arguments);We(this,"return_token_type_ids",!0)}}class Wr extends is{constructor(){super(...arguments);We(this,"return_token_type_ids",!0)}}class vr extends is{constructor(){super(...arguments);We(this,"return_token_type_ids",!0)}}class Es extends is{constructor(){super(...arguments);We(this,"return_token_type_ids",!0)}}class pn extends is{constructor(){super(...arguments);We(this,"return_token_type_ids",!0)}}class Ba extends is{constructor(){super(...arguments);We(this,"return_token_type_ids",!0)}}class In extends is{}class ln extends is{}class hn extends is{constructor(ut,wt){super(ut,wt);We(this,"return_token_type_ids",!0);console.warn('WARNING: `XLMTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}}class kn extends is{constructor(){super(...arguments);We(this,"return_token_type_ids",!0)}}class sa extends is{}class tr extends is{}class Qr extends is{}class jr extends is{constructor(Qe,ut){super(Qe,ut),this.languageRegex=/^[a-z]{2}_[A-Z]{2}$/,this.language_codes=this.special_tokens.filter(wt=>this.languageRegex.test(wt)),this.lang_to_token=wt=>wt}_build_translation_inputs(Qe,ut,wt){return Dn(this,Qe,ut,wt)}}class Vs extends jr{}class xn extends is{}class Ss extends is{}const Ls="▁";class Xa extends is{constructor(ut,wt){super(ut,wt);We(this,"padding_side","left");this.legacy=wt.legacy??!0,this.legacy||(this.normalizer=null,this.pre_tokenizer=new Ht({replacement:Ls,add_prefix_space:!0,prepend_scheme:"first"}))}_encode_text(ut){if(ut===null)return null;if(this.legacy||ut.length===0)return super._encode_text(ut);let wt=super._encode_text(Ls+ut.replaceAll(Ls," "));return wt.length>1&&wt[0]===Ls&&this.special_tokens.includes(wt[1])&&(wt=wt.slice(1)),wt}}class _a extends is{}class Tn extends is{}class Ms extends is{}class Mi extends is{}class Ma extends is{}class Jn extends is{}class $n extends is{}class Ei extends is{}class Pn extends is{}function Dn(qt,Qe,ut,wt){if(!("language_codes"in qt)||!Array.isArray(qt.language_codes))throw new Error("Tokenizer must have `language_codes` attribute set and it should be an array of language ids.");if(!("languageRegex"in qt&&qt.languageRegex instanceof RegExp))throw new Error("Tokenizer must have `languageRegex` attribute set and it should be a regular expression.");if(!("lang_to_token"in qt)||typeof qt.lang_to_token!="function")throw new Error("Tokenizer must have `lang_to_token` attribute set and it should be a function.");const tt=wt.src_lang,Ae=wt.tgt_lang;if(!qt.language_codes.includes(Ae))throw new Error(`Target language code "${Ae}" is not valid. Must be one of: {${qt.language_codes.join(", ")}}`);if(tt!==void 0){if(!qt.language_codes.includes(tt))throw new Error(`Source language code "${tt}" is not valid. Must be one of: {${qt.language_codes.join(", ")}}`);for(const Ge of qt.post_processor.config.single)if("SpecialToken"in Ge&&qt.languageRegex.test(Ge.SpecialToken.id)){Ge.SpecialToken.id=qt.lang_to_token(tt);break}}return wt.forced_bos_token_id=qt.model.convert_tokens_to_ids([qt.lang_to_token(Ae)])[0],qt._call(Qe,ut)}class ma extends is{constructor(Qe,ut){super(Qe,ut),this.languageRegex=/^[a-z]{3}_[A-Z][a-z]{3}$/,this.language_codes=this.special_tokens.filter(wt=>this.languageRegex.test(wt)),this.lang_to_token=wt=>wt}_build_translation_inputs(Qe,ut,wt){return Dn(this,Qe,ut,wt)}}class Bi extends is{constructor(Qe,ut){super(Qe,ut),this.languageRegex=/^__[a-z]{2,3}__$/,this.language_codes=this.special_tokens.filter(wt=>this.languageRegex.test(wt)).map(wt=>wt.slice(2,-2)),this.lang_to_token=wt=>`__${wt}__`}_build_translation_inputs(Qe,ut,wt){return Dn(this,Qe,ut,wt)}}class Vn extends is{get timestamp_begin(){return this.model.convert_tokens_to_ids(["<|notimestamps|>"])[0]+1}_decode_asr(Qe,{return_timestamps:ut=!1,return_language:wt=!1,time_precision:tt=null,force_full_sequences:Ae=!0}={}){if(tt===null)throw Error("Must specify time_precision");let Ge=null;const at=ut==="word";function Le(){return{language:Ge,timestamp:[null,null],text:""}}const vt=[];let Pt=Le(),ir=0;const yr=this.timestamp_begin,hr=yr+1500;let xr=[],Gr=[],wr=!1,_r=null;const gs=new Set(this.all_special_ids);for(const Bs of Qe){const Or=Bs.tokens,Kt=at?Bs.token_timestamps:null;let rr=null,Lr=yr;if("stride"in Bs){const[Vr,Js,qs]=Bs.stride;if(ir-=Js,_r=Vr-qs,Js&&(Lr=Js/tt+yr),qs)for(let es=Or.length-1;es>=0;--es){const _s=Number(Or[es]);if(_s>=yr){if(rr!==null&&(_s-yr)*tt<_r)break;rr=_s}}}let Rs=[],Ws=[];for(let Vr=0;Vr<Or.length;++Vr){const Js=Number(Or[Vr]);if(gs.has(Js)){const qs=this.decode([Js]),es=D.WHISPER_LANGUAGE_MAPPING.get(qs.slice(2,-2));if(es!==void 0){if(Ge!==null&&es!==Ge&&!ut){xr.push(Rs);const _s=this.findLongestCommonSequence(xr)[0],Rr=this.decode(_s);Pt.text=Rr,vt.push(Pt),xr=[],Rs=[],Pt=Le()}Ge=Pt.language=es}}else if(Js>=yr&&Js<=hr){const qs=(Js-yr)*tt+ir,es=(0,U.round)(qs,2);if(rr!==null&&Js>=rr)wr=!0;else if(wr||xr.length>0&&Js<Lr)wr=!1;else if(Pt.timestamp[0]===null)Pt.timestamp[0]=es;else if(es!==Pt.timestamp[0]){Pt.timestamp[1]=es,xr.push(Rs),at&&Gr.push(Ws);const[_s,Rr]=this.findLongestCommonSequence(xr,Gr),cs=this.decode(_s);Pt.text=cs,at&&(Pt.words=this.collateWordTimestamps(_s,Rr,Ge)),vt.push(Pt),xr=[],Rs=[],Gr=[],Ws=[],Pt=Le()}}else if(Rs.push(Js),at){let qs,es=(0,U.round)(Kt[Vr]+ir,2);if(Vr+1<Kt.length){qs=(0,U.round)(Kt[Vr+1]+ir,2);const _s=this.decode([Js]);ce.test(_s)&&(qs=(0,U.round)(Math.min(es+tt,qs),2))}else qs=null;Ws.push([es,qs])}}if("stride"in Bs){const[Vr,Js,qs]=Bs.stride;ir+=Vr-qs}Rs.length>0?(xr.push(Rs),at&&Gr.push(Ws)):xr.every(Vr=>Vr.length===0)&&(Pt=Le(),xr=[],Rs=[],Gr=[],Ws=[])}if(xr.length>0){if(Ae&&ut)throw new Error("Whisper did not predict an ending timestamp, which can happen if audio is cut off in the middle of a word. Also make sure WhisperTimeStampLogitsProcessor was used during generation.");const[Bs,Or]=this.findLongestCommonSequence(xr,Gr),Kt=this.decode(Bs);Pt.text=Kt,at&&(Pt.words=this.collateWordTimestamps(Bs,Or,Ge)),vt.push(Pt)}let Xr=Object.create(null);const hs=vt.map(Bs=>Bs.text).join("");if(ut||wt){for(let Bs=0;Bs<vt.length;++Bs){const Or=vt[Bs];ut||delete Or.timestamp,wt||delete Or.language}if(at){const Bs=[];for(const Or of vt)for(const Kt of Or.words)Bs.push(Kt);Xr={chunks:Bs}}else Xr={chunks:vt}}return[hs,Xr]}findLongestCommonSequence(Qe,ut=null){let wt=Qe[0],tt=wt.length,Ae=[];const Ge=Array.isArray(ut)&&ut.length>0;let at=Ge?[]:null,Le=Ge?ut[0]:null;for(let vt=1;vt<Qe.length;++vt){const Pt=Qe[vt];let ir=0,yr=[tt,tt,0,0];const hr=Pt.length;for(let hs=1;hs<tt+hr;++hs){const Bs=Math.max(0,tt-hs),Or=Math.min(tt,tt+hr-hs),Kt=wt.slice(Bs,Or),rr=Math.max(0,hs-tt),Lr=Math.min(hr,hs),Rs=Pt.slice(rr,Lr);if(Kt.length!==Rs.length)throw new Error("There is a bug within whisper `decode_asr` function, please report it. Dropping to prevent bad inference.");let Ws;Ws=Ge?Kt.filter((Js,qs)=>Js===Rs[qs]&&Le[Bs+qs]<=ut[vt][rr+qs]).length:Kt.filter((Js,qs)=>Js===Rs[qs]).length;const Vr=Ws/hs+hs/1e4;Ws>1&&Vr>ir&&(ir=Vr,yr=[Bs,Or,rr,Lr])}const[xr,Gr,wr,_r]=yr,gs=Math.floor((Gr+xr)/2),Xr=Math.floor((_r+wr)/2);Ae.push(...wt.slice(0,gs)),wt=Pt.slice(Xr),tt=wt.length,Ge&&(at.push(...Le.slice(0,gs)),Le=ut[vt].slice(Xr))}return Ae.push(...wt),Ge?(at.push(...Le),[Ae,at]):[Ae,[]]}collateWordTimestamps(Qe,ut,wt){const[tt,Ae,Ge]=this.combineTokensIntoWords(Qe,wt),at=[];for(let Le=0;Le<tt.length;++Le){const vt=Ge[Le];at.push({text:tt[Le],timestamp:[ut[vt.at(0)][0],ut[vt.at(-1)][1]]})}return at}combineTokensIntoWords(Qe,ut,wt=`"'“¡¿([{-`,tt=`"'.。,，!！?？:：”)]}、`){let Ae,Ge,at;return["chinese","japanese","thai","lao","myanmar"].includes(ut=ut??"english")?[Ae,Ge,at]=this.splitTokensOnUnicode(Qe):[Ae,Ge,at]=this.splitTokensOnSpaces(Qe),this.mergePunctuations(Ae,Ge,at,wt,tt)}decode(Qe,ut){let wt;return ut!=null&&ut.decode_with_timestamps?(Qe instanceof H.Tensor&&(Qe=oe(Qe)),wt=this.decodeWithTimestamps(Qe,ut)):wt=super.decode(Qe,ut),wt}decodeWithTimestamps(Qe,ut){const wt=(ut==null?void 0:ut.time_precision)??.02,tt=Array.from(this.all_special_ids).at(-1)+1;let Ae=[[]];for(let Ge of Qe)if(Ge=Number(Ge),Ge>=tt){const at=((Ge-tt)*wt).toFixed(2);Ae.push(`<|${at}|>`),Ae.push([])}else Ae[Ae.length-1].push(Ge);return Ae=Ae.map(Ge=>typeof Ge=="string"?Ge:super.decode(Ge,ut)),Ae.join("")}splitTokensOnUnicode(Qe){const ut=this.decode(Qe,{decode_with_timestamps:!0}),wt=[],tt=[],Ae=[];let Ge=[],at=[],Le=0;for(let vt=0;vt<Qe.length;++vt){const Pt=Qe[vt];Ge.push(Pt),at.push(vt);const ir=this.decode(Ge,{decode_with_timestamps:!0});ir.includes("�")&&ut[Le+ir.indexOf("�")]!=="�"||(wt.push(ir),tt.push(Ge),Ae.push(at),Ge=[],at=[],Le+=ir.length)}return[wt,tt,Ae]}splitTokensOnSpaces(Qe){const[ut,wt,tt]=this.splitTokensOnUnicode(Qe),Ae=[],Ge=[],at=[],Le=new RegExp(`^[${re}]$`,"gu");for(let vt=0;vt<ut.length;++vt){const Pt=ut[vt],ir=wt[vt],yr=tt[vt],hr=ir[0]>=this.model.tokens_to_ids.get("<|endoftext|>"),xr=Pt.startsWith(" "),Gr=Pt.trim(),wr=Le.test(Gr);if(hr||xr||wr||Ae.length===0)Ae.push(Pt),Ge.push(ir),at.push(yr);else{const _r=Ae.length-1;Ae[_r]+=Pt,Ge[_r].push(...ir),at[_r].push(...yr)}}return[Ae,Ge,at]}mergePunctuations(Qe,ut,wt,tt,Ae){const Ge=structuredClone(Qe),at=structuredClone(ut),Le=structuredClone(wt);let vt=Ge.length-2,Pt=Ge.length-1;for(;vt>=0;)Ge[vt].startsWith(" ")&&tt.includes(Ge[vt].trim())?(Ge[Pt]=Ge[vt]+Ge[Pt],at[Pt]=(0,F.mergeArrays)(at[vt],at[Pt]),Le[Pt]=(0,F.mergeArrays)(Le[vt],Le[Pt]),Ge[vt]="",at[vt]=[],Le[vt]=[]):Pt=vt,--vt;for(vt=0,Pt=1;Pt<Ge.length;)!Ge[vt].endsWith(" ")&&Ae.includes(Ge[Pt])?(Ge[vt]+=Ge[Pt],at[vt]=(0,F.mergeArrays)(at[vt],at[Pt]),Le[vt]=(0,F.mergeArrays)(Le[vt],Le[Pt]),Ge[Pt]="",at[Pt]=[],Le[Pt]=[]):vt=Pt,++Pt;return[Ge.filter(ir=>ir),at.filter(ir=>ir.length>0),Le.filter(ir=>ir.length>0)]}}class Sn extends is{}class cn extends is{}class ei extends is{}class ti extends is{constructor(Qe,ut){super(Qe,ut),this.languageRegex=/^(>>\w+<<)\s*/g,this.supported_language_codes=this.model.vocab.filter(wt=>this.languageRegex.test(wt)),console.warn('WARNING: `MarianTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}_encode_text(Qe){if(Qe===null)return null;const[ut,...wt]=Qe.trim().split(this.languageRegex);if(wt.length===0)return super._encode_text(ut);if(wt.length===2){const[tt,Ae]=wt;return this.supported_language_codes.includes(tt)||console.warn(`Unsupported language code "${tt}" detected, which may lead to unexpected behavior. Should be one of: ${JSON.stringify(this.supported_language_codes)}`),(0,F.mergeArrays)([tt],super._encode_text(Ae))}}}class ri extends is{}class ds extends is{}class ys extends is{}class qr extends is{}class pi extends is{}class Ai extends is{constructor(Qe,ut){super(Qe,ut),this.decoder=new Dt({})}}class hi extends is{}class Wn extends is{}class Gn{static async from_pretrained(Qe,{progress_callback:ut=null,config:wt=null,cache_dir:tt=null,local_files_only:Ae=!1,revision:Ge="main",legacy:at=null}={}){var yr;const[Le,vt]=await R(Qe,{progress_callback:ut,config:wt,cache_dir:tt,local_files_only:Ae,revision:Ge,legacy:at}),Pt=((yr=vt.tokenizer_class)==null?void 0:yr.replace(/Fast$/,""))??"PreTrainedTokenizer";let ir=this.TOKENIZER_CLASS_MAPPING[Pt];return ir||(console.warn(`Unknown tokenizer class "${Pt}", attempting to construct from base class.`),ir=is),new ir(Le,vt)}}We(Gn,"TOKENIZER_CLASS_MAPPING",{T5Tokenizer:sa,DistilBertTokenizer:In,CamembertTokenizer:ln,DebertaTokenizer:Wr,DebertaV2Tokenizer:vr,BertTokenizer:wn,HerbertTokenizer:Es,ConvBertTokenizer:pn,RoFormerTokenizer:Ba,XLMTokenizer:hn,ElectraTokenizer:kn,MobileBertTokenizer:Ea,SqueezeBertTokenizer:gr,AlbertTokenizer:oa,GPT2Tokenizer:tr,BartTokenizer:Qr,MBartTokenizer:jr,MBart50Tokenizer:Vs,RobertaTokenizer:xn,WhisperTokenizer:Vn,CodeGenTokenizer:Sn,CLIPTokenizer:cn,SiglipTokenizer:ei,MarianTokenizer:ti,BloomTokenizer:Ss,NllbTokenizer:ma,M2M100Tokenizer:Bi,LlamaTokenizer:Xa,CodeLlamaTokenizer:_a,XLMRobertaTokenizer:Tn,MPNetTokenizer:Ms,FalconTokenizer:Mi,GPTNeoXTokenizer:Ma,EsmTokenizer:Jn,Wav2Vec2CTCTokenizer:ri,BlenderbotTokenizer:ds,BlenderbotSmallTokenizer:ys,SpeechT5Tokenizer:qr,NougatTokenizer:pi,VitsTokenizer:Ai,Qwen2Tokenizer:$n,GemmaTokenizer:Ei,Grok1Tokenizer:Pn,CohereTokenizer:hi,MgpstrTokenizer:Wn,PreTrainedTokenizer:is})},"./src/utils/audio.js":(T,k,A)=>{A.r(k),A.d(k,{RawAudio:()=>e,hamming:()=>Q,hanning:()=>R,mel_filter_bank:()=>ee,read_audio:()=>N,spectrogram:()=>ce,window_function:()=>g});var w=A("./src/utils/hub.js"),F=A("./src/utils/maths.js"),Y=A("./src/utils/core.js"),U=A("./src/env.js"),H=A("?7a2c"),z=A("./src/utils/tensor.js");async function N(u,B){if(typeof AudioContext>"u")throw Error("Unable to load audio from path/URL since `AudioContext` is not available in your environment. Instead, audio data should be passed directly to the pipeline/processor. For more information and some example code, see https://huggingface.co/docs/transformers.js/guides/node-audio-processing.");const ue=await(await(0,w.getFile)(u)).arrayBuffer(),G=new AudioContext({sampleRate:B});B===void 0&&console.warn(`No sampling rate provided, using default of ${G.sampleRate}Hz.`);const K=await G.decodeAudioData(ue);let Ve;if(K.numberOfChannels===2){const ve=Math.sqrt(2),Re=K.getChannelData(0),Ke=K.getChannelData(1);Ve=new Float32Array(Re.length);for(let nt=0;nt<K.length;++nt)Ve[nt]=ve*(Re[nt]+Ke[nt])/2}else Ve=K.getChannelData(0);return Ve}function D(u,B){if(u<1)return new Float64Array;if(u===1)return new Float64Array([1]);const ue=1-B,G=2*Math.PI/(u-1),K=new Float64Array(u);for(let Ve=0;Ve<u;++Ve)K[Ve]=B-ue*Math.cos(Ve*G);return K}function R(u){return D(u,.5)}function Q(u){return D(u,.54)}const J={htk:u=>2595*Math.log10(1+u/700),kaldi:u=>1127*Math.log(1+u/700),slaney:(u,B=1e3,ue=15,G=27/Math.log(6.4))=>u>=B?ue+Math.log(u/B)*G:3*u/200};function oe(u,B="htk"){const ue=J[B];if(!ue)throw new Error('mel_scale should be one of "htk", "slaney" or "kaldi".');return typeof u=="number"?ue(u):u.map(G=>ue(G))}const be={htk:u=>700*(10**(u/2595)-1),kaldi:u=>700*(Math.exp(u/1127)-1),slaney:(u,B=1e3,ue=15,G=Math.log(6.4)/27)=>u>=ue?B*Math.exp(G*(u-ue)):200*u/3};function Ie(u,B,ue){const G=(B-u)/(ue-1);return Float64Array.from({length:ue},(K,Ve)=>u+G*Ve)}function ee(u,B,ue,G,K,Ve=null,ve="htk",Re=!1){if(Ve!==null&&Ve!=="slaney")throw new Error('norm must be one of null or "slaney"');const Ke=Ie(oe(ue,ve),oe(G,ve),B+2);let nt,Ct=function(et,ze="htk"){const Se=be[ze];if(!Se)throw new Error('mel_scale should be one of "htk", "slaney" or "kaldi".');return typeof et=="number"?Se(et):et.map(xe=>Se(xe))}(Ke,ve);if(Re){const et=K/(2*u);nt=oe(Float64Array.from({length:u},(ze,Se)=>Se*et),ve),Ct=Ke}else nt=Ie(0,Math.floor(K/2),u);const ht=function(et,ze){const Se=Float64Array.from({length:ze.length-1},(gt,_t)=>ze[_t+1]-ze[_t]),xe=Array.from({length:et.length},()=>new Array(ze.length));for(let gt=0;gt<et.length;++gt){const _t=xe[gt];for(let Je=0;Je<ze.length;++Je)_t[Je]=ze[Je]-et[gt]}const Me=ze.length-2,ft=Array.from({length:Me},()=>new Array(et.length));for(let gt=0;gt<et.length;++gt){const _t=xe[gt];for(let Je=0;Je<Me;++Je){const bt=-_t[Je]/Se[Je],rt=_t[Je+2]/Se[Je+1];ft[Je][gt]=Math.max(0,Math.min(bt,rt))}}return ft}(nt,Ct);if(Ve!==null&&Ve==="slaney")for(let et=0;et<B;++et){const ze=ht[et],Se=2/(Ct[et+2]-Ct[et]);for(let xe=0;xe<u;++xe)ze[xe]*=Se}return ht}function re(u,B,ue,G,K){if(ue<=0)throw new Error("reference must be greater than zero");if(G<=0)throw new Error("min_value must be greater than zero");ue=Math.max(G,ue);const Ve=Math.log10(ue);for(let ve=0;ve<u.length;++ve)u[ve]=B*Math.log10(Math.max(G,u[ve])-Ve);if(K!==null){if(K<=0)throw new Error("db_range must be greater than zero");const ve=(0,F.max)(u)[0]-K;for(let Re=0;Re<u.length;++Re)u[Re]=Math.max(u[Re],ve)}return u}async function ce(u,B,ue,G,{fft_length:K=null,power:Ve=1,center:ve=!0,pad_mode:Re="reflect",onesided:Ke=!0,preemphasis:nt=null,mel_filters:Ct=null,mel_floor:ht=1e-10,log_mel:et=null,reference:ze=1,min_value:Se=1e-10,db_range:xe=null,remove_dc_offset:Me=null,min_num_frames:ft=null,max_num_frames:gt=null,do_pad:_t=!0,transpose:Je=!1}={}){const bt=B.length;if(K===null&&(K=ue),ue>K)throw Error(`frame_length (${ue}) may not be larger than fft_length (${K})`);if(bt!==ue)throw new Error(`Length of the window (${bt}) must equal frame_length (${ue})`);if(G<=0)throw new Error("hop_length must be greater than zero");if(Ve===null&&Ct!==null)throw new Error("You have provided `mel_filters` but `power` is `None`. Mel spectrogram computation is not yet supported for complex-valued spectrogram. Specify `power` to fix this issue.");if(ve){if(Re!=="reflect")throw new Error(`pad_mode="${Re}" not implemented yet.`);const Pe=Math.floor((K-1)/2)+1;u=function(X,ge,fe){const He=new X.constructor(X.length+ge+fe),ct=X.length-1;for(let kt=0;kt<X.length;++kt)He[ge+kt]=X[kt];for(let kt=1;kt<=ge;++kt)He[ge-kt]=X[(0,Y.calculateReflectOffset)(kt,ct)];for(let kt=1;kt<=fe;++kt)He[ct+ge+kt]=X[(0,Y.calculateReflectOffset)(ct-kt,ct)];return He}(u,Pe,Pe)}let rt=Math.floor(1+Math.floor((u.length-ue)/G));ft!==null&&rt<ft&&(rt=ft);const Ne=Ke?Math.floor(K/2)+1:K;let it=rt,Et=rt;gt!==null&&(gt>rt?_t&&(Et=gt):Et=it=gt);const $e=new F.FFT(K),It=new Float64Array(K),Tt=new Float64Array($e.outputBufferSize),zt=new Float32Array(Ne*Et);for(let Pe=0;Pe<it;++Pe){const X=Pe*G,ge=Math.min(u.length-X,ue);ge!==ue&&It.fill(0,0,ue);for(let fe=0;fe<ge;++fe)It[fe]=u[X+fe];if(Me){let fe=0;for(let ct=0;ct<ge;++ct)fe+=It[ct];const He=fe/ge;for(let ct=0;ct<ge;++ct)It[ct]-=He}if(nt!==null){for(let fe=ge-1;fe>=1;--fe)It[fe]-=nt*It[fe-1];It[0]*=1-nt}for(let fe=0;fe<B.length;++fe)It[fe]*=B[fe];$e.realTransform(Tt,It);for(let fe=0;fe<Ne;++fe){const He=fe<<1;zt[fe*Et+Pe]=Tt[He]**2+Tt[He+1]**2}}if(Ve!==null&&Ve!==2){const Pe=2/Ve;for(let X=0;X<zt.length;++X)zt[X]**=Pe}const Wt=Ct.length;let pe=await(0,z.matmul)(new z.Tensor("float32",Ct.flat(),[Wt,Ne]),new z.Tensor("float32",zt,[Ne,Et]));Je&&(pe=pe.transpose(1,0));const Ut=pe.data;for(let Pe=0;Pe<Ut.length;++Pe)Ut[Pe]=Math.max(ht,Ut[Pe]);if(Ve!==null&&et!==null){const Pe=Math.min(Ut.length,it*Wt);switch(et){case"log":for(let X=0;X<Pe;++X)Ut[X]=Math.log(Ut[X]);break;case"log10":for(let X=0;X<Pe;++X)Ut[X]=Math.log10(Ut[X]);break;case"dB":if(Ve===1)(function(X,ge=1,fe=1e-5,He=null){re(X,20,ge,fe,He)})(Ut,ze,Se,xe);else{if(Ve!==2)throw new Error(`Cannot use log_mel option '${et}' with power ${Ve}`);(function(X,ge=1,fe=1e-10,He=null){re(X,10,ge,fe,He)})(Ut,ze,Se,xe)}break;default:throw new Error(`log_mel must be one of null, 'log', 'log10' or 'dB'. Got '${et}'`)}}return pe}function g(u,B,{periodic:ue=!0,frame_length:G=null,center:K=!0}={}){const Ve=ue?u+1:u;let ve;switch(B){case"boxcar":ve=new Float64Array(Ve).fill(1);break;case"hann":case"hann_window":ve=R(Ve);break;case"hamming":ve=Q(Ve);break;case"povey":ve=R(Ve).map(Re=>Math.pow(Re,.85));break;default:throw new Error(`Unknown window type ${B}.`)}if(ue&&(ve=ve.subarray(0,u)),G===null)return ve;if(u>G)throw new Error(`Length of the window (${u}) may not be larger than frame_length (${G})`);return ve}function I(u,B,ue){for(let G=0;G<ue.length;++G)u.setUint8(B+G,ue.charCodeAt(G))}class e{constructor(B,ue){this.audio=B,this.sampling_rate=ue}toWav(){return function(B,ue){let G=44;const K=new ArrayBuffer(G+4*B.length),Ve=new DataView(K);I(Ve,0,"RIFF"),Ve.setUint32(4,36+4*B.length,!0),I(Ve,8,"WAVE"),I(Ve,12,"fmt "),Ve.setUint32(16,16,!0),Ve.setUint16(20,3,!0),Ve.setUint16(22,1,!0),Ve.setUint32(24,ue,!0),Ve.setUint32(28,4*ue,!0),Ve.setUint16(32,4,!0),Ve.setUint16(34,32,!0),I(Ve,36,"data"),Ve.setUint32(40,4*B.length,!0);for(let ve=0;ve<B.length;++ve,G+=4)Ve.setFloat32(G,B[ve],!0);return K}(this.audio,this.sampling_rate)}toBlob(){const B=this.toWav();return new Blob([B],{type:"audio/wav"})}async save(B){let ue;if(U.apis.IS_BROWSER_ENV){if(U.apis.IS_WEBWORKER_ENV)throw new Error("Unable to save a file from a Web Worker.");ue=Y.saveBlob}else{if(!U.apis.IS_FS_AVAILABLE)throw new Error("Unable to save because filesystem is disabled in this environment.");ue=async(G,K)=>{let Ve=await K.arrayBuffer();H.writeFileSync(G,Buffer.from(Ve))}}await ue(B,this.toBlob())}}},"./src/utils/constants.js":(T,k,A)=>{A.r(k),A.d(k,{CHAT_TEMPLATE_NAME:()=>z,CONFIG_NAME:()=>F,FEATURE_EXTRACTOR_NAME:()=>Y,GENERATION_CONFIG_NAME:()=>N,GITHUB_ISSUE_URL:()=>w,IMAGE_PROCESSOR_NAME:()=>U,PROCESSOR_NAME:()=>H});const w="https://github.com/huggingface/transformers.js/issues/new/choose",F="config.json",Y="preprocessor_config.json",U=Y,H="processor_config.json",z="chat_template.json",N="generation_config.json"},"./src/utils/core.js":(T,k,A)=>{function w(re,ce){re&&re(ce)}function F(re){return Object.fromEntries(Object.entries(re).map(([ce,g])=>[g,ce]))}function Y(re){return re.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}function U(re){var ce,g,I;return((I=(g=(ce=re==null?void 0:re.prototype)==null?void 0:ce.__proto__)==null?void 0:g.constructor)==null?void 0:I.name)==="TypedArray"}function H(re){return Number.isInteger(re)||typeof re=="bigint"}function z(re){return re==null||re===-1}function N(re){const ce=[];let g=re;for(;Array.isArray(g);)ce.push(g.length),g=g[0];return ce}function D(re,ce,g=void 0){const I=re[ce];if(I!==void 0)return delete re[ce],I;if(g===void 0)throw Error(`Key ${ce} does not exist in object.`);return g}function R(...re){return Array.prototype.concat.apply([],re)}function Q(...re){return re.reduce((ce,g)=>ce.flatMap(I=>g.map(e=>[I,e])))}function J(re,ce){return Math.abs((re+ce)%(2*ce)-ce)}function oe(re,ce){const g=URL.createObjectURL(ce),I=document.createElement("a");I.href=g,I.download=re,I.click(),I.remove(),URL.revokeObjectURL(g)}function be(re,ce){return Object.assign({},...ce.map(g=>{if(re[g]!==void 0)return{[g]:re[g]}}))}function Ie(re){let ce=0;for(const g of re)++ce;return ce}function ee(re,ce){let g=0;for(const I of re)I===ce&&++g;return g}A.r(k),A.d(k,{calculateDimensions:()=>N,calculateReflectOffset:()=>J,count:()=>ee,dispatchCallback:()=>w,escapeRegExp:()=>Y,isIntegralNumber:()=>H,isNullishDimension:()=>z,isTypedArray:()=>U,len:()=>Ie,mergeArrays:()=>R,pick:()=>be,pop:()=>D,product:()=>Q,reverseDictionary:()=>F,saveBlob:()=>oe})},"./src/utils/data-structures.js":(T,k,A)=>{A.r(k),A.d(k,{CharTrie:()=>F,PriorityQueue:()=>w,TokenLattice:()=>U});class w{constructor(N=(R,Q)=>R>Q,D=1/0){this._heap=[],this._comparator=N,this._maxSize=D}get size(){return this._heap.length}isEmpty(){return this.size===0}peek(){return this._heap[0]}push(...N){return this.extend(N)}extend(N){for(const D of N)if(this.size<this._maxSize)this._heap.push(D),this._siftUp();else{const R=this._smallest();this._comparator(D,this._heap[R])&&(this._heap[R]=D,this._siftUpFrom(R))}return this.size}pop(){const N=this.peek(),D=this.size-1;return D>0&&this._swap(0,D),this._heap.pop(),this._siftDown(),N}replace(N){const D=this.peek();return this._heap[0]=N,this._siftDown(),D}_parent(N){return(N+1>>>1)-1}_left(N){return 1+(N<<1)}_right(N){return N+1<<1}_greater(N,D){return this._comparator(this._heap[N],this._heap[D])}_swap(N,D){const R=this._heap[N];this._heap[N]=this._heap[D],this._heap[D]=R}_siftUp(){this._siftUpFrom(this.size-1)}_siftUpFrom(N){for(;N>0&&this._greater(N,this._parent(N));)this._swap(N,this._parent(N)),N=this._parent(N)}_siftDown(){let N=0;for(;this._left(N)<this.size&&this._greater(this._left(N),N)||this._right(N)<this.size&&this._greater(this._right(N),N);){const D=this._right(N)<this.size&&this._greater(this._right(N),this._left(N))?this._right(N):this._left(N);this._swap(N,D),N=D}}_smallest(){return 2**Math.floor(Math.log2(this.size))-1}}class F{constructor(){this.root=Y.default()}extend(N){for(const D of N)this.push(D)}push(N){let D=this.root;for(const R of N){let Q=D.children.get(R);Q===void 0&&(Q=Y.default(),D.children.set(R,Q)),D=Q}D.isLeaf=!0}*commonPrefixSearch(N){let D=this.root;if(D===void 0)return;let R="";for(const Q of N){if(R+=Q,D=D.children.get(Q),D===void 0)return;D.isLeaf&&(yield R)}}}class Y{constructor(N,D){this.isLeaf=N,this.children=D}static default(){return new Y(!1,new Map)}}class U{constructor(N,D,R){this.chars=Array.from(N),this.len=this.chars.length,this.bosTokenId=D,this.eosTokenId=R,this.nodes=[],this.beginNodes=Array.from({length:this.len+1},()=>[]),this.endNodes=Array.from({length:this.len+1},()=>[]);const Q=new H(this.bosTokenId,0,0,0,0),J=new H(this.eosTokenId,1,this.len,0,0);this.nodes.push(Q.clone()),this.nodes.push(J.clone()),this.beginNodes[this.len].push(J),this.endNodes[0].push(Q)}insert(N,D,R,Q){const J=this.nodes.length,oe=new H(Q,J,N,D,R);this.beginNodes[N].push(oe),this.endNodes[N+D].push(oe),this.nodes.push(oe)}viterbi(){const N=this.len;let D=0;for(;D<=N;){if(this.beginNodes[D].length==0)return[];for(let oe of this.beginNodes[D]){oe.prev=null;let be=0,Ie=null;for(let ee of this.endNodes[D]){const re=ee.backtraceScore+oe.score;(Ie===null||re>be)&&(Ie=ee.clone(),be=re)}if(Ie===null)return[];oe.prev=Ie,oe.backtraceScore=be}++D}const R=[],Q=this.beginNodes[N][0].prev;if(Q===null)return[];let J=Q.clone();for(;J.prev!==null;)R.push(J.clone()),J=J.clone().prev.clone();return R.reverse(),R}piece(N){return this.chars.slice(N.pos,N.pos+N.length).join("")}tokens(){return this.viterbi().map(N=>this.piece(N))}tokenIds(){return this.viterbi().map(N=>N.tokenId)}}class H{constructor(N,D,R,Q,J){this.tokenId=N,this.nodeId=D,this.pos=R,this.length=Q,this.score=J,this.prev=null,this.backtraceScore=0}clone(){const N=new H(this.tokenId,this.nodeId,this.pos,this.length,this.score);return N.prev=this.prev,N.backtraceScore=this.backtraceScore,N}}},"./src/utils/devices.js":(T,k,A)=>{A.r(k),A.d(k,{DEVICE_TYPES:()=>w});const w=Object.freeze({auto:"auto",gpu:"gpu",cpu:"cpu",wasm:"wasm",webgpu:"webgpu",cuda:"cuda",dml:"dml",webnn:"webnn","webnn-npu":"webnn-npu","webnn-gpu":"webnn-gpu","webnn-cpu":"webnn-cpu"})},"./src/utils/dtypes.js":(T,k,A)=>{A.r(k),A.d(k,{DATA_TYPES:()=>U,DEFAULT_DEVICE_DTYPE_MAPPING:()=>H,DEFAULT_DTYPE_SUFFIX_MAPPING:()=>z,isWebGpuFp16Supported:()=>Y});var w=A("./src/env.js"),F=A("./src/utils/devices.js");const Y=function(){let N;return async function(){if(N===void 0)if(w.apis.IS_WEBGPU_AVAILABLE)try{N=(await navigator.gpu.requestAdapter()).features.has("shader-f16")}catch{N=!1}else N=!1;return N}}(),U=Object.freeze({auto:"auto",fp32:"fp32",fp16:"fp16",q8:"q8",int8:"int8",uint8:"uint8",q4:"q4",bnb4:"bnb4",q4f16:"q4f16"}),H=Object.freeze({[F.DEVICE_TYPES.wasm]:U.q8}),z=Object.freeze({[U.fp32]:"",[U.fp16]:"_fp16",[U.int8]:"_int8",[U.uint8]:"_uint8",[U.q8]:"_quantized",[U.q4]:"_q4",[U.q4f16]:"_q4f16",[U.bnb4]:"_bnb4"})},"./src/utils/generic.js":(T,k,A)=>{A.r(k),A.d(k,{Callable:()=>w});const w=class{constructor(){let F=function(...Y){return F._call(...Y)};return Object.setPrototypeOf(F,new.target.prototype)}_call(...F){throw Error("Must implement _call method in subclass")}}},"./src/utils/hub.js":(T,k,A)=>{A.r(k),A.d(k,{getFile:()=>D,getModelFile:()=>J,getModelJSON:()=>oe});var w=A("?7a2c"),F=A("?a42a"),Y=A("./src/env.js"),U=A("./src/utils/core.js");const H={txt:"text/plain",html:"text/html",css:"text/css",js:"text/javascript",json:"application/json",png:"image/png",jpg:"image/jpeg",jpeg:"image/jpeg",gif:"image/gif"};class z{constructor(ee){if(this.filePath=ee,this.headers=new Headers,this.exists=w.existsSync(ee),this.exists){this.status=200,this.statusText="OK";let re=w.statSync(ee);this.headers.set("content-length",re.size.toString()),this.updateContentType();let ce=this;this.body=new ReadableStream({start(g){ce.arrayBuffer().then(I=>{g.enqueue(new Uint8Array(I)),g.close()})}})}else this.status=404,this.statusText="Not Found",this.body=null}updateContentType(){const ee=this.filePath.toString().split(".").pop().toLowerCase();this.headers.set("content-type",H[ee]??"application/octet-stream")}clone(){let ee=new z(this.filePath);return ee.exists=this.exists,ee.status=this.status,ee.statusText=this.statusText,ee.headers=new Headers(this.headers),ee}async arrayBuffer(){return(await w.promises.readFile(this.filePath)).buffer}async blob(){const ee=await w.promises.readFile(this.filePath);return new Blob([ee],{type:this.headers.get("content-type")})}async text(){return await w.promises.readFile(this.filePath,"utf8")}async json(){return JSON.parse(await this.text())}}function N(Ie,ee=null,re=null){let ce;try{ce=new URL(Ie)}catch{return!1}return!(ee&&!ee.includes(ce.protocol))&&!(re&&!re.includes(ce.hostname))}async function D(Ie){var ee;if(Y.env.useFS&&!N(Ie,["http:","https:","blob:"]))return new z(Ie);if(typeof process<"u"&&((ee=process==null?void 0:process.release)==null?void 0:ee.name)==="node"){const re=!!(dd!=null&&dd.TESTING_REMOTELY),ce=Y.env.version,g=new Headers;if(g.set("User-Agent",`transformers.js/${ce}; is_ci/${re};`),N(Ie,["http:","https:"],["huggingface.co","hf.co"])){const I=(dd==null?void 0:dd.HF_TOKEN)??(dd==null?void 0:dd.HF_ACCESS_TOKEN);I&&g.set("Authorization",`Bearer ${I}`)}return fetch(Ie,{headers:g})}return fetch(Ie)}const R={400:"Bad request error occurred while trying to load file",401:"Unauthorized access to file",403:"Forbidden access to file",404:"Could not locate file",408:"Request timeout error occurred while trying to load file",500:"Internal server error error occurred while trying to load file",502:"Bad gateway error occurred while trying to load file",503:"Service unavailable error occurred while trying to load file",504:"Gateway timeout error occurred while trying to load file"};class Q{constructor(ee){this.path=ee}async match(ee){let re=F.join(this.path,ee),ce=new z(re);return ce.exists?ce:void 0}async put(ee,re){const ce=Buffer.from(await re.arrayBuffer());let g=F.join(this.path,ee);try{await w.promises.mkdir(F.dirname(g),{recursive:!0}),await w.promises.writeFile(g,ce)}catch(I){console.warn("An error occurred while writing the file to cache:",I)}}}async function J(Ie,ee,re=!0,ce={}){if(!Y.env.allowLocalModels){if(ce.local_files_only)throw Error("Invalid configuration detected: local models are disabled (`env.allowLocalModels=false`) but you have requested to only use local models (`local_files_only=true`).");if(!Y.env.allowRemoteModels)throw Error("Invalid configuration detected: both local and remote models are disabled. Fix by setting `env.allowLocalModels` or `env.allowRemoteModels` to `true`.")}let g;if((0,U.dispatchCallback)(ce.progress_callback,{status:"initiate",name:Ie,file:ee}),!g&&Y.env.useBrowserCache){if(typeof caches>"u")throw Error("Browser cache is not available in this environment.");try{g=await caches.open("transformers-cache")}catch(nt){console.warn("An error occurred while opening the browser cache:",nt)}}if(!g&&Y.env.useFSCache&&(g=new Q(ce.cache_dir??Y.env.cacheDir)),!g&&Y.env.useCustomCache){if(!Y.env.customCache)throw Error("`env.useCustomCache=true`, but `env.customCache` is not defined.");if(!Y.env.customCache.match||!Y.env.customCache.put)throw new Error("`env.customCache` must be an object which implements the `match` and `put` functions of the Web Cache API. For more information, see https://developer.mozilla.org/en-US/docs/Web/API/Cache");g=Y.env.customCache}const I=ce.revision??"main";let e,u,B=be(Ie,ee),ue=be(Y.env.localModelPath,B),G=be(Y.env.remoteHost,Y.env.remotePathTemplate.replaceAll("{model}",Ie).replaceAll("{revision}",encodeURIComponent(I)),ee),K=I==="main"?B:be(Ie,I,ee),Ve=g instanceof Q?K:G,ve=!1;g&&(u=await async function(nt,...Ct){for(let ht of Ct)try{let et=await nt.match(ht);if(et)return et}catch{continue}}(g,ue,Ve));const Re=u!==void 0;if(u===void 0){if(Y.env.allowLocalModels)if(N(B,["http:","https:"])){if(ce.local_files_only)throw new Error(`\`local_files_only=true\`, but attempted to load a remote file from: ${B}.`);if(!Y.env.allowRemoteModels)throw new Error(`\`env.allowRemoteModels=false\`, but attempted to load a remote file from: ${B}.`)}else try{u=await D(ue),e=ue}catch(nt){console.warn(`Unable to load from local path "${ue}": "${nt}"`)}if(u===void 0||u.status===404){if(ce.local_files_only||!Y.env.allowRemoteModels){if(re)throw Error(`\`local_files_only=true\` or \`env.allowRemoteModels=false\` and file was not found locally at "${ue}".`);return null}if(u=await D(G),u.status!==200)return function(nt,Ct,ht){if(!ht)return null;const et=R[nt]??`Error (${nt}) occurred while trying to load file`;throw Error(`${et}: "${Ct}".`)}(u.status,G,re);e=Ve}ve=g&&typeof Response<"u"&&u instanceof Response&&u.status===200}let Ke;return(0,U.dispatchCallback)(ce.progress_callback,{status:"download",name:Ie,file:ee}),ce.progress_callback?Re&&typeof navigator<"u"&&/firefox/i.test(navigator.userAgent)?(Ke=new Uint8Array(await u.arrayBuffer()),(0,U.dispatchCallback)(ce.progress_callback,{status:"progress",name:Ie,file:ee,progress:100,loaded:Ke.length,total:Ke.length})):Ke=await async function(nt,Ct){const ht=nt.headers.get("Content-Length");ht===null&&console.warn("Unable to determine content-length from response headers. Will expand buffer when needed.");let et=parseInt(ht??"0"),ze=new Uint8Array(et),Se=0;const xe=nt.body.getReader();async function Me(){const{done:ft,value:gt}=await xe.read();if(ft)return;let _t=Se+gt.length;if(_t>et){et=_t;let Je=new Uint8Array(et);Je.set(ze),ze=Je}return ze.set(gt,Se),Se=_t,Ct({progress:Se/et*100,loaded:Se,total:et}),Me()}return await Me(),ze}(u,nt=>{(0,U.dispatchCallback)(ce.progress_callback,{status:"progress",name:Ie,file:ee,...nt})}):Ke=new Uint8Array(await u.arrayBuffer()),ve&&e&&await g.match(e)===void 0&&await g.put(e,new Response(Ke,{headers:u.headers})).catch(nt=>{console.warn(`Unable to add response to browser cache: ${nt}.`)}),(0,U.dispatchCallback)(ce.progress_callback,{status:"done",name:Ie,file:ee}),Ke}async function oe(Ie,ee,re=!0,ce={}){let g=await J(Ie,ee,re,ce);if(g===null)return{};let I=new TextDecoder("utf-8").decode(g);return JSON.parse(I)}function be(...Ie){return(Ie=Ie.map((ee,re)=>(re&&(ee=ee.replace(new RegExp("^/"),"")),re!==Ie.length-1&&(ee=ee.replace(new RegExp("/$"),"")),ee))).join("/")}},"./src/utils/image.js":(T,k,A)=>{A.r(k),A.d(k,{RawImage:()=>oe,load_image:()=>be});var w=A("./src/utils/core.js"),F=A("./src/utils/hub.js"),Y=A("./src/env.js"),U=A("./src/utils/tensor.js"),H=A("?2b25");let z,N,D;const R=Y.apis.IS_BROWSER_ENV||Y.apis.IS_WEBWORKER_ENV;if(R)z=(Ie,ee)=>{if(!self.OffscreenCanvas)throw new Error("OffscreenCanvas not supported by this browser.");return new self.OffscreenCanvas(Ie,ee)},D=self.createImageBitmap,N=self.ImageData;else{if(!H)throw new Error("Unable to load image processing library.");D=async Ie=>{const ee=(await Ie.metadata()).channels,{data:re,info:ce}=await Ie.rotate().raw().toBuffer({resolveWithObject:!0}),g=new oe(new Uint8ClampedArray(re),ce.width,ce.height,ce.channels);return ee!==void 0&&ee!==ce.channels&&g.convert(ee),g}}const Q={0:"nearest",1:"lanczos",2:"bilinear",3:"bicubic",4:"box",5:"hamming"},J=new Map([["png","image/png"],["jpg","image/jpeg"],["jpeg","image/jpeg"],["gif","image/gif"]]);class oe{constructor(ee,re,ce,g){this.data=ee,this.width=re,this.height=ce,this.channels=g}get size(){return[this.width,this.height]}static async read(ee){if(ee instanceof oe)return ee;if(typeof ee=="string"||ee instanceof URL)return await this.fromURL(ee);throw new Error("Unsupported input type: "+typeof ee)}static fromCanvas(ee){if(!R)throw new Error("fromCanvas() is only supported in browser environments.");const re=ee.getContext("2d").getImageData(0,0,ee.width,ee.height).data;return new oe(re,ee.width,ee.height,4)}static async fromURL(ee){const re=await(0,F.getFile)(ee);if(re.status!==200)throw new Error(`Unable to read image from "${ee}" (${re.status} ${re.statusText})`);const ce=await re.blob();return this.fromBlob(ce)}static async fromBlob(ee){if(R){const re=await D(ee),ce=z(re.width,re.height).getContext("2d");return ce.drawImage(re,0,0),new this(ce.getImageData(0,0,re.width,re.height).data,re.width,re.height,4)}{const re=H(await ee.arrayBuffer());return await D(re)}}static fromTensor(ee,re="CHW"){if(ee.dims.length!==3)throw new Error(`Tensor should have 3 dimensions, but has ${ee.dims.length} dimensions.`);if(re==="CHW")ee=ee.transpose(1,2,0);else if(re!=="HWC")throw new Error(`Unsupported channel format: ${re}`);if(!(ee.data instanceof Uint8ClampedArray||ee.data instanceof Uint8Array))throw new Error(`Unsupported tensor type: ${ee.type}`);switch(ee.dims[2]){case 1:case 2:case 3:case 4:return new oe(ee.data,ee.dims[1],ee.dims[0],ee.dims[2]);default:throw new Error(`Unsupported number of channels: ${ee.dims[2]}`)}}grayscale(){if(this.channels===1)return this;const ee=new Uint8ClampedArray(this.width*this.height*1);switch(this.channels){case 3:case 4:for(let re=0,ce=0;re<this.data.length;re+=this.channels){const g=this.data[re],I=this.data[re+1],e=this.data[re+2];ee[ce++]=Math.round(.2989*g+.587*I+.114*e)}break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(ee,this.width,this.height,1)}rgb(){if(this.channels===3)return this;const ee=new Uint8ClampedArray(this.width*this.height*3);switch(this.channels){case 1:for(let re=0,ce=0;re<this.data.length;++re)ee[ce++]=this.data[re],ee[ce++]=this.data[re],ee[ce++]=this.data[re];break;case 4:for(let re=0,ce=0;re<this.data.length;re+=4)ee[ce++]=this.data[re],ee[ce++]=this.data[re+1],ee[ce++]=this.data[re+2];break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(ee,this.width,this.height,3)}rgba(){if(this.channels===4)return this;const ee=new Uint8ClampedArray(this.width*this.height*4);switch(this.channels){case 1:for(let re=0,ce=0;re<this.data.length;++re)ee[ce++]=this.data[re],ee[ce++]=this.data[re],ee[ce++]=this.data[re],ee[ce++]=255;break;case 3:for(let re=0,ce=0;re<this.data.length;re+=3)ee[ce++]=this.data[re],ee[ce++]=this.data[re+1],ee[ce++]=this.data[re+2],ee[ce++]=255;break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(ee,this.width,this.height,4)}putAlpha(ee){if(ee.width!==this.width||ee.height!==this.height)throw new Error(`Expected mask size to be ${this.width}x${this.height}, but got ${ee.width}x${ee.height}`);if(ee.channels!==1)throw new Error(`Expected mask to have 1 channel, but got ${ee.channels}`);const re=this.data,ce=ee.data,g=this.width*this.height;if(this.channels===3){const I=new Uint8ClampedArray(4*g);for(let e=0,u=0,B=0;e<g;++e)I[B++]=re[u++],I[B++]=re[u++],I[B++]=re[u++],I[B++]=ce[e];return this._update(I,this.width,this.height,4)}if(this.channels===4){for(let I=0;I<g;++I)re[4*I+3]=ce[I];return this}throw new Error(`Expected image to have 3 or 4 channels, but got ${this.channels}`)}async resize(ee,re,{resample:ce=2}={}){if(this.width===ee&&this.height===re)return this;let g=Q[ce]??ce;const I=(0,w.isNullishDimension)(ee),e=(0,w.isNullishDimension)(re);if(I&&e)return this;if(I?ee=re/this.height*this.width:e&&(re=ee/this.width*this.height),R){const u=this.channels,B=this.toCanvas(),ue=z(ee,re).getContext("2d");return ue.drawImage(B,0,0,ee,re),new oe(ue.getImageData(0,0,ee,re).data,ee,re,4).convert(u)}{let u=this.toSharp();switch(g){case"box":case"hamming":g!=="box"&&g!=="hamming"||(console.warn(`Resampling method ${g} is not yet supported. Using bilinear instead.`),g="bilinear");case"nearest":case"bilinear":case"bicubic":u=u.affine([ee/this.width,0,0,re/this.height],{interpolator:g});break;case"lanczos":u=u.resize({width:ee,height:re,fit:"fill",kernel:"lanczos3"});break;default:throw new Error(`Resampling method ${g} is not supported.`)}return await D(u)}}async pad([ee,re,ce,g]){if(ee=Math.max(ee,0),re=Math.max(re,0),ce=Math.max(ce,0),g=Math.max(g,0),ee===0&&re===0&&ce===0&&g===0)return this;if(R){const I=this.channels,e=this.toCanvas(),u=this.width+ee+re,B=this.height+ce+g,ue=z(u,B).getContext("2d");return ue.drawImage(e,0,0,this.width,this.height,ee,ce,this.width,this.height),new oe(ue.getImageData(0,0,u,B).data,u,B,4).convert(I)}{const I=this.toSharp().extend({left:ee,right:re,top:ce,bottom:g});return await D(I)}}async crop([ee,re,ce,g]){if(ee=Math.max(ee,0),re=Math.max(re,0),ce=Math.min(ce,this.width-1),g=Math.min(g,this.height-1),ee===0&&re===0&&ce===this.width-1&&g===this.height-1)return this;const I=ce-ee+1,e=g-re+1;if(R){const u=this.channels,B=this.toCanvas(),ue=z(I,e).getContext("2d");return ue.drawImage(B,ee,re,I,e,0,0,I,e),new oe(ue.getImageData(0,0,I,e).data,I,e,4).convert(u)}{const u=this.toSharp().extract({left:ee,top:re,width:I,height:e});return await D(u)}}async center_crop(ee,re){if(this.width===ee&&this.height===re)return this;const ce=(this.width-ee)/2,g=(this.height-re)/2;if(R){const I=this.channels,e=this.toCanvas(),u=z(ee,re).getContext("2d");let B=0,ue=0,G=0,K=0;return ce>=0?B=ce:G=-ce,g>=0?ue=g:K=-g,u.drawImage(e,B,ue,ee,re,G,K,ee,re),new oe(u.getImageData(0,0,ee,re).data,ee,re,4).convert(I)}{let I=this.toSharp();if(ce>=0&&g>=0)I=I.extract({left:Math.floor(ce),top:Math.floor(g),width:ee,height:re});else if(ce<=0&&g<=0){const e=Math.floor(-g),u=Math.floor(-ce);I=I.extend({top:e,left:u,right:ee-this.width-u,bottom:re-this.height-e})}else{let e=[0,0],u=0;g<0?(e[0]=Math.floor(-g),e[1]=re-this.height-e[0]):u=Math.floor(g);let B=[0,0],ue=0;ce<0?(B[0]=Math.floor(-ce),B[1]=ee-this.width-B[0]):ue=Math.floor(ce),I=I.extend({top:e[0],bottom:e[1],left:B[0],right:B[1]}).extract({left:ue,top:u,width:ee,height:re})}return await D(I)}}async toBlob(ee="image/png",re=1){if(!R)throw new Error("toBlob() is only supported in browser environments.");return await this.toCanvas().convertToBlob({type:ee,quality:re})}toTensor(ee="CHW"){let re=new U.Tensor("uint8",new Uint8Array(this.data),[this.height,this.width,this.channels]);if(ee!=="HWC"){if(ee!=="CHW")throw new Error(`Unsupported channel format: ${ee}`);re=re.permute(2,0,1)}return re}toCanvas(){if(!R)throw new Error("toCanvas() is only supported in browser environments.");const ee=this.clone().rgba(),re=z(ee.width,ee.height),ce=new N(ee.data,ee.width,ee.height);return re.getContext("2d").putImageData(ce,0,0),re}split(){const{data:ee,width:re,height:ce,channels:g}=this,I=ee.constructor,e=ee.length/g,u=Array.from({length:g},()=>new I(e));for(let B=0;B<e;++B){const ue=g*B;for(let G=0;G<g;++G)u[G][B]=ee[ue+G]}return u.map(B=>new oe(B,re,ce,1))}_update(ee,re,ce,g=null){return this.data=ee,this.width=re,this.height=ce,g!==null&&(this.channels=g),this}clone(){return new oe(this.data.slice(),this.width,this.height,this.channels)}convert(ee){if(this.channels===ee)return this;switch(ee){case 1:this.grayscale();break;case 3:this.rgb();break;case 4:this.rgba();break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this}async save(ee){if(!R){if(Y.apis.IS_FS_AVAILABLE)return await this.toSharp().toFile(ee);throw new Error("Unable to save the image because filesystem is disabled in this environment.")}{if(Y.apis.IS_WEBWORKER_ENV)throw new Error("Unable to save an image from a Web Worker.");const re=ee.split(".").pop().toLowerCase(),ce=J.get(re)??"image/png",g=await this.toBlob(ce);(0,w.saveBlob)(ee,g)}}toSharp(){if(R)throw new Error("toSharp() is only supported in server-side environments.");return H(this.data,{raw:{width:this.width,height:this.height,channels:this.channels}})}}const be=oe.read.bind(oe)},"./src/utils/maths.js":(T,k,A)=>{function w(g,[I,e,u],[B,ue],G="bilinear",K=!1){const Ve=ue/u,ve=B/e,Re=new g.constructor(B*ue*I),Ke=e*u,nt=B*ue;for(let Ct=0;Ct<B;++Ct)for(let ht=0;ht<ue;++ht){const et=Ct*ue+ht,ze=(ht+.5)/Ve-.5,Se=(Ct+.5)/ve-.5;let xe=Math.floor(ze),Me=Math.floor(Se);const ft=Math.min(xe+1,u-1),gt=Math.min(Me+1,e-1);xe=Math.max(xe,0),Me=Math.max(Me,0);const _t=ze-xe,Je=Se-Me,bt=(1-_t)*(1-Je),rt=_t*(1-Je),Ne=(1-_t)*Je,it=_t*Je,Et=Me*u,$e=gt*u,It=Et+xe,Tt=Et+ft,zt=$e+xe,Wt=$e+ft;for(let pe=0;pe<I;++pe){const Ut=pe*Ke;Re[pe*nt+et]=bt*g[Ut+It]+rt*g[Ut+Tt]+Ne*g[Ut+zt]+it*g[Ut+Wt]}}return Re}function F(g,I,e){const u=new Array(e.length),B=new Array(e.length);for(let K=e.length-1,Ve=1;K>=0;--K)B[K]=Ve,u[K]=I[e[K]],Ve*=u[K];const ue=e.map((K,Ve)=>B[e.indexOf(Ve)]),G=new g.constructor(g.length);for(let K=0;K<g.length;++K){let Ve=0;for(let ve=I.length-1,Re=K;ve>=0;--ve)Ve+=Re%I[ve]*ue[ve],Re=Math.floor(Re/I[ve]);G[Ve]=g[K]}return[G,u]}function Y(g){const I=R(g)[0],e=g.map(ue=>Math.exp(ue-I)),u=e.reduce((ue,G)=>ue+G,0);return e.map(ue=>ue/u)}function U(g){const I=R(g)[0];let e=0;for(let ue=0;ue<g.length;++ue)e+=Math.exp(g[ue]-I);const u=Math.log(e);return g.map(ue=>ue-I-u)}function H(g,I){let e=0;for(let u=0;u<g.length;++u)e+=g[u]*I[u];return e}function z(g,I){return H(g,I)/(N(g)*N(I))}function N(g){return Math.sqrt(g.reduce((I,e)=>I+e*e,0))}function D(g){if(g.length===0)throw Error("Array must not be empty");let I=g[0],e=0;for(let u=1;u<g.length;++u)g[u]<I&&(I=g[u],e=u);return[I,e]}function R(g){if(g.length===0)throw Error("Array must not be empty");let I=g[0],e=0;for(let u=1;u<g.length;++u)g[u]>I&&(I=g[u],e=u);return[I,e]}function Q(g){return g>0&&!(g&g-1)}A.r(k),A.d(k,{FFT:()=>be,bankers_round:()=>re,cos_sim:()=>z,dot:()=>H,dynamic_time_warping:()=>ce,interpolate_data:()=>w,log_softmax:()=>U,magnitude:()=>N,max:()=>R,medianFilter:()=>Ie,min:()=>D,permute_data:()=>F,round:()=>ee,softmax:()=>Y});class J{constructor(I){if(this.size=0|I,this.size<=1||!Q(this.size))throw new Error("FFT size must be a power of two larger than 1");this._csize=I<<1,this.table=new Float64Array(2*this.size);for(let u=0;u<this.table.length;u+=2){const B=Math.PI*u/this.size;this.table[u]=Math.cos(B),this.table[u+1]=-Math.sin(B)}let e=0;for(let u=1;this.size>u;u<<=1)++e;this._width=e%2==0?e-1:e,this._bitrev=new Int32Array(1<<this._width);for(let u=0;u<this._bitrev.length;++u){this._bitrev[u]=0;for(let B=0;B<this._width;B+=2){const ue=this._width-B-2;this._bitrev[u]|=(u>>>B&3)<<ue}}}createComplexArray(){return new Float64Array(this._csize)}fromComplexArray(I,e){const u=e||new Array(I.length>>>1);for(let B=0;B<I.length;B+=2)u[B>>>1]=I[B];return u}toComplexArray(I,e){const u=e||this.createComplexArray();for(let B=0;B<u.length;B+=2)u[B]=I[B>>>1],u[B+1]=0;return u}transform(I,e){if(I===e)throw new Error("Input and output buffers must be different");this._transform4(I,e,1)}realTransform(I,e){if(I===e)throw new Error("Input and output buffers must be different");this._realTransform4(I,e,1)}inverseTransform(I,e){if(I===e)throw new Error("Input and output buffers must be different");this._transform4(I,e,-1);for(let u=0;u<I.length;++u)I[u]/=this.size}_transform4(I,e,u){const B=this._csize;let ue,G,K=1<<this._width,Ve=B/K<<1;const ve=this._bitrev;if(Ve===4)for(ue=0,G=0;ue<B;ue+=Ve,++G){const Ke=ve[G];this._singleTransform2(e,I,ue,Ke,K)}else for(ue=0,G=0;ue<B;ue+=Ve,++G){const Ke=ve[G];this._singleTransform4(e,I,ue,Ke,K,u)}const Re=this.table;for(K>>=2;K>=2;K>>=2){Ve=B/K<<1;const Ke=Ve>>>2;for(ue=0;ue<B;ue+=Ve){const nt=ue+Ke-1;for(let Ct=ue,ht=0;Ct<nt;Ct+=2,ht+=K){const et=Ct,ze=et+Ke,Se=ze+Ke,xe=Se+Ke,Me=I[et],ft=I[et+1],gt=I[ze],_t=I[ze+1],Je=I[Se],bt=I[Se+1],rt=I[xe],Ne=I[xe+1],it=Re[ht],Et=u*Re[ht+1],$e=gt*it-_t*Et,It=gt*Et+_t*it,Tt=Re[2*ht],zt=u*Re[2*ht+1],Wt=Je*Tt-bt*zt,pe=Je*zt+bt*Tt,Ut=Re[3*ht],Pe=u*Re[3*ht+1],X=rt*Ut-Ne*Pe,ge=rt*Pe+Ne*Ut,fe=Me+Wt,He=ft+pe,ct=Me-Wt,kt=ft-pe,Dt=$e+X,Ht=It+ge,Vt=u*($e-X),sr=u*(It-ge);I[et]=fe+Dt,I[et+1]=He+Ht,I[ze]=ct+sr,I[ze+1]=kt-Vt,I[Se]=fe-Dt,I[Se+1]=He-Ht,I[xe]=ct-sr,I[xe+1]=kt+Vt}}}}_singleTransform2(I,e,u,B,ue){const G=I[B],K=I[B+1],Ve=I[B+ue],ve=I[B+ue+1];e[u]=G+Ve,e[u+1]=K+ve,e[u+2]=G-Ve,e[u+3]=K-ve}_singleTransform4(I,e,u,B,ue,G){const K=2*ue,Ve=3*ue,ve=I[B],Re=I[B+1],Ke=I[B+ue],nt=I[B+ue+1],Ct=I[B+K],ht=I[B+K+1],et=I[B+Ve],ze=I[B+Ve+1],Se=ve+Ct,xe=Re+ht,Me=ve-Ct,ft=Re-ht,gt=Ke+et,_t=nt+ze,Je=G*(Ke-et),bt=G*(nt-ze);e[u]=Se+gt,e[u+1]=xe+_t,e[u+2]=Me+bt,e[u+3]=ft-Je,e[u+4]=Se-gt,e[u+5]=xe-_t,e[u+6]=Me-bt,e[u+7]=ft+Je}_realTransform4(I,e,u){const B=this._csize;let ue,G,K=1<<this._width,Ve=B/K<<1;const ve=this._bitrev;if(Ve===4)for(ue=0,G=0;ue<B;ue+=Ve,++G){const nt=ve[G];this._singleRealTransform2(e,I,ue,nt>>>1,K>>>1)}else for(ue=0,G=0;ue<B;ue+=Ve,++G){const nt=ve[G];this._singleRealTransform4(e,I,ue,nt>>>1,K>>>1,u)}const Re=this.table;for(K>>=2;K>=2;K>>=2){Ve=B/K<<1;const nt=Ve>>>1,Ct=nt>>>1,ht=Ct>>>1;for(ue=0;ue<B;ue+=Ve)for(let et=0,ze=0;et<=ht;et+=2,ze+=K){const Se=ue+et,xe=Se+Ct,Me=xe+Ct,ft=Me+Ct,gt=I[Se],_t=I[Se+1],Je=I[xe],bt=I[xe+1],rt=I[Me],Ne=I[Me+1],it=I[ft],Et=I[ft+1],$e=gt,It=_t,Tt=Re[ze],zt=u*Re[ze+1],Wt=Je*Tt-bt*zt,pe=Je*zt+bt*Tt,Ut=Re[2*ze],Pe=u*Re[2*ze+1],X=rt*Ut-Ne*Pe,ge=rt*Pe+Ne*Ut,fe=Re[3*ze],He=u*Re[3*ze+1],ct=it*fe-Et*He,kt=it*He+Et*fe,Dt=$e+X,Ht=It+ge,Vt=$e-X,sr=It-ge,nr=Wt+ct,lr=pe+kt,Fr=u*(Wt-ct),ns=u*(pe-kt);if(I[Se]=Dt+nr,I[Se+1]=Ht+lr,I[xe]=Vt+ns,I[xe+1]=sr-Fr,et===0){I[Me]=Dt-nr,I[Me+1]=Ht-lr;continue}if(et===ht)continue;const Gs=ue+Ct-et,Cs=ue+nt-et;I[Gs]=Vt-u*ns,I[Gs+1]=-sr-u*Fr,I[Cs]=Dt-u*nr,I[Cs+1]=u*lr-Ht}}const Ke=B>>>1;for(let nt=2;nt<Ke;nt+=2)I[B-nt]=I[nt],I[B-nt+1]=-I[nt+1]}_singleRealTransform2(I,e,u,B,ue){const G=I[B],K=I[B+ue];e[u]=G+K,e[u+1]=0,e[u+2]=G-K,e[u+3]=0}_singleRealTransform4(I,e,u,B,ue,G){const K=2*ue,Ve=3*ue,ve=I[B],Re=I[B+ue],Ke=I[B+K],nt=I[B+Ve],Ct=ve+Ke,ht=ve-Ke,et=Re+nt,ze=G*(Re-nt);e[u]=Ct+et,e[u+1]=0,e[u+2]=ht,e[u+3]=-ze,e[u+4]=Ct-et,e[u+5]=0,e[u+6]=ht,e[u+7]=ze}}class oe{constructor(I){const e=2*(I-1),u=2*(2*I-1),B=2**Math.ceil(Math.log2(u));this.bufferSize=B,this._a=e;const ue=new Float64Array(u),G=new Float64Array(B);this._chirpBuffer=new Float64Array(B),this._buffer1=new Float64Array(B),this._buffer2=new Float64Array(B),this._outBuffer1=new Float64Array(B),this._outBuffer2=new Float64Array(B);const K=-2*Math.PI/I,Ve=Math.cos(K),ve=Math.sin(K);for(let Re=0;Re<u>>1;++Re){const Ke=(Re+1-I)**2/2,nt=Math.sqrt(Ve**2+ve**2)**Ke,Ct=Ke*Math.atan2(ve,Ve),ht=2*Re;ue[ht]=nt*Math.cos(Ct),ue[ht+1]=nt*Math.sin(Ct),G[ht]=ue[ht],G[ht+1]=-ue[ht+1]}this._slicedChirpBuffer=ue.subarray(e,u),this._f=new J(B>>1),this._f.transform(this._chirpBuffer,G)}_transform(I,e,u){const B=this._buffer1,ue=this._buffer2,G=this._outBuffer1,K=this._outBuffer2,Ve=this._chirpBuffer,ve=this._slicedChirpBuffer,Re=this._a;if(u)for(let Ke=0;Ke<ve.length;Ke+=2){const nt=Ke+1,Ct=e[Ke>>1];B[Ke]=Ct*ve[Ke],B[nt]=Ct*ve[nt]}else for(let Ke=0;Ke<ve.length;Ke+=2){const nt=Ke+1;B[Ke]=e[Ke]*ve[Ke]-e[nt]*ve[nt],B[nt]=e[Ke]*ve[nt]+e[nt]*ve[Ke]}this._f.transform(G,B);for(let Ke=0;Ke<Ve.length;Ke+=2){const nt=Ke+1;ue[Ke]=G[Ke]*Ve[Ke]-G[nt]*Ve[nt],ue[nt]=G[Ke]*Ve[nt]+G[nt]*Ve[Ke]}this._f.inverseTransform(K,ue);for(let Ke=0;Ke<K.length;Ke+=2){const nt=K[Ke+Re],Ct=K[Ke+Re+1],ht=ve[Ke],et=ve[Ke+1];I[Ke]=nt*ht-Ct*et,I[Ke+1]=nt*et+Ct*ht}}transform(I,e){this._transform(I,e,!1)}realTransform(I,e){this._transform(I,e,!0)}}class be{constructor(I){this.fft_length=I,this.isPowerOfTwo=Q(I),this.isPowerOfTwo?(this.fft=new J(I),this.outputBufferSize=2*I):(this.fft=new oe(I),this.outputBufferSize=this.fft.bufferSize)}realTransform(I,e){this.fft.realTransform(I,e)}transform(I,e){this.fft.transform(I,e)}}function Ie(g,I){if(I%2==0||I<=0)throw new Error("Window size must be a positive odd number");const e=new g.constructor(g.length),u=new g.constructor(I),B=Math.floor(I/2);for(let ue=0;ue<g.length;++ue){let G=0;for(let K=-B;K<=B;++K){let Ve=ue+K;Ve<0?Ve=Math.abs(Ve):Ve>=g.length&&(Ve=2*(g.length-1)-Ve),u[G++]=g[Ve]}u.sort(),e[ue]=u[B]}return e}function ee(g,I){const e=Math.pow(10,I);return Math.round(g*e)/e}function re(g){const I=Math.round(g);return Math.abs(g)%1==.5?I%2==0?I:I-1:I}function ce(g){const I=g.length,e=g[0].length,u=[I+1,e+1],B=Array.from({length:u[0]},()=>Array(u[1]).fill(1/0));B[0][0]=0;const ue=Array.from({length:u[0]},()=>Array(u[1]).fill(-1));for(let Re=1;Re<u[1];++Re)for(let Ke=1;Ke<u[0];++Ke){const nt=B[Ke-1][Re-1],Ct=B[Ke-1][Re],ht=B[Ke][Re-1];let et,ze;nt<Ct&&nt<ht?(et=nt,ze=0):Ct<nt&&Ct<ht?(et=Ct,ze=1):(et=ht,ze=2),B[Ke][Re]=g[Ke-1][Re-1]+et,ue[Ke][Re]=ze}for(let Re=0;Re<u[1];++Re)ue[0][Re]=2;for(let Re=0;Re<u[0];++Re)ue[Re][0]=1;let G=I,K=e,Ve=[],ve=[];for(;G>0||K>0;)switch(Ve.push(G-1),ve.push(K-1),ue[G][K]){case 0:--G,--K;break;case 1:--G;break;case 2:--K;break;default:throw new Error(`Internal error in dynamic time warping. Unexpected trace[${G}, ${K}]. Please file a bug report.`)}return Ve.reverse(),ve.reverse(),[Ve,ve]}},"./src/utils/tensor.js":(T,k,A)=>{A.r(k),A.d(k,{Tensor:()=>H,cat:()=>I,full:()=>K,full_like:()=>Ve,interpolate:()=>N,interpolate_4d:()=>D,layer_norm:()=>ee,matmul:()=>R,mean:()=>ue,mean_pooling:()=>Ie,ones:()=>ve,ones_like:()=>Re,permute:()=>z,quantize_embeddings:()=>ht,rand:()=>Ct,rfft:()=>Q,slice:()=>be,stack:()=>e,std_mean:()=>B,topk:()=>J,zeros:()=>Ke,zeros_like:()=>nt});var w=A("./src/utils/maths.js"),F=A("./src/backends/onnx.js"),Y=A("./src/ops/registry.js");const U=Object.freeze({float32:Float32Array,float16:Uint16Array,float64:Float64Array,string:Array,int8:Int8Array,uint8:Uint8Array,int16:Int16Array,uint16:Uint16Array,int32:Int32Array,uint32:Uint32Array,int64:BigInt64Array,uint64:BigUint64Array,bool:Uint8Array,uint4:Uint8Array,int4:Int8Array});class H{constructor(...ze){We(this,"ort_tensor");return(0,F.isONNXTensor)(ze[0])?this.ort_tensor=ze[0]:this.ort_tensor=new F.Tensor(ze[0],ze[1],ze[2]),new Proxy(this,{get:(Se,xe)=>{if(typeof xe=="string"){let Me=Number(xe);if(Number.isInteger(Me))return Se._getitem(Me)}return Se[xe]},set:(Se,xe,Me)=>Se[xe]=Me})}get dims(){return this.ort_tensor.dims}set dims(ze){this.ort_tensor.dims=ze}get type(){return this.ort_tensor.type}get data(){return this.ort_tensor.data}get size(){return this.ort_tensor.size}get location(){return this.ort_tensor.location}dispose(){this.ort_tensor.dispose()}*[Symbol.iterator](){const[ze,...Se]=this.dims;if(Se.length>0){const xe=Se.reduce((Me,ft)=>Me*ft);for(let Me=0;Me<ze;++Me)yield this._subarray(Me,xe,Se)}else yield*this.data}_getitem(ze){const[Se,...xe]=this.dims;if(ze=g(ze,Se),xe.length>0){const Me=xe.reduce((ft,gt)=>ft*gt);return this._subarray(ze,Me,xe)}return new H(this.type,[this.data[ze]],xe)}indexOf(ze){const Se=this.data;for(let xe=0;xe<Se.length;++xe)if(Se[xe]==ze)return xe;return-1}_subarray(ze,Se,xe){const Me=ze*Se,ft=(ze+1)*Se,gt="subarray"in this.data?this.data.subarray(Me,ft):this.data.slice(Me,ft);return new H(this.type,gt,xe)}item(){const ze=this.data;if(ze.length!==1)throw new Error(`a Tensor with ${ze.length} elements cannot be converted to Scalar`);return ze[0]}tolist(){return function(ze,Se){const xe=ze.length,Me=Se.reduce((gt,_t)=>gt*_t);if(xe!==Me)throw Error(`cannot reshape array of size ${xe} into shape (${Se})`);let ft=ze;for(let gt=Se.length-1;gt>=0;gt--)ft=ft.reduce((_t,Je)=>{let bt=_t[_t.length-1];return bt.length<Se[gt]?bt.push(Je):_t.push([Je]),_t},[[]]);return ft[0]}(this.data,this.dims)}sigmoid(){return this.clone().sigmoid_()}sigmoid_(){const ze=this.data;for(let Se=0;Se<ze.length;++Se)ze[Se]=1/(1+Math.exp(-ze[Se]));return this}map(ze){return this.clone().map_(ze)}map_(ze){const Se=this.data;for(let xe=0;xe<Se.length;++xe)Se[xe]=ze(Se[xe],xe,Se);return this}mul(ze){return this.clone().mul_(ze)}mul_(ze){const Se=this.data;for(let xe=0;xe<Se.length;++xe)Se[xe]*=ze;return this}div(ze){return this.clone().div_(ze)}div_(ze){const Se=this.data;for(let xe=0;xe<Se.length;++xe)Se[xe]/=ze;return this}add(ze){return this.clone().add_(ze)}add_(ze){const Se=this.data;for(let xe=0;xe<Se.length;++xe)Se[xe]+=ze;return this}sub(ze){return this.clone().sub_(ze)}sub_(ze){const Se=this.data;for(let xe=0;xe<Se.length;++xe)Se[xe]-=ze;return this}clone(){return new H(this.type,this.data.slice(),this.dims.slice())}slice(...ze){const Se=[],xe=[];for(let bt=0;bt<this.dims.length;++bt){let rt=ze[bt];if(rt==null)xe.push([0,this.dims[bt]]),Se.push(this.dims[bt]);else if(typeof rt=="number")rt=g(rt,this.dims[bt],bt),xe.push([rt,rt+1]);else{if(!Array.isArray(rt)||rt.length!==2)throw new Error(`Invalid slice: ${rt}`);{let[Ne,it]=rt;if(Ne=Ne===null?0:g(Ne,this.dims[bt],bt,!1),it=it===null?this.dims[bt]:g(it,this.dims[bt],bt,!1),Ne>it)throw new Error(`Invalid slice: ${rt}`);const Et=[Math.max(Ne,0),Math.min(it,this.dims[bt])];xe.push(Et),Se.push(Et[1]-Et[0])}}}const Me=xe.map(([bt,rt])=>rt-bt),ft=Me.reduce((bt,rt)=>bt*rt),gt=this.data,_t=new gt.constructor(ft),Je=this.stride();for(let bt=0;bt<ft;++bt){let rt=0;for(let Ne=Me.length-1,it=bt;Ne>=0;--Ne){const Et=Me[Ne];rt+=(it%Et+xe[Ne][0])*Je[Ne],it=Math.floor(it/Et)}_t[bt]=gt[rt]}return new H(this.type,_t,Se)}permute(...ze){return z(this,ze)}transpose(...ze){return this.permute(...ze)}sum(ze=null,Se=!1){return this.norm(1,ze,Se)}norm(ze="fro",Se=null,xe=!1){if(ze==="fro")ze=2;else if(typeof ze=="string")throw Error(`Unsupported norm: ${ze}`);const Me=this.data,ft=(bt,rt)=>bt+rt**ze;if(Se===null){const bt=Me.reduce(ft,0)**(1/ze);return new H(this.type,[bt],[])}const[gt,_t,Je]=u(ft,this,Se,xe);if(ze!==1)for(let bt=0;bt<_t.length;++bt)_t[bt]=_t[bt]**(1/ze);return new H(gt,_t,Je)}normalize_(ze=2,Se=1){Se=g(Se,this.dims.length);const xe=this.norm(ze,Se,!0),Me=this.data,ft=xe.data;for(let gt=0;gt<Me.length;++gt){let _t=0;for(let Je=this.dims.length-1,bt=gt,rt=1;Je>=0;--Je){const Ne=this.dims[Je];Je!==Se&&(_t+=bt%Ne*rt,rt*=this.dims[Je]),bt=Math.floor(bt/Ne)}Me[gt]/=ft[_t]}return this}normalize(ze=2,Se=1){return this.clone().normalize_(ze,Se)}stride(){return function(ze){const Se=new Array(ze.length);for(let xe=ze.length-1,Me=1;xe>=0;--xe)Se[xe]=Me,Me*=ze[xe];return Se}(this.dims)}squeeze(ze=null){return new H(this.type,this.data,re(this.dims,ze))}squeeze_(ze=null){return this.dims=re(this.dims,ze),this}unsqueeze(ze=null){return new H(this.type,this.data,ce(this.dims,ze))}unsqueeze_(ze=null){return this.dims=ce(this.dims,ze),this}flatten_(ze=0,Se=-1){Se=(Se+this.dims.length)%this.dims.length;let xe=this.dims.slice(0,ze),Me=this.dims.slice(ze,Se+1),ft=this.dims.slice(Se+1);return this.dims=[...xe,Me.reduce((gt,_t)=>gt*_t,1),...ft],this}flatten(ze=0,Se=-1){return this.clone().flatten_(ze,Se)}view(...ze){let Se=-1;for(let Me=0;Me<ze.length;++Me)if(ze[Me]===-1){if(Se!==-1)throw new Error("Only one dimension can be inferred");Se=Me}const xe=this.data;if(Se!==-1){const Me=ze.reduce((ft,gt,_t)=>_t!==Se?ft*gt:ft,1);ze[Se]=xe.length/Me}return new H(this.type,xe,ze)}neg_(){const ze=this.data;for(let Se=0;Se<ze.length;++Se)ze[Se]=-ze[Se];return this}neg(){return this.clone().neg_()}gt(ze){const Se=new Uint8Array(this.data.length),xe=this.data;for(let Me=0;Me<xe.length;++Me)Se[Me]=xe[Me]>ze?1:0;return new H("bool",Se,this.dims)}lt(ze){const Se=new Uint8Array(this.data.length),xe=this.data;for(let Me=0;Me<xe.length;++Me)Se[Me]=xe[Me]<ze?1:0;return new H("bool",Se,this.dims)}clamp_(ze,Se){const xe=this.data;for(let Me=0;Me<xe.length;++Me)xe[Me]=Math.min(Math.max(xe[Me],ze),Se);return this}clamp(ze,Se){return this.clone().clamp_(ze,Se)}round_(){const ze=this.data;for(let Se=0;Se<ze.length;++Se)ze[Se]=Math.round(ze[Se]);return this}round(){return this.clone().round_()}mean(ze=null,Se=!1){return ue(this,ze,Se)}min(ze=null,Se=!1){if(ze===null){const gt=(0,w.min)(this.data)[0];return new H(this.type,[gt],[])}const[xe,Me,ft]=u((gt,_t)=>Math.min(gt,_t),this,ze,Se,1/0);return new H(xe,Me,ft)}max(ze=null,Se=!1){if(ze===null){const gt=(0,w.max)(this.data)[0];return new H(this.type,[gt],[])}const[xe,Me,ft]=u((gt,_t)=>Math.max(gt,_t),this,ze,Se,-1/0);return new H(xe,Me,ft)}argmin(ze=null,Se=!1){if(ze!==null)throw new Error("`dim !== null` not yet implemented.");const xe=(0,w.min)(this.data)[1];return new H("int64",[BigInt(xe)],[])}argmax(ze=null,Se=!1){if(ze!==null)throw new Error("`dim !== null` not yet implemented.");const xe=(0,w.max)(this.data)[1];return new H("int64",[BigInt(xe)],[])}to(ze){if(this.type===ze)return this;if(!U.hasOwnProperty(ze))throw new Error(`Unsupported type: ${ze}`);let Se;const xe=["int64","uint64"].includes(this.type),Me=["int64","uint64"].includes(ze);return xe&&!Me?Se=Number:!xe&&Me&&(Se=BigInt),new H(ze,U[ze].from(this.data,Se),this.dims)}}function z(et,ze){const[Se,xe]=(0,w.permute_data)(et.data,et.dims,ze);return new H(et.type,Se,xe)}function N(et,[ze,Se],xe="bilinear",Me=!1){const ft=et.dims.at(-3)??1,gt=et.dims.at(-2),_t=et.dims.at(-1);let Je=(0,w.interpolate_data)(et.data,[ft,gt,_t],[ze,Se],xe,Me);return new H(et.type,Je,[ft,ze,Se])}async function D(et,{size:ze=null,mode:Se="bilinear"}={}){if(et.dims.length!==4)throw new Error("`interpolate_4d` currently only supports 4D input.");if(!ze)throw new Error("`interpolate_4d` requires a `size` argument.");let xe,Me;if(ze.length===2)xe=[...et.dims.slice(0,2),...ze];else if(ze.length===3)xe=[et.dims[0],...ze];else{if(ze.length!==4)throw new Error("`size` must be of length 2, 3, or 4.");xe=ze}if(Se==="nearest")Me=await Y.TensorOpRegistry.nearest_interpolate_4d;else if(Se==="bilinear")Me=await Y.TensorOpRegistry.bilinear_interpolate_4d;else{if(Se!=="bicubic")throw new Error(`Unsupported mode: ${Se}`);Me=await Y.TensorOpRegistry.bicubic_interpolate_4d}const ft=new H("int64",new BigInt64Array(xe.map(BigInt)),[xe.length]);return await Me({x:et,s:ft})}async function R(et,ze){return await(await Y.TensorOpRegistry.matmul)({a:et,b:ze})}async function Q(et,ze){return await(await Y.TensorOpRegistry.rfft)({x:et,a:ze})}async function J(et,ze){const Se=await Y.TensorOpRegistry.top_k;return ze=ze==null?et.dims.at(-1):Math.min(ze,et.dims.at(-1)),await Se({x:et,k:new H("int64",[BigInt(ze)],[1])})}const oe=et=>new H("int64",et,[et.length]);async function be(et,ze,Se,xe,Me){return await(await Y.TensorOpRegistry.slice)({x:et,s:oe(ze),e:oe(Se),a:oe(xe),t:oe(Me??new Array(xe.length).fill(1))})}function Ie(et,ze){const Se=et.data,xe=ze.data,Me=[et.dims[0],et.dims[2]],ft=new Se.constructor(Me[0]*Me[1]),[gt,_t,Je]=et.dims;let bt=0;for(let rt=0;rt<gt;++rt){const Ne=rt*Je*_t;for(let it=0;it<Je;++it){let Et=0,$e=0;const It=rt*_t,Tt=Ne+it;for(let Wt=0;Wt<_t;++Wt){const pe=Number(xe[It+Wt]);$e+=pe,Et+=Se[Tt+Wt*Je]*pe}const zt=Et/$e;ft[bt++]=zt}}return new H(et.type,ft,Me)}function ee(et,ze,{eps:Se=1e-5}={}){if(et.dims.length!==2)throw new Error("`layer_norm` currently only supports 2D input.");const[xe,Me]=et.dims;if(ze.length!==1&&ze[0]!==Me)throw new Error("`normalized_shape` must be a 1D array with shape `[input.dims[1]]`.");const[ft,gt]=B(et,1,0,!0),_t=ft.data,Je=gt.data,bt=et.data,rt=new bt.constructor(bt.length);for(let Ne=0;Ne<xe;++Ne){const it=Ne*Me;for(let Et=0;Et<Me;++Et){const $e=it+Et;rt[$e]=(bt[$e]-Je[Ne])/(_t[Ne]+Se)}}return new H(et.type,rt,et.dims)}function re(et,ze){return et=et.slice(),ze===null?et=et.filter(Se=>Se!==1):typeof ze=="number"?et[ze]===1&&et.splice(ze,1):Array.isArray(ze)&&(et=et.filter((Se,xe)=>Se!==1||!ze.includes(xe))),et}function ce(et,ze){return ze=g(ze,et.length+1),(et=et.slice()).splice(ze,0,1),et}function g(et,ze,Se=null,xe=!0){if(xe&&(et<-ze||et>=ze))throw new Error(`IndexError: index ${et} is out of bounds for dimension${Se===null?"":" "+Se} with size ${ze}`);return et<0&&(et=(et%ze+ze)%ze),et}function I(et,ze=0){ze=g(ze,et[0].dims.length);const Se=et[0].dims.slice();Se[ze]=et.reduce((gt,_t)=>gt+_t.dims[ze],0);const xe=Se.reduce((gt,_t)=>gt*_t,1),Me=new et[0].data.constructor(xe),ft=et[0].type;if(ze===0){let gt=0;for(const _t of et){const Je=_t.data;Me.set(Je,gt),gt+=Je.length}}else{let gt=0;for(let _t=0;_t<et.length;++_t){const{data:Je,dims:bt}=et[_t];for(let rt=0;rt<Je.length;++rt){let Ne=0;for(let it=bt.length-1,Et=rt,$e=1;it>=0;--it){const It=bt[it];let Tt=Et%It;it===ze&&(Tt+=gt),Ne+=Tt*$e,$e*=Se[it],Et=Math.floor(Et/It)}Me[Ne]=Je[rt]}gt+=bt[ze]}}return new H(ft,Me,Se)}function e(et,ze=0){return I(et.map(Se=>Se.unsqueeze(ze)),ze)}function u(et,ze,Se=null,xe=!1,Me=null){const ft=ze.data,gt=ze.dims;Se=g(Se,gt.length);const _t=gt.slice();_t[Se]=1;const Je=new ft.constructor(ft.length/gt[Se]);Me!==null&&Je.fill(Me);for(let bt=0;bt<ft.length;++bt){let rt=0;for(let Ne=gt.length-1,it=bt,Et=1;Ne>=0;--Ne){const $e=gt[Ne];Ne!==Se&&(rt+=it%$e*Et,Et*=_t[Ne]),it=Math.floor(it/$e)}Je[rt]=et(Je[rt],ft[bt],bt,rt)}return xe||_t.splice(Se,1),[ze.type,Je,_t]}function B(et,ze=null,Se=1,xe=!1){const Me=et.data,ft=et.dims;if(ze===null){const Ne=Me.reduce((It,Tt)=>It+Tt,0),it=Ne/Me.length,Et=Math.sqrt(Me.reduce((It,Tt)=>It+(Tt-it)**2,0)/(Me.length-Se)),$e=new H(et.type,[it],[]);return[new H(et.type,[Et],[]),$e]}const gt=ue(et,ze=g(ze,ft.length),xe),_t=gt.data,[Je,bt,rt]=u((Ne,it,Et,$e)=>Ne+(it-_t[$e])**2,et,ze,xe);for(let Ne=0;Ne<bt.length;++Ne)bt[Ne]=Math.sqrt(bt[Ne]/(ft[ze]-Se));return[new H(Je,bt,rt),gt]}function ue(et,ze=null,Se=!1){const xe=et.dims,Me=et.data;if(ze===null){const Je=Me.reduce((bt,rt)=>bt+rt,0);return new H(et.type,[Je/Me.length],[])}ze=g(ze,xe.length);const[ft,gt,_t]=u((Je,bt)=>Je+bt,et,ze,Se);if(xe[ze]!==1)for(let Je=0;Je<gt.length;++Je)gt[Je]/=xe[ze];return new H(ft,gt,_t)}function G(et,ze,Se,xe){const Me=et.reduce((ft,gt)=>ft*gt,1);return new H(Se,new xe(Me).fill(ze),et)}function K(et,ze){let Se,xe;if(typeof ze=="number")Se="float32",xe=Float32Array;else if(typeof ze=="bigint")Se="int64",xe=BigInt64Array;else{if(typeof ze!="boolean")throw new Error("Unsupported data type: "+typeof ze);Se="bool",xe=Uint8Array}return G(et,ze,Se,xe)}function Ve(et,ze){return K(et.dims,ze)}function ve(et){return G(et,1n,"int64",BigInt64Array)}function Re(et){return ve(et.dims)}function Ke(et){return G(et,0n,"int64",BigInt64Array)}function nt(et){return Ke(et.dims)}function Ct(et){const ze=et.reduce((Se,xe)=>Se*xe,1);return new H("float32",Float32Array.from({length:ze},()=>Math.random()),et)}function ht(et,ze){if(et.dims.length!==2)throw new Error("The tensor must have 2 dimensions");if(et.dims.at(-1)%8!=0)throw new Error("The last dimension of the tensor must be a multiple of 8");if(!["binary","ubinary"].includes(ze))throw new Error("The precision must be either 'binary' or 'ubinary'");const Se=ze==="binary",xe=Se?"int8":"uint8",Me=Se?Int8Array:Uint8Array,ft=et.data,gt=new Me(ft.length/8);for(let _t=0;_t<ft.length;++_t){const Je=ft[_t]>0?1:0,bt=Math.floor(_t/8),rt=_t%8;gt[bt]|=Je<<7-rt,Se&&rt===0&&(gt[bt]-=128)}return new H(xe,gt,[et.dims[0],et.dims[1]/8])}}},kp={};function Na(T){var k=kp[T];if(k!==void 0)return k.exports;var A=kp[T]={exports:{}};return Gp[T](A,A.exports,Na),A.exports}Na.m=Gp,_2=Object.getPrototypeOf?T=>Object.getPrototypeOf(T):T=>T.__proto__,Na.t=function(T,k){if(1&k&&(T=this(T)),8&k||typeof T=="object"&&T&&(4&k&&T.__esModule||16&k&&typeof T.then=="function"))return T;var A=Object.create(null);Na.r(A);var w={};Ap=Ap||[null,_2({}),_2([]),_2(_2)];for(var F=2&k&&T;typeof F=="object"&&!~Ap.indexOf(F);F=_2(F))Object.getOwnPropertyNames(F).forEach(Y=>w[Y]=()=>T[Y]);return w.default=()=>T,Na.d(A,w),A},Na.d=(T,k)=>{for(var A in k)Na.o(k,A)&&!Na.o(T,A)&&Object.defineProperty(T,A,{enumerable:!0,get:k[A]})},Na.o=(T,k)=>Object.prototype.hasOwnProperty.call(T,k),Na.r=T=>{typeof Symbol<"u"&&Symbol.toStringTag&&Object.defineProperty(T,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(T,"__esModule",{value:!0})},(()=>{var T;if(typeof import.meta.url=="string"&&(T=import.meta.url),!T)throw new Error("Automatic publicPath is not supported in this browser");T=T.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),Na.p=T})(),Na.b=new URL(import.meta.url);var B2={};(()=>{Na.r(B2),Na.d(B2,{ASTFeatureExtractor:()=>D.ASTFeatureExtractor,ASTForAudioClassification:()=>A.ASTForAudioClassification,ASTModel:()=>A.ASTModel,ASTPreTrainedModel:()=>A.ASTPreTrainedModel,AlbertForMaskedLM:()=>A.AlbertForMaskedLM,AlbertForQuestionAnswering:()=>A.AlbertForQuestionAnswering,AlbertForSequenceClassification:()=>A.AlbertForSequenceClassification,AlbertModel:()=>A.AlbertModel,AlbertPreTrainedModel:()=>A.AlbertPreTrainedModel,AlbertTokenizer:()=>w.AlbertTokenizer,AudioClassificationPipeline:()=>k.AudioClassificationPipeline,AutoConfig:()=>F.AutoConfig,AutoFeatureExtractor:()=>R.AutoFeatureExtractor,AutoImageProcessor:()=>oe.AutoImageProcessor,AutoModel:()=>A.AutoModel,AutoModelForAudioClassification:()=>A.AutoModelForAudioClassification,AutoModelForAudioFrameClassification:()=>A.AutoModelForAudioFrameClassification,AutoModelForCTC:()=>A.AutoModelForCTC,AutoModelForCausalLM:()=>A.AutoModelForCausalLM,AutoModelForDepthEstimation:()=>A.AutoModelForDepthEstimation,AutoModelForDocumentQuestionAnswering:()=>A.AutoModelForDocumentQuestionAnswering,AutoModelForImageClassification:()=>A.AutoModelForImageClassification,AutoModelForImageFeatureExtraction:()=>A.AutoModelForImageFeatureExtraction,AutoModelForImageMatting:()=>A.AutoModelForImageMatting,AutoModelForImageSegmentation:()=>A.AutoModelForImageSegmentation,AutoModelForImageToImage:()=>A.AutoModelForImageToImage,AutoModelForMaskGeneration:()=>A.AutoModelForMaskGeneration,AutoModelForMaskedLM:()=>A.AutoModelForMaskedLM,AutoModelForNormalEstimation:()=>A.AutoModelForNormalEstimation,AutoModelForObjectDetection:()=>A.AutoModelForObjectDetection,AutoModelForPoseEstimation:()=>A.AutoModelForPoseEstimation,AutoModelForQuestionAnswering:()=>A.AutoModelForQuestionAnswering,AutoModelForSemanticSegmentation:()=>A.AutoModelForSemanticSegmentation,AutoModelForSeq2SeqLM:()=>A.AutoModelForSeq2SeqLM,AutoModelForSequenceClassification:()=>A.AutoModelForSequenceClassification,AutoModelForSpeechSeq2Seq:()=>A.AutoModelForSpeechSeq2Seq,AutoModelForTextToSpectrogram:()=>A.AutoModelForTextToSpectrogram,AutoModelForTextToWaveform:()=>A.AutoModelForTextToWaveform,AutoModelForTokenClassification:()=>A.AutoModelForTokenClassification,AutoModelForUniversalSegmentation:()=>A.AutoModelForUniversalSegmentation,AutoModelForVision2Seq:()=>A.AutoModelForVision2Seq,AutoModelForXVector:()=>A.AutoModelForXVector,AutoModelForZeroShotObjectDetection:()=>A.AutoModelForZeroShotObjectDetection,AutoProcessor:()=>ee.AutoProcessor,AutoTokenizer:()=>w.AutoTokenizer,AutomaticSpeechRecognitionPipeline:()=>k.AutomaticSpeechRecognitionPipeline,BartForConditionalGeneration:()=>A.BartForConditionalGeneration,BartForSequenceClassification:()=>A.BartForSequenceClassification,BartModel:()=>A.BartModel,BartPretrainedModel:()=>A.BartPretrainedModel,BartTokenizer:()=>w.BartTokenizer,BaseModelOutput:()=>A.BaseModelOutput,BaseStreamer:()=>re.BaseStreamer,BeitFeatureExtractor:()=>J.BeitFeatureExtractor,BeitForImageClassification:()=>A.BeitForImageClassification,BeitModel:()=>A.BeitModel,BeitPreTrainedModel:()=>A.BeitPreTrainedModel,BertForMaskedLM:()=>A.BertForMaskedLM,BertForQuestionAnswering:()=>A.BertForQuestionAnswering,BertForSequenceClassification:()=>A.BertForSequenceClassification,BertForTokenClassification:()=>A.BertForTokenClassification,BertModel:()=>A.BertModel,BertPreTrainedModel:()=>A.BertPreTrainedModel,BertTokenizer:()=>w.BertTokenizer,BitImageProcessor:()=>J.BitImageProcessor,BlenderbotForConditionalGeneration:()=>A.BlenderbotForConditionalGeneration,BlenderbotModel:()=>A.BlenderbotModel,BlenderbotPreTrainedModel:()=>A.BlenderbotPreTrainedModel,BlenderbotSmallForConditionalGeneration:()=>A.BlenderbotSmallForConditionalGeneration,BlenderbotSmallModel:()=>A.BlenderbotSmallModel,BlenderbotSmallPreTrainedModel:()=>A.BlenderbotSmallPreTrainedModel,BlenderbotSmallTokenizer:()=>w.BlenderbotSmallTokenizer,BlenderbotTokenizer:()=>w.BlenderbotTokenizer,BloomForCausalLM:()=>A.BloomForCausalLM,BloomModel:()=>A.BloomModel,BloomPreTrainedModel:()=>A.BloomPreTrainedModel,BloomTokenizer:()=>w.BloomTokenizer,CLIPFeatureExtractor:()=>J.CLIPFeatureExtractor,CLIPImageProcessor:()=>J.CLIPImageProcessor,CLIPModel:()=>A.CLIPModel,CLIPPreTrainedModel:()=>A.CLIPPreTrainedModel,CLIPSegForImageSegmentation:()=>A.CLIPSegForImageSegmentation,CLIPSegModel:()=>A.CLIPSegModel,CLIPSegPreTrainedModel:()=>A.CLIPSegPreTrainedModel,CLIPTextModel:()=>A.CLIPTextModel,CLIPTextModelWithProjection:()=>A.CLIPTextModelWithProjection,CLIPTokenizer:()=>w.CLIPTokenizer,CLIPVisionModel:()=>A.CLIPVisionModel,CLIPVisionModelWithProjection:()=>A.CLIPVisionModelWithProjection,CamembertForMaskedLM:()=>A.CamembertForMaskedLM,CamembertForQuestionAnswering:()=>A.CamembertForQuestionAnswering,CamembertForSequenceClassification:()=>A.CamembertForSequenceClassification,CamembertForTokenClassification:()=>A.CamembertForTokenClassification,CamembertModel:()=>A.CamembertModel,CamembertPreTrainedModel:()=>A.CamembertPreTrainedModel,CamembertTokenizer:()=>w.CamembertTokenizer,CausalLMOutput:()=>A.CausalLMOutput,CausalLMOutputWithPast:()=>A.CausalLMOutputWithPast,ChineseCLIPFeatureExtractor:()=>J.ChineseCLIPFeatureExtractor,ChineseCLIPModel:()=>A.ChineseCLIPModel,ChineseCLIPPreTrainedModel:()=>A.ChineseCLIPPreTrainedModel,ClapAudioModelWithProjection:()=>A.ClapAudioModelWithProjection,ClapFeatureExtractor:()=>D.ClapFeatureExtractor,ClapModel:()=>A.ClapModel,ClapPreTrainedModel:()=>A.ClapPreTrainedModel,ClapTextModelWithProjection:()=>A.ClapTextModelWithProjection,ClassifierFreeGuidanceLogitsProcessor:()=>g.ClassifierFreeGuidanceLogitsProcessor,CodeGenForCausalLM:()=>A.CodeGenForCausalLM,CodeGenModel:()=>A.CodeGenModel,CodeGenPreTrainedModel:()=>A.CodeGenPreTrainedModel,CodeGenTokenizer:()=>w.CodeGenTokenizer,CodeLlamaTokenizer:()=>w.CodeLlamaTokenizer,CohereForCausalLM:()=>A.CohereForCausalLM,CohereModel:()=>A.CohereModel,CoherePreTrainedModel:()=>A.CoherePreTrainedModel,CohereTokenizer:()=>w.CohereTokenizer,ConvBertForMaskedLM:()=>A.ConvBertForMaskedLM,ConvBertForQuestionAnswering:()=>A.ConvBertForQuestionAnswering,ConvBertForSequenceClassification:()=>A.ConvBertForSequenceClassification,ConvBertForTokenClassification:()=>A.ConvBertForTokenClassification,ConvBertModel:()=>A.ConvBertModel,ConvBertPreTrainedModel:()=>A.ConvBertPreTrainedModel,ConvBertTokenizer:()=>w.ConvBertTokenizer,ConvNextFeatureExtractor:()=>J.ConvNextFeatureExtractor,ConvNextForImageClassification:()=>A.ConvNextForImageClassification,ConvNextImageProcessor:()=>J.ConvNextImageProcessor,ConvNextModel:()=>A.ConvNextModel,ConvNextPreTrainedModel:()=>A.ConvNextPreTrainedModel,ConvNextV2ForImageClassification:()=>A.ConvNextV2ForImageClassification,ConvNextV2Model:()=>A.ConvNextV2Model,ConvNextV2PreTrainedModel:()=>A.ConvNextV2PreTrainedModel,DPTFeatureExtractor:()=>J.DPTFeatureExtractor,DPTForDepthEstimation:()=>A.DPTForDepthEstimation,DPTImageProcessor:()=>J.DPTImageProcessor,DPTModel:()=>A.DPTModel,DPTPreTrainedModel:()=>A.DPTPreTrainedModel,DebertaForMaskedLM:()=>A.DebertaForMaskedLM,DebertaForQuestionAnswering:()=>A.DebertaForQuestionAnswering,DebertaForSequenceClassification:()=>A.DebertaForSequenceClassification,DebertaForTokenClassification:()=>A.DebertaForTokenClassification,DebertaModel:()=>A.DebertaModel,DebertaPreTrainedModel:()=>A.DebertaPreTrainedModel,DebertaTokenizer:()=>w.DebertaTokenizer,DebertaV2ForMaskedLM:()=>A.DebertaV2ForMaskedLM,DebertaV2ForQuestionAnswering:()=>A.DebertaV2ForQuestionAnswering,DebertaV2ForSequenceClassification:()=>A.DebertaV2ForSequenceClassification,DebertaV2ForTokenClassification:()=>A.DebertaV2ForTokenClassification,DebertaV2Model:()=>A.DebertaV2Model,DebertaV2PreTrainedModel:()=>A.DebertaV2PreTrainedModel,DebertaV2Tokenizer:()=>w.DebertaV2Tokenizer,DecisionTransformerModel:()=>A.DecisionTransformerModel,DecisionTransformerPreTrainedModel:()=>A.DecisionTransformerPreTrainedModel,DeiTFeatureExtractor:()=>J.DeiTFeatureExtractor,DeiTForImageClassification:()=>A.DeiTForImageClassification,DeiTImageProcessor:()=>J.DeiTImageProcessor,DeiTModel:()=>A.DeiTModel,DeiTPreTrainedModel:()=>A.DeiTPreTrainedModel,DepthAnythingForDepthEstimation:()=>A.DepthAnythingForDepthEstimation,DepthAnythingPreTrainedModel:()=>A.DepthAnythingPreTrainedModel,DepthEstimationPipeline:()=>k.DepthEstimationPipeline,DepthProForDepthEstimation:()=>A.DepthProForDepthEstimation,DepthProPreTrainedModel:()=>A.DepthProPreTrainedModel,DetrFeatureExtractor:()=>J.DetrFeatureExtractor,DetrForObjectDetection:()=>A.DetrForObjectDetection,DetrForSegmentation:()=>A.DetrForSegmentation,DetrImageProcessor:()=>J.DetrImageProcessor,DetrModel:()=>A.DetrModel,DetrObjectDetectionOutput:()=>A.DetrObjectDetectionOutput,DetrPreTrainedModel:()=>A.DetrPreTrainedModel,DetrSegmentationOutput:()=>A.DetrSegmentationOutput,Dinov2ForImageClassification:()=>A.Dinov2ForImageClassification,Dinov2Model:()=>A.Dinov2Model,Dinov2PreTrainedModel:()=>A.Dinov2PreTrainedModel,Dinov2WithRegistersForImageClassification:()=>A.Dinov2WithRegistersForImageClassification,Dinov2WithRegistersModel:()=>A.Dinov2WithRegistersModel,Dinov2WithRegistersPreTrainedModel:()=>A.Dinov2WithRegistersPreTrainedModel,DistilBertForMaskedLM:()=>A.DistilBertForMaskedLM,DistilBertForQuestionAnswering:()=>A.DistilBertForQuestionAnswering,DistilBertForSequenceClassification:()=>A.DistilBertForSequenceClassification,DistilBertForTokenClassification:()=>A.DistilBertForTokenClassification,DistilBertModel:()=>A.DistilBertModel,DistilBertPreTrainedModel:()=>A.DistilBertPreTrainedModel,DistilBertTokenizer:()=>w.DistilBertTokenizer,DocumentQuestionAnsweringPipeline:()=>k.DocumentQuestionAnsweringPipeline,DonutFeatureExtractor:()=>J.DonutFeatureExtractor,DonutImageProcessor:()=>J.DonutImageProcessor,DonutSwinModel:()=>A.DonutSwinModel,DonutSwinPreTrainedModel:()=>A.DonutSwinPreTrainedModel,EfficientNetForImageClassification:()=>A.EfficientNetForImageClassification,EfficientNetImageProcessor:()=>J.EfficientNetImageProcessor,EfficientNetModel:()=>A.EfficientNetModel,EfficientNetPreTrainedModel:()=>A.EfficientNetPreTrainedModel,ElectraForMaskedLM:()=>A.ElectraForMaskedLM,ElectraForQuestionAnswering:()=>A.ElectraForQuestionAnswering,ElectraForSequenceClassification:()=>A.ElectraForSequenceClassification,ElectraForTokenClassification:()=>A.ElectraForTokenClassification,ElectraModel:()=>A.ElectraModel,ElectraPreTrainedModel:()=>A.ElectraPreTrainedModel,ElectraTokenizer:()=>w.ElectraTokenizer,EosTokenCriteria:()=>ce.EosTokenCriteria,EsmForMaskedLM:()=>A.EsmForMaskedLM,EsmForSequenceClassification:()=>A.EsmForSequenceClassification,EsmForTokenClassification:()=>A.EsmForTokenClassification,EsmModel:()=>A.EsmModel,EsmPreTrainedModel:()=>A.EsmPreTrainedModel,EsmTokenizer:()=>w.EsmTokenizer,ExaoneForCausalLM:()=>A.ExaoneForCausalLM,ExaoneModel:()=>A.ExaoneModel,ExaonePreTrainedModel:()=>A.ExaonePreTrainedModel,FFT:()=>z.FFT,FalconForCausalLM:()=>A.FalconForCausalLM,FalconModel:()=>A.FalconModel,FalconPreTrainedModel:()=>A.FalconPreTrainedModel,FalconTokenizer:()=>w.FalconTokenizer,FastViTForImageClassification:()=>A.FastViTForImageClassification,FastViTModel:()=>A.FastViTModel,FastViTPreTrainedModel:()=>A.FastViTPreTrainedModel,FeatureExtractionPipeline:()=>k.FeatureExtractionPipeline,FeatureExtractor:()=>N.FeatureExtractor,FillMaskPipeline:()=>k.FillMaskPipeline,Florence2ForConditionalGeneration:()=>A.Florence2ForConditionalGeneration,Florence2PreTrainedModel:()=>A.Florence2PreTrainedModel,Florence2Processor:()=>Ie.Florence2Processor,ForcedBOSTokenLogitsProcessor:()=>g.ForcedBOSTokenLogitsProcessor,ForcedEOSTokenLogitsProcessor:()=>g.ForcedEOSTokenLogitsProcessor,GLPNFeatureExtractor:()=>J.GLPNFeatureExtractor,GLPNForDepthEstimation:()=>A.GLPNForDepthEstimation,GLPNModel:()=>A.GLPNModel,GLPNPreTrainedModel:()=>A.GLPNPreTrainedModel,GPT2LMHeadModel:()=>A.GPT2LMHeadModel,GPT2Model:()=>A.GPT2Model,GPT2PreTrainedModel:()=>A.GPT2PreTrainedModel,GPT2Tokenizer:()=>w.GPT2Tokenizer,GPTBigCodeForCausalLM:()=>A.GPTBigCodeForCausalLM,GPTBigCodeModel:()=>A.GPTBigCodeModel,GPTBigCodePreTrainedModel:()=>A.GPTBigCodePreTrainedModel,GPTJForCausalLM:()=>A.GPTJForCausalLM,GPTJModel:()=>A.GPTJModel,GPTJPreTrainedModel:()=>A.GPTJPreTrainedModel,GPTNeoForCausalLM:()=>A.GPTNeoForCausalLM,GPTNeoModel:()=>A.GPTNeoModel,GPTNeoPreTrainedModel:()=>A.GPTNeoPreTrainedModel,GPTNeoXForCausalLM:()=>A.GPTNeoXForCausalLM,GPTNeoXModel:()=>A.GPTNeoXModel,GPTNeoXPreTrainedModel:()=>A.GPTNeoXPreTrainedModel,GPTNeoXTokenizer:()=>w.GPTNeoXTokenizer,Gemma2ForCausalLM:()=>A.Gemma2ForCausalLM,Gemma2Model:()=>A.Gemma2Model,Gemma2PreTrainedModel:()=>A.Gemma2PreTrainedModel,GemmaForCausalLM:()=>A.GemmaForCausalLM,GemmaModel:()=>A.GemmaModel,GemmaPreTrainedModel:()=>A.GemmaPreTrainedModel,GemmaTokenizer:()=>w.GemmaTokenizer,GlmForCausalLM:()=>A.GlmForCausalLM,GlmModel:()=>A.GlmModel,GlmPreTrainedModel:()=>A.GlmPreTrainedModel,GraniteForCausalLM:()=>A.GraniteForCausalLM,GraniteModel:()=>A.GraniteModel,GranitePreTrainedModel:()=>A.GranitePreTrainedModel,Grok1Tokenizer:()=>w.Grok1Tokenizer,GroundingDinoForObjectDetection:()=>A.GroundingDinoForObjectDetection,GroundingDinoImageProcessor:()=>J.GroundingDinoImageProcessor,GroundingDinoPreTrainedModel:()=>A.GroundingDinoPreTrainedModel,GroundingDinoProcessor:()=>Ie.GroundingDinoProcessor,GroupViTModel:()=>A.GroupViTModel,GroupViTPreTrainedModel:()=>A.GroupViTPreTrainedModel,HeliumForCausalLM:()=>A.HeliumForCausalLM,HeliumModel:()=>A.HeliumModel,HeliumPreTrainedModel:()=>A.HeliumPreTrainedModel,HerbertTokenizer:()=>w.HerbertTokenizer,HieraForImageClassification:()=>A.HieraForImageClassification,HieraModel:()=>A.HieraModel,HieraPreTrainedModel:()=>A.HieraPreTrainedModel,HubertForCTC:()=>A.HubertForCTC,HubertForSequenceClassification:()=>A.HubertForSequenceClassification,HubertModel:()=>A.HubertModel,HubertPreTrainedModel:()=>A.HubertPreTrainedModel,IJepaForImageClassification:()=>A.IJepaForImageClassification,IJepaModel:()=>A.IJepaModel,IJepaPreTrainedModel:()=>A.IJepaPreTrainedModel,Idefics3ForConditionalGeneration:()=>A.Idefics3ForConditionalGeneration,Idefics3ImageProcessor:()=>J.Idefics3ImageProcessor,Idefics3PreTrainedModel:()=>A.Idefics3PreTrainedModel,Idefics3Processor:()=>Ie.Idefics3Processor,ImageClassificationPipeline:()=>k.ImageClassificationPipeline,ImageFeatureExtractionPipeline:()=>k.ImageFeatureExtractionPipeline,ImageFeatureExtractor:()=>D.ImageFeatureExtractor,ImageMattingOutput:()=>A.ImageMattingOutput,ImageProcessor:()=>Q.ImageProcessor,ImageSegmentationPipeline:()=>k.ImageSegmentationPipeline,ImageToImagePipeline:()=>k.ImageToImagePipeline,ImageToTextPipeline:()=>k.ImageToTextPipeline,InterruptableStoppingCriteria:()=>ce.InterruptableStoppingCriteria,JAISLMHeadModel:()=>A.JAISLMHeadModel,JAISModel:()=>A.JAISModel,JAISPreTrainedModel:()=>A.JAISPreTrainedModel,JinaCLIPImageProcessor:()=>J.JinaCLIPImageProcessor,JinaCLIPModel:()=>A.JinaCLIPModel,JinaCLIPPreTrainedModel:()=>A.JinaCLIPPreTrainedModel,JinaCLIPProcessor:()=>Ie.JinaCLIPProcessor,JinaCLIPTextModel:()=>A.JinaCLIPTextModel,JinaCLIPVisionModel:()=>A.JinaCLIPVisionModel,LlamaForCausalLM:()=>A.LlamaForCausalLM,LlamaModel:()=>A.LlamaModel,LlamaPreTrainedModel:()=>A.LlamaPreTrainedModel,LlamaTokenizer:()=>w.LlamaTokenizer,LlavaForConditionalGeneration:()=>A.LlavaForConditionalGeneration,LlavaOnevisionForConditionalGeneration:()=>A.LlavaOnevisionForConditionalGeneration,LlavaOnevisionImageProcessor:()=>J.LlavaOnevisionImageProcessor,LlavaPreTrainedModel:()=>A.LlavaPreTrainedModel,LogitsProcessor:()=>g.LogitsProcessor,LogitsProcessorList:()=>g.LogitsProcessorList,LogitsWarper:()=>g.LogitsWarper,LongT5ForConditionalGeneration:()=>A.LongT5ForConditionalGeneration,LongT5Model:()=>A.LongT5Model,LongT5PreTrainedModel:()=>A.LongT5PreTrainedModel,M2M100ForConditionalGeneration:()=>A.M2M100ForConditionalGeneration,M2M100Model:()=>A.M2M100Model,M2M100PreTrainedModel:()=>A.M2M100PreTrainedModel,M2M100Tokenizer:()=>w.M2M100Tokenizer,MBart50Tokenizer:()=>w.MBart50Tokenizer,MBartForCausalLM:()=>A.MBartForCausalLM,MBartForConditionalGeneration:()=>A.MBartForConditionalGeneration,MBartForSequenceClassification:()=>A.MBartForSequenceClassification,MBartModel:()=>A.MBartModel,MBartPreTrainedModel:()=>A.MBartPreTrainedModel,MBartTokenizer:()=>w.MBartTokenizer,MPNetForMaskedLM:()=>A.MPNetForMaskedLM,MPNetForQuestionAnswering:()=>A.MPNetForQuestionAnswering,MPNetForSequenceClassification:()=>A.MPNetForSequenceClassification,MPNetForTokenClassification:()=>A.MPNetForTokenClassification,MPNetModel:()=>A.MPNetModel,MPNetPreTrainedModel:()=>A.MPNetPreTrainedModel,MPNetTokenizer:()=>w.MPNetTokenizer,MT5ForConditionalGeneration:()=>A.MT5ForConditionalGeneration,MT5Model:()=>A.MT5Model,MT5PreTrainedModel:()=>A.MT5PreTrainedModel,MarianMTModel:()=>A.MarianMTModel,MarianModel:()=>A.MarianModel,MarianPreTrainedModel:()=>A.MarianPreTrainedModel,MarianTokenizer:()=>w.MarianTokenizer,Mask2FormerImageProcessor:()=>J.Mask2FormerImageProcessor,MaskFormerFeatureExtractor:()=>J.MaskFormerFeatureExtractor,MaskFormerForInstanceSegmentation:()=>A.MaskFormerForInstanceSegmentation,MaskFormerImageProcessor:()=>J.MaskFormerImageProcessor,MaskFormerModel:()=>A.MaskFormerModel,MaskFormerPreTrainedModel:()=>A.MaskFormerPreTrainedModel,MaskedLMOutput:()=>A.MaskedLMOutput,MaxLengthCriteria:()=>ce.MaxLengthCriteria,MgpstrForSceneTextRecognition:()=>A.MgpstrForSceneTextRecognition,MgpstrModelOutput:()=>A.MgpstrModelOutput,MgpstrPreTrainedModel:()=>A.MgpstrPreTrainedModel,MgpstrProcessor:()=>Ie.MgpstrProcessor,MgpstrTokenizer:()=>w.MgpstrTokenizer,MinLengthLogitsProcessor:()=>g.MinLengthLogitsProcessor,MinNewTokensLengthLogitsProcessor:()=>g.MinNewTokensLengthLogitsProcessor,MistralForCausalLM:()=>A.MistralForCausalLM,MistralModel:()=>A.MistralModel,MistralPreTrainedModel:()=>A.MistralPreTrainedModel,MobileBertForMaskedLM:()=>A.MobileBertForMaskedLM,MobileBertForQuestionAnswering:()=>A.MobileBertForQuestionAnswering,MobileBertForSequenceClassification:()=>A.MobileBertForSequenceClassification,MobileBertModel:()=>A.MobileBertModel,MobileBertPreTrainedModel:()=>A.MobileBertPreTrainedModel,MobileBertTokenizer:()=>w.MobileBertTokenizer,MobileLLMForCausalLM:()=>A.MobileLLMForCausalLM,MobileLLMModel:()=>A.MobileLLMModel,MobileLLMPreTrainedModel:()=>A.MobileLLMPreTrainedModel,MobileNetV1FeatureExtractor:()=>J.MobileNetV1FeatureExtractor,MobileNetV1ForImageClassification:()=>A.MobileNetV1ForImageClassification,MobileNetV1ImageProcessor:()=>J.MobileNetV1ImageProcessor,MobileNetV1Model:()=>A.MobileNetV1Model,MobileNetV1PreTrainedModel:()=>A.MobileNetV1PreTrainedModel,MobileNetV2FeatureExtractor:()=>J.MobileNetV2FeatureExtractor,MobileNetV2ForImageClassification:()=>A.MobileNetV2ForImageClassification,MobileNetV2ImageProcessor:()=>J.MobileNetV2ImageProcessor,MobileNetV2Model:()=>A.MobileNetV2Model,MobileNetV2PreTrainedModel:()=>A.MobileNetV2PreTrainedModel,MobileNetV3FeatureExtractor:()=>J.MobileNetV3FeatureExtractor,MobileNetV3ForImageClassification:()=>A.MobileNetV3ForImageClassification,MobileNetV3ImageProcessor:()=>J.MobileNetV3ImageProcessor,MobileNetV3Model:()=>A.MobileNetV3Model,MobileNetV3PreTrainedModel:()=>A.MobileNetV3PreTrainedModel,MobileNetV4FeatureExtractor:()=>J.MobileNetV4FeatureExtractor,MobileNetV4ForImageClassification:()=>A.MobileNetV4ForImageClassification,MobileNetV4ImageProcessor:()=>J.MobileNetV4ImageProcessor,MobileNetV4Model:()=>A.MobileNetV4Model,MobileNetV4PreTrainedModel:()=>A.MobileNetV4PreTrainedModel,MobileViTFeatureExtractor:()=>J.MobileViTFeatureExtractor,MobileViTForImageClassification:()=>A.MobileViTForImageClassification,MobileViTImageProcessor:()=>J.MobileViTImageProcessor,MobileViTModel:()=>A.MobileViTModel,MobileViTPreTrainedModel:()=>A.MobileViTPreTrainedModel,MobileViTV2ForImageClassification:()=>A.MobileViTV2ForImageClassification,MobileViTV2Model:()=>A.MobileViTV2Model,MobileViTV2PreTrainedModel:()=>A.MobileViTV2PreTrainedModel,ModelOutput:()=>A.ModelOutput,ModernBertForMaskedLM:()=>A.ModernBertForMaskedLM,ModernBertForSequenceClassification:()=>A.ModernBertForSequenceClassification,ModernBertForTokenClassification:()=>A.ModernBertForTokenClassification,ModernBertModel:()=>A.ModernBertModel,ModernBertPreTrainedModel:()=>A.ModernBertPreTrainedModel,Moondream1ForConditionalGeneration:()=>A.Moondream1ForConditionalGeneration,MoonshineFeatureExtractor:()=>D.MoonshineFeatureExtractor,MoonshineForConditionalGeneration:()=>A.MoonshineForConditionalGeneration,MoonshineModel:()=>A.MoonshineModel,MoonshinePreTrainedModel:()=>A.MoonshinePreTrainedModel,MoonshineProcessor:()=>Ie.MoonshineProcessor,MptForCausalLM:()=>A.MptForCausalLM,MptModel:()=>A.MptModel,MptPreTrainedModel:()=>A.MptPreTrainedModel,MultiModalityCausalLM:()=>A.MultiModalityCausalLM,MultiModalityPreTrainedModel:()=>A.MultiModalityPreTrainedModel,MusicgenForCausalLM:()=>A.MusicgenForCausalLM,MusicgenForConditionalGeneration:()=>A.MusicgenForConditionalGeneration,MusicgenModel:()=>A.MusicgenModel,MusicgenPreTrainedModel:()=>A.MusicgenPreTrainedModel,NllbTokenizer:()=>w.NllbTokenizer,NoBadWordsLogitsProcessor:()=>g.NoBadWordsLogitsProcessor,NoRepeatNGramLogitsProcessor:()=>g.NoRepeatNGramLogitsProcessor,NomicBertModel:()=>A.NomicBertModel,NomicBertPreTrainedModel:()=>A.NomicBertPreTrainedModel,NougatImageProcessor:()=>J.NougatImageProcessor,NougatTokenizer:()=>w.NougatTokenizer,OPTForCausalLM:()=>A.OPTForCausalLM,OPTModel:()=>A.OPTModel,OPTPreTrainedModel:()=>A.OPTPreTrainedModel,ObjectDetectionPipeline:()=>k.ObjectDetectionPipeline,Olmo2ForCausalLM:()=>A.Olmo2ForCausalLM,Olmo2Model:()=>A.Olmo2Model,Olmo2PreTrainedModel:()=>A.Olmo2PreTrainedModel,OlmoForCausalLM:()=>A.OlmoForCausalLM,OlmoModel:()=>A.OlmoModel,OlmoPreTrainedModel:()=>A.OlmoPreTrainedModel,OpenELMForCausalLM:()=>A.OpenELMForCausalLM,OpenELMModel:()=>A.OpenELMModel,OpenELMPreTrainedModel:()=>A.OpenELMPreTrainedModel,OwlViTFeatureExtractor:()=>J.OwlViTFeatureExtractor,OwlViTForObjectDetection:()=>A.OwlViTForObjectDetection,OwlViTImageProcessor:()=>J.OwlViTImageProcessor,OwlViTModel:()=>A.OwlViTModel,OwlViTPreTrainedModel:()=>A.OwlViTPreTrainedModel,OwlViTProcessor:()=>Ie.OwlViTProcessor,Owlv2ForObjectDetection:()=>A.Owlv2ForObjectDetection,Owlv2ImageProcessor:()=>J.Owlv2ImageProcessor,Owlv2Model:()=>A.Owlv2Model,Owlv2PreTrainedModel:()=>A.Owlv2PreTrainedModel,PaliGemmaForConditionalGeneration:()=>A.PaliGemmaForConditionalGeneration,PaliGemmaPreTrainedModel:()=>A.PaliGemmaPreTrainedModel,PaliGemmaProcessor:()=>Ie.PaliGemmaProcessor,PatchTSMixerForPrediction:()=>A.PatchTSMixerForPrediction,PatchTSMixerModel:()=>A.PatchTSMixerModel,PatchTSMixerPreTrainedModel:()=>A.PatchTSMixerPreTrainedModel,PatchTSTForPrediction:()=>A.PatchTSTForPrediction,PatchTSTModel:()=>A.PatchTSTModel,PatchTSTPreTrainedModel:()=>A.PatchTSTPreTrainedModel,Phi3ForCausalLM:()=>A.Phi3ForCausalLM,Phi3Model:()=>A.Phi3Model,Phi3PreTrainedModel:()=>A.Phi3PreTrainedModel,Phi3VForCausalLM:()=>A.Phi3VForCausalLM,Phi3VImageProcessor:()=>J.Phi3VImageProcessor,Phi3VPreTrainedModel:()=>A.Phi3VPreTrainedModel,Phi3VProcessor:()=>Ie.Phi3VProcessor,PhiForCausalLM:()=>A.PhiForCausalLM,PhiModel:()=>A.PhiModel,PhiPreTrainedModel:()=>A.PhiPreTrainedModel,Pipeline:()=>k.Pipeline,PreTrainedModel:()=>A.PreTrainedModel,PreTrainedTokenizer:()=>w.PreTrainedTokenizer,PretrainedConfig:()=>F.PretrainedConfig,PretrainedMixin:()=>A.PretrainedMixin,Processor:()=>be.Processor,PvtForImageClassification:()=>A.PvtForImageClassification,PvtImageProcessor:()=>J.PvtImageProcessor,PvtModel:()=>A.PvtModel,PvtPreTrainedModel:()=>A.PvtPreTrainedModel,PyAnnoteFeatureExtractor:()=>D.PyAnnoteFeatureExtractor,PyAnnoteForAudioFrameClassification:()=>A.PyAnnoteForAudioFrameClassification,PyAnnoteModel:()=>A.PyAnnoteModel,PyAnnotePreTrainedModel:()=>A.PyAnnotePreTrainedModel,PyAnnoteProcessor:()=>Ie.PyAnnoteProcessor,QuestionAnsweringModelOutput:()=>A.QuestionAnsweringModelOutput,QuestionAnsweringPipeline:()=>k.QuestionAnsweringPipeline,Qwen2ForCausalLM:()=>A.Qwen2ForCausalLM,Qwen2Model:()=>A.Qwen2Model,Qwen2PreTrainedModel:()=>A.Qwen2PreTrainedModel,Qwen2Tokenizer:()=>w.Qwen2Tokenizer,Qwen2VLForConditionalGeneration:()=>A.Qwen2VLForConditionalGeneration,Qwen2VLImageProcessor:()=>J.Qwen2VLImageProcessor,Qwen2VLPreTrainedModel:()=>A.Qwen2VLPreTrainedModel,Qwen2VLProcessor:()=>Ie.Qwen2VLProcessor,RTDetrForObjectDetection:()=>A.RTDetrForObjectDetection,RTDetrImageProcessor:()=>J.RTDetrImageProcessor,RTDetrModel:()=>A.RTDetrModel,RTDetrObjectDetectionOutput:()=>A.RTDetrObjectDetectionOutput,RTDetrPreTrainedModel:()=>A.RTDetrPreTrainedModel,RawAudio:()=>Y.RawAudio,RawImage:()=>U.RawImage,RepetitionPenaltyLogitsProcessor:()=>g.RepetitionPenaltyLogitsProcessor,ResNetForImageClassification:()=>A.ResNetForImageClassification,ResNetModel:()=>A.ResNetModel,ResNetPreTrainedModel:()=>A.ResNetPreTrainedModel,RoFormerForMaskedLM:()=>A.RoFormerForMaskedLM,RoFormerForQuestionAnswering:()=>A.RoFormerForQuestionAnswering,RoFormerForSequenceClassification:()=>A.RoFormerForSequenceClassification,RoFormerForTokenClassification:()=>A.RoFormerForTokenClassification,RoFormerModel:()=>A.RoFormerModel,RoFormerPreTrainedModel:()=>A.RoFormerPreTrainedModel,RoFormerTokenizer:()=>w.RoFormerTokenizer,RobertaForMaskedLM:()=>A.RobertaForMaskedLM,RobertaForQuestionAnswering:()=>A.RobertaForQuestionAnswering,RobertaForSequenceClassification:()=>A.RobertaForSequenceClassification,RobertaForTokenClassification:()=>A.RobertaForTokenClassification,RobertaModel:()=>A.RobertaModel,RobertaPreTrainedModel:()=>A.RobertaPreTrainedModel,RobertaTokenizer:()=>w.RobertaTokenizer,SamImageProcessor:()=>J.SamImageProcessor,SamImageSegmentationOutput:()=>A.SamImageSegmentationOutput,SamModel:()=>A.SamModel,SamPreTrainedModel:()=>A.SamPreTrainedModel,SamProcessor:()=>Ie.SamProcessor,SapiensForDepthEstimation:()=>A.SapiensForDepthEstimation,SapiensForNormalEstimation:()=>A.SapiensForNormalEstimation,SapiensForSemanticSegmentation:()=>A.SapiensForSemanticSegmentation,SapiensPreTrainedModel:()=>A.SapiensPreTrainedModel,SeamlessM4TFeatureExtractor:()=>D.SeamlessM4TFeatureExtractor,SegformerFeatureExtractor:()=>J.SegformerFeatureExtractor,SegformerForImageClassification:()=>A.SegformerForImageClassification,SegformerForSemanticSegmentation:()=>A.SegformerForSemanticSegmentation,SegformerImageProcessor:()=>J.SegformerImageProcessor,SegformerModel:()=>A.SegformerModel,SegformerPreTrainedModel:()=>A.SegformerPreTrainedModel,Seq2SeqLMOutput:()=>A.Seq2SeqLMOutput,SequenceClassifierOutput:()=>A.SequenceClassifierOutput,SiglipImageProcessor:()=>J.SiglipImageProcessor,SiglipModel:()=>A.SiglipModel,SiglipPreTrainedModel:()=>A.SiglipPreTrainedModel,SiglipTextModel:()=>A.SiglipTextModel,SiglipTokenizer:()=>w.SiglipTokenizer,SiglipVisionModel:()=>A.SiglipVisionModel,SpeechT5FeatureExtractor:()=>D.SpeechT5FeatureExtractor,SpeechT5ForSpeechToText:()=>A.SpeechT5ForSpeechToText,SpeechT5ForTextToSpeech:()=>A.SpeechT5ForTextToSpeech,SpeechT5HifiGan:()=>A.SpeechT5HifiGan,SpeechT5Model:()=>A.SpeechT5Model,SpeechT5PreTrainedModel:()=>A.SpeechT5PreTrainedModel,SpeechT5Processor:()=>Ie.SpeechT5Processor,SpeechT5Tokenizer:()=>w.SpeechT5Tokenizer,SqueezeBertForMaskedLM:()=>A.SqueezeBertForMaskedLM,SqueezeBertForQuestionAnswering:()=>A.SqueezeBertForQuestionAnswering,SqueezeBertForSequenceClassification:()=>A.SqueezeBertForSequenceClassification,SqueezeBertModel:()=>A.SqueezeBertModel,SqueezeBertPreTrainedModel:()=>A.SqueezeBertPreTrainedModel,SqueezeBertTokenizer:()=>w.SqueezeBertTokenizer,StableLmForCausalLM:()=>A.StableLmForCausalLM,StableLmModel:()=>A.StableLmModel,StableLmPreTrainedModel:()=>A.StableLmPreTrainedModel,Starcoder2ForCausalLM:()=>A.Starcoder2ForCausalLM,Starcoder2Model:()=>A.Starcoder2Model,Starcoder2PreTrainedModel:()=>A.Starcoder2PreTrainedModel,StoppingCriteria:()=>ce.StoppingCriteria,StoppingCriteriaList:()=>ce.StoppingCriteriaList,StyleTextToSpeech2Model:()=>A.StyleTextToSpeech2Model,StyleTextToSpeech2PreTrainedModel:()=>A.StyleTextToSpeech2PreTrainedModel,SummarizationPipeline:()=>k.SummarizationPipeline,SuppressTokensAtBeginLogitsProcessor:()=>g.SuppressTokensAtBeginLogitsProcessor,Swin2SRForImageSuperResolution:()=>A.Swin2SRForImageSuperResolution,Swin2SRImageProcessor:()=>J.Swin2SRImageProcessor,Swin2SRModel:()=>A.Swin2SRModel,Swin2SRPreTrainedModel:()=>A.Swin2SRPreTrainedModel,SwinForImageClassification:()=>A.SwinForImageClassification,SwinModel:()=>A.SwinModel,SwinPreTrainedModel:()=>A.SwinPreTrainedModel,T5ForConditionalGeneration:()=>A.T5ForConditionalGeneration,T5Model:()=>A.T5Model,T5PreTrainedModel:()=>A.T5PreTrainedModel,T5Tokenizer:()=>w.T5Tokenizer,TableTransformerForObjectDetection:()=>A.TableTransformerForObjectDetection,TableTransformerModel:()=>A.TableTransformerModel,TableTransformerObjectDetectionOutput:()=>A.TableTransformerObjectDetectionOutput,TableTransformerPreTrainedModel:()=>A.TableTransformerPreTrainedModel,TemperatureLogitsWarper:()=>g.TemperatureLogitsWarper,Tensor:()=>H.Tensor,Text2TextGenerationPipeline:()=>k.Text2TextGenerationPipeline,TextClassificationPipeline:()=>k.TextClassificationPipeline,TextGenerationPipeline:()=>k.TextGenerationPipeline,TextStreamer:()=>re.TextStreamer,TextToAudioPipeline:()=>k.TextToAudioPipeline,TokenClassificationPipeline:()=>k.TokenClassificationPipeline,TokenClassifierOutput:()=>A.TokenClassifierOutput,TokenizerModel:()=>w.TokenizerModel,TopKLogitsWarper:()=>g.TopKLogitsWarper,TopPLogitsWarper:()=>g.TopPLogitsWarper,TrOCRForCausalLM:()=>A.TrOCRForCausalLM,TrOCRPreTrainedModel:()=>A.TrOCRPreTrainedModel,TranslationPipeline:()=>k.TranslationPipeline,UniSpeechForCTC:()=>A.UniSpeechForCTC,UniSpeechForSequenceClassification:()=>A.UniSpeechForSequenceClassification,UniSpeechModel:()=>A.UniSpeechModel,UniSpeechPreTrainedModel:()=>A.UniSpeechPreTrainedModel,UniSpeechSatForAudioFrameClassification:()=>A.UniSpeechSatForAudioFrameClassification,UniSpeechSatForCTC:()=>A.UniSpeechSatForCTC,UniSpeechSatForSequenceClassification:()=>A.UniSpeechSatForSequenceClassification,UniSpeechSatModel:()=>A.UniSpeechSatModel,UniSpeechSatPreTrainedModel:()=>A.UniSpeechSatPreTrainedModel,VLChatProcessor:()=>Ie.VLChatProcessor,VLMImageProcessor:()=>J.VLMImageProcessor,ViTFeatureExtractor:()=>J.ViTFeatureExtractor,ViTForImageClassification:()=>A.ViTForImageClassification,ViTImageProcessor:()=>J.ViTImageProcessor,ViTMAEModel:()=>A.ViTMAEModel,ViTMAEPreTrainedModel:()=>A.ViTMAEPreTrainedModel,ViTMSNForImageClassification:()=>A.ViTMSNForImageClassification,ViTMSNModel:()=>A.ViTMSNModel,ViTMSNPreTrainedModel:()=>A.ViTMSNPreTrainedModel,ViTModel:()=>A.ViTModel,ViTPreTrainedModel:()=>A.ViTPreTrainedModel,VisionEncoderDecoderModel:()=>A.VisionEncoderDecoderModel,VitMatteForImageMatting:()=>A.VitMatteForImageMatting,VitMatteImageProcessor:()=>J.VitMatteImageProcessor,VitMattePreTrainedModel:()=>A.VitMattePreTrainedModel,VitPoseForPoseEstimation:()=>A.VitPoseForPoseEstimation,VitPoseImageProcessor:()=>J.VitPoseImageProcessor,VitPosePreTrainedModel:()=>A.VitPosePreTrainedModel,VitsModel:()=>A.VitsModel,VitsModelOutput:()=>A.VitsModelOutput,VitsPreTrainedModel:()=>A.VitsPreTrainedModel,VitsTokenizer:()=>w.VitsTokenizer,Wav2Vec2BertForCTC:()=>A.Wav2Vec2BertForCTC,Wav2Vec2BertForSequenceClassification:()=>A.Wav2Vec2BertForSequenceClassification,Wav2Vec2BertModel:()=>A.Wav2Vec2BertModel,Wav2Vec2BertPreTrainedModel:()=>A.Wav2Vec2BertPreTrainedModel,Wav2Vec2CTCTokenizer:()=>w.Wav2Vec2CTCTokenizer,Wav2Vec2FeatureExtractor:()=>D.Wav2Vec2FeatureExtractor,Wav2Vec2ForAudioFrameClassification:()=>A.Wav2Vec2ForAudioFrameClassification,Wav2Vec2ForCTC:()=>A.Wav2Vec2ForCTC,Wav2Vec2ForSequenceClassification:()=>A.Wav2Vec2ForSequenceClassification,Wav2Vec2Model:()=>A.Wav2Vec2Model,Wav2Vec2PreTrainedModel:()=>A.Wav2Vec2PreTrainedModel,Wav2Vec2Processor:()=>Ie.Wav2Vec2Processor,Wav2Vec2ProcessorWithLM:()=>Ie.Wav2Vec2ProcessorWithLM,WavLMForAudioFrameClassification:()=>A.WavLMForAudioFrameClassification,WavLMForCTC:()=>A.WavLMForCTC,WavLMForSequenceClassification:()=>A.WavLMForSequenceClassification,WavLMForXVector:()=>A.WavLMForXVector,WavLMModel:()=>A.WavLMModel,WavLMPreTrainedModel:()=>A.WavLMPreTrainedModel,WeSpeakerFeatureExtractor:()=>D.WeSpeakerFeatureExtractor,WeSpeakerResNetModel:()=>A.WeSpeakerResNetModel,WeSpeakerResNetPreTrainedModel:()=>A.WeSpeakerResNetPreTrainedModel,WhisperFeatureExtractor:()=>D.WhisperFeatureExtractor,WhisperForConditionalGeneration:()=>A.WhisperForConditionalGeneration,WhisperModel:()=>A.WhisperModel,WhisperPreTrainedModel:()=>A.WhisperPreTrainedModel,WhisperProcessor:()=>Ie.WhisperProcessor,WhisperTextStreamer:()=>re.WhisperTextStreamer,WhisperTimeStampLogitsProcessor:()=>g.WhisperTimeStampLogitsProcessor,WhisperTokenizer:()=>w.WhisperTokenizer,XLMForQuestionAnswering:()=>A.XLMForQuestionAnswering,XLMForSequenceClassification:()=>A.XLMForSequenceClassification,XLMForTokenClassification:()=>A.XLMForTokenClassification,XLMModel:()=>A.XLMModel,XLMPreTrainedModel:()=>A.XLMPreTrainedModel,XLMRobertaForMaskedLM:()=>A.XLMRobertaForMaskedLM,XLMRobertaForQuestionAnswering:()=>A.XLMRobertaForQuestionAnswering,XLMRobertaForSequenceClassification:()=>A.XLMRobertaForSequenceClassification,XLMRobertaForTokenClassification:()=>A.XLMRobertaForTokenClassification,XLMRobertaModel:()=>A.XLMRobertaModel,XLMRobertaPreTrainedModel:()=>A.XLMRobertaPreTrainedModel,XLMRobertaTokenizer:()=>w.XLMRobertaTokenizer,XLMTokenizer:()=>w.XLMTokenizer,XLMWithLMHeadModel:()=>A.XLMWithLMHeadModel,XVectorOutput:()=>A.XVectorOutput,YolosFeatureExtractor:()=>J.YolosFeatureExtractor,YolosForObjectDetection:()=>A.YolosForObjectDetection,YolosImageProcessor:()=>J.YolosImageProcessor,YolosModel:()=>A.YolosModel,YolosObjectDetectionOutput:()=>A.YolosObjectDetectionOutput,YolosPreTrainedModel:()=>A.YolosPreTrainedModel,ZeroShotAudioClassificationPipeline:()=>k.ZeroShotAudioClassificationPipeline,ZeroShotClassificationPipeline:()=>k.ZeroShotClassificationPipeline,ZeroShotImageClassificationPipeline:()=>k.ZeroShotImageClassificationPipeline,ZeroShotObjectDetectionPipeline:()=>k.ZeroShotObjectDetectionPipeline,bankers_round:()=>z.bankers_round,cat:()=>H.cat,cos_sim:()=>z.cos_sim,dot:()=>z.dot,dynamic_time_warping:()=>z.dynamic_time_warping,env:()=>T.env,full:()=>H.full,full_like:()=>H.full_like,getKeyValueShapes:()=>F.getKeyValueShapes,hamming:()=>Y.hamming,hanning:()=>Y.hanning,interpolate:()=>H.interpolate,interpolate_4d:()=>H.interpolate_4d,interpolate_data:()=>z.interpolate_data,is_chinese_char:()=>w.is_chinese_char,layer_norm:()=>H.layer_norm,load_image:()=>U.load_image,log_softmax:()=>z.log_softmax,magnitude:()=>z.magnitude,matmul:()=>H.matmul,max:()=>z.max,mean:()=>H.mean,mean_pooling:()=>H.mean_pooling,medianFilter:()=>z.medianFilter,mel_filter_bank:()=>Y.mel_filter_bank,min:()=>z.min,ones:()=>H.ones,ones_like:()=>H.ones_like,permute:()=>H.permute,permute_data:()=>z.permute_data,pipeline:()=>k.pipeline,quantize_embeddings:()=>H.quantize_embeddings,rand:()=>H.rand,read_audio:()=>Y.read_audio,rfft:()=>H.rfft,round:()=>z.round,slice:()=>H.slice,softmax:()=>z.softmax,spectrogram:()=>Y.spectrogram,stack:()=>H.stack,std_mean:()=>H.std_mean,topk:()=>H.topk,window_function:()=>Y.window_function,zeros:()=>H.zeros,zeros_like:()=>H.zeros_like});var T=Na("./src/env.js"),k=Na("./src/pipelines.js"),A=Na("./src/models.js"),w=Na("./src/tokenizers.js"),F=Na("./src/configs.js"),Y=Na("./src/utils/audio.js"),U=Na("./src/utils/image.js"),H=Na("./src/utils/tensor.js"),z=Na("./src/utils/maths.js"),N=Na("./src/base/feature_extraction_utils.js"),D=Na("./src/models/feature_extractors.js"),R=Na("./src/models/auto/feature_extraction_auto.js"),Q=Na("./src/base/image_processors_utils.js"),J=Na("./src/models/image_processors.js"),oe=Na("./src/models/auto/image_processing_auto.js"),be=Na("./src/base/processing_utils.js"),Ie=Na("./src/models/processors.js"),ee=Na("./src/models/auto/processing_auto.js"),re=Na("./src/generation/streamers.js"),ce=Na("./src/generation/stopping_criteria.js"),g=Na("./src/generation/logits_process.js")})();var $1=B2.AutoTokenizer,eh=B2.RawAudio,th=B2.StyleTextToSpeech2Model,yp=B2.Tensor,At=At!==void 0?At:{};At.expectedDataFileDownloads||(At.expectedDataFileDownloads=0);var rh=typeof importScripts=="function",lp=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",_p=typeof atob=="function"?atob:function(T){var k,A,w,F,Y,U,H="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",z="",N=0;T=T.replace(/[^A-Za-z0-9\+\/\=]/g,"");do k=H.indexOf(T.charAt(N++))<<2|(F=H.indexOf(T.charAt(N++)))>>4,A=(15&F)<<4|(Y=H.indexOf(T.charAt(N++)))>>2,w=(3&Y)<<6|(U=H.indexOf(T.charAt(N++))),z+=String.fromCharCode(k),Y!==64&&(z+=String.fromCharCode(A)),U!==64&&(z+=String.fromCharCode(w));while(N<T.length);return z};lp&&(process.argv.length>1&&(mp=process.argv[1].replace(/\\/g,"/")),process.argv.slice(2),process.on("uncaughtException",function(T){if(!(T instanceof sh))throw T}),process.on("unhandledRejection",function(T){throw T}),At.inspect=function(){return"[Emscripten Module object]"}),At.expectedDataFileDownloads++,function(){if(At.ENVIRONMENT_IS_PTHREAD)return;const T="/usr/share/espeak-ng-data",k=T+"/lang",A=T+"/voices";(function(w){var F=null,Y=null;function U(){function H(Q,J){if(!Q)throw J+new Error().stack}function z(Q,J,oe){this.start=Q,this.end=J,this.audio=oe}At.FS_createPath("/","usr",!0,!0),At.FS_createPath("/usr","share",!0,!0),At.FS_createPath("/usr/share","espeak-ng-data",!0,!0),At.FS_createPath(T,"lang",!0,!0),At.FS_createPath(k,"aav",!0,!0),At.FS_createPath(k,"art",!0,!0),At.FS_createPath(k,"azc",!0,!0),At.FS_createPath(k,"bat",!0,!0),At.FS_createPath(k,"bnt",!0,!0),At.FS_createPath(k,"ccs",!0,!0),At.FS_createPath(k,"cel",!0,!0),At.FS_createPath(k,"cus",!0,!0),At.FS_createPath(k,"dra",!0,!0),At.FS_createPath(k,"esx",!0,!0),At.FS_createPath(k,"gmq",!0,!0),At.FS_createPath(k,"gmw",!0,!0),At.FS_createPath(k,"grk",!0,!0),At.FS_createPath(k,"inc",!0,!0),At.FS_createPath(k,"ine",!0,!0),At.FS_createPath(k,"ira",!0,!0),At.FS_createPath(k,"iro",!0,!0),At.FS_createPath(k,"itc",!0,!0),At.FS_createPath(k,"jpx",!0,!0),At.FS_createPath(k,"map",!0,!0),At.FS_createPath(k,"miz",!0,!0),At.FS_createPath(k,"myn",!0,!0),At.FS_createPath(k,"poz",!0,!0),At.FS_createPath(k,"roa",!0,!0),At.FS_createPath(k,"sai",!0,!0),At.FS_createPath(k,"sem",!0,!0),At.FS_createPath(k,"sit",!0,!0),At.FS_createPath(k,"tai",!0,!0),At.FS_createPath(k,"trk",!0,!0),At.FS_createPath(k,"urj",!0,!0),At.FS_createPath(k,"zle",!0,!0),At.FS_createPath(k,"zls",!0,!0),At.FS_createPath(k,"zlw",!0,!0),At.FS_createPath(T,"voices",!0,!0),At.FS_createPath(A,"!v",!0,!0),At.FS_createPath(A,"mb",!0,!0),z.prototype={requests:{},open:function(Q,J){this.name=J,this.requests[J]=this,At.addRunDependency("fp "+this.name)},send:function(){},onload:function(){var Q=this.byteArray.subarray(this.start,this.end);this.finish(Q)},finish:function(Q){At.FS_createDataFile(this.name,null,Q,!0,!0,!0),At.removeRunDependency("fp "+this.name),this.requests[this.name]=null}};for(var N=w.files,D=0;D<N.length;++D)new z(N[D].start,N[D].end,N[D].audio||0).open("GET",N[D].filename);function R(Q){H(Q,"Loading data file failed."),H(Q.constructor.name===ArrayBuffer.name,"bad input to processPackageData");var J=new Uint8Array(Q);z.prototype.byteArray=J;for(var oe=w.files,be=0;be<oe.length;++be)z.prototype.requests[oe[be].filename].onload();At.removeRunDependency("datafile_js/espeakng.worker.data")}At.addRunDependency("datafile_js/espeakng.worker.data"),Y?(R(Y),Y=null):F=R}(async()=>{const H=function(R){if(typeof lp=="boolean"&&lp){var Q=Buffer.from(R,"base64");return new Uint8Array(Q.buffer,Q.byteOffset,Q.byteLength)}try{for(var J=_p(R),oe=new Uint8Array(J.length),be=0;be<J.length;++be)oe[be]=J.charCodeAt(be);return oe}catch(Ie){throw console.error(_p),console.error(Ie),new Error("Converting base64 string to bytes failed.")}}(""),z=new Blob([H]).stream().pipeThrough(new DecompressionStream("gzip")),N=[];for await(const R of z)N.push(R);const D=await new Blob(N).arrayBuffer();F?(F(D),F=null):Y=D})(),At.calledRun?U():(At.preRun||(At.preRun=[]),At.preRun.push(U))})({files:[{filename:T+"/en_dict",start:0,end:167064},{filename:T+"/intonations",start:167064,end:169104},{filename:k+"/aav/vi",start:169104,end:169215},{filename:k+"/aav/vi-VN-x-central",start:169215,end:169358},{filename:k+"/aav/vi-VN-x-south",start:169358,end:169500},{filename:k+"/art/eo",start:169500,end:169541},{filename:k+"/art/ia",start:169541,end:169570},{filename:k+"/art/io",start:169570,end:169620},{filename:k+"/art/jbo",start:169620,end:169689},{filename:k+"/art/lfn",start:169689,end:169824},{filename:k+"/art/piqd",start:169824,end:169880},{filename:k+"/art/py",start:169880,end:170020},{filename:k+"/art/qdb",start:170020,end:170077},{filename:k+"/art/qya",start:170077,end:170250},{filename:k+"/art/sjn",start:170250,end:170425},{filename:k+"/azc/nci",start:170425,end:170539},{filename:k+"/bat/lt",start:170539,end:170567},{filename:k+"/bat/ltg",start:170567,end:170879},{filename:k+"/bat/lv",start:170879,end:171108},{filename:k+"/bnt/sw",start:171108,end:171149},{filename:k+"/bnt/tn",start:171149,end:171191},{filename:k+"/ccs/ka",start:171191,end:171315},{filename:k+"/cel/cy",start:171315,end:171352},{filename:k+"/cel/ga",start:171352,end:171418},{filename:k+"/cel/gd",start:171418,end:171469},{filename:k+"/cus/om",start:171469,end:171508},{filename:k+"/dra/kn",start:171508,end:171563},{filename:k+"/dra/ml",start:171563,end:171620},{filename:k+"/dra/ta",start:171620,end:171671},{filename:k+"/dra/te",start:171671,end:171741},{filename:k+"/esx/kl",start:171741,end:171771},{filename:k+"/eu",start:171771,end:171825},{filename:k+"/gmq/da",start:171825,end:171868},{filename:k+"/gmq/is",start:171868,end:171895},{filename:k+"/gmq/nb",start:171895,end:171982},{filename:k+"/gmq/sv",start:171982,end:172007},{filename:k+"/gmw/af",start:172007,end:172130},{filename:k+"/gmw/de",start:172130,end:172172},{filename:k+"/gmw/en",start:172172,end:172312},{filename:k+"/gmw/en-029",start:172312,end:172647},{filename:k+"/gmw/en-GB-scotland",start:172647,end:172942},{filename:k+"/gmw/en-GB-x-gbclan",start:172942,end:173180},{filename:k+"/gmw/en-GB-x-gbcwmd",start:173180,end:173368},{filename:k+"/gmw/en-GB-x-rp",start:173368,end:173617},{filename:k+"/gmw/en-US",start:173617,end:173874},{filename:k+"/gmw/en-US-nyc",start:173874,end:174145},{filename:k+"/gmw/lb",start:174145,end:174176},{filename:k+"/gmw/nl",start:174176,end:174199},{filename:k+"/grk/el",start:174199,end:174222},{filename:k+"/grk/grc",start:174222,end:174321},{filename:k+"/inc/as",start:174321,end:174363},{filename:k+"/inc/bn",start:174363,end:174388},{filename:k+"/inc/bpy",start:174388,end:174427},{filename:k+"/inc/gu",start:174427,end:174469},{filename:k+"/inc/hi",start:174469,end:174492},{filename:k+"/inc/kok",start:174492,end:174518},{filename:k+"/inc/mr",start:174518,end:174559},{filename:k+"/inc/ne",start:174559,end:174596},{filename:k+"/inc/or",start:174596,end:174635},{filename:k+"/inc/pa",start:174635,end:174660},{filename:k+"/inc/sd",start:174660,end:174726},{filename:k+"/inc/si",start:174726,end:174781},{filename:k+"/inc/ur",start:174781,end:174875},{filename:k+"/ine/hy",start:174875,end:174936},{filename:k+"/ine/hyw",start:174936,end:175301},{filename:k+"/ine/sq",start:175301,end:175404},{filename:k+"/ira/fa",start:175404,end:175494},{filename:k+"/ira/fa-Latn",start:175494,end:175763},{filename:k+"/ira/ku",start:175763,end:175803},{filename:k+"/iro/chr",start:175803,end:176372},{filename:k+"/itc/la",start:176372,end:176669},{filename:k+"/jpx/ja",start:176669,end:176721},{filename:k+"/ko",start:176721,end:176772},{filename:k+"/map/haw",start:176772,end:176814},{filename:k+"/miz/mto",start:176814,end:176997},{filename:k+"/myn/quc",start:176997,end:177207},{filename:k+"/poz/id",start:177207,end:177341},{filename:k+"/poz/mi",start:177341,end:177708},{filename:k+"/poz/ms",start:177708,end:178138},{filename:k+"/qu",start:178138,end:178226},{filename:k+"/roa/an",start:178226,end:178253},{filename:k+"/roa/ca",start:178253,end:178278},{filename:k+"/roa/es",start:178278,end:178341},{filename:k+"/roa/es-419",start:178341,end:178508},{filename:k+"/roa/fr",start:178508,end:178587},{filename:k+"/roa/fr-BE",start:178587,end:178671},{filename:k+"/roa/fr-CH",start:178671,end:178757},{filename:k+"/roa/ht",start:178757,end:178897},{filename:k+"/roa/it",start:178897,end:179006},{filename:k+"/roa/pap",start:179006,end:179068},{filename:k+"/roa/pt",start:179068,end:179163},{filename:k+"/roa/pt-BR",start:179163,end:179272},{filename:k+"/roa/ro",start:179272,end:179298},{filename:k+"/sai/gn",start:179298,end:179345},{filename:k+"/sem/am",start:179345,end:179386},{filename:k+"/sem/ar",start:179386,end:179436},{filename:k+"/sem/he",start:179436,end:179476},{filename:k+"/sem/mt",start:179476,end:179517},{filename:k+"/sem/ti",start:179517,end:179610},{filename:k+"/sit/cmn",start:179610,end:180296},{filename:k+"/sit/cmn-Latn-pinyin",start:180296,end:180457},{filename:k+"/sit/hak",start:180457,end:180585},{filename:k+"/sit/my",start:180585,end:180641},{filename:k+"/sit/yue",start:180641,end:180835},{filename:k+"/sit/yue-Latn-jyutping",start:180835,end:181048},{filename:k+"/tai/shn",start:181048,end:181140},{filename:k+"/tai/th",start:181140,end:181177},{filename:k+"/trk/az",start:181177,end:181222},{filename:k+"/trk/ba",start:181222,end:181247},{filename:k+"/trk/cv",start:181247,end:181287},{filename:k+"/trk/kk",start:181287,end:181327},{filename:k+"/trk/ky",start:181327,end:181370},{filename:k+"/trk/nog",start:181370,end:181409},{filename:k+"/trk/tk",start:181409,end:181434},{filename:k+"/trk/tr",start:181434,end:181459},{filename:k+"/trk/tt",start:181459,end:181482},{filename:k+"/trk/ug",start:181482,end:181506},{filename:k+"/trk/uz",start:181506,end:181545},{filename:k+"/urj/et",start:181545,end:181782},{filename:k+"/urj/fi",start:181782,end:182019},{filename:k+"/urj/hu",start:182019,end:182092},{filename:k+"/urj/smj",start:182092,end:182137},{filename:k+"/zle/be",start:182137,end:182189},{filename:k+"/zle/ru",start:182189,end:182246},{filename:k+"/zle/ru-LV",start:182246,end:182526},{filename:k+"/zle/ru-cl",start:182526,end:182617},{filename:k+"/zle/uk",start:182617,end:182714},{filename:k+"/zls/bg",start:182714,end:182825},{filename:k+"/zls/bs",start:182825,end:183055},{filename:k+"/zls/hr",start:183055,end:183317},{filename:k+"/zls/mk",start:183317,end:183345},{filename:k+"/zls/sl",start:183345,end:183388},{filename:k+"/zls/sr",start:183388,end:183638},{filename:k+"/zlw/cs",start:183638,end:183661},{filename:k+"/zlw/pl",start:183661,end:183699},{filename:k+"/zlw/sk",start:183699,end:183723},{filename:T+"/phondata",start:183723,end:734147},{filename:T+"/phonindex",start:734147,end:773403},{filename:T+"/phontab",start:773403,end:829491},{filename:A+"/!v/Alex",start:829491,end:829619},{filename:A+"/!v/Alicia",start:829619,end:830093},{filename:A+"/!v/Andrea",start:830093,end:830450},{filename:A+"/!v/Andy",start:830450,end:830770},{filename:A+"/!v/Annie",start:830770,end:831085},{filename:A+"/!v/AnxiousAndy",start:831085,end:831446},{filename:A+"/!v/Demonic",start:831446,end:835304},{filename:A+"/!v/Denis",start:835304,end:835609},{filename:A+"/!v/Diogo",start:835609,end:835988},{filename:A+"/!v/Gene",start:835988,end:836269},{filename:A+"/!v/Gene2",start:836269,end:836552},{filename:A+"/!v/Henrique",start:836552,end:836933},{filename:A+"/!v/Hugo",start:836933,end:837311},{filename:A+"/!v/Jacky",start:837311,end:837578},{filename:A+"/!v/Lee",start:837578,end:837916},{filename:A+"/!v/Marco",start:837916,end:838383},{filename:A+"/!v/Mario",start:838383,end:838653},{filename:A+"/!v/Michael",start:838653,end:838923},{filename:A+"/!v/Mike",start:838923,end:839035},{filename:A+"/!v/Mr serious",start:839035,end:842228},{filename:A+"/!v/Nguyen",start:842228,end:842508},{filename:A+"/!v/Reed",start:842508,end:842710},{filename:A+"/!v/RicishayMax",start:842710,end:842943},{filename:A+"/!v/RicishayMax2",start:842943,end:843378},{filename:A+"/!v/RicishayMax3",start:843378,end:843813},{filename:A+"/!v/Storm",start:843813,end:844233},{filename:A+"/!v/Tweaky",start:844233,end:847422},{filename:A+"/!v/UniRobot",start:847422,end:847839},{filename:A+"/!v/adam",start:847839,end:847914},{filename:A+"/!v/anika",start:847914,end:848407},{filename:A+"/!v/anikaRobot",start:848407,end:848919},{filename:A+"/!v/announcer",start:848919,end:849219},{filename:A+"/!v/antonio",start:849219,end:849600},{filename:A+"/!v/aunty",start:849600,end:849958},{filename:A+"/!v/belinda",start:849958,end:850298},{filename:A+"/!v/benjamin",start:850298,end:850499},{filename:A+"/!v/boris",start:850499,end:850723},{filename:A+"/!v/caleb",start:850723,end:850780},{filename:A+"/!v/croak",start:850780,end:850873},{filename:A+"/!v/david",start:850873,end:850985},{filename:A+"/!v/ed",start:850985,end:851272},{filename:A+"/!v/edward",start:851272,end:851423},{filename:A+"/!v/edward2",start:851423,end:851575},{filename:A+"/!v/f1",start:851575,end:851899},{filename:A+"/!v/f2",start:851899,end:852256},{filename:A+"/!v/f3",start:852256,end:852631},{filename:A+"/!v/f4",start:852631,end:852981},{filename:A+"/!v/f5",start:852981,end:853413},{filename:A+"/!v/fast",start:853413,end:853562},{filename:A+"/!v/grandma",start:853562,end:853825},{filename:A+"/!v/grandpa",start:853825,end:854081},{filename:A+"/!v/gustave",start:854081,end:854334},{filename:A+"/!v/ian",start:854334,end:857502},{filename:A+"/!v/iven",start:857502,end:857763},{filename:A+"/!v/iven2",start:857763,end:858042},{filename:A+"/!v/iven3",start:858042,end:858304},{filename:A+"/!v/iven4",start:858304,end:858565},{filename:A+"/!v/john",start:858565,end:861751},{filename:A+"/!v/kaukovalta",start:861751,end:862112},{filename:A+"/!v/klatt",start:862112,end:862150},{filename:A+"/!v/klatt2",start:862150,end:862188},{filename:A+"/!v/klatt3",start:862188,end:862227},{filename:A+"/!v/klatt4",start:862227,end:862266},{filename:A+"/!v/klatt5",start:862266,end:862305},{filename:A+"/!v/klatt6",start:862305,end:862344},{filename:A+"/!v/linda",start:862344,end:862694},{filename:A+"/!v/m1",start:862694,end:863029},{filename:A+"/!v/m2",start:863029,end:863293},{filename:A+"/!v/m3",start:863293,end:863593},{filename:A+"/!v/m4",start:863593,end:863883},{filename:A+"/!v/m5",start:863883,end:864145},{filename:A+"/!v/m6",start:864145,end:864333},{filename:A+"/!v/m7",start:864333,end:864587},{filename:A+"/!v/m8",start:864587,end:864871},{filename:A+"/!v/marcelo",start:864871,end:865122},{filename:A+"/!v/max",start:865122,end:865347},{filename:A+"/!v/michel",start:865347,end:865751},{filename:A+"/!v/miguel",start:865751,end:866133},{filename:A+"/!v/mike2",start:866133,end:866321},{filename:A+"/!v/norbert",start:866321,end:869510},{filename:A+"/!v/pablo",start:869510,end:872652},{filename:A+"/!v/paul",start:872652,end:872936},{filename:A+"/!v/pedro",start:872936,end:873288},{filename:A+"/!v/quincy",start:873288,end:873642},{filename:A+"/!v/rob",start:873642,end:873907},{filename:A+"/!v/robert",start:873907,end:874181},{filename:A+"/!v/robosoft",start:874181,end:874632},{filename:A+"/!v/robosoft2",start:874632,end:875086},{filename:A+"/!v/robosoft3",start:875086,end:875541},{filename:A+"/!v/robosoft4",start:875541,end:875988},{filename:A+"/!v/robosoft5",start:875988,end:876433},{filename:A+"/!v/robosoft6",start:876433,end:876720},{filename:A+"/!v/robosoft7",start:876720,end:877130},{filename:A+"/!v/robosoft8",start:877130,end:877373},{filename:A+"/!v/sandro",start:877373,end:877903},{filename:A+"/!v/shelby",start:877903,end:878183},{filename:A+"/!v/steph",start:878183,end:878547},{filename:A+"/!v/steph2",start:878547,end:878914},{filename:A+"/!v/steph3",start:878914,end:879291},{filename:A+"/!v/travis",start:879291,end:879674},{filename:A+"/!v/victor",start:879674,end:879927},{filename:A+"/!v/whisper",start:879927,end:880113},{filename:A+"/!v/whisperf",start:880113,end:880505},{filename:A+"/!v/zac",start:880505,end:880780},{filename:A+"/mb/mb-af1",start:880780,end:880868},{filename:A+"/mb/mb-af1-en",start:880868,end:880951},{filename:A+"/mb/mb-ar1",start:880951,end:881035},{filename:A+"/mb/mb-ar2",start:881035,end:881119},{filename:A+"/mb/mb-br1",start:881119,end:881251},{filename:A+"/mb/mb-br2",start:881251,end:881387},{filename:A+"/mb/mb-br3",start:881387,end:881519},{filename:A+"/mb/mb-br4",start:881519,end:881655},{filename:A+"/mb/mb-ca1",start:881655,end:881760},{filename:A+"/mb/mb-ca2",start:881760,end:881865},{filename:A+"/mb/mb-cn1",start:881865,end:881957},{filename:A+"/mb/mb-cr1",start:881957,end:882068},{filename:A+"/mb/mb-cz1",start:882068,end:882138},{filename:A+"/mb/mb-cz2",start:882138,end:882220},{filename:A+"/mb/mb-de1",start:882220,end:882364},{filename:A+"/mb/mb-de1-en",start:882364,end:882460},{filename:A+"/mb/mb-de2",start:882460,end:882588},{filename:A+"/mb/mb-de2-en",start:882588,end:882668},{filename:A+"/mb/mb-de3",start:882668,end:882767},{filename:A+"/mb/mb-de3-en",start:882767,end:882863},{filename:A+"/mb/mb-de4",start:882863,end:882992},{filename:A+"/mb/mb-de4-en",start:882992,end:883073},{filename:A+"/mb/mb-de5",start:883073,end:883309},{filename:A+"/mb/mb-de5-en",start:883309,end:883399},{filename:A+"/mb/mb-de6",start:883399,end:883521},{filename:A+"/mb/mb-de6-en",start:883521,end:883595},{filename:A+"/mb/mb-de6-grc",start:883595,end:883678},{filename:A+"/mb/mb-de7",start:883678,end:883828},{filename:A+"/mb/mb-de8",start:883828,end:883899},{filename:A+"/mb/mb-ee1",start:883899,end:883996},{filename:A+"/mb/mb-en1",start:883996,end:884127},{filename:A+"/mb/mb-es1",start:884127,end:884241},{filename:A+"/mb/mb-es2",start:884241,end:884349},{filename:A+"/mb/mb-es3",start:884349,end:884453},{filename:A+"/mb/mb-es4",start:884453,end:884541},{filename:A+"/mb/mb-fr1",start:884541,end:884707},{filename:A+"/mb/mb-fr1-en",start:884707,end:884811},{filename:A+"/mb/mb-fr2",start:884811,end:884914},{filename:A+"/mb/mb-fr3",start:884914,end:885014},{filename:A+"/mb/mb-fr4",start:885014,end:885141},{filename:A+"/mb/mb-fr4-en",start:885141,end:885248},{filename:A+"/mb/mb-fr5",start:885248,end:885348},{filename:A+"/mb/mb-fr6",start:885348,end:885448},{filename:A+"/mb/mb-fr7",start:885448,end:885531},{filename:A+"/mb/mb-gr1",start:885531,end:885625},{filename:A+"/mb/mb-gr2",start:885625,end:885719},{filename:A+"/mb/mb-gr2-en",start:885719,end:885807},{filename:A+"/mb/mb-hb1",start:885807,end:885875},{filename:A+"/mb/mb-hb2",start:885875,end:885958},{filename:A+"/mb/mb-hu1",start:885958,end:886060},{filename:A+"/mb/mb-hu1-en",start:886060,end:886157},{filename:A+"/mb/mb-ic1",start:886157,end:886245},{filename:A+"/mb/mb-id1",start:886245,end:886346},{filename:A+"/mb/mb-in1",start:886346,end:886415},{filename:A+"/mb/mb-in2",start:886415,end:886500},{filename:A+"/mb/mb-ir1",start:886500,end:887253},{filename:A+"/mb/mb-it1",start:887253,end:887337},{filename:A+"/mb/mb-it2",start:887337,end:887424},{filename:A+"/mb/mb-it3",start:887424,end:887566},{filename:A+"/mb/mb-it4",start:887566,end:887711},{filename:A+"/mb/mb-jp1",start:887711,end:887782},{filename:A+"/mb/mb-jp2",start:887782,end:887883},{filename:A+"/mb/mb-jp3",start:887883,end:887970},{filename:A+"/mb/mb-la1",start:887970,end:888053},{filename:A+"/mb/mb-lt1",start:888053,end:888140},{filename:A+"/mb/mb-lt2",start:888140,end:888227},{filename:A+"/mb/mb-ma1",start:888227,end:888325},{filename:A+"/mb/mb-mx1",start:888325,end:888445},{filename:A+"/mb/mb-mx2",start:888445,end:888565},{filename:A+"/mb/mb-nl1",start:888565,end:888634},{filename:A+"/mb/mb-nl2",start:888634,end:888730},{filename:A+"/mb/mb-nl2-en",start:888730,end:888821},{filename:A+"/mb/mb-nl3",start:888821,end:888906},{filename:A+"/mb/mb-nz1",start:888906,end:888974},{filename:A+"/mb/mb-pl1",start:888974,end:889073},{filename:A+"/mb/mb-pl1-en",start:889073,end:889155},{filename:A+"/mb/mb-pt1",start:889155,end:889286},{filename:A+"/mb/mb-ro1",start:889286,end:889373},{filename:A+"/mb/mb-ro1-en",start:889373,end:889454},{filename:A+"/mb/mb-sw1",start:889454,end:889552},{filename:A+"/mb/mb-sw1-en",start:889552,end:889645},{filename:A+"/mb/mb-sw2",start:889645,end:889747},{filename:A+"/mb/mb-sw2-en",start:889747,end:889846},{filename:A+"/mb/mb-tl1",start:889846,end:889931},{filename:A+"/mb/mb-tr1",start:889931,end:890016},{filename:A+"/mb/mb-tr2",start:890016,end:890130},{filename:A+"/mb/mb-us1",start:890130,end:890300},{filename:A+"/mb/mb-us2",start:890300,end:890478},{filename:A+"/mb/mb-us3",start:890478,end:890658},{filename:A+"/mb/mb-vz1",start:890658,end:890802}],remote_package_size:890802})}();var vp=Object.assign({},At),mp="./this.program",wf=At.print||console.log.bind(console),T2=At.printErr||console.warn.bind(console);Object.assign(At,vp),vp=null,At.arguments&&At.arguments,At.thisProgram&&(mp=At.thisProgram),At.quit&&At.quit,At.wasmBinary&&At.wasmBinary,At.noExitRuntime;var hp,P2={Memory:function(T){this.buffer=new ArrayBuffer(65536*T.initial)},Module:function(T){},Instance:function(T,k){this.exports=function(A){for(var w,F=new Uint8Array(123),Y=25;Y>=0;--Y)F[48+Y]=52+Y,F[65+Y]=Y,F[97+Y]=26+Y;function U(ee,re,ce){for(var g,I,e=0,u=re,B=ce.length,ue=re+(3*B>>2)-(ce[B-2]=="=")-(ce[B-1]=="=");e<B;e+=4)g=F[ce.charCodeAt(e+1)],I=F[ce.charCodeAt(e+2)],ee[u++]=F[ce.charCodeAt(e)]<<2|g>>4,u<ue&&(ee[u++]=g<<4|I>>2),u<ue&&(ee[u++]=I<<6|F[ce.charCodeAt(e+3)])}F[43]=62,F[47]=63;var H=new ArrayBuffer(16),z=new Int32Array(H),N=new Float32Array(H),D=new Float64Array(H);function R(ee){return z[ee]}function Q(ee,re){z[ee]=re}function J(){return D[0]}function oe(ee){D[0]=ee}function be(){throw new Error("abort")}function Ie(ee){N[2]=ee}return function(ee){var re=ee.a,ce=re.a.buffer,g=new Int8Array(ce),I=new Int16Array(ce),e=new Int32Array(ce),u=new Uint8Array(ce),B=new Uint16Array(ce),ue=new Uint32Array(ce),G=new Float64Array(ce),K=Math.imul,Ve=Math.fround,ve=Math.abs,Re=Math.clz32,Ke=Math.min,nt=Math.floor,Ct=Math.ceil,ht=re.b,et=re.c,ze=re.d,Se=re.e,xe=re.f,Me=re.g,ft=re.h,gt=re.i,_t=re.j,Je=re.k,bt=re.l,rt=re.m,Ne=re.n,it=re.o,Et=re.p,$e=re.q,It=re.r,Tt=re.s,zt=re.t,Wt=re.u,pe=294656,Ut=0,Pe=0,X=0;function ge(t){var r,s=0,a=0,i=0,o=0,d=0,f=0,m=0,M=0,y=0,P=0,q=0,ae=0,de=0,ye=0,Be=0,qe=0,ot=0,pt=0,Mt=0,Ft=0,Lt=0,Xt=0,Ar=0,Mr=0,Tr=0,Yr=0,$r=0,ls=0,Ts=0,Hs=0,$s=0,ga=0,fa=0,Pa=0,Fa=0,za=0,Ha=0,Ya=0,Ja=0,sn=0,vn=0,si=0,Ii=0,zi=0,Yi=0,Ro=0,ro=0,wo=0,so=0,LA=0,uA=0,RA=0,Io=0;if(pe=r=pe-16|0,(0|t)!=2)if(t=e[33283],e[t>>2]!=e[t+4>>2]){if(gn(e[e[32972]+60>>2]),ye=e[47192],sn=r+12|0,Yi=r+8|0,pe=m=pe-6832|0,e[m+6816>>2]=0,e[m+6808>>2]=32,e[m+6800>>2]=0,ye){e[47351]=0,e[47350]=0,e[47352]=0,g[189076]=0,t=e[33284],e[47353]=(0|t)>0?t:0,e[47355]=e[47354]+1,wr(Mr=m+5184|0,0,1600),Ha=m+6800|0,pe=d=pe-2608|0,e[d+2156>>2]=32,e[d+2148>>2]=0,u[134760]&&(g[190280]=0,g[134760]=0),e[ye+8216>>2]=0,e[ye+8220>>2]=0,e[ye+288>>2]=0,e[m+780>>2]=0,g[189360]=0;e:if(t=e[33691])e[d+2152>>2]=t;else{t:{s:{if(!(s=e[33285])){if(t=e[33283],e[t>>2]==e[t+4>>2]){e[d+2152>>2]=0;break e}if(!(s=e[33285]))break s}e[33285]=0;break t}e[33284]=e[33284]+1,t=e[33283],s=0|os[e[t+8>>2]](t)}e[d+2152>>2]=s}so=Mr+2|0,Lt=32;e:{for(;;){Ft=Lt;t:{s:{n:{if(s=e[33691],(i=e[33285])?t=0:(i=e[33285],t=e[33283],t=e[t>>2]==e[t+4>>2]),s|!t|i||!(e[32524]<0)){if(!tA(e[d+2156>>2])){if((i=(0|(t=e[49828]))>0)&(0|(s=t))<(0|(t=e[33284])))break n;if(!((0|(s=e[49845]))<=0|(0|t)<(0|s))){e[49845]=0,g[134760]=1,e[33285]=e[d+2152>>2],a=16384;break e}}Lt=e[d+2156>>2],e[d+2156>>2]=e[d+2152>>2];i:{c:{A:{d:{l:{if((0|(s=e[32524]))>=0){if(u[s+134736|0])break l;e[32524]=-1}if(s=e[33285])break A;if(t=e[33283],e[t>>2]!=e[t+4>>2])break d;s=32;break i}e[33691]|s||(e[d+2156>>2]=g[134736],s=1),e[32524]=s+1,s=g[s+134736|0];break i}if(!(s=e[33285]))break c}e[33285]=0;break i}e[33284]=e[33284]+1,t=e[33283],s=0|os[e[t+8>>2]](t)}e[d+2152>>2]=s,e[33691]=0;i:if(!(M|!e[47203])){c:{if((0|(t=e[d+2156>>2]))!=60){if((0|s)!=35&s-97>>>0>25|(0|t)!=38)break i;for(i=e[33285],o=0;;){A:{if(e[d+2156>>2]=s,!i){if(t=e[33283],e[t>>2]==e[t+4>>2])break A;s=e[d+2156>>2]}if(!(!((s=!!(0|tA(s)))|(0|(t=e[d+2156>>2]))==35)|o>>>0>19)){g[(d+112|0)+o|0]=t,o=o+1|0,(s=e[33285])?(e[33285]=0,i=0):(e[33284]=e[33284]+1,t=e[33283],s=0|os[e[t+8>>2]](t),i=e[33285]);continue}}break}g[(d+112|0)+o|0]=0;A:{d:{if(!(s=e[33285])){if(s=0,t=e[33283],e[t>>2]==e[t+4>>2])break A;if(!(s=e[33285]))break d}e[33285]=0;break A}e[33284]=e[33284]+1,t=e[33283],s=0|os[e[t+8>>2]](t)}e[d+2152>>2]=s,e[d+100>>2]=e[d+2156>>2],e[d+104>>2]=s,e[d+96>>2]=d+112,Br(134736,84252,d+96|0);A:{if(e[d+2156>>2]==59){o=d+2156|0,de=d+2152|0,pe=i=pe-32|0;d:if(u[0|(s=d+112|0)]!=35)t=-1,(0|(s=Si(130752,s)))!=-1&&(e[o>>2]=s,e[de>>2]||(e[de>>2]=32),t=s);else{if(u[0|(t=s+1|0)]==120){e[i>>2]=o,t=lr(s+2|0,90005,i);break d}e[i+16>>2]=o,t=lr(t,90070,i+16|0)}if(pe=i+32|0,(0|t)>0)break A}e[32524]=0,e[d+2156>>2]=38,e[d+2152>>2]=32;break i}if((0|(t=e[d+2156>>2]))>32)break i;if(!(s=e[33692]-20|0)|(0|s)==16)break c;break i}if((0|s)!=47&&!Di(s)&&(0|(t=e[d+2152>>2]))!=63&&(0|t)!=33)break i;if((0|(t=e[d+2148>>2]))>780){e[33691]=e[d+2156>>2],g[0|(t=t+189424|0)]=32,g[t+1|0]=0,e[33285]=e[d+2152>>2],a=16384;break e}for(de=e[33285],o=0,s=e[d+2152>>2];e[d+2156>>2]=s,i=0,de||(t=e[33283],i=e[t>>2]==e[t+4>>2],s=e[d+2156>>2]),!((0|s)==62|i|o>>>0>499);)e[(d+144|0)+(o<<2)>>2]=s,o=o+1|0,(s=e[33285])?(de=0,e[33285]=0):(e[33284]=e[33284]+1,t=e[33283],s=0|os[e[t+8>>2]](t),de=e[33285]);e[(i=d+144|0)+(o<<2)>>2]=0,e[d+2152>>2]=32,Xt=d+2148|0,Ft=e[32525],s=0,pe=Mt=pe-560|0;A:if($o(i,84333,3)&&$o(i,84477,4)){for(t=(i+(ll(i)<<2)|0)-4|0,(0|(Tr=e[t>>2]))==47&&(e[t>>2]=32);;){if(t=e[i+(s<<2)>>2]){if(La(t))t=s;else if(g[(Mt+512|0)+s|0]=Fs(t<<24>>24),t=39,(0|(s=s+1|0))!=39)continue}else t=s;break}if(g[(Mt+512|0)+t|0]=0,u[Mt+512|0]!=47){if((0|(de=Si(130480,Mt+512|0)))!=16&&(s=e[Xt>>2],e[Xt>>2]=s+1,g[s+189424|0]=32),(0|Tr)==47&&(s=0,!(502241>>>de&1)))break A}else(0|(s=Si(130480,Mt+512|1)))!=16&&(o=e[Xt>>2],e[Xt>>2]=o+1,g[o+189424|0]=32),de=s+32|0;o=i+(t<<2)|0,t=e[33708],M=K(t,76)+133076|0,s=262174;d:{l:{o:{p:switch(de-1|0){case 33:b:if(!((0|t)<=1)){for(;;){if(e[K(s=t-1|0,76)+133152>>2]==2)break b;if(e[33708]=s,i=t>>>0>2,t=s,!i)break}t=1}s=Qr(o,34,t);break A;case 32:b:if(!((0|t)<=1)){for(;;){if(e[K(s=t-1|0,76)+133152>>2]==1)break b;if(e[33708]=s,i=t>>>0>2,t=s,!i)break}t=1}s=Qr(o,33,t)+524328|0;break A;case 9:(0|(s=e[33709]))<=18&&(e[33709]=s+1),e[(t=134912+(M=s<<6)|0)>>2]=10,e[t+4>>2]=-1,e[t+8>>2]=-1,e[t+52>>2]=-1,e[t+56>>2]=-1,e[t+44>>2]=-1,e[t+48>>2]=-1,e[t+36>>2]=-1,e[t+40>>2]=-1,e[t+28>>2]=-1,e[t+32>>2]=-1,e[t+20>>2]=-1,e[t+24>>2]=-1,e[t+12>>2]=-1,e[t+16>>2]=-1,e[t+60>>2]=-1,t=es(o,88301),i=es(o,88390),Jo(t,88479)?Jo(t,88528)||(e[28+(134912+(s<<6)|0)>>2]=_n(i,130224)):e[24+(M+134912|0)>>2]=_n(i,130192),Pn(Xt,e[33709]);break o;case 2:for((0|(t=e[33709]))<=18&&(e[33709]=t+1),e[(t=134912+(Ro=t<<6)|0)>>2]=3,e[t+4>>2]=-1,e[t+8>>2]=-1,e[t+52>>2]=-1,e[t+56>>2]=-1,e[t+44>>2]=-1,e[t+48>>2]=-1,e[t+36>>2]=-1,e[t+40>>2]=-1,e[t+28>>2]=-1,e[t+32>>2]=-1,e[t+20>>2]=-1,e[t+24>>2]=-1,e[t+12>>2]=-1,e[t+16>>2]=-1,e[t+60>>2]=-1,$s=1;;){if(i=es(o,e[130448+(ga=$s<<2)>>2])){Tr=0,t=e[ga+131072>>2];b:if(de=e[t>>2])for(;;){for(s=0;M=g[s+de|0],(Ft=e[(s<<2)+i>>2])&&(s=s+1|0,(0|M)==(0|Ft)););switch(Ft-34|0){case 0:case 5:if(!M)break b}if(!(de=e[t+((Tr=Tr+1|0)<<3)>>2]))break}LA=ga+(Ro+134912|0)|0;b:if((0|(t=e[4+(t+(Tr<<3)|0)>>2]))>=0)t=(0|K(t,e[4+(ga+134912|0)>>2]))/100|0;else{for(;i=(t=i)+4|0,La(e[t>>2]););for(ro=e[t>>2]==43,i=((wo=e[(t=t+(ro<<2)|0)>>2]==45)<<2)+t|0,Tr=Mt+96|0,pe=de=(pe=M=pe-16|0)-224|0,wr(de+16|0,0,144),t=de+160|4,e[de+24>>2]=t,e[de+60>>2]=t,e[de+92>>2]=-1,e[de+64>>2]=60,e[de+20>>2]=t,e[de+48>>2]=19,s=i;s=(t=s)+4|0,Ft=(Ft=e[t>>2])?Ra(124960,Ft):0;);e[de+100>>2]=t,li(s=de+16|0,0,0),Dt(de,s,1,1),s=e[de+8>>2],uA=e[de+12>>2],Ft=e[de>>2],RA=e[de+4>>2],Tr&&(Io=Tr,Tr=e[de+136>>2]+(e[de+20>>2]-e[de+60>>2]|0)|0,e[Io>>2]=Tr?t+(Tr<<2)|0:i),e[(t=M)+8>>2]=s,e[t+12>>2]=uA,e[t>>2]=Ft,e[t+4>>2]=RA,pe=de+224|0,pt=Ai(e[t>>2],e[t+4>>2],e[t+8>>2],e[t+12>>2]),pe=t+16|0;m:{s=100;C:if((0|(t=i))!=(0|(i=e[Mt+96>>2]))){s=wo?-1:ro;h:{if((0|(t=e[i>>2]))!=115){if((0|t)!=37)break h;if(ve(pt=s?+(0|s)*pt+100:pt)<2147483648){s=~~pt;break C}s=-2147483648;break C}if(e[i+4>>2]==116){oe(+(Ts=pt*+(0|s)/12)),t=0|R(1),R(0);M:{if((s=(t=t>>>20&2047)-969|0)>>>0>=63){if(pt=Ts+1,(0|s)<0)break M;if(oe(+Ts),s=0|R(1),i=0|R(0),!(t>>>0<1033)){if(pt=0,!i&(0|s)==-1048576||(pt=Ts+1,t>>>0>=2047))break M;if((0|s)>0|(0|s)>=0){G[8+(t=pe-16|0)>>3]=3105036184601418e216,pt=3105036184601418e216*G[t+8>>3];break M}if(!(s>>>0<3230714880)){G[8+(t=pe-16|0)>>3]=12882297539194267e-247,pt=12882297539194267e-247*G[t+8>>3];break M}}M=t,t=!(i<<1)&(0|(t=s<<1|i>>>31))==-2129002496|t>>>0<2165964800?M:0}vn=(Ts=(pt=Ts-((Ya=(pt=G[14416])+Ts)-pt))*pt)*Ts*(pt*G[14421]+G[14420]),Ts*=pt*G[14419]+G[14418],pt*=G[14417],oe(+Ya),R(1),M=0|R(0),pt=vn+(Ts+(pt+G[115376+(i=M<<4&2032)>>3])),Ft=e[(i=i+115384|0)>>2],de=e[i+4>>2],i=(s=Ft)+(Ft=0)|0,s=(M<<13)+de|0,s=i>>>0<Ft>>>0?s+1|0:s,t?(Q(0,0|i),Q(1,0|s),pt=(Ts=+J())*pt+Ts):-2147483648&M?(Q(0,0|i),Q(1,s+1071644672|0),(pt=(Ya=(Ts=+J())*pt)+Ts)<1&&(e[8+(t=pe-16|0)>>2]=0,e[t+12>>2]=1048576,G[t+8>>3]=22250738585072014e-324*G[t+8>>3],pt=(pt=(vn=pt+1)+(Ya+(Ts-pt)+(pt+(1-vn)))+-1)==0?0:pt),pt*=22250738585072014e-324):(Q(0,0|i),Q(1,s+-1048576|0),pt=(Ts=+J())*pt+Ts,pt+=pt)}if(ve(pt*=100)<2147483648){s=~~pt;break C}s=-2147483648;break C}}if((0|$s)!=1)break m;if(s)s=100+(t=ve(pt=pt*+(0|s)*100)<2147483648?~~pt:-2147483648)|0;else{if(ve(pt*=100)<2147483648){s=~~pt;break C}s=-2147483648}}t=(0|K(s,e[ga+134848>>2]))/100|0;break b}t=ve(pt)<2147483648?~~pt:-2147483648,s&&(t=e[ga+134848>>2]+K(t,s)|0)}e[LA+4>>2]=t}if((0|($s=$s+1|0))==5)break}Pn(Xt,e[33709]);break o;case 11:(0|(s=e[33709]))<=18&&(e[33709]=s+1),e[(t=134912+(s<<6)|0)>>2]=12,e[t+4>>2]=-1,e[t+8>>2]=-1,e[t+52>>2]=-1,e[t+56>>2]=-1,e[t+44>>2]=-1,e[t+48>>2]=-1,e[t+36>>2]=-1,e[t+40>>2]=-1,e[t+28>>2]=-1,e[t+32>>2]=-1,e[t+20>>2]=-1,e[t+24>>2]=-1,e[t+12>>2]=-1,e[t+16>>2]=-1,e[t+60>>2]=-1,t=(t=es(o,88658))?_n(t,130400):3,i=134912+(s<<6)|0,e[e[47192]+148>>2]!=1?(e[52+(134912+(s<<6)|0)>>2]=t,t=u[t+102776|0]):(e[20+(134912+(s<<6)|0)>>2]=u[t+102764|0],t=u[t+102770|0]),e[i+12>>2]=t,Pn(Xt,e[33709]);break o;case 34:case 41:case 43:if(!((0|(t=e[33709]))<=0)){if(o=de-32|0,de=0,i=0,s=0,t>>>0>=4)for(M=-4&t,Tr=0;$s=2|s,ga=1|s,i=(0|o)==e[134912+((Ft=3|s)<<6)>>2]?Ft:(0|o)==e[134912+($s<<6)>>2]?$s:(0|o)==e[134912+(ga<<6)>>2]?ga:(0|o)==e[134912+(s<<6)>>2]?s:i,s=s+4|0,(0|M)!=(0|(Tr=Tr+4|0)););if(M=3&t)for(;i=(0|o)==e[134912+(s<<6)>>2]?s:i,s=s+1|0,(0|M)!=(0|(de=de+1|0)););(0|i)<=0||(e[33709]=i,t=i)}Pn(Xt,t);break o;case 7:if(t=es(o,88741),s=es(o,88860),(0|_n(t,130176))!=1)break o;t=e[Xt>>2],e[Xt>>2]=t+1,g[t+189424|0]=91,t=e[Xt>>2],e[Xt>>2]=t+1,g[t+189424|0]=91,t=Fn((t=e[Xt>>2])+189424|0,s,800-t|0)+e[Xt>>2]|0,e[Xt>>2]=t+1,g[t+189424|0]=93,t=e[Xt>>2],e[Xt>>2]=t+1,g[t+189424|0]=93;break o;case 35:e[33692]==36&&(g[e[Xt>>2]+189424|0]=0,(i=Si(131104,s=(t=e[33707])+189424|0))&&(e[Xt>>2]=ia(i,s)+t)),t=e[Xt>>2],e[Xt>>2]=t+1,g[t+189424|0]=1,t=e[Xt>>2],e[Xt>>2]=t+1,g[t+189424|0]=89,e[33692]=0;break o;case 8:if(!(t=es(o,89299)))break o;g[134824]=1,s=e[Xt>>2],e[Xt>>2]=Fn(s+189424|0,t,800-s|0)+e[Xt>>2];break o;case 13:g[134824]=1;break o;case 40:case 45:g[134824]=0;break o;case 4:if(!(t=es(o,89360)))break o;if(Fn(Mt+352|0,t,160),u[Mt+352|0]&&!Ta(199328,Mt+352|0)){g[134760]=1,g[199328]=0,s=16384;break A}if((0|(t=Do(Mt+352|0)))<0)break o;e[Mt+20>>2]=t,e[Mt+16>>2]=1,Br(t=Mt+352|0,89460,Mt+16|0),Hr(e[Xt>>2]+189424|0,t),e[Xt>>2]=e[Xt>>2]+zr(t);break o;case 10:(0|(s=e[33709]))<=18&&(e[33709]=s+1),e[(t=134912+(s<<6)|0)>>2]=11,e[t+4>>2]=-1,e[t+8>>2]=-1,e[t+52>>2]=-1,e[t+56>>2]=-1,e[t+44>>2]=-1,e[t+48>>2]=-1,e[t+36>>2]=-1,e[t+40>>2]=-1,e[t+28>>2]=-1,e[t+32>>2]=-1,e[t+20>>2]=-1,e[t+24>>2]=-1,e[t+12>>2]=-1,e[t+16>>2]=-1,e[t+60>>2]=-1;b:if(t=es(o,89514)){if(Fn(Mt+352|0,t,160),e[34441]){if((0|(t=Do(Mt+352|0)))<0||0|os[e[34441]](1,t+e[33282]|0,Ft))break b;e[Mt+68>>2]=t,e[Mt+64>>2]=1,Br(Mt+352|0,89658,Mt- -64|0)}else{if(!Ft|u[Mt+352|0]==47?t=Yo(Mt+352|0):(e[Mt+48>>2]=Ft,e[Mt+52>>2]=Mt+352,Br(t=Mt+96|0,89564,Mt+48|0),t=Yo(t)),(0|t)<0)break b;e[Mt+36>>2]=t,e[Mt+32>>2]=1,Br(Mt+352|0,89623,Mt+32|0)}t=Mt+352|0,Hr(e[Xt>>2]+189424|0,t),e[Xt>>2]=e[Xt>>2]+zr(t),e[4+(134912+(s<<6)|0)>>2]=1}if(Pn(Xt,e[33709]),(0|Tr)==47){ss(11,Xt),s=16384;break A}g[134772]=1,s=16384;break A;case 42:ss(43,Xt),g[134772]=0,s=16384;break A;case 12:b:{if(t=es(o,89714)){if(s=16384,(M=(0|(t=_n(t,130336)))<0?2:t)>>>0<=2&&(t=e[Xt>>2],e[Mt+84>>2]=M,e[Mt+80>>2]=1,Br(t+189424|0,89770,Mt+80|0),e[Xt>>2]=e[Xt>>2]+3,s=0),t=e[102784+(M<<2)>>2],!(i=es(o,89907)))break b;break l}if(s=16384,i=es(o,89907))break l;t=21;break d}if(M>>>0<3)break o;break d;case 0:(t=es(o,89965))&&(Fn(s=Mt+352|0,t,160),Do(s)),s=Qr(o,1,e[33708])?147456:0;break A;case 1:s=Qr(o,2,t)?147456:0;break A;case 5:s=0,e[M>>2]==6&&(s=Qr(o,38,t),t=e[33708]),s=524358+(Qr(o,6,t)|s)|0;break A;case 6:s=0,(0|(i=e[M>>2]))==6&&(s=Qr(o,38,t),i=e[M>>2]),(0|i)==7&&(s=Qr(o,39,e[33708])|s),s=524358+(s|Qr(o,7,e[33708]))|0;break A;case 37:if(s=524328,e[M>>2]!=6)break A;s=Qr(o,38,t)+524328|0;break A;case 38:if(s=524358,(-2&e[M>>2])!=6)break A;s=Qr(o,39,t)+524358|0;break A;case 14:case 46:break A;case 3:break p;default:break o}t=es(o,88893),s=es(o,88992),i=es(o,89153),o=_n(t,130272),s=_n(s,130320),t=nl(i,0),e[Mt>>2]=1,i=(0|t)<2?193:t- -64|0,s=(0|(t=(0|s)==1?19:o))==64?i:t,e[Mt+4>>2]=s,Br(t=Mt+352|0,89230,Mt),Hr(e[Xt>>2]+189424|0,t),t=e[Xt>>2]+zr(t)|0,e[Xt>>2]=t,e[33707]=t,e[33692]=s}s=0;break A}t=nl(i,1),i=e[33722],TA(1,e[33713]),(0|(t=(0|(i=(0|K(t,i))/100<<8))/(0|K(e[36429],10))|0))<=199&&(t=(0|i)/(0|K(e[36428],10))|0),s=s||16384}i=t>>>5|0,o=t,s=((t=(0|t)>4095)?i>>>0>=4095?4095:i:o)+(t?8388608|s:s)|0}if(pe=Mt+560|0,s){if(t=e[d+2148>>2]+189424|0,g[0|t]=32,g[t+1|0]=0,!(131072&s)){a=s;break e}Hr(189360,134784),a=s;break e}e[d+2156>>2]=32;A:{d:{if(!(s=e[33285])){if(M=0,t=e[33283],e[t>>2]==e[t+4>>2])continue;if(!(s=e[33285]))break d}e[33285]=0;break A}e[33284]=e[33284]+1,t=e[33283],s=0|os[e[t+8>>2]](t)}e[d+2152>>2]=s,M=0;continue}e[d+2156>>2]=t+57344}if(u[134824])continue;if(i=e[d+2156>>2],!((0|(t=e[d+2152>>2]))!=10|e[47268]!=-1)){(0|(a=ti(i)))==16384?(t=e[d+2148>>2],I[Mr+(t<<1)>>1]=e[33284]-e[47353],e[Ha>>2]=t,a=524328,t=ia(e[d+2156>>2],t+189424|0)+e[d+2148>>2]|0):t=e[d+2148>>2],g[0|(t=t+189424|0)]=32,g[t+1|0]=0;break e}i:if((0|i)==1){if((0|t)!=66){if((0|t)!=86)break i;for(t=e[d+2148>>2],e[d+2148>>2]=t+1,g[t+189424|0]=0;;){c:{A:{d:{if(!(s=e[33285])){if(t=e[33283],e[t>>2]==e[t+4>>2])break c;if(!(s=e[33285]))break d}e[33285]=0;break A}e[33284]=e[33284]+1,t=e[33283],s=0|os[e[t+8>>2]](t)}if(e[d+2156>>2]=s,!(La(s)||(0|(t=e[d+2148>>2]))>=799)){e[d+2148>>2]=t+1,g[t+189424|0]=e[d+2156>>2];continue}}break}g[e[d+2148>>2]+189424|0]=0,a=147456;break e}s=e[d+2148>>2],g[0|(t=s+189424|0)]=32,g[t+1|0]=32,g[t+2|0]=32,g[t+3|0]=0,e[d+2148>>2]=s+3;c:{A:{d:{l:{o:{p:{if(!(s=e[33285])){if(t=e[33283],e[t>>2]==e[t+4>>2])break l;if(!(s=e[33285]))break p}e[33285]=0;break o}e[33284]=e[33284]+1,t=e[33283],s=0|os[e[t+8>>2]](t)}if(e[d+2152>>2]=s,i=0,(0|s)!=48)break d;break A}s=e[d+2152>>2]}if(e[47208]=0,e[47201]=1,(0|s)==49)break c;for(i=e[33285],o=0;;){d:{if(!i){if(t=e[33283],e[t>>2]==e[t+4>>2])break d;s=e[d+2152>>2]}if(!(La(s)|o>>>0>58)){e[188832+(o<<2)>>2]=e[d+2152>>2],(s=e[33285])?(e[33285]=0,i=0):(e[33284]=e[33284]+1,t=e[33283],s=0|os[e[t+8>>2]](t),i=e[33285]),o=o+1|0,e[d+2152>>2]=s,t=e[d+2148>>2],e[d+2148>>2]=t+1,g[t+189424|0]=32;continue}}break}i=2,e[188832+(o<<2)>>2]=0}e[47201]=i}c:{if(!(s=e[33285])){if(t=e[33283],e[t>>2]==e[t+4>>2])continue;if(!(s=e[33285]))break c}e[33285]=0,e[d+2152>>2]=s;continue}e[33284]=e[33284]+1,t=e[33283],e[d+2152>>2]=os[e[t+8>>2]](t);continue}Pa=Pa+1|0,s=0,t=e[ye+340>>2];i:if(o=B[t>>1]){for(;;){if((65535&o)!=(0|i)){if(o=B[t+((s=s+2|0)<<1)>>1])continue;break i}break}switch(0|(t=B[t+(s<<1|2)>>1])){case 1:continue;case 0:break i}e[d+2156>>2]=t,i=t}tA(i)?(qe=1,s=e[d+2156>>2]):$r?(e[33285]=e[d+2152>>2],s=1328,e[d+2156>>2]=1328,e[d+2152>>2]=32,$r=0):(0|(s=e[d+2156>>2]))!=3851?($r=0,(0|s)!=3405|e[d+2152>>2]!=8205||(s=3406,e[d+2156>>2]=3406)):(s=32,e[d+2156>>2]=32,$r=0);i:if(Pi(s)){if(e[ye+8216>>2]=e[ye+8216>>2]+1,e[33692]|e[47200]!=2||Pi(Lt)||(e[d+2544>>2]=0,e[d+2548>>2]=0,e[d+2304>>2]=84731,!ma(ye,d+2304|0,d+2160|0,d+2544|0,0,0))||(ns(ye,t=d+2160|0,d+2544|0,-1,0),Lr(s=t,t=d+2336|0),e[d+80>>2]=t,Br(s=d+2240|0,85451,d+80|0),t=e[d+2148>>2],(0|(s=zr(s)+t|0))>=800))break i;Hr(t+189424|0,d+2240|0),e[d+2148>>2]=s}else Di(e[d+2156>>2])&&(e[ye+8220>>2]=e[ye+8220>>2]+1);if(s=e[d+2152>>2],t=e[d+2156>>2],e[47204])if((0|M)>0)M=M-1|0;else{if(!((0|t)!=91|(0|s)!=91)){i=0,M=-1;break t}M=(0|t)==93&&(0|s)==93?2:M}if((0|t)==10){for(i=e[33285],o=0;;){i:{if(!i){if(t=e[33283],e[t>>2]==e[t+4>>2])break i;s=e[d+2152>>2]}if(La(s)){o=(e[d+2152>>2]==10)+o|0,(s=e[33285])?(e[33285]=0,i=0):(e[33284]=e[33284]+1,t=e[33283],s=0|os[e[t+8>>2]](t),i=e[33285]),e[d+2152>>2]=s;continue}}break}if((0|o)>0){a&&wr(t=Fa+189424|0,32,Ir(d+2336|0,t)),t=e[d+2148>>2]+189424|0,g[0|t]=32,g[t+1|0]=0,e[33285]=e[d+2152>>2],a=e[47203]?524358:K((0|o)>=3?3:o,30)+524328|0;break e}if(t=e[47268]<(0|Pa),Pa=0,!t){t=e[d+2148>>2]+189424|0,g[0|t]=32,g[t+1|0]=0,e[33285]=e[d+2152>>2],a=262174;break e}}if(i=0,e[33692]|M)break t;if(t=0,!a)break s;if(La(e[d+2156>>2])){t=a;break s}if(aa(e[d+2156>>2])&&Ci(e[d+2156>>2]))break s;e[33691]=e[d+2156>>2],g[0|(t=Fa+189424|0)]=32,g[t+1|0]=0,e[33285]=e[d+2152>>2];break e}$r&&(e[d+2148>>2]=ia(1328,e[d+2148>>2]+189424|0)+e[d+2148>>2]),a&&wr(t=Fa+189424|0,32,Ir(d+2336|0,t)),t=e[d+2148>>2]+189424|0,g[0|t]=32,g[t+1|0]=0}a=589864;break e}if(!((0|(s=e[d+2156>>2]))!=46|e[d+2152>>2]!=46)){s:{n:{i:{if(!(s=e[33285])){if(s=e[33283],e[s>>2]==e[s+4>>2])break s;if(!(s=e[33285]))break i}e[33285]=0;break n}e[33284]=e[33284]+1,s=e[33283],s=0|os[e[s+8>>2]](s)}if(f=s,(0|s)==46)for(e[d+2152>>2]=32,e[d+2156>>2]=8230,f=e[33285];;){n:{i:{if(!f){if(s=e[33283],e[s>>2]==e[s+4>>2]){f=46;break s}if(!(f=e[33285]))break i}e[33285]=0,s=0;break n}e[33284]=e[33284]+1,s=e[33283],f=0|os[e[s+8>>2]](s),s=e[33285]}if((0|f)!=46)break s;e[d+2152>>2]=32,e[d+2156>>2]=8230,f=s}}(0|(s=e[d+2156>>2]))!=8230?e[33285]=f:(e[d+2152>>2]=f,s=8230)}if(Tr=0,(0|(de=ti(s)))!=16384){s:if(536621&de)for(s=e[33285];;){if(!s&&(s=e[33283],e[s>>2]==e[s+4>>2])||!(536621&ti(e[d+2152>>2])))break s;(f=e[33285])?(e[33285]=0,s=0):(e[33284]=e[33284]+1,s=e[33283],f=0|os[e[s+8>>2]](s),s=e[33285]),e[d+2152>>2]=f}if(1048576&de){e[m+780>>2]=de>>>12&15,$r=1,M=0,a=t;continue}(La(e[d+2152>>2])|32768&de||ho(e[d+2152>>2])||(0|(s=e[d+2152>>2]))==63||(o=0,e[33285]||(s=e[33283],o=e[s>>2]==e[s+4>>2],s=e[d+2152>>2]),o||(0|s)==1))&&(Tr=1)}if((0|(s=e[d+2156>>2]))==57404&&(e[d+2156>>2]=60,s=60),e[47201]){a=0;s:if(!(1<<(o=or(s))&1879048255&&o>>>0<=30)){if(!((o=or(s))>>>0>27)){if(116672&(M=1<<o))break s;if(134227968&M){a=!(1024&fe(s,o));break s}}a=1}if(!(u[134772]|!a)&&(e[47201]==1||Ra(188832,e[d+2156>>2]))){e[ye+288>>2]=0,i=e[d+2156>>2],g[d+2336|0]=0,M=e[d+2152>>2],s=0;s:{n:if(!((0|(a=e[34064]))<=0))for(;;){if((0|i)==e[136272+(s<<4)>>2]){if(e[136276+(s<<4)>>2])break s;if(Ms(0,s))break n;break s}if((0|a)==(0|(s=s+1|0)))break}s=-1}s:if((0|s)>=0)e[d>>2]=s,Br(d+2336|0,86007,d),e[33285]=M;else if((o=!Tr)|(0|i)!=46|(0|M)==46||(e[d+2600>>2]=0,e[d+2604>>2]=0,e[d+2540>>2]=86036,!ma(ye,d+2540|0,d+2544|0,d+2600|0,0,0))?s=Ei(d+2240|0,ye,i,0):(ns(ye,s=d+2544|0,d+2600|0,-1,0),Lr(a=s,s=d+2160|0),e[d+64>>2]=s,Br(s=d+2304|0,85451,d- -64|0)),a=s,o|!e[d+2148>>2]|2&u[ye+76|0]){for(s=e[33285],o=1;;){n:{i:{if(!s){if(s=e[33283],e[s>>2]==e[s+4>>2]|(0|i)==60|(0|i)!=(0|M))break n;if(o=o+1|0,M=e[33285])break i;e[33284]=e[33284]+1,s=e[33283],M=0|os[e[s+8>>2]](s),s=e[33285];continue}if((0|i)==60|(0|i)!=(0|M))break n;M=s,o=o+1|0}s=0,e[33285]=0;continue}break}if(e[d+2152>>2]=M,Tr&&(e[33285]=M),(0|o)==1){e[d+16>>2]=a,Br(d+2336|0,86219,d+16|0);break s}if((0|o)<=3){if(g[d+2336|0]=0,(0|(s=e[50786]))<=299&&(e[d+2336>>2]=u[86728]|u[86729]<<8|u[86730]<<16|u[86731]<<24,I[d+2340>>1]=u[86732]|u[86733]<<8),(0|o)>0){for(;e[d+32>>2]=a,Br(s=d+2160|0,86219,d+32|0),M=o>>>0>1,Ca(d+2336|0,s),o=o-1|0,M;);s=e[50786]}if((0|s)>299)break s;e[d+2160>>2]=u[86857]|u[86858]<<8|u[86859]<<16|u[86860]<<24,s=u[86860]|u[86861]<<8|u[86862]<<16|u[86863]<<24,g[d+2163|0]=s,g[d+2164|0]=s>>>8,g[d+2165|0]=s>>>16,g[d+2166|0]=s>>>24,Ca(d+2336|0,d+2160|0);break s}e[d+56>>2]=a,e[d+52>>2]=o,e[d+48>>2]=a,Br(d+2336|0,86932,d+48|0)}else e[33691]=i,e[33285]=M,I[d+2336>>1]=32;if(o=zr(a=d+2336|0),Hr((s=e[d+2148>>2])+189424|0,a),e[d+2148>>2]=s+o,Tr){if((0|i)==45){a=16384;break e}if(a=ti(i),!(2&u[ye+76|0]|(0|s)<=0)){a=(-32769&a)==266270?262148:(28672&a)==4096?266244:262148;break e}if(!(524288&a)){a=(28672&a)==4096?266244:262148;break e}if((0|a)>=0)break e}i=e[d+2156>>2]}}if(i|!(2097152&de)||(s=Hr(e[d+2148>>2]+189424|0,Ei(d+2336|0,ye,e[d+2156>>2],1)),u[0|s]?(e[d+2148>>2]=e[d+2148>>2]+zr(s),de&=-28673,i=e[d+2156>>2]):i=0),M=0,Tr){s:if(La(f=e[d+2152>>2]))for(o=e[33285],s=0;;){if(!o&&(a=e[33283],e[a>>2]==e[a+4>>2])||!La(f))break s;s=((0|f)==10)+s|0,(f=e[33285])?(e[33285]=0,o=0):(e[33284]=e[33284]+1,a=e[33283],f=0|os[e[a+8>>2]](a),o=e[33285])}else s=0;a=(0|(M=e[d+2156>>2]))==46&&(0|s)<2?4194304|de:de;s:{if(!s){o=1,(0|M)!=44|(0|Lt)!=46|e[ye+212>>2]!=26741|Ft-48>>>0>=10||f-48>>>0>=10&&!Ci(f)||(e[d+2156>>2]=1367,o=0),(0|(de=e[d+2156>>2]))!=46|(0|f)!=39||(M=o,de=e[33283],(0|(Mt=e[de>>2]))==e[de+4>>2]?o=0:(o=0|os[e[de+8>>2]](de),e[de>>2]=Mt),de=e[d+2156>>2],o=(0|o)!=115&M);n:if((0|de)!=46)o&=qe;else{i:if(1&g[ye+106|0]){if(!(Lt-48>>>0<10)&&((M=Lt-73|0)>>>0>15|!(1<<M&40969)||!(1<<(M=Ft-73|0)&40969&&M>>>0<=15||La(Ft))))break i;o=Lt-48>>>0>=10?0:!Ci(f)&(0|f)!=45&o}if(Ci(f)&&(o=u[ye+208|0]!=0&o),qe){de=e[d+2156>>2];break n}de=32,e[d+2156>>2]=32,o=0}if(!(!o|(0|de)!=46|!e[47203]|(0|f)!=60)){Fa=e[d+2148>>2],t=a;break s}if(!o)break s}if(t=e[d+2148>>2]+189424|0,g[0|t]=32,g[t+1|0]=0,e[33285]=f,Lt-48>>>0<10&&(a=aa(f)?a:-4194305&a),(0|s)<2)break e;a=(0|a)==536621?536656:(0|a)==532520?532555:524358;break e}(e[33285]||(M=0,s=e[33283],e[s>>2]!=e[s+4>>2]))&&(M=0,La(e[d+2152>>2])&&(e[33285]=f))}a=t}if(e[33712]!=1){if((0|i)!=(0|(s=e[d+2156>>2])))o=e[d+2148>>2],(0|s)==57404&&(s=60,e[d+2156>>2]=60);else{t:{if(ho(i))s=57384;else{if(s=45,e[d+2156>>2]==45)break t;s=32}e[d+2156>>2]=s}o=e[d+2148>>2]}e[d+2148>>2]=ia(s,o+189424|0)+e[d+2148>>2],La(e[d+2156>>2])||ho(e[d+2156>>2])||(t=e[d+2148>>2],I[Mr+(t<<1)>>1]=e[33284]-e[47353],(0|t)<=(o+1|0)||wr(so+(o<<1)|0,255,t+~o<<1)),s=e[d+2148>>2],e[Ha>>2]=s;t:{s:{if((0|s)>725){if(!aa(e[d+2156>>2]))break s;s=e[d+2148>>2]}if((0|s)<796)continue;break t}if(s=e[d+2148>>2],!(e[d+2156>>2]-48>>>0>=10)&&(0|s)<796)continue}break}}g[0|(t=s+189424|0)]=32,g[t+1|0]=0,e[33285]=e[d+2152>>2],a=16384}pe=d+2608|0,$r=a,sn&&(t=e[m+780>>2],e[sn>>2]=t||$r>>>12&7),t=(m+5184|0)+(e[m+6800>>2]<<1)|0,I[t+6>>1]=0,I[t+2>>1]=0,I[t+4>>1]=32767,de=K(4095&$r,8388608&$r?320:10),a=189424;e:{t:{s:if(t=u[189424]){for(;;){if(!!(255&(t=t<<24>>24))&t>>>0<33){if(t=u[0|(a=a+1|0)])continue;break s}break}if(u[0|a])break t}de=(0|(s=de-(t=e[47566])|0))>0?s:0,e[47566]=de+t,$r=u[190268]?524288|$r:$r,e[ye+8240>>2]=$r;break e}e[47566]=de,t=u[190268],e[ye+8240>>2]=$r,t&&(ls=1,e[47568]=e[47568]+1,(0|(t=e[47569]))<=0||(t=t-1|0,e[47569]=t,t||(g[190280]=0)))}e[49572]=1,e[47572]=655360,e[47573]=0,e[ye+8184>>2]=0,e[ye+8188>>2]=0,t=0,e[ye+288>>2]=0,e[(s=ye- -8192|0)>>2]=0,e[s+4>>2]=0,e[ye+8200>>2]=0,e[ye+8224>>2]=0,e[ye+8228>>2]=0,e[(s=ye+8232|0)>>2]=0,e[s+4>>2]=0,g[m+786|0]=32,I[m+784>>1]=8192,e[m+6812>>2]=32,I[m+1588>>1]=3,e[m+1584>>2]=0,a=0;e:if(!((0|(s=e[m+6800>>2]))<=0)){for(;;){if(I[(m+5184|0)+(a<<1)>>1]>0)break e;if((0|s)==(0|(a=a+1|0)))break}a=s}if(s=B[(m+5184|0)+(a<<1)>>1],I[m+1592>>1]=s,s)for(;t=!!(65535&~s)+t|0,s=B[(m+5184|0)+((a=a+1|0)<<1)>>1];);for(g[m+1594|0]=t,o=3,Mr=1,a=0;;){Ft=e[m+6808>>2],Us(m+6808|0,(Xt=(m+784|0)+o|0)-1|0),!u[ye+170|0]|e[m+6808>>2]-48>>>0>=10||aa(Ft)&&(e[m+6808>>2]=97),ot?e[m+6812>>2]=ot:P&&Us(m+6812|0,P+189423|0),s=P;e:{t:if(a||(s=Ir(m+6816|0,P+189424|0)+P|0,a=e[m+6816>>2])){if(qe=Ir(m+6804|0,t=s+189424|0),(0|a)==1){if(i=s-1|0,ot=32,Lt=0,e[m+6812>>2]!=32){s=i,t=32;break t}P=0,a=s;s:{n:switch(u[0|t]-43|0){case 0:a=s+1|0,P=64;break s;case 2:break n;default:break s}a=s+1|0,P=96}if(g[0|(t=a+189424|0)]-48>>>0>=10)f=a+1|0,qe=-1;else{for(qe=Xi(t);a=(t=a)+1|0,g[t+189424|0]-48>>>0<10;);f=a,a=t}if((0|(ot=e[47350]))>247)t=0;else if(t=0,!((0|(a=g[a+189424|0]))<0)&&(a=lo(84868,255&a,14))){s=1+(t=a-84868|0)|0,(0|qe)==-1&&(qe=e[105536+(s<<2)>>2],P=0);s:{n:switch(t-8|0){case 0:e[49574]=0,e[49573]=qe;break s;case 4:break n;default:break s}g[199304]=(0|qe)>=3?1:0}t=1,e[47350]=ot+1,e[198304+(ot<<2)>>2]=(s+P|0)+(qe<<8),s=f}ot=e[m+6812>>2],wr(i+189424|0,32,s-i|0),Ja=t+Ja|0,a=0;break e}ot=0,(0|a)==32|e[49573]!=36?(Lt=0,t=a):(e[m+6812>>2]!=32|e[m+6804>>2]!=32||(e[49573]=20),Lt=0,t=No(a,ye))}else e[m+6804>>2]=32,Lt=1,ot=0,qe=0,t=32;t:if(fa){if(fa=1,Mr=8,a=0,(0|t)!=93|e[m+6804>>2]!=93)break t;s=s+1|0,t=32,fa=0}else if((240&(a=e[49573]))!=64)if(fa=0,16&a)a=0;else{s:{n:{i:{c:{if(!((0|(f=(0|t)==8242||(0|t)==8217||(0|t)==146||(0|t)==180?39:t))!=8216&(0|f)!=63))if(aa(e[m+6808>>2])){if(f=t,aa(e[m+6804>>2])){f=39;break c}}else f=t;A:{if((0|f)!=1367){if((0|f)==1328){ae|=1024,f=32;break c}if((t=f-44032|0)>>>0>11183)break c;if(i=((a=((M=65535&t)>>>0)/28|0)>>>0)%21|0,t=t-K(a,28)&65535,f-50500>>>0>587)break A;a=t?t+4519|0:0,i=i+4449|0;break n}ae|=131072,Fa=e[m+6804>>2],t=e[m+6812>>2],f=32;break i}a=50500+(t+K(i,28)|0)|0,i=(M>>>0)/588|4352;break n}if(Fa=e[m+6804>>2],t=e[m+6812>>2],!((a=f-12592|0)>>>0>51)){i=4352|u[a+103296|0],a=0;break n}}d=s+189424|0;i:if(!((0|(a=e[ye+212>>2]))!=28268&(0|a)!=24934|(0|f)!=39)&&!Di(t)&&(Ir(m+6820|0,d+1|0),po(e[m+6820>>2]))){i=601,a=0;c:switch(Fa-110|0){case 6:break n;case 0:break c;default:break i}if(e[ye+212>>2]!=24934)break n;g[0|d]=32;break n}if(e[m+6824>>2]=32,(0|(t=e[49897]))>0)e[49897]=t-1,a=0;else{if(!f){a=0,i=0;break s}i:{c:{A:{d:if((Tr=e[ye+180>>2])&&(M=f,(Mt=Pi(f))&&(M=No(f,ye)),!OA(Tr)))for(;;){e[m+16>>2]=0,e[m+624>>2]=M,t=Ir(m+16|0,Tr)+Tr|0;l:if(e[m+624>>2]==e[m+16>>2]){if(u[0|t]){for(i=1,$s=0,a=d;ga=Ir(m+16|0,t),Pa=Ir(m+624|0,a),Ha=No(e[m+624>>2],ye),e[m+624>>2]=Ha,a=a+Pa|0,$s=(Pa=(0|Ha)==e[m+16>>2])+$s|0,i&=Pa,u[0|(t=t+ga|0)];);if(!i)break l;e[49897]=$s}if(!(t=t+1|0))break d;if(8&u[188788]&&(e[m>>2]=Tr,e[m+4>>2]=t,ba(e[47195],85187,m)),t=Ir(m+6828|0,t)+t|0,u[0|t])break A;a=0;break c}for(;a=t,t=t+1|0,u[0|a];);for(;u[0|(a=(t=a)+1|0)];);if(OA(Tr=t+2|0))break}a=0,i=f;break i}Ir(m+6824|0,t),Mt&&Pi(Fa)&&(e[m+6824>>2]=MA(e[m+6824>>2])),a=e[m+6824>>2]}i=e[m+6828>>2],ae|=2097152,Mt&&(i=MA(i))}if((0|i)!=8)break n}i=s;break e}a?e[m+6804>>2]=a:a=0}aa(i)||po(i)||Ra(e[ye+336>>2],i)||!aa(e[m+6808>>2])|!(!u[ye+170|0]|i-48>>>0>=10)&e[m+6804>>2]-48>>>0>=10||(i=32,Ar=1);s:{n:{i:{c:{A:{if(e[m+6808>>2]-48>>>0<10){if(i-48>>>0<10){t=q;break A}if(1<<(t=i-32|0)&20481&&t>>>0<=14)break c;Ar=1}else if(t=0,e[m+6812>>2]!=44||(t=q,(0|i)!=44))break A;i=32;break c}if((0|i)==91&&((0|(f=e[m+6804>>2]))==2||(i=91,(0|f)==91&&e[47204])))break i;q=t}if(aa(i)){c:{A:{d:{if(aa(e[m+6808>>2])){if(!u[ye+171|0]||(t=e[m+6808>>2],!((0|i)>12352)&&(0|t)<12353))break d}else t=e[m+6808>>2];if(za=Ra(e[ye+336>>2],t)?za:0,(0|(t=e[m+6808>>2]))!=32&&!Ra(e[ye+336>>2],t)){t=32,Be=ho(e[m+6808>>2])?Be:256|Be;break A}ae=Pi(i)?2|ae:ae,e[m+6808>>2]!=32|g[Xt-2|0]-48>>>0>=10|e[m+6812>>2]-48>>>0<10||(g[(m+784|0)+o|0]=32,t=1588+(K(Yr,12)+m|0)|0,I[t>>1]=B[t>>1]+1,o=o+1|0)}if(t=32,(0|i)==32)break c;if(za=za+1|0,(0|(f=e[ye+600>>2]))<=0){t=i;break c}if(!((0|i)<=591&(0|(M=e[m+6808>>2]))>=(0|f))){if((0|i)<(0|f)){t=i;break c}if((0|za)<2){t=i;break c}if(!((0|M)<=591)){t=i;break c}}if(!aa(M)){t=i;break c}ae|=16384,Be|=128}Ar=1}if(si=si+1|0,Pi(t)){if(f=No(t,ye),e[ye- -64>>2]){t=Ii?f:712,a=Ii?a:f,Ii=1;break t}if(Ci(e[m+6812>>2])){if(e[m+6808>>2]==32){t=f;break t}if(t=32,e[ye+212>>2]!=26465)break s;for(i=85240,M=(m+784|0)+o|0,qe=0;;){if(d=zr(i),u[0|(Ft=M-d|0)]==32&&!En(Ft+1|0,i,d=d-1|0)){if((0|(i=g[i+d|0]))==(0|f)){t=f;break t}if((0|i)==65&&el(ye,f)){t=f;break t}}if(i=e[131184+((qe=qe+1|0)<<2)>>2],(0|qe)==11)break}break s}if(t=32,(0|f)==32)break t;if(!Pi(e[m+6812>>2])){t=f;break t}if(!Ci(e[m+6804>>2])){t=f;break t}if(Ir(m+16|0,189424+(s+qe|0)|0),!(e[ye+212>>2]!=28268|(0|za)!=2|(0|f)!=106|e[m+6812>>2]!=73)){t=f;break t}if(e[m+6808>>2]==32){t=f;break t}if(!aa(e[m+16>>2])){t=f;break t}Be|=256,ot=32,Ar=1;break t}if(!Mr){Mr=0;break t}if((0|za)<3){Mr=0;break t}if((0|t)!=115){Mr=0;break t}if(e[ye+212>>2]!=25966){Mr=0;break t}if(e[m+6804>>2]!=32){Mr=0;break t}if(Mr|=4,t=32,u[783+(i=o+m|0)|0]!=39)break t;g[i+783|0]=32;break t}t=32;c:{A:{d:{l:{switch(i-39|0){default:if((0|i)==95)break t;case 1:case 2:case 3:case 4:case 5:if(i-48>>>0>=10||u[ye+170|0]&&aa(e[m+6808>>2])&&!((f=e[m+6804>>2])-48>>>0<10|f-2406>>>0<10))break c;if((0|(M=e[m+6808>>2]))==32)break A;if(f=e[m+6808>>2],M-48>>>0<10)break d;if((0|(M=f))==(0|(f=e[ye+128>>2])))break l;Ar=1;break t;case 6:if(!po(e[m+6812>>2])&&aa(e[m+6804>>2])){if(e[m+6808>>2]!=32){Ar=1;break t}if(ae|=128,(0|Yr)<=0)break t;i=1572+(K(Yr,12)+m|0)|0,e[i>>2]=16384|e[i>>2];break t}if(i=e[m+6804>>2],!(e[m+6812>>2]!=32|(0|i)!=32)){Hs=4;break t}if((0|i)==45){s=s+1|0,Hs=4;break t}if(t=45,e[m+6808>>2]!=32||!aa(Ft)||aa(e[m+6812>>2]))break t;g[(m+784|0)+o|0]=32,i=1588+(K(Yr,12)+m|0)|0,I[i>>1]=B[i>>1]+1,o=o+1|0;break t;case 7:if(e[m+6808>>2]==46){Ar=1;break t}if(t=46,(0|Yr)<=0||(i=1572+(K(Yr,12)+m|0)|0,1&g[i+1|0])||!aa(e[m+6812>>2]))break t;e[i>>2]=65536|e[i>>2],t=(t=po(e[m+6804>>2]))||e[m+6804>>2]==45?32:46;break t;case 0:}o:{if((0|(f=e[m+6812>>2]))!=46||(i=115,e[m+6804>>2]!=115)){if(!tA(f))break o;i=e[m+6804>>2]}if(aa(i))break n}if(1&(i=e[ye+88>>2])){if(aa(e[m+6804>>2]))break n;i=e[ye+88>>2]}if(2&i&&aa(e[m+6812>>2]))break n;if(!(!Ra(e[ye+332>>2],e[m+6812>>2])|(0|Ft)!=32)){s=(e[m+6804>>2]==32)+s|0;break n}if(f=(0|(i=e[m+6808>>2]))!=115|zi,zi=0,!(1&f))break t;zi=!!(0|po(i)),Hs=4;break t}if((0|f)==44&q){Ar=1;break t}q=1;break c}if((0|f)!=32)break c}aa(Ft)&&(aa(e[m+6812>>2])||(g[(m+784|0)+o|0]=32,t=1588+(K(Yr,12)+m|0)|0,I[t>>1]=B[t>>1]+1,o=o+1|0))}t=i;break t}fa=1,i=s+1|0,q=t;break e}t=39,zi=0;break t}Ar=1,ot=32}else{if(t-48>>>0<10){a=0,i=(0|(f=e[49574]+1|0))>(15&e[49573]),e[49574]=i?0:f,t=i?32:t,Ar|=i,fa=0;break t}a=0,e[49574]=0,t=(i=e[m+6808>>2]-48>>>0<10)?32:t,Ar|=i,fa=0}if(po(t)){if(e[m+6808>>2]==32){ae|=262144,i=s;break e}if(i=e[m+6816>>2]-9>>>0<2,M=1&Ar){qe=0;t:if(!((0|y)>(0|(t=s-1|0))))for(;;){if(!(f=I[(m+5184|0)+(t<<1)>>1]))break t;if(qe=((0|f)>0)+qe|0,!((0|y)<=(0|(t=t-1|0))))break}g[1594+(K(Yr,12)+m|0)|0]=qe}if(Be=i?262144|Be:Be,g[(m+784|0)+o|0]=32,t=o+1|0,!((0|Yr)>298||(i=(m+1584|0)+K(Yr,12)|0,(0|(f=B[i+4>>1]))>=(0|t)))){if((0|Ja)<=0?y=e[i>>2]:(y=198300+(e[47350]<<2)|0,e[y>>2]=128|e[y>>2],Ja=0,y=64|e[i>>2]),d=e[47352],g[i+6|0]=d,e[i>>2]=y|(si?Mr:-2&Mr)|(u[199304]?2048:0)|ae,(0|d)>0){for(;ae=(y=m+784|0)+t|0,y=y+(t=t-1|0)|0,g[0|ae]=u[0|y],(0|t)>(0|f););g[0|y]=32,I[i+4>>1]=f+1,t=o+2|0}f=(m+1584|0)+K(Yr=Yr+1|0,12)|0,e[f>>2]=0,I[f+4>>1]=t,o=s;t:if(!((0|(i=e[m+6800>>2]))<=(0|s))){for(;;){if(I[(m+5184|0)+(o<<1)>>1]>0)break t;if((0|i)==(0|(o=o+1|0)))break}o=i}if(qe=B[(m+5184|0)+(o<<1)>>1],I[f+8>>1]=qe,si=0,i=0,qe)for(;i=!!(65535&~qe)+i|0,qe=B[(m+5184|0)+((o=o+1|0)<<1)>>1];);g[f+10|0]=i,e[47352]=0,Mr=1,ae=Be,Be=0,Ii=0}Ar=0,a=M?0:a,i=M?P:s}else(0|o)>795?(i=s,s=y,t=o):(t=ia(t,(m+784|0)+o|0)+o|0,i=s,s=y);e[47352]<(0|Hs)&&(e[47352]=Hs),Hs=0,y=s,o=t}if(Lt||(P=i,!((0|o)<799)))break}(0|Ja)<=0|Yr||(t=198300+(e[47350]<<2)|0,e[t>>2]=128|e[t>>2],e[m+1584>>2]=64|e[m+1584>>2],Yr=1),t=(m+784|0)+o|0,e[ye+8204>>2]=t-1,s=0,g[0|t]=0,g[m+1590|0]=0,g[1590+(K(Yr,12)+m|0)|0]=8;e:if((0|Yr)<=0)e[m+1584>>2]=512|e[m+1584>>2],o=e[49572];else{t=Yr-1|0;t:if((0|Yr)!=1)for(a=t;;){if(!ho(g[B[1588+(K(a,12)+m|0)>>1]+(m+784|0)|0])){s=a;break t}if(f=(0|a)>1,a=a-1|0,!f)break}if(s=(m+1584|0)+K(s,12)|0,e[s>>2]=16|e[s>>2],4194304&$r&&(t=(m+1584|0)+K(t,12)|0,256&(s=e[t>>2])||(e[t>>2]=65536|s)),e[m+1584>>2]=512|e[m+1584>>2],!((0|Yr)<=0|(0|(o=e[49572]))>990))for(f=3|(t=m+624|0),M=2|t,ot=m+754|0,Lt=!(4194304&$r),P=0,y=0;;){e[47354]=e[47354]+1;t:{if((0|(t=e[49827]))<=0||(t=t-1|0,e[49827]=t,t)){if(u[190280])break t}else g[190280]=0;t=B[1588+(K(P,12)+m|0)>>1]+(m+784|0)|0;s:if(!(g[0|t]-48>>>0>=10)&&(s=m+624|0,a=t,e[ye+112>>2]!=1227133512)){for(;;){n:{if(g[0|a]-48>>>0<10)g[0|s]=u[0|a],s=s+1|0,a=a+1|0;else{if(e[ye+124>>2]!=g[0|a]|u[a+1|0]!=32||(o=a+2|0,u[a+3|0]==32|g[0|o]-48>>>0>=10|u[a+4|0]==32))break n;P=P+1|0,a=o}if(s>>>0<ot>>>0)continue;break s}break}wr(t+(s=s-(q=m+624|0)|0)|0,32,(a=(o=a-t|0)-s|0)>>>0<=o>>>0?a:0),ds(t,q,s)}for(s=0;a=s,s=s+1|0,g[t+a|0]-48>>>0<10;);s:if(a-5>>>0<=27){for(g[m+626|0]=32,I[m+624>>1]=8224,u[0|t]!=48&e[ye+132>>2]>=(0|a)||(s=(m+1584|0)+K(P,12)|0,e[s>>2]=524288|e[s>>2]),Be=(m+1584|0)+K(P,12)|0,qe=0,o=f;s=t,!((t=g[0|t])-48>>>0>=10&(0|t)!=e[ye+128>>2])&&(g[0|o]=t,t=o+1|0,q=a,(0|(a=a-1|0))<=0?o=t:e[ye+112>>2]>>>a&1?(d=e[Be+4>>2],ae=(m+16|0)+K(qe,12)|0,e[ae>>2]=e[Be>>2],e[ae+4>>2]=d,e[ae+8>>2]=e[Be+8>>2],qe=qe+1|0,(0|(ae=e[ye+124>>2]))!=32&&(g[o+1|0]=ae,t=o+2|0),g[0|t]=32,o=t+1|0,8&u[Be+2|0]||((Hs=e[ye+112>>2])>>>q-2&1&&(g[t+1|0]=48,g[t+2|0]=48,Hs=e[ye+112>>2],o=t+3|0),Hs>>>q-3&1&&(g[0|o]=48,o=o+1|0))):o=t,t=s+1|0,o>>>0<ot>>>0););if(a=e[Be+4>>2],t=(m+16|0)+K(qe,12)|0,e[t>>2]=e[Be>>2],e[t+4>>2]=a,a=e[Be+20>>2],e[t+16>>2]=e[Be+16>>2],e[t+20>>2]=a,a=e[Be+12>>2],e[t+8>>2]=e[Be+8>>2],e[t+12>>2]=a,a=1,(0|qe)>0)for(;t=(m+16|0)+K(a,12)|0,e[t>>2]=-262209&e[t>>2],(0|qe)>=(0|(a=a+1|0)););if(t=u[s+4|0]|u[s+5|0]<<8|u[s+6|0]<<16|u[s+7|0]<<24,a=u[0|s]|u[s+1|0]<<8|u[s+2|0]<<16|u[s+3|0]<<24,g[0|o]=a,g[o+1|0]=a>>>8,g[o+2|0]=a>>>16,g[o+3|0]=a>>>24,g[o+4|0]=t,g[o+5|0]=t>>>8,g[o+6|0]=t>>>16,g[o+7|0]=t>>>24,t=u[s+12|0]|u[s+13|0]<<8|u[s+14|0]<<16|u[s+15|0]<<24,s=u[s+8|0]|u[s+9|0]<<8|u[s+10|0]<<16|u[s+11|0]<<24,g[o+8|0]=s,g[o+9|0]=s>>>8,g[o+10|0]=s>>>16,g[o+11|0]=s>>>24,g[o+12|0]=t,g[o+13|0]=t>>>8,g[o+14|0]=t>>>16,g[o+15|0]=t>>>24,g[o+16|0]=0,o>>>0<=f>>>0)break s;for(t=u[Be+6|0],qe=0,a=f;;){for(y=is(ye,a,(m+16|0)+K(qe,12)|0,255&t);t=u[0|a],a=a+1|0,(0|t)!=32;);if(t=0,g[Be+6|0]=0,qe=qe+1|0,!(a>>>0<o>>>0))break}}else{if(e[47352]=0,y=is(ye,t,s=(m+1584|0)+K(P,12)|0,u[s+6|0]),(0|(a=e[47352]))>u[s+18|0]&&(g[s+18|0]=a,e[47352]=0),!(!(4096&y)|u[0|t]==32))for(;wr(m+624|0,0,150),e[m+624>>2]=538976288,e[m+628>>2]=538976288,g[m+632|0]=32,is(ye,ds(M,t,a=Ir(m+16|0,t)),s,0),u[0|(t=t+a|0)]!=32;);50331648&y&&(de=(t=Lt|(~e[33264]+Yr|0)!=(0|P))?de:10,t|!sn||(e[sn>>2]=4,de=10))}if(128&y&&!((0|(s=e[33264]))<=0)){if(t=0,a=s,o=3&s)for(;q=(m+1584|0)+K(a+P|0,12)|0,e[q>>2]=1048576|e[q>>2],a=a-1|0,(0|o)!=(0|(t=t+1|0)););if(s>>>0>=4)for(;t=(m+1584|0)+K(a+P|0,12)|0,e[t>>2]=1048576|e[t>>2],e[(s=t-12|0)>>2]=1048576|e[s>>2],e[(s=t-24|0)>>2]=1048576|e[s>>2],e[(t=t-36|0)>>2]=1048576|e[t>>2],a=a-4|0;);e[33264]=a}}if(o=e[49572],(0|Yr)<=(0|(P=P+1|0)))break e;if(!((0|o)<991))break}}if((0|(a=e[47351]))<(0|(f=e[47350]))){for(ot=e[47202],Lt=e[49846],qe=e[47352];;){t=(s=e[198304+(a<<2)>>2])>>8;e:{t:switch((31&s)-9|0){case 0:ot=t;break e;case 4:Lt=t;break e;case 3:break t;default:break e}qe=s>>>0>=256?t+qe|0:0}if(!(!(128&s)&(0|f)>(0|(a=a+1|0))))break}e[47352]=qe,e[47351]=a,e[49846]=Lt,e[47202]=ot}e[49572]=o+2,e[(t=190288+(o<<3)|0)>>2]=589824,I[t+4>>1]=i,e[t+8>>2]=589824,I[t+12>>1]=i,s=Yr&&e[47199]?de:10,e[33285]?t=0:(t=e[33283],t=e[t>>2]==e[t+4>>2]),de=t?s:de,P=ls,f=0,Yr=0,pe=M=pe-32192|0,e[M+24>>2]=0,e[M+28>>2]=0,e[M+16>>2]=0,e[M+20>>2]=0,e[M+8>>2]=0,e[M+12>>2]=0,e[M>>2]=0,e[M+4>>2]=0,i=e[49572],d=B[190284+(i<<3)>>1];e:{if((0|(a=i-3|0))<0)t=a;else{for(;;){if(f=(0|(s=127&u[3+(t=190288+(a<<3)|0)|0]))<(0|f)?f:s,B[t+4>>1])t=a;else if(t=-1,s=(0|a)>0,a=a-1|0,s)continue;break}if(f>>>0>3)break e}for(;;){if((0|(t=t-1|0))<0)break e;if(64&u[0|(s=190288+(t<<3)|0)]){g[s+3|0]=4;break e}if(!(u[s+3|0]<4))break}}if(t=e[ye+292>>2],a=0,(0|i)<=0)f=0;else for(q=-1,f=0;;){s=t,e[ye+292>>2]!=(0|t)&&(I[(t=190288+(a<<3)|0)>>1]=32|B[t>>1]),(0|f)>0&&(Be=e[4+(y=190288+(a<<3)|0)>>2],e[(o=190288+(t=a-f<<3)|0)>>2]=e[y>>2],e[o+4>>2]=Be,(0|q)!=-1&&(I[4+(t+190288|0)>>1]=q),q=-1);e:{if(u[2+(190288+(o=a<<3)|0)|0]==21){if(t=u[7+(y=o+190288|0)|0],2&u[0|y])break e;t:if((0|t)!=(0|s)){if(y=u[10+(o+190288|0)|0]-9|0){if((0|y)==12)break t;break e}if(u[18+(o+190288|0)|0]!=21)break e}(0|q)==-1&&(q=(t=B[4+(o+190288|0)>>1])||-1),f=f+1|0}t=s}if((0|i)==(0|(a=a+1|0)))break}if(e[49572]=i-f,gn(t),(s=e[ye+36>>2])&&!((0|(t=(f=e[49572])-1|0))<0))for(ot=256&s,ae=4&s,Lt=8&s,Be=15&s,Ar=16&s,ls=2&s,s=s>>>8&1,a=0;;){if(o=f,i=a,f=t,(0|(t=u[2+(y=190288+(Mr=t<<3)|0)|0]))==21){e:{t:{if((0|(a=o-2|0))>=0)for(;;){if(u[2+(190288+(t=a<<3)|0)|0]==21)break t;if(t=(0|a)>0,a=a-1|0,!t)break}t=e[ye+292>>2];break e}t=u[7+(t+190288|0)|0]}gn(t),t=u[y+2|0]}if(a=i,(t=e[144464+((255&t)<<2)>>2])&&(a=s,!(32&u[0|y]))){a=u[t+11|0],q=0,ls&&((0|(o=u[0|t]))!=118&(0|o)!=82||(i=Ar?0:i,q=1));e:{t:{s:{n:switch((o=253&a)-4|0){case 1:break s;case 0:break n;default:break t}if(Be&&(a=1,!i)||(0|(a=i))!=2||(a=2,!(t=u[t+13|0])))break e;g[y+2|0]=t;break e}if(Be&&(a=2,!i)||(0|(a=i))!=1||(a=1,!(t=u[t+13|0])))break e;g[y+2|0]=t;break e}a=0,Lt&&(a=o?i:0)}a=t=q?0:a,B[4+(Mr+190288|0)>>1]&&(a=t=ae?0:t,ot&&(a=t||1))}if(!((0|(t=f-1|0))>=0))break}if(gn(e[ye+292>>2]),e[49572]<=0)Ar=-2,a=0;else{for(a=-1,i=0,y=0,Lt=0;;){t=y<<3,(0|a)!=-1&&(I[4+(t+190288|0)>>1]=a),u[2+(q=t+190288|0)|0]==21&&gn(u[7+(t+190288|0)|0]),Be=e[49572];e:{if(!(32&u[0|(o=t+190288|0)])){i=(0|(s=Be-1|0))>(0|y)?e[144464+(u[10+(t+190288|0)|0]<<2)>>2]:i,!(B[o+12>>1]|(0|s)==(0|y))&&(qe=0,u[i+11|0]|!i)||(qe=1),f=u[q+2|0];t:if(!((0|(Ar=e[49848]))<=0))for(s=t+190288|0,a=0;;){if(ot=K(a,3),u[ot+199408|0]==(255&f)&&!((ae=u[2+(ot+199408|0)|0])&(1^qe)|(4&u[s+3|0]?2&ae:0)|(B[s+4>>1]?0:4&ae))){if(f=u[1+(ot+199408|0)|0],g[q+2|0]=f,!(2&u[e[144464+(f<<2)>>2]+4|0])|u[s+3|0]<2)break t;g[s+3|0]=0;break t}if((0|Ar)==(0|(a=a+1|0)))break}if(!(255&f)){a=B[4+(t+190288|0)>>1];break e}}a=e[o+4>>2],t=(M+32|0)+(Lt<<5)|0,s=e[o>>2],e[t>>2]=s,e[t+4>>2]=a,s=e[144464+(s>>>14&1020)>>2],e[t+8>>2]=s,g[t+17|0]=u[s+11|0],Lt=Lt+1|0,a=-1}if(!((0|Lt)<1e3&(0|Be)>(0|(y=y+1|0))))break}if(f=0,a=0,!((0|(Ar=Lt-2|0))<=0))for(;;){e:if(B[4+((M+32|0)+(f<<5)|0)>>1]){for(s=(0|f)>(0|Ar)?f:Ar,a=0,t=f;;){if((0|t)!=(0|s)){if(a=(0|a)>(0|(o=u[3+((i=M+32|0)+(t<<5)|0)|0]))?a:o,!B[4+(i+((t=t+1|0)<<5)|0)>>1])continue}else t=s;break}if((0|t)<=(0|f))break e;if(s=~f+t|0,i=0,o=t-f&7)for(;g[6+((M+32|0)+(f<<5)|0)|0]=a,f=f+1|0,(0|o)!=(0|(i=i+1|0)););if(s>>>0<7)break e;for(;g[6+(s=(M+32|0)+(f<<5)|0)|0]=a,g[s+38|0]=a,g[s+70|0]=a,g[s+102|0]=a,g[s+134|0]=a,g[s+166|0]=a,g[s+198|0]=a,g[s+230|0]=a,(0|(f=f+8|0))!=(0|t););}else t=f+1|0;if(f=t,!((0|Ar)>(0|t)))break}}for(e[M+40>>2]=e[36125],gn(e[ye+292>>2]),Ft=(0|a)<4,y=1,ot=1,Be=0,s=0,a=0,ls=0;;){e:{t:{s:{n:{if(s){if(i=(t=M+32|0)+((q=a-1|0)<<5)|0,Be=u[2+(t+(a<<5)|0)|0],(0|q)>0){if(t=y-(a=(0|y)>0)|0,q>>>0>=(f=a?y:2)>>>0)for(;o=(a=(M+32|0)+(f<<5)|0)-32|0,y=e[a+12>>2],e[o+8>>2]=e[a+8>>2],e[o+12>>2]=y,y=e[a+4>>2],e[o>>2]=e[a>>2],e[o+4>>2]=y,y=e[a+28>>2],e[o+24>>2]=e[a+24>>2],e[o+28>>2]=y,y=e[a+20>>2],e[o+16>>2]=e[a+16>>2],e[o+20>>2]=y,(0|q)>=(0|(f=f+1|0)););y=t}qe=e[144464+(Be<<2)>>2],e[i>>2]=0,e[i+4>>2]=0,e[i+24>>2]=0,e[i+28>>2]=0,e[i+16>>2]=0,e[i+20>>2]=0,e[i+8>>2]=0,e[i+12>>2]=0,g[i+2|0]=s,t=e[144464+(s<<2)>>2],e[i+8>>2]=t,Be=i}else{if((0|a)>=(0|Ar)|(0|ls)>=997)break n;o=u[2+(i=(f=a<<5)+(M+32|0)|0)|0],t=e[144464+(o<<2)>>2],e[i+8>>2]=t,q=B[i+4>>1],(0|o)==21&&gn(u[7+(f+(M+32|0)|0)|0]),y=q?a:y,qe=e[144464+(u[i+34|0]<<2)>>2],e[i+40>>2]=qe,q=a}if(!t){s=0,a=q+1|0;continue}if(Cs(ye,256,i,M+32040|0,M),(0|(a=e[M+32052>>2]))>0&&(f=(M+32|0)+(q<<5)|0,qe=e[144464+(a<<2)>>2],e[f+40>>2]=qe,g[f+34|0]=a,g[f+49|0]=u[qe+11|0]),a=0,s)s=t;else if((0|(f=e[M+32056>>2]))<=0)s=t;else{s=e[144464+(f<<2)>>2],e[i+8>>2]=s,a=u[i+2|0],g[i+2|0]=f,f=B[i>>1];i:if(u[s+11|0]!=2)I[i>>1]=65531&f;else{if(I[i>>1]=4|f,u[t+11|0]==2)break i;g[i+3|0]=0}Cs(ye,256,i,M+32040|0,M)}if((0|(o=e[M+32048>>2]))<=0)f=s;else{if(f=e[144464+(o<<2)>>2],g[i+2|0]=o,e[i+8>>2]=f,t=u[f+11|0],Lt=1,(0|o)==1){Mr=(0|t)==2;break t}o=B[i>>1];i:if((0|t)!=2)I[i>>1]=65531&o;else{if(I[i>>1]=4|o,u[s+11|0]==2)break i;g[i+3|0]=0}Cs(ye,256,i,M+32040|0,M)}if(Mr=0,(0|(t=u[f+11|0]))!=2){Lt=0;break t}if(Mr=1,Lt=0,t=2,u[i+3|0]>1){Yr=0;break t}o=i+3|0,Yr=Yr+1|0,s=i;i:{if(8&(ae=e[ye+12>>2])){for(;;){c:switch(ae=s,s=s+32|0,u[ae+49|0]){case 0:break t;case 2:break c;default:continue}break}if(u[0|(s=ae+35|0)]>1)break t;if(u[i+6|0]<=3&&(g[0|o]=0),u[ae+38|0]<4)break i;break t}if(1&Yr|(0|Yr)<2)break t;if(2&ae)break s;if(Ft)s=o;else if(s=o,B[i+36>>1])break s}g[0|s]=0;break t}e[36423]=ls+2,I[(t=145840+(ls<<5)|0)>>1]=0,g[t+2|0]=9,g[t+20|0]=2,e[t+12>>2]=de,I[t+4>>1]=d,g[t+17|0]=0,g[t+18|0]=0,e[t+8>>2]=e[36125],I[t+32>>1]=0,g[t+34|0]=9,g[t+52|0]=0,e[t+44>>2]=0,I[t+36>>1]=0,g[t+49|0]=0,g[t+50|0]=0,e[t+40>>2]=e[36126],gn(e[ye+292>>2]),pe=M+32192|0;break e}Yr=1}if(!(8&(s=B[i+32>>1]))|(0|q)<=0||(o=u[qe+11|0])>>>0>15|!(1<<o&457)||(a=u[qe+10|0],I[i+32>>1]=8^s),Mt=B[i+36>>1]){t:if(s=e[ye+4>>2]){switch(0|t){default:a=512&s?11:a;break;case 0:break t;case 2:}if(u[qe+11|0]==2){(o=12&s)&&(a=(0|o)!=12?23:11);s:if(Mr){switch(3&s){case 2:a=10;break s;case 0:break s}a=23}u[i+35|0]<4||(a=256&s?10:a)}}if(!((0|i)==(0|Be)|(0|ls)<=0)){t:{s:{n:switch(0|(s=7&e[ye>>2])){case 0:break t;case 1:break n;default:break s}if(a-12>>>0>4294967293)break t}a=u[s+101916|0]}a=e[47205]>0?24:a}}if(e[i+72>>2]=e[144464+(u[i+66|0]<<2)>>2],s=e[M+32060>>2],s=a||s||a,!Lt){g[17+(o=145840+(ae=ls<<5)|0)|0]=t,e[o+8>>2]=f,g[o+16|0]=0,I[o>>1]=B[i>>1],g[o+3|0]=15&u[i+3|0],g[o+6|0]=u[i+6|0],a=u[i+7|0],I[o+4>>1]=0,g[o+7|0]=a,Lt=u[f+10|0],g[o+2|0]=Lt;t:if(a=B[i+4>>1]){if(I[o+4>>1]=a,P=1&P?5:1,g[20+(i=ae+145840|0)|0]=P,a=ot,ot=0,!a){P=0;break t}g[i+20|0]=8|P,P=0}else g[20+(ae+145840|0)|0]=0;e[12+(a=ae+145840|0)>>2]=e[M+32084>>2]<<1,!Mt|(0|Lt)!=24||(0|(i=e[47205]))<=0||(e[o+8>>2]=e[36126],e[a+12>>2]=K(i,14)),(1<<t&428?t>>>0<=8:0)|2&u[f+7|0]&&(e[a+12>>2]=128,g[o+16|0]=0),g[21+(t=ae+145840|0)|0]=255,g[t+22|0]=255,I[t+18>>1]=5120,ls=ls+1|0}a=q+1|0;continue}break}I[88922]=1,e[44462]=0,Ja&&(I[145776+(e[36423]<<5)>>1]=2,t=198304+(e[47350]<<2)|0,e[t>>2]=128,e[(t=t-4|0)>>2]=128|e[t>>2]),g[190268]=$r>>>19&1,Yi&&(e[Yi>>2]=$r<<14>>31&189360)}pe=m+6832|0,Ar=e[47192],Mr=e[r+12>>2],s=0,o=0,y=0,ae=0,Be=0,Hs=0,de=0,pe=d=pe-6e3|0;e:if(!((0|(i=(ls=e[36423])-1|0))<=0)){for(;g[2+(d+K(s,6)|0)|0]=0,4&u[145840+(t=s<<5)|0]?(a=d+K(ae,6)|0,g[a+1|0]=0,t=t+145840|0,g[a+3|0]=u[t+49|0],t=u[t+3|0],g[0|a]=t,ae=ae+1|0,Hs=(t>>>0>3)+Hs|0):u[e[8+(t+145840|0)>>2]+10|0]!=27|(0|ae)<=0||(t=(d+K(ae,6)|0)-4|0,g[0|t]=4|u[0|t]),(0|i)!=(0|(s=s+1|0)););if(g[d+K(ae,6)|0]=0,ae)if(e[Ar+148>>2]==1){if(!((0|ls)<=0)){for(t=-2&ls,a=1&ls,s=145840;y=u[s+17|0]==2&&u[s+3|0]>3?o:y,y=u[s+49|0]==2&&u[s+35|0]>3?1|o:y,s=s- -64|0,o=o+2|0,(0|t)!=(0|(Be=Be+2|0)););!a|u[s+17|0]!=2||(y=u[s+3|0]>3?o:y)}if(g[3+(f=145840+(t=y<<5)|0)|0]=7,e[Ar+212>>2]==30313&&(u[7+(t=t+145840|0)|0]||(g[t+7|0]=un(55),ls=e[36423])),!((0|ls)<=0)){for(Be=0,s=145840,t=145840,o=q=e[36125],i=0,ot=1;;){if(u[s+17|0]?P=e[36125]:(P=e[36125],q=(a=u[e[s+8>>2]+14|0]>50)?P:q,ot|=a),a=u[s+20|0]?P:o,4&u[0|s]){P=u[s+7|0],o=e[144464+(P<<2)>>2];t:{if((0|(ae=e[Ar+212>>2]))==6840683){if(e[a>>2]!=49||(ae=e[o>>2]-49|0)>>>0>5|!(1<<ae&41))break t;g[t+7|0]=un(50),ae=e[Ar+212>>2]}if(!((0|ae)!=6516078&(0|ae)!=31336)){ae=0,P||(i=un(1&(ae=i|ot)?13621:12593),g[s+7|0]=i,o=e[144464+(i<<2)>>2]),(0|y)!=(0|Be)|(1024|e[o>>2])!=13621||(g[f+3|0]=6),e[q>>2]==3420466&&(g[t+7|0]=un(e[o>>2]==3420466?13619:12594));s:{if(e[a>>2]==12597){if((0|(P=e[o>>2]))!=12597)break s;g[t+7|0]=un(13109)}P=e[o>>2]}i=ae,(0|P)==12593&&((0|(P=e[q>>2]))==13621&&(g[s+7|0]=un(12850),P=e[q>>2]),(0|P)==13619&&(g[s+7|0]=un(13107),P=e[q>>2]),(0|P)==3420466&&(g[s+7|0]=un(13364)),g[s+3|0]=0)}}ot=0,q=o,t=s}else o=a;if(s=s+32|0,!((0|(Be=Be+1|0))<(0|(a=e[36423]))))break}if(o=0,s=145840,!((0|a)<=0))for(;4&u[0|s]&&((t=u[s+7|0])||(g[s+7|0]=17,t=17),t=e[144464+(t<<2)>>2],g[s+21|0]=u[t+12|0],g[s+22|0]=u[t+13|0]),s=s+32|0,(0|a)!=(0|(o=o+1|0)););}}else{if(t=e[Ar+152>>2],t=Ar+K(Ft=(0|t)>7?1:t,6)|0,ye=u[0|(Ft?t+637:Ar+157)],$r=u[0|(Ft?636+(t+Mr|0):156+(Ar+Mr|0))],g[133068]=(0|Mr)==4,!((0|ae)<=0)){for(Lt=ae-1|0,qe=Mr-1>>>0>1,a=0,i=0;;){m=d+K(i,6)|0,de=((t=u[0|m])<<24>>24>3)+de|0;t:if((0|t)==6){t=i-3|0,s=i;s:{for(;;){if((0|s)<=(0|a)|(0|t)>=(0|s))break s;n:switch(f=d+K(s=s-1|0,6)|0,u[0|f]-4|0){case 2:break s;case 0:break n;default:continue}break}g[0|f]=3}s=i;s:{for(;;){if((0|ae)<=(0|(s=s+1|0)))break s;n:switch(u[d+K(s,6)|0]-4|0){case 0:break s;case 2:break n;default:continue}break}g[m+2|0]=2,g[0|m]=5,t=a;break t}if(u[0|m]==6){g[m+2|0]=2,M=0;s:if((0|ae)<=(0|(t=i+1|0)))f=i,fa=0;else if(fa=1,(0|(o=g[d+K(t,6)|0]))>4)f=i;else{for(y=(Hs-de|0)>1,f=i;;){if(s=t,(255&o)==4&&(t=y+1|0,y=1,!((0|t)<=1))){t=s;break s}if(fa=(0|ae)>(0|(t=s+1|0)),(0|t)==(0|ae))break;if(f=s,(0|(o=g[d+K(t,6)|0]))>4)break s}f=Lt,t=ae}o=-1,P=0,y=0,ot=-1,Be=0,q=-1;s:{if((0|(s=a))<(0|t)){for(;o=(Mt=(0|(q=g[d+K(s,6)|0]))>3)&&(0|o)<0?s-a|0:o,M=(Be=(0|y)>(0|q))?M:(0|y)<(0|q)?s:P,ot=Mt?s:ot,P=Be?P:s,Mt=(0|s)!=(0|f),y=Be?y:q,s=s+1|0,Mt;);if(Be=P,q=ot,(0|o)>=0)break s}o=t,P=Be,ot=q}e[33269]=f-P,e[33268]=o,e[33270]=P,e[33271]=M;s:if(u[133068])e[33270]=t,e[33271]=t;else if((0|ot)>=0){if((0|t)!=(0|ae))break s;g[d+K(ot,6)|0]=7}else g[d+K(P,6)|0]=7;wn(d,Ft,a,t,$r),!fa&!!(0|Mr)||($r=qe?u[Ar+156|0]:u[Ar+157|0])}else t=a}else t=a;if((0|t)>=(0|i))a=t;else if(4&u[m+2|0]){for(a=i+1|0,o=-1,ot=0,P=0,y=0,s=t,M=-1;o=(Be=(0|(f=g[d+K(s,6)|0]))>3)&&(0|o)<0?s-t|0:o,ot=(q=(0|f)<(0|y))?ot:(0|f)>(0|y)?s:P,M=Be?s:M,P=q?P:s,Be=(0|s)!=(0|i),y=q?y:f,s=s+1|0,Be;);e[33269]=i-P,e[33270]=P,e[33271]=ot,e[33268]=(0|o)<0?a:o,u[133068]?(e[33270]=a,e[33271]=a):(0|M)>=0?g[d+K(M,6)|0]=7:g[d+K(P,6)|0]=7,wn(d,Ft,t,a,ye)}else a=t;if((0|ae)==(0|(i=i+1|0)))break}if(!((0|a)>=(0|ae))){for(o=-1,ot=0,P=0,y=0,s=a,M=-1;o=(f=(0|(t=g[d+K(s,6)|0]))>3)&&(0|o)<0?s-a|0:o,ot=(i=(0|t)<(0|y))?ot:(0|t)>(0|y)?s:P,M=f?s:M,P=i?P:s,y=i?y:t,(0|ae)!=(0|(s=s+1|0)););e[33270]=P,e[33271]=ot,e[33269]=~P+ae,e[33268]=(0|o)<0?ae:o,u[133068]?(e[33270]=ae,e[33271]=ae):(0|M)>=0?g[d+K(M,6)|0]=7:g[d+K(P,6)|0]=7,wn(d,Ft,a,ae,$r)}}if((0|ls)<=0)break e;for(s=0,Be=0;;){if(q=a=145840+(f=s<<5)|0,t=d+K(Be,6)|0,o=u[0|t],g[a+3|0]=o,4&u[0|a]){i=f+145840|0,a=u[t+4|0],g[i+21|0]=a,y=u[t+5|0],g[i+16|0]=0,g[i+22|0]=y;t:{if(1&(P=u[t+2|0]))t=2;else{if(o>>>0<6)break t;t=u[t+1|0]}g[i+16|0]=t}a>>>0<=(255&y)>>>0?(t=y,y=a):(g[i+21|0]=y,g[i+22|0]=a,t=a),(a=u[7+(f+145840|0)|0])&&(t=(255&t)+(255&y)>>>1|0,a=e[144464+(a<<2)>>2],g[i+22|0]=t+u[a+13|0],g[i+21|0]=t+u[a+12|0]),2&P&&(g[q+3|0]=8|o),Be=Be+1|0}if((0|ls)==(0|(s=s+1|0)))break}}}if(pe=d+6e3|0,Be=e[47192],s=0,qe=0,M=0,de=0,pe=d=pe-160|0,e[36423]>=2)for(Mr=e[30450],o=1;;){if(o=(t=o)+1|0,ae=u[3+(i=145840+(y=t<<5)|0)|0],2&(P=B[i>>1])){for(;(31&(f=e[198304+(de<<2)>>2]))==2&&(Bi(127&f,f>>>8|0),e[36432]=110,e[36433]=100,e[36434]=450,e[36430]=5,P=e[50786],q=e[32972],(0|(a=e[q+84>>2]))>0&&(P=(0|K(a,P))/100|0),ot=u[((0|(a=(0|P)>=359?359:P))<=80?80:a)+101856|0],a=(0|(a=(0|P)>=450?450:P))>399?6:(0|a)>379?7:ot,e[32526]=(0|K(a,e[q+72>>2]))/256,e[32527]=(0|K(a,e[q+76>>2]))/256,e[32528]=(0|K(a,e[q+80>>2]))/256,a>>>0>7||(q=a-1|0,e[32528]=q,e[32526]=a,e[32527]=q)),de=de+1|0,!(128&f););P=B[i>>1]}q=o<<5,ot=t-1|0,a=7&ae;e:{t:{s:{n:{i:{c:{A:{d:{l:{o:switch($r=u[17+(y+145840|0)|0],0|(f=4&P?2:$r)){case 2:break i;case 3:case 8:break c;case 5:break A;case 6:case 7:break d;case 4:break l;case 0:break o;default:break e}s=0;break e}if((0|(t=u[17+(145840+(ot<<5)|0)|0]))!=6?(a=(0|t)==4?60:e[34063]>0||a>>>0<4?48:60,g[18+(y+145840|0)|0]=a):(a=25,g[18+(y+145840|0)|0]=25),!(16&u[0|Be])|!u[20+(y+145840|0)|0]||(g[18+(y+145840|0)|0]=60,a=60),64&u[e[8+(y+145840|0)>>2]+6|0]&&(a=a+30|0,g[18+(y+145840|0)|0]=a),s=0,!(8&P))break e;g[18+(y+145840|0)|0]=u[Be+164|0]+a;break e}!(i=u[20+(t=y+145840|0)|0])|1&g[e[t+8>>2]+7|0]&u[17+(145840+(ot<<5)|0)|0]==2||(g[18+(y+145840|0)|0]=15),a=u[17+(q+145840|0)|0],8&u[e[8+(y+145840|0)>>2]+4|0]|a|u[17+(145840+(ot<<5)|0)|0]!=8||(g[18+(y+145840|0)|0]=25),64&u[e[8+(145840+(t=ot<<5)|0)>>2]+5|0]&&(g[18+(y+145840|0)|0]=30),!i|!(16&e[Be>>2])||(g[18+(y+145840|0)|0]=30);d:if(u[20+(q+145840|0)|0]|!(32&u[e[8+(y+145840|0)>>2]+4|0])|(0|a)!=4)e[12+(y+145840|0)>>2]=256;else{if(i=y+145840|0,u[17+(t+145840|0)|0]==2){e[i+12>>2]=200;break d}e[i+12>>2]=150}if((0|f)!=7||(qe|=(0|a)==2,(254&u[17+(t+145840|0)|0])!=2))break e;e[12+(y+145840|0)>>2]=e[12+(t+145840|0)>>2]+255>>>1;break e}(254&(a=u[17+(145840+(t=ot<<5)|0)|0]))==6|(0|a)==3|32&e[e[8+(t+145840|0)>>2]+4>>2]&&(g[18+(y+145840|0)|0]=30);A:if((254&(i=u[17+(q+145840|0)|0]))==2){qe=u[20+(q+145840|0)|0]&&(0|i)!=2?qe:1,g[18+(i=y+145840|0)|0]=40,ae=0;d:{switch(0|a){case 0:if((t=e[12+(t+145840|0)>>2])>>>0>39)break d;ae=40-t|0;break d;case 2:break d}if(u[20+(y+145840|0)|0])break A;ae=20;l:switch(a-3|0){case 1:if(ae=0,!(8&u[e[8+(t+145840|0)>>2]+4|0]))break d;break A;case 0:break d;case 5:break l;default:break A}ae=12}g[i+18|0]=ae}if(!(16&u[0|Be])|!u[20+(y+145840|0)|0]||u[18+(t=y+145840|0)|0]>19)break e;g[t+18|0]=20;break e}i=u[Be+296|0],f=a=y+145840|0,e[a+12>>2]=256,g[a+19|0]=i;c:if(u[a+20|0]){P=25;A:switch(u[17+(145840+(ot<<5)|0)|0]-2|0){case 0:if(P=12,1&g[e[8+(y+145840|0)>>2]+7|0])break c;break;case 1:break A;default:break c}g[18+(y+145840|0)|0]=P}if((0|(q=u[17+(q+145840|0)|0]))==2){M=1;break e}if(g[22+(i=y+145840|0)|0]=s,(254&u[17+(145840+(a=ot<<5)|0)|0])==2)break n;if(a=s,(0|(f=e[36423]))<=(0|t))break t;for(;;){if(u[17+(145840+(a=t<<5)|0)|0]==2){a=u[22+(a+145840|0)|0],g[i+22|0]=a;break t}if((0|f)==(0|(t=t+1|0)))break}break s}if(Ar=y+145840|0,Lt=a^a>>>0<2,a=(ls=8&ae)?25:u[296+(Lt+Be|0)|0]-M|0,g[Ar+19|0]=a,(e[36423]-3|0)>(0|t)||(0|(f=255&a))<=(0|(a=e[Be+52>>2]))||(g[Ar+19|0]=a),a=0,ae=0,!(P=u[i+52|0]))for(;f=e[i+40>>2],ae=u[i+49|0]==2?(~e[f+4>>2]>>>20&1)+ae|0:ae,a=u[f+10|0]==27?2:a,f=i,i=i+32|0,!(P=u[f+84|0]););f=Ar+96|0,t=145840+(Ft=t+2<<5)|0,e[34063]=ae,m=u[e[i+40>>2]+10|0],q=q+145840|0,u[17+(Ft+145840|0)|0]|u[e[q+8>>2]+10|0]!=23?(i=f,f=t,t=q):i=y+145968|0,q=u[e[f+8>>2]+15|0];i:if(ae)q=u[e[Be+96>>2]+(u[e[t+8>>2]+15|0]+K(q,10)|0)|0],u[t+17|0]!=8|(254&u[f+17|0])!=4||(q=8&u[e[i+8>>2]+4|0]?q-15|0:q);else{if(ye=e[Be+100>>2],Ft=u[e[t+8>>2]+15|0],i=u[t+20|0],q=u[ye+(Ft+K(i|u[f+20|0]?(0|q)==1:q,10)|0)|0],!i|!(32&u[0|Be]))break i;q=u[1+(ye+K(Ft,10)|0)|0]+q>>>1|0}i=P>>>1|0,Ft=!ae,P=(0|(q=(0|K(e[130104+(ae?(0|ae)==1?4:8:0)>>2],q))/128|0))<=8?8:q;i:if((0|Lt)!=7)ls&&(P=e[Be+200>>2]+P|0);else{if(P=(q=e[Be+200>>2])+P|0,!ls)break i;P=((0|q)/2|0)+P|0}q=i&Ft|(0|m)==27,(i=B[304+(Be+(Lt<<1)|0)>>1])||(i=B[Be+316>>1]),P=K(i<<16>>16,P),(ae=u[7+(i=y+145840|0)|0])&&(Lt=u[e[144464+(ae<<2)>>2]+14|0])&&(P=(0|K(P,Lt))/100|0),(q|(0|a)==2)==1&&(2097152&(a=e[Be+12>>2])||(P=(0|K(262144&a?282:256+((280-(u[e[8+(y+145840|0)>>2]+14|0]<<1)|0)/3|0)&65535,P))/256|0)),Lt=y+145840|0,a=K(e[32526],e[Be+196>>2]),ls=(0|$r)!=2?256:(0|((0|a)>(0|P)?P:a))/128|0,e[Lt+12>>2]=ls,(a=u[Lt+16|0])>>>0>=19&&(zA(84371,28,Mr),g[Lt+16|0]=0,ae=u[i+7|0],a=0),P=a+1|0,(a=255&ae)?(Po(a,d+8|0),a=FA(e[d+132>>2])):a=e[129280+((255&P)<<2)>>2],q=y+145840|0,1&(M|qe)&&(i=145840+(y=ot<<5)|0,M=u[0|a],a=u[q+21|0],a=((0|K(M,u[q+22|0]-a|0))/256|0)+a|0,g[i+22|0]=a,s=(a-(s=(0|a)==255?255:s)|0)>16?a-16|0:s,g[i+21|0]=s,i=0,(0|s)<(0|a)&&(g[Lt+16|0]=P,i=2),e[12+(s=y+145840|0)>>2]=ls,g[s+16|0]=i,a=u[Ar+19|0],g[s+19|0]=u[s+17|0]!=3&&a>>>0>18?18:a),s=(0|$r)!=2,i=-2&(a=B[t>>1]),I[t>>1]=i;i:{c:{A:switch(u[t+17|0]-3|0){case 5:if(u[f+17|0]==2)break i;i=1|a;break c;case 0:break A;default:break i}if(I[t>>1]=1|a,u[f+17|0]!=2&&e[e[t+8>>2]>>2]!=12146)break i}I[t>>1]=i}s?(0|(t=s<<4))<=((a=u[q+22|0])-(i=u[q+21|0])|0)||(i=(0|(t=a-t|0))>0?t:0,g[q+21|0]=i):(a=u[q+22|0],i=u[q+21|0]),t=255&i,s=((0|K(u[e[129280+(u[Lt+16|0]<<2)>>2]+127|0],a-t|0))/256|0)+t|0,M=0,qe=0;break e}i=e[12+(a+145840|0)>>2],e[f+12>>2]=i,(0|$r)==3&&(i=e[32526],e[f+12>>2]=i),a=s;n:switch(q-5|0){case 0:e[f+12>>2]=(K(i,160)>>>0)/100;break s;case 2:break n;default:break t}e[f+12>>2]=(K(i,120)>>>0)/100}a=s}qe=0,g[16+(t=y+145840|0)|0]=0,i=t,a=(t=255&a)-16|0,g[i+21|0]=t>>>0>=a>>>0?a:0}if(!(e[36423]>(0|o)))break}if(pe=d+160|0,15&(i=e[47197])|e[36456]){t=0,f=0,pe=a=pe-80|0;e:if((s=e[33222])||(e[33223]=500,s=Fr(500),e[33222]=s,s)){if(!((e[36423]-2|0)<2)){for(t=i>>8,Be=128&i?0:t,ae=t&i<<24>>31,q=2&i,i=a+32|1,y=1;;){if(Wn(a,e[8+(o=145840+(ot=y<<5)|0)>>2],o,q,a+72|0),t=a+32|0,(13&(s=u[o+20|0]))==1&&(g[a+32|0]=32,t=i),!Be|(0|Be)!=32&!!(0|s)|y>>>0<2||(Ir(a+76|0,a),e[a+76>>2]-880>>>0>4294967103||(t=ia(Be,t)+t|0)),4&u[0|o]&&((s=u[3+(ot+145840|0)|0])>>>0<2||(s=s>>>0>=5?5:s,s=q?s>>>0>3?712:716:g[s+94144|0],e[a+76>>2]=s,t=ia(s,t)+t|0)),P=0,e[a+72>>2]=0,u[0|(s=a)])for(;s=Ir(a+76|0,s)+s|0,e[a+72>>2]>>>P-1&1|!ae|(0|P)<=0||(M=e[a+76>>2])-880>>>0>4294967103||zo(M)&&(t=ia(ae,t)+t|0),P=P+1|0,t=ia(e[a+76>>2],t)+t|0,u[0|s];);if(u[e[o+8>>2]+10|0]!=21&&(8&(s=B[o>>1])&&(t=Wn(t,e[36128],o,q,0),s=B[o>>1]),!(4&s)|u[17+(ot+145840|0)|0]==2||(t=Wn(t,e[36136],o,q,0)),(s=u[7+(ot+145840|0)|0])&&(t=Wn(t,e[144464+(s<<2)>>2],o,q,0))),(t=(o=t-(a+32|0)|0)+f|0)>>>0<ue[33223])s=e[33222];else{if(s=t+500|0,e[33223]=s,!(s=Ma(e[33222],s))){e[33223]=0,s=86135;break e}e[33222]=s}if(g[(P=o)+(o=a+32|0)|0]=0,Hr(s+f|0,o),f=t,!((0|(y=y+1|0))<(e[36423]-2|0)))break}if(!s){s=86135;break e}}g[t+s|0]=0}else e[33223]=0,s=86135;pe=a+80|0,15&u[188788]&&(e[r>>2]=s,ba(e[47195],84367,r)),(t=e[36456])&&os[0|t](s)}u[190280]?(e[36423]=0,t=1):(kt(0),(t=e[r+8>>2])?(pe=s=pe+-64|0,na(s,t,60),Eo(s,1),a=0,(t=nr(s,0))&&(a=t,u[202976]&&(a=nr(202976,2))),pe=s- -64|0,e[44468]=a):a=e[44468],t=1,a&&(s=e[32972],(a=Fr(1344))&&(s=ds(a,s,1344),a=216192+(e[50758]<<4)|0,e[a>>2]=11,e[a+8>>2]=s,s=e[50758]+1|0,e[50758]=(0|s)<=169?s:0),e[44468]=0))}else t=0,g[190280]=0;else t=0,e[36423]=0,e[50758]=0,e[50757]=0;return pe=r+16|0,t}function fe(t,r){var s=0,a=0,i=0,o=0;s=1073741825;e:{t:{s:{n:{i:{c:{A:{d:{l:{o:{p:{b:{m:{C:{h:{M:{I:{x:{N:{V:{W:{E:{_:{T:{F:{X:{L:{K:{z:{ne:{R:{xe:{H:{g:{f:{$:{k:{ee:{w:{a:{Ve:{Z:{r:{fe:{j:{pe:{he:{We:{le:{O:{Me:{v:{Ee:{J:{me:{Be:{Ue:{Te:{Pe:{De:{Se:{Ge:{Fe:{be:{He:{te:{ze:{Ye:{Oe:{Qe:{B:{Ce:{Ke:{ht:{mt:{bt:{Ct:{wt:{It:{kt:{yt:{_t:{vt:{xt:{Mt:{Et:{Bt:{Tt:{Pt:{Dt:{St:{Gt:{Ft:{zt:{Ot:{Qt:{Nt:{Lt:{Rt:{jt:{Vt:{Wt:{Ut:switch(0|r){case 0:r=t-9>>>0<5?1073741825:0,r=(t=(0|t)==133)?1073741825:r;break F;case 1:u:{P:{D:{S:{G:{Q:{q:{U:{re:{ie:{se:{oe:{ce:{ue:{if((0|(r=-256&t))<=2047){if(!r)break ue;if((0|r)==1536)break ce;if((0|r)!=1792||(s=0,a=1,(0|t)!=1807))break u;break r}if((0|r)<=69631){if((0|r)==2048)break oe;if((0|r)!=8192)break u;switch(s=131076,t-8204|0){case 1:break se;case 0:break r;default:break ie}}if((0|r)==69632)break re;if((0|r)!=917504)break u;switch(s=8388608,t-917505|0){case 62:break D;case 58:break S;case 57:break G;case 45:break Q;case 43:break q;case 32:break U;case 0:break r;default:break P}}if(s=16,(0|t)!=173)break u;break r}if(s=0,a=1,t-1536>>>0<6)break r;a=(0|t)==1757,r=(t=(0|t)==1564)?2:0;break T}if(s=0,a=1,(0|t)!=2274)break u;break r}return X=64,4}if(s=1073741826,(-2&t)==8206)break r;if(t-8234>>>0<5)return X=0,2;if(s=128,t-8289>>>0<4||(s=2,t-8294>>>0<4))break r;if(s=8388608,t-8298>>>0>=6)break u;break r}r=!(t-69821&-17),t=0;break _}X=536870976;break E}X=268435520;break E}X=-2147483584;break E}X=134217792;break E}X=67108928;break E}X=1073741888;break E}if(s=131072,a=64,t-917536>>>0<96)break r}break a;case 2:u:{P:{D:{S:{G:{Q:{q:{if((0|(r=-256&t))<=130303){if((0|r)<=127743){if((0|r)<=64767){if((0|r)<=11007){if((0|r)==8192)break q;if((0|r)!=9216)break u;if(t-9255>>>0>=25)break Q;break w}if((0|r)==11008)break G;if((0|r)!=11776||(s=-2147483648,t-11845>>>0>=59))break u;break r}if((0|r)<=126975){if((0|r)==64768)break S;if((0|r)!=65280||(s=4194304,t-65520>>>0>=9))break u;break r}if((0|r)==126976|(0|r)==127232|(0|r)==127488)break Z;break u}if((0|r)<=129023){if((0|r)<=128255){if((0|r)==127744|(0|r)==128e3)break Z;break u}if((0|r)==128256|(0|r)==128512|(0|r)==128768)break Z;break u}if((0|r)<=129535){if((0|r)==129024|(0|r)==129280)break Z;break u}if((0|r)==129536|(0|r)==129792|(0|r)==130048)break Z;break u}if((0|r)<=919039){if((0|r)<=917759){if((0|r)<=130815){if((0|r)==130304)break Z;if((0|r)!=130560)break u;break Z}if((0|r)==130816)break Z;if((0|r)!=917504)break u;if((-128&t)!=917632)break D;break ee}if((0|r)<=918271){if((0|r)==917760)break P;if(s=4194304,(0|r)!=918016)break u;break r}if((0|r)==918272|(0|r)==918528)break ee;if(s=4194304,(0|r)!=918784)break u;break r}if((0|r)<=920319){if((0|r)<=919551){if((0|r)==919040)break ee;if(s=4194304,(0|r)!=919296)break u;break r}if((0|r)==919552|(0|r)==919808)break ee;if(s=4194304,(0|r)!=920064)break u;break r}if((0|r)<=920831){if((0|r)==920320)break ee;if(s=4194304,(0|r)!=920576)break u;break r}if((0|r)==920832|(0|r)==921088)break ee;if(s=4194304,(0|r)!=921344)break u;break r}if(s=4194304,(0|t)!=8293)break u;break r}if(s=-2147483648,t-9291>>>0>=21)break u;break r}if((-16&t)==11248|t-11219>>>0<25|(0|t)==11209|t-11194>>>0<3||(0|(r=-2&t))==11124)break w;if(s=-2147483648,(0|r)!=11158)break u;break r}if(s=65536,t-64976>>>0>=32)break u;break r}if((0|t)==917504)break ee;if(s=4194304,t-917506>>>0>=30)break u;break r}if(s=4194304,t>>>0>917999)break r}r=(t=!(65534&~t))>>>16|0,t<<=16;break _;case 6:u:{P:{D:{S:{G:{Q:{q:{U:{re:{ie:{se:{oe:{if((0|(r=-256&t))<=7679){if((0|r)<=767){if(!r)break oe;if((0|r)==256)break se;if((0|r)!=512)break a;if((0|t)!=585)break ie;break W}if((0|r)==768)break re;if((0|r)==1024)break U;if((0|r)!=7424||(s=16777216,(0|t)!=7574))break a;break r}if((0|r)<=119807){if((0|r)==7680)break q;if((0|r)==8448)break Q;if((0|r)!=65280||(s=256,t-65345>>>0>=6))break a;break r}if((0|r)<=120319){if((0|r)==119808)break G;if((0|r)!=120064)break a;if(t>>>0>=120070)break S;break k}if((0|r)==120320)break D;if((0|r)!=120576)break a;if(t>>>0>=120597)break P;break k}if(s=768,t-97>>>0<6)break r;if(s=16777216,t-105>>>0>=2)break a;break r}s=(r=(0|t)==329)>>>9|0,r=(t=(0|t)==303)?16777216:r<<23;break V}if((0|t)==616)break W;if(s=16777216,(0|t)!=669)break a;break r}switch(s=128,t-976|0){case 35:break u;case 0:case 1:case 2:case 5:case 32:case 33:break r}if((-2&t)!=1012)break a;break r}a=(t=!(t-1110&-3))>>>8|0,t<<=24;break N}a=(r=(0|t)==7883)>>>8|0,r=(t=(0|t)==7725)?16777216:r<<24;break T}if(t-8458>>>0<10)break k;if((r=t-8495|0)>>>0<11)break Wt;break fe}if((0|(r=-2&t))==119842)break $;if(t-119808>>>0<85)break k;if(t-119894>>>0<2|t-119946>>>0<2)break $;if((0|t)==119995|t-119896>>>0<69|t-119982>>>0<12)break k;if((0|r)==119998)break $;if(t-119997>>>0<7)break k;if(s=16777344,(0|r)==120050)break r;if(s=128,t>>>0<=120004)break a;break r}if((-2&t)==120102)break $;if(t-120094>>>0<28)break k;S:{if((0|t)<=120257){if(t-120154>>>0<2)break $;if(s=16777344,t-120206>>>0>=2)break S;break r}if(t-120258>>>0<2)break $;if(s=16777344,t-120310>>>0<2)break r}if(s=128,t>>>0<=120145)break a;break r}if(t-120362>>>0<2|t-120414>>>0<2)break $;if(s=16777344,t-120466>>>0<2)break r;if(t-120540>>>0<31|t>>>0>120571|t>>>0<120486)break k;if(s=128,t-120514>>>0>=25)break a;break r}if(t-120772>>>0<8|t-120746>>>0<25|t-120714>>>0<31|t-120688>>>0<25||(0|t)!=120597&t>>>0<120629|t-120656>>>0<31)break k;if(s=128,t-120630>>>0<25)break r;break a}break W;case 7:u:{P:{D:{S:{G:{Q:{q:{U:{re:{ie:{se:{oe:{ce:{ue:{y:{Ae:{ae:{Y:{de:{ge:{we:{Ie:{if((0|(r=-256&t))<=11263){if((0|r)<=3583){if((0|r)<=1535){if((0|r)==512)break Ie;if((0|r)==768)break we;if((0|r)!=1280||(s=4096,(0|t)!=1369))break a;break r}if((0|r)==1536)break ge;if((0|r)==1792)break de;if((0|r)!=2304||(s=4096,(0|t)!=2417))break a;break r}if((0|r)<=7167){if((0|r)==3584)break Y;if((0|r)==6144)break ae;if((0|r)!=6656||(s=8192,(0|t)!=6823))break a;break r}if((0|r)==7168)break Ae;if((0|r)==7424)break y;if((0|r)!=8192)break a;if(s=16793600,!(r=t-8305|0))break r;if((0|r)==14)break ue;break ce}if((0|r)<=43263){if((0|r)<=40959){if((0|r)==11264)break oe;if((0|r)==11776)break se;if((0|r)!=12288)break a;switch(s=8192,t-12293|0){case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 9:case 10:case 11:case 12:case 13:case 14:case 15:case 16:case 17:case 18:case 19:case 20:case 21:case 22:case 23:case 24:case 25:case 26:case 27:case 28:case 29:case 30:case 31:case 32:case 33:case 34:case 35:case 36:case 37:case 38:case 39:case 40:case 41:case 42:case 43:break re;case 0:case 44:case 45:case 46:case 47:case 48:break r;default:break ie}}if((0|r)==40960)break U;if((0|r)==42496)break q;if((0|r)!=42752)break a;if(t-42775>>>0>=9)break Q;break f}if((0|r)<=65279){if((0|r)==43264)break G;if((0|r)==43520)break S;if((0|r)!=43776||(s=20480,(-4&t)!=43868))break a;break r}if((0|r)==65280)break D;if((0|r)==92928)break P;if((0|r)!=93952)break a;if(s=4096,t-94099>>>0<13)break r;if(s=8192,(-2&t)!=94176)break a;break r}if(s=16797696,(0|t)==690)break r;if(t-688>>>0<9)return X=0,20480;if(t-697>>>0<7)break f;if((0|(r=-2&t))==704)return X=0,20480;if(s=4096,t-710>>>0<10||(s=12288,(0|r)==720)||(s=20480,t-736>>>0<5))break r;s=(t=(-3&t)==748)>>>20|0,t<<=12;break x}r=(0|t)==890?20480:0,r=(t=(0|t)==884)?4096:r;break F}if(s=8192,(0|t)==1600)break r;if(s=4096,t-1765>>>0>=2)break a;break r}if(s=4096,(-2&t)==2036)break r;if(s=8192,(0|t)!=2042)break a;break r}r=(t=!(t-3654&-129))>>>19|0,t<<=13;break _}if(s=8192,(0|t)!=6211)break a;break r}if(s=12288,(0|t)==7291)break r;if(s=4096,t-7288>>>0>=6)break a;break r}if(s=16797696,(0|t)==7522||(s=20480,t-7468>>>0<63))break r;switch(s=16384,t-7588|0){default:if((0|t)==7544)break r;case 1:case 2:case 3:if(t-7579>>>0>=37)break a;break r;case 0:case 4:}return X=0,16793600}return X=0,16384}if(s=16384,t-8336>>>0>=13)break a;break r}r=(s=(0|t)==11389)>>>18|0,s=(t=(0|t)==11388)?16793600:s<<14;break I}if(s=-2147479552,(0|t)!=11823)break a;break r}if(t-12445>>>0<2)break r;if((0|t)==12540)break u}if(t-12541>>>0>=2)break a;break r}if(s=8192,(0|t)!=40981)break a;break r}if((0|t)==42508)break M;if((0|t)==42623)break f;if(s=20480,(-2&t)!=42652)break a;break r}if((0|t)==42864)return X=0,16384;if((0|t)==42888)break f;if(s=20480,(-2&t)!=43e3)break a;break r}s=(r=(0|t)==43494)>>>19|0,r=(t=(0|t)==43471)?8192:r<<13;break V}if((0|t)==43632||(0|t)==43741)break M;if(s=8192,t-43763>>>0>=2)break a;break r}if(s=12288,(0|t)==65392)break r;if(s=135168,(-2&t)!=65438)break a;break r}if(s=8192,(-2&t)==92994)break r;break a}return X=0,12288;case 8:s=128;u:{P:{D:{S:{G:{Q:{q:{U:{re:{if((0|(r=-256&t))<=12543){if((0|r)<=5887){if((0|r)<=3583){if(!r)break re;if((0|r)!=1536||(r=8388608,(0|t)!=1651))break v;break le}if((0|r)==3584)break U;if((0|r)!=4352||(s=4194304,t-4447>>>0>=2))break v;break O}if((0|r)<=8447){if((0|r)==5888)break q;if((0|r)!=6400||(r=t-6581|0)>>>0>=6)break v;s=e[(r=81432+(r<<3)|0)>>2],a=e[r+4>>2];break O}if((0|r)==8448)break Q;if((0|r)!=12288||(r=2048,(0|t)!=12294))break v;break le}if((0|r)<=68863){if((0|r)<=63999){if((0|r)==12544)break G;if((0|r)!=43520)break v;if((r=t-43701|0)>>>0<8)break P;break Me}if((0|r)==64e3)break u;if((0|r)!=65280||(r=4194304,(0|t)!=65440))break v;break le}if((0|r)<=100095){if((0|r)==68864)break S;if((0|r)!=70400||(s=8192,(0|t)!=70493))break v;break he}if((0|r)==100096)break D;if((0|r)!=126464)break v;break O}a=(r=!(t-170&-17))>>>18|0,s=r<<14;break O}if(s=33554432,t-3648>>>0<5)break O;if(r=0,o=33554432,(0|t)==3759)break le;if(t-3776>>>0>=5)break v;break O}if(s=8388608,t-6051>>>0>=2)break v;break O}if(t-8501>>>0>=4)break v;break O}if(r=4194304,(0|t)!=12644)break v;break le}if(s=4096,(-2&t)!=68898)break v;break O}if(s=2048,t-100333>>>0<5)break O;break v}if(s=33554432,!(211>>>r&1))break Me;break O}if((r=t-64014|0)>>>0>=28)break v;s=e[(r=81480+(r<<3)|0)>>2],a=e[r+4>>2];break O;case 10:u:{P:{D:{S:{G:{Q:{if((0|(r=-256&t))<=119807){if((0|r)<=8447){if(!r)break Q;if((0|r)!=768)break a;switch(s=128,t-976|0){case 0:case 1:case 2:case 36:case 37:break r;default:break a}}if((0|r)==8448)break G;if((0|r)!=65280||(s=256,t-65313>>>0>=6))break a;break r}if((0|r)<=120319){if((0|r)==119808)break S;if((0|r)!=120064)break a;if(t>>>0>=120070)break D;break k}if((0|r)==120320)break P;if((0|r)!=120576)break a;if(t-120772>>>0>=8)break u;break k}if(s=768,t-65>>>0>=6)break a;break r}switch(s=128,t-8450|0){case 0:case 5:break r}if(t-8458>>>0<10)break k;if((r=t-8469|0)>>>0<20)break Vt;if((-4&t)==8508)break r;break Ee}if(t-119982>>>0<12|t>>>0>120004|t-119977>>>0<4|t-119973>>>0<2||(0|t)==119970|(-2&t)==119966|t-119808>>>0<85)break k;if(s=128,t-119894>>>0>=71)break a;break r}if(t-120138>>>0<7|t>>>0>120145|(0|t)==120134|t-120128>>>0<5||t-120123>>>0<4|t-120094>>>0<28|(0|t)!=120070&t>>>0<120075|t-120086>>>0<7)break k;if(s=128,t-120077>>>0>=8)break a;break r}if(t-120540>>>0<31|t>>>0<120486)break k;if(s=128,t-120488>>>0>=25)break a;break r}if(t-120714>>>0<31|t-120598>>>0<31)break k;if(s=128,t-120656>>>0<31)break r;break a;case 11:u:{P:{D:{S:{G:{Q:{q:{U:{re:{ie:{se:{oe:{ce:{ue:{y:{Ae:{ae:{if((0|(r=-256&t))<=43263){if((0|r)<=3839){if((0|r)<=3071){if((0|r)==2304)break ae;if((0|r)!=2816)break g;if((0|t)>3005)break y;if((0|t)!=2878)break Ae;return X=0,132096}if((0|r)==3072)break ue;if((0|r)!=3328)break g;switch(s=132096,t-3535|0){case 0:case 16:break r;case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 9:case 10:case 11:case 12:case 13:case 14:case 15:break g;default:break ce}}if((0|r)<=6911){if((0|r)==3840)break oe;if((0|r)!=4096)break g;if(s=1024,t-4139>>>0<2)break r;switch(t-4145|0){case 0:case 7:case 10:case 11:case 37:case 38:case 49:case 54:case 55:case 82:case 83:break r;case 86:case 87:case 88:case 89:case 90:case 91:case 94:case 105:case 106:break u;default:break se}}if((0|r)==6912)break ie;if((0|r)==7168)break re;if((0|r)!=12288||(s=135168,(-2&t)!=12334))break g;break r}if((0|r)<=70399){if((0|r)<=43775){if((0|r)==43264)break U;if((0|r)!=43520)break g;return X=0,t-43643&-3?1024:4096}if((0|r)==43776)break q;if((0|r)==69888)break Q;if((0|r)!=70144||(s=4096,(0|t)!=70197))break g;break r}if((0|r)<=70911){if((0|r)==70400)break G;if((0|r)!=70656)break g;r=(0|t)==70845?132096:1024,r=(t=(0|t)==70832)?132096:r;break F}if((0|r)==70912)break S;if((0|r)==71168)break D;if((0|r)!=119040)break g;switch(s=131072,t-119141|0){case 8:break f;case 1:break a;case 0:break r;default:break P}}r=(0|t)==2519?132096:1024,r=(t=(0|t)==2494)?132096:r;break F}if(s=132096,(0|t)!=2903)break g;break r}if((0|t)==3006)return X=0,132096;if(s=132096,(0|t)!=3031)break g;break r}if((t=t-3266|0)>>>0>20||(s=132096,!(1<<t&1572865)))break g;break r}if((0|t)==3390)break r;if((0|t)!=3415)break g;break r}if(s=4096,(-2&t)!=3902)break g;break r}s=(t=(0|t)==4252)>>>22|0,t<<=10;break x}switch(s=1024,t-6965|0){default:if((0|t)==6916)break r;break;case 0:case 6:break r;case 1:case 2:case 3:case 4:case 5:}if(t-6973>>>0<5)break r;switch(t-6979|0){case 1:break f;case 0:break r}if((0|t)==7042|(0|t)==7073|(-2&t)==7078)break r;if((0|t)==7082)break f;if((0|t)==7143|t-7146>>>0<3)break r;s=(t=(0|t)==7150)>>>22|0,t<<=10;break x}r=(0|t)==7415?4096:1024,r=(t=(0|t)==7393)?4096:r;break F}r=(0|t)==43456?4096:1024,r=(t=(0|t)==43347)?4096:r;break F}if(s=4096,(0|t)!=44012)break g;break r}if(s=4096,(0|t)!=70080)break g;break r}s=132096;G:switch(t-70462|0){case 0:case 25:break r;case 15:break G;default:break g}break f}if(s=132096,(0|t)!=71087)break g;break r}if(s=4096,(0|t)!=71350)break g;break r}if(s=135168,t-119150>>>0<5)break r;break g}break f;case 12:r=((0|t)==8419)<<6,t=0;break _;case 13:u:{P:{D:{S:{G:{Q:{q:{U:{re:{ie:{se:{oe:{ce:{ue:{y:{Ae:{ae:{Y:{de:{ge:{we:{Ie:{Ne:{ke:{Le:{qe:{Xe:{Ze:{Je:{$e:{et:{tt:{rt:{st:{at:{ye:{nt:{it:{ot:{At:{lt:{Re:{_e:{je:{ct:{ut:{dt:{ve:{gt:{ft:{pt:{if((0|(r=-256&t))<=43775){if((0|r)<=5887){if((0|r)<=2559){if((0|r)<=1535){if((0|r)==768)break pt;if((0|r)==1024)break ft;if((0|r)!=1280)break a;if(t-1425>>>0>=17)break gt;break f}if((0|r)<=2047){if((0|r)==1536)break ve;if((0|r)!=1792)break a;if(s=1024,(0|t)==1809)break r;if((-16&t)!=1840)break dt;return X=0,5120}if((0|r)==2048)break ut;if((0|r)!=2304)break a;if(t>>>0>=2307)break ct;break g}if((0|r)<=3583){if((0|r)<=3071){if((0|r)==2560)break je;if((0|r)!=2816)break a;switch(s=1024,t-2876|0){case 0:break f;case 3:break r;case 1:case 2:break Re;default:break _e}}if((0|r)==3072)break lt;if((0|r)!=3328)break a;if((0|(r=-2&t))!=3328)break At;break g}if((0|r)<=4095){if((0|r)==3584)break ot;if((0|r)!=3840)break a;if((0|(r=-2&t))!=3864)break it;break f}if((0|r)==4096)break nt;if((0|r)!=4864||(s=1024,(0|t)!=4959))break a;break r}if((0|r)<=8191){if((0|r)<=6655){if((0|r)==5888)break ye;if((0|r)==6144)break at;if((0|r)!=6400)break a;if((r=t-6432|0)>>>0<=18&&(s=1024,1<<r&262535))break r;if(s=4096,t-6457>>>0>=3)break a;break r}if((0|r)<=7167){if((0|r)==6656)break st;if((0|r)!=6912)break a;if(s=1024,(-4&t)==6912)break r;if((0|t)!=6964)break rt;break f}if((0|r)==7168)break tt;if((0|r)!=7424)break a;if(s=4096,t-7620>>>0<12||(s=1024,t-7655>>>0<14))break r;if((t=t-7669|0)>>>0>=11)break a;r=e[(t=82104+(t<<3)|0)>>2];break h}if((0|r)<=42495){if((0|r)<=11519){if((0|r)==8192)break et;if((0|r)!=11264||(s=4096,t-11503>>>0>=3))break a;break r}if((0|r)==11520)break $e;if((0|r)!=12288)break a;if(t-12330>>>0>=4)break Je;break f}if((0|r)<=43263){if((0|r)==42496)break Ze;if((0|r)!=43008)break a;if(t-43045>>>0>=2)break Xe;break g}if((0|r)==43264)break qe;if((0|r)!=43520)break a;switch(s=1024,t-43561|0){case 83:case 150:case 152:break f;case 0:case 1:case 2:case 3:case 4:case 5:case 8:case 9:case 12:case 13:case 26:case 35:case 135:case 137:case 138:case 139:case 142:case 143:case 149:break r;default:break Le}}if((0|r)<=71423){if((0|r)<=69375){if((0|r)<=66047){if((0|r)==43776)break ke;if((0|r)==64256)break Ne;if((0|r)!=65024)break a;if(s=536870912,t-65024>>>0<15||(a=64,(0|t)==65039))break r;if(s=4096,a=0,(-16&t)!=65056)break a;break r}if((0|r)<=68095){if((0|r)==66048)break Ie;if((0|r)!=66304||(s=1024,t-66422>>>0>=5))break a;break r}if((0|r)==68096)break we;if((0|r)!=68864||(s=5120,(-4&t)!=68900))break a;break r}if((0|r)<=70399){if((0|r)<=69887){if((0|r)==69376)break ge;if((0|r)!=69632)break a;if(t-69688>>>0>=14)break de;break g}if((0|r)==69888)break Y;if((0|r)!=70144)break a;if(s=1024,t-70191>>>0<3)break r;switch(t-70196|0){case 2:break f;case 0:case 3:case 10:break r;case 1:case 4:case 5:case 6:case 7:case 8:case 9:break Ae;default:break ae}}if((0|r)<=70911){if((0|r)==70400)break y;if((0|r)!=70656)break a;if((-8&t)!=70712)break ue;break g}if((0|r)==70912)break ce;if((0|r)!=71168)break a;if(s=1024,t-71219>>>0<8)break r;switch(t-71229|0){case 2:break f;case 0:case 3:break r;case 1:break se;default:break oe}}if((0|r)<=92927){if((0|r)<=72703){if((0|r)==71424)break Ot;if((0|r)==71680)break ie;if((0|r)!=72192)break a;if(t-72193>>>0>=10)break re;break g}if((0|r)<=73215){if((0|r)==72704)break U;if((0|r)!=72960)break a;if((r=t-73009|0)>>>0<19)break Ft;break J}if((0|r)==73216)break q;if((0|r)!=92672||(s=4096,t-92912>>>0>=5))break a;break r}if((0|r)<=122879){if((0|r)<=113663){if((0|r)==92928)break Q;if((0|r)!=93952||(s=4096,t-94095>>>0>=4))break a;break r}if((0|r)==113664)break G;if((0|r)!=119040)break a;switch(s=4096,t-119143|0){case 0:case 1:case 2:case 20:case 21:case 22:case 23:case 24:case 25:case 26:case 27:case 30:case 31:case 32:case 33:case 34:case 35:case 36:case 67:case 68:case 69:case 70:break r;default:break a}}if((0|r)<=125183){if((0|r)==122880)break S;if((0|r)!=124928||(s=4096,t-125136>>>0>=7))break a;break r}if((0|r)==125184)break D;if((0|r)!=917760||(s=536870912,t-917760>>>0>=240))break a;break r}if(t-768>>>0<69)break f;if(s=21504,(0|t)==837)break r;if(t-838>>>0<9)break f;if(s=4194304,(0|t)==847)break r;if((-8&t)==848)break f;if(s=4096,t-861>>>0>=6)break a;break r}if(s=4096,t-1155>>>0>=5)break a;break r}if(s=4096,t-1443>>>0<13||(s=5120,t-1456>>>0<14))break r;if((t=t-1471|0)>>>0>=9)break a;r=e[(t=81944+(t<<3)|0)>>2];break h}if(t-1552>>>0<11)break g;if(s=5120,t-1611>>>0<8)break r;if(t-1619>>>0<4)break g;switch(t-1623|0){case 1:break f;case 0:break r;case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 25:case 127:case 128:case 129:case 130:case 131:case 132:case 133:break g}if(s=4096,t-1759>>>0<2)break r;if((r=t-1761|0)>>>0<8)break jt;break me}if(t-1856>>>0<11)break f;if(s=5120,t-1958>>>0<11)break r;if(s=4096,t-2027>>>0>=9)break a;break r}switch(s=1024,(-2&t)-2070|0){case 2:break f;case 0:break r}if(t-2260>>>0<12|t-2089>>>0<4|t-2075>>>0<9|t-2085>>>0<3)break g;if(t-2275>>>0<7)return X=0,5120;if(s=4096,t-2282>>>0<6||(s=5120,t-2288>>>0<15))break r;if(s=1024,(0|t)!=2303)break a;break r}switch(s=1024,t-2362|0){case 2:break f;case 0:break r}if(t-2369>>>0<8)break g;switch(s=4096,t-2381|0){case 0:case 4:case 5:case 6:case 7:case 111:break r;case 8:case 9:case 10:case 21:case 22:case 52:break g}if(t-2497>>>0<4)break g;if((0|t)==2509)break r;if(s=1024,(-2&t)!=2530)break a;break r}if(t-2561>>>0<2)break g;switch(s=4096,t-2620|0){case 0:case 17:case 128:case 145:break r;case 5:case 6:case 11:case 12:case 15:case 16:case 21:case 52:case 53:case 57:case 69:case 70:case 133:case 134:case 135:case 136:case 137:case 139:case 140:case 166:case 167:case 190:case 191:case 192:break g}if(t-2813>>>0>=3)break a;break r}if((0|t)==2817)break g}if(t-2881>>>0<4)break g;switch(s=4096,t-2893|0){case 0:break r;case 9:break g}if((-2&t)==2914)break g;switch(s=1024,t-3008|0){default:if((0|t)!=2946)break a;break r;case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 9:case 10:case 11:case 12:break a;case 0:break r;case 13:}break f}switch(s=1024,t-3072|0){case 77:case 188:case 205:break f;case 0:case 62:case 63:case 64:case 70:case 71:case 72:case 74:case 75:case 76:case 85:case 86:case 98:case 99:case 129:case 191:case 198:case 204:break r}if((-2&t)!=3298)break a;break r}if(s=4096,t-3387>>>0<2)break r;if(t-3393>>>0<4)break g;if((0|t)==3405)break r;if((0|r)==3426)break g;switch(t-3530|0){case 0:break r;case 8:case 9:case 10:case 12:break g;default:break a}}if((r=t-3633|0)>>>0<10)break Rt;break Be}if((s=t-3893|0)>>>0>4|!(1<<s&21))break Ue;break f}switch(s=1024,t-4141|0){case 10:case 12:case 13:break f;case 0:case 1:case 2:case 3:case 5:case 6:case 7:case 8:case 9:case 16:case 17:case 43:case 44:case 49:case 50:case 51:case 68:case 69:case 70:case 71:case 85:case 88:case 89:break r}r=(s=(0|t)==4253)>>>22|0,s=(t=(0|t)==4237)?4096:s<<10;break I}s=1024;ye:{switch(t-5906|0){case 0:case 1:case 32:case 33:break r;case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 9:case 10:case 11:case 12:case 13:case 14:case 15:case 16:case 17:case 18:case 19:case 20:case 21:case 22:case 23:case 24:case 25:case 26:case 27:case 28:case 29:case 30:case 31:break ye}switch(t-5970|0){case 0:case 1:case 32:case 33:break r;default:break ye}}if(s=4194304,(-2&t)==6068)break r;if((r=t-6071|0)>>>0<16)break Lt;break Te}if(s=536870912,t-6155>>>0<3||(s=67109888,t-6277>>>0<2))break r;if(s=1024,(0|t)!=6313)break a;break r}if(t-6679>>>0<2)break g;switch(s=1024,t-6683|0){case 0:case 59:case 61:case 62:case 63:case 64:case 65:case 66:case 67:case 71:case 74:case 75:case 76:case 77:case 78:case 79:case 80:case 81:case 88:case 89:break r}if(s=4096,t-6832>>>0<14)break r;if((t=t-6773|0)>>>0>=11)break a;r=e[(t=82016+(t<<3)|0)>>2];break h}if(t-6966>>>0<5)break r;switch(t-6972|0){case 0:case 6:break r}if(t-7019>>>0<9)break f;switch(t-7040|0){case 43:break f;case 0:case 1:case 34:case 35:case 36:case 37:case 40:case 41:case 44:case 45:case 104:case 105:case 109:case 111:case 112:case 113:break r;default:break a}}if(s=1024,t-7212>>>0<8)break r;switch(s=12288,t-7222|0){case 1:break f;case 0:break r}if(t-7380>>>0<13)break f;switch(s=4096,t-7376|0){case 0:case 1:case 2:case 18:case 19:case 20:case 21:case 22:case 23:case 24:case 29:case 36:break r}if((-2&t)!=7416)break a;break r}if(s=128,t-8400>>>0<13)break r;if((t=t-8417|0)>>>0>=15)break a;r=e[(t=82192+(t<<3)|0)>>2];break h}if(s=1024,(-32&t)!=11744)break a;break r}if(s=4096,t-12441>>>0>=2)break a;break r}if((0|t)==42607)break f;if(t-42612>>>0<8)break g;if((0|(t&=-2))==42620)break f;if((0|t)==42654)break u;if(s=4096,(0|t)!=42736)break a;break r}switch(s=4096,t-43204|0){case 0:break r;case 1:break g}if(t-43232>>>0>=18)break a;break r}if(t-43302>>>0<5)break g;if(t-43307>>>0<3)break f;if(t-43335>>>0<11|t-43392>>>0<3)break g;if(s=4096,(0|t)==43443||(s=1024,t-43446>>>0<4))break r;a=(r=(0|t)==43493)>>>20|0,r=(t=(0|t)==43452)?1024:r<<12;break T}if((-2&t)==43756)break r;if(s=4096,(0|t)!=43766)break a;break r}s=1024;ke:switch(t-44005|0){case 0:case 3:break r;case 8:break ke;default:break a}break f}if(s=5120,(0|t)!=64286)break a;break r}if(s=4096,(0|t)!=66272)break a;break r}if((-4&t)==68108)break g;if((r=t-68097|0)>>>0<6)break Nt;break Pe}if(s=4096,t-69446>>>0>=11)break a;break r}if(t-69811>>>0<4)break g;if(s=1024,(0|t)==69633)break r;if(s=4096,t-69817>>>0>=2)break a;break r}switch(s=1024,t-69888|0){case 51:case 52:case 115:break f;case 0:case 1:case 2:case 39:case 40:case 41:case 42:case 43:case 45:case 46:case 47:case 48:case 49:case 50:break r}if((-2&t)==70016|t-70070>>>0<9)break r;if(s=4096,t-70090>>>0>=3)break a;break r}if((0|t)==70367)break r}if(t-70371>>>0<6)break r;if(s=4096,t-70377>>>0>=2)break a;break r}if((-2&t)==70400)break g;s=4096;y:switch(t-70460|0){case 0:case 42:case 43:case 44:case 45:case 46:case 47:case 48:case 52:case 53:case 54:case 55:case 56:break r;case 4:break y;default:break a}break g}if((0|t)==70722)break f;if(t-70723>>>0<2)break g;if((r=t-70835|0)>>>0<=13)break P;break De}if((r=t-71090|0)>>>0<12)break Qt;break Se}switch(t-71339|0){case 0:case 2:break r;default:break se}}if(t-71344>>>0<6)break r;if(s=4096,(0|t)!=71351)break a;break r}if(s=1024,t-71727>>>0<10)break r;if(s=4096,t-71737>>>0>=2)break a;break r}if((0|t)==72244)break f;if(t-72245>>>0<10)break g;if(s=4096,(0|t)==72263)break r;if(t-72273>>>0<11)break g;if(s=1024,t-72330>>>0<13)break r;s=(r=(0|t)==72345)>>>20|0,r=(t=(0|t)==72344)?8192:r<<12;break V}if((r=t-72752|0)>>>0<16)break zt;break Ge}if(s=1024,t-73459>>>0>=2)break a;break r}if(s=1024,t-92976>>>0>=7)break a;break r}if(s=1024,(0|t)!=113822)break a;break r}if(s=1024,t-122888>>>0<17)break r;if((t=t-122880|0)>>>0>=43)break a;r=e[(t=82816+(t<<3)|0)>>2];break h}if(s=12288,t-125252>>>0<3||(s=1024,(0|t)==125255)||(s=4096,t-125256>>>0<3))break r;break a}if(!(1<<r&12479))break De;break g}break g;case 14:u:{if((0|(r=-256&t))!=120576){if((0|r)!=65280){if(r||(s=768,a=66,t-48>>>0>=10))break u;break r}if(s=256,t-65296>>>0>=10)break u;break r}if(s=128,t-120782>>>0<50)break r}break a;case 15:u:{if((0|(r=-256&t))!=12288){if((0|r)!=8448)break u;r=(t=(0|(s=-16&t))==8560)>>>18|0,a=t<<14,s=(t=(0|s)==8544)?32768:a;break I}if(t-12321>>>0<9||t-12344>>>0<3)return X=0,2048;if(s=2048,(0|t)==12295)break r}break a;case 16:u:{P:{D:{if((0|(r=-256&t))<=9215){if((0|r)==4864)break D;if((0|r)!=6400||(s=134217728,(0|t)!=6618))break u;break r}if((0|r)==9216)break P;if((0|r)!=127232)break u;if(s=0,a=-2147483648,(0|t)==127232)break r;if(a=268435456,t-127233>>>0>=10)break u;break r}if(s=134217728,t-4969>>>0>=9)break u;break r}if(s=0,a=-2147483648,t-9352>>>0<20)break r}break a;case 17:a=(t=(0|t)==8256)>>>25|0,t<<=7;break N;case 18:u:{P:{D:{S:{if((0|(r=-256&t))<=11775){if((0|r)<=6143){if(s=-2147483624,!r)break r;if((0|r)!=1280||(s=24,(0|t)!=1418))break u;break r}if((0|r)==6144)break S;if((0|r)!=8192)break u;if(s=-2147483624,(-2&t)==8208)break r;t=t-8211>>>0<2,r=-2147483640;break C}if((0|r)<=65023){if((0|r)==11776)break D;if((0|r)!=12288)break u;r=(0|t)==12336,s=(t=(0|t)==12316)||r?-2147483640:8,X=t?0:r?130:0;break m}if((0|r)==65024)break P;if((0|r)!=65280||(s=24,(0|t)!=65293))break u;break r}if(s=24,(0|t)!=6150)break u;break r}if(s=-2147483624,(0|t)==11799)break r;t=(-2&t)==11834,r=-2147483640;break C}if(s=8,a=8388608,t-65073>>>0<2||(s=152,a=0,(0|t)==65123))break r}return X=0,8;case 19:u:{P:{D:{S:{G:{Q:{if((0|(r=-256&t))<=11775){if((0|r)<=8959){if(r)break Q;break w}if((0|r)==8960)break G;if((0|r)==9984)break S;if((0|r)!=10496)break a;break H}if((0|r)<=64767){if(s=-2147483648,(0|r)==11776)break r;if((0|r)!=12288)break a;switch(s=-2147483616,t-12301|0){case 0:case 2:break r;default:break D}}if((0|r)==64768)break P;if((0|r)==65024)break u;if((0|r)!=65280)break a;if(s=32,(0|t)==65379)break r;break a}if((0|r)!=8192)break a;switch(t-8318|0){default:if(s=-2147483648,(0|t)!=8262)break a;break r;case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 9:case 10:case 11:case 12:case 13:case 14:case 15:break a;case 0:case 16:}break k}switch(s=-2147483520,t-8969|0){case 1:break a;case 0:case 2:break r}if((0|t)!=9002)break a;return X=0,-2139095040}if(s=-2147483520,(0|t)==10182)break r;break xe}return X=0,(-2&t)==12318?-2147483616:-2147483648}if(s=-2147483648,(0|t)!=64830)break a;break r}a=(t=!(t-65090&-3))>>>27|0,t<<=5;break N;case 20:case 21:if(!(t&=-256))break b;if(s=-2147483616,(0|t)==8192)break r;break Ve;case 22:u:{P:{D:{S:{G:{Q:{q:{U:{re:{ie:{se:{oe:{ce:{ue:{y:{Ae:{ae:{Y:{de:{ge:{we:{Ie:{Ne:{ke:{Le:{qe:{Xe:{Ze:{Je:{$e:{et:{tt:{rt:{st:{at:{ye:{nt:{it:{ot:{At:{lt:{Re:{_e:{je:{ct:{ut:{dt:{ve:{if((0|(r=-256&t))<=43519){if((0|r)<=5887){if((0|r)<=2303){if((0|r)<=1535){if(!r)break ve;if((0|r)==768)break dt;if((0|r)!=1280)break a;if(s=0,a=538968064,t-1371>>>0<2)break r;switch(a=268435456,t-1373|0){case 0:break r;case 1:break ct;default:break ut}}if((0|r)==1536)break _e;if((0|r)==1792)break Re;if((0|r)!=2048)break a;if((r=t-2103|0)>>>0<8)break St;break Fe}if((0|r)<=3839){if((0|r)==2304)break lt;if((0|r)==3328)break At;if((0|r)!=3584||(s=64,(-2&t)!=3674))break a;break r}if((0|r)<=4863){if((0|r)==3840)break ot;if((0|r)!=4096)break a;if(s=268435520,(-2&t)==4170)break r;if(s=0,a=16777216,(0|t)!=4347)break a;break r}if((0|r)==4864)break it;if((0|r)!=5632)break a;switch(s=64,t-5741|0){case 1:break i;case 0:break r;default:break nt}}if((0|r)<=11263){if((0|r)<=6655){if((0|r)==5888)break ye;if((0|r)==6144)break Pt;if((0|r)!=6400)break a;r=(0|t)==6469,s=(t=(0|t)==6468)||r?268435520:0,X=t?536870912:r?1073741824:0;break m}if((0|r)<=7167){if((0|r)==6656)break at;if((0|r)!=6912)break a;if((0|(r=-2&t))!=7002)break st;break R}if((0|r)==7168)break rt;if((0|r)!=8192)break a;switch(s=-2147483520,t-8214|0){case 1:break w;case 0:break r;case 16:break tt;default:break et}}if((0|r)<=41983){if((0|r)==11264)break $e;if((0|r)==11776)break Je;if((0|r)!=12288)break a;switch(s=-2147483584,a=272629760,t-12289|0){case 2:break w;case 0:break r;case 1:break Xe;default:break Ze}}if((0|r)<=43007){if((0|r)==41984)break qe;if((0|r)!=42496)break a;switch(s=64,a=268435456,t-42739|0){case 4:break c;case 0:break i;case 3:break s;case 2:break r;case 1:break ke;default:break Le}}if((0|r)==43008)break Ne;if((0|r)!=43264)break a;switch(s=4096,t-43310|0){case 0:break r;case 1:break R;default:break Ie}}if((0|r)<=70655){if((0|r)<=67839){if((0|r)<=65279){if((0|r)==43520)break we;if((0|r)==43776)break ge;if((0|r)!=65024)break a;if(s=0,a=268435456,(0|(o=-2&t))==65040)break r;if((r=t-65042|0)>>>0<8)break Bt;break be}if((0|r)==65280)break de;if((0|r)==66304)break Y;if((0|r)!=67584||(s=64,(0|t)!=67671))break a;break r}if((0|r)<=69375){if((0|r)==67840)break ae;if((0|r)==68096)break Ae;if((0|r)!=68352)break a;switch(s=64,t-68410|0){case 0:case 1:case 2:case 3:case 4:case 5:case 95:case 96:case 97:case 98:break r;default:break a}}if((0|r)<=69887){if((0|r)==69376)break y;if((0|r)!=69632)break a;if(t-69703>>>0>=2)break ue;break R}if((0|r)==69888)break ce;if((0|r)!=70144)break a;if((r=t-70200|0)>>>0<=4)break oe;if((0|t)!=70313)break a;break R}if((0|r)<=74751){if((0|r)<=71423){if((0|r)==70656)break se;if((0|r)==70912)break ie;if((0|r)!=71168||(s=268435520,t-71233>>>0>=2))break a;break r}if((0|r)<=72703){if((0|r)==71424)break re;if((0|r)!=72192)break a;if(t-72258>>>0>=2)break U;break R}if((0|r)==72704)break q;if((0|r)!=73216||(s=268435520,t-73463>>>0>=2))break a;break r}if((0|r)<=93695){if((0|r)==74752)break Q;if((0|r)==92672)break S;if((0|r)!=92928)break a;if(s=268435520,t-92983>>>0<2)break r;r=(0|t)==92996?268435520:0,r=(t=(0|t)==92985)?64:r;break F}if((0|r)<=121343){if((0|r)==93696)break G;if((0|r)!=113664||(s=268435520,a=-2147483648,(0|t)!=113823))break a;break r}if((0|r)==121344)break Et;if((0|r)!=125184)break a;s=((0|t)==125279)<<30,r=0,X=(t=(0|t)==125278)?536870912:s;break o}s=-1879048128,a=536870912;ve:{gt:{ft:{pt:{switch(t-33|0){default:switch(t-183|0){case 1:case 2:case 3:case 4:case 5:case 6:case 7:break ve;case 8:break ft;case 0:break pt;default:break gt}case 2:case 9:X=66;break d;case 11:return X=268435456,-2147483584;case 13:return X=-2147483648,-1879048128;case 25:return X=134217728,-2147483584;case 26:return X=67108864,-2147483584;case 1:case 6:break b;case 0:break r;case 3:case 4:case 5:case 7:case 8:case 10:case 12:case 14:case 15:case 16:case 17:case 18:case 19:case 20:case 21:case 22:case 23:case 24:case 27:case 28:case 29:break ve;case 30:}return X=1073741824,-1879048128}return X=0,134230016}X=1078984704;break d}if((0|t)==161)break He}break w}r=(0|t)==903,s=(t=(0|t)==894)?64:r?134217792:0,X=t?1073741824:r?67108864:0;break m}if((0|t)==1417)break je;if((0|t)!=1475)break a;break ne}X=1075838976;break A}X=-2143289344;break n}s=64,a=268435456;_e:switch(t-1548|0){case 15:break s;case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 9:case 10:case 11:case 12:case 13:case 14:case 16:case 17:break a;case 0:break r;case 19:break _e;case 18:break R;default:break D}break c}if((r=t-1792|0)>>>0<6)break Gt;if(s=64,a=134217728,(-2&t)==1798)break r;a=67108864;Re:{_e:{je:switch(t-1800|0){default:switch(t-2040|0){case 1:break Re;case 0:break _e;default:break a}case 3:break a;case 0:break r;case 1:break je;case 2:case 4:break ne}X=1073741824;break t}X=268435456;break t}X=536870912;break n}r=(0|t)==2405,s=(t=(0|t)==2404)||r?268435520:0,X=t?-2143289344:r?16777216:0;break m}if(s=0,a=-2143289344,(0|t)!=3572)break a;break r}switch(s=64,t-3848|0){case 5:X=-2143289344;break t;case 6:X=16777216;break t;case 0:break r}if(t-3854>>>0<5)break r;if(s=0,a=268435456,(0|t)!=3860)break a;break r}if((r=t-4961|0)>>>0<4)break Dt;if(s=64,a=134217728,t-4965>>>0<2)break r;r=(0|t)==4968,s=(t=(0|t)==4967)||r?268435520:0,X=t?1073741824:r?16777216:0;break m}if(t-5867>>>0>=3)break a;break r}if(s=268435520,t-5941>>>0<2)break r;if((t=t-6100|0)>>>0>=7)break a;r=e[(t=83240+(t<<3)|0)>>2];break h}if(s=268435520,(-4&t)!=6824)break a;break r}if(s=64,(0|t)==7005)break r;if(s=268435520,(0|r)!=7006)break a;break r}if(t-7227>>>0<2)break R;if(s=64,t-7229>>>0<3||(s=268435520,(-2&t)==7294))break r;if(s=4096,(0|t)!=7379)break a;break r}X=33554432;break d}if((-8&t)==8224)break w;if(t-8242>>>0<3)break r;if(t-8240>>>0<9)break w;if((r=t-8251|0)>>>0<21)break Tt;break te}if((0|t)==11513){X=-2147483648;break A}if(s=0,a=1073741824,(-2&t)==11514)break r;if(a=-2147483648,(0|t)!=11518)break a;break r}switch(s=-1879048128,t-11822|0){case 4:case 6:X=268435456;break d;case 5:X=-2147483648;break d;case 7:X=67108864;break d;case 14:return X=-2147483648,-1879048128;case 19:return X=268435456,-2147483584;case 30:case 32:return X=0,-2147483584;case 0:break r}break w}if((0|t)==12349)break z;if((0|t)!=12539)break a;return X=0,16}return X=-2143289344,-1879048128}r=(0|t)==42239,s=(t=(0|t)==42238)?64:r?268435520:0,X=t?268435456:r?-2147483648:0;break m}Le:switch(t-42509|0){case 1:break i;case 0:break r;case 2:break Le;default:break a}break c}X=134217728;break t}if(t-43126>>>0<2)break R;if(s=268435520,t-43214>>>0>=2)break a;break r}if((0|t)==43463)break ne;if(s=268435520,(-2&t)!=43464)break a;break r}if(t-43613>>>0<3)break R;if(s=64,(0|t)==43743)break r;if(s=268435520,(-2&t)!=43760)break a;break r}if(s=268435520,(0|t)!=44011)break a;break r}s=268435520,a=541065216;de:switch(t-65281|0){case 1:case 6:return X=0,32;case 11:X=272629760;break t;case 13:X=-2143289344;break n;case 100:return X=0,16;case 25:X=138412032;break t;case 26:X=71303168;break t;case 30:X=1077936128;break n;case 96:break i;case 59:break k;case 0:break r;case 99:break de;default:break a}X=268435456;break t}s=(r=(0|t)==66512)>>>26|0,r=(t=(0|t)==66463)?64:r<<6;break V}if(s=64,(0|t)!=67871)break a;break r}if(s=268435520,(-2&t)==68182)break r;if(s=64,t-68336>>>0>=6)break a;break r}if(s=268435520,t-69461>>>0>=5)break a;break r}if(s=64,t-69705>>>0<5)break r;if(s=268435520,t-69822>>>0>=4)break a;break r}if(t-69953>>>0<2)break R;if((r=t-70085|0)>>>0<=26)break P;break ze}if((0|r)!=2)break R;break ne}if(s=268435520,t-70731>>>0<2)break r;a=(r=(0|t)==70747)>>>26|0,r=(t=(0|t)==70733)?64:r<<6,X=t?268435456:a;break o}switch(s=268435520,(-2&t)-71106|0){case 0:break r;case 2:break u}if(s=8192,t-71110>>>0<3)break r;if(s=268435520,t-71113>>>0>=15)break a;break r}if(s=268435520,t-71484>>>0>=3)break a;break r}if(s=268435520,t-72347>>>0<2)break r;if(s=64,t-72353>>>0>=2)break a;break r}if(s=268435520,t-72769>>>0<2)break r;s=(r=(0|t)==72817)>>>26|0,r=(t=(0|t)==72771)?64:r<<6;break V}if(s=64,a=134217728,t-74865>>>0<2)break r;if(a=0,t-74864>>>0>=5)break a;break r}r=(0|t)==93848?268435520:0,r=(t=(0|t)==93847)?64:r;break F}if(s=268435520,(-2&t)==92782)break r;if(a=-2147483648,(0|t)!=92917)break a;break r}if((0|t)==1748)break i;break a}if(!(1<<r&100663555))break ze;break R}break ne;case 23:u:{P:{D:{S:{G:{Q:{if((0|(r=-256&t))<=11775){if((0|r)<=8959){if(r)break Q;break w}if((0|r)==8960)break G;if((0|r)==9984)break S;if((0|r)!=10496)break a;break H}if((0|r)<=64767){if((0|r)==11776)break D;if((0|r)!=12288)break a;if((t=t-12300|0)>>>0<=17&&(s=-2147483616,1<<t&131077))break r;break w}if((0|r)==64768)break P;if((0|r)==65024)break u;if((0|r)!=65280)break a;if(s=32,(0|t)==65378)break r;break a}if((0|r)!=8192)break a;switch(s=-2147483616,t-8218|0){case 1:case 2:case 3:break a;case 0:case 4:break r}switch(t-8317|0){default:if((0|t)!=8261)break a;break w;case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 9:case 10:case 11:case 12:case 13:case 14:case 15:break a;case 0:case 16:}break k}switch(s=-2147483520,t-8968|0){case 1:break a;case 0:case 2:break r}if((0|t)!=9001)break a;return X=0,-2139095040}if(s=-2147483520,(0|t)==10181)break r;break xe}return X=0,(0|t)==11842?-2147483616:-2147483648}if(s=-2147483648,(0|t)!=64831)break a;break r}s=(t=!(t-65089&-3))>>>27|0,t<<=5;break x;case 24:s=(t=t>>>0<256)>>>1|0,t<<=31;break x;case 25:u:{P:{D:{S:{G:{Q:{q:{U:{if((0|(r=-256&t))<=12287){if((0|r)<=767){if(!r)break U;if((0|r)!=512)break u;if(t-751>>>0>=17)break q;break f}if((0|r)==768)break Q;if((0|r)!=7936)break u;switch(s=4096,t-8125|0){case 0:case 2:case 3:case 4:case 16:case 17:case 18:case 32:case 33:case 34:case 48:case 49:case 50:case 64:case 65:break r;default:break u}}if((0|r)<=43775){if((0|r)==12288)break G;if((0|r)!=42752||(s=4096,(-2&t)!=42784))break u;break r}if((0|r)==43776)break S;if((0|r)==65280)break D;if(s=0,a=78,(0|r)!=127744)break u;break r}switch(t-168|0){default:s=-2147479424;U:switch(t-94|0){case 0:break r;case 2:break U;default:break u}return X=0,-2147479552;case 0:case 7:break f;case 1:case 2:case 3:case 4:case 5:case 6:case 8:case 9:case 10:case 11:case 13:case 14:case 15:break u;case 12:case 16:}break f}if((0|t)==749|t-741>>>0<7)break f;if(t-706>>>0>=4)break P;break f}if((t=t-885|0)>>>0>16||(s=4096,!(1<<t&98305)))break u;break r}if(s=67112960,t-12443>>>0>=2)break u;break r}if(s=4096,(0|t)!=43867)break u;break r}switch(s=4224,t-65342|0){default:if((0|t)!=65507)break u;break;case 0:break r;case 1:break u;case 2:}break f}if(s=4096,t-722>>>0<14)break r}break a;case 26:u:{P:{D:{S:{G:{Q:{if((0|(r=-256&t))<=9471){if((0|r)<=8447){if(r)break u;break w}if((0|r)==8448)break Q;if((0|r)==8704)break G;if(s=-2147483648,(0|r)!=8960)break a;break r}if((0|r)<=10495){if((0|r)==9472)break S;if((0|r)==9728)break D;if((0|r)==9984)break w;break a}if((0|r)==10496)break P;if((0|r)==10752)break w;if(s=-2147483648,(0|r)!=11008)break a;break r}if((0|t)==8472)return X=0,67108864;if((0|t)==8596)break K;if(s=-2147483648,t>>>0<=8591)break a;break r}if(s=-2147483640,(0|t)==8722)break r;r=-2147483648,X=(t=t-8942>>>0<4)?33554432:0;break o}if(s=-2147483648,a=130,t-9723>>>0<2)break r;r=-2147483648,X=(t=t-9725>>>0<2)?134:0;break o}if(s=-2147483648,a=128,(0|t)==9839)break r;break w}if(s=-2147483648,a=130,(-2&t)==10548)break r;r=-2147483648,X=(t=(0|t)==10626)?134217728:0;break o}if((0|r)==8192)break Ye;break a;case 27:u:{P:{D:{S:{G:{Q:{q:{U:{re:{ie:{se:{oe:{ce:{ue:{y:{Ae:{ae:{Y:{de:{ge:{we:{Ie:{Ne:{ke:{if((0|(r=-256&t))<=12287){if((0|r)<=9727){if((0|r)<=8959){if(!r)break ke;if((0|r)!=8448)break a;switch(s=0,a=130,t-8482|0){case 7:break k;case 0:break r;case 1:case 2:case 3:case 4:case 5:case 6:case 8:case 9:case 10:case 11:break ge;case 12:break Ie;default:break Ne}}if((0|r)==8960)break de;if((0|r)==9216)break Y;if((0|r)!=9472)break a;switch(s=-2147483520,(-2&t)-9632|0){case 0:break r;case 10:break K;default:break ae}}if((0|r)<=11007){if((0|r)==9728)break Ae;if((0|r)==9984)break y;if(s=-2147483648,(0|r)!=10240)break a;break r}if((0|r)==11008)break ue;if((0|r)==11776)break ce;if((0|r)!=12032)break a;if(s=1048576,t>>>0<12246)break r;switch(s=262144,(-2&t)-12272|0){case 0:break r;case 2:break u;default:break oe}}if((0|r)<=127999){if((0|r)<=127231){if((0|r)==12288)break se;if((0|r)==12800)break ie;if((0|r)!=126976)break a;r=(0|t)==127183,s=0,X=(t=(0|t)==126980)||r?134:128;break m}if((0|r)==127232)break re;if((0|r)==127488)break U;if((0|r)!=127744)break a;if(t>>>0>=127777)break q;break L}if((0|r)<=128767){if((0|r)==128e3)break Q;if((0|r)==128256)break G;if((0|r)!=128512)break a;if((r=t-128581|0)>>>0<11)break bt;break Oe}if((0|r)==128768)break S;if((0|r)==129280)break D;if((0|r)!=129536)break a;X=128;break A}r=(0|t)==174,s=-2147483648,X=(t=(0|t)==169)||r?130:0;break m}switch(t-8616|0){case 0:break w;case 1:case 2:break we;default:break ge}}return X=0,67108864}return X=130,-2147483520}if(s=-2147483520,t-8597>>>0<5)break r;if(t-8604>>>0<18)break H;if((r=t-8624|0)>>>0<8)break Mt;break Qe}if(t>>>0<8968)break w;if((0|(r=-2&t))==8986)break l;if(t-8972>>>0<20|t-8994>>>0<6)break w;if((0|t)==9e3)break K;if(t-9003>>>0<81)break w;if(s=-2147483648,a=128,(0|t)==9096)break r;if(t-9085>>>0<30)break w;if(s=-2147483520,a=0,(0|r)==9140)break r;switch(t-9143|0){case 0:case 25:break r;case 24:break K}if(t-9140>>>0<40)break w;if((0|t)==9186)break r;if((r=t-9193|0)>>>0<4)break l;switch(s=-2147483648,a=134,t-9200|0){case 0:case 3:break r}if(r>>>0<11)break K;if(a=130,t-9208>>>0<3)break r;if(a=0,t>>>0<=9186)break a;break r}if(s=-2147483648,t-9216>>>0<75||(s=33792,a=130,(0|t)==9410)||(a=0,t-9398>>>0<26))break r;if(s=17408,t-9424>>>0>=26)break a;break r}if(t-9646>>>0<8)break H;if(a=130,(0|t)==9654)break r;if((-4&t)==9660)break H;switch(t-9664|0){case 0:break r;case 6:case 7:case 10:case 11:case 15:case 16:case 17:case 18:case 19:case 34:case 36:break H}return X=0,t-9703>>>0<6?-2147483520:-2147483648}Ae:switch((-16&t)-9728>>>4|0){case 0:if(t>>>0<9733)break K;s=-2147483520,a=128;ae:switch(t-9733|0){case 0:break r;case 9:break ae;case 1:break H;default:break B}break K;case 2:if((r=t-9760|0)>>>0<11)break vt;if(s=-2147483648,a=130,t>>>0<=9773)break B;break r;case 3:if(s=-2147483648,a=130,t-9784>>>0>=3)break B;break r;case 4:switch(s=-2147483520,a=130,t-9792|0){case 0:case 2:break r}if(s=-2147483648,a=134,t>>>0<=9799)break B;break r;case 5:if(s=-2147483648,a=134,t>>>0<9812)break r;if(a=130,(0|t)!=9823)break B;break r;case 6:if((0|t)==9734)break H;if((0|t)==9824)return X=130,-2147483520;if(s=-2147483520,a=128,t-9825>>>0<2)break r;if((r=t-9827|0)>>>0<6)break _t;break Ce;case 8:if(s=-2147483648,t>>>0<=9861)break B;break r;case 10:switch(s=-2147483648,a=130,t-9888|0){case 1:break l;case 0:break r}if(a=134,(-2&t)!=9898)break B;break r;case 11:if(s=-2147483648,a=130,(-2&t)==9904)break r;if(a=134,t-9917>>>0>=2)break B;break r;case 12:if((-2&t)==9924)break l;s=-2147483648,a=130;ae:switch(t-9928|0){case 0:case 7:break r;case 6:break ae;default:break B}break l;case 14:r=(0|t)==9962,s=-2147483648,X=(t=(0|t)==9961)?130:r?134:128;break m;case 13:break It;case 9:break kt;case 15:break Ae;case 7:break yt;case 1:break xt;default:break B}if((0|t)==9972|t>>>0<9970)break K;if(s=-2147483648,a=134,t>>>0<9974||(0|t)!=9974&&(a=130,t>>>0<9977))break r;if((t=t-9977|0)>>>0<5)break wt;break B}y:{Ae:{ae:{Y:{de:switch((-16&t)-9984>>>4|0){case 0:if(s=0,a=130,(0|t)==9986||(a=128,t>>>0<9989)||(a=134,(0|t)==9989))break y;switch(a=150,(-2&t)-9994|0){case 0:break y;case 2:break ae}if(a=130,t-9992>>>0<6)break y;r=(0|t)==9999,s=0,a=(t=(0|t)==9998)?128:r?130:0;break y;case 1:if(s=0,a=128,t>>>0<10002)break y;if((t=t-10002|0)>>>0>11||(a=130,!(1<<t&2069)))break Y;break y;case 2:r=(0|t)==10024,s=0,a=(t=(0|t)==10017)?130:r?134:0;break y;case 4:s=0,a=130;ge:switch(t-10052|0){case 0:case 3:break y;case 8:case 10:break ge;default:break Y}a=134;break y;case 5:if(s=0,a=1073741958,t-10067>>>0<2)break y;a=(t=t-10069&-3)?0:536871046;break y;case 6:if((r=t-10082|0)>>>0<3)break Ae;if(s=0,a=128,t>>>0<=10084)break Y;break y;case 9:if(s=0,a=134,t-10133>>>0>=3)break Y;break y;case 10:if(s=0,a=130,(0|t)!=10145)break Y;break y;case 11:r=(0|t)==10175,s=0,a=(t=(0|t)==10160)||r?134:0;break y;case 3:break de;default:break Y}if(s=0,a=130,t-10035>>>0<2)break y}s=0,a=0;break y}a=146;break y}s=e[(t=83992+(r<<3)|0)>>2],a=e[t+4>>2]}return X=a,-2147483648|s}if(s=-2147483648,a=130,t-11013>>>0<3||(a=134,t-11035>>>0<2))break r;r=(0|t)==11093,s=-2147483648,X=(t=(0|t)==11088)||r?134:0;break m}if(t-11904>>>0>=26)break P;return X=0,1048576}if(t-12276>>>0>=8)break a;break r}if((t=t-12306|0)>>>0>14||(s=-2147483648,!(1<<t&16387)))break a;break r}r=0,X=(t=t-12951&-3)?0:130;break o}if(s=0,a=128,(0|t)==127279)break r;if(t-127280>>>0<26||t-127312>>>0<26)return X=0,33792;if((r=t-127344|0)>>>0<=15&&(s=33792,a=130,1<<r&49155)||(s=33792,a=0,r>>>0<26))break r;if((0|t)==127374)break L;if(s=0,a=134,t-127377>>>0<10)break r;if(a=102,t>>>0<=127461)break a;break r}s=0,a=134;U:{switch(t-127489|0){case 0:case 25:break r;case 1:break z;case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 9:case 10:case 11:case 12:case 13:case 14:case 15:case 16:case 17:case 18:case 19:case 20:case 21:case 22:case 23:case 24:break U}switch(t-127535|0){case 0:break r;case 8:break z;default:break U}}if((-2&t)==127568|t-127538>>>0<9)break r;if(a=128,t>>>0<=127583)break a;break r}if((0|t)==127777)break z;if(t-127789>>>0<9|t-127799>>>0<70)break L;if((0|t)==127877)break X;if(t-127870>>>0<22)break L;if(t-127780>>>0<112)break z;switch(s=0,a=130,t-127894|0){case 44:case 45:case 46:case 49:break X;case 0:case 1:case 3:case 4:case 5:break r}if(t-127904>>>0<42)break L;if(a=150,(0|t)==127946||(a=146,t-127947>>>0<2))break r;if(t-127951>>>0<5)break L;if(a=134,t-127968>>>0<17||(a=130,t-127902>>>0<83))break r;if((r=t-127987|0)>>>0<5)break Ct;break Ke}switch(s=0,a=130,t-128063|0){case 0:case 2:break r}if((0|t)==128124|(-5&t)-128129>>>0<3|(0|t)==128110|t-128112>>>0<9||(-2&t)==128066|t-128102>>>0<4|t-128070>>>0<11)break X;switch(t-128253|0){case 1:X=128;break A;case 0:break z}if(a=150,(0|t)==128170)break r;break L}if(t>>>0<128318)break L;if(s=0,t>>>0<128326)break r;if(t-128329>>>0<2)break z;if(t-128331>>>0<4|t-128336>>>0<24)break L;if(t-128367>>>0<2)break z;if((-2&t)==128372){X=146;break A}if(t-128371>>>0<7)break z;if(a=150,!(r=t-128378|0))break r;if((0|r)==13|t-128394>>>0<4)break z;if(a=146,(0|t)==128400||(a=150,t-128405>>>0<2))break r;switch(a=134,t-128420|0){case 0:break r;case 1:case 4:case 13:case 14:case 24:case 30:case 31:case 32:case 45:case 46:case 47:case 56:case 57:case 58:case 61:case 63:case 68:case 75:case 79:case 86:break z}t=t>>>0>128506,r=0;break p}if(s=0,a=128,t-128981>>>0>=4)break a;break r}if(t>>>0<129292)break a;if(t-129328>>>0<10)break X;switch(s=0,a=150,t-129304|0){case 35:break a;case 0:case 1:case 2:case 3:case 4:case 6:case 7:case 14:break r}if(t-129341>>>0<2)break X;if(a=0,(0|t)==129350||(a=198,(-4&t)==129456))break r;if((r=t-129461|0)>>>0<5)break mt;break ht}if(s=1048576,t-11931>>>0<89)break r;break a}return X=0,524288;case 29:return X=16777216,1073741825;case 28:break r;case 30:break Ut;default:break a}return X=0,(0|t)==32?1073741825:1}if(!(1079>>>r&1))break fe;r=e[(t=81344+(r<<3)|0)>>2];break h}if(557553>>>r&1)break k;if((-4&t)!=8508)break Ee;break r}if(!(207>>>r&1))break me;break g}if(s=1024,!(1017>>>r&1))break Be;break r}if(s=1024,!(32895>>>r&1))break Te;break r}if(s=1024,!(55>>>r&1))break Pe;break r}if(s=1024,!(3087>>>r&1))break Se;break r}if((t=t-71453|0)>>>0>=15)break a;r=e[(t=82312+(t<<3)|0)>>2];break h}if(!(49023>>>r&1))break Ge;r=e[(t=82432+(r<<3)|0)>>2];break h}if(!(514623>>>r&1))break J;r=e[(t=82664+(r<<3)|0)>>2];break h}r=e[(t=83160+(r<<3)|0)>>2];break h}if(s=268435520,!(197>>>r&1))break Fe;break r}r=e[(t=83208+(r<<3)|0)>>2];break h}if((t=t-6145|0)>>>0>=10)break a;r=e[(t=83296+(t<<3)|0)>>2];break h}if(!(1077711>>>r&1))break te;r=e[(t=83376+(r<<3)|0)>>2];break h}if(!(159>>>r&1))break be;r=e[(t=83544+(r<<3)|0)>>2];break h}if((t=t-121479|0)>>>0>=4)break a;r=e[(t=83608+(t<<3)|0)>>2];break h}if(!(195>>>r&1))break Qe;break H}if((t=t-9745|0)>>>0>=13)break B;r=e[(t=83640+(t<<3)|0)>>2];break h}if(1101>>>r&1)break K;if(s=-2147483648,a=130,t>>>0<=9773)break B;break r}if(!(45>>>r&1))break Ce;r=e[(t=83744+(r<<3)|0)>>2];break h}if((t=t-9851|0)>>>0>=5)break B;r=e[(t=83792+(t<<3)|0)>>2];break h}if((t=t-9874|0)>>>0>=11)break B;r=e[(t=83832+(t<<3)|0)>>2];break h}if((t=t-9937|0)>>>0>=4)break B;r=e[(t=83920+(t<<3)|0)>>2];break h}r=e[(t=83952+(t<<3)|0)>>2];break h}if(!(23>>>r&1))break Ke;r=e[(t=84016+(r<<3)|0)>>2];break h}if(s=0,a=150,!(1991>>>r&1))break Oe;break r}if(a=150,27>>>r&1)break r}r=0,X=(t=t-129489>>>0<13)?150:134;break o}t=t-127992>>>0<3,r=0;break p}if(t-9837>>>0<2)break r}X=128;break d}if(t-8623>>>0<13)break w;if(t-8636>>>0<18)break H;if((r=t-8656|0)>>>0<22&&(a=0,3157995>>>r&1)||(s=-2147483648,a=0,t-8661>>>0<31))break r;break a}if(t>>>0<128592)break L;if(s=0,a=0,t>>>0<128640)break r;if(!((r=t-128675|0)>>>0>29|!(1<<r&537788417)))break X;if(t>>>0<128710)break L;if(a=150,(0|t)==128716)break r;if(t-128715>>>0<5)break z;if(t-128720>>>0<3)break L;if(!((r=t-128736|0)>>>0>=10|!(575>>>r&1)))break z;if(a=134,t-128747>>>0<2)break r;switch(a=130,t-128752|0){case 0:case 3:break r}t=t-128756>>>0<6,r=0;break p}switch(s=-2147483648,t-8260|0){case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 9:case 10:case 11:case 12:case 13:break a;case 0:case 14:break r}if((0|(t=t-8315|0))!=16&&t)break a;return X=0,8}if(s=268435520,a=1073741824,(0|t)!=69955)break a;break r}if(t-8266>>>0<8)break w;if(s=-2147483640,(0|t)==8275)break r;if(s=-2147483648,t-8277>>>0>=10)break a;break r}X=542113792;break d}if(s=-2147483648,a=0,t-65093>>>0<2||(s=64,a=268435456,(0|o)==65104))break r;s=268435520,a=-2147483648;be:switch(t-65106|0){case 3:X=134217728;break t;case 5:X=536870912;break n;case 4:break c;case 2:break s;case 0:break r;case 15:case 22:break be;default:break a}break k}if((0|t)==2142)break ne;if(s=64,t-2096>>>0<15)break r;break a}if(s=1024,t-72850>>>0<22)break r;if((t=t-72874|0)>>>0>=13)break a;r=e[(t=82560+(t<<3)|0)>>2];break h}if(s=4096,t-71103>>>0<2)break r;if(s=1024,(-2&t)!=71132)break a;break r}if((0|t)==70726)break f;if(s=4096,(-2&t)!=70850)break a;break r}if(s=4096,t-68325>>>0>=2)break a;break r}if((0|t)==6109)break f;if(s=4096,t-6089>>>0>=11)break a;break r}switch(t-3959|0){case 0:case 2:return X=0,8389632}if((0|r)==3968|t-3953>>>0<14)break g;if(!((r=t-3970|0)>>>0>=6|!(55>>>r&1)))break f;if(t-3981>>>0<11)break g;if(s=1024,t-3993>>>0<36)break r;if(s=4096,(0|t)!=4038)break a;break r}if(t-3655>>>0<6)break f;if(!((r=t-3761|0)>>>0>11|!(1<<r&3577)))break g;switch(s=1024,t-3661|0){case 1:break f;case 0:break r}if(s=4096,t-3784>>>0<5)break r;if(s=1024,(0|t)!=3789)break a;break r}if(t-1770>>>0<3)break r;if(s=1024,(0|t)!=1773)break a;break r}if((-2&t)==73028)break f;switch(s=1024,t-73104|0){default:if((0|t)!=73031)break a;break r;case 2:case 3:case 4:case 6:break a;case 0:case 1:case 5:break r;case 7:}break f}if((t=t-8492|0)>>>0>=30)break a;r=e[(t=81704+(t<<3)|0)>>2];break h}s=0;break O}a=(r=(-3&t)==43712)>>>20|0,s=r<<12}if((0|(i=-65536&t))==131072)break We;if((0|i)==65536)break he;if(r=s,o=a,i)break pe}if(t-13312>>>0<6582||t-19968>>>0<20976)break e;if(i=2048,t-63744>>>0<366)return X=o,2048|r;if(s=r,a=o,t-64112>>>0>=106)break pe;break j}if(i=2099200,t-183984>>>0<7473|t-178208>>>0<5762|t-177984>>>0<222|t-131072>>>0<42711||t-173824>>>0<4149||(i=2048,t-194560>>>0<542))break j;break pe}if(i=2048,t-110960>>>0<396|t-94208>>>0<6125|t-100352>>>0<755)break j}i=0}return X=a,s|i}if((-4&t)==8508)break k;if(s=128,!(t-8517>>>0<3)&&(s=16777344,(-2&t)!=8520))break a}X=a;break m}r=(t=t>>>0>131069)?65536:0,X=t?0:128;break o}if((0|t)==11776)break w}X=0;break A}X=0;break d}return X=0,4194304}return X=0,128}return X=0,16777344}return X=0,4096}return X=0,1024}return X=0,-2147483520}return X=0,t-10214>>>0<10?-2147483520:-2147483648}X=0;break n}X=0;break t}X=130;break A}X=130;break d}X=134;break A}return X=150,0}X=0;break o}X=t?0:a;break o}return X=r,t}return 131072}return X=0,16777216}X=t?0:s;break o}return X=a,t}return X=s,t}X=t?0:r;break m}return X=0,8192}X=e[t+4>>2];break o}X=t?8388608:0;break o}return s}return X=0,-2147483616}X=t?134:128}return r}X=134}return-2147483648}return 0}X=1073741824;break n}X=-2147483648}return 268435520}X=67108864}return 64}return X=o,2099200|r}function He(t){var r,s=0,a=0,i=0,o=0,d=0;(r=Fr(8244))&&(e[r+328>>2]=2,g[132848]=0,e[r+684>>2]=0,e[r+688>>2]=0,e[r+320>>2]=0,e[r+324>>2]=0,g[r+268|0]=0,g[r+228|0]=0,e[r+8216>>2]=0,e[r+8220>>2]=0,e[r+224>>2]=104944,e[r+216>>2]=383,e[r+220>>2]=96,wr(r+344|0,0,292),e[r+8196>>2]=0,e[(s=r+8188|0)>>2]=0,e[s+4>>2]=0,e[r+8180>>2]=0,e[r+8184>>2]=0,g[r+460|0]=22,g[r+461|0]=129,g[r+466|0]=38,g[r+462|0]=38,g[r+463|0]=36,g[r+464|0]=22,g[r+465|0]=224,g[r+456|0]=22,g[r+457|0]=22,g[r+458|0]=44,g[r+459|0]=22,g[r+454|0]=46,g[r+455|0]=129,g[r+446|0]=22,g[r+447|0]=38,g[r+448|0]=28,g[r+449|0]=193,g[r+450|0]=38,g[r+451|0]=22,g[r+452|0]=46,g[r+453|0]=46,g[r+441|0]=129,g[r+442|0]=38,g[r+443|0]=22,g[r+444|0]=38,g[r+445|0]=193,e[r+332>>2]=104912,e[r+336>>2]=104916,e[r+340>>2]=105232,g[r+296|0]=18,g[r+297|0]=18,I[r+304>>1]=182,I[r+306>>1]=140,g[r+298|0]=20,I[r+308>>1]=220,I[r+310>>1]=220,I[r+312>>1]=220,g[r+299|0]=20,g[r+300|0]=20,I[r+314>>1]=240,g[r+301|0]=22,I[r+316>>1]=260,I[r+318>>1]=280,g[r+302|0]=22,g[r+303|0]=20,s=wr(r,0,212),e[s+200>>2]=20,e[s+192>>2]=25966,e[s+196>>2]=500,e[s+80>>2]=95,e[s+16>>2]=1,e[s+20>>2]=3,e[s+8>>2]=2,e[s+52>>2]=19,g[s+168|0]=3,e[s+92>>2]=2,e[s+72>>2]=4,e[s+40>>2]=115,e[s+44>>2]=95,e[s+140>>2]=105244,PA(s,201),e[s+120>>2]=2,e[s+124>>2]=44,e[s+164>>2]=100,e[s+128>>2]=46,e[s+132>>2]=14,e[s+112>>2]=1227133512,e[s+116>>2]=49,e[s+104>>2]=1,a=e[26313],e[s+636>>2]=e[26312],e[s+640>>2]=a,a=e[26315],e[s+644>>2]=e[26314],e[s+648>>2]=a,a=e[26317],e[s+652>>2]=e[26316],e[s+656>>2]=a,a=e[26319],e[s+660>>2]=e[26318],e[s+664>>2]=a,a=e[26321],e[s+668>>2]=e[26320],e[s+672>>2]=a,a=e[26323],e[s+676>>2]=e[26322],e[s+680>>2]=a,a=u[104928]|u[104929]<<8,g[s+160|0]=a,g[s+161|0]=a>>>8,a=u[104924]|u[104925]<<8|u[104926]<<16|u[104927]<<24,g[s+156|0]=a,g[s+157|0]=a>>>8,g[s+158|0]=a>>>16,g[s+159|0]=a>>>24),i=Hr(r+228|0,t),s=0;e:{t:if(a=u[0|t]){for(;s=(a<<24>>24)+(s<<8)|0,a=u[0|(t=t+1|0)];);s:{n:{i:{c:{A:{d:{l:{o:{p:{b:{m:{C:{h:{M:{I:{x:{N:{V:{W:{E:{_:{T:{F:{X:{L:{K:{z:{ne:{R:{xe:{H:{g:{f:{$:{k:{ee:{w:{a:{Ve:{Z:{r:{fe:{j:{pe:{he:{We:{le:{O:{Me:{v:{Ee:{J:{me:{Be:{Ue:{Te:{Pe:{De:{Se:{Ge:{Fe:{be:{He:{te:{ze:{Ye:{Oe:{Qe:{B:{Ce:{if((0|s)<=28008){if((0|s)<=26464){if((0|s)<=25696){switch(s-24934|0){case 20:break o;case 1:case 2:case 3:case 4:case 5:case 6:case 9:case 10:case 11:case 14:case 15:case 16:case 17:case 18:case 19:break t;case 8:break J;case 12:break Fe;case 7:break be;case 0:break He;case 13:break Ce}switch(s-25189|0){case 1:case 3:case 4:case 5:case 6:case 7:case 8:case 10:case 11:case 12:case 13:break t;case 14:break fe;case 2:break Se;case 0:break Ge;case 9:break Ce}switch(s-25441|0){case 18:break x;case 0:break J;case 24:break Pe;default:break t}}switch(s-25964|0){case 1:case 4:case 5:case 6:break t;case 8:break Me;case 9:break Ee;case 7:break J;case 3:break me;case 2:break Be;case 0:break Qe}switch(s-26209|0){case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 9:case 10:case 11:case 12:case 13:case 14:case 15:case 16:break t;case 17:break le;case 8:break O;case 0:break v}switch(s-25697|0){case 4:break Ue;case 0:break Te;default:break t}}if((0|s)<=27488){switch(s-26729|0){case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 10:case 13:case 14:case 15:break t;case 16:break Ve;case 12:break Z;case 11:break r;case 9:break fe;case 0:break j}switch(s-26977|0){case 1:case 2:case 4:case 5:case 6:case 7:case 8:case 9:case 10:case 11:case 12:case 13:case 15:case 16:case 17:break t;case 19:break k;case 18:break ee;case 3:break w;case 14:break a;case 0:break J}switch(s-26465|0){case 20:break j;case 13:break pe;case 0:case 3:break he;default:break t}}switch(s-27489|0){case 13:break p;case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 9:case 12:case 15:case 16:case 17:case 18:case 19:case 21:case 22:case 23:break t;case 24:break ne;case 20:break R;case 14:break xe;case 11:break H;case 10:break g;case 0:break f}switch(s-27745|0){case 19:break K;case 0:break z;case 21:break Ye;default:break t}}if((0|s)<=29792){if((0|s)<=28768){switch(s-28009|0){case 3:break p;case 11:break X;case 2:break L;case 1:case 4:case 5:case 6:case 7:case 8:case 12:case 13:case 14:case 15:break t;case 10:break w;case 9:break j;case 0:case 16:break te}switch(s-28258|0){case 0:break T;case 10:break F;case 1:case 2:case 4:case 5:case 6:case 7:case 8:case 9:break t;case 3:break j}switch(s-28525|0){case 0:break _;case 5:break j;default:break t}}if((0|s)<=29539){switch(s-28769|0){case 19:break W;case 11:break E;case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 9:case 10:case 12:case 13:case 14:case 15:case 16:case 17:case 18:case 20:case 21:case 22:case 23:break t;case 0:break j;case 24:break te}switch(s-29295|0){case 6:break N;case 0:break V;case 1:case 2:case 3:case 4:case 5:break t}if((0|s)==29045)break te;break t}switch(s-29540|0){case 19:break b;case 18:break m;case 13:break C;case 8:break M;case 5:break I;case 7:break x;case 14:break fe;case 0:break A;default:break t}}if((0|s)>6514801)break B;if((0|s)<=30058)switch(s-29793|0){case 19:break l;case 17:break o;case 0:case 4:break p;case 13:break b;case 7:break te;default:break t}if((0|s)<=30312)switch(s-30059|0){case 0:break d;case 15:break te;case 7:break A;default:break t}if((0|s)==30313)break c;if((0|s)==31336)break i;if((0|s)!=6451321)break t}if(e[r+296>>2]=303174162,e[r+300>>2]=370545684,e[r+600>>2]=2432,e[r+8>>2]=0,e[r+12>>2]=65540,e[r+100>>2]=e[r+96>>2],t=e[25889],e[r+304>>2]=e[25888],e[r+308>>2]=t,t=e[25891],e[r+312>>2]=e[25890],e[r+316>>2]=t,Xa(r),g[r+345|0]=2|u[r+345|0],g[r+406|0]=16|u[r+406|0],g[r+407|0]=16|u[r+407|0],g[r+408|0]=16|u[r+408|0],g[r+409|0]=16|u[r+409|0],g[r+410|0]=16|u[r+410|0],g[r+411|0]=16|u[r+411|0],g[r+412|0]=16|u[r+412|0],g[r+413|0]=16|u[r+413|0],g[r+414|0]=16|u[r+414|0],g[r+415|0]=16|u[r+415|0],g[r+416|0]=16|u[r+416|0],g[r+417|0]=16|u[r+417|0],g[r+418|0]=16|u[r+418|0],g[r+419|0]=16|u[r+419|0],g[r+420|0]=16|u[r+420|0],g[r+456|0]=4|u[r+456|0],g[r+457|0]=4|u[r+457|0],e[r+112>>2]=613567144,e[r+104>>2]=16,(0|s)!=6451321)break e;e[r+104>>2]=1,e[r+108>>2]=512,s=6451321;break e}if((0|s)>7364975)break ze;if((0|s)>6840682)break Oe;if((0|s)==6514802)break De;if((0|s)==6516078)break i;if((0|s)!=6779491)break t}if(e[r+600>>2]=896,e[r+328>>2]=8,e[r+296>>2]=336858127,e[r+300>>2]=353768980,e[r+332>>2]=103632,t=e[25905],e[r+304>>2]=e[25904],e[r+308>>2]=t,t=e[25907],e[r+312>>2]=e[25906],e[r+316>>2]=t,wr(r+344|0,0,256),g[r+388|0]=129,g[r+389|0]=129,g[r+390|0]=129,g[r+391|0]=129,g[r+420|0]=129,g[r+421|0]=129,g[r+422|0]=129,g[r+423|0]=129,g[r+360|0]=129,g[r+392|0]=129,g[r+393|0]=129,g[r+417|0]=129,g[r+418|0]=129,g[r+419|0]=129,g[r+420|0]=129,g[r+408|0]=6,g[r+409|0]=4,g[r+410|0]=6,g[r+411|0]=6,g[r+412|0]=6,g[r+413|0]=193,g[r+414|0]=6,g[r+415|0]=6,g[r+406|0]=6,g[r+407|0]=129,g[r+398|0]=4,g[r+399|0]=193,g[r+400|0]=6,g[r+401|0]=193,g[r+402|0]=6,g[r+403|0]=4,g[r+404|0]=4,g[r+405|0]=4,g[r+394|0]=4,g[r+395|0]=4,g[r+396|0]=4,g[r+397|0]=193,e[r+44>>2]=130,e[r+8>>2]=2,e[r+12>>2]=6,e[r+16>>2]=0,e[r+20>>2]=2,e[r+104>>2]=264,e[r+108>>2]=6146,g[r+391|0]=193,g[r+389|0]=193,g[r+390|0]=193,g[r+421|0]=193,e[r+100>>2]=e[r+96>>2],g[r+416|0]=4|u[r+416|0],(0|s)!=6779491)break e;e[r+40>>2]=1,s=6779491;break e}if((0|s)==6840683)break We;if((0|s)==6972015)break $;if((0|s)!=7107687)break t}e[r+296>>2]=134875662,e[r+300>>2]=252968960,e[r+328>>2]=5,g[r+169|0]=1,e[r+132>>2]=33,e[r+104>>2]=99336,e[r+8>>2]=0,e[r+12>>2]=262182,t=e[26069],e[r+304>>2]=e[26068],e[r+308>>2]=t,t=e[26071],e[r+312>>2]=e[26070],e[r+316>>2]=t;break e}if((0|s)<=7564649){if((0|s)==7364976)break J;if((0|s)==7435619)break te;if((0|s)!=7563374)break t;e[r+148>>2]=1,e[r+112>>2]=24,e[r+104>>2]=1,e[r+100>>2]=e[r+96>>2],s=7563374;break e}if((0|s)==7564650)break h;if((0|s)==7959909)break i;if((0|s)!=1885958500)break t}e[r+104>>2]=0;break e}e[r+4>>2]=48,e[r+8>>2]=0,e[r+144>>2]=1,e[r+104>>2]=16779472,e[r+32>>2]=1,e[r+24>>2]=1,t=e[25881],e[r+304>>2]=e[25880],e[r+308>>2]=t,t=e[25883],e[r+312>>2]=e[25882],e[r+316>>2]=t,g[r+465|0]=64&u[r+465|0]|129,s=24934;break e}e[r+600>>2]=4608,e[r+296>>2]=303173650,e[r+300>>2]=303174162,e[r+8>>2]=0,e[r+12>>2]=36,e[r+104>>2]=1024,e[r+100>>2]=e[r+96>>2],e[r+40>>2]=1,t=e[25865],e[r+304>>2]=e[25864],e[r+308>>2]=t,t=e[25867],e[r+312>>2]=e[25866],e[r+316>>2]=t,s=24941;break e}for(e[r+600>>2]=1536,e[r+224>>2]=0,e[r+216>>2]=1631,e[r+220>>2]=1536,e[r+104>>2]=2884720,e[r+328>>2]=7,e[r+40>>2]=1,pe=s=pe-16|0,e[s+12>>2]=-1,t=89684;i=Ir(s+12|0,t),(0|(a=e[s+12>>2]))>=33&&(g[0|(o=(r+a|0)-1192|0)]=1|u[0|o]),t=t+i|0,a;);for(e[s+12>>2]=-1,t=89743;i=Ir(s+12|0,t),(0|(a=e[s+12>>2]))>=33&&(g[0|(o=(r+a|0)-1192|0)]=2|u[0|o]),t=t+i|0,a;);for(e[s+12>>2]=-1,t=89795;i=Ir(s+12|0,t),(0|(a=e[s+12>>2]))>=33&&(g[0|(o=(r+a|0)-1192|0)]=4|u[0|o]),t=t+i|0,a;);for(e[s+12>>2]=-1,t=89941;i=Ir(s+12|0,t),(0|(a=e[s+12>>2]))>=33&&(g[0|(o=(r+a|0)-1192|0)]=16|u[0|o]),t=t+i|0,a;);for(e[s+12>>2]=-1,t=90045;i=Ir(s+12|0,t),(0|(a=e[s+12>>2]))>=33&&(g[0|(o=(r+a|0)-1192|0)]=32|u[0|o]),t=t+i|0,a;);for(e[s+12>>2]=-1,t=90045;i=Ir(s+12|0,t),(0|(a=e[s+12>>2]))>=33&&(g[0|(o=(r+a|0)-1192|0)]=8|u[0|o]),t=t+i|0,a;);for(e[s+12>>2]=-1,t=90045;i=Ir(s+12|0,t),(0|(a=e[s+12>>2]))>=33&&(g[0|(o=(r+a|0)-1192|0)]=64|u[0|o]),t=t+i|0,a;);pe=s+16|0,s=24946;break e}e[r+600>>2]=1056,e[r+12>>2]=34,e[r+216>>2]=1118,e[r+220>>2]=1072,wr(r+344|0,0,256),g[r+406|0]=4,g[r+366|0]=4,g[r+367|0]=4,g[r+369|0]=4,g[r+370|0]=4,g[r+371|0]=4,g[r+372|0]=4,g[r+361|0]=4,g[r+362|0]=4,g[r+363|0]=4,g[r+364|0]=4,g[r+373|0]=4,g[r+380|0]=4,g[r+381|0]=4,g[r+382|0]=4,g[r+383|0]=4,g[r+375|0]=4,g[r+376|0]=4,g[r+377|0]=4,g[r+378|0]=4,g[r+384|0]=4,g[r+360|0]=129,e[r+328>>2]=6,e[r+296>>2]=134744588,e[r+300>>2]=286261248,e[r+40>>2]=1,e[r+8>>2]=0,e[r+104>>2]=1032,e[r+108>>2]=66,t=e[25885],e[r+304>>2]=e[25884],e[r+308>>2]=t,t=e[25887],e[r+312>>2]=e[25886],e[r+316>>2]=t,s=25189;break e}Dn(r),e[r+328>>2]=6,e[r+56>>2]=2,e[r+36>>2]=263,e[r+40>>2]=1074,e[r+124>>2]=32,e[r+104>>2]=184554728,e[r+8>>2]=2,g[r+386|0]=64&u[r+386|0]|129,s=25191;break e}e[r+12>>2]=262182,e[r+40>>2]=1,s=6514802;break e}e[r+328>>2]=14,e[r+296>>2]=303173393,e[r+300>>2]=336986112,e[r+104>>2]=1024,e[r+16>>2]=0,e[r+20>>2]=2,e[r+8>>2]=2,e[r+12>>2]=22,e[r+44>>2]=120,t=e[25893],e[r+304>>2]=e[25892],e[r+308>>2]=t,t=e[25895],e[r+312>>2]=e[25894],e[r+316>>2]=t,g[r+463|0]=64&u[r+463|0]|129,g[r+465|0]=64&u[r+465|0]|129,s=25465;break e}e[r+8>>2]=0,e[r+104>>2]=184618072,e[r+32>>2]=1,t=e[26101],e[r+304>>2]=e[26100],e[r+308>>2]=t,t=e[26103],e[r+312>>2]=e[26102],e[r+316>>2]=t,g[r+465|0]=64&u[r+465|0]|129,s=25697;break e}e[r+296>>2]=336860180,e[r+300>>2]=336991764,e[r+8>>2]=0,e[r+104>>2]=16846872,e[r>>2]=8,e[r+4>>2]=48,e[r+80>>2]=87,e[r+32>>2]=1,e[r+36>>2]=256,e[r+40>>2]=2,t=e[25897],e[r+304>>2]=e[25896],e[r+308>>2]=t,t=e[25899],e[r+312>>2]=e[25898],e[r+316>>2]=t,g[r+465|0]=64&u[r+465|0]|129,s=25701;break e}e[r+132>>2]=33,e[r+104>>2]=16779328,e[r+8>>2]=0,e[r+12>>2]=8,e[r+204>>2]=101,e[r+60>>2]=2,e[r+40>>2]=2,t=e[25901],e[r+304>>2]=e[25900],e[r+308>>2]=t,t=e[25903],e[r+312>>2]=e[25902],e[r+316>>2]=t,g[r+441|0]=64|u[r+441|0],g[r+445|0]=64|u[r+445|0],g[r+449|0]=64|u[r+449|0],g[r+455|0]=64|u[r+455|0],g[r+461|0]=64|u[r+461|0],g[r+465|0]=64|u[r+465|0],s=25966;break e}e[r+328>>2]=4,e[r+296>>2]=336858640,e[r+300>>2]=353768980,e[r+104>>2]=16782344,e[r+20>>2]=2,e[r+12>>2]=22,e[r+4>>2]=2,e[r+8>>2]=2,e[r+332>>2]=103640,t=e[25997],e[r+304>>2]=e[25996],e[r+308>>2]=t,t=e[25999],e[r+312>>2]=e[25998],e[r+316>>2]=t,s=25967;break e}e[r+296>>2]=269422096,e[r+300>>2]=370545684,e[r+104>>2]=86017320,e[r+108>>2]=6144,e[r+16>>2]=0,e[r+20>>2]=2,e[r+8>>2]=2,e[r+12>>2]=534,e[r+100>>2]=e[r+96>>2],e[r+44>>2]=120,t=e[25913],e[r+304>>2]=e[25912],e[r+308>>2]=t,t=e[25915],e[r+312>>2]=e[25914],e[r+316>>2]=t;J:{me:{if((0|s)<=26976){if((0|s)==24942)break me;if((0|s)!=25441)break J;e[r+12>>2]=566,e[r+336>>2]=103664,s=25441;break e}if((0|s)!=26977){if((0|s)!=7364976)break J;e[r+8>>2]=3,e[r+12>>2]=310,s=7364976;break e}e[r+104>>2]=85984264,s=26977;break e}e[r+104>>2]=153093416,e[r+108>>2]=2048,e[r+140>>2]=103676,s=24942;break e}e[r+40>>2]=2;break e}e[r+296>>2]=303173648,e[r+300>>2]=303174162,e[r+104>>2]=3147080,e[r+12>>2]=65792,e[r+84>>2]=1,t=e[25921],e[r+304>>2]=e[25920],e[r+308>>2]=t,t=e[25923],e[r+312>>2]=e[25922],e[r+316>>2]=t,s=25973;break e}e[r+600>>2]=1536,e[r+216>>2]=1740,e[r+220>>2]=1568,e[r+104>>2]=96,e[r+224>>2]=103696,e[r+340>>2]=103872,e[r+40>>2]=1,s=26209;break e}e[r+328>>2]=5}e[r+104>>2]=86024,e[r+164>>2]=130,g[r+465|0]=64&u[r+465|0]|129;break e}e[r+296>>2]=303173650,e[r+300>>2]=303174162,e[r+8>>2]=3,e[r+12>>2]=36,e[r+144>>2]=2,e[r+104>>2]=118658312,e[r+28>>2]=1,e[r+100>>2]=e[r+96>>2],t=e[25865],e[r+304>>2]=e[25864],e[r+308>>2]=t,t=e[25867],e[r+312>>2]=e[25866],e[r+316>>2]=t,g[r+465|0]=64&u[r+465|0]|129,s=26226;break e}I[r+170>>1]=257,e[r+148>>2]=1,e[r+12>>2]=2,s=6840683;break e}e[r+144>>2]=2,e[r+104>>2]=2098176,e[r+8>>2]=0,e[r+12>>2]=32,e[r+40>>2]=3,e[r+28>>2]=1;break e}e[r+8>>2]=3,e[r+100>>2]=e[r+96>>2],s=26478;break e}e[r+328>>2]=18,e[r+296>>2]=320081425,e[r+300>>2]=353768980,e[r+600>>2]=2304,e[r+112>>2]=84648,e[r+104>>2]=16,e[r+8>>2]=6,e[r+12>>2]=65540,e[r+100>>2]=e[r+96>>2],t=e[25973],e[r+304>>2]=e[25972],e[r+308>>2]=t,t=e[25975],e[r+312>>2]=e[25974],e[r+316>>2]=t;j:{pe:{he:{if((0|s)<=28529){if((0|s)==26485)break he;if((0|s)!=28261)break j;t=e[25861],e[r+304>>2]=e[25860],e[r+308>>2]=t,t=e[25863],e[r+312>>2]=e[25862],e[r+316>>2]=t,e[r+296>>2]=320017171,e[r+300>>2]=320017171,e[r+132>>2]=22,e[r+112>>2]=-1431655768,e[r+108>>2]=32768|e[r+108>>2],Xa(r);break e}if((0|s)==28530)break pe;if((0|s)!=28769)break j;e[r+600>>2]=2560,Xa(r);break e}t=e[25861],e[r+304>>2]=e[25860],e[r+308>>2]=t,t=e[25863],e[r+312>>2]=e[25862],e[r+316>>2]=t,e[r+600>>2]=2688,e[r+296>>2]=320017171,e[r+300>>2]=320017171,e[r+8>>2]=2,Xa(r);break e}e[r+600>>2]=2816}Xa(r);break e}g[0|i]=104,g[i+1|0]=98,g[i+2|0]=115,g[i+3|0]=0,(0|s)!=29554?(t=e[26093],e[r+304>>2]=e[26092],e[r+308>>2]=t,t=e[26095],e[r+312>>2]=e[26094],e[r+316>>2]=t):(t=e[25977],e[r+304>>2]=e[25976],e[r+308>>2]=t,t=e[25979],e[r+312>>2]=e[25978],e[r+316>>2]=t),e[r+328>>2]=3,e[r+296>>2]=336859409,e[r+300>>2]=353768980,I[r+168>>1]=261,e[r+8>>2]=0,e[r+12>>2]=16,e[r+144>>2]=1,e[r+184>>2]=1056,e[r+104>>2]=33572172,e[r+108>>2]=330,e[r+36>>2]=3,g[r+465|0]=64&u[r+465|0]|129,g[r+458|0]=64&u[r+458|0]|129;break e}e[r+104>>2]=17990912,e[r+8>>2]=3,e[r+12>>2]=36,s=26740;break e}e[r+328>>2]=3,e[r+296>>2]=320016657,e[r+300>>2]=353768980,e[r+124>>2]=32,e[r+128>>2]=44,e[r+104>>2]=186758144,e[r+12>>2]=1081398,e[r+16>>2]=2,e[r+4>>2]=32,e[r+8>>2]=0,e[r+116>>2]=899,e[r+120>>2]=1,g[r+169|0]=1,e[r+76>>2]=2,t=e[25981],e[r+304>>2]=e[25980],e[r+308>>2]=t,t=e[25983],e[r+312>>2]=e[25982],e[r+316>>2]=t,g[r+465|0]=64&u[r+465|0]|129,PA(r,3),s=26741;break e}for(e[r+600>>2]=1328,e[r+8>>2]=3,t=e[25985],e[r+304>>2]=e[25984],e[r+308>>2]=t,t=e[25987],e[r+312>>2]=e[25986],e[r+316>>2]=t,i=wr(r+344|0,0,256),g[r+429|0]=129,g[r+416|0]=129,g[r+403|0]=129,g[r+399|0]=129,g[r+400|0]=129,g[r+397|0]=129,g[r+393|0]=129,a=103952,o=50,d=50;g[0|(t=i+d|0)]=2|u[0|t],t=i+u[a+1|0]|0,g[0|t]=2|u[0|t],t=i+u[a+2|0]|0,g[0|t]=2|u[0|t],d=u[0|(a=a+3|0)],t=103952,(0|a)!=103982;);for(a=r+344|0;g[0|(i=a+o|0)]=4|u[0|i],i=a+u[t+1|0]|0,g[0|i]=4|u[0|i],i=a+u[t+2|0]|0,g[0|i]=4|u[0|i],o=u[0|(t=t+3|0)],(0|t)!=103982;);g[r+168|0]=6,e[r+104>>2]=5128,g[r+413|0]=4|u[r+413|0];break e}e[r+328>>2]=4,e[r+296>>2]=336858640,e[r+300>>2]=353768980,e[r+104>>2]=16782440,e[r+20>>2]=2,e[r+12>>2]=22,e[r+4>>2]=2,e[r+8>>2]=2,e[r+332>>2]=104e3,t=e[25997],e[r+304>>2]=e[25996],e[r+308>>2]=t,t=e[25999],e[r+312>>2]=e[25998],e[r+316>>2]=t,s=26991;break e}e[r+296>>2]=303174160,e[r+300>>2]=353768980,e[r+104>>2]=16781320,e[r+144>>2]=2,e[r+8>>2]=2,e[r+12>>2]=22,t=e[26005],e[r+304>>2]=e[26004],e[r+308>>2]=t,t=e[26007],e[r+312>>2]=e[26006],e[r+316>>2]=t;break e}for(e[r+8>>2]=0,e[r+12>>2]=16,e[r+56>>2]=2,e[r+28>>2]=17,t=e[26009],e[r+304>>2]=e[26008],e[r+308>>2]=t,t=e[26011],e[r+312>>2]=e[26010],e[r+316>>2]=t,t=0,a=r+344|0;g[0|(i=t+a|0)]=231&u[0|i],g[0|(i=a+(1|t)|0)]=231&u[0|i],g[0|(i=a+(2|t)|0)]=231&u[0|i],g[0|(i=a+(3|t)|0)]=231&u[0|i],(0|(t=t+4|0))!=256;);e[r+104>>2]=2280,e[r+108>>2]=2,e[r+608>>2]=104048,g[r+451|0]=16|u[r+451|0],g[r+456|0]=16|u[r+456|0],g[r+459|0]=16|u[r+459|0],g[r+460|0]=16|u[r+460|0],g[r+450|0]=8|u[r+450|0],g[r+462|0]=8|u[r+462|0],g[r+458|0]=8|u[r+458|0],g[r+465|0]=64&u[r+465|0]|129;break e}e[r+296>>2]=269618961,e[r+300>>2]=370546196,e[r+12>>2]=131110,e[r+144>>2]=2,e[r+104>>2]=184559112,e[r+108>>2]=8192,e[r+16>>2]=0,e[r+20>>2]=2,e[r+4>>2]=1,e[r+8>>2]=2,e[r+100>>2]=e[r+96>>2],e[r+140>>2]=103676,e[r+68>>2]=2,e[r+56>>2]=1,e[r+44>>2]=130,e[r+28>>2]=2,t=e[26025],e[r+304>>2]=e[26024],e[r+308>>2]=t,t=e[26027],e[r+312>>2]=e[26026],e[r+316>>2]=t,g[r+465|0]=64&u[r+465|0]|129,s=26996;break e}e[r+4>>2]=524,e[r+8>>2]=2,e[r+196>>2]=368,e[r+104>>2]=0,e[r+336>>2]=104128,e[r- -64>>2]=1,t=e[26029],e[r+304>>2]=e[26028],e[r+308>>2]=t,t=e[26031],e[r+312>>2]=e[26030],e[r+316>>2]=t,g[r+465|0]=64&u[r+465|0]|129,s=6972015;break e}for(e[r+296>>2]=303174162,e[r+300>>2]=370545684,t=e[25873],e[r+304>>2]=e[25872],e[r+308>>2]=t,t=e[25875],e[r+312>>2]=e[25874],e[r+316>>2]=t,i=wr(r+344|0,0,256),g[r+431|0]=1,g[r+429|0]=1,g[r+411|0]=1,g[r+405|0]=1,g[r+400|0]=1,g[r+396|0]=1,g[r+392|0]=1,t=104160,a=49;g[0|(a=a+i|0)]=4|u[0|a],a=i+u[t+1|0]|0,g[0|a]=4|u[0|a],a=i+u[t+2|0]|0,g[0|a]=4|u[0|a],a=u[0|(t=t+3|0)],(0|t)!=104193;);e[r+600>>2]=4256,e[r+8>>2]=0,e[r+12>>2]=16,g[r+168|0]=7,e[r+132>>2]=32,g[r+392|0]=128|u[r+392|0],g[r+396|0]=128|u[r+396|0],g[r+400|0]=128|u[r+400|0],g[r+405|0]=128|u[r+405|0],g[r+411|0]=128|u[r+411|0],g[r+429|0]=128|u[r+429|0],g[r+431|0]=128|u[r+431|0],e[r+188>>2]=1056,e[r+192>>2]=29301,e[r+104>>2]=19964960;break e}for(e[r+600>>2]=1056,i=wr(r+344|0,0,256),g[r+393|0]=1,g[r+365|0]=1,g[r+360|0]=1,g[r+545|0]=1,g[r+529|0]=1,g[r+391|0]=1,g[r+389|0]=1,g[r+390|0]=1,g[r+387|0]=1,g[r+379|0]=1,g[r+374|0]=1,g[r+368|0]=1,g[r+489|0]=1,g[r+487|0]=1,g[r+398|0]=1,t=104224,a=17;g[0|(a=a+i|0)]=4|u[0|a],a=i+u[t+1|0]|0,g[0|a]=4|u[0|a],a=i+u[t+2|0]|0,g[0|a]=4|u[0|a],a=u[0|(t=t+3|0)],(0|t)!=104251;);g[r+360|0]=128|u[r+360|0],g[r+365|0]=128|u[r+365|0],g[r+393|0]=128|u[r+393|0],g[r+368|0]=128|u[r+368|0],g[r+374|0]=128|u[r+374|0],g[r+379|0]=128|u[r+379|0],g[r+387|0]=128|u[r+387|0],g[r+389|0]=128|u[r+389|0],g[r+390|0]=128|u[r+390|0],g[r+391|0]=128|u[r+391|0],g[r+529|0]=128|u[r+529|0],g[r+545|0]=128|u[r+545|0],g[r+489|0]=128|u[r+489|0],g[r+487|0]=128|u[r+487|0],g[r+398|0]=128|u[r+398|0],t=e[26055],e[r+312>>2]=e[26054],e[r+316>>2]=t,t=e[26053],e[r+304>>2]=e[26052],e[r+308>>2]=t,e[r+296>>2]=353636370,e[r+300>>2]=336925972,e[r+200>>2]=0,e[r+8>>2]=7,e[r+12>>2]=2097184,g[r+168|0]=2,e[r+104>>2]=50176,e[r+84>>2]=1,PA(r,3);break e}e[r+296>>2]=320017171,e[r+300>>2]=320017171,e[r+104>>2]=184618072,e[r+8>>2]=12,e[r+12>>2]=32,t=e[25861],e[r+304>>2]=e[25860],e[r+308>>2]=t,t=e[25863],e[r+312>>2]=e[25862],e[r+316>>2]=t,s=27500;break e}e[r+184>>2]=42752,e[r+600>>2]=4352,wr(r+344|0,0,256),g[r+456|0]=1,g[r+457|0]=1,g[r+458|0]=1,g[r+459|0]=1,g[r+449|0]=1,g[r+450|0]=1,g[r+451|0]=1,g[r+452|0]=1,g[r+453|0]=1,g[r+454|0]=1,g[r+455|0]=1,g[r+456|0]=1,g[r+441|0]=1,g[r+442|0]=1,g[r+443|0]=1,g[r+444|0]=1,g[r+445|0]=1,g[r+446|0]=1,g[r+447|0]=1,g[r+448|0]=1,g[r+460|0]=65,g[r+461|0]=65,g[r+532|0]=32,g[r+527|0]=32,g[r+519|0]=32,g[r+515|0]=32,g[r+349|0]=32,g[r+350|0]=32,g[r+346|0]=32,e[r+132>>2]=20,e[r+112>>2]=286331152,e[r+104>>2]=1024,e[r+108>>2]=16384,e[r+40>>2]=1,e[r+8>>2]=8,g[r+458|0]=65,g[r+453|0]=65,g[r+447|0]=65,g[r+448|0]=65,g[r+443|0]=65,g[r+444|0]=65,s=27503;break e}e[r+328>>2]=10,e[r+296>>2]=336859666,e[r+300>>2]=353768980,g[r+168|0]=2,e[r+104>>2]=263264,e[r+8>>2]=7,t=e[26065],e[r+304>>2]=e[26064],e[r+308>>2]=t,t=e[26067],e[r+312>>2]=e[26066],e[r+316>>2]=t,s=27509;break e}e[r+104>>2]=1,s=27513;break e}e[r+116>>2]=5e3,e[r+104>>2]=16777216,e[r+24>>2]=1,e[r+16>>2]=0,e[r+20>>2]=2,e[r+8>>2]=2,e[r+12>>2]=32,e[r+328>>2]=5,s=27745;break e}e[r+116>>2]=5e3,e[r+104>>2]=99336,e[r+108>>2]=256,e[r+24>>2]=1,e[r+16>>2]=0,e[r+20>>2]=2,e[r+8>>2]=2,e[r+12>>2]=32,e[r+328>>2]=5,s=27764;break e}e[r+328>>2]=6,e[r+296>>2]=336859409,e[r+300>>2]=353768980,e[r+600>>2]=1056,e[r+104>>2]=2114600,e[r+108>>2]=138,e[r+8>>2]=4,e[r+632>>2]=104288,e[r+604>>2]=104288,t=e[26093],e[r+304>>2]=e[26092],e[r+308>>2]=t,t=e[26095],e[r+312>>2]=e[26094],e[r+316>>2]=t,s=28011;break e}e[r+328>>2]=4,e[r+104>>2]=1,e[r+8>>2]=2,e[r+36>>2]=256,s=28020;break e}e[r+4>>2]=48,e[r+8>>2]=0,e[r+12>>2]=128,e[r+104>>2]=2169880,e[r+32>>2]=1,e[r+36>>2]=256,e[r+24>>2]=1,e[r+136>>2]=85767,t=e[26097],e[r+304>>2]=e[26096],e[r+308>>2]=t,t=e[26099],e[r+312>>2]=e[26098],e[r+316>>2]=t,g[r+465|0]=64&u[r+465|0]|129,s=28268;break e}e[r+8>>2]=0,e[r+104>>2]=71752,t=e[26101],e[r+304>>2]=e[26100],e[r+308>>2]=t,t=e[26103],e[r+312>>2]=e[26102],e[r+316>>2]=t,g[r+465|0]=64&u[r+465|0]|129,s=28258;break e}e[r+296>>2]=336858898,e[r+300>>2]=370546196,e[r+104>>2]=1088,e[r+108>>2]=512,e[r+8>>2]=2,e[r+12>>2]=524310,t=e[26105],e[r+304>>2]=e[26104],e[r+308>>2]=t,t=e[26107],e[r+312>>2]=e[26106],e[r+316>>2]=t,s=28525;break e}e[r+328>>2]=3,e[r+296>>2]=320015633,e[r+300>>2]=353768980,g[r+168|0]=7,e[r+8>>2]=2,e[r+12>>2]=6,e[r+104>>2]=20488,e[r+108>>2]=192,e[r+36>>2]=9,e[r+60>>2]=260,t=e[26109],e[r+304>>2]=e[26108],e[r+308>>2]=t,t=e[26111],e[r+312>>2]=e[26110],e[r+316>>2]=t,g[r+465|0]=64&u[r+465|0]|129,s=28780;break e}for(e[r+296>>2]=353569552,e[r+300>>2]=353768980,e[r+116>>2]=5e3,e[r+104>>2]=33570920,e[r+108>>2]=14336,e[r+8>>2]=3,e[r+12>>2]=139286,e[r+100>>2]=e[r+96>>2],t=e[26113],e[r+304>>2]=e[26112],e[r+308>>2]=t,t=e[26115],e[r+312>>2]=e[26114],e[r+316>>2]=t,g[r+465|0]=64&u[r+465|0]|129,t=0,a=r+344|0;g[0|(i=t+a|0)]=253&u[0|i],g[0|(i=a+(1|t)|0)]=253&u[0|i],g[0|(i=a+(2|t)|0)]=253&u[0|i],g[0|(i=a+(3|t)|0)]=253&u[0|i],(0|(t=t+4|0))!=256;);g[r+442|0]=2|u[r+442|0],g[r+443|0]=2|u[r+443|0],g[r+444|0]=2|u[r+444|0],g[r+446|0]=2|u[r+446|0],g[r+447|0]=2|u[r+447|0],g[r+450|0]=2|u[r+450|0],g[r+451|0]=2|u[r+451|0],g[r+453|0]=2|u[r+453|0],g[r+454|0]=2|u[r+454|0],g[r+456|0]=2|u[r+456|0],g[r+457|0]=2|u[r+457|0],g[r+459|0]=2|u[r+459|0],g[r+460|0]=2|u[r+460|0],g[r+462|0]=2|u[r+462|0],g[r+464|0]=2|u[r+464|0],g[r+466|0]=2|u[r+466|0],e[r+144>>2]=2,e[r+68>>2]=2;break e}e[r+296>>2]=303172879,e[r+300>>2]=353768980,e[r+328>>2]=3,e[r+8>>2]=3,e[r+12>>2]=262,e[r+104>>2]=16805928,e[r+108>>2]=30,t=e[26117],e[r+304>>2]=e[26116],e[r+308>>2]=t,t=e[26119],e[r+312>>2]=e[26118],e[r+316>>2]=t,s=29295;break e}Ho(r),s=29301;break e}for(e[r+328>>2]=3,e[r+296>>2]=336859153,e[r+300>>2]=353768980,I[r+168>>1]=261,e[r+8>>2]=0,e[r+12>>2]=22,e[r+124>>2]=0,e[r+128>>2]=44,e[r+104>>2]=16794624,e[r+108>>2]=128,e[r+36>>2]=3,e[r+60>>2]=4,t=e[25869],e[r+304>>2]=e[25868],e[r+308>>2]=t,t=e[25871],e[r+312>>2]=e[25870],e[r+316>>2]=t,(0|s)==25459&&(e[r+108>>2]=136),g[r+465|0]=64&u[r+465|0]|129,g[r+458|0]=64&u[r+458|0]|129,t=0,a=r+344|0;g[0|(i=t+a|0)]=223&u[0|i],g[0|(i=a+(1|t)|0)]=223&u[0|i],g[0|(i=a+(2|t)|0)]=223&u[0|i],g[0|(i=a+(3|t)|0)]=223&u[0|i],(0|(t=t+4|0))!=256;);g[r+442|0]=32|u[r+442|0],g[r+444|0]=32|u[r+444|0],g[r+447|0]=32|u[r+447|0],g[r+450|0]=32|u[r+450|0],g[r+452|0]=32|u[r+452|0],g[r+453|0]=32|u[r+453|0],g[r+454|0]=32|u[r+454|0],g[r+458|0]=32|u[r+458|0],g[r+462|0]=32|u[r+462|0],g[r+463|0]=32|u[r+463|0],g[r+466|0]=32|u[r+466|0],g[r+441|0]=32|u[r+441|0],g[r+445|0]=32|u[r+445|0],g[r+449|0]=32|u[r+449|0],g[r+455|0]=32|u[r+455|0],g[r+461|0]=32|u[r+461|0],g[r+465|0]=32|u[r+465|0];break e}for(e[r+296>>2]=303174162,e[r+300>>2]=370545684,e[r+600>>2]=3456,g[r+169|0]=1,e[r+8>>2]=0,e[r+12>>2]=22,e[r+100>>2]=e[r+96>>2],t=e[25873],e[r+304>>2]=e[25872],e[r+308>>2]=t,t=e[25875],e[r+312>>2]=e[25874],e[r+316>>2]=t,wr(r+344|0,0,256),g[r+365|0]=1,g[r+366|0]=1,g[r+357|0]=1,g[r+358|0]=1,g[r+359|0]=1,g[r+360|0]=1,g[r+361|0]=1,g[r+362|0]=1,g[r+363|0]=1,g[r+364|0]=1,g[r+349|0]=1,g[r+350|0]=1,g[r+351|0]=1,g[r+352|0]=1,g[r+353|0]=1,g[r+354|0]=1,g[r+355|0]=1,g[r+356|0]=1,t=74,a=74;g[344+(i=r+a|0)|0]=1|u[i+344|0],g[i+345|0]=1|u[i+345|0],g[i+346|0]=1|u[i+346|0],(0|(a=a+3|0))!=116;);for(;g[344+(a=t+r|0)|0]=2|u[a+344|0],g[a+345|0]=2|u[a+345|0],g[a+346|0]=2|u[a+346|0],(0|(t=t+3|0))!=116;);for(a=26;g[344+(t=r+a|0)|0]=4|u[t+344|0],g[t+345|0]=4|u[t+345|0],g[t+346|0]=4|u[t+346|0],g[t+347|0]=4|u[t+347|0],g[t+348|0]=4|u[t+348|0],(0|(a=a+5|0))!=71;);e[r+112>>2]=84648,e[r+104>>2]=270589952,e[r+108>>2]=65536,e[r+40>>2]=1,e[r+204>>2]=e[r+600>>2]+74;break e}e[r+8>>2]=2,e[r+12>>2]=32,e[r+328>>2]=3,e[r+124>>2]=32,e[r+104>>2]=16864280,e[r+108>>2]=256,e[r+68>>2]=2,e[r+36>>2]=259,e[r+40>>2]=118,e[r+28>>2]=1,g[r+458|0]=128|u[r+458|0],s=29548;break e}e[r+296>>2]=370544658,e[r+300>>2]=370546196,e[r+164>>2]=130,e[r+8>>2]=0,e[r+12>>2]=86,e[r+104>>2]=87064,g[r+169|0]=1,e[r+152>>2]=3,t=e[26121],e[r+304>>2]=e[26120],e[r+308>>2]=t,t=e[26123],e[r+312>>2]=e[26122],e[r+316>>2]=t,g[r+465|0]=64&u[r+465|0]|129,s=7564650;break e}e[r+296>>2]=269487120,e[r+300>>2]=320148500,e[r+8>>2]=3,e[r+12>>2]=278,e[r+144>>2]=2,e[r+104>>2]=32872,t=e[26125],e[r+304>>2]=e[26124],e[r+308>>2]=t,t=e[26127],e[r+312>>2]=e[26126],e[r+316>>2]=t,g[r+465|0]=64&u[r+465|0]|129,s=29553;break e}e[r+296>>2]=336859152,e[r+300>>2]=353768980,e[r+8>>2]=0,e[r+144>>2]=1,e[r+104>>2]=6408,t=e[26129],e[r+304>>2]=e[26128],e[r+308>>2]=t,t=e[26131],e[r+312>>2]=e[26130],e[r+316>>2]=t,g[r+465|0]=64&u[r+465|0]|129,s=29558;break e}e[r+296>>2]=320015376,e[r+300>>2]=353768980,g[r+168|0]=4,e[r+12>>2]=22,e[r+4>>2]=1,e[r+8>>2]=2,e[r+104>>2]=1248,e[r+100>>2]=e[r+96>>2],t=e[26133],e[r+304>>2]=e[26132],e[r+308>>2]=t,t=e[26135],e[r+312>>2]=e[26134],e[r+316>>2]=t;break e}e[r+296>>2]=303174162,e[r+300>>2]=370545684,g[r+169|0]=1,e[r+8>>2]=0,e[r+12>>2]=22,e[r+112>>2]=5288,e[r+100>>2]=e[r+96>>2],t=e[25877],e[r+304>>2]=e[25876],e[r+308>>2]=t,t=e[25879],e[r+312>>2]=e[25878],e[r+316>>2]=t;p:switch(s-29793|0){default:if((0|s)!=27502){if((0|s)!=28012)break s;t=e[26137],e[r+304>>2]=e[26136],e[r+308>>2]=t,t=e[26139],e[r+312>>2]=e[26138],e[r+316>>2]=t,e[r+600>>2]=3328,e[r+296>>2]=320017171,e[r+300>>2]=320017171,e[r+104>>2]=2098176,e[r+108>>2]=131072,e[r+8>>2]=13;break s}e[r+104>>2]=1,e[r+600>>2]=3200;break s;case 4:break p;case 1:case 2:case 3:break s;case 0:break n}e[r+104>>2]=1,e[r+108>>2]=524288,e[r+600>>2]=3072;break s}e[r+328>>2]=10,e[r+296>>2]=353636370,e[r+300>>2]=336925972,g[r+173|0]=1,e[r+8>>2]=7,e[r+12>>2]=32,g[r+168|0]=2,e[r+84>>2]=1,t=e[26141],e[r+304>>2]=e[26140],e[r+308>>2]=t,e[r+104>>2]=(0|s)==24954?2118920:2114824,t=e[26143],e[r+312>>2]=e[26142],e[r+316>>2]=t;break e}Dn(r),e[r+296>>2]=303173650,e[r+300>>2]=303174162,e[r+104>>2]=2131208,e[r+8>>2]=3,e[r+12>>2]=32,t=e[25865],e[r+304>>2]=e[25864],e[r+308>>2]=t,t=e[25867],e[r+312>>2]=e[25866],e[r+316>>2]=t,s=29812;break e}Ho(r),s=30059;break e}e[r+112>>2]=21160,e[r+104>>2]=16,e[r+600>>2]=1536,e[r+40>>2]=1;break e}e[r+296>>2]=269488144,e[r+300>>2]=370546198,e[r+8>>2]=0,e[r>>2]=33,e[r+148>>2]=1,e[r+104>>2]=12615688,e[r+16>>2]=2,e[r+100>>2]=e[r+96>>2],e[r+632>>2]=104592,e[r+604>>2]=104592,t=e[26145],e[r+304>>2]=e[26144],e[r+308>>2]=t,t=e[26147],e[r+312>>2]=e[26146],e[r+316>>2]=t,s=30313;break e}if(e[r+296>>2]=370544662,e[r+300>>2]=370546198,e[r+8>>2]=3,e[r+12>>2]=2,e[r+148>>2]=1,e[r+184>>2]=12544,I[r+170>>1]=257,e[r+176>>2]=1,g[r+172|0]=1,e[r>>2]=33,e[r+4>>2]=0,e[r+100>>2]=e[r+96>>2],t=e[26225],e[r+304>>2]=e[26224],e[r+308>>2]=t,t=e[26227],e[r+312>>2]=e[26226],e[r+316>>2]=t,(0|s)!=7959909)break e;e[r+112>>2]=24,e[r+104>>2]=1,e[r+108>>2]=1048576,s=7959909;break e}t=e[25873],e[r+304>>2]=e[25872],e[r+308>>2]=t,t=e[25875],e[r+312>>2]=e[25874],e[r+316>>2]=t,e[r+600>>2]=2944,e[r+104>>2]=2097152,e[r+108>>2]=262144,e[r+48>>2]=1}Xa(r),g[r+422|0]=2|u[r+422|0];break e}e[r+40>>2]=1}return e[r+212>>2]=s,8&(t=e[r+104>>2])&&(e[r+124>>2]=46,e[r+128>>2]=44),4&t&&(e[r+124>>2]=0),r}function ct(t){var r=0,s=0,a=0,i=0,o=0,d=0,f=0,m=0,M=0,y=0,P=0,q=0,ae=0,de=0,ye=0,Be=0,qe=0,ot=0,pt=0,Mt=0,Ft=0,Lt=0,Xt=0,Ar=0,Mr=0;e:{s=e[32538],e[47354]=0,e[47568]=0,e[49828]=0,e[47569]=0,g[199328]=0,e[49827]=0,e[49845]=0,g[190280]=0,g[190268]=1,e[47202]=0,e[49573]=0,e[49846]=0,g[199304]=0,g[199388]=0,e[33691]=0,e[33285]=0,e[33708]=1,e[33709]=1,e[33288]=0,r=e[33730],e[33712]=e[33729],e[33713]=r,r=e[33732],e[33714]=e[33731],e[33715]=r,r=e[33734],e[33716]=e[33733],e[33717]=r,r=e[33736],e[33718]=e[33735],e[33719]=r,r=e[33738],e[33720]=e[33737],e[33721]=r,r=e[33740],e[33722]=e[33739],e[33723]=r,r=e[33742],e[33724]=e[33741],e[33725]=r,e[33726]=e[33743],g[134784]=0,g[134824]=0,g[134772]=0,g[134760]=0,e[33284]=-1,e[33692]=0,e[32525]=0,e[47201]=e[33717],e[47200]=e[33718],Yn(),e[34438]=0,e[34437]=0,r=e[33730],e[34048]=e[33729],e[34049]=r,r=e[33732],e[34050]=e[33731],e[34051]=r,r=e[33734],e[34052]=e[33733],e[34053]=r,r=e[33736],e[34054]=e[33735],e[34055]=r,r=e[33738],e[34056]=e[33737],e[34057]=r,r=e[33740],e[34058]=e[33739],e[34059]=r,r=e[33742],e[34060]=e[33741],e[34061]=r,e[34062]=e[33743];t:{s:{if(1&s){if(e[e[32539]>>2]=0,e[47569]|e[49845]|e[49827])break s;break t}if(e[e[32539]>>2]=0,!(e[49845]|e[49827]||e[47569]))break t}g[190280]=1}e[49828]=0,r=268436735;t:if(!(!e[34391]|!e[34388])&&(e[47204]=0,e[47203]=0,e[47199]=0,e[34439]=0,(e[47192]||!(r=qA(86228)))&&((r=e[33283])||((r=Fr(16))&&(e[r>>2]=0,e[r+4>>2]=0,e[r+8>>2]=0,e[r+12>>2]=0),e[33283]=r),o=268439807,(s=e[e[47192]+328>>2])>>>0>20|!e[129104+(s<<3)>>2]?r=o:(t?(o=4,i=zr(t)+1|0):(o=2,i=0),e[r+8>>2]=o,e[r>>2]=t,e[r+12>>2]=e[129108+(s<<3)>>2],e[r+4>>2]=t?t+i|0:0,r=0),!r))){ge(0);s:{for(;;){e[34436]=0,t=e[34391],e[51290]=t,e[54046]=t+e[34390],e[50767]<=102399&&(e[50767]=102400);n:if(!((d=e[51290])>>>0>=ue[54046]))for(;;){if((((0|(t=(i=e[50757])-(f=e[50758])|0))<=0?t+170|0:t)-171|0)>=-1){if((0|(t=e[54731]))<=0)break n;o=0,e[50763]=0,e[50762]=0,e[50765]=2147483647,t=u[218920]?e[54732]:t;i:{for(;;){if(s=t-1|0,e[54732]=s,(0|t)<=0)break i;if(e[51290]=d+1,r=(t=e[51293])+1|0,e[51293]=(0|r)<=5499?r:0,r=(t=K(e[50755],I[205184+(t<<1)>>1]))>>8,g[0|d]=r,i=e[51290],e[51290]=i+1,g[0|i]=t>>>16,(i=e[50756])?(t=s,(s=e[i+4>>2])&&(os[0|s](r<<16>>16),t=e[54732])):t=s,i=(s=e[51292])+1|0,e[51292]=i,I[205184+(s<<1)>>1]=r,(0|i)>=5500&&(e[51292]=0),d=e[51290],!(ue[54046]>=d+2>>>0))break}o=1}g[218920]=o;break n}t=e[4+(s=216192+(i<<4)|0)>>2];i:{c:{A:{d:{l:{o:{p:{b:{m:{C:{h:{M:{I:{x:{N:{V:switch((255&(r=e[s>>2]))-1|0){case 9:break A;case 7:break d;case 10:break l;case 11:break o;case 13:break p;case 0:break b;case 1:break m;case 2:break C;case 3:break h;case 6:break M;case 5:break I;case 4:break x;case 15:break N;case 8:break V;default:break c}if(!e[50759])break c;r=e[s+12>>2],s=e[s+8>>2],e[50768]=0,d=s||99232,e[50766]=d,e[50769]=t?2097152/(0|t)|0:0,t=e[50971],i=(0|K(t,e[50788]))/50|0,s=K(i-t|0,-18),t=((0|(t=e[50785]))>=101?101:t)-e[50790]|0,r=(o=s+((0|K(e[50970],u[((0|t)>0?t:0)+105680|0]))/128|0)|0)+((0|K(i,(0|(t=r>>16))<(0|(s=65535&r))?t:s))/2|0)|0,e[50770]=r,t=(o+((0|K(i,(0|t)>(0|s)?t:s))/2|0)|0)-r|0,e[50771]=t,s=u[0|d],e[33072]=e[50976],e[50767]=r+(K(t,s)>>8);break c}os[e[e[50756]>>2]](t,e[s+8>>2]),tr(t);break c}if(u[218920]||(e[54731]=e[54731]-t),e[50781]=100,e[50773]=0,Qe(),e[50763]=0,e[50762]=0,e[50765]=2147483647,!t)break c;for(t=u[218920]?e[54732]:t;;){if(s=t-1|0,e[54732]=s,(0|t)<=0)break c;if(t=e[51290],e[51290]=t+1,i=(r=e[51293])+1|0,e[51293]=(0|i)<=5499?i:0,i=t,r=(t=K(e[50755],I[205184+(r<<1)>>1]))>>8,g[0|i]=r,i=e[51290],e[51290]=i+1,g[0|i]=t>>>16,(i=e[50756])?(t=s,(s=e[i+4>>2])&&(os[0|s](r<<16>>16),t=e[54732])):t=s,i=(s=e[51292])+1|0,e[51292]=i,I[205184+(s<<1)>>1]=r,(0|i)>=5500&&(e[51292]=0),i=1,!(ue[54046]>=e[51290]+2>>>0))break}break i}for(e[50773]=0,e[54731]=e[54729],Qe(),r=e[s+12>>2],i=e[s+8>>2],u[218920]?t=e[54733]:e[54734]=0,f=r>>8,o=255&r,e[50762]=0,e[50763]=0;;){if(s=t-1|0,e[54733]=s,(0|t)<=0)break c;if(r=(t=e[54734])+1|0,o?d=K(o,g[t+i|0]):(d=u[t+i|0]|g[r+i|0]<<8,r=t+2|0),e[54734]=r,m=(t=e[51293])+1|0,e[51293]=m,r=(0|(t=(0|(t=((0|K(f,K(e[33037],K(e[33038],d))>>10))/32|0)+(K(e[50755],I[205184+(t<<1)>>1])>>8)|0))<=-32768?-32768:t))>=32767?32767:t,(0|m)>=5500&&(e[51293]=0),g[e[51290]]=r,g[e[51290]+1|0]=r>>>8,(d=e[50756])?(t=s,(s=e[d+12>>2])&&(os[0|s](r<<16>>16),t=e[54733])):t=s,s=e[51290],e[51290]=s+2,m=(d=e[51292])+1|0,e[51292]=m,I[205184+(d<<1)>>1]=(0|K(r,3))/4,(0|m)>=5500&&(e[51292]=0),!(ue[54046]>=s+4>>>0))break}i=1;break i}r=e[s+12>>2],i=t>>>16|0,e[50777]=i,t&=65535,e[50773]=t,o=255&r,e[50774]=o,e[50775]=r>>8,o||(e[50777]=i<<1,e[50773]=t<<1),e[50778]=0,e[50776]=0,e[50772]=e[s+8>>2];break c}e[50773]=0}if(e[54731]=e[54729],r=e[50759],u[218920]){if(!r)break c}else{if(!r)break c;for(o=e[s+12>>2],d=e[s+8>>2],s=t>>16,e[55912]=255&s,g[218960]=1,e[55908]=0,67108864&t&&(e[55908]=3,e[55909]=e[110496+(s>>>6&12)>>2]),134217728&t&&(e[55908]=4,e[55909]=e[110512+(s>>>6&12)>>2]),t&=65504;;){if((0|f)!=(0|(i=(0|(s=i+1|0))<=169?s:0)))if((0|(s=e[216192+(i<<4)>>2]))!=3){if(s-5>>>0>1)continue}else g[218960]=0;break}for(e[55913]=e[50762],t=(t=t+32&131008)||64,e[50763]=t+e[50763],e[55684]=K(I[101997],7800)+(B[102024]<<8)<<8,e[55704]=K(I[101998],9e3)+(B[102025]<<8)<<8,ae=e[50980],a=+(0|t),P=+(t>>>2|0),t=0;(0|t)!=7&&(i=I[218+(m=(s=t<<1)+r|0)>>1]<<8,f=K(t,80)+222176|0,m=I[m+164>>1],q=i+K(m,I[2+(s+d|0)>>1])<<8,e[f>>2]=q,y=+(0|q),G[f+16>>3]=y,G[f+48>>3]=16*(+(i+K(m,I[2+(s+o|0)>>1])<<8)-y)/P),i=(s=K(t,80))+222176|0,m=I[182+(q=r+(t<<1)|0)>>1],ye=K(m,u[18+(f=t+d|0)|0])<<6,e[i+4>>2]=ye,y=+(0|ye),G[i+24>>3]=y,de=i,i=t+o|0,G[de+56>>3]=64*(+(K(m,u[i+18|0])<<6)-y)/a,(0|t)>(0|ae)|t>>>0>5||(m=s+222176|0,ye=I[q+200>>1],q=K(ye,u[f+26|0])<<10,e[m+8>>2]=q,y=+(0|q),G[m+32>>3]=y,de=m- -64|0,m=ye<<10,G[de>>3]=64*(+(0|K(m,u[i+26|0]))-y)/a,t>>>0<=2?(s=s+222176|0,f=K(m,u[f+32|0]),e[s+12>>2]=f,y=+(0|f),G[s+40>>3]=y,G[s+72>>3]=64*(+(0|K(m,u[i+32|0]))-y)/a):e[s+222188>>2]=q),(0|(t=t+1|0))!=8;);}for(;;){if(t=e[50762],!u[218960]&(0|t)==e[50763])break c;C:{h:{if(63&t){if(7&t)break C;M:if(!((0|(s=e[54736]))<=0||(0|(r=e[54735]))<=0))for(i=e[50826],t=1;;){if(e[(d=(o=t<<2)+i|0)>>2]=e[d>>2]+e[o+203312>>2],t>>>0>28|(0|t)>=(0|s))break M;if(o=(0|t)<(0|r),t=t+1|0,!o)break}if((0|(t=e[33073]))>255)break C;e[33073]=t+1;break C}if(t)if(e[50759]){if(s=e[50768]+e[50769]|0,e[50768]=s,s=(r=e[50766])?K(u[r+((0|(s>>=8))>=127?127:s)|0],e[50771])>>8:0,e[55911]=e[55911]+e[55915],r=(0|(r=e[55914]))<=23551?r:0,e[55914]=r+e[50761],r=(s+e[50770]|0)+K(e[33072],u[110528+(r>>6)|0]-128|0)|0,e[50767]=r,!(i=e[51291])&(0|(s=i?i<<12:r))>102399||(r=(0|s)<=102400?102400:s,e[50767]=r),(0|t)!=e[55913]){if(t=0,!((0|(f=e[50980]))<0)){for(;d=K(t,80),a=G[48+(s=d+222176|0)>>3]+G[s+16>>3],G[s+16>>3]=a,P=G[s+56>>3]+G[s+24>>3],G[s+24>>3]=P,y=G[s- -64>>3]+G[s+32>>3],G[s+32>>3]=y,i=ve(a)<2147483648?~~a:-2147483648,e[s>>2]=i,i=ve(y)<2147483648?~~y:-2147483648,e[s+8>>2]=i,o=ve(P)<2147483648?~~P:-2147483648,e[s+4>>2]=(0|o)>0?o:0,(0|t)>2||(a=G[72+(s=d+222176|0)>>3]+G[s+40>>3],G[s+40>>3]=a,i=ve(a)<2147483648?~~a:-2147483648),e[d+222188>>2]=i,(0|f)>=(0|(t=t+1|0)););if((0|t)>=8)break h}for(;(0|t)!=7&&(s=K(t,80)+222176|0,a=G[s+48>>3]+G[s+16>>3],G[s+16>>3]=a,i=ve(a)<2147483648?~~a:-2147483648,e[s>>2]=i),s=K(t,80)+222176|0,a=G[s+56>>3]+G[s+24>>3],G[s+24>>3]=a,i=ve(a)<2147483648?~~a:-2147483648,e[s+4>>2]=(0|i)>0?i:0,(0|(t=t+1|0))!=8;);}}else r=e[50767];else e[50826]=218976,e[54742]=0,e[54736]=$n(e[50767]<<4,218976,0),r=e[50767],e[54737]=890/(r>>12),e[54739]=(0|K(e[50781],K(e[50779],r>>8)))/8e4}if(e[55906]=r>>11,e[54735]=e[54736],e[55904]=K(e[50760],r>>7),e[55905]=e[50754]/(r>>12),s=1^(t=e[54742]),e[54742]=s,e[50826]=K(t,1600)+218976,e[54736]=$n(r<<4,K(s,1600)+218976|0,1),!(!(r=e[50759])|!e[51022]))for(P=G[25430],y=G[25429],t=1;e[272+(s=r+(t<<2)|0)>>2]&&(i=e[s+308>>2],s=K(t,40)+203456|0,M=yn(P*+I[2+(K(t,80)+222176|0)>>1]),M*=a=ys(y*+(0|i)),M+=M,G[s+8>>3]=M,a*=-a,G[s+16>>3]=a,G[s>>3]=1-M-a),(0|(t=t+1|0))!=9;);}if(o=e[50762]+1|0,e[50762]=o,d=(t=e[50765])+e[55904]|0,e[50765]=d,(0|d)<0&(0|t)>0){if(m=e[55905],r=e[50800]+((0|m)/-2|0)|0,e[55907]=r,(0|(q=e[50763]))<(0|o))break c;if(ae=e[54738]+1|0,e[54738]=ae,f=e[50767],!((0|(t=(s=e[50980])+1|0))>8)&&(i=f<<3,1&s&&(e[203264+(t<<2)>>2]=(1+(e[K(t,80)+222176>>2]/(0|i)|0)|0)/2,t=s+2|0),(0|s)!=7))for(;s=203264+(t<<2)|0,ye=K(t,80)+222176|0,e[s>>2]=(1+(e[ye>>2]/(0|i)|0)|0)/2,e[s+4>>2]=(1+(e[ye+80>>2]/(0|i)|0)|0)/2,(0|(t=t+2|0))!=9;);t=(0|K(e[50781],K(e[50779],f>>8)))/8e4|0,e[54739]=t;C:if(!((0|(s=e[55908]))<=0)){switch(s-3|0){case 0:if((q-o|0)>=m<<1)break C;e[55908]=2,t=(0|K(e[55909],t))/256|0,e[54739]=t;break C;case 1:e[55908]=2,t=(0|K(e[55909],t))/256|0,e[54739]=t;break C}e[55908]=s-1}(s=e[55910])&&(i=t,t=e[55911]>>8,t=(0|K(i,u[s+((0|t)>=127?127:t)|0]))/128|0,e[54739]=t),(0|(s=e[e[32972]+92>>2]))>7||(s=15&(i=u[e[55912]+(106336+(s<<3)|0)|0]),(i=i>>>4|0)&&((0|i)!=15?(0|ae)%(0|i)|0||(e[54739]=(0|K(t,s))/16):(e[55912]=0,e[54739]=(0|K(t,s))/16)))}else r=e[55907];if(o=r+1|0,e[55907]=o,s=d>>>16|0,i=0,!((0|o)<0|(0|o)>=e[50799])){if(!((0|(t=(r=e[50980])+1|0))>8)){if(f=1&(d=8-r|0),(0|r)!=7)for(m=-2&d,r=0;i=K(e[203216+(q=4+(d=t<<2)|0)>>2],I[106400+(K(s,e[q+203264>>2])>>>4&4094)>>1])+(K(e[d+203216>>2],I[106400+(K(s,e[d+203264>>2])>>>4&4094)>>1])+i|0)|0,t=t+2|0,(0|m)!=(0|(r=r+2|0)););f&&(i=K(e[203216+(t<<=2)>>2],I[106400+(K(s,e[t+203264>>2])>>>4&4094)>>1])+i|0)}i=K(u[o+132160|0],(0|i)/e[55906]|0)}if(t=1,(0|(o=e[54737]))<=0)r=s;else for(d=e[50826],r=s;i=K(e[d+(t<<2)>>2],I[106400+((65504&r)>>>4|0)>>1])+i|0,r=r+s|0,(0|o)>=(0|(t=t+1|0)););if((0|(o=e[54735]))>=(0|t))for(d=e[50826];i=i-K(e[d+(t<<2)>>2],I[106400+((65504&r)>>>4|0)>>1])|0,r=r+s|0,(0|o)>=(0|(t=t+1|0)););if(o=(0|(t=e[54728]))==64?i:K(t,i>>6),e[51022]){if(e[50759])for(s=ps(e[33209],0,1103515245,0),t=X,t=AA(s=s+12345|0,t=s>>>0<12345?t+1|0:t),e[33209]=t,P=+((16383&t)- -8192|0),r=e[50759],d=0,t=1;(i=e[272+(r+(t<<2)|0)>>2])&&(f=e[K(t,80)+222180>>2],s=K(t,40)+203456|0,a=G[s+32>>3],y=G[s+24>>3],G[s+32>>3]=y,a=a*G[s+16>>3]+(G[s>>3]*P+y*G[s+8>>3]),G[s+24>>3]=a,s=ve(a)<2147483648?~~a:-2147483648,d=K(s,K(i,f>>14))+d|0),(0|(t=t+1|0))!=9;);else d=0;o=o+d|0}r=0,(0|(t=e[50776]))>=e[50773]||(s=e[50778],r=e[50772],(d=e[50774])?(i=t+1|0,e[50776]=i,t=K(d,g[r+(t+s|0)|0])):(d=u[0|(r=r+(t+s|0)|0)],r=g[r+1|0],i=t+2|0,e[50776]=i,t=d|r<<8),r=(0|K(K(t,e[50780])>>10,e[50775]))/32|0,(0|(t=e[50777]))>(s+i|0)||(e[50778]=s+((0|K(t,3))/-4|0))),s=(t=e[51293])+1|0,e[51293]=s,t=((K(e[54739],o>>8)>>13)+r|0)+(K(e[50755],I[205184+(t<<1)>>1])>>8)|0,(0|s)>=5500&&(e[51293]=0),s=e[33073];C:{h:{if((0|(r=K(s,t)))>=8388608){if((0|s)>=(0|(d=8388608/(0|t)|0)))break h;break C}if((0|r)>-8388353||(0|s)<(0|(d=-8388608/(0|t)|0)))break C}s=d-1|0,e[33073]=s,r=K(t,s)}if(t=e[51290],e[51290]=t+1,s=t,t=r>>8,g[0|s]=t,s=e[51290],e[51290]=s+1,g[0|s]=r>>>16,(s=e[50756])&&(s=e[s+8>>2])&&os[0|s](t<<16>>16),r=(s=e[51292])+1|0,e[51292]=r,I[205184+(s<<1)>>1]=t,(0|r)>=5500&&(e[51292]=0),!(ue[54046]>=e[51290]+2>>>0))break}i=1;break i}e[50773]=0}e[54731]=e[54729],i=1,f=65535&t,r=u[218920],d=e[s+8>>2],o=e[s+12>>2],a=0,y=0,pe=s=pe+-64|0,m=e[50759];b:if((0|(t=e[m+132>>2]))!=6){if(!r){for(t-1>>>0<=4&&(e[55921]=t,e[55964]=e[110896+(t<<2)>>2]),t=e[m+88>>2],e[54741]=1,e[55922]=(0|t)/32,r=e[50758],t=e[50757];;){m:if((0|r)!=(0|(t=(0|(t=t+1|0))<=169?t:0)))if((0|(q=e[216192+(t<<4)>>2]))!=1){if(q-5>>>0>1)continue}else{if(e[54741]=0,t=e[8+(216192+(t<<4)|0)>>2],!(B[o+4>>1]!=B[t+4>>1]|B[t+6>>1]!=B[o+6>>1]|B[t+8>>1]!=B[o+8>>1]|B[t+10>>1]!=B[o+10>>1])&&B[t+12>>1]==B[o+12>>1])break m;e[54741]=2}break}for((B[d+4>>1]!=B[113564]|B[d+6>>1]!=B[113565]|B[d+8>>1]!=B[113566]|B[d+10>>1]!=B[113567]||B[d+12>>1]!=B[113568])&&(Fo(),e[55974]=0,e[55975]=0,e[55972]=0,e[55973]=0,e[55988]=0,e[55989]=0,e[55990]=0,e[55991]=0,e[56004]=0,e[56005]=0,e[56006]=0,e[56007]=0,e[56020]=0,e[56021]=0,e[56022]=0,e[56023]=0,e[56036]=0,e[56037]=0,e[56038]=0,e[56039]=0,e[56052]=0,e[56053]=0,e[56054]=0,e[56055]=0,e[56068]=0,e[56069]=0,e[56070]=0,e[56071]=0,e[56086]=0,e[56087]=0,e[56084]=0,e[56085]=0,e[56102]=0,e[56103]=0,e[56100]=0,e[56101]=0,e[56118]=0,e[56119]=0,e[56116]=0,e[56117]=0,e[56134]=0,e[56135]=0,e[56132]=0,e[56133]=0,e[56150]=0,e[56151]=0,e[56148]=0,e[56149]=0,e[56166]=0,e[56167]=0,e[56164]=0,e[56165]=0,e[56182]=0,e[56183]=0,e[56180]=0,e[56181]=0,e[56198]=0,e[56199]=0,e[56196]=0,e[56197]=0,e[56214]=0,e[56215]=0,e[56212]=0,e[56213]=0,e[56230]=0,e[56231]=0,e[56228]=0,e[56229]=0),t=B[o+4>>1]|B[o+6>>1]<<16,r=B[o>>1]|B[o+2>>1]<<16,I[113562]=r,I[113563]=r>>>16,I[113564]=t,I[113565]=t>>>16,t=B[o+60>>1]|B[o+62>>1]<<16,r=B[o+56>>1]|B[o+58>>1]<<16,I[113590]=r,I[113591]=r>>>16,I[113592]=t,I[113593]=t>>>16,t=B[o+52>>1]|B[o+54>>1]<<16,r=B[o+48>>1]|B[o+50>>1]<<16,I[113586]=r,I[113587]=r>>>16,I[113588]=t,I[113589]=t>>>16,t=B[o+44>>1]|B[o+46>>1]<<16,r=B[o+40>>1]|B[o+42>>1]<<16,I[113582]=r,I[113583]=r>>>16,I[113584]=t,I[113585]=t>>>16,t=B[o+36>>1]|B[o+38>>1]<<16,r=B[o+32>>1]|B[o+34>>1]<<16,I[113578]=r,I[113579]=r>>>16,I[113580]=t,I[113581]=t>>>16,t=B[o+28>>1]|B[o+30>>1]<<16,r=B[o+24>>1]|B[o+26>>1]<<16,I[113574]=r,I[113575]=r>>>16,I[113576]=t,I[113577]=t>>>16,t=B[o+20>>1]|B[o+22>>1]<<16,r=B[o+16>>1]|B[o+18>>1]<<16,I[113570]=r,I[113571]=r>>>16,I[113572]=t,I[113573]=t>>>16,t=B[o+12>>1]|B[o+14>>1]<<16,r=B[o+8>>1]|B[o+10>>1]<<16,I[113566]=r,I[113567]=r>>>16,I[113568]=t,I[113569]=t>>>16,P=+(0|f),(de=1&I[d>>1])?(t=u[d+39|0],e[56680]=t,G[28364]=t>>>0,G[28354]=+(u[o+39|0]-t<<6)/P,t=u[d+40|0],G[28366]=t>>>0,G[28356]=+(u[o+40|0]-t<<6)/P,t=u[d+41|0],e[56682]=t,G[28368]=t>>>0,G[28358]=+(u[o+41|0]-t<<6)/P,r=u[d+42|0],e[56684]=r,G[28370]=r>>>0,t=u[d+43|0],a=+(u[o+43|0]-t<<6)/P,y=+(u[o+42|0]-r<<6)/P,M=+(t>>>0)):(e[56728]=0,e[56729]=0,t=0,e[56680]=0,e[56708]=0,e[56709]=0,e[56732]=0,e[56733]=0,e[56712]=0,e[56713]=0,e[56682]=0,e[56736]=0,e[56737]=0,e[56716]=0,e[56717]=0,e[56684]=0,e[56740]=0,e[56741]=0,M=0),e[56688]=t,G[28360]=y,G[28372]=M,G[28362]=a,e[56692]=0,e[56748]=0,e[56749]=0,e[56694]=0,e[56752]=0,e[56753]=0,e[56696]=0,e[56756]=0,e[56757]=0,e[56700]=0,e[56760]=0,e[56761]=0,e[56704]=0,e[56764]=0,e[56765]=0,e[50764]=f,t=1;ae=I[164+(q=(f=t<<1)+m|0)>>1],r=(Mt=K(t,80))+222896|0,y=+I[q+218>>1],a=.00390625*+(0|K(ae,I[2+(d+f|0)>>1]))+y,G[r+16>>3]=a,ye=ve(a)<2147483648?~~a:-2147483648,e[r>>2]=ye,G[r+48>>3]=64*(.00390625*+(0|K(ae,I[2+(o+f|0)>>1]))+y-a)/P,t>>>0<=3&&(r=Mt+222896|0,a=.00390625*+I[q+200>>1]*+(u[35+(t+d|0)|0]<<1),G[r+24>>3]=a,f=ve(a)<2147483648?~~a:-2147483648,e[r+4>>2]=f,G[r+56>>3]=64*(+(u[35+(t+o|0)|0]<<1)-a)/P),(0|(t=t+1|0))!=6;);if(a=+((t=u[d+40|0])<<1),G[27864]=a,r=e[56618],t||(a=+(0|r),G[27864]=a),t=ve(a)<2147483648?~~a:-2147483648,e[55724]=t,f=u[o+40|0],e[55730]=0,e[55731]=1079394304,e[55738]=0,e[55739]=0,e[55725]=89,t=1,G[27868]=64*(+(0|(f?f<<1:r))-a)/P,de)for(;r=K(t,80)+222896|0,m=u[56+(f=t+d|0)|0]<<2,e[r+12>>2]=m,a=+(0|m),G[r+40>>3]=a,m=t+o|0,G[r+72>>3]=64*(+(u[m+56|0]<<2)-a)/P,f=u[f+49|0],e[r+8>>2]=f,a=+(f>>>0),G[r+32>>3]=a,G[r- -64>>3]=64*(+u[m+49|0]-a)/P,(0|(t=t+1|0))!=7;);e[56606]=0}for(;;){if((0|(ye=e[50764]))>(0|(o=e[56606]))){for(t=e[50767],e[56609]=e[55724],e[56619]=e[55725],e[56610]=e[55744],e[56611]=e[55764],e[56612]=e[55784],e[56613]=e[55804],de=K(t,10),e[56607]=(0|de)/4096,e[56620]=e[55745],e[56621]=e[55765],e[56622]=e[55785],e[56614]=e[55824],e[56630]=e[55746],e[56631]=e[55766],e[56632]=e[55786],e[56633]=e[55806],e[56634]=e[55826],e[56635]=e[55846],Mt=e[56680],e[56608]=Mt,d=e[56694],e[56656]=d,f=e[56696],e[56653]=f,m=e[56700],e[56655]=m,q=e[56684],e[56649]=q,e[56651]=e[56704],e[56654]=e[56688],e[56652]=e[56682],e[56650]=e[56692],t=0;r=K(t,80)+222896|0,a=G[r+48>>3]+G[r+16>>3],G[r+16>>3]=a,P=G[r+56>>3]+G[r+24>>3],G[r+24>>3]=P,y=G[r+72>>3]+G[r+40>>3],G[r+40>>3]=y,M=G[r- -64>>3]+G[r+32>>3],G[r+32>>3]=M,ae=ve(a)<2147483648?~~a:-2147483648,e[r>>2]=ae,ae=ve(P)<2147483648?~~P:-2147483648,e[r+4>>2]=ae,ae=ve(y)<2147483648?~~y:-2147483648,e[r+12>>2]=ae,ae=ve(M)<2147483648?~~M:-2147483648,e[r+8>>2]=ae,(0|(t=t+1|0))!=9;);for(a=G[28354]+G[28364],G[28364]=a,G[28366]=G[28356]+G[28366],P=G[28358]+G[28368],G[28368]=P,y=G[28360]+G[28370],G[28370]=y,M=G[28362]+G[28372],G[28372]=M,t=ve(a)<2147483648?~~a:-2147483648,e[56680]=t,t=ve(P)<2147483648?~~P:-2147483648,e[56682]=t,t=ve(y)<2147483648?~~y:-2147483648,e[56684]=t,t=ve(M)<2147483648?~~M:-2147483648,e[56688]=t,a=G[28374]+0,G[28374]=a,t=ve(a)<2147483648?~~a:-2147483648,e[56692]=t,a=G[28376]+0,G[28376]=a,t=ve(a)<2147483648?~~a:-2147483648,e[56694]=t,a=G[28378]+0,G[28378]=a,t=ve(a)<2147483648?~~a:-2147483648,e[56696]=t,a=G[28380]+0,G[28380]=a,t=ve(a)<2147483648?~~a:-2147483648,e[56700]=t,a=G[28382]+0,G[28382]=a,t=ve(a)<2147483648?~~a:-2147483648,e[56704]=t,e[56659]=e[55724],e[56669]=e[55725],e[56660]=e[55744],e[56670]=e[55745],e[56661]=e[55764],e[56671]=e[55765],e[56662]=e[55784],e[56672]=e[55785],e[56663]=e[55804],e[56664]=e[55824],e[56665]=e[55844],t=e[50768]+e[50769]|0,e[50768]=t,t>>=8,e[50767]=e[50770]+(K(e[50771],u[e[50766]+((0|t)>=127?127:t)|0])>>8),t=ye-o|0,e[55923]=(0|t)>=64?64:t,e[55961]=(0|de)/40960,t=Mt-7|0,e[56658]=(0|t)>0?t:0,G[27974]=q>>>0<=87?.001*+I[111136+(q<<1)>>1]*.05:0,G[27975]=f>>>0<=87?.001*+I[111136+(f<<1)>>1]*.25:0,G[27973]=d>>>0<=87?.001*+I[111136+(d<<1)>>1]:0,G[27971]=m>>>0<=87?.001*+I[111136+(m<<1)>>1]*.05:0,a=(t=e[56629])>>>0<=87?.001*+I[111136+(t<<1)>>1]*.6:0,G[s>>3]=a,a=(t=e[56630])>>>0<=87?.001*+I[111136+(t<<1)>>1]*.4:0,G[s+8>>3]=a,a=(t=e[56631])>>>0<=87?.001*+I[111136+(t<<1)>>1]*.15:0,G[s+16>>3]=a,a=(t=e[56632])>>>0<=87?.001*+I[111136+(t<<1)>>1]*.06:0,G[s+24>>3]=a,a=(t=e[56633])>>>0<=87?.001*+I[111136+(t<<1)>>1]*.04:0,G[s+32>>3]=a,a=(t=e[56634])>>>0<=87?.001*+I[111136+(t<<1)>>1]*.022:0,G[s+40>>3]=a,a=(t=e[56635])>>>0<=87?.001*+I[111136+(t<<1)>>1]*.03:0,G[s+48>>3]=a,a=(t=(0|(t=e[56657]-3|0))<=0?57:t)>>>0<=87?.001*+I[111136+(t<<1)>>1]:0,G[27977]=a/+e[55964],P=G[27968],y=G[27967],t=1;r=223664+(o=t<<6)|0,M=(a=ys(y*+e[48+(f=226428+(d=t<<2)|0)>>2]))*-a,G[r+216>>3]=M,a*=yn(P*+e[f+8>>2]),a+=a,G[r+208>>3]=a,ot=1-a-M,G[r+200>>3]=ot,t>>>0<=5&&(f=e[208+(d=d+226428|0)>>2],r=o+223664|0,qe=(Be=ys(y*+e[d+248>>2]))*yn(P*+(0|f)),qe+=qe,G[r+1488>>3]=qe,Be*=-Be,G[r+1496>>3]=Be,pt=1-qe-Be,G[r+1480>>3]=pt,G[r+256>>3]=.015625*(Be-M),G[r+248>>3]=.015625*(qe-a),G[r+240>>3]=.015625*(pt-ot)),(0|(t=t+1|0))!=10;);for(Be=(a=ys(y*+e[56619]))*-a,G[27985]=Be,qe=(a*=yn(P*+(0-e[56609]|0)))+a,G[27984]=qe,a=1-qe-Be,G[27983]=a,a!=0&&(a=1/a,G[27983]=a,Be*=M=-a,G[27985]=Be,qe*=M,G[27984]=qe),ot=(M=ys(y*+e[56669]))*-M,G[28145]=ot,pt=(M*=yn(P*+(0-e[56659]|0)))+M,G[28144]=pt,M=1-pt-ot,G[28143]=M,M!=0&&(M=1/M,G[28143]=M,ot*=Xt=-M,G[28145]=ot,pt*=Xt,G[28144]=pt),G[27990]=.015625*(ot-Be),G[27989]=.015625*(pt-qe),G[27988]=.015625*(M-a),t=0;d=e[8+(o=226428+(t<<2)|0)>>2],r=223664+(t<<6)|0,M=(a=ys(y*+e[o+128>>2]))*yn(P*+(0|d)),M+=M,G[r+848>>3]=M,a*=-a,G[r+856>>3]=a,G[r+840>>3]=G[s+(t<<3)>>3]*(1-M-a),(0|(t=t+1|0))!=7;);if(y=(a=ys(y*+(e[55918]/2|0)))*-a,G[28137]=y,a*=yn(0*P),a+=a,G[28136]=a,G[28135]=1-a-y,t=1,(0|gr())!=1)continue;break b}break}t=1,e[54741]>0&&(e[54741]=0,e[55963]=64,e[56606]=o+-64,e[55923]=64,(0|gr())==1)||(t=0)}else{if(pe=q=pe-752|0,!r){wr(t=q+376|0,0,376),ei(m,d,t),ei(m,o,t=wr(q,0,376)),r=e[50768]+K(e[50769],f>>>6|0)|0,e[50768]=r,r>>=8,r=e[50770]+(K(e[50771],u[e[50766]+((0|r)>=127?127:r)|0])>>8)|0,e[50767]=r,G[t+368>>3]=(0|r)/4096|0,e[50773]&&(G[t+736>>3]=G[t+736>>3]/5,G[t+360>>3]=G[t+360>>3]/5),r=e[e[56797]+4>>2],os[e[e[r>>2]>>2]](r,t+376|0,110,110,-1,0),o=f-110|0,m=e[50758],r=e[50757];m:{for(;;){if((0|m)!=(0|(r=(r+1|0)%170|0))&&!((ae=e[216192+(r<<4)>>2])-5>>>0<2)){if(d=1,(0|ae)!=1)continue;break m}break}o=f-220|0,d=0}(0|o)>0&&(r=e[e[56797]+4>>2],os[e[e[r>>2]>>2]](r,t,o,o||1,-1,0)),d||(e[t+352>>2]=0,e[t+356>>2]=0,G[t>>3]=G[t+368>>3],r=e[e[56797]+4>>2],os[e[e[r>>2]>>2]](r,t,55,55,-1,0),e[t+360>>2]=0,e[t+364>>2]=0,r=e[e[56797]+4>>2],os[e[e[r>>2]>>2]](r,t,55,55,-1,0))}t=e[e[56797]+8>>2],r=e[51290],f=0|os[e[e[t>>2]>>2]](t,e[54046]-r>>>1|0,r),m=e[51290];m:if(f&&!((0|(r=e[50776]))>=(0|(Mt=e[50773]))))for(Ft=e[50777],Ar=(0|K(Ft,3))/-4|0,a=.0009765625*+e[50780],ae=e[50772],o=e[50778],Mr=e[50775],ye=e[50774],t=0;;){if(de=u[ae+(d=r+o|0)|0],ye?de=K(ye,de<<24>>24):(r=r+1|0,e[50776]=r,de|=g[ae+(d=r+o|0)|0]<<8),de=ve(P=a*+(0|de))<2147483648?~~P:-2147483648,I[(Lt=m+(t<<1)|0)>>1]=B[Lt>>1]+((0|K(de,Mr))/40|0),(0|d)>=(0|Ft)&&(o=o+Ar|0,e[50778]=o),r=r+1|0,e[50776]=r,(0|r)>=(0|Mt))break m;if(!(f>>>0>(t=t+1|0)>>>0))break}t=m+(f<<1)|0,e[51290]=t,pe=q+752|0,t=ue[54046]<=t>>>0}if(pe=s- -64|0,t)break i;break c}e[50781]=t||100;break c}Bi(t,e[s+8>>2]);break c}t=e[s+8>>2],e[50759]=ds(203816,t,1344),e[50801]=e[t+108>>2]?105792:106064,t=(0|K(e[t+120>>2],26))/100|0,e[33038]=t,(0|(i=e[50754]))<=11e3&&(g[203300]=1,e[33038]=t<<1),e[54728]=e[50982],t=e[50979],r=e[50978],wr(205184,0,11e3),e[51293]=0,t=(r=(d=(0|(o=e[50789]))>0)?130:(0|r)>=5499?5499:r)?d?o:(0|t)>=100?100:t:0,e[50755]=t,r=(0|K(r,i))/1e3|0,e[51292]=r,e[54729]=(0|t)>20?r<<1:t?r:0,e[33037]=(0|K(500-t|0,(0|K(u[e[50797]+105596|0],(0|K(e[50787],55))/100|0))/16|0))/500,t=256,(0|(r=(0|(r=e[50785]))>=101?101:r))>=51&&(t=256+(((K(r,25)-1250&65535)>>>0)/50|0)|0),I[101990]=(0|K(I[102026],t))/256,I[101991]=(0|K(I[102027],t))/256,I[101992]=(0|K(I[102028],t))/256,I[101993]=(0|K(I[102029],t))/256,I[101994]=(0|K(I[102030],t))/256,I[101995]=(0|K(I[102031],t))/256,t=e[50790],I[101999]=(0|K(I[102035],K(t,-6)+256|0))/256,I[102e3]=(0|K(I[102036],K(t,-3)+256|0))/256,Rr(8,0,e[50986],0,e[51290]),tr(e[s+8>>2]);break c}if(!e[50759])break c;r=e[s+12>>2],s=e[s+8>>2],e[55911]=0,e[55915]=t?2097152/(0|t)|0:0,e[55910]=s,t=(0|K(r,e[33037]))/16|0,e[50779]=t,e[50780]=(0|K(K(t,e[50985]),15))/100;break c}Rr(r>>8,t,e[s+8>>2],e[s+12>>2],d)}i=0,t=e[50757]+1|0,e[50757]=(0|t)<=169?t:0}if(g[218920]=i,!((d=e[51290])>>>0<ue[54046]))break}o=e[34391],s=(e[51290]-o|0)/2|0,e[34439]=s+e[34439],r=e[34436],t=e[34388]+K(r,36)|0,e[t+4>>2]=0,e[t>>2]=0,e[t+24>>2]=e[34438];n:if(2&(t=e[32538])){if(d=e[34388],(-2&t)==2&&(!(s=r?d:0)|e[s>>2]!=8||(0|(s=e[s+28>>2]))!=e[34389]&&(e[34389]=s)),i=1,(0|r)<2)break n;for(;;){s=r?d+K(i,36)|0:0;i:{c:switch(0|t){case 2:case 3:if(!s|e[s>>2]!=8||(0|(s=e[s+28>>2]))==e[34389])break i;e[34389]=s;break i;case 0:break c;default:break i}(t=e[34440])?(os[0|t](o,0,s),r=e[34436],t=e[32538]):t=0}if(!((0|(i=i+1|0))<(0|r)))break}}else if((t=e[34440])&&0|os[0|t](o,s,e[34388]))break s;if(!kt(1)&&!(170-((0|(t=e[50757]-e[50758]|0))<=0?t+170|0:t)|0||(t=e[34388],e[t>>2]=0,e[t+4>>2]=e[34437],e[t+24>>2]=e[34438],ge(1))))break}if(r=0,2&u[130152]||!(t=e[34440])||!(0|os[0|t](0,0,e[34388])))break t}ge(2),r=268439295}if((0|r)<=268437502){if(!r|(0|r)==268436479|(0|r)!=268437247)break e;return}}}function kt(t){var r,s=0,a=0,i=0,o=0,d=0,f=0,m=0,M=0,y=0,P=0,q=0,ae=0,de=0,ye=0,Be=0,qe=0,ot=0,pt=0,Mt=0,Ft=0,Lt=0;pe=r=pe-720|0,s=e[47198],t||(e[36443]=0,e[36442]=1,e[36444]=0,e[36440]=0,e[36441]=0,t=e[50758],e[36454]=t,e[36427]=-1,e[36424]=-1,e[36446]=0,e[36447]=0,e[36439]=-1,e[36426]=0,e[36455]=t,e[36448]=0,e[36449]=0,e[36450]=0,e[36451]=0,e[36452]=0,e[36453]=0,oa(),e[36427]=-1,t=216192+(e[50758]<<4)|0,e[t>>2]=5,e[t+4>>2]=0,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0,e[36426]=0,e[36438]&&(e[36438]=0,t=216192+(e[50758]<<4)|0,e[t>>2]=14,e[t+4>>2]=0,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0));e:{t:if(!((0|(t=e[36442]))>997|e[36423]<=(0|t)))for(de=s>>>1&1,ye=r+48|4,Be=r+348|0,qe=r+652|0,ot=e[32322],P=e[32320],pt=r+60|0,Mt=r+648|0,Ft=r+56|0,Lt=r+620|0,q=r- -64|0;;){if(a=145840+(t<<5)|0,!(t=e[50756])|!e[t>>2]||(e[r+12>>2]=0,Wn(t=r+16|0,e[a+8>>2],a,0,r+12|0),s=iA(t),i=u[a+17|0],t=216192+(e[50758]<<4)|0,e[t>>2]=16,e[t+8>>2]=i,e[t+4>>2]=s,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0),t=1,(0|(i=(0|(s=e[50757]-e[50758]|0))<=0?s+170|0:s))<=(0|((s=u[a+17|0])?(0|s)==2?25:15:10)))break e;if(M=e[36442],2&u[0|a])for(y=2047&B[a+4>>1];;){if(i=e[36443],f=127&(s=e[198304+(i<<2)>>2])){t=s>>>8|0,e[36443]=i+1;s:{n:{switch((31&s)-2|0){case 0:Bi(96&s|8,t),cn(2);break s;case 5:if((0|t)>=e[34064]||!e[4+(f=136272+(i=t<<4)|0)>>2])break s;Kt(10,0),t=216192+(e[50758]<<4)|0,e[t>>2]=6,f=e[f+4>>2],e[t+8>>2]=e[8+(i+136272|0)>>2]+44,e[t+12>>2]=5376,e[t+4>>2]=f;break n;case 8:if((0|((0|(i=e[50757]-e[50758]|0))<=0?i+170:i))<6)break s;f=e[47353],i=216192+(e[50758]<<4)|0,e[i>>2]=778,e[i+8>>2]=t,e[i+4>>2]=f+y&16777215;break n;case 9:if((0|((0|(i=e[50757]-e[50758]|0))<=0?i+170:i))<6)break s;f=e[33284],i=216192+(e[50758]<<4)|0,e[i>>2]=1034,e[i+8>>2]=t,e[i+4>>2]=f+1&16777215;break n}Kt(10,0),i=216192+(e[50758]<<4)|0,e[i>>2]=12,e[i+8>>2]=t,e[i+4>>2]=f}t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0}if(!(128&s))continue}break}(t=u[a+20|0])&&(1&g[e[47192]+48|0]&u[a+17|0]==2|1&g[e[a+8>>2]+7|0]||(e[36426]=0),s=e[47353]+(2047&B[a+4>>1])|0,e[36445]=s,4&t&&((0|((0|(t=e[50757]-e[50758]|0))<=0?t+170:t))<6||(i=e[47568],t=216192+(e[50758]<<4)|0,e[t>>2]=522,e[t+8>>2]=i,e[t+4>>2]=16777215&s,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0)),1&g[a+20|0]&&(s=B[a+4>>1],i=e[36444],e[36444]=i+1,(0|((0|(t=e[50757]-e[50758]|0))<=0?t+170:t))<6||(y=e[36445],f=e[47355],t=216192+(e[50758]<<4)|0,e[t>>2]=266,e[t+8>>2]=i+f,e[t+4>>2]=16777215&y|(63488&s)<<13,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0))),(0|(t=e[36441]))>0&&(s=216192+(e[36425]<<4)|0,e[s+4>>2]||(e[s+4>>2]=t),e[36441]=0),t=M+1<<5,s=M-1<<5,!(i=u[a+18|0])|2&u[e[a+8>>2]+7|0]||Kt(i,1),f=t+145840|0,o=s+145840|0,y=1;s:{n:{if(e[47198]&&(m=e[a+8>>2],u[m+10|0]!=15)){i:if(u[a+17|0]==2)switch(u[o+17|0]-3|0){case 0:case 5:break n;default:break i}y=0,Wn(r+704|0,m,a,de,0),(0|((0|(t=e[50757]-e[50758]|0))<=0?t+170:t))<6||(s=e[36445],t=216192+(e[50758]<<4)|0,e[t>>2]=1802,e[t+4>>2]=16777215&s,s=e[r+708>>2],e[t+8>>2]=e[r+704>>2],e[t+12>>2]=s,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0)}i:switch(u[a+17|0]){case 0:Kt(e[a+12>>2],0),g[a+23|0]=u[e[a+8>>2]+14|0];break s;case 4:s=e[a+8>>2],(0|(t=u[f+17|0]))==2|!u[f+20|0]&(0|t)==3||(I[a>>1]=8192|B[a>>1]),2&u[s+7|0]&&(e[r+88>>2]=0,e[r+92>>2]=0,e[r+80>>2]=0,e[r+84>>2]=0,e[r+72>>2]=0,e[r+76>>2]=0,e[q>>2]=0,e[q+4>>2]=0,e[r+56>>2]=0,e[r+60>>2]=0,e[r+48>>2]=0,e[r+52>>2]=0,Cs(0,1,a,r+552|0,145784),e[r+56>>2]=e[r+620>>2],e[q>>2]=e[r+640>>2],e[36424]<0&&(i=u[f+19|0],t=e[50758],e[36425]=t,e[36441]=0,e[12+(t=216192+(t<<4)|0)>>2]=i,e[t+8>>2]=0,e[t>>2]=8,e[t+4>>2]=0,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0,y=u[f+22|0],i=u[f+21|0],f=e[129280+(u[a+16|0]<<2)>>2],(0|(t=e[36424]))<0|(0|(m=e[36440]))<=0||e[4+(t=216192+(t<<4)|0)>>2]||(e[t+4>>2]=m),t=e[50758],e[36424]=t,e[36440]=0,e[(t=216192+(t<<4)|0)>>2]=9,e[t+4>>2]=0,y|=i<<16,i=(0|i)==255,e[t+12>>2]=i?3604556:y,e[t+8>>2]=i?P:f,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0),Ht(s,0,r+48|0,a,0)),Cs(0,0,a,r+552|0,145784),e[r+552>>2]=4|e[r+552>>2],(0|(t=e[36440]))<=0||(0|(s=e[36424]))<0||(e[4+(s=216192+(s<<4)|0)>>2]||(e[s+4>>2]=t),e[36440]=0),e[36426]=0,e[36439]=-1,e[36455]=e[50758],oa(),e[36427]=-1,e[36422]=0,(t=e[r+624>>2])&&(i=t,t=e[r+644>>2],ri(i,2,e[r+596>>2]<<1,e[r+552>>2],0,t?(t<<5)/100|0:32)),e[36426]=0;break s;case 6:Cs(0,0,a,r+552|0,145784),8&u[0|a]&&(t=e[a+12>>2],(0|(s=e[36440]))<=0||(0|(i=e[36424]))<0||(e[4+(i=216192+(i<<4)|0)>>2]||(e[i+4>>2]=s),e[36440]=0),e[36426]=0,e[36439]=-1,e[36455]=e[50758],oa(),e[36427]=-1,e[36422]=0,(s=e[r+624>>2])&&(i=t,t=e[r+644>>2],ri(s,2,e[r+596>>2]<<1,e[r+552>>2],i,t?(t<<5)/100|0:32))),t=e[a+12>>2],(0|(s=e[36440]))<=0||(0|(i=e[36424]))<0||(e[4+(i=216192+(i<<4)|0)>>2]||(e[i+4>>2]=s),e[36440]=0),e[36426]=0,e[36439]=-1,e[36455]=e[50758],oa(),e[36427]=-1,e[36422]=0,(s=e[r+624>>2])&&(i=t,t=e[r+644>>2],ri(s,2,e[r+596>>2]<<1,e[r+552>>2],i,t?(t<<5)/100|0:32)),e[36426]=0;break s;case 5:i=e[a+8>>2],e[ye+40>>2]=0,e[(t=ye)+32>>2]=0,e[t+36>>2]=0,e[t+24>>2]=0,e[t+28>>2]=0,e[t+16>>2]=0,e[t+20>>2]=0,e[t+8>>2]=0,e[t+12>>2]=0,e[t>>2]=0,e[t+4>>2]=0,e[r+48>>2]=4;c:{A:{d:{l:switch(u[f+17|0]-2|0){case 0:s=u[a+19|0],t=e[50758],e[36425]=t,e[36441]=0,e[12+(t=216192+(t<<4)|0)>>2]=s,e[t+8>>2]=0,e[t>>2]=8,e[t+4>>2]=0,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0,s=u[a+22|0],m=u[a+21|0],y=e[129280+(u[a+16|0]<<2)>>2],(0|(t=e[36424]))<0|(0|(d=e[36440]))<=0||e[4+(t=216192+(t<<4)|0)>>2]||(e[t+4>>2]=d),t=(d=!(255&~m))?P:y,y=1;break A;case 1:break l;default:break d}if(!u[f+20|0]){s=u[f+19|0],t=e[50758],e[36425]=t,e[36441]=0,e[12+(t=216192+(t<<4)|0)>>2]=s,e[t+8>>2]=0,e[t>>2]=8,e[t+4>>2]=0,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0,s=u[f+22|0],m=u[f+21|0],y=e[129280+(u[f+16|0]<<2)>>2],(0|(t=e[36424]))<0|(0|(d=e[36440]))<=0||e[4+(t=216192+(t<<4)|0)>>2]||(e[t+4>>2]=d),t=(d=!(255&~m))?P:y,y=1;break A}}if(y=0,e[36424]>=0)break c;s=u[f+19|0],t=e[50758],e[36425]=t,e[36441]=0,e[12+(t=216192+(t<<4)|0)>>2]=s,e[t+8>>2]=0,e[t>>2]=8,e[t+4>>2]=0,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0,s=u[a+22|0],m=u[a+21|0],y=e[129280+(u[a+16|0]<<2)>>2],(0|(t=e[36424]))<0|(0|(d=e[36440]))<=0||e[4+(t=216192+(t<<4)|0)>>2]||(e[t+4>>2]=d),t=(d=!(255&~m))?P:y,y=0}ae=e[50758],e[36424]=ae,e[36440]=0,e[(ae=216192+(ae<<4)|0)>>2]=9,e[ae+4>>2]=0,e[ae+12>>2]=d?3604556:255&s|(255&m)<<16,e[ae+8>>2]=t,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0}c:if(!(2&u[i+7|0])&u[o+17|0]!=2)8&u[0|a]&&Kt(50,0);else{if(Cs(0,1,a,r+552|0,145784),e[r+56>>2]=e[r+620>>2],e[r+64>>2]=e[r+640>>2],Ht(i,0,r+48|0,a,0),!(8&u[0|a]))break c;Kt(25,1),Ht(i,0,r+48|0,a,0)}c:if(y){if(e[36455]!=e[36454])break c;e[36455]=e[50758]}else I[a>>1]=8192|B[a>>1];if(Cs(0,0,a,r+552|0,145784),e[r+56>>2]=e[r+620>>2],e[r+64>>2]=e[r+640>>2],e[r+76>>2]=e[r+636>>2],e[r+80>>2]=e[r+656>>2],Ht(i,0,r+48|0,a,0),u[a+20|0]|u[84+(145840+(M<<5)|0)|0]||((0|(t=u[f+17|0]))==7&&(Kt(20,0),t=u[f+17|0]),(255&t)!=6))break s;Kt(12,0);break s;case 7:c:{A:{d:{l:{o:switch((t=u[f+17|0])-2|0){case 1:break l;case 0:break o;default:break d}s=u[a+19|0],t=e[50758],e[36425]=t,e[36441]=0,e[12+(t=216192+(t<<4)|0)>>2]=s,e[t+8>>2]=0,e[t>>2]=8,e[t+4>>2]=0,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0,y=u[a+22|0],t=u[a+21|0],i=e[129280+(u[a+16|0]<<2)>>2],(0|(s=e[36424]))<0|(0|(m=e[36440]))<=0||e[4+(s=216192+(s<<4)|0)>>2]||(e[s+4>>2]=m),s=(m=!(255&~t))?P:i;break A}s=u[f+19|0],t=e[50758],e[36425]=t,e[36441]=0,e[12+(t=216192+(t<<4)|0)>>2]=s,e[t+8>>2]=0,e[t>>2]=8,e[t+4>>2]=0,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0,y=u[f+22|0],t=u[f+21|0],i=e[129280+(u[f+16|0]<<2)>>2],(0|(s=e[36424]))<0|(0|(m=e[36440]))<=0||e[4+(s=216192+(s<<4)|0)>>2]||(e[s+4>>2]=m),s=(m=!(255&~t))?P:i;break A}if(e[36424]>=0)break c;s=u[a+19|0],t=e[50758],e[36425]=t,e[36441]=0,e[12+(t=216192+(t<<4)|0)>>2]=s,e[t+8>>2]=0,e[t>>2]=8,e[t+4>>2]=0,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0,y=u[a+22|0],t=u[a+21|0],i=e[129280+(u[a+16|0]<<2)>>2],(0|(s=e[36424]))<0|(0|(m=e[36440]))<=0||e[4+(s=216192+(s<<4)|0)>>2]||(e[s+4>>2]=m),s=(m=!(255&~t))?P:i}i=e[50758],e[36424]=i,e[36440]=0,e[(i=216192+(i<<4)|0)>>2]=9,e[i+4>>2]=0,e[i+12>>2]=m?3604556:(255&t)<<16|y,e[i+8>>2]=s,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0,t=u[f+17|0]}c:{A:{d:switch((255&t)-2|0){case 1:if(u[f+20|0])break A;break;case 0:break d;default:break A}if(e[36455]!=e[36454])break c;e[36455]=e[50758];break c}I[a>>1]=8192|B[a>>1]}Cs(0,0,a,r+552|0,145784),e[r+56>>2]=0,e[r+60>>2]=0,e[q>>2]=0,e[q+4>>2]=0,e[r+80>>2]=0,e[r+84>>2]=0,e[r+72>>2]=0,e[r+76>>2]=0,e[r+88>>2]=0,e[r+56>>2]=e[r+620>>2],e[q>>2]=e[r+640>>2],e[r+80>>2]=e[r+656>>2],e[r+48>>2]=0,e[r+52>>2]=0,e[r+76>>2]=e[r+636>>2],e[r+92>>2]=e[r+596>>2]<<1,8&u[0|a]&&Ht(e[a+8>>2],0,r+48|0,a,0),Ht(e[a+8>>2],0,r+48|0,a,0);break s;case 8:if(e[r+88>>2]=0,e[r+92>>2]=0,e[r+80>>2]=0,e[r+84>>2]=0,e[r+72>>2]=0,e[r+76>>2]=0,e[q>>2]=0,e[q+4>>2]=0,e[r+56>>2]=0,e[r+60>>2]=0,e[r+48>>2]=0,e[r+52>>2]=0,1&g[0|a]||(s=u[a+19|0],t=e[50758],e[36425]=t,e[36441]=0,e[12+(t=216192+(t<<4)|0)>>2]=s,e[t+8>>2]=0,e[t>>2]=8,e[t+4>>2]=0,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0,i=u[a+22|0],s=u[a+21|0],y=e[129280+(u[a+16|0]<<2)>>2],(0|(t=e[36424]))<0|(0|(m=e[36440]))<=0||e[4+(t=216192+(t<<4)|0)>>2]||(e[t+4>>2]=m),t=e[50758],e[36424]=t,e[36440]=0,e[(t=216192+(t<<4)|0)>>2]=9,e[t+4>>2]=0,i|=s<<16,s=(0|s)==255,e[t+12>>2]=s?3604556:i,e[t+8>>2]=s?P:y,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0),u[o+17|0]==8&&(e[36426]=0),Cs(0,0,a,r+552|0,145784),e[r+56>>2]=e[r+620>>2],e[r+64>>2]=e[r+640>>2],e[r+92>>2]=e[r+596>>2]<<1,u[f+17|0]==2){e[36455]==e[36454]&&(e[36455]=e[50758]),Ht(e[a+8>>2],0,r+48|0,a,0);break s}if(!(!(1&g[0|a])|u[o+17|0]!=2)){Ht(e[a+8>>2],0,r+48|0,a,0);break s}e[36426]=0,Ht(e[a+8>>2],0,r+48|0,a,0),e[36426]=0;break s;case 3:e[r+88>>2]=0,e[r+92>>2]=0,e[r+80>>2]=0,e[r+84>>2]=0,e[r+72>>2]=0,e[r+76>>2]=0,e[q>>2]=0,e[q+4>>2]=0,e[r+56>>2]=0,e[r+60>>2]=0,e[r+48>>2]=0,e[r+52>>2]=0,i=e[e[a+8>>2]+4>>2],1&g[0|a]||(s=u[a+19|0],t=e[50758],e[36425]=t,e[36441]=0,e[12+(t=216192+(t<<4)|0)>>2]=s,e[t+8>>2]=0,e[t>>2]=8,e[t+4>>2]=0,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0,y=u[a+22|0],s=u[a+21|0],m=e[129280+(u[a+16|0]<<2)>>2],(0|(t=e[36424]))<0|(0|(d=e[36440]))<=0||e[4+(t=216192+(t<<4)|0)>>2]||(e[t+4>>2]=d),t=e[50758],e[36424]=t,e[36440]=0,e[(t=216192+(t<<4)|0)>>2]=9,e[t+4>>2]=0,y|=s<<16,s=(0|s)==255,e[t+12>>2]=s?3604556:y,e[t+8>>2]=s?P:m,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0),u[o+17|0]==8&&(e[36426]=0),u[f+17|0]!=2|e[36455]!=e[36454]||(e[36455]=e[50758]),Cs(0,0,a,r+552|0,145784),(0|(t=e[r+584>>2]-u[a+18|0]|0))>0&&Kt(t,1),e[r+56>>2]=e[r+620>>2],e[r+64>>2]=e[r+640>>2],e[r+76>>2]=e[r+636>>2],e[r+80>>2]=e[r+656>>2],e[r+92>>2]=e[r+596>>2]<<1,Ht(e[a+8>>2],0,r+48|0,a,i<<24>>31&5);break s;case 2:break i;default:break s}m=e[a+8>>2]}M=u[a+3|0],e[r+88>>2]=0,e[r+92>>2]=0,e[r+80>>2]=0,e[r+84>>2]=0,e[r+72>>2]=0,e[r+76>>2]=0,e[q>>2]=0,e[q+4>>2]=0,e[r+56>>2]=0,e[r+60>>2]=0,e[r+48>>2]=0,e[r+52>>2]=0,Cs(0,0,a,r+552|0,145784),t=e[r+628>>2],e[r+56>>2]=t,e[r+92>>2]=e[r+596>>2]<<1;n:{if(!t||(d=0,i=Mt,s=pt,2&u[r+552|0])){if(u[o+17|0]?(d=0,Cs(0,0,o,r+400|0,0),t=e[r+476>>2],e[r+56>>2]=t,!t|!(2&u[r+400|0])||(e[r+72>>2]=e[r+496>>2],d=1),s=e[r+512>>2],e[r+84>>2]=e[r+508>>2],e[r+88>>2]=s):d=0,t)break n;e[r+48>>2]=1,e[r+52>>2]=1,i=Lt,s=Ft}e[s>>2]=e[i>>2]}e[r+64>>2]=e[r+640>>2],s=u[a+16|0],t=0,(i=u[a+7|0])?(Po(i,r+96|0),s=FA(e[r+220>>2]),(0|(i=e[r+224>>2]))<=0||(t=FA(i))):s=e[129280+(s<<2)>>2],e[36455]==e[36454]&&(e[36455]=e[50758]),i=(i=15&M)>>>0<2?1:i>>>0>6?3:2;n:{switch(u[o+17|0]-3|0){case 2:case 4:d=u[a+19|0],o=e[50758],e[36425]=o,e[36441]=0,e[12+(o=216192+(o<<4)|0)>>2]=d,e[o+8>>2]=t,e[o>>2]=8,e[o+4>>2]=0,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0,d=u[a+22|0],o=u[a+21|0],(0|(t=e[36440]))<=0||(0|(M=e[36424]))<0||e[4+(M=216192+(M<<4)|0)>>2]||(e[M+4>>2]=t),t=e[50758],e[36424]=t,e[36440]=0,e[(t=216192+(t<<4)|0)>>2]=9,e[t+4>>2]=0,d|=o<<16,o=(0|o)==255,e[t+12>>2]=o?3604556:d,e[t+8>>2]=o?P:s,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0,Ht(m,1,r+48|0,a,i);break n;case 0:case 5:d=u[a+19|0],o=e[50758],e[36425]=o,e[36441]=0,e[12+(o=216192+(o<<4)|0)>>2]=d,e[o+8>>2]=t,e[o>>2]=8,e[o+4>>2]=0,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0,Ht(m,1,r+48|0,a,i),d=u[a+22|0],o=u[a+21|0],(0|(t=e[36440]))<=0||(0|(M=e[36424]))<0||e[4+(M=216192+(M<<4)|0)>>2]||(e[M+4>>2]=t),t=e[50758],e[36424]=t,e[36440]=0,e[(t=216192+(t<<4)|0)>>2]=9,e[t+4>>2]=0,d|=o<<16,o=(0|o)==255,e[t+12>>2]=o?3604556:d,e[t+8>>2]=o?P:s,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0;break n}d?(d=u[a+22|0],(0|(o=e[36440]))<=0||(0|(M=e[36424]))<0||e[4+(M=216192+(M<<4)|0)>>2]||(e[M+4>>2]=o),o=e[50758],e[36424]=o,e[36440]=0,e[(o=216192+(o<<4)|0)>>2]=9,e[o+4>>2]=0,e[o+12>>2]=(d|d<<16)-983040,e[o+8>>2]=ot,o=e[50758]+1|0,e[50758]=(0|o)<=169?o:0,d=u[a+19|0],o=e[50758],e[36425]=o,e[36441]=0,e[(o=216192+(o<<4)|0)>>2]=8,e[o+4>>2]=0,e[o+12>>2]=d-1,e[o+8>>2]=t,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0,Ht(m,1,r+48|0,a,i),o=u[a+21|0],d=u[a+22|0],(0|(t=e[36440]))<=0||(0|(M=e[36424]))<0||e[4+(M=216192+(M<<4)|0)>>2]||(e[M+4>>2]=t),t=e[50758],e[36424]=t,e[36440]=0,e[(t=216192+(t<<4)|0)>>2]=9,e[t+4>>2]=0,d|=o<<16,o=(0|o)==255,e[t+12>>2]=o?3604556:d,e[t+8>>2]=o?P:s,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0):(1&g[0|a]||(d=u[a+19|0],o=e[50758],e[36425]=o,e[36441]=0,e[12+(o=216192+(o<<4)|0)>>2]=d,e[o+8>>2]=t,e[o>>2]=8,e[o+4>>2]=0,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0,d=u[a+22|0],o=u[a+21|0],(0|(t=e[36440]))<=0||(0|(M=e[36424]))<0||e[4+(M=216192+(M<<4)|0)>>2]||(e[M+4>>2]=t),t=e[50758],e[36424]=t,e[36440]=0,e[(t=216192+(t<<4)|0)>>2]=9,e[t+4>>2]=0,d|=o<<16,o=(0|o)==255,e[t+12>>2]=o?3604556:d,e[t+8>>2]=o?P:s,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0),Ht(m,1,r+48|0,a,i))}!e[47198]|1^y||(Wn(r+704|0,e[a+8>>2],a,de,0),(0|((0|(t=e[50757]-e[50758]|0))<=0?t+170:t))<6||(s=e[36445],t=216192+(e[50758]<<4)|0,e[t>>2]=1802,e[t+4>>2]=16777215&s,s=e[r+708>>2],e[t+8>>2]=e[r+704>>2],e[t+12>>2]=s,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0)),e[r+56>>2]=e[r+620>>2],e[r+84>>2]=0,e[r+88>>2]=0,e[r+64>>2]=e[r+640>>2],s=e[r+632>>2],e[r+68>>2]=s,t=qe;n:{if(!s&&(!u[f+17|0]||(e[r+72>>2]=0,Cs(0,0,f,r+248|0,0),e[r+52>>2]=1,t=e[r+368>>2],e[r+84>>2]=e[r+364>>2],e[r+88>>2]=t,s=e[r+328>>2],e[r+68>>2]=s,t=Be,!s)))break n;e[r+72>>2]=e[t>>2]}Ht(m,2,r+48|0,a,i)}if(t=e[36442]+1|0,e[36442]=t,(0|t)>997)break t;if(!(e[36423]>(0|t)))break}(0|(t=e[36440]))<=0||(0|(s=e[36424]))<0||(e[4+(s=216192+(s<<4)|0)>>2]||(e[s+4>>2]=t),e[36440]=0),e[36426]=0,e[36439]=-1,e[36455]=e[50758],oa(),e[36427]=-1,t=0,e[36423]<=0||(s=e[47568],i=e[33284],(0|((0|(t=e[50757]-e[50758]|0))<=0?t+170:t))>=6&&(t=216192+(e[50758]<<4)|0,e[t>>2]=1290,e[t+8>>2]=s,e[t+4>>2]=16777215&i,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0),e[36423]=0,t=0)}return pe=r+720|0,t}function Dt(t,r,s,a){var i,o=0,d=0,f=0,m=0,M=0,y=0,P=0,q=0,ae=0,de=0,ye=0,Be=0,qe=0,ot=0,pt=0,Mt=0,Ft=0,Lt=0,Xt=0,Ar=0,Mr=0,Tr=0,Yr=0,$r=0,ls=0;pe=i=pe-48|0;e:{if(s>>>0<=2){for(Mr=e[124732+(s<<=2)>>2],Tr=e[s+124720>>2];(0|(s=e[r+4>>2]))==e[r+104>>2]?s=Pt(r):(e[r+4>>2]=s+1,s=u[0|s]),(0|s)==32|s-9>>>0<5;);ae=1;t:{s:switch(s-43|0){case 0:case 2:break s;default:break t}ae=(0|s)==45?-1:1,(0|(s=e[r+4>>2]))==e[r+104>>2]?s=Pt(r):(e[r+4>>2]=s+1,s=u[0|s])}t:{s:{for(;;){if(g[f+84056|0]==(32|s)){if(f>>>0>6||((0|(s=e[r+4>>2]))==e[r+104>>2]?s=Pt(r):(e[r+4>>2]=s+1,s=u[0|s])),(0|(f=f+1|0))!=8)continue;break s}break}if((0|f)!=3){if((0|f)==8)break s;if(!a|f>>>0<4)break t;if((0|f)==8)break s}if((0|(s=e[r+116>>2]))>0|(0|s)>=0&&(e[r+4>>2]=e[r+4>>2]-1),!(!a|f>>>0<4))for(s=(0|s)<0;s||(e[r+4>>2]=e[r+4>>2]-1),(f=f-1|0)>>>0>3;);}pe=P=pe-16|0,Ie(Ve(Ve(0|ae)*Ve(1/0))),(r=2147483647&(m=R(2)))-8388608>>>0<=2130706431?(s=r,s<<=25,a=1065353216+(r=r>>>7|0)|0):(s=m<<25,a=m>>>7|2147418112,r>>>0>=2139095040||(s=0,a=0,r&&(Sa(P,s=r,0,0,0,(r=Re(r))+81|0),y=e[P>>2],M=e[P+4>>2],s=e[P+8>>2],a=65536^e[P+12>>2]|16265-r<<16))),e[i>>2]=y,e[i+4>>2]=M,e[i+8>>2]=s,e[i+12>>2]=-2147483648&m|a,pe=P+16|0,y=e[i+8>>2],M=e[i+12>>2],m=e[i>>2],q=e[i+4>>2];break e}t:{s:{n:if(!f){for(f=0;;){if(g[f+84473|0]!=(32|s))break n;if(f>>>0>1||((0|(s=e[r+4>>2]))==e[r+104>>2]?s=Pt(r):(e[r+4>>2]=s+1,s=u[0|s])),(0|(f=f+1|0))==3)break}break s}switch(0|f){case 0:if((0|s)==48){if((0|(f=e[r+4>>2]))==e[r+104>>2]?f=Pt(r):(e[r+4>>2]=f+1,f=u[0|f]),(-33&f)==88){pe=d=pe-432|0,(0|(s=e[r+4>>2]))==e[r+104>>2]?f=Pt(r):(e[r+4>>2]=s+1,f=u[0|s]);n:{i:{for(;;){if((0|f)!=48){if((0|f)!=46)break n;if((0|(s=e[r+4>>2]))!=e[r+104>>2]){e[r+4>>2]=s+1,f=u[0|s];break i}break}(0|(s=e[r+4>>2]))!=e[r+104>>2]?(Ar=1,e[r+4>>2]=s+1,f=u[0|s]):(Ar=1,f=Pt(r))}f=Pt(r)}if(Be=1,(0|f)==48){for(;qe=(s=qe)-1|0,ot=ot-!s|0,(0|(s=e[r+4>>2]))==e[r+104>>2]?f=Pt(r):(e[r+4>>2]=s+1,f=u[0|s]),(0|f)==48;);Ar=1}}for(q=1073676288;;){n:{s=32|f;i:{if(!((Yr=f-48|0)>>>0<10)){if((0|f)!=46&s-97>>>0>=6)break n;if((0|f)==46){if(Be)break n;Be=1,qe=y,ot=M;break i}}s=(0|f)>57?s-87|0:Yr,(0|M)<=0&y>>>0<=7|(0|M)<0?o=s+(o<<4)|0:!M&y>>>0<=28?(Ga(d+48|0,s),vr(d+32|0,Lt,Xt,m,q,0,0,0,1073414144),Lt=e[d+32>>2],Xt=e[d+36>>2],m=e[d+40>>2],q=e[d+44>>2],vr(d+16|0,e[d+48>>2],e[d+52>>2],e[d+56>>2],e[d+60>>2],Lt,Xt,m,q),sa(d,e[d+16>>2],e[d+20>>2],e[d+24>>2],e[d+28>>2],P,ye,Mt,Ft),Mt=e[d+8>>2],Ft=e[d+12>>2],P=e[d>>2],ye=e[d+4>>2]):de|!s||(vr(d+80|0,Lt,Xt,m,q,0,0,0,1073610752),sa(d- -64|0,e[d+80>>2],e[d+84>>2],e[d+88>>2],e[d+92>>2],P,ye,Mt,Ft),Mt=e[d+72>>2],Ft=e[d+76>>2],de=1,P=e[d+64>>2],ye=e[d+68>>2]),M=(y=y+1|0)?M:M+1|0,Ar=1}(0|(s=e[r+4>>2]))!=e[r+104>>2]?(e[r+4>>2]=s+1,f=u[0|s]):f=Pt(r);continue}break}n:if(Ar){if((0|M)<=0&y>>>0<=7|(0|M)<0)for(m=y,q=M;o<<=4,(0|(m=m+1|0))!=8|(q=m?q:q+1|0););i:{c:{A:{if((-33&f)==80){if(m=Sn(r,a),q=s=X,m|(0|s)!=-2147483648)break i;if(a){if((0|(s=e[r+116>>2]))>0|(0|s)>=0)break A;break c}P=0,ye=0,li(r,0,0),s=0,r=0;break n}if(m=0,q=0,e[r+116>>2]<0)break i}e[r+4>>2]=e[r+4>>2]-1}m=0,q=0}if(o)if(s=m+((r=Be?qe:y)<<2)|0,r=(M=(Be?ot:M)<<2|r>>>30)+q|0,(y=s-32|0)>>>0>0-Mr>>>0&(0|(r=M=(s>>>0<m>>>0?r+1|0:r)-(s>>>0<32)|0))>=0|(0|r)>0)e[56798]=68,Ga(d+160|0,ae),vr(d+144|0,e[d+160>>2],e[d+164>>2],e[d+168>>2],e[d+172>>2],-1,-1,-1,2147418111),vr(d+128|0,e[d+144>>2],e[d+148>>2],e[d+152>>2],e[d+156>>2],-1,-1,-1,2147418111),P=e[d+128>>2],ye=e[d+132>>2],s=e[d+140>>2],r=e[d+136>>2];else if((0|M)>=(0|(s=(r=Mr-226|0)>>31))&r>>>0<=y>>>0|(0|s)<(0|M)){if((0|o)>=0)for(;sa(d+416|0,P,ye,Mt,Ft,0,0,0,-1073807360),sa(d+400|0,P,ye,Mt,Ft,(r=s=(0|(r=ZA(P,ye,Mt,Ft,1073610752)))>=0)?e[d+416>>2]:P,r?e[d+420>>2]:ye,r?e[d+424>>2]:Mt,r?e[d+428>>2]:Ft),y=(r=y)-1|0,M=M-!r|0,Mt=e[d+408>>2],Ft=e[d+412>>2],P=e[d+400>>2],ye=e[d+404>>2],(0|(o=s|o<<1))>=0;);r=M-((Mr>>31)+(y>>>0<Mr>>>0)|0)|0,(0|(s=(s=32+(y-Mr|0)|0)>>>0<Tr>>>0&(0|(r=s>>>0<32?r+1|0:r))<=0|(0|r)<0?(0|s)>0?s:0:Tr))>=113?(Ga(d+384|0,ae),qe=e[d+392>>2],ot=e[d+396>>2],Lt=e[d+384>>2],Xt=e[d+388>>2],m=0,r=0):(Ws(d+352|0,Li(1,144-s|0)),Ga(d+336|0,ae),Lt=e[d+336>>2],Xt=e[d+340>>2],qe=e[d+344>>2],ot=e[d+348>>2],nA(d+368|0,e[d+352>>2],e[d+356>>2],e[d+360>>2],e[d+364>>2],Lt,Xt,qe,ot),pt=e[d+376>>2],$r=e[d+380>>2],m=e[d+372>>2],r=e[d+368>>2]),Ji(d+320|0,(a=!(1&o)&!!(0|rr(P,ye,Mt,Ft,0,0,0,0))&(0|s)<32)+o|0),vr(d+304|0,Lt,Xt,qe,ot,e[d+320>>2],e[d+324>>2],e[d+328>>2],e[d+332>>2]),s=r,sa(d+272|0,e[d+304>>2],e[d+308>>2],e[d+312>>2],e[d+316>>2],r,m,pt,$r),vr(d+288|0,Lt,Xt,qe,ot,(r=a)?0:P,r?0:ye,r?0:Mt,r?0:Ft),sa(d+256|0,e[d+288>>2],e[d+292>>2],e[d+296>>2],e[d+300>>2],e[d+272>>2],e[d+276>>2],e[d+280>>2],e[d+284>>2]),Go(d+240|0,e[d+256>>2],e[d+260>>2],e[d+264>>2],e[d+268>>2],s,m,pt,$r),rr(r=e[d+240>>2],a=e[d+244>>2],s=e[d+248>>2],m=e[d+252>>2],0,0,0,0)||(e[56798]=68),hr(d+224|0,r,a,s,m,y),P=e[d+224>>2],ye=e[d+228>>2],s=e[d+236>>2],r=e[d+232>>2]}else e[56798]=68,Ga(d+208|0,ae),vr(d+192|0,e[d+208>>2],e[d+212>>2],e[d+216>>2],e[d+220>>2],0,0,0,65536),vr(d+176|0,e[d+192>>2],e[d+196>>2],e[d+200>>2],e[d+204>>2],0,0,0,65536),P=e[d+176>>2],ye=e[d+180>>2],s=e[d+188>>2],r=e[d+184>>2];else Ws(d+112|0,0*+(0|ae)),P=e[d+112>>2],ye=e[d+116>>2],s=e[d+124>>2],r=e[d+120>>2]}else{i:{c:{if((0|(s=e[r+116>>2]))>0|(0|s)>=0){if(s=e[r+4>>2],e[r+4>>2]=s-1,!a)break c;if(e[r+4>>2]=s-2,!Be)break i;e[r+4>>2]=s-3;break i}if(a)break i}li(r,0,0)}Ws(d+96|0,0*+(0|ae)),P=e[d+96>>2],ye=e[d+100>>2],s=e[d+108>>2],r=e[d+104>>2]}e[i+16>>2]=P,e[i+20>>2]=ye,e[i+24>>2]=r,e[i+28>>2]=s,pe=d+432|0,y=e[i+24>>2],M=e[i+28>>2],m=e[i+16>>2],q=e[i+20>>2];break e}e[r+116>>2]<0||(e[r+4>>2]=e[r+4>>2]-1)}f=r,pt=ae,d=a,r=0,ae=0,pe=o=pe-8976|0,$r=(Yr=0-Mr|0)-Tr|0;n:{i:{for(;;){if((0|s)!=48){if((0|s)!=46)break n;if((0|(s=e[f+4>>2]))!=e[f+104>>2]){e[f+4>>2]=s+1,s=u[0|s];break i}break}(0|(r=e[f+4>>2]))!=e[f+104>>2]?(e[f+4>>2]=r+1,s=u[0|r]):s=Pt(f),r=1}s=Pt(f)}if(de=1,(0|s)==48){for(;y=(r=y)-1|0,M=M-!r|0,(0|(r=e[f+4>>2]))==e[f+104>>2]?s=Pt(f):(e[f+4>>2]=r+1,s=u[0|r]),(0|s)==48;);r=1}}e[o+784>>2]=0;n:{i:{c:{A:{d:{if((a=(0|s)==46)|(P=s-48|0)>>>0<=9)for(;;){l:{if(1&a){if(!de){y=m,M=q,de=1;break l}a=!r;break d}q=(m=m+1|0)?q:q+1|0,(0|ae)<=2044?(Ar=(0|s)==48?Ar:m,r=(o+784|0)+(ae<<2)|0,Be&&(P=(K(e[r>>2],10)+s|0)-48|0),e[r>>2]=P,r=1,Be=(s=(0|(a=Be+1|0))==9)?0:a,ae=s+ae|0):(0|s)!=48&&(e[o+8960>>2]=1|e[o+8960>>2],Ar=18396)}if((0|(s=e[f+4>>2]))==e[f+104>>2]?s=Pt(f):(e[f+4>>2]=s+1,s=u[0|s]),!((a=(0|s)==46)|(P=s-48|0)>>>0<10))break}if(y=de?y:m,M=de?M:q,!(!r|(-33&s)!=69)){if(P=Sn(f,d),ye=r=X,!(P|(0|r)!=-2147483648)){if(!d)break c;P=0,ye=0,e[f+116>>2]<0||(e[f+4>>2]=e[f+4>>2]-1)}M=M+ye|0,M=(y=y+P|0)>>>0<P>>>0?M+1|0:M;break i}if(a=!r,(0|s)<0)break A}e[f+116>>2]<0||(e[f+4>>2]=e[f+4>>2]-1)}if(!a)break i;e[56798]=28}m=0,q=0,li(f,0,0),s=0,r=0;break n}if(r=e[o+784>>2])if(m>>>0>9&(0|q)>=0|(0|q)>0|(0|m)!=(0|y)|(0|M)!=(0|q)|(r>>>Tr|0?(0|Tr)<=30:0))if(y>>>0>Yr>>>1>>>0&(0|M)>=0|(0|M)>0)e[56798]=68,Ga(o+96|0,pt),vr(o+80|0,e[o+96>>2],e[o+100>>2],e[o+104>>2],e[o+108>>2],-1,-1,-1,2147418111),vr(o- -64|0,e[o+80>>2],e[o+84>>2],e[o+88>>2],e[o+92>>2],-1,-1,-1,2147418111),m=e[o+64>>2],q=e[o+68>>2],s=e[o+76>>2],r=e[o+72>>2];else if((s=y>>>0<(r=Mr-226|0)>>>0)&(0|M)<=(0|(r>>=31))|(0|r)>(0|M))e[56798]=68,Ga(o+144|0,pt),vr(o+128|0,e[o+144>>2],e[o+148>>2],e[o+152>>2],e[o+156>>2],0,0,0,65536),vr(o+112|0,e[o+128>>2],e[o+132>>2],e[o+136>>2],e[o+140>>2],0,0,0,65536),m=e[o+112>>2],q=e[o+116>>2],s=e[o+124>>2],r=e[o+120>>2];else{if(Be){if((0|Be)<=8){for(f=e[(r=(o+784|0)+(ae<<2)|0)>>2];f=K(f,10),(0|(Be=Be+1|0))!=9;);e[r>>2]=f}ae=ae+1|0}if(de=y,!((0|Ar)>(0|y)|(0|Ar)>=9|(0|y)>17)){if((0|de)==9){Ga(o+192|0,pt),Ji(o+176|0,e[o+784>>2]),vr(o+160|0,e[o+192>>2],e[o+196>>2],e[o+200>>2],e[o+204>>2],e[o+176>>2],e[o+180>>2],e[o+184>>2],e[o+188>>2]),m=e[o+160>>2],q=e[o+164>>2],s=e[o+172>>2],r=e[o+168>>2];break n}if((0|de)<=8){Ga(o+272|0,pt),Ji(o+256|0,e[o+784>>2]),vr(o+240|0,e[o+272>>2],e[o+276>>2],e[o+280>>2],e[o+284>>2],e[o+256>>2],e[o+260>>2],e[o+264>>2],e[o+268>>2]),Ga(o+224|0,e[124720+(0-de<<2)>>2]),Gs(o+208|0,e[o+240>>2],e[o+244>>2],e[o+248>>2],e[o+252>>2],e[o+224>>2],e[o+228>>2],e[o+232>>2],e[o+236>>2]),m=e[o+208>>2],q=e[o+212>>2],s=e[o+220>>2],r=e[o+216>>2];break n}if(r=27+(K(de,-3)+Tr|0)|0,!((s=e[o+784>>2])>>>r|0&&(0|r)<=30)){Ga(o+352|0,pt),Ji(o+336|0,s),vr(o+320|0,e[o+352>>2],e[o+356>>2],e[o+360>>2],e[o+364>>2],e[o+336>>2],e[o+340>>2],e[o+344>>2],e[o+348>>2]),Ga(o+304|0,e[124648+(de<<2)>>2]),vr(o+288|0,e[o+320>>2],e[o+324>>2],e[o+328>>2],e[o+332>>2],e[o+304>>2],e[o+308>>2],e[o+312>>2],e[o+316>>2]),m=e[o+288>>2],q=e[o+292>>2],s=e[o+300>>2],r=e[o+296>>2];break n}}for(;!e[(o+784|0)+((ae=(s=ae)-1|0)<<2)>>2];);if(Be=0,r=(0|de)%9|0){if(a=0,r=(0|de)<0?r+9|0:r,s){for(M=1e9/(0|(y=e[124720+(0-r<<2)>>2]))|0,P=0,f=0;m=(m=P)+(ae=((q=e[(P=(o+784|0)+(f<<2)|0)>>2])>>>0)/(y>>>0)|0)|0,e[P>>2]=m,a=(m=!m&(0|a)==(0|f))?a+1&2047:a,de=m?de-9|0:de,P=K(M,q-K(y,ae)|0),(0|(f=f+1|0))!=(0|s););P&&(e[(o+784|0)+(s<<2)>>2]=P,s=s+1|0)}else s=0;de=9+(de-r|0)|0}else a=0;for(;;){f=(o+784|0)+(a<<2)|0;i:{for(;;){if(((0|de)!=36|ue[f>>2]>=10384593)&(0|de)>=36)break i;for(ae=s+2047|0,P=0,r=s;s=r,y=P,P=(r=e[(ae=(o+784|0)+((m=2047&ae)<<2)|0)>>2])<<29,r=q=r>>>3|0,!(M=(y=y+P|0)>>>0<P>>>0?r+1|0:r)&y>>>0<1000000001?P=0:y=(r=y)-ps(P=bo(r,M,1e9),X,1e9,0)|0,e[ae>>2]=y,r=(0|m)!=(s-1&2047)||(0|a)==(0|m)||y?s:m,ae=m-1|0,(0|a)!=(0|m););if(Be=Be-29|0,P)break}(0|(a=a-1&2047))==(0|r)&&(f=s=(y=o+784|0)+((r+2046&2047)<<2)|0,M=e[s>>2],s=r-1&2047,e[f>>2]=M|e[y+(s<<2)>>2]),de=de+9|0,e[(o+784|0)+(a<<2)>>2]=P;continue}break}i:{c:for(;;){for(y=s+1&2047,P=(o+784|0)+((s-1&2047)<<2)|0;;){m=(0|de)>45?9:1;A:{for(;;){r=a,f=0;d:{for(;;){if((0|(a=r+f&2047))!=(0|s)&&!((a=e[(o+784|0)+(a<<2)>>2])>>>0<(M=e[124672+(f<<2)>>2])>>>0)){if(a>>>0>M>>>0)break d;if((0|(f=f+1|0))!=4)continue}break}if((0|de)==36){for(y=0,M=0,f=0,m=0,q=0;(0|(a=r+f&2047))==(0|s)&&(e[780+(o+((s=s+1&2047)<<2)|0)>>2]=0),Ji(o+768|0,e[(o+784|0)+(a<<2)>>2]),vr(o+752|0,y,M,m,q,0,0,1342177280,1075633366),sa(o+736|0,e[o+752>>2],e[o+756>>2],e[o+760>>2],e[o+764>>2],e[o+768>>2],e[o+772>>2],e[o+776>>2],e[o+780>>2]),m=e[o+744>>2],q=e[o+748>>2],y=e[o+736>>2],M=e[o+740>>2],(0|(f=f+1|0))!=4;);if(Ga(o+720|0,pt),vr(o+704|0,y,M,m,q,e[o+720>>2],e[o+724>>2],e[o+728>>2],e[o+732>>2]),m=e[o+712>>2],q=e[o+716>>2],y=0,M=0,P=e[o+704>>2],ye=e[o+708>>2],(0|(a=(ae=(0|(f=(d=Be+113|0)-Mr|0))<(0|Tr))?(0|f)>0?f:0:Tr))<=112)break A;break i}}if(Be=m+Be|0,a=s,(0|r)!=(0|s))break}for(q=1e9>>>m|0,ae=~(-1<<m),f=0,a=r;M=(M=f)+((d=e[(f=(o+784|0)+(r<<2)|0)>>2])>>>m|0)|0,e[f>>2]=M,a=(M=!M&(0|r)==(0|a))?a+1&2047:a,de=M?de-9|0:de,f=K(q,d&ae),(0|s)!=(0|(r=r+1&2047)););if(!f)continue;if((0|a)!=(0|y)){e[(o+784|0)+(s<<2)>>2]=f,s=y;continue c}e[P>>2]=1|e[P>>2];continue}break}break}Ws(o+656|0,Li(1,225-a|0)),nA(o+688|0,e[o+656>>2],e[o+660>>2],e[o+664>>2],e[o+668>>2],P,ye,m,q),Lt=e[o+696>>2],Xt=e[o+700>>2],Mt=e[o+688>>2],Ft=e[o+692>>2],Ws(o+640|0,Li(1,113-a|0)),_a(o+672|0,P,ye,m,q,e[o+640>>2],e[o+644>>2],e[o+648>>2],e[o+652>>2]),Go(o+624|0,P,ye,m,q,y=e[o+672>>2],M=e[o+676>>2],qe=e[o+680>>2],ot=e[o+684>>2]),sa(o+608|0,Mt,Ft,Lt,Xt,e[o+624>>2],e[o+628>>2],e[o+632>>2],e[o+636>>2]),m=e[o+616>>2],q=e[o+620>>2],P=e[o+608>>2],ye=e[o+612>>2]}if((0|(de=r+4&2047))!=(0|s)){i:if((de=e[(o+784|0)+(de<<2)>>2])>>>0<=499999999){if(!de&(r+5&2047)==(0|s))break i;Ws(o+496|0,.25*+(0|pt)),sa(o+480|0,y,M,qe,ot,e[o+496>>2],e[o+500>>2],e[o+504>>2],e[o+508>>2]),qe=e[o+488>>2],ot=e[o+492>>2],y=e[o+480>>2],M=e[o+484>>2]}else(0|de)==5e8?(ls=+(0|pt),(r+5&2047)!=(0|s)?(Ws(o+560|0,.75*ls),sa(o+544|0,y,M,qe,ot,e[o+560>>2],e[o+564>>2],e[o+568>>2],e[o+572>>2]),qe=e[o+552>>2],ot=e[o+556>>2],y=e[o+544>>2],M=e[o+548>>2]):(Ws(o+528|0,.5*ls),sa(o+512|0,y,M,qe,ot,e[o+528>>2],e[o+532>>2],e[o+536>>2],e[o+540>>2]),qe=e[o+520>>2],ot=e[o+524>>2],y=e[o+512>>2],M=e[o+516>>2])):(Ws(o+592|0,.75*+(0|pt)),sa(o+576|0,y,M,qe,ot,e[o+592>>2],e[o+596>>2],e[o+600>>2],e[o+604>>2]),qe=e[o+584>>2],ot=e[o+588>>2],y=e[o+576>>2],M=e[o+580>>2]);(0|a)>111||(_a(o+464|0,y,M,qe,ot,0,0,0,1073676288),rr(e[o+464>>2],e[o+468>>2],e[o+472>>2],e[o+476>>2],0,0,0,0)||(sa(o+448|0,y,M,qe,ot,0,0,0,1073676288),qe=e[o+456>>2],ot=e[o+460>>2],y=e[o+448>>2],M=e[o+452>>2]))}sa(o+432|0,P,ye,m,q,y,M,qe,ot),Go(o+416|0,e[o+432>>2],e[o+436>>2],e[o+440>>2],e[o+444>>2],Mt,Ft,Lt,Xt),m=e[o+424>>2],q=e[o+428>>2],P=e[o+416>>2],ye=e[o+420>>2],($r-2|0)>=(2147483647&d)||(e[o+408>>2]=m,e[o+412>>2]=2147483647&q,e[o+400>>2]=P,e[o+404>>2]=ye,vr(o+384|0,P,ye,m,q,0,0,0,1073610752),m=(r=(0|(r=ZA(e[o+400>>2],e[o+404>>2],e[o+408>>2],e[o+412>>2],1081081856)))>=0)?e[o+392>>2]:m,q=r?e[o+396>>2]:q,P=r?e[o+384>>2]:P,ye=r?e[o+388>>2]:ye,Be=r+Be|0,!(!!(0|rr(y,M,qe,ot,0,0,0,0))&(r?ae&(0|a)!=(0|f):ae))&(Be+110|0)<=(0|$r)||(e[56798]=68)),hr(o+368|0,P,ye,m,q,Be),m=e[o+368>>2],q=e[o+372>>2],s=e[o+380>>2],r=e[o+376>>2]}else Ga(o+48|0,pt),Ji(o+32|0,r),vr(o+16|0,e[o+48>>2],e[o+52>>2],e[o+56>>2],e[o+60>>2],e[o+32>>2],e[o+36>>2],e[o+40>>2],e[o+44>>2]),m=e[o+16>>2],q=e[o+20>>2],s=e[o+28>>2],r=e[o+24>>2];else Ws(o,0*+(0|pt)),m=e[o>>2],q=e[o+4>>2],s=e[o+12>>2],r=e[o+8>>2]}e[i+40>>2]=r,e[i+44>>2]=s,e[i+32>>2]=m,e[i+36>>2]=q,pe=o+8976|0,y=e[i+40>>2],M=e[i+44>>2],m=e[i+32>>2],q=e[i+36>>2];break e;case 3:break s}(0|(s=e[r+116>>2]))>0|(0|s)>=0&&(e[r+4>>2]=e[r+4>>2]-1);break t}if((0|(s=e[r+4>>2]))==e[r+104>>2]?s=Pt(r):(e[r+4>>2]=s+1,s=u[0|s]),(0|s)!=40){if(M=2147450880,e[r+116>>2]<0)break e;e[r+4>>2]=e[r+4>>2]-1;break e}for(f=1;(0|(s=e[r+4>>2]))==e[r+104>>2]?s=Pt(r):(e[r+4>>2]=s+1,s=u[0|s]),s-48>>>0<10|s-65>>>0<26|(0|s)==95||!(s-97>>>0>=26);)f=f+1|0;if(M=2147450880,(0|s)==41)break e;(0|(s=e[r+116>>2]))>0|(0|s)>=0&&(e[r+4>>2]=e[r+4>>2]-1);s:{if(a){if(f)break s;break e}break t}for(;f=f-1|0,(0|s)>0|(0|s)>=0&&(e[r+4>>2]=e[r+4>>2]-1),f;);break e}e[56798]=28,li(r,0,0)}M=0}e[t>>2]=m,e[t+4>>2]=q,e[t+8>>2]=y,e[t+12>>2]=M,pe=i+48|0}function Ht(t,r,s,a,i){var o,d=0,f=0,m=0,M=0,y=0,P=0,q=0,ae=0,de=0,ye=0,Be=0,qe=0,ot=0,pt=0,Mt=0,Ft=0,Lt=0,Xt=0,Ar=0,Mr=0,Tr=0;if(pe=o=pe-112|0,e[s+8>>2]){Mr=e[50754]/70|0,ye=(P=e[a+12>>2])||256;e:if((0|r)!=2){if((0|r)==1){t:if(u[t+11|0]!=3)switch(u[a-15|0]-3|0){case 0:case 5:break t;default:break e}ye=(0|(P=e[e[47192]+44>>2]))<(0|ye)?ye:P}}else{if((0|(P=e[e[47192]+80>>2]))<=0|!(8&u[0|a]|P>>>0<=u[t+14|0]|32&u[t+6|0]))break e;Mr<<=1}if(e[36436]=0,ot=t,Tr=r,y=a,pe=de=pe-16|0,t=e[34460]+e[s+8>>2]|0,r=(r=u[t+2|0])>>>0>=24?24:r,e[de+12>>2]=r,f=e[s+12>>2]+e[s+24>>2]|0,e[36422]=f,r){for(P=t+4|0,d=1&I[t+4>>1];t=145488+(M<<3)|0,a=P+(d?M<<6:K(M,44))|0,e[t+4>>2]=a,ae=B[a>>1],I[t+2>>1]=ae,I[t>>1]=u[a+16|0],m=2&ae?M:m,(0|(M=M+1|0))!=(0|r););P=145488,(0|m)<=0||((0|Tr)!=1?(r=r-m|0,e[de+12>>2]=r,P=145488+(m<<3)|0):(r=m+1|0,e[de+12>>2]=r,P=145488))}else r=0,P=145488;if(!(!e[s+4>>2]|e[s+20>>2]|u[ot+11|0]!=2)){if(d=e[s+36>>2],a=e[s+40>>2],t=0,(0|(r=e[de+12>>2]))>=2){m=d>>>12|0,ae=a>>>26&7,pt=a>>>18&248,Be=K(qe=63&a,50),Ft=63&(Lt=d>>>6|0),M=d<<1&126,Xt=K(a>>>16&31,50)-750|0,Ar=K(a>>>11&31,50)-750|0,Mt=K(a>>>6&31,50)-750|0;e:{t:if((0|Tr)!=1){if(!(m|qe))break e;if(8&m?(r=e[4+(P+((f=r-1|0)<<3)|0)>>2],I[r>>1]<0?t=r:(t=(0|(t=e[44469]+1|0))<=169?t:0,e[44469]=t,f=B[r+20>>1]|B[r+22>>1]<<16,t=177888+(t<<6)|0,d=B[r+16>>1]|B[r+18>>1]<<16,I[t+16>>1]=d,I[t+18>>1]=d>>>16,I[t+20>>1]=f,I[t+22>>1]=f>>>16,f=B[r+4>>1]|B[r+6>>1]<<16,d=B[r>>1]|B[r+2>>1]<<16,I[t>>1]=d,I[t+2>>1]=d>>>16,I[t+4>>1]=f,I[t+6>>1]=f>>>16,f=B[r+12>>1]|B[r+14>>1]<<16,d=B[r+8>>1]|B[r+10>>1]<<16,I[t+8>>1]=d,I[t+10>>1]=d>>>16,I[t+12>>1]=f,I[t+14>>1]=f>>>16,f=B[r+28>>1]|B[r+30>>1]<<16,d=B[r+24>>1]|B[r+26>>1]<<16,I[t+24>>1]=d,I[t+26>>1]=d>>>16,I[t+28>>1]=f,I[t+30>>1]=f>>>16,f=B[r+36>>1]|B[r+38>>1]<<16,d=B[r+32>>1]|B[r+34>>1]<<16,I[t+32>>1]=d,I[t+34>>1]=d>>>16,I[t+36>>1]=f,I[t+38>>1]=f>>>16,f=B[r+44>>1]|B[r+46>>1]<<16,d=B[r+40>>1]|B[r+42>>1]<<16,I[t+40>>1]=d,I[t+42>>1]=d>>>16,I[t+44>>1]=f,I[t+46>>1]=f>>>16,f=B[r+52>>1]|B[r+54>>1]<<16,d=B[r+48>>1]|B[r+50>>1]<<16,I[t+48>>1]=d,I[t+50>>1]=d>>>16,I[t+52>>1]=f,I[t+54>>1]=f>>>16,f=B[r+60>>1]|B[r+62>>1]<<16,r=B[r+56>>1]|B[r+58>>1]<<16,I[t+56>>1]=r,I[t+58>>1]=r>>>16,I[t+60>>1]=f,I[t+62>>1]=f>>>16,g[t+16|0]=0,I[t>>1]=32768|B[t>>1],f=e[de+12>>2]-1|0),e[4+(P+(f<<3)|0)>>2]=t,r=1792,(0|(f=I[t+4>>1]))<300||(r=1536,f>>>0<400||(r=f>>>0<500?1280:1024)),e[36436]=r,d=35):(e[de+12>>2]=r+1,I[(t=(f=P+(r<<3)|0)-8|0)>>1]=M,r=e[t+4>>2],t=(0|(t=e[44469]+1|0))<=169?t:0,e[44469]=t,(t=177888+(Lt=t<<6)|0)&&(d=B[r+4>>1]|B[r+6>>1]<<16,q=B[r>>1]|B[r+2>>1]<<16,I[t>>1]=q,I[t+2>>1]=q>>>16,I[t+4>>1]=d,I[t+6>>1]=d>>>16,d=B[r+60>>1]|B[r+62>>1]<<16,q=B[r+56>>1]|B[r+58>>1]<<16,I[t+56>>1]=q,I[t+58>>1]=q>>>16,I[t+60>>1]=d,I[t+62>>1]=d>>>16,d=B[r+52>>1]|B[r+54>>1]<<16,q=B[r+48>>1]|B[r+50>>1]<<16,I[t+48>>1]=q,I[t+50>>1]=q>>>16,I[t+52>>1]=d,I[t+54>>1]=d>>>16,d=B[r+44>>1]|B[r+46>>1]<<16,q=B[r+40>>1]|B[r+42>>1]<<16,I[t+40>>1]=q,I[t+42>>1]=q>>>16,I[t+44>>1]=d,I[t+46>>1]=d>>>16,d=B[r+36>>1]|B[r+38>>1]<<16,q=B[r+32>>1]|B[r+34>>1]<<16,I[t+32>>1]=q,I[t+34>>1]=q>>>16,I[t+36>>1]=d,I[t+38>>1]=d>>>16,d=B[r+28>>1]|B[r+30>>1]<<16,q=B[r+24>>1]|B[r+26>>1]<<16,I[t+24>>1]=q,I[t+26>>1]=q>>>16,I[t+28>>1]=d,I[t+30>>1]=d>>>16,d=B[r+20>>1]|B[r+22>>1]<<16,q=B[r+16>>1]|B[r+18>>1]<<16,I[t+16>>1]=q,I[t+18>>1]=q>>>16,I[t+20>>1]=d,I[t+22>>1]=d>>>16,d=B[r+12>>1]|B[r+14>>1]<<16,r=B[r+8>>1]|B[r+10>>1]<<16,I[t+8>>1]=r,I[t+10>>1]=r>>>16,I[t+12>>1]=d,I[t+14>>1]=d>>>16,g[Lt+177904|0]=0,I[t>>1]=32768|B[t>>1]),I[f>>1]=0,e[f+4>>2]=t,M>>>0>=37&&(e[36422]=(M+e[36422]|0)-36),d=Ft<<1,qe&&Le(t,Be,Mt,Ar,ae,Xt,pt,m)),e[e[32972]+132>>2]||(r=u[t+17|0])&&(r=I[102896+(((0|(r=(d<<6>>>0)/(r>>>0)|0))>=199?199:r)<<1)>>1],g[t+18|0]=(0|K(r,u[t+18|0]))/512,g[t+19|0]=(0|K(r,u[t+19|0]))/512,g[t+20|0]=(0|K(r,u[t+20|0]))/512,g[t+21|0]=(0|K(r,u[t+21|0]))/512,g[t+22|0]=(0|K(r,u[t+22|0]))/512,g[t+23|0]=(0|K(r,u[t+23|0]))/512,g[t+24|0]=(0|K(r,u[t+24|0]))/512,g[t+25|0]=(0|K(r,u[t+25|0]))/512),a-536870912>>>0<=1073741823){if(ae=e[44469],(0|(f=e[de+12>>2]))>0)for(t=K(a>>>29|0,10)+102854|0,pt=I[t+4>>1],qe=I[t+2>>1],Be=I[t>>1],Xt=I[t+6>>1],Ar=I[t+8>>1],d=0;r=e[4+(Mt=P+(d<<3)|0)>>2],I[r>>1]<0?t=r:(t=177888+(Ft=(ae=(0|(t=ae+1|0))<=169?t:0)<<6)|0)?(a=B[r+4>>1]|B[r+6>>1]<<16,f=B[r>>1]|B[r+2>>1]<<16,I[t>>1]=f,I[t+2>>1]=f>>>16,I[t+4>>1]=a,I[t+6>>1]=a>>>16,a=B[r+60>>1]|B[r+62>>1]<<16,f=B[r+56>>1]|B[r+58>>1]<<16,I[t+56>>1]=f,I[t+58>>1]=f>>>16,I[t+60>>1]=a,I[t+62>>1]=a>>>16,a=B[r+52>>1]|B[r+54>>1]<<16,f=B[r+48>>1]|B[r+50>>1]<<16,I[t+48>>1]=f,I[t+50>>1]=f>>>16,I[t+52>>1]=a,I[t+54>>1]=a>>>16,a=B[r+44>>1]|B[r+46>>1]<<16,f=B[r+40>>1]|B[r+42>>1]<<16,I[t+40>>1]=f,I[t+42>>1]=f>>>16,I[t+44>>1]=a,I[t+46>>1]=a>>>16,a=B[r+36>>1]|B[r+38>>1]<<16,f=B[r+32>>1]|B[r+34>>1]<<16,I[t+32>>1]=f,I[t+34>>1]=f>>>16,I[t+36>>1]=a,I[t+38>>1]=a>>>16,a=B[r+28>>1]|B[r+30>>1]<<16,f=B[r+24>>1]|B[r+26>>1]<<16,I[t+24>>1]=f,I[t+26>>1]=f>>>16,I[t+28>>1]=a,I[t+30>>1]=a>>>16,a=B[r+20>>1]|B[r+22>>1]<<16,f=B[r+16>>1]|B[r+18>>1]<<16,I[t+16>>1]=f,I[t+18>>1]=f>>>16,I[t+20>>1]=a,I[t+22>>1]=a>>>16,a=B[r+12>>1]|B[r+14>>1]<<16,r=B[r+8>>1]|B[r+10>>1]<<16,I[t+8>>1]=r,I[t+10>>1]=r>>>16,I[t+12>>1]=a,I[t+14>>1]=a>>>16,g[Ft+177904|0]=0,I[t>>1]=32768|B[t>>1],f=e[de+12>>2]):t=0,e[Mt+4>>2]=t,I[t+8>>1]=(0|K(pt,I[t+8>>1]))/256,I[t+6>>1]=(0|K(qe,I[t+6>>1]))/256,I[t+4>>1]=(0|K(Be,I[t+4>>1]))/256,I[t+12>>1]=(0|K(Ar,I[t+12>>1]))/256,I[t+10>>1]=(0|K(Xt,I[t+10>>1]))/256,(0|f)>(0|(d=d+1|0)););e[44469]=ae}if(!t)break e}else{r=e[P+4>>2],(0|(f=I[r>>1]))<0?t=r:(a=(0|(a=e[44469]+1|0))<=169?a:0,e[44469]=a,(a=177888+(f=a<<6)|0)&&(t=B[r+4>>1]|B[r+6>>1]<<16,q=B[r>>1]|B[r+2>>1]<<16,I[a>>1]=q,I[a+2>>1]=q>>>16,I[a+4>>1]=t,I[a+6>>1]=t>>>16,t=B[r+60>>1]|B[r+62>>1]<<16,q=B[r+56>>1]|B[r+58>>1]<<16,I[a+56>>1]=q,I[a+58>>1]=q>>>16,I[a+60>>1]=t,I[a+62>>1]=t>>>16,t=B[r+52>>1]|B[r+54>>1]<<16,q=B[r+48>>1]|B[r+50>>1]<<16,I[a+48>>1]=q,I[a+50>>1]=q>>>16,I[a+52>>1]=t,I[a+54>>1]=t>>>16,t=B[r+44>>1]|B[r+46>>1]<<16,q=B[r+40>>1]|B[r+42>>1]<<16,I[a+40>>1]=q,I[a+42>>1]=q>>>16,I[a+44>>1]=t,I[a+46>>1]=t>>>16,t=B[r+36>>1]|B[r+38>>1]<<16,q=B[r+32>>1]|B[r+34>>1]<<16,I[a+32>>1]=q,I[a+34>>1]=q>>>16,I[a+36>>1]=t,I[a+38>>1]=t>>>16,t=B[r+28>>1]|B[r+30>>1]<<16,q=B[r+24>>1]|B[r+26>>1]<<16,I[a+24>>1]=q,I[a+26>>1]=q>>>16,I[a+28>>1]=t,I[a+30>>1]=t>>>16,t=B[r+20>>1]|B[r+22>>1]<<16,q=B[r+16>>1]|B[r+18>>1]<<16,I[a+16>>1]=q,I[a+18>>1]=q>>>16,I[a+20>>1]=t,I[a+22>>1]=t>>>16,t=B[r+12>>1]|B[r+14>>1]<<16,r=B[r+8>>1]|B[r+10>>1]<<16,I[a+8>>1]=r,I[a+10>>1]=r>>>16,I[a+12>>1]=t,I[a+14>>1]=t>>>16,g[f+177904|0]=0,f=-32768|B[a>>1],I[a>>1]=f,t=a)),e[P+4>>2]=t,I[P>>1]=M||50,I[P+2>>1]=16384|B[P+2>>1],I[t>>1]=16384|f,f=e[P+12>>2],r=u[f+17|0],a=e[32972],e[a+132>>2]&&(g[t+39|0]=u[f+39|0]-4);s:if(qe){if(2048&d){r=(K(r,31&Lt)>>>0)/30|0,e[a+132>>2]||(a=u[t+17|0])&&(r=I[102896+(((0|(r=(r<<6>>>0)/(a>>>0)|0))>=199?199:r)<<1)>>1],g[t+18|0]=(0|K(r,u[t+18|0]))/512,g[t+19|0]=(0|K(r,u[t+19|0]))/512,g[t+20|0]=(0|K(r,u[t+20|0]))/512,g[t+21|0]=(0|K(r,u[t+21|0]))/512,g[t+22|0]=(0|K(r,u[t+22|0]))/512,g[t+23|0]=(0|K(r,u[t+23|0]))/512,g[t+24|0]=(0|K(r,u[t+24|0]))/512,g[t+25|0]=(0|K(r,u[t+25|0]))/512),Le(t,Be,Mt,Ar,ae,Xt,pt,m);break s}if(Le(t,Be,Mt,Ar,ae,Xt,pt,m),e[e[32972]+132>>2]||!(r=u[t+17|0]))break s;r=I[102896+(((0|(r=(Ft<<7>>>0)/(r>>>0)|0))>=199?199:r)<<1)>>1],g[t+18|0]=(0|K(r,u[t+18|0]))/512,g[t+19|0]=(0|K(r,u[t+19|0]))/512,g[t+20|0]=(0|K(r,u[t+20|0]))/512,g[t+21|0]=(0|K(r,u[t+21|0]))/512,g[t+22|0]=(0|K(r,u[t+22|0]))/512,g[t+23|0]=(0|K(r,u[t+23|0]))/512,g[t+24|0]=(0|K(r,u[t+24|0]))/512,g[t+25|0]=(0|K(r,u[t+25|0]))/512}else if(a=e[a+132>>2],8&m){if(a||!(a=u[t+17|0]))break s;r=((16320&K(r,48))>>>0)/(a>>>0)|0,r=I[102896+((r>>>0>=199?199:r)<<1)>>1],g[t+18|0]=(0|K(r,u[t+18|0]))/512,g[t+19|0]=(0|K(r,u[t+19|0]))/512,g[t+20|0]=(0|K(r,u[t+20|0]))/512,g[t+21|0]=(0|K(r,u[t+21|0]))/512,g[t+22|0]=(0|K(r,u[t+22|0]))/512,g[t+23|0]=(0|K(r,u[t+23|0]))/512,g[t+24|0]=(0|K(r,u[t+24|0]))/512,g[t+25|0]=(0|K(r,u[t+25|0]))/512}else a||(r=u[t+17|0])&&(r=I[102896+(((r=1792/(r>>>0)|0)>>>0>=199?199:r)<<1)>>1],g[t+18|0]=(0|K(r,u[t+18|0]))/512,g[t+19|0]=(0|K(r,u[t+19|0]))/512,g[t+20|0]=(0|K(r,u[t+20|0]))/512,g[t+21|0]=(0|K(r,u[t+21|0]))/512,g[t+22|0]=(0|K(r,u[t+22|0]))/512,g[t+23|0]=(0|K(r,u[t+23|0]))/512,g[t+24|0]=(0|K(r,u[t+24|0]))/512,g[t+25|0]=(0|K(r,u[t+25|0]))/512);if(!(8&m))break t;r=2816,(0|(a=I[t+4>>1]))<300||(r=2560,a>>>0<400||(r=a>>>0<500?2304:2048)),e[36436]=r}4&m&&(I[t>>1]=32|B[t>>1]),2&m&&(I[t>>1]=16|B[t>>1])}64&m&&Kt(20,0),t=M&m<<27>>31}else t=0;f=t+e[36422]|0,e[36422]=f,r=e[de+12>>2]}if((0|(a=r-1|0))<=0)d=0;else{if(t=0,M=0,d=0,r-2>>>0>=3)for(pt=-4&a,ae=0;d=(((I[(m=M<<3)+P>>1]+d|0)+I[P+(8|m)>>1]|0)+I[P+(16|m)>>1]|0)+I[P+(24|m)>>1]|0,M=M+4|0,(0|pt)!=(0|(ae=ae+4|0)););if(m=3&a)for(;d=I[P+(M<<3)>>1]+d|0,M=M+1|0,(0|m)!=(0|(t=t+1|0)););}if(t=r,(m=e[s+20>>2])&&(t=a,M=m+e[34460]|0,(ae=u[M+2|0])&&(qe=B[M+4>>1],I[P+(a<<3)>>1]=u[M+20|0],m=1,t=r,(0|ae)!=1))){if(pt=M+4|0,qe&=1,Xt=1&(M=ae-1|0),(0|ae)!=2)for(Ar=-2&M,ae=0;Mt=pt+(m<<6)|0,Ft=pt+K(m,44)|0,Lt=u[(Be=qe?Mt:Ft)+16|0],e[4+(M=P+(t<<3)|0)>>2]=Be,I[M>>1]=Lt,I[M+2>>1]=B[Be>>1],Mt=u[16+(Be=qe?Mt- -64|0:Ft+44|0)|0],e[M+12>>2]=Be,I[M+8>>1]=Mt,I[M+10>>1]=B[Be>>1],m=m+2|0,t=t+2|0,(0|Ar)!=(0|(ae=ae+2|0)););Xt&&(m=pt+(qe?m<<6:K(m,44))|0,ae=u[m+16|0],e[4+(M=P+(t<<3)|0)>>2]=m,I[M>>1]=ae,I[M+2>>1]=B[m>>1],t=t+1|0)}e:if(!((0|d)<=0)){t:{switch(Tr-1|0){case 1:if(m=(0|(m=(e[s+44>>2]+f|0)-45|0))<=10?10:m,8&u[0|y]&&(m=m+(u[e[36128]+14|0]<<1)|0),(0|a)<=0)break e;if(y=(m<<8)/(0|d)|0,M=0,(0|r)!=2)for(r=-2&a,m=0;I[(d=(f=M<<3)+P|0)>>1]=(0|K(y,I[d>>1]))/256,I[(f=P+(8|f)|0)>>1]=(0|K(y,I[f>>1]))/256,M=M+2|0,(0|r)!=(0|(m=m+2|0)););if(!(1&a))break e;I[(r=P+(M<<3)|0)>>1]=(0|K(y,I[r>>1]))/256;break e;case 0:if(e[s>>2]!=1||(0|(m=e[s+44>>2]))>129)break t;I[P>>1]=(0|K(m,I[P>>1]))/130;break t}(0|(m=e[s+44>>2]))<=0||(f=(m-d|0)+f|0,e[36422]=f)}if(!(!f|(0|a)<=0)){if(y=(d+f<<8)/(0|d)|0,M=0,(0|r)!=2)for(r=-2&a,m=0;I[(d=(f=M<<3)+P|0)>>1]=(0|K(y,I[d>>1]))/256,I[(f=P+(8|f)|0)>>1]=(0|K(y,I[f>>1]))/256,M=M+2|0,(0|r)!=(0|(m=m+2|0)););1&a&&(I[(r=P+(M<<3)|0)>>1]=(0|K(y,I[r>>1]))/256)}}if(e[o+108>>2]=t,pe=de+16|0,P){if((0|(t=e[s+16>>2]))!=e[36438]&&(e[36438]=t,r=216192+(e[50758]<<4)|0,e[r>>2]=14,e[r+4>>2]=t,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0),M=(t=e[e[32972]+132>>2])?1:3,r=e[P+4>>2],e[s+28>>2]|!u[145748]||(g[145748]=0,M=t?2:4),(a=e[36426])&&(!((2&(t=B[a>>1]))>>>1|u[a+16|0]<2)|16&t||(f=216192+(e[36439]<<4)|0,e[f+12>>2]=r,8&t&&(t=(0|(t=e[44469]+1|0))<=169?t:0,e[44469]=t,(t=177888+(m=t<<6)|0)&&(y=B[r+4>>1]|B[r+6>>1]<<16,d=B[r>>1]|B[r+2>>1]<<16,I[t>>1]=d,I[t+2>>1]=d>>>16,I[t+4>>1]=y,I[t+6>>1]=y>>>16,y=B[r+60>>1]|B[r+62>>1]<<16,d=B[r+56>>1]|B[r+58>>1]<<16,I[t+56>>1]=d,I[t+58>>1]=d>>>16,I[t+60>>1]=y,I[t+62>>1]=y>>>16,y=B[r+52>>1]|B[r+54>>1]<<16,d=B[r+48>>1]|B[r+50>>1]<<16,I[t+48>>1]=d,I[t+50>>1]=d>>>16,I[t+52>>1]=y,I[t+54>>1]=y>>>16,y=B[r+44>>1]|B[r+46>>1]<<16,d=B[r+40>>1]|B[r+42>>1]<<16,I[t+40>>1]=d,I[t+42>>1]=d>>>16,I[t+44>>1]=y,I[t+46>>1]=y>>>16,y=B[r+36>>1]|B[r+38>>1]<<16,d=B[r+32>>1]|B[r+34>>1]<<16,I[t+32>>1]=d,I[t+34>>1]=d>>>16,I[t+36>>1]=y,I[t+38>>1]=y>>>16,y=B[r+28>>1]|B[r+30>>1]<<16,d=B[r+24>>1]|B[r+26>>1]<<16,I[t+24>>1]=d,I[t+26>>1]=d>>>16,I[t+28>>1]=y,I[t+30>>1]=y>>>16,y=B[r+20>>1]|B[r+22>>1]<<16,d=B[r+16>>1]|B[r+18>>1]<<16,I[t+16>>1]=d,I[t+18>>1]=d>>>16,I[t+20>>1]=y,I[t+22>>1]=y>>>16,y=B[r+12>>1]|B[r+14>>1]<<16,d=B[r+8>>1]|B[r+10>>1]<<16,I[t+8>>1]=d,I[t+10>>1]=d>>>16,I[t+12>>1]=y,I[t+14>>1]=y>>>16,g[m+177904|0]=0,I[t>>1]=32768|B[t>>1]),I[8+(m=m+177888|0)>>1]=B[a+8>>1],g[m+21|0]=u[a+21|0],I[m+10>>1]=B[a+10>>1],g[m+22|0]=u[a+22|0],I[m+12>>1]=B[a+12>>1],g[m+23|0]=u[a+23|0],I[m+14>>1]=B[a+14>>1],g[m+24|0]=u[a+24|0],g[m+25|0]=u[a+25|0],e[f+12>>2]=t))),(0|Tr)!=2|u[ot+11|0]!=2||(oa(),e[36427]=e[50758]),!((0|(ot=e[o+108>>2]))<2)){for(t=e[36433],y=(K(256-t|0,ye)+(t<<8)|0)/256|0,t=e[36432],f=(K(256-t|0,ye)+(t<<8)|0)/256|0,d=e[50754],t=0,a=1;m=B[2+(de=(P+(a<<3)|0)-8|0)>>1],m=(0|K((0|K(d,I[de>>1]))/1e3|0,4&m?f:16384&m?y:ye))/256|0,e[(a<<2)+o>>2]=m,t=t+m|0,(0|ot)!=(0|(a=a+1|0)););if(!((0|t)<=0|(0|t)>=(0|Mr)|(0|ot)<2)){if(a=1,y=1&(m=ot-1|0),(0|ot)!=2)for(f=-2&m,ye=0;e[(m=(a<<2)+o|0)>>2]=(0|K(e[m>>2],Mr))/(0|t),e[m+4>>2]=(0|K(e[m+4>>2],Mr))/(0|t),a=a+2|0,(0|f)!=(0|(ye=ye+2|0)););y&&(e[(a=(a<<2)+o|0)>>2]=(0|K(e[a>>2],Mr))/(0|t))}if(ye=0,!((0|ot)<2))for(ot=Tr+256|0,a=1;t=e[4+(P+(a<<3)|0)>>2],!(m=e[s+28>>2])|128&u[0|r]||(e[36422]=0,ri(m,ot,0,d=e[s>>2],0,y=(y=e[s+32>>2])?(y<<5)/100|0:32),g[145748]=1,e[s+28>>2]=0),(0|i)<0||(i=64&u[0|r]?6:i,(e[o+108>>2]-1|0)==(0|a)&&(i=(m=i)|(3840&(i=e[36436])?i:0))),m=e[(a<<2)+o>>2],e[36440]=m+e[36440],e[36441]=m+e[36441],m?(y=e[50758],e[36439]=y,(0|i)>=0&&(e[(y=216192+(y<<4)|0)>>2]=M,e[y+12>>2]=t,e[y+8>>2]=r,e[y+4>>2]=m+(i<<16),r=e[50758]+1|0,e[50758]=(0|r)<=169?r:0),e[36426]=t,ye=m+ye|0):e[36426]=0,r=t,(0|(a=a+1|0))<e[o+108>>2];);}!e[36438]|(0|Tr)==1||(e[36438]=0,t=216192+(e[50758]<<4)|0,e[t>>2]=14,e[t+4>>2]=0,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0)}}pe=o+112|0}function Vt(t,r,s,a){var i,o=0,d=0,f=0,m=0,M=0,y=0,P=0,q=0,ae=0,de=0,ye=0,Be=0,qe=0,ot=0,pt=0,Mt=0,Ft=0,Lt=0,Xt=0,Ar=0,Mr=0,Tr=0;pe=i=pe-1856|0,e[i+164>>2]=0,s?q=e[s>>2]:wr(s=i- -64|0,0,96),e[33264]=0,e[i+1824>>2]=0,e[i+1828>>2]=0,e[i+1832>>2]=0,e[i+1836>>2]=0,g[i+1616|0]=0,g[i+992|0]=0,g[i+1200|0]=0,g[i+784|0]=0;e:if(e[t+688>>2]){for(e[i+1840>>2]=r,u[0|(o=r)]==32&&(o=r+1|0,e[i+1840>>2]=o),ae=i+416|1,Lt=i+1844|1,Ar=i+1848|1,Mr=i+1852|1,e[i+1820>>2]=o,Ir(i+168|0,o),o=e[i+1820>>2];(32|u[0|o])!=32;)o=Ir(i+164|0,o)+e[i+1820>>2]|0,e[i+1820>>2]=o,Be=Be+1|0;ds(i+256|0,r,Xt=(0|(f=o-r|0))>=159?159:f),!(Mt=4194304&q)|(0|Be)!=1?(ot=((0|(o=e[47202]))==36)<<2,(0|Be)==1|(0|o)!=36||(o=e[i+1840>>2]-1|0,e[i+1840>>2]=o,g[0|o]=95,ot=0,d=!!(0|ma(t,i+1840|0,i+1616|0,i+1832|0,0,s)),o=e[47202])):(d=1,Ir(i+172|0,o+1|0),aa(e[i+172>>2])&&(0|Gn(e[i+164>>2]))==(0|Gn(e[i+172>>2]))&&(d=0),ot=(0|(o=e[47202]))==36?4:d,d=0);t:{s:{n:{i:{c:if(16&o)de=15&o,ot=0;else{if(qe=1,d||(qe=!!(0|ma(t,i+1840|0,i+1616|0,i+1832|0,2,s))),50331648&(o=e[i+1832>>2])&&(f=e[i+1820>>2],u[f+1|0]==46&&(g[f+1|0]=32,o=e[i+1832>>2])),536870912&o){if(!a)break e;Hr(a,e[i+1840>>2]);break e}if(8192&o|!(128&o)|qe)a=e[33264];else if(o=e[i+1840>>2],e[i+1820>>2]=o,!((0|(a=e[33264]))<=0))for(d=0;u[0|o]==32&&(g[0|o]=45,d=d+1|0,o=e[i+1820>>2],a=e[33264]),o=o+1|0,e[i+1820>>2]=o,(0|a)>(0|d););A:if(!(a|(0|Be)!=1)&&(f=Ir(i+576|0,P=e[i+1840>>2]),u[f+P|0]==32)){d=i+1408|0,a=P;d:{l:{o:{for(;;){p:if(aa(e[i+576>>2])){b:{if(u[1+(m=a+f|0)|0]==46){de=0;m:switch(u[(o=f+2|0)+a|0]-32|0){case 0:break b;case 7:break m;default:break p}if(de=1,f=o,u[m+3|0]==115)break b;break p}if(de=1,(0|y)<=0)break o}if(!((0|f)<=0)){if(ye=3&f,M=0,f>>>0<4)o=0;else for(pt=-4&f,o=0,m=0;g[0|d]=u[a+o|0],g[d+1|0]=u[(1|o)+a|0],g[d+2|0]=u[(2|o)+a|0],g[d+3|0]=u[(3|o)+a|0],o=o+4|0,d=d+4|0,(0|pt)!=(0|(m=m+4|0)););if(ye)for(;g[0|d]=u[a+o|0],o=o+1|0,d=d+1|0,(0|ye)!=(0|(M=M+1|0)););}if(y=y+1|0,de)a=a+f|0;else if(f=Ir(i+576|0,a=3+(a+f|0)|0),u[a+f|0]==32)continue}break}if(!((0|y)<2)){(f=(f=d-(o=i+1408|0)|0)+(o=ds(P,o,f))|0)>>>0<a>>>0&&wr(f,32,(i+1408|0)+a-(o+d)|0),e[33264]=(y<<1)-2,e[i+1836>>2]=0;break l}}if(!y)break A;if(e[i+1832>>2]=0,e[i+1836>>2]=0,!e[33264])break d}e[i+1832>>2]=128}ot=1}if(u[i+1616|0]==21){Hr(189088,i+1616|0),o=0;break e}if(Tr=u[i+1833|0],d=1,!qe){if(e[i+168>>2]-48>>>0<10){if(Nr(t,84174,189088),o=0,u[189088]==21)break e;if(!(!(128&u[t+109|0])|32&u[s+2|0])){g[189088]=21,g[189089]=0;break e}d=!!(0|Ks(t,e[i+1840>>2],i+1616|0,i+1832|0,s,0))}else d=0;if(!(d|(3&q)==2)&&(16777216&(a=e[t+104>>2])||(d=0,!(!(33554432&a)|!(1&q))))&&(16&q||(d=0,!(1&g[s+13|0])))){pt=e[i+1840>>2],o=0,y=0,m=0,pe=ye=pe-224|0,g[0|(M=i+1616|0)]=0,e[ye+216>>2]=0,e[ye+220>>2]=0;A:if(!(g[pt-2|0]-48>>>0<10|(1&g[0|s]?0:2&u[t+107|0])||(a=u[0|(f=pt+1|0)],(!(2561&B[t+106>>1])|!(1&g[s+2|0]))&(0|a)==32))){if((0|(y=u[0|pt]))!=32){for(de=32767,a=0;;){if(!(o=lo(101868,y<<24>>24,8))){y=0;break A}if(P=0,(0|(o=e[(o<<2)-305584>>2]))==(0|a)&&!((0|(P=m+1|0))<=2)){y=0;break A}d:{l:{o:{p:{if(!((0|a)<2)){if((0|a)==10|(0|a)==100)break p;if(!((0|a)>(0|o))){y=0;break A}}if(!a)break l;if((0|a)<(0|o))break o;break l}if((0|a)>=(0|o))break l}if(y=0,(0|Ft)%10|(0|K(a,10))<(0|o))break A;o=o-a|0,de=a;break d}if((0|o)>=(0|de)){y=0;break A}Ft=a+Ft|0}if(y=u[0|f],f=d=f+1|0,a=o,m=P,(0|y)==32)break}a=u[0|d]}else d=f;if((a<<24>>24)-48>>>0<10)y=0;else if((0|(a=o+Ft|0))<e[t+120>>2])y=0;else if((0|a)>e[t+116>>2])y=0;else if(Nr(t,85600,ye+176|0),o=M,4&u[t+107|0]||(o=Hr(M,o=ye+176|0)+zr(o)|0),e[ye+4>>2]=e[t+140>>2],e[ye>>2]=a,Br(ye+16|0,85839,ye),y=0,u[0|d]!=46){hs(t,pt,d,s,1)&&(e[s>>2]=32768|e[s>>2]),f=0;d:if(8&u[t+107|0]){if(m=e[s>>2],e[t+212>>2]==26741){if(32768&m)break d;if(!(16384&m))break A;f=1,m=0;l:{o:switch(u[0|d]-97|0){case 0:case 4:break o;default:break l}o:{p:{b:{m:switch((de=u[d+1|0])-116|0){case 6:break l;case 1:case 2:case 3:case 4:case 5:break p;case 0:break m;default:break b}if(u[d+2|0]!=116)break o;break l}if((0|de)==32)break l}if(!((0|a)%1e3|0)&&(0|de)==108)break l}m=1}if(m)break d;break A}e[s>>2]=32768|m}e[(a=t+8232|0)>>2]=0,e[a+4>>2]=0,Ks(t,ye+16|2,o,ye+216|0,s,f),y=1,4&u[t+107|0]&&Ca(M,ye+176|0)}}pe=ye+224|0,y?(e[i+1832>>2]=8192|e[i+1832>>2],d=1):d=0}}if(de=qe?ot:32&Tr?1:ot,ot=0,!(!(1&q)|(0|Be)<2)&&Di(e[i+168>>2])){A:{if(1&g[188785]){if(!(!(a=8192&(o=e[i+1832>>2]))|d))break A;ot=a>>>2^2048;break c}if(d)break i;o=e[i+1832>>2]}if(!(128&o|Be>>>0>3)&&!((0|(o=e[t+8220>>2]))<4)&&(a=1,(0|o)>=e[t+8216>>2]))break t}}if(M=0,(0|de)<=0)break n;a=de;break t}if((0|(a=de))>0)break t;M=0,P=0,m=0,y=0;break s}if(d)P=0,m=0,y=0;else{a=e[i+1840>>2],e[i+1820>>2]=a,o=999,y=0,P=0,ae=0;n:{i:{c:{for(;;){A:{d:{l:{if(o-1>>>0>=2){if((0|Be)<2||(Ir(i+1408|0,a),(0|(o=e[i+1408>>2]))<577&e[t+600>>2]>0)||(o=Gn(o),(e[o+4>>2]!=e[t+600>>2]?o:0)|e[t+40>>2]==1))break l;switch(o=u[0|a],e[i+1408>>2]=o<<24>>24,o-32|0){default:if(!o)break l;break;case 0:case 7:break l;case 1:case 2:case 3:case 4:case 5:case 6:}M=Ir(i+1408|0,a),qe=9;o:{p:{b:{m:if(-33&(o=e[i+1408>>2])){for(d=0,m=0;;){C:{h:{if((0|o)==39){if((0|P)>0|(0|d)>1)break m;if(m=d?m:39,e[t+40>>2]!=3)break h;break C}m=d?m:o}d=d+1|0}if(!el(t,o)){if((0|(o=e[i+1408>>2]))!=39&&!Di(o))break l;if(M=Ir(i+1408|0,a+M|0)+M|0,-33&(o=e[i+1408>>2]))continue;break m}break}if((0|d)<=2)break b;qe=d}else m=0;if((0|(o=e[t+40>>2]))!=2)break p;pe=o=pe-208|0,g[0|o]=0,d=u[0|(f=a-1|0)],g[0|f]=32,a=Es(t,a,o,200,0,-2147483648,0),g[0|f]=d,pe=o+208|0,a=!a|(32768&a)>>>15;break o}o=e[t+40>>2],qe=d}a=(g[t+168|0]+1|0)<(qe-((0|o)==(0|m))|0)}if(!a)break l;a=e[i+1820>>2]}if(u[0|a]!=39)break d;y=67108864,ot=0}if(M=0,Or(t,i+992|0,0,P),a=e[i+1820>>2],(0|(o=u[0|a]))!=32)break A;P=0,m=0;break s}if(ot=0,a=In(t,a,i+992|0,1&(ae|=(0|P)>0))+e[i+1820>>2]|0,e[i+1820>>2]=a,u[i+992|0]==21)break c;for(P=P+1|0,d=0;d=(o=d)+1|0,u[a+o|0]!=32;);y=67108864;continue}break}if(!u[i+992|0]|(0|o)==39||(g[a-1|0]=32,a=e[i+1820>>2]),f=Es(t,a,i+1616|0,200,i+784|0,q,i+1832|0),(0|(a=u[i+1616|0]))==21){Hr(189088,i+1616|0),o=0;break e}if(!(a|u[i+784|0])&&(Ir(i+1408|0,e[i+1820>>2]),(0|Be)==1&&(aa(e[i+1408>>2])||ol(e[i+1408>>2])))){qo(t,e[i+1820>>2],i+1616|0,de)&&Hr(189088,i+1616|0),o=0;break e}e[i+172>>2]=g[e[i+1820>>2]-1|0];A:if(1024&f)for(pt=i+176|1,de=0,o=1,ae=0,P=0;;){if((qe=131072&f)|!(1&o)||(g[i+1408|0]=0,!(a=Es(t,e[i+1820>>2],i+1408|0,200,i+576|0,805306368|q,i+1832|0)))){2048&f&&(e[t+8184>>2]=1),g[e[i+1820>>2]-1|0]=e[i+172>>2];d:{l:{o:{p:if(qe){if(g[i+176|0]=0,o=e[i+1820>>2],a=1,m=63&f){if(ye=1&f,P=m-1|0,d=0,(0|m)!=1)for(Ft=m-ye|0,m=0;M=o,e[i+1820>>2]=o+1,g[0|(Mt=(i+176|0)+a|0)]=(0|d)!=(0|P)?u[0|o]:0,o=o+2|0,e[i+1820>>2]=o,g[Mt+1|0]=(0|P)!=(1|d)?u[M+1|0]:0,d=d+2|0,a=a+2|0,(0|Ft)!=(0|(m=m+2|0)););ye&&(m=o+1|0,e[i+1820>>2]=m,g[(i+176|0)+a|0]=(0|d)!=(0|P)?u[0|o]:0,a=a+1|0,o=m)}g[(i+176|0)+a|0]=0}else{if(o=e[i+1820>>2],!(m=15&f))break o;if(a=0,d=m,M=3&f)for(;o=o+1|0,e[i+1820>>2]=o,(192&u[0|o])==128||(d=d-1|0,(0|M)!=(0|(a=a+1|0))););if(m>>>0<4)break p;for(;;)if(o=o+1|0,e[i+1820>>2]=o,(192&u[0|o])!=128){for(;o=o+1|0,e[i+1820>>2]=o,(192&u[0|o])==128;);for(;o=o+1|0,e[i+1820>>2]=o,(192&u[0|o])==128;);for(;o=o+1|0,e[i+1820>>2]=o,(192&u[0|o])==128;);if(a=(0|d)>4,d=d-4|0,!a)break}}if(a=o-1|0,e[i+172>>2]=g[0|a],g[0|a]=32,a=q|=8388608,!qe)break l;if(na(i+576|0,i+784|0,12),e[i+1852>>2]=pt,a=Hr(i+1200|0,o=i+1616|0),ma(t,i+1852|0,o,i+1832|0,0,s)&&Hr(a,i+1616|0),!(32&u[i+1833|0]))break d;g[0|a]=0,qo(t,e[i+1852>>2],a,1);break d}a=o-1|0,e[i+172>>2]=g[0|a],g[0|a]=32,a=8388608|q}q=a,Ca(i+1200|0,i+784|0)}if(g[i+784|0]=0,m=1,a=ma(t,i+1820|0,i+1616|0,i+1824|0,1024,s),e[i+1832>>2]||(o=e[i+1828>>2],e[i+1832>>2]=e[i+1824>>2],e[i+1836>>2]=o,m=ae),a){M=0,P=f;break n}if(M=Es(t,e[i+1820>>2],i+1616|0,200,i+784|0,8404992&q,i+1832|0),o=1,P=f,ae=m,u[i+1616|0]==21){g[e[i+1820>>2]-1|0]=e[i+172>>2],Hr(189088,i+1616|0),o=0;break e}}else o=i+416|0,kn(t,e[i+1820>>2],a,o),M=Es(t,e[i+1820>>2],i+1616|0,200,i+784|0,268435456|q,i+1832|0),ds(e[i+1820>>2],o,zr(o)),1024&M||(Hr(i+1616|0,i+1408|0),o=Hr(i+784|0,i+576|0),8&u[188788]&&(Lr(m=o,o=i+576|0),f=e[47195],e[i+48>>2]=o,ba(f,85205,i+48|0)),M=a),o=0;if(a=(d=1024&M)>>>10|0,de>>>0>48)break A;if(de=de+1|0,f=M,!d)break}else M=f,P=0,ae=0,a=0;if(a|!M)break i;for(f=Hr(i+1408|0,i+1616|0),d=kn(t,e[i+1820>>2],M,i+416|0),m=ae,o=M;;){A:{if(g[i+1616|0]=0,u[i+1200|0]){if(g[e[i+1820>>2]-1|0]=e[i+172>>2],a=ma(t,i+1840|0,i+1616|0,i+1824|0,d,s),g[e[i+1820>>2]-1|0]=32,u[i+1616|0]==21){t=i+416|0,ds(e[i+1820>>2],t,zr(t)),Hr(189088,i+1616|0),o=0;break e}if(e[i+1832>>2]||(ae=e[i+1828>>2],e[i+1832>>2]=e[i+1824>>2],e[i+1836>>2]=ae),a){g[i+1200|0]=0;break A}m=e[i+1824>>2]?1:m}if(a=ma(t,i+1820|0,i+1616|0,i+1824|0,d,s),u[i+1616|0]==21){t=i+416|0,ds(e[i+1820>>2],t,zr(t)),Hr(189088,i+1616|0),o=0;break e}if(e[i+1832>>2]||(ae=e[i+1828>>2],e[i+1832>>2]=e[i+1824>>2],e[i+1836>>2]=ae),!a)if(16384&o)Hr(i+1616|0,f);else{q|=d<<11&8192|o<<9&134217728;d:if(524288&o){if(ae=Hr(i+576|0,a=i+784|0),o=Es(t,e[i+1820>>2],i+1616|0,200,a,q,i+1832|0),Ca(a,ae),a=0,!o){o=0;break d}if(1024&o)break d;a=1,d=kn(t,e[i+1820>>2],o,0)}else o=0,Es(t,e[i+1820>>2],i+1616|0,200,0,q,i+1832|0),a=0;if(u[i+1616|0]==21){Hr(189088,i+1616|0),t=i+416|0,ds(e[i+1820>>2],t,zr(t)),g[e[i+1820>>2]-1|0]=e[i+172>>2],o=0;break e}if(a)continue}}break}65536&M||(Un(t,i+1616|0,200,i+784|0),g[i+784|0]=0),a=i+416|0,ds(e[i+1820>>2],a,zr(a));break n}Hr(189088,t=i+992|0),o=!En(1|t,84744,3)<<12;break e}M=0,m=ae}g[e[i+1820>>2]-1|0]=e[i+172>>2]}}if(a=e[i+164>>2],e[i+1852>>2]=8026656,e[i+1848>>2]=8022304,e[i+1844>>2]=7566112,4&q){s:{if((o=255&a)&&((0|o)==102||(Lt=Ar,oA(a<<24>>24))))break s;Lt=Mr}Es(t,Lt,189088,200,0,0,0)}for(a=0,o=i+1200|0,ae=u[i+784|0];;){s:{n:{i:switch(0|(f=u[0|o])){case 0:break s;case 6:case 7:break i;default:break n}a=f}o=o+1|0;continue}break}s:if(a|m){if(e[t+32>>2]|65536&P){for(d=0,ns(t,i+1616|0,i+1832|0,3,0),o=i+1200|0;;){switch(u[0|o]){case 6:d&&(g[0|o]=5),d=1;default:o=o+1|0;continue;case 0:}break}e[i+24>>2]=i+1616,e[i+20>>2]=i+1200,e[i+16>>2]=i+992,mi(189088,200,85233,i+16|0),g[189287]=0,ns(t,189088,i+1832|0,-1,0);break s}e[i+8>>2]=i+1616,e[i+4>>2]=i+1200,e[i>>2]=i+992,mi(189088,200,85233,i),g[189287]=0,ns(t,189088,i+1832|0,-1,0)}else ns(t,a=i+1616|0,i+1832|0,-1,!!(0|ae)<<1),e[i+40>>2]=a,e[i+36>>2]=i+1200,e[i+32>>2]=i+992,mi(189088,200,85233,i+32|0),g[189287]=0;u[i+784|0]&&(a=zr(189088),g[983+(i-a|0)|0]=0,Hr(a+189088|0,i+784|0)),16&(a=q|ot)&&(e[i+1832>>2]=-268435457&e[i+1832>>2]);s:if(!(128&a)|!(16&u[t+14|0]))if(3072&a){if(Ae(t,6),!(2048&a))break s;e[i+1832>>2]=268435456|e[i+1832>>2]}else 16&u[K(e[33264],12)+s|0]&&(1536&(s=e[i+1832>>2])?Ae(t,4):2048&s&&Ae(t,3));else Ae(t,3);8192&M&&(e[t+8192>>2]=2,e[t+8184>>2]=2);s:{if(8&(s=e[i+1836>>2]))e[t+8184>>2]=0,e[t+8188>>2]=3,a=t+8196|0;else if(1&s)e[t+8192>>2]=0,e[t+8184>>2]=2,a=t+8196|0;else if(2&s)e[t+8192>>2]=2,e[t+8184>>2]=0,e[t+8188>>2]=0,a=t+8196|0;else{if(!(4&s))break s;e[t+8184>>2]=0,e[t+8192>>2]=0,e[t+8196>>2]=2,a=t+8188|0}e[a>>2]=0}!u[e[i+1820>>2]]|256&s||((0|(s=e[t+8184>>2]))>0&&(e[t+8184>>2]=s-1),(0|(s=e[t+8192>>2]))>0&&(e[t+8192>>2]=s-1),(0|(s=e[t+8196>>2]))>0&&(e[t+8196>>2]=s-1),(0|(s=e[t+8188>>2]))<=0||(e[t+8188>>2]=s-1)),(0|Be)!=1|e[t+212>>2]!=25966||!Di(e[i+168>>2])|e[i+168>>2]==105||(e[i+1832>>2]=16777216|e[i+1832>>2]);s:if(2&u[t+68|0]&&98304&(a=e[i+1832>>2])&&!((0|(s=zr(189088)-1|0))<=0))for(o=0;;){if(t=o+1|0,u[o+189088|0]==6){s=g[0|(t=t+189088|0)];n:{if(65536&a){if((0|un(69))==(0|s)?(Be=un(101),g[0|t]=Be):Be=u[0|t],d=111,(0|un(79))==Be<<24>>24)break n;break s}if((0|un(101))==(0|s)?(Be=un(69),g[0|t]=Be):Be=u[0|t],d=79,(0|un(111))!=Be<<24>>24)break s}g[0|t]=un(d);break s}if((0|s)==(0|(o=t)))break}t=e[i+1832>>2],ds(r,i+256|0,Xt),o=t|y;break e}if(o=0,g[i+1616|0]=0,qo(t,e[i+1840>>2],i+1616|0,a)){if(f=Hr(189088,i+1616|0),!Mt){if(a=e[i+164>>2],e[i+1408>>2]=8026656,e[i+576>>2]=8022304,e[i+416>>2]=7566112,4&q){r=i+576|1,s=i+1408|1;t:{if((o=255&a)&&((0|o)==102||(ae=r,oA(a<<24>>24))))break t;ae=s}Es(t,ae,f,200,0,0,0)}o=128&e[i+1832>>2]}}else o=((0|Be)>1)<<12}else g[189088]=0;return pe=i+1856|0,o}function sr(t,r,s,a,i,o,d,f){var m,M,y=0,P=0,q=0,ae=0,de=0,ye=0,Be=0,qe=0,ot=0,pt=0,Mt=0,Ft=0,Lt=0,Xt=0,Ar=0,Mr=0,Tr=0,Yr=0,$r=0,ls=0,Ts=0,Hs=0,$s=0,ga=0,fa=0,Pa=0,Fa=0,za=0,Ha=0,Ya=0,Ja=0,sn=0,vn=0,si=0,Ii=0,zi=0,Yi=0,Ro=0,ro=0,wo=0,so=0;pe=m=pe-384|0,M=e[r>>2];e:{t:{s:{n:{if(i){if(u[0|i]!=7)break n;e[r>>2]=(a||1)+M;break s}e[o>>2]=0,e[r>>2]=M+1;break e}Ts=86135,Ha=268435456&d,Ya=134217728&d,Ja=8388608&d,sn=16384&d,vn=8192&d,ga=s-1|0,fa=a-s|0,si=2&d,Ii=128&d,zi=d>>>31|0,Yi=-2147483648&d,Pa=m+96|1;n:for(;;)for(e[m+268>>2]=0,Be=(q=e[r>>2])+a|0,Ar=-2,Lt=-6,s=i,Mr=Yi,Yr=0,Hs=0,Xt=1,y=0,Tr=0,ls=0;;){ae=q,qe=y;i:{c:{A:{d:{l:{o:{p:{b:{m:{C:{h:{M:{I:{x:{N:{V:{for(;pt=s,s=s+1|0,!((P=u[0|pt])>>>0>9);)switch(de=s,0|P){case 0:if(!(s=Fa)){Fa=0,s=86135;break N}for(;;){P=1;W:{E:switch(0|(y=u[0|s])){case 0:case 3:break V;case 5:break E;default:break W}P=2}s=(s+P|0)+(((0|y)==9)<<1)|0}case 1:if(ls=1,!zi)continue;break l;case 2:ls=2;continue;case 4:Fa=s;continue;case 5:s=pt+2|0,y=e[t+320>>2];W:{if((q=u[pt+1|0])>>>0>=32){if(!(y>>>q-32&1))break W;break l}if(!(y>>>q&1))break l}Xt=Xt+1|0;continue;case 9:s=pt+3|0;continue;case 8:ls=1,Hs=1,Mr=0;break;case 3:break x}de=0,y=qe,q=ae;W:switch(0|ls){case 0:E:{_:{if((0|(y=u[0|Be]))!=(0|P)){if((0|y)!=69)break l;if((0|P)==101)break _;break l}if(de=0,(192&P)==128)break E}de=21}Be=Be+1|0,Yr=Yr+1|0;break i;case 1:break I;case 2:break W;default:break C}if(e[m+264>>2]=e[m+268>>2],!u[Be-1|0])break l;Lt=(0|(y=Lt+6|0))>=19?19:y,Ft=Be+1|0,Mt=Ir(m+268|0,Be),ot=u[0|Be],de=20,y=qe;W:{E:switch(P-11|0){case 6:s=pt+2|0,y=e[m+268>>2],q=g[pt+1|0];_:if(P=e[604+(((q=((0|q)<65?191:-65)+q|0)<<2)+t|0)>>2])y=!!(0|Ra(P,y));else{if((0|q)>7)break l;T:{if((0|(P=e[t+600>>2]))>0){if((y=y-P|0)-1>>>0<255)break T;break l}if((P=y-192|0)>>>0<=413){y=u[344+(u[P+94240|0]+t|0)|0]&1<<q;break _}if(y>>>0>255)break l}y=u[344+(t+y|0)|0]&1<<q}if(!y)break l;Be=Be+Mt|0,de=((0|q)==2?19:20)-Lt|0;break i;case 7:if(s=pt+2|0,y=g[pt+1|0],!(y=e[4788+((((0|y)<65?191:-65)+y<<2)+t|0)>>2]))break l;_:for(;;){if((0|(de=u[0|y]))==7)break l;if((0|de)==126){de=20-Lt|0;break i}T:if(ot){if(ye=Be,P=y,(0|de)==(0|ot))for(;;){if((0|(de=u[0|(P=P+1|0)]))!=(0|(y=u[0|(ye=ye+1|0)])))break T;if(!y)break}}else P=y,ye=Be;if(de){for(;;)if(q=u[0|P],P=y=P+1|0,!q)continue _}break}if((0|(y=ye-Be|0))<0)break l;Be=y+Be|0,de=20-Lt|0;break i;case 14:P=e[m+268>>2];_:{T:if(y=e[t+604>>2])y=!!(0|Ra(y,P));else{F:{if((0|(y=e[t+600>>2]))>0){if((ye=P-y|0)-1>>>0<255)break F;break _}if((y=P-192|0)>>>0<=413){y=1&g[344+(u[y+94240|0]+t|0)|0];break T}if(ye=P,P>>>0>255)break c}y=1&g[344+(t+ye|0)|0]}if(y)break l;P=e[m+268>>2]}if(!Ya)break c;if((0|P)==32)break l;break c;case 4:if((y=e[m+268>>2])-48>>>0<10|y-2406>>>0<10)break c;if(!u[t+170|0])break l;de=20-Lt|0;break i;case 5:if(zo(e[m+268>>2]))break l;break A;case 0:if(e[m+268>>2]==e[m+264>>2])break A;break l;case 17:s=pt+2|0,y=32768,de=0;_:{T:switch((P=u[pt+1|0])-1|0){case 0:break C;case 1:break T;default:break _}if(de=1,y=qe,!Ja)break C;break l}if((0|(y=240&P))==16){if(de=23,y=qe,f>>>(15&P)&16384)break C;break l}if((0|P)!=3&(0|y)!=32||(ds(y=m+96|0,ga,q=1+(e[r>>2]+(Yr+fa|0)|0)|0),g[0|(y=y+q|0)]=32,g[y+1|0]=0,e[33265]=0,e[33266]=0,e[m+16>>2]=Pa,ma(t,m+16|0,m+272|0,133060,0,0),de=23,!((0|P)!=3|(0|(ye=e[33265]))>=0|16384&e[33266])))break i;if(y=qe,q=ae,ye>>>(15&P)&16384)break C;break l;case 34:_:{if(y=ot-32|0){if((0|y)==13)break _;break l}if(!sn)break l}ye=22-Lt|0;break d;case 10:if(y=1,u[0|s]==21)break W;break o;case 18:if((0|(ye=e[m+268>>2]))!=32)for(P=Be+Mt|0;;){_:{T:if(y=e[t+632>>2])y=!!(0|Ra(y,ye));else{F:{if((0|(y=e[t+600>>2]))>0){if((ye=ye-y|0)-1>>>0<255)break F;break _}if((y=ye-192|0)>>>0<=413){y=128&u[344+(u[y+94240|0]+t|0)|0];break T}if(ye>>>0>255)break _}y=128&u[344+(t+ye|0)|0]}if(y)break l}if(P=Ir(m+268|0,P)+P|0,(0|(ye=e[m+268>>2]))==32)break}ye=19-Lt|0;break d;case 49:break p;case 2:break b;case 3:break m;case 1:break C;case 13:break h;case 12:break E;default:break M}Ir(m+272|0,s),Mt=-1;E:if((0|(y=e[m+272>>2]))!=(0|(P=e[m+268>>2])))if(-33&P)for(;;){ot=Be,Mt=-1;_:if((0|y)==18&&(y=g[pt+2|0],de=e[4788+((((0|y)<65?191:-65)+y<<2)+t|0)>>2])){for(;;){if((0|(q=u[0|de]))==7)break _;if((0|q)==126){Mt=0;break _}T:if((0|(Be=u[0|ot]))==(0|q)){if(y=ot,P=de,Be)for(;;){if((0|(q=u[0|(P=P+1|0)]))!=(0|(de=u[0|(y=y+1|0)])))break T;if(!de)break}}else P=de,y=ot;if(!q){y=y-ot|0;break}for(;y=u[0|P],P=de=P+1|0,y;);}Mt=y}if(q=Ir(m+268|0,ot),(0|(y=e[m+272>>2]))==(0|(P=e[m+268>>2]))|!(-33&P))break E;if(Be=q+ot|0,(0|Mt)!=-1)break}else ot=Be;else ot=Be;Be=(0|y)==(0|P)||(0|Mt)>=0?ot:Ft,de=0;break i}for(;y=y+1|0,u[0|(s=s+1|0)]==21;);break o}s=s+1|0}de=pt}if(!(u[ae-1|0]!=32&Hs|Mr||((0|(P=Hs?Xt+4|0:Xt))>=(0|$s)&&(Ro=Tr,ro=qe,$s=P,wo=Yr,Ts=s),!(8&e[47197])|Ha|(0|P)<=0))){for(Lr(s,pt=m+272|0),Ft=e[47195],q=m+16|0,s=0,ot=0,Mr=0,Tr=0,pe=Be=pe-496|0,g[Be+80|0]=0,(0|a)>0?(ds(Be+288|0,M,a),qe=a):qe=0,g[qe+(y=Be+288|0)|0]=0,ae=zr(y)+y|0,Mt=(0|d)<0;;){if(ye=u[0|i],qe=i,i=i+1|0,ye>>>0>9)for(;;){x:{N:{V:{W:{E:{_:switch((y=255&ye)-14|0){case 4:break V;case 3:break W;case 0:break E;case 14:break _;default:break N}if(qe=qe+2|0,ye=32,!Mt&(0|(i=u[0|i]))==1)break x;g[0|ae]=36,Hr(y=ae+1|0,i=co(128960,i)),ae=zr(i)+y|0;break x}y=u[qe+2|0],ye=u[0|i],e[Be+36>>2]=127&u[qe+3|0],e[Be+32>>2]=4&y?80:83,Br(Be+48|0,85131,Be+32|0),1&y&&(i=zr(i=Be+48|0)+i|0,g[0|i]=101,g[i+1|0]=0),2&(i=127&y)&&(y=zr(y=Be+48|0)+y|0,g[0|y]=105,g[y+1|0]=0),4&i&&(y=zr(y=Be+48|0)+y|0,g[0|y]=112,g[y+1|0]=0),8&i&&(y=zr(y=Be+48|0)+y|0,g[0|y]=118,g[y+1|0]=0),16&i&&(y=zr(y=Be+48|0)+y|0,g[0|y]=100,g[y+1|0]=0),32&i&&(y=zr(y=Be+48|0)+y|0,g[0|y]=102,g[y+1|0]=0),i>>>0>=64&&(i=zr(i=Be+48|0)+i|0,g[0|i]=113,g[i+1|0]=0),1&ye&&(i=zr(i=Be+48|0)+i|0,g[0|i]=116,g[i+1|0]=0),qe=qe+4|0,ae=Hr(ae,i=Be+48|0)+zr(i)|0,ye=32;break x}qe=qe+2|0,ye=u[g[0|i]+93871|0];break x}i=g[0|i],g[0|ae]=76,y=((i=i+((0|i)<65?191:-65)|0)>>>0)/10|0,g[ae+1|0]=y+48,ye=i-K(y,10)|48,(0|Tr)==1&&(g[0|ae]=ye,ye=76),qe=qe+2|0,ae=ae+2|0;break x}ye=y>>>0<=31?u[y+93904|0]:(0|y)==32?95:ye,qe=i}if(g[0|ae]=ye,i=qe+1|0,ae=ae+1|0,!((ye=u[0|qe])>>>0>=10))break}y=1;x:switch(0|ye){case 1:y=s;case 8:g[0|ae]=0,ae=Be+80|0,s=y,Tr=1;continue;case 2:g[0|ae]=0,qe=zr(y=Be+288|0)+y|0,ae=u[84899]|u[84900]<<8,g[0|qe]=ae,g[qe+1|0]=ae>>>8,Tr=2,g[qe+2|0]=u[84901],ae=zr(y)+y|0;continue;case 5:ot=g[0|i],i=qe+2|0;continue;case 9:Mr=(u[0|i]+K(u[qe+2|0],255)|0)-256|0,i=qe+3|0;continue;case 0:case 3:break x;default:continue}break}if(g[0|ae]=0,ae=q,(0|Mr)>0&&(e[Be+16>>2]=Mr,Br(q,85581,Be+16|0),ae=q+7|0),(0|ot)>0&&(e[Be>>2]=ot,Br(ae,85694,Be),ae=zr(ae)+ae|0),1&((0|(i=zr(Be+80|0)))>0|s)){1&s&&(g[0|ae]=95,ae=ae+1|0);x:if(!((0|(qe=i-1|0))<0|ae>>>0>=q>>>0))for(;;){if(g[0|ae]=u[(Be+80|0)+qe|0],ae=ae+1|0,(0|qe)<=0)break x;if(qe=qe-1|0,!(ae>>>0<q>>>0))break}g[0|ae]=41,g[ae+1|0]=32,ae=ae+2|0}g[0|ae]=0,g[(s=Be+288|0)+((q+3|0)-ae|0)|0]=0,Ca(ae,s),(0|(s=zr(q)))<=7&&(wr(s+q|0,32,8-s|0),s=8),g[s+q|0]=0,pe=Be+496|0,e[m+4>>2]=q,e[m>>2]=(0|a)>1?P+35|0:P,e[m+8>>2]=pt,ba(Ft,89088,m)}s=de;break l}if(!u[0|ae])break l;Ar=(0|(y=Ar+2|0))>=19?19:y,Ir(m+264|0,ae),y=Us(m+268|0,q=ae-1|0),ot=u[0|q],Ft=q;I:{x:{N:{V:{W:{E:switch(P-10|0){case 13:if(y=(0|($r=u[0|s]))==(0|(P=u[0|ae])),Mt=-1,(0|P)==32|(0|P)==(0|$r))break V;if(P)break W;break N;case 7:s=pt+2|0,de=e[m+268>>2],ae=g[pt+1|0];_:if(P=e[604+(((ae=((0|ae)<65?191:-65)+ae|0)<<2)+t|0)>>2])P=!!(0|Ra(P,de));else{if((0|ae)>7)break l;T:{if((0|(P=e[t+600>>2]))>0){if((de=de-P|0)-1>>>0<255)break T;break l}if((P=de-192|0)>>>0<=413){P=u[344+(u[P+94240|0]+t|0)|0]&1<<ae;break _}if(de>>>0>255)break l}P=u[344+(t+de|0)|0]&1<<ae}if(!P)break l;q=1+(q-y|0)|0,de=((0|ae)==2?19:20)-Ar|0;break I;case 8:if(s=pt+2|0,y=g[pt+1|0],!(y=e[4788+((((0|y)<65?191:-65)+y<<2)+t|0)>>2]))break l;_:{for(;;){if((0|(ot=u[0|y]))==7)break l;if((0|ot)==126){Mt=0;break _}P=q;T:{F:{if((0|(pt=(Mt=zr(y))-1|0))>0)for(P=ae-Mt|0,de=0,ye=q;;){if(!u[0|(ye=ye-1|0)])break F;if((0|pt)==(0|(de=de+1|0)))break}X:if(!((0|(de=u[0|P]))!=(0|ot)|!de))for(;;){if((0|(ot=u[0|(y=y+1|0)]))!=(0|(de=u[0|(P=P+1|0)])))break X;if(!de)break}if(!ot)break T}for(P=y;de=u[0|P],P=y=P+1|0,de;);continue}break}if((0|Mt)<0)break l}de=20-Lt|0,q=1+(q-Mt|0)|0;break I;case 15:P=e[m+268>>2];_:{T:if(ae=e[t+604>>2])ae=!!(0|Ra(ae,P));else{F:{if((0|(ae=e[t+600>>2]))>0){if((P=P-ae|0)-1>>>0<255)break F;break _}if((ae=P-192|0)>>>0<=413){ae=1&g[344+(u[ae+94240|0]+t|0)|0];break T}if(P>>>0>255)break _}ae=1&g[344+(t+P|0)|0]}if(ae)break l}de=20-Ar|0,q=1+(q-y|0)|0;break I;case 1:if(e[m+268>>2]!=e[m+264>>2])break l;de=21-Ar|0,q=1+(q-y|0)|0;break I;case 5:if(!((ae=e[m+268>>2])-48>>>0<10|ae-2406>>>0<10))break l;de=21-Ar|0,q=1+(q-y|0)|0;break I;case 6:if(zo(e[m+268>>2]))break l;de=21-Lt|0,q=1+(q-y|0)|0;break I;case 18:if(s=pt+2|0,!((0|(P=u[pt+1|0]))==3|(240&P)==32)||(ds(y=m+96|0,ga,q=1+(e[r>>2]+(Yr+fa|0)|0)|0),g[0|(y=y+q|0)]=32,g[y+1|0]=0,e[33265]=0,e[33266]=0,e[m+16>>2]=Pa,ma(t,m+16|0,m+272|0,133060,0,0),de=23,!((0|P)!=3|(0|(ye=e[33265]))>=0|16384&e[33266])))break i;if(y=qe,q=ae,ye>>>(15&P)&16384)break C;break l;case 11:if(P=1,u[0|s]==21)for(;P=P+1|0,u[0|(s=s+1|0)]==21;);if(e[t+8208>>2]<(0|P))break l;de=18+(P-Ar|0)|0;break I;case 0:if(de=19,y=qe,q=ae,e[t+8212>>2]>0)break C;break l;case 19:if(de=3,(0|(ye=e[m+268>>2]))==32)break I;for(P=1+(q-y|0)|0;;){_:{T:if(y=e[t+632>>2])y=!!(0|Ra(y,ye));else{F:{if((0|(y=e[t+600>>2]))>0){if((ye=ye-y|0)-1>>>0<255)break F;break _}if((y=ye-192|0)>>>0<=413){y=128&u[344+(u[y+94240|0]+t|0)|0];break T}if(ye>>>0>255)break _}y=128&u[344+(t+ye|0)|0]}if(y)break l}if(P=P-Us(m+268|0,P-1|0)|0,(0|(ye=e[m+268>>2]))==32)break}break I;case 16:if(de=1,y=qe,q=ae,e[t+8184>>2])break C;break l;case 9:if(de=1,y=qe,q=ae,si)break C;break l;case 36:for(;;){if(de=50,y=qe,!(ae=(255&ot)-32|0))break l;if((0|ae)==14)break C;ot=u[0|(Ft=Ft-1|0)]}case 35:break E;default:break x}E:{if(y=ot-32|0){if((0|y)==13)break E;break l}if(!Ii)break l}de=22-Lt|0;break I}W:{for(;;){Mt=-1,ye=ae,ae=ae-1|0;E:if((0|$r)==18&&(y=g[pt+2|0],de=e[4788+((((0|y)<65?191:-65)+y<<2)+t|0)>>2]))for(so=ye+1|0;;){if((0|(Ft=u[0|de]))==7){Mt=-1;break E}if((0|Ft)==126){Mt=0;break E}P=ye;_:{if((0|(za=(Mt=zr(de))-1|0))>0)for(P=so-Mt|0,ot=0,y=ye;;){if(!u[0|(y=y-1|0)])break _;if((0|za)==(0|(ot=ot+1|0)))break}T:if(!((0|(y=u[0|P]))!=(0|Ft)|!y))for(;;){if((0|(Ft=u[0|(de=de+1|0)]))!=(0|(y=u[0|(P=P+1|0)])))break T;if(!y)break}if(!Ft)break E}for(P=de;y=u[0|P],P=de=P+1|0,y;);}if(y=(0|(P=u[0|ae]))==(0|$r),(0|P)==32|(0|P)==(0|$r))break W;if(!P){ae=ye;break N}if((0|Mt)!=-1)break}ae=ye;break N}ae=ye}q=y?ae:q}de=0,q=(0|Mt)<0?q:ae+1|0;break I}if((0|P)!=(0|ot))break l;de=4,(0|P)!=32&&(de=(192&P)!=128?21-Ar|0:0)}y=qe;break C}if((0|P)!=(0|ot))break l;ye=(192&P)!=128?21-Lt|0:0;break d}if(de=1,vn)break l}Xt=de+Xt|0;continue}if(y=g[pt+1|0],qe=u[pt+3|0],q=u[pt+2|0],1&!(e[t+8208>>2]|4&q)&g[t+84|0])break l;s=pt+4|0,ye=0,qe=127&qe|(127&q)<<8|y<<16;break d}b:if(!(Ft>>>0<=(P=e[r>>2]+a|0)>>>0)){for(;;){if(u[0|P]!=101){if(y=P>>>0<Be>>>0,P=P+1|0,y)continue;break b}break}ye=0,Tr=P;break d}ye=0;break d}de=-20;break i}if(ot=0,(0|(P=e[m+268>>2]))!=32)for(ye=Be+Mt|0,de=0;;){if(!de){o:{p:if(q=e[t+632>>2])P=!!(0|Ra(q,P));else{b:{if((0|(q=e[t+600>>2]))>0){if((P=P-q|0)-1>>>0<255)break b;break o}if((q=P-192|0)>>>0<=413){P=128&u[344+(u[q+94240|0]+t|0)|0];break p}if(P>>>0>255)break o}P=128&u[344+(t+P|0)|0]}P&&(ot=ot+1|0)}P=e[m+268>>2]}o:if(q=e[t+632>>2])de=!!(0|Ra(q,P));else{p:{if((0|(q=e[t+600>>2]))>0){if(de=0,(P=P-q|0)-1>>>0<255)break p;break o}if((q=P-192|0)>>>0<=413){de=128&u[344+(u[q+94240|0]+t|0)|0];break o}if(de=0,P>>>0>255)break o}de=128&u[344+(t+P|0)|0]}if(ye=Ir(m+268|0,ye)+ye|0,(0|(P=e[m+268>>2]))==32)break}if(!((0|y)>(0|ot))){ye=18+(y-Lt|0)|0;break d}}for(;y=u[0|s],s=i=s+1|0,y;);if(u[0|i]!=7)continue n;if(t=a+wo|0,e[r>>2]=e[r>>2]+(t||1),$s)break t;break s}y=qe,Be=Ft,q=ae,Xt=ye+Xt|0;continue}Be=Be+Mt|0,de=21-Lt|0;break i}Be=Be+Mt|0,de=20-Lt|0}y=qe,q=ae,Xt=de+Xt|0}}Ts=86135}e[o+12>>2]=Ro,e[o+8>>2]=ro,e[o+4>>2]=Ts,e[o>>2]=$s}pe=m+384|0}function nr(t,r){var s,a=0,i=0,o=0,d=0,f=0,m=0,M=0,y=0,P=0,q=0,ae=0,de=0,ye=0,Be=0,qe=0,ot=0,pt=0,Mt=0,Ft=0,Lt=0,Xt=0,Ar=0,Mr=0,Tr=0,Yr=0,$r=0,ls=0,Ts=0,Hs=0,$s=0;pe=s=pe-1168|0,e[s+928>>2]=0,e[s+932>>2]=0,e[s+920>>2]=0,e[s+924>>2]=0,e[s+912>>2]=0,e[s+916>>2]=0,e[s+904>>2]=0,e[s+908>>2]=0,e[s+896>>2]=0,e[s+900>>2]=0;e:{t:{if(t){if(u[0|t]|8&r)break t;break e}if(!(8&r))break e}if(na(s+1088|0,t,40),16&r){if((0|ci(Hr(s+704|0,t)))<=0)break e;ye=8&r}else(ye=8&r)|u[s+1088|0]||(I[s+1088>>1]=u[85055]|u[85056]<<8,g[s+1090|0]=u[85057]),e[s+496>>2]=137584,e[s+500>>2]=47,e[s+504>>2]=47,Br(a=s+512|0,85286,s+496|0),e[s+484>>2]=s+1088,e[s+480>>2]=a,Br(a=s+704|0,85425,s+480|0),(0|ci(a))>0||(e[s+468>>2]=47,e[s+472>>2]=47,e[s+464>>2]=137584,Br(a=s+512|0,85648,s+464|0),e[s+452>>2]=s+1088,e[s+448>>2]=a,Br(s+704|0,85425,s+448|0));if(i=ye?86012:85055,!(Be=qr(s+704|0,85712))){if(a=0,3&r)break e;i=(0|Zi(a=s+1088|0))<0?i:a}if((de=2&r)||(a=e[47192])&&(cl(a),e[47192]=0),pt=Hr(s+992|0,i),ot=Hr(s+944|0,i),de?((a=di(200992,43))&&(g[0|a]=0),e[s+432>>2]=t+3,Br(t=s+704|0,86030,s+432|0),Ca(200992,t)):(e[32972]=199592,na(200992,t,40),g[201088]=0,g[201040]=0,e[50299]=200992,e[50298]=201088,e[50297]=201040),Ss(de),Be){for(Ft=e[30450],Lt=s+548|0,Xt=s+544|0,Ar=s+540|0,Mr=s+536|0,Tr=s+532|0,Yr=s+528|0,$r=12|(t=s+512|0),ls=8|t,Ts=4|t;gs(s+704|0,190,Be);){t=s+704|0;t:{if(u[s+704|0]!=35){s:if(!((0|(t=zr(s+704|0)-1|0))<=0))for(;;){if(!((0|(i=g[0|(a=(s+704|0)+t|0)]))==32|i-9>>>0<5))break s;if(g[0|a]=0,!((0|(t=t-1|0))>0))break}if(!(t=Vs(s+704|0)))break t}g[0|t]=0}t=s+704|0;t:if(a=u[s+704|0])for(;;){if((0|(a=a<<24>>24))==32|a-9>>>0<5)break t;if(!(a=u[0|(t=t+1|0)]))break}if(g[0|t]=0,u[s+704|0])if(t=t+1|0,a=Si(129744,s+704|0)){o=0,pe=i=pe-416|0;t:if(d=e[47192]){switch(a-19|0){case 16:if(e[i+32>>2]=i+412,(0|lr(t,84249,i+32|0))!=1)break t;e[d+324>>2]=e[i+412>>2];break t;case 8:Dl(t,d+320|0,27);break t;case 2:if(e[i+48>>2]=188784,lr(t,84249,i+48|0),!(t=u[188784]))break t;e[d+152>>2]=t;break t;case 11:if(u[0|t]){for(f=e[30450];;)if(a=t,t=t+1|0,!((0|(o=g[0|a]))==32|o-9>>>0<5)){for(o=Xi(a),e[i+412>>2]=o,(0|o)>0&&(o>>>0<=31?e[d+104>>2]=e[d+104>>2]|1<<o:o>>>0<=63?e[d+108>>2]=e[d+108>>2]|1<<o-32:(e[i+64>>2]=o,ba(f,84700,i- -64|0)),a=t);a=(t=a)+1|0,(o=g[0|t])-48>>>0<10|(32|o)-97>>>0<26;);if(!o)break}}8&(t=e[d+104>>2])&&(e[d+124>>2]=46,e[d+128>>2]=44),4&t&&(e[d+124>>2]=0);break t;default:if((65280&a)!=256)break t;e[i+16>>2]=24+(d+((255&a)<<2)|0),lr(t,84249,i+16|0);break t;case 1:e[i+144>>2]=d,e[i+148>>2]=d+4,lr(t,85642,i+144|0);break t;case 3:if(a=0,wr(o=i+160|0,0,240),e[i+132>>2]=i+360,e[i+128>>2]=i+320,e[i+124>>2]=i+280,e[i+120>>2]=i+240,e[i+116>>2]=i+200,e[i+112>>2]=o,o=lr(t,85037,i+112|0),e[i+412>>2]=o,e[d+152>>2]=0,(0|o)<=0)break t;for(y=e[30450];;){s:if(Ta(f=(i+160|0)+K(a,40)|0,85301)){n:{if((0|(M=e[34454]))>0)for(ae=e[34455],t=0;;){if(!Ta(f,ae+K(t,68)|0))break n;if((0|M)==(0|(t=t+1|0)))break}e[i+96>>2]=f,ba(y,85562,i+96|0),o=e[i+412>>2];break s}g[156+(a+d|0)|0]=t}if(!((0|o)>(0|(a=a+1|0))))break}break t;case 9:e[i+88>>2]=d+20,e[i+84>>2]=d+16,e[i+80>>2]=d+8,lr(t,84778,i+80|0);break t;case 10:Dl(t,d+12|0,29);break t;case 5:if((0|(y=JA(t,i+160|0)))<=0)break t;if(a=0,t=0,y>>>0>=4)for(ae=-4&y,f=d+304|0;M=i+160|0,I[f+(t<<1)>>1]=e[M+(t<<2)>>2],I[f+((m=1|t)<<1)>>1]=e[M+(m<<2)>>2],I[f+((m=2|t)<<1)>>1]=e[M+(m<<2)>>2],I[f+((m=3|t)<<1)>>1]=e[M+(m<<2)>>2],t=t+4|0,(0|ae)!=(0|(o=o+4|0)););if(!(o=3&y))break t;for(;I[304+(d+(t<<1)|0)>>1]=e[(i+160|0)+(t<<2)>>2],t=t+1|0,(0|o)!=(0|(a=a+1|0)););break t;case 6:if((0|(y=JA(t,i+160|0)))<=0)break t;if(a=0,t=0,y>>>0>=4)for(ae=-4&y,f=d+296|0;M=i+160|0,g[t+f|0]=e[M+(t<<2)>>2],g[(m=1|t)+f|0]=e[M+(m<<2)>>2],g[(m=2|t)+f|0]=e[M+(m<<2)>>2],g[(m=3|t)+f|0]=e[M+(m<<2)>>2],t=t+4|0,(0|ae)!=(0|(o=o+4|0)););if(!(o=3&y))break t;for(;g[296+(t+d|0)|0]=e[(i+160|0)+(t<<2)>>2],t=t+1|0,(0|o)!=(0|(a=a+1|0)););break t;case 7:if((0|(y=JA(t,i+160|0)))<=0)break t;if(a=0,t=0,y>>>0>=4)for(ae=-4&y,f=d+304|0;m=M=f+(t<<1)|0,P=B[M>>1],M=i+160|0,I[m>>1]=P+B[M+(t<<2)>>1],I[(P=f+((m=1|t)<<1)|0)>>1]=B[P>>1]+B[M+(m<<2)>>1],I[(P=f+((m=2|t)<<1)|0)>>1]=B[P>>1]+B[M+(m<<2)>>1],I[(P=f+((m=3|t)<<1)|0)>>1]=B[P>>1]+B[M+(m<<2)>>1],t=t+4|0,(0|ae)!=(0|(o=o+4|0)););if(!(o=3&y))break t;for(;I[304+(f=d+(t<<1)|0)>>1]=B[f+304>>1]+B[(i+160|0)+(t<<2)>>1],t=t+1|0,(0|o)!=(0|(a=a+1|0)););break t;case 4:g[d+169|0]=1;break t;case 0:}g[d+208|0]=1}else e[i>>2]=co(129568,a),ba(e[30450],89101,i);pe=i+416|0}else{switch(Si(131904,s+704|0)-1|0){case 1:if(de||(g[s+1040|0]=0,e[s+512>>2]=5,e[s+32>>2]=s+1040,e[s+36>>2]=s+512,lr(t,86237,s+32|0),e[s+1040>>2]==1769103734&e[s+1044>>2]==7630433))continue;if((t=zr(s+1040|0)+2|0)>>>0<99-qe>>>0&&(g[0|(a=qe+201088|0)]=e[s+512>>2],Hr(a+1|0,s+1040|0),qe=t+qe|0),!Hs){if(t=0,(a=f=s+1040|0)||(a=e[57150])){if(t=86875,e[24+(i=pe-32|0)>>2]=0,e[i+28>>2]=0,e[i+16>>2]=0,e[i+20>>2]=0,e[i+8>>2]=0,e[i+12>>2]=0,e[i>>2]=0,e[i+4>>2]=0,d=0,o=u[86875])if(u[86876]){for(;e[(d=i+(o>>>3&28)|0)>>2]=e[d>>2]|1<<o,o=u[t+1|0],t=t+1|0,o;);t:if(o=u[0|(t=a)])for(;;){if(!(e[i+(o>>>3&28)>>2]>>>o&1))break t;if(o=u[t+1|0],t=t+1|0,!o)break}d=t-a|0}else{for(t=a;i=t,t=t+1|0,u[0|i]==(0|o););d=i-a|0}if(u[0|(t=d+a|0)]){a=86875,pe=o=pe-32|0,i=g[86875];t:if(u[86876]&&i){if(wr(o,0,32),i=u[86875])for(;e[(d=o+(i>>>3&28)|0)>>2]=e[d>>2]|1<<i,i=u[a+1|0],a=a+1|0,i;);if(a=t,i=u[0|t])for(;;){if(e[o+(i>>>3&28)>>2]>>>i&1)break t;if(i=u[a+1|0],a=a+1|0,!i)break}}else a=ws(t,i);pe=o+32|0,u[0|(a=(a-t|0)+t|0)]?(e[57150]=a+1,g[0|a]=0):e[57150]=0}else e[57150]=0,t=0}a=Hr(pt,t),Hr(ot,t),Zi(Hr(s+896|0,t)),e[47192]=He(a),na(e[32972]+40|0,f,20)}Hs=1;continue;case 0:if(de)continue;for(;a=t,t=t+1|0,(0|(i=g[0|a]))==32|i-9>>>0<5;);na(201040,a,40);continue;case 2:e[s+1152>>2]=0,a=s+512|0,e[s+48>>2]=a,e[s+52>>2]=s+1152,lr(t,86237,s+48|0),g[201200]=Si(132112,a),g[201201]=e[s+1152>>2];continue;case 4:e[s+64>>2]=ot,lr(t,86939,s- -64|0);continue;case 3:e[s+80>>2]=s+896,lr(t,86939,s+80|0);continue;case 8:if(e[s+1152>>2]=100,e[s+1164>>2]=100,e[s+1148>>2]=100,e[s+112>>2]=s+1144,e[s+1144>>2]=0,e[s+96>>2]=s+512,e[s+100>>2]=s+1152,e[s+104>>2]=s+1164,e[s+108>>2]=s+1148,(0|lr(t,91156,s+96|0))<2||(t=e[s+512>>2])>>>0>8||((0|(a=e[s+1152>>2]))>=0&&(i=e[32972]+(t<<1)|0,a=ve(q=2.56001*+(0|a))<2147483648?~~q:-2147483648,I[i+236>>1]=a,I[i+164>>1]=a),(0|(a=e[s+1164>>2]))>=0&&(i=e[32972]+(t<<1)|0,a=ve(q=2.56001*+(0|a))<2147483648?~~q:-2147483648,I[i+254>>1]=a,I[i+182>>1]=a),(0|(i=e[s+1148>>2]))<0?a=e[32972]:(f=(a=e[32972])+(t<<1)|0,i=ve(q=2.56001*+(0|i))<2147483648?~~q:-2147483648,I[f+200>>1]=i),I[218+((t<<1)+a|0)>>1]=e[s+1144>>2],t))continue;I[a+200>>1]=(0|K(I[a+200>>1],105))/100;continue;case 9:if(e[s+132>>2]=s+696,e[s+128>>2]=s+700,(0|lr(t,87106,s+128|0))!=2)continue;if(t=e[32972],a=e[s+700>>2],e[t+64>>2]=(a<<12)-36864,e[t+68>>2]=K(e[s+696>>2]-a|0,108),ve(q=256*(+(a-82|0)/82*.25+1))<2147483648){e[t+116>>2]=~~q;continue}e[t+116>>2]=-2147483648;continue;case 35:$s||Zi(s+896|0),e[s+1164>>2]=0,g[s+1156|0]=u[91267],e[s+1152>>2]=u[91263]|u[91264]<<8|u[91265]<<16|u[91266]<<24,e[s+144>>2]=s+1164,e[s+148>>2]=s+512,e[s+152>>2]=s+1152,(0|lr(t,91302,s+144|0))<2|e[49848]>59||(t=_A(s+512|0))&&(g[K(e[49848],3)+199408|0]=t,t=_A(s+1152|0),a=e[49848],i=K(a,3)+199408|0,g[i+1|0]=t,e[49848]=a+1,g[i+2|0]=e[s+1164>>2]),$s=1;continue;case 10:e[s+1140>>2]=0,a=e[32972],e[a+100>>2]=0,e[s+164>>2]=a+100,e[s+160>>2]=a+96,lr(t,87106,s+160|0);continue;case 11:if(e[s+176>>2]=s+1140,(0|lr(t,87268,s+176|0))!=1)continue;e[e[32972]+88>>2]=e[s+1140>>2]<<5;continue;case 12:if(e[s+192>>2]=s+1140,(0|lr(t,87268,s+192|0))!=1)continue;e[e[32972]+92>>2]=e[s+1140>>2];continue;case 13:if(e[s+208>>2]=s+1140,(0|lr(t,87268,s+208|0))!=1)continue;a=e[32972],(0|(t=e[s+1140>>2]))>=5&&(e[a+108>>2]=1,e[s+1140>>2]=4,t=4),e[a+104>>2]=t+1;continue;case 14:for(e[s+552>>2]=-1,e[s+556>>2]=-1,e[s+544>>2]=-1,e[s+548>>2]=-1,e[s+536>>2]=-1,e[s+540>>2]=-1,e[s+528>>2]=-1,e[s+532>>2]=-1,e[s+240>>2]=Yr,e[s+244>>2]=Tr,e[s+248>>2]=Mr,e[s+252>>2]=Ar,e[s+256>>2]=Xt,e[s+260>>2]=Lt,e[s+520>>2]=-1,e[s+524>>2]=-1,e[s+512>>2]=-1,e[s+516>>2]=-1,e[s+228>>2]=Ts,e[s+232>>2]=ls,e[s+236>>2]=$r,e[s+224>>2]=s+512,lr(t,84222,s+224|0),ae=e[32972],t=0,o=e[s+516>>2],i=0;;){if(a=i,d=o,f=t,(0|(i=e[(o=(t<<=2)+(s+512|0)|0)>>2]))==-1&&(i=8e3,e[o>>2]=8e3,f&&(e[(s+512|0)+(4|t)>>2]=e[508+(t+s|0)>>2])),o=e[(s+512|0)+(4|t)>>2],!((0|a)>=(0|(i=(0|i)/8|0))||(0|(M=i-a|0))<=0||(y=a+1|0,t=a,1&M&&(g[344+(a+ae|0)|0]=(0|d)>=255?255:d,t=y),(0|i)==(0|y))))for(y=o-d|0;P=ae+344|0,m=d+((0|K(y,t-a|0))/(0|M)|0)|0,g[P+t|0]=(0|m)>=255?255:m,m=d+((0|K(y,(Mt=t+1|0)-a|0))/(0|M)|0)|0,g[P+Mt|0]=(0|m)>=255?255:m,(0|i)!=(0|(t=t+2|0)););if(t=f+2|0,!(f>>>0<10))break}continue;case 15:if(e[s+272>>2]=s+1140,(0|lr(t,87268,s+272|0))!=1)continue;e[e[32972]+112>>2]=(e[s+1140>>2]<<6)/100;continue;case 16:a=e[32972],e[(i=a+300|0)>>2]=0,e[i+4>>2]=0,e[(o=a+292|0)>>2]=0,e[o+4>>2]=0,e[(d=a+284|0)>>2]=0,e[d+4>>2]=0,e[(f=a+276|0)>>2]=0,e[f+4>>2]=0,e[s+316>>2]=a+304,e[s+312>>2]=i,e[s+308>>2]=a+296,e[s+304>>2]=o,e[s+300>>2]=a+288,e[s+296>>2]=d,e[s+292>>2]=a+280,e[s+288>>2]=f,a=lr(t,84553,s+288|0),t=e[32972],e[t+272>>2]=a,e[t+276>>2]=0-e[t+276>>2],e[t+284>>2]=0-e[t+284>>2],e[t+292>>2]=0-e[t+292>>2],e[t+300>>2]=0-e[t+300>>2];continue;case 17:a=e[32972],e[(i=a+336|0)>>2]=0,e[i+4>>2]=0,e[(o=a+328|0)>>2]=0,e[o+4>>2]=0,e[(d=a+320|0)>>2]=0,e[d+4>>2]=0,e[(f=a+312|0)>>2]=0,e[f+4>>2]=0,e[s+348>>2]=a+340,e[s+344>>2]=i,e[s+340>>2]=a+332,e[s+336>>2]=o,e[s+332>>2]=a+324,e[s+328>>2]=d,e[s+324>>2]=a+316,e[s+320>>2]=f,t=lr(t,84553,s+320|0),e[e[32972]+308>>2]=t;continue;case 36:a=e[32972],e[s+352>>2]=a+120,e[s+356>>2]=a+124,e[s+1140>>2]=lr(t,87106,s+352|0);continue;case 33:e[s+368>>2]=e[32972]+84,lr(t,87268,s+368|0),cn(3);continue;case 31:a=e[32972],e[(i=a+156|0)>>2]=0,e[i+4>>2]=0,e[(o=a+148|0)>>2]=0,e[o+4>>2]=0,e[(d=a+140|0)>>2]=0,e[d+4>>2]=0,e[(f=a+132|0)>>2]=0,e[f+4>>2]=0,e[s+412>>2]=a+160,e[s+408>>2]=i,e[s+404>>2]=a+152,e[s+400>>2]=o,e[s+396>>2]=a+144,e[s+392>>2]=d,e[s+388>>2]=a+136,e[s+384>>2]=f,lr(t,84553,s+384|0),t=e[32972],e[t+152>>2]=e[t+152>>2]-40;continue;case 32:e[s+416>>2]=145740,lr(t,87268,s+416|0),cn(3);continue;case 6:case 7:continue}e[s+16>>2]=s+704,ba(Ft,87359,s+16|0)}}Za(Be)}t:{if((t=e[47192])|de){if(de)break t}else t=He(pt),e[47192]=t;s:{if(!ye){if((0|(t=Zi(s+896|0)))<0&&(e[s>>2]=s+896,ba(e[30450],87567,s),t=0),e[e[32972]+60>>2]=t,a=e[47192],e[a+292>>2]=t,Ls(a,ot,4&r),u[132848])break s;cl(e[47192]),a=0;break e}e[e[32972]+60>>2]=0,e[t+292>>2]=0}g[qe+201088|0]=0}a=e[32972]}return pe=s+1168|0,a}function lr(t,r,s){var a,i,o,d=0,f=0,m=0,M=0,y=0,P=0,q=0,ae=0,de=0,ye=0,Be=0,qe=0,ot=0,pt=0,Mt=0,Ft=0,Lt=0,Xt=0,Ar=0;pe=o=pe-16|0,e[o+12>>2]=s,pe=d=pe-144|0,a=wr(d,0,144),e[a+76>>2]=-1,e[a+44>>2]=t,e[a+32>>2]=18,e[a+84>>2]=t,d=r,Lt=s,t=0,pe=i=pe-304|0;e:{t:{s:if(e[a+4>>2]||(Xo(a),e[a+4>>2])){if(!(r=u[0|d]))break e;n:{i:{c:{A:{for(;;){d:{l:if((0|(r&=255))==32|r-9>>>0<5){for(;r=d,d=d+1|0,(0|(s=u[r+1|0]))==32|s-9>>>0<5;);for(li(a,0,0);(0|(s=e[a+4>>2]))==e[a+104>>2]?s=Pt(a):(e[a+4>>2]=s+1,s=u[0|s]),(0|s)==32|s-9>>>0<5;);d=e[a+4>>2],(0|(s=e[a+116>>2]))>0|(0|s)>=0&&(d=d-1|0,e[a+4>>2]=d),d=s=d-e[a+44>>2]|0,y=qe+e[a+124>>2]|0,y=(f=s>>31)+((s=de+e[a+120>>2]|0)>>>0<de>>>0?y+1|0:y)|0,qe=(de=s+d|0)>>>0<s>>>0?y+1|0:y}else{o:{p:{b:{if(u[0|d]==37){if((0|(r=u[d+1|0]))==42)break b;if((0|r)!=37)break p}if(li(a,0,0),u[0|d]!=37)(0|(r=e[a+4>>2]))==e[a+104>>2]?r=Pt(a):(e[a+4>>2]=r+1,r=u[0|r]);else{for(;(0|(r=e[a+4>>2]))==e[a+104>>2]?r=Pt(a):(e[a+4>>2]=r+1,r=u[0|r]),(0|r)==32|r-9>>>0<5;);d=d+1|0}if(u[0|d]!=(0|r)){if((0|(s=e[a+116>>2]))>0|(0|s)>=0&&(e[a+4>>2]=e[a+4>>2]-1),(0|r)>=0||(m=0,Xt))break e;break s}M=(f=r=e[a+4>>2]-e[a+44>>2]|0)>>31,r=qe+e[a+124>>2]|0,m=((s=de+e[a+120>>2]|0)>>>0<de>>>0?r+1|0:r)+M|0,qe=(de=s+f|0)>>>0<s>>>0?m+1|0:m,r=d;break l}P=0,r=d+2|0;break o}u[d+2|0]!=36|r-48>>>0>=10?(P=e[Lt>>2],Lt=Lt+4|0,r=d+1|0):(r=u[d+1|0]-48|0,e[12+(s=pe-16|0)>>2]=Lt,r=(r>>>0>1?(r<<2)-4|0:0)+Lt|0,e[s+8>>2]=r+4,P=e[r>>2],r=d+3|0)}if(q=0,d=0,u[0|r]-48>>>0<10)for(;d=(u[0|r]+K(d,10)|0)-48|0,s=u[r+1|0],r=r+1|0,s-48>>>0<10;);(0|(ye=u[0|r]))==109&&(ae=0,q=!!(0|P),ye=u[r+1|0],t=0,r=r+1|0),r=(s=r)+1|0,f=3,m=q;o:{p:switch(ye-65|0){case 39:f=s+2|0,r=(s=u[s+1|0]==104)?f:r,f=s?-2:-1;break o;case 43:f=s+2|0,r=(s=u[s+1|0]==108)?f:r,f=s?3:1;break o;case 51:case 57:f=1;break o;case 11:f=2;break o;case 41:break o;case 0:case 2:case 4:case 5:case 6:case 18:case 23:case 26:case 32:case 34:case 35:case 36:case 37:case 38:case 40:case 45:case 46:case 47:case 50:case 52:case 55:break p;default:break n}f=0,r=s}m=f,Mt=(f=(47&(s=u[0|r]))==3)?1:m;o:if((0|(pt=f?32|s:s))!=91){p:{if((0|pt)!=110){if((0|pt)!=99)break p;d=(0|d)<=1?1:d;break o}So(P,Mt,de,qe);break l}for(li(a,0,0);(0|(s=e[a+4>>2]))==e[a+104>>2]?s=Pt(a):(e[a+4>>2]=s+1,s=u[0|s]),(0|s)==32|s-9>>>0<5;);s=e[a+4>>2],(0|(f=e[a+116>>2]))>0|(0|f)>=0&&(s=s-1|0,e[a+4>>2]=s),f=s=s-e[a+44>>2]|0,y=qe+e[a+124>>2]|0,qe=(m=s>>31)+((s=de+e[a+120>>2]|0)>>>0<de>>>0?y+1|0:y)|0,qe=(de=s+f|0)>>>0<s>>>0?qe+1|0:qe}if(Be=d,li(a,d,ot=d>>31),(0|(s=e[a+4>>2]))==e[a+104>>2]){if((0|Pt(a))<0)break i}else e[a+4>>2]=s+1;(0|(s=e[a+116>>2]))>0|(0|s)>=0&&(e[a+4>>2]=e[a+4>>2]-1),s=16;o:{p:{b:{m:{switch(pt-88|0){default:if((s=pt-65|0)>>>0>6|!(1<<s&113))break o;case 9:case 13:case 14:case 15:if(Dt(i+8|0,a,Mt,0),s=e[a+4>>2]-e[a+44>>2]|0,e[a+120>>2]!=(0-s|0)|e[a+124>>2]!=(0-((s>>31)+!!(0|s)|0)|0))break b;break c;case 3:case 11:case 27:if((16|pt)==115){if(wr(i+32|0,-1,257),g[i+32|0]=0,(0|pt)!=115)break p;g[i+65|0]=0,g[i+46|0]=0,I[i+42>>1]=0,I[i+44>>1]=0;break p}wr(i+32|0,M=(0|(f=u[r+1|0]))==94,257),g[i+32|0]=0,s=M?r+2|0:r+1|0;C:{h:{M:{if((0|(r=u[(M?2:1)+r|0]))!=45){if((0|r)==93)break M;f=(0|f)!=94,r=s;break C}f=(0|f)!=94,g[i+78|0]=f;break h}f=(0|f)!=94,g[i+126|0]=f}r=s+1|0}for(;;){if((0|(s=u[0|r]))==45){if(s=45,!(!(M=u[r+1|0])|(0|M)==93)){if(m=r+1|0,M>>>0<=(r=u[r-1|0])>>>0)s=M;else for(;g[(r=r+1|0)+(i+32|0)|0]=f,(s=u[0|m])>>>0>r>>>0;);r=m}}else{if(!s)break i;if((0|s)==93)break p}g[33+(s+i|0)|0]=f,r=r+1|0}case 23:s=8;break m;case 12:case 29:s=10;break m;case 1:case 2:case 4:case 5:case 6:case 7:case 8:case 10:case 16:case 18:case 19:case 20:case 21:case 22:case 25:case 26:case 28:case 30:case 31:break o;case 0:case 24:case 32:break m;case 17:}s=0}M=0,y=0,f=0,m=0,ye=0,pe=Ft=pe-16|0;m:if((0|s)!=1&s>>>0<=36){for(;(0|(d=e[a+4>>2]))==e[a+104>>2]?d=Pt(a):(e[a+4>>2]=d+1,d=u[0|d]),(0|d)==32|d-9>>>0<5;);C:{h:switch(d-43|0){case 0:case 2:break h;default:break C}ye=(0|d)==45?-1:0,(0|(d=e[a+4>>2]))==e[a+104>>2]?d=Pt(a):(e[a+4>>2]=d+1,d=u[0|d])}C:{h:{M:{I:{if(!(!!(0|s)&(0|s)!=16|(0|d)!=48)){if((0|(d=e[a+4>>2]))==e[a+104>>2]?d=Pt(a):(e[a+4>>2]=d+1,d=u[0|d]),(-33&d)==88){if(s=16,(0|(d=e[a+4>>2]))==e[a+104>>2]?d=Pt(a):(e[a+4>>2]=d+1,d=u[0|d]),u[d+121329|0]<16)break M;(0|(s=e[a+116>>2]))>0|(0|s)>=0&&(e[a+4>>2]=e[a+4>>2]-1),li(a,0,0);break m}if(s)break I;s=8;break M}if(!((s=s||10)>>>0>u[d+121329|0])){(0|(s=e[a+116>>2]))>0|(0|s)>=0&&(e[a+4>>2]=e[a+4>>2]-1),li(a,0,0),e[56798]=28;break m}}if((0|s)==10){if((f=d-48|0)>>>0<=9){for(s=0;m=(s=K(s,10)+f|0)>>>0<429496729,(0|(d=e[a+4>>2]))==e[a+104>>2]?d=Pt(a):(e[a+4>>2]=d+1,d=u[0|d]),m&(f=d-48|0)>>>0<=9;);M=s}I:if(!(f>>>0>9)){for(s=ps(M,0,10,0),m=X;;){if(y=m,m=(0|(y=(M=s+f|0)>>>0<f>>>0?y+1|0:y))==429496729&M>>>0>=2576980378|y>>>0>429496729,(0|(s=e[a+4>>2]))==e[a+104>>2]?d=Pt(a):(e[a+4>>2]=s+1,d=u[0|s]),m|(f=d-48|0)>>>0>9)break I;if(s=ps(M,y,10,0),!((0|(m=X))==-1&~f>>>0>=s>>>0|(0|m)!=-1))break}s=10;break h}if(s=10,f>>>0<=9)break h;break C}}if(s-1&s){if((m=u[d+121329|0])>>>0<s>>>0){for(;M=(f=K(s,f)+m|0)>>>0<119304647,(0|(d=e[a+4>>2]))==e[a+104>>2]?d=Pt(a):(e[a+4>>2]=d+1,d=u[0|d]),M&(m=u[d+121329|0])>>>0<s>>>0;);M=f}if(s>>>0<=m>>>0)break h;for(;;){if(f=ps(M,y,s,0),(0|(Be=X))==-1&~(m&=255)>>>0<f>>>0||(y=Be,y=(M=f+m|0)>>>0<m>>>0?y+1|0:y,(0|(d=e[a+4>>2]))==e[a+104>>2]?d=Pt(a):(e[a+4>>2]=d+1,d=u[0|d]),s>>>0<=(m=u[d+121329|0])>>>0))break h;if(tn(Ft,s,0,0,0,M,y,0,0),e[Ft+8>>2]|e[Ft+12>>2])break}}else{if(Be=g[84400+(K(s,23)>>>5&7)|0],(f=u[d+121329|0])>>>0<s>>>0){for(;M=(m=m<<Be|f)>>>0<134217728,(0|(d=e[a+4>>2]))==e[a+104>>2]?d=Pt(a):(e[a+4>>2]=d+1,d=u[0|d]),M&(f=u[d+121329|0])>>>0<s>>>0;);M=m}if(!(s>>>0<=f>>>0||(ot=31&Be,(63&Be)>>>0>=32?(m=0,ot=-1>>>ot|0):ot=(m=-1>>>ot|0)|(1<<ot)-1<<32-ot,!m&M>>>0>ot>>>0)))for(;;){if(Ar=255&f,f=M,d=31&Be,(63&Be)>>>0>=32?(y=f<<d,d=0):(y=(1<<d)-1&f>>>32-d|y<<d,d=f<<d),M=Ar|d,(0|(d=e[a+4>>2]))==e[a+104>>2]?d=Pt(a):(e[a+4>>2]=d+1,d=u[0|d]),s>>>0<=(f=u[d+121329|0])>>>0)break h;if(!((0|m)==(0|y)&M>>>0<=ot>>>0|m>>>0>y>>>0))break}}}if(!(u[d+121329|0]>=s>>>0)){for(;(0|(d=e[a+4>>2]))==e[a+104>>2]?d=Pt(a):(e[a+4>>2]=d+1,d=u[0|d]),u[d+121329|0]<s>>>0;);e[56798]=68,ye=0,M=-1,y=-1}}(0|(s=e[a+116>>2]))>0|(0|s)>=0&&(e[a+4>>2]=e[a+4>>2]-1),M=(s=M^ye)-ye|0,y=((d=ye>>31)^y)-((s>>>0<ye>>>0)+d|0)|0}else e[56798]=28;if(pe=Ft+16|0,s=e[a+4>>2]-e[a+44>>2]|0,e[a+120>>2]==(0-s|0)&e[a+124>>2]==(0-((s>>31)+!!(0|s)|0)|0))break c;if(!(!P|(0|pt)!=112)){e[P>>2]=M;break o}So(P,Mt,M,y);break o}if(!P)break o;d=e[i+16>>2],s=e[i+20>>2],f=e[i+8>>2],q=e[i+12>>2];b:switch(0|Mt){case 0:pe=y=pe-32|0;m:if(0|(m=(M=2147483647&s)-1065418752|0)>>>0<(Be=M-1082064896|0)>>>0){if(M=(33554431&s)<<7|d>>>25,Be=m=0,!(!m&(0|(d&=33554431))==16777216?!(f|q):!m&d>>>0<16777216)){m=M+1073741825|0;break m}if(m=M+1073741824|0,16777216^d|f|q|Be)break m;m=(1&M)+m|0}else(!d&(0|M)==2147418112?!(f|q):M>>>0<2147418112)?(m=2139095040,M>>>0>1082064895||(m=0,(M=M>>>16|0)>>>0<16145||(Sa(y+16|0,f,q,d,m=65535&s|65536,M-16129|0),cs(y,f,q,d,m,16257-M|0),d=e[y+8>>2],m=(33554431&e[y+12>>2])<<7|d>>>25,M=e[y>>2]|!!(e[y+16>>2]|e[y+24>>2]|e[y+20>>2]|e[y+28>>2]),q=e[y+4>>2],(!(f=0)&(0|(d&=33554431))==16777216?!(M|q):!f&d>>>0<16777216)?16777216^d|M|f|q||(m=(1&m)+m|0):m=m+1|0))):m=4194303&((33554431&s)<<7|d>>>25)|2143289344;pe=y+32|0,e[P>>2]=-2147483648&s|m;break o;case 1:G[P>>3]=Ai(f,q,d,s);break o;case 2:break b;default:break o}e[P>>2]=f,e[P+4>>2]=q,e[P+8>>2]=d,e[P+12>>2]=s;break o}f=(Ft=(0|pt)!=99)?31:d+1|0;p:if((0|Mt)!=1){if(q){if(d=0,!(s=Fr(f)))break A;for(;;){for(t=s;;){if((0|(s=e[a+4>>2]))==e[a+104>>2]?s=Pt(a):(e[a+4>>2]=s+1,s=u[0|s]),!u[33+(s+i|0)|0]){f=0,ae=t;break p}if(g[t+d|0]=s,(0|f)==(0|(d=d+1|0)))break}if(m=1,!(s=Ma(t,f=f<<1|1)))break}ae=t,t=0;break n}if(d=0,P)for(;;){if((0|(t=e[a+4>>2]))==e[a+104>>2]?t=Pt(a):(e[a+4>>2]=t+1,t=u[0|t]),!u[33+(t+i|0)|0]){f=0,ae=t=P;break p}g[d+P|0]=t,d=d+1|0}for(;(0|(t=e[a+4>>2]))==e[a+104>>2]?t=Pt(a):(e[a+4>>2]=t+1,t=u[0|t]),u[33+(t+i|0)|0];);t=0,ae=0,f=0}else{if(s=P,q&&!(s=Fr(f<<2)))break A;for(e[i+296>>2]=0,e[i+300>>2]=0,d=0;;){t=s;b:{for(;;){if((0|(s=e[a+4>>2]))==e[a+104>>2]?s=Pt(a):(e[a+4>>2]=s+1,s=u[0|s]),!u[33+(s+i|0)|0])break b;g[i+27|0]=s,M=i+28|0,s=e[(m=(s=i+296|0)||228604)>>2];m:{C:{h:{M:{if(!(ae=i+27|0)){if(s)break M;s=0;break m}if(!s){if((0|(y=(s=u[0|ae])<<24>>24))>=0){M&&(e[M>>2]=s),s=!!(0|y);break m}if(!e[e[56841]>>2]){if(s=1,!M)break h;e[M>>2]=57343&y,s=1;break m}if((s=s-194|0)>>>0>50)break M;s=e[124752+(s<<2)>>2];break C}if(ye=1,!(((Mt=(y=u[0|ae])>>>3|0)-16|(s>>26)+Mt)>>>0>7))for(;;){if(ye=ye-1|0,(0|(s=y-128|s<<6))>=0){e[m>>2]=0,M&&(e[M>>2]=s),s=1-ye|0;break m}if(!ye)break C;if((192&(y=u[0|(ae=ae+1|0)]))!=128)break}}e[m>>2]=0,e[56798]=25,s=-1}break m}e[m>>2]=s,s=-2}if((0|s)!=-2){if(ae=0,(0|s)==-1)break i;if(t&&(e[(d<<2)+t>>2]=e[i+28>>2],d=d+1|0),!(!q|(0|d)!=(0|f)))break}}if(m=1,s=Ma(t,(f=f<<1|1)<<2))continue;break n}break}if(ae=0,f=t,i+296|0&&e[i+296>>2])break i}if(s=e[a+4>>2],(0|(M=e[a+116>>2]))>0|(0|M)>=0&&(s=s-1|0,e[a+4>>2]=s),s=(M=s-e[a+44>>2]|0)+e[a+120>>2]|0,y=e[a+124>>2]+(M>>31)|0,!((y=s>>>0<M>>>0?y+1|0:y)|s)|!(Ft|(0|s)==(0|Be)&(0|y)==(0|ot)))break d;q&&(e[P>>2]=t),(0|pt)!=99&&(f&&(e[(d<<2)+f>>2]=0),ae?g[d+ae|0]=0:ae=0),t=f}d=s=e[a+4>>2]-e[a+44>>2]|0,m=qe+e[a+124>>2]|0,qe=(f=s>>31)+((s=de+e[a+120>>2]|0)>>>0<de>>>0?m+1|0:m)|0,qe=(de=s+d|0)>>>0<s>>>0?qe+1|0:qe,Xt=!!(0|P)+Xt|0}if(d=r+1|0,r=u[r+1|0])continue;break e}break}t=f;break c}m=1,ae=0,t=0;break n}m=q;break t}m=q}if(Xt)break t}Xt=-1}m&&(tr(ae),tr(t))}return pe=i+304|0,pe=a+144|0,pe=o+16|0,Xt}function Fr(t){var r,s=0,a=0,i=0,o=0,d=0,f=0,m=0,M=0,y=0,P=0;pe=r=pe-16|0;e:{t:{s:{n:{i:{c:{A:{d:{l:{if((t|=0)>>>0<=244){if(3&(s=(f=e[57152])>>>(a=(m=t>>>0<11?16:t+11&-8)>>>3|0)|0)){s=228648+(t=(a=a+(1&~s)|0)<<3)|0,i=e[t+228656>>2],(0|s)!=(0|(t=e[i+8>>2]))?(e[t+12>>2]=s,e[s+8>>2]=t):e[57152]=dn(-2,a)&f,t=i+8|0,s=a<<3,e[i+4>>2]=3|s,e[4+(s=s+i|0)>>2]=1|e[s+4>>2];break e}if((P=e[57154])>>>0>=m>>>0)break l;if(s){s=228648+(t=(i=eo(0-(t=(0-(t=2<<a)|t)&s<<a)&t))<<3)|0,o=e[t+228656>>2],(0|s)!=(0|(t=e[o+8>>2]))?(e[t+12>>2]=s,e[s+8>>2]=t):(f=dn(-2,i)&f,e[57152]=f),e[o+4>>2]=3|m,i=(t=i<<3)-m|0,e[4+(a=o+m|0)>>2]=1|i,e[t+o>>2]=i,P&&(s=228648+(-8&P)|0,d=e[57157],(t=1<<(P>>>3))&f?t=e[s+8>>2]:(e[57152]=t|f,t=s),e[s+8>>2]=d,e[t+12>>2]=d,e[d+12>>2]=s,e[d+8>>2]=t),t=o+8|0,e[57157]=a,e[57154]=i;break e}if(!(y=e[57153]))break l;for(a=e[228912+(eo(0-y&y)<<2)>>2],d=(-8&e[a+4>>2])-m|0,s=a;(t=e[s+16>>2])||(t=e[s+20>>2]);)d=(i=(s=(-8&e[t+4>>2])-m|0)>>>0<d>>>0)?s:d,a=i?t:a,s=t;if(M=e[a+24>>2],(0|(i=e[a+12>>2]))!=(0|a)){t=e[a+8>>2],e[t+12>>2]=i,e[i+8>>2]=t;break t}if(!(t=e[(s=a+20|0)>>2])){if(!(t=e[a+16>>2]))break d;s=a+16|0}for(;o=s,i=t,(t=e[(s=t+20|0)>>2])||(s=i+16|0,t=e[i+16>>2]););e[o>>2]=0;break t}if(m=-1,!(t>>>0>4294967231)&&(m=-8&(t=t+11|0),y=e[57153])){d=0-m|0,f=0,m>>>0<256||(f=31,m>>>0>16777215||(f=62+((m>>>38-(t=Re(t>>>8|0))&1)-(t<<1)|0)|0));o:{p:{if(s=e[228912+(f<<2)>>2])for(t=0,a=m<<((0|f)!=31?25-(f>>>1|0):0);;){if(!((o=(-8&e[s+4>>2])-m|0)>>>0>=d>>>0||(i=s,d=o,o))){d=0,t=s;break p}if(o=e[s+20>>2],s=e[16+((a>>>29&4)+s|0)>>2],t=o?(0|o)==(0|s)?t:o:t,a<<=1,!s)break}else t=0;if(!(t|i)){if(i=0,!(t=(0-(t=2<<f)|t)&y))break l;t=e[228912+(eo(t&0-t)<<2)>>2]}if(!t)break o}for(;d=(a=(s=(-8&e[t+4>>2])-m|0)>>>0<d>>>0)?s:d,i=a?t:i,t=(s=e[t+16>>2])||e[t+20>>2];);}if(!(!i|e[57154]-m>>>0<=d>>>0)){if(f=e[i+24>>2],(0|i)!=(0|(a=e[i+12>>2]))){t=e[i+8>>2],e[t+12>>2]=a,e[a+8>>2]=t;break s}if(!(t=e[(s=i+20|0)>>2])){if(!(t=e[i+16>>2]))break A;s=i+16|0}for(;o=s,a=t,(t=e[(s=t+20|0)>>2])||(s=a+16|0,t=e[a+16>>2]););e[o>>2]=0;break s}}}if((t=e[57154])>>>0>=m>>>0){i=e[57157],(s=t-m|0)>>>0>=16?(e[4+(a=i+m|0)>>2]=1|s,e[t+i>>2]=s,e[i+4>>2]=3|m):(e[i+4>>2]=3|t,e[4+(t=t+i|0)>>2]=1|e[t+4>>2],a=0,s=0),e[57154]=s,e[57157]=a,t=i+8|0;break e}if((M=e[57155])>>>0>m>>>0){s=M-m|0,e[57155]=s,t=(a=e[57158])+m|0,e[57158]=t,e[t+4>>2]=1|s,e[a+4>>2]=3|m,t=a+8|0;break e}if(t=0,y=m+47|0,e[57270]?a=e[57272]:(e[57273]=-1,e[57274]=-1,e[57271]=4096,e[57272]=4096,e[57270]=r+12&-16^1431655768,e[57275]=0,e[57263]=0,a=4096),(s=(o=y+a|0)&(d=0-a|0))>>>0<=m>>>0||(i=e[57262])&&i>>>0<(f=(a=e[57260])+s|0)>>>0|a>>>0>=f>>>0)break e;l:{if(!(4&u[229052])){o:{p:{b:{m:{if(i=e[57158])for(t=229056;;){if((a=e[t>>2])>>>0<=i>>>0&i>>>0<a+e[t+4>>2]>>>0)break m;if(!(t=e[t+8>>2]))break}if((0|(a=uo(0)))==-1||(f=s,(t=(i=e[57271])-1|0)&a&&(f=(s-a|0)+(t+a&0-i)|0),f>>>0<=m>>>0)||(i=e[57262])&&i>>>0<(d=(t=e[57260])+f|0)>>>0|t>>>0>=d>>>0)break o;if((0|a)!=(0|(t=uo(f))))break b;break l}if((0|(a=uo(f=d&o-M)))==(e[t>>2]+e[t+4>>2]|0))break p;t=a}if((0|t)==-1)break o;if(m+48>>>0<=f>>>0){a=t;break l}if((0|uo(a=(a=e[57272])+(y-f|0)&0-a))==-1)break o;f=a+f|0,a=t;break l}if((0|a)!=-1)break l}e[57263]=4|e[57263]}if((0|(a=uo(s)))==-1|(0|(t=uo(0)))==-1|t>>>0<=a>>>0||(f=t-a|0)>>>0<=m+40>>>0)break n}t=e[57260]+f|0,e[57260]=t,t>>>0>ue[57261]&&(e[57261]=t);l:{if(o=e[57158]){for(t=229056;;){if(((i=e[t>>2])+(s=e[t+4>>2])|0)==(0|a))break l;if(!(t=e[t+8>>2]))break}break c}for((t=e[57156])>>>0<=a>>>0&&t||(e[57156]=a),t=0,e[57265]=f,e[57264]=a,e[57160]=-1,e[57161]=e[57270],e[57267]=0;s=228648+(i=t<<3)|0,e[i+228656>>2]=s,e[i+228660>>2]=s,(0|(t=t+1|0))!=32;);s=(i=f-40|0)-(t=a+8&7?-8-a&7:0)|0,e[57155]=s,t=t+a|0,e[57158]=t,e[t+4>>2]=1|s,e[4+(a+i|0)>>2]=40,e[57159]=e[57274];break i}if(8&u[t+12|0]|i>>>0>o>>>0|a>>>0<=o>>>0)break c;e[t+4>>2]=s+f,a=(t=o+8&7?-8-o&7:0)+o|0,e[57158]=a,t=(s=e[57155]+f|0)-t|0,e[57155]=t,e[a+4>>2]=1|t,e[4+(s+o|0)>>2]=40,e[57159]=e[57274];break i}i=0;break t}a=0;break s}ue[57156]>a>>>0&&(e[57156]=a),s=a+f|0,t=229056;c:{A:{d:{l:{o:{p:{for(;;){if((0|s)!=e[t>>2]){if(t=e[t+8>>2])continue;break p}break}if(!(8&u[t+12|0]))break o}for(t=229056;;){if((s=e[t>>2])>>>0<=o>>>0&&(d=s+e[t+4>>2]|0)>>>0>o>>>0)break l;t=e[t+8>>2]}}if(e[t>>2]=a,e[t+4>>2]=e[t+4>>2]+f,e[4+(y=(a+8&7?-8-a&7:0)+a|0)>>2]=3|m,t=(f=s+(s+8&7?-8-s&7:0)|0)-(M=m+y|0)|0,(0|o)==(0|f)){e[57158]=M,t=e[57155]+t|0,e[57155]=t,e[M+4>>2]=1|t;break A}if(e[57157]==(0|f)){e[57157]=M,t=e[57154]+t|0,e[57154]=t,e[M+4>>2]=1|t,e[t+M>>2]=t;break A}if((3&(d=e[f+4>>2]))==1){o=-8&d;o:if(d>>>0<=255){if(i=e[f+8>>2],s=d>>>3|0,(0|(a=e[f+12>>2]))==(0|i)){e[57152]=e[57152]&dn(-2,s);break o}e[i+12>>2]=a,e[a+8>>2]=i}else{if(m=e[f+24>>2],(0|f)==(0|(a=e[f+12>>2])))if((s=e[(d=f+20|0)>>2])||(s=e[(d=f+16|0)>>2])){for(;i=d,(s=e[(d=(a=s)+20|0)>>2])||(d=a+16|0,s=e[a+16>>2]););e[i>>2]=0}else a=0;else s=e[f+8>>2],e[s+12>>2]=a,e[a+8>>2]=s;if(m){i=e[f+28>>2];p:{if(e[(s=228912+(i<<2)|0)>>2]==(0|f)){if(e[s>>2]=a,a)break p;e[57153]=e[57153]&dn(-2,i);break o}if(e[m+(e[m+16>>2]==(0|f)?16:20)>>2]=a,!a)break o}e[a+24>>2]=m,(s=e[f+16>>2])&&(e[a+16>>2]=s,e[s+24>>2]=a),(s=e[f+20>>2])&&(e[a+20>>2]=s,e[s+24>>2]=a)}}d=e[4+(f=o+f|0)>>2],t=t+o|0}if(e[f+4>>2]=-2&d,e[M+4>>2]=1|t,e[t+M>>2]=t,t>>>0<=255){s=228648+(-8&t)|0,(a=e[57152])&(t=1<<(t>>>3))?t=e[s+8>>2]:(e[57152]=t|a,t=s),e[s+8>>2]=M,e[t+12>>2]=M,e[M+12>>2]=s,e[M+8>>2]=t;break A}if(d=31,t>>>0<=16777215&&(d=62+((t>>>38-(s=Re(t>>>8|0))&1)-(s<<1)|0)|0),e[M+28>>2]=d,e[M+16>>2]=0,e[M+20>>2]=0,s=228912+(d<<2)|0,(i=e[57153])&(a=1<<d)){for(d=t<<((0|d)!=31?25-(d>>>1|0):0),a=e[s>>2];;){if(s=a,(-8&e[a+4>>2])==(0|t))break d;if(a=d>>>29|0,d<<=1,!(a=e[16+(i=(4&a)+s|0)>>2]))break}e[i+16>>2]=M}else e[57153]=a|i,e[s>>2]=M;e[M+24>>2]=s,e[M+12>>2]=M,e[M+8>>2]=M;break A}for(s=(i=f-40|0)-(t=a+8&7?-8-a&7:0)|0,e[57155]=s,t=t+a|0,e[57158]=t,e[t+4>>2]=1|s,e[4+(a+i|0)>>2]=40,e[57159]=e[57274],e[(i=(t=(d+(d-39&7?39-d&7:0)|0)-47|0)>>>0<o+16>>>0?o:t)+4>>2]=27,t=e[57267],e[i+16>>2]=e[57266],e[i+20>>2]=t,t=e[57265],e[i+8>>2]=e[57264],e[i+12>>2]=t,e[57266]=i+8,e[57265]=f,e[57264]=a,e[57267]=0,t=i+24|0;e[t+4>>2]=7,s=t+8|0,t=t+4|0,s>>>0<d>>>0;);if((0|i)==(0|o))break i;if(e[i+4>>2]=-2&e[i+4>>2],d=i-o|0,e[o+4>>2]=1|d,e[i>>2]=d,d>>>0<=255){s=228648+(-8&d)|0,(a=e[57152])&(t=1<<(d>>>3))?t=e[s+8>>2]:(e[57152]=t|a,t=s),e[s+8>>2]=o,e[t+12>>2]=o,e[o+12>>2]=s,e[o+8>>2]=t;break i}if(t=31,d>>>0<=16777215&&(t=62+((d>>>38-(t=Re(d>>>8|0))&1)-(t<<1)|0)|0),e[o+28>>2]=t,e[o+16>>2]=0,e[o+20>>2]=0,s=228912+(t<<2)|0,(i=e[57153])&(a=1<<t)){for(t=d<<((0|t)!=31?25-(t>>>1|0):0),i=e[s>>2];;){if((0|d)==(-8&e[(s=i)+4>>2]))break c;if(a=t>>>29|0,t<<=1,!(i=e[16+(a=(4&a)+s|0)>>2]))break}e[a+16>>2]=o}else e[57153]=a|i,e[s>>2]=o;e[o+24>>2]=s,e[o+12>>2]=o,e[o+8>>2]=o;break i}t=e[s+8>>2],e[t+12>>2]=M,e[s+8>>2]=M,e[M+24>>2]=0,e[M+12>>2]=s,e[M+8>>2]=t}t=y+8|0;break e}t=e[s+8>>2],e[t+12>>2]=o,e[s+8>>2]=o,e[o+24>>2]=0,e[o+12>>2]=s,e[o+8>>2]=t}if(!((t=e[57155])>>>0<=m>>>0)){s=t-m|0,e[57155]=s,t=(a=e[57158])+m|0,e[57158]=t,e[t+4>>2]=1|s,e[a+4>>2]=3|m,t=a+8|0;break e}}e[56798]=48,t=0;break e}s:if(f){s=e[i+28>>2];n:{if(e[(t=228912+(s<<2)|0)>>2]==(0|i)){if(e[t>>2]=a,a)break n;y=dn(-2,s)&y,e[57153]=y;break s}if(e[f+(e[f+16>>2]==(0|i)?16:20)>>2]=a,!a)break s}e[a+24>>2]=f,(t=e[i+16>>2])&&(e[a+16>>2]=t,e[t+24>>2]=a),(t=e[i+20>>2])&&(e[a+20>>2]=t,e[t+24>>2]=a)}s:if(d>>>0<=15)t=d+m|0,e[i+4>>2]=3|t,e[4+(t=t+i|0)>>2]=1|e[t+4>>2];else if(e[i+4>>2]=3|m,e[4+(o=i+m|0)>>2]=1|d,e[o+d>>2]=d,d>>>0<=255)s=228648+(-8&d)|0,(a=e[57152])&(t=1<<(d>>>3))?t=e[s+8>>2]:(e[57152]=t|a,t=s),e[s+8>>2]=o,e[t+12>>2]=o,e[o+12>>2]=s,e[o+8>>2]=t;else{t=31,d>>>0<=16777215&&(t=62+((d>>>38-(t=Re(d>>>8|0))&1)-(t<<1)|0)|0),e[o+28>>2]=t,e[o+16>>2]=0,e[o+20>>2]=0,s=228912+(t<<2)|0;n:{if((a=1<<t)&y){for(t=d<<((0|t)!=31?25-(t>>>1|0):0),m=e[s>>2];;){if((-8&e[(s=m)+4>>2])==(0|d))break n;if(a=t>>>29|0,t<<=1,!(m=e[16+(a=(4&a)+s|0)>>2]))break}e[a+16>>2]=o}else e[57153]=a|y,e[s>>2]=o;e[o+24>>2]=s,e[o+12>>2]=o,e[o+8>>2]=o;break s}t=e[s+8>>2],e[t+12>>2]=o,e[s+8>>2]=o,e[o+24>>2]=0,e[o+12>>2]=s,e[o+8>>2]=t}t=i+8|0;break e}t:if(M){s=e[a+28>>2];s:{if(e[(t=228912+(s<<2)|0)>>2]==(0|a)){if(e[t>>2]=i,i)break s;e[57153]=dn(-2,s)&y;break t}if(e[M+(e[M+16>>2]==(0|a)?16:20)>>2]=i,!i)break t}e[i+24>>2]=M,(t=e[a+16>>2])&&(e[i+16>>2]=t,e[t+24>>2]=i),(t=e[a+20>>2])&&(e[i+20>>2]=t,e[t+24>>2]=i)}d>>>0<=15?(t=d+m|0,e[a+4>>2]=3|t,e[4+(t=t+a|0)>>2]=1|e[t+4>>2]):(e[a+4>>2]=3|m,e[4+(i=a+m|0)>>2]=1|d,e[i+d>>2]=d,P&&(s=228648+(-8&P)|0,o=e[57157],(t=1<<(P>>>3))&f?t=e[s+8>>2]:(e[57152]=t|f,t=s),e[s+8>>2]=o,e[t+12>>2]=o,e[o+12>>2]=s,e[o+8>>2]=t),e[57157]=i,e[57154]=d),t=a+8|0}return pe=r+16|0,0|t}function ns(t,r,s,a,i){var o,d=0,f=0,m=0,M=0,y=0,P=0,q=0,ae=0,de=0,ye=0,Be=0,qe=0,ot=0,pt=0,Mt=0,Ft=0,Lt=0;pe=o=pe-544|0,wr(o+320|0,0,100),wr(o+208|0,0,100),M=s?e[s>>2]:M,de=e[t+12>>2],y=e[36115];e:{t:{s:{n:{for(;;){if(d=(0|(d=u[r+f|0]))>=(0|y)?13:d,g[o+f|0]=d,!d){d=f;break n}if(m=(0|y)<=(0|(m=u[(d=1|f)+r|0]))?13:m,g[d+o|0]=m,!m)break n;if((0|(f=f+2|0))==200)break}f=198,Be=u[o+199|0];break s}if(!d)break t;Be=u[o+(f=d-1|0)|0],(0|d)!=1&&(f=d-2|0)}if(Mt=8&M,e[o+536>>2]=(Mt>>>3|0?3:7)&M,M=u[o+f|0],y=1,q=(0|(P=Mi(t,o,o+432|0,o+540|0,o+536|0,1)))>=0?P:0,ot=u[0|o])for(f=o,d=ot;d=e[144464+((255&d)<<2)>>2],u[d+11|0]==2&&(1048576&(d=e[d+4>>2])||(m=(2097152&d)>>>21|0,m|=d=u[e[144464+(u[0|(ae=f+1|0)]<<2)>>2]+10|0]==12,g[(o+208|0)+y|0]=m,ye=e[144464+(u[(d?2:1)+f|0]<<2)>>2],m=u[ye+11|0]-10>>>0<4294967289|!(32&u[ye+6|0])&u[e[144464+(u[(d?3:2)+f|0]<<2)>>2]+11|0]==2?m:m?2:1,f=d?ae:f,g[(o+320|0)+y|0]=m,y=y+1|0)),d=u[0|(f=f+1|0)];);f=s=s?q:P;s:{n:{i:{c:{A:{d:{l:{o:{p:{b:{m:{C:switch(e[t+8>>2]-1|0){case 11:if((0|(s=e[o+540>>2]))<2)break p;if(f=1,q=1&(d=s-1|0),(0|s)!=2)break m;y=0;break b;case 8:if((0|(d=e[o+540>>2]))<2)break n;if(y=3&(m=d-1|0),f=1,d-2>>>0>=3)for(q=-4&m,m=0;M=g[0|(d=(o+432|0)+f|0)],g[0|d]=(0|M)<0?4:M,M=g[d+1|0],g[d+1|0]=(0|M)<0?4:M,M=g[d+2|0],g[d+2|0]=(0|M)<0?4:M,M=d,d=g[d+3|0],g[M+3|0]=(0|d)<0?4:d,f=f+4|0,(0|q)!=(0|(m=m+4|0)););if(!y)break n;for(d=0;m=g[0|(M=(o+432|0)+f|0)],g[0|M]=(0|m)<0?4:m,f=f+1|0,(0|y)!=(0|(d=d+1|0)););break n;case 7:if(!u[o+322|0]|g[o+321|0]>0)break n;case 0:if(e[o+536>>2]|e[o+540>>2]<3)break n;if(e[o+536>>2]=2,f=4,s)break s;g[o+434|0]=4;break s;case 1:if(e[o+536>>2])break s;h:{M:{if((0|(y=e[o+540>>2]))>=3){s=y-2|0,e[o+536>>2]=s,f=s;I:if(512&de&&(d=e[144464+(Be<<2)>>2],(0|(m=u[d+11|0]))!=2)){f=e[d>>2],d=o;x:{N:{if((0|(q=e[t+212>>2]))!=26977){if((0|q)!=24942)break N;switch(f-110|0){case 0:case 5:if(f=s,u[e[144464+(M<<2)>>2]+11|0]==2)break I}f=y-1|0;break x}if((0|f)==115&&(f=s,u[e[144464+(M<<2)>>2]+11|0]==2))break I;f=y-1|0;break x}N:{V:{if((0|f)==115){if(f=s,(0|(m=u[e[144464+(M<<2)>>2]+11|0]))!=8)break V;break I}if((0|m)!=8)break N;m=u[e[144464+(M<<2)>>2]+11|0]}if(f=s,(255&m)==2)break I}f=y-1|0}e[d+536>>2]=f}if(524288&de&&(g[(d=y-1|0)+(y=o+208|0)|0]<=g[s+y|0]||(e[o+536>>2]=d,f=d)),u[(o+432|0)+f|0]>1){d=f;break h}if(d=2,s=f-1|0,f>>>0>=2)break M;e[o+536>>2]=f+1;break h}s=1}d=s,e[o+536>>2]=d}if(f=4,g[0|(s=(o+432|0)+d|0)]>=0||g[(d=(o+432|0)+d|0)-1|0]>=4&g[d+1|0]>3)break s;g[0|s]=4;break s;case 2:if(e[o+536>>2])break s;for(s=(f=e[o+540>>2])-1|0,s&=s>>31;;){if((0|(f=f-1|0))<=0)break i;if(!(g[0|(d=(o+432|0)+f|0)]>=0))break}e[o+536>>2]=f,f=4,g[0|d]=4;break s;case 3:if(e[o+536>>2])break n;if(d=(0|(f=e[o+540>>2]-3|0))<=1?1:f,e[o+536>>2]=d,f=4,s)break s;g[d+(o+432|0)|0]=4;break s;case 4:if(e[o+536>>2])break s;if(d=(s=e[o+540>>2])-3|0,e[o+536>>2]=d,(0|s)<=15){h:{switch(u[e[144464+(Be<<2)>>2]+11|0]-2|0){case 0:d=g[s+94176|0];break h;case 2:d=g[s+94192|0];break h}d=g[s+94160|0]}e[o+536>>2]=d}f=4,g[(o+432|0)+d|0]=4;break s;case 5:if(e[o+536>>2])break s;if(y=-1,m=0,!((0|(s=(d=e[o+540>>2])-1|0))<2)){if(f=1,ae=1&d,(0|d)!=3)for(ye=(-2&d)-4|0,d=0;g[(o+432|0)+f|0]<0&&(m=(M=(0|(q=g[(o+320|0)+f|0]))<(0|y))?m:f,y=M?y:q),g[(M=f+1|0)+(o+432|0)|0]<0&&(m=(q=(0|(pt=g[M+(o+320|0)|0]))<(0|y))?m:M,y=q?y:pt),f=f+2|0,M=(0|d)!=(0|ye),d=d+2|0,M;);!ae|g[(o+432|0)+f|0]>=0||(y=(d=(0|(M=g[(o+320|0)+f|0]))<(0|y))?y:M,m=d?m:f)}e[o+536>>2]=m,u[s+(o+320|0)|0]!=2|(0|y)>1?(0|y)>0||(m=1,e[o+536>>2]=1):(e[o+536>>2]=s,m=s),f=4,g[(o+432|0)+m|0]=4;break s;case 14:break c;case 12:break A;case 6:break C;default:break s}if(e[o+536>>2])break s;y=(s=e[o+540>>2])-1|0,e[o+536>>2]=y;C:if(!((0|s)<2))for(f=1;;){if(u[(o+432|0)+f|0]==1){y=f-1|0,e[o+536>>2]=y;break C}if((0|s)==(0|(f=f+1|0)))break}f=4,g[(o+432|0)+y|0]=4;break s}for(ae=-2&d,y=0,m=0;d=u[0|(ye=(M=o+432|0)+f|0)],qe=ye,pt=g[(ye=o+208|0)+f|0]>0,g[0|qe]=pt||(0|d)==4?3:d,Ft=(0|(M=u[0|(qe=(d=f+1|0)+M|0)]))==4?3:M,M=g[d+ye|0]>0,g[0|qe]=M?3:Ft,y=M?d:pt?f:y,f=f+2|0,(0|ae)!=(0|(m=m+2|0)););}if(q&&(M=(0|(d=u[0|(m=(o+432|0)+f|0)]))==4?3:d,d=g[(o+208|0)+f|0]>0,g[0|m]=d?3:M,y=d?f:y),d=e[o+536>>2])break d;if((0|y)>0){e[o+536>>2]=y,d=y;break d}if((0|s)<6)break o;d=s-3|0;break l}if(d=e[o+536>>2])break d}d=s-1|0}e[o+536>>2]=d}f=4,g[(o+432|0)+d|0]=4;break s}if(e[o+536>>2])break s;d=1,e[o+536>>2]=1,u[o+209|0]|e[o+540>>2]<3|g[o+210|0]<=0||(d=2,e[o+536>>2]=2),f=4,g[o+432|d]=4;break s}if(e[o+536>>2]||(0|(d=e[o+540>>2]))<3)break n;if(wr(o+432|1,0,d-1|0),e[o+536>>2]=2,s||(g[o+434|0]=4),f=4,d>>>0<4)break s;g[431+(d+o|0)|0]=3;break s}e[o+536>>2]=s,f=4;break s}f=s}!(256&de)|2&i||(0|(s=e[o+540>>2]))<3|(0|P)>2||u[0|(d=(s=s+(o+432|0)|0)-1|0)]!=4|u[e[144464+(Be<<2)>>2]+11|0]!=2||(g[0|d]=1,g[s-2|0]=4);s:{n:{if(Mt)P=e[o+540>>2];else{if(s=g[o+433|0],!(!(4096&de)|(0|(P=e[o+540>>2]))!=3)){if((0|s)==4){g[o+434|0]=3;break n}if(u[o+434|0]==4){g[o+433|0]=3;break n}}if(!(!(8192&de)|(0|s)>=0|(0|P)<4|g[o+434|0]<4)){g[o+433|0]=3;break n}}if(m=0,(0|P)<2)break s}for(y=(0|f)<4?4:3,ye=128&de,pt=64&de,qe=32&de,q=P-1|0,Ft=16&de,Lt=!(32768&de),Be=0,M=0,f=1;;){n:{i:if((0|(d=g[0|(ae=(o+432|0)+f|0)]))>=0)m=y;else{m=3;c:{A:if(!(!(!Ft|(0|y)>3)&(0|f)==(0|q))){if(!(1&(Be|Lt)))break c;if(!(g[431+(o+f|0)|0]>1)){if((0|(d=g[(s=f+1|0)+(o+432|0)|0]))>=2){if((0|y)!=4||(m=4,d>>>0>=3))break A}else if(!(!qe|(0|y)!=3)){y=3;break n}if(!pt|f>>>0<2||(m=u[(o+320|0)+f|0]))break c;if((0|q)>(0|(d=f))){for(;;){if(g[(o+320|0)+d|0]>0)break n;if((0|q)==(0|(d=d+1|0)))break}if(m)break c}if(g[s+(o+320|0)|0]<=0)break c;break n}m=y}d=u[0|ae];break i}g[0|ae]=y,Be=1,m=3,d=y}i:{if(d<<24>>24>=4){if(s=M||f,!M|!ye)break i;g[0|ae]=3}y=m;break n}y=m,M=s}if(m=1,(0|P)==(0|(f=f+1|0)))break}}if(a=!Mt|(0|a)>=0?a:e[((0|P)<3?16:20)+t>>2],y=0,d=0,m){if(Be=3&(s=P-1|0),m=0,P-2>>>0<3)f=1;else for(Mt=-4&s,f=1,M=0;d=(s=(0|(d=(ae=(0|(d=(q=(0|(d=(P=(0|(q=g[(s=o+432|0)+f|0]))<(0|d))?d:q))>(0|(ae=g[(ye=f+1|0)+s|0])))?d:ae))>(0|(qe=g[(pt=f+2|0)+s|0])))?d:qe))>(0|(Ft=g[(qe=f+3|0)+s|0])))?d:Ft,y=s?ae?q?P?y:f:ye:pt:qe,f=f+4|0,(0|Mt)!=(0|(M=M+4|0)););if(Be)for(;d=(s=(0|(M=g[(o+432|0)+f|0]))<(0|d))?d:M,y=s?y:f,f=f+1|0,(0|Be)!=(0|(m=m+1|0)););}if((0|a)<0?a=d:(0|a)<=(0|d)&(0|d)>4||(g[(o+432|0)+y|0]=a),Be=r+197|0,P=1,!(1&i)&&(s=e[144464+(ot<<2)>>2])){if(d=o,!((0|(m=u[s+11|0]))!=1&(0|ot)!=15))for(;s=u[0|(d=d+1|0)],(0|(m=u[e[144464+(s<<2)>>2]+11|0]))==1|(0|s)==15;);!(48&(s=e[t+4>>2]))|(0|m)!=2||(g[0|r]=(32&s)>>>5|0&&g[o+433|0]>3?11:23,r=r+1|0)}s:if(!(r>>>0>=Be>>>0))for(q=65536&de,ae=2&de,Mt=4&de,f=o;;){if(!(d=u[0|f]))break s;if(i=f,f=f+1|0,s=e[144464+(d<<2)>>2]){n:{i:{switch(u[s+11|0]){case 0:e[t+8200>>2]=0;break n;case 2:if(!(16&u[s+6|0]))break i}if(u[0|f]!=20)break n}if((0|(ot=e[o+540>>2]))<(0|P))break e;M=g[0|(de=(o+432|0)+P|0)],e[t+8200>>2]=M;i:{c:{if(!((0|(s=M))>1)){if(m=ot-1|0,!(!Mt|(0|P)<2|(0|a)<2)&&(s=0,(0|m)==(0|P)))break c;if(s=1,!((0|P)==1|ae|(ot-2|0)==(0|P)&g[m+(o+432|0)|0]<2|(0|m)==(0|P)||g[431+(o+P|0)|0]>=0&&(s=M,q))){s=0,g[0|de]=0;break c}}if(s&&(0|s)<2)break i}g[0|r]=u[s+94151|0],r=r+1|0,M=g[0|de]}m=(0|a)>(0|M),u[0|f]==12&&1&(ot=e[t+28>>2])&&(f=(16&ot?(0|y)!=(0|P):(0|s)<4)?i+2|0:f),a=m?a:M,P=P+1|0}if((0|d)!=1&&(g[0|r]=d,r=r+1|0),!(r>>>0<Be>>>0))break}}g[0|r]=0}return void(pe=o+544|0)}Me(86136,86634,1353,94208),be()}function Gs(t,r,s,a,i,o,d,f,m){var M,y=0,P=0,q=0,ae=0,de=0,ye=0,Be=0,qe=0,ot=0,pt=0,Mt=0,Ft=0,Lt=0,Xt=0,Ar=0,Mr=0,Tr=0,Yr=0,$r=0,ls=0,Ts=0,Hs=0,$s=0,ga=0,fa=0,Pa=0,Fa=0,za=0,Ha=0,Ya=0;pe=M=pe-336|0,ae=f,ye=65535&m,de=a,q=65535&i,Mt=-2147483648&(i^m);e:{if(!((ot=m>>>16&32767)-32767>>>0>4294934529&(Be=i>>>16&32767)-32767>>>0>=4294934530)){if(!(!a&(0|(y=2147483647&i))==2147418112?!(r|s):y>>>0<2147418112)){qe=a,Mt=32768|i;break e}if(!(!f&(0|(i=2147483647&m))==2147418112?!(o|d):i>>>0<2147418112)){qe=f,Mt=32768|m,r=o,s=d;break e}if(!(r|a|2147418112^y|s)){if(!(o|f|2147418112^i|d)){r=0,s=0,Mt=2147450880;break e}Mt|=2147418112,r=0,s=0;break e}if(!(o|f|2147418112^i|d)){r=0,s=0;break e}if(!(r|a|s|y)){qe=(r=!(o|f|i|d))?0:qe,Mt=r?2147450880:Mt,r=0,s=0;break e}if(!(o|f|i|d)){Mt|=2147418112,r=0,s=0;break e}(0|y)==65535|y>>>0<65535&&(m=a=!(q|de),y=a?r:de,f=a<<=6,Sa(M+320|0,r,s,de,q,(a=a+((0|(m=Re(m?s:q)))==32?Re(y)+32|0:m)|0)-15|0),Ft=16-a|0,de=e[M+328>>2],q=e[M+332>>2],s=e[M+324>>2],r=e[M+320>>2]),i>>>0>65535||(f=a=!(ae|ye),m=a?o:ae,i=a<<=6,Sa(M+304|0,o,d,ae,ye,(a=a+((0|(f=Re(f?d:ye)))==32?Re(m)+32|0:f)|0)-15|0),Ft=(a+Ft|0)-16|0,ae=e[M+312>>2],ye=e[M+316>>2],o=e[M+304>>2],d=e[M+308>>2])}if(Tr=i=65536|ye,Yr=ae,y=i<<15|(a=ae)>>>17,tn(M+288|0,a=i=a<<15|d>>>17,f=y,0,0,m=0-a|0,y=1963258675-(y+!!(0|a)|0)|0,0,0),tn(M+272|0,0-(a=e[M+296>>2])|0,0-(e[M+300>>2]+!!(0|a)|0)|0,0,0,m,y,0,0),tn(M+256|0,m=(a=e[M+280>>2])<<1|e[M+276>>2]>>>31,a=e[M+284>>2]<<1|a>>>31,0,0,i,f,0,0),tn(M+240|0,m,a,0,0,0-(y=e[M+264>>2])|0,0-(e[M+268>>2]+!!(0|y)|0)|0,0,0),tn(M+224|0,y=(m=e[M+248>>2])<<1|e[M+244>>2]>>>31,a=e[M+252>>2]<<1|m>>>31,0,0,i,f,0,0),tn(M+208|0,y,a,0,0,0-(m=e[M+232>>2])|0,0-(e[M+236>>2]+!!(0|m)|0)|0,0,0),tn(M+192|0,m=(a=e[M+216>>2])<<1|e[M+212>>2]>>>31,a=e[M+220>>2]<<1|a>>>31,0,0,i,f,0,0),tn(M+176|0,m,a,0,0,0-(y=e[M+200>>2])|0,0-(e[M+204>>2]+!!(0|y)|0)|0,0,0),tn(M+160|0,m=i,a=f,0,0,f=(ae=(i=e[M+184>>2])<<1|e[M+180>>2]>>>31)-1|0,i=(e[M+188>>2]<<1|i>>>31)-!ae|0,0,0),tn(M+144|0,o<<15,d<<15|o>>>17,0,0,a=f,i,0,0),pt=M+112|0,Ar=e[M+168>>2],f=e[M+172>>2],P=(ae=e[M+160>>2])+(m=e[M+152>>2])|0,y=(ye=e[M+164>>2])+e[M+156>>2]|0,m=y=m>>>0>P>>>0?y+1|0:y,y=(y=(0|ye)==(0|y)&P>>>0<ae>>>0|y>>>0<ye>>>0)>>>0>(ye=y+Ar|0)>>>0?f+1|0:f,tn(pt,a,i,0,0,0-(f=(ae=!m&P>>>0>1|!!(0|m))+ye|0)|0,0-(!!(0|f)+(y=ae>>>0>f>>>0?y+1|0:y)|0)|0,0,0),tn(M+128|0,1-P|0,0-((P>>>0>1)+m|0)|0,0,0,a,i,0,0),ga=(Be-ot|0)+Ft|0,pt=i=e[M+116>>2],ae=(a=e[M+112>>2])<<1,Be=y=i<<1|a>>>31,a=y,Mr=f=e[M+140>>2],a=a+(y=f<<1|(i=e[M+136>>2])>>>31)|0,i=a=(f=(m=i<<1|e[M+132>>2]>>>31)+ae|0)>>>0<m>>>0?a+1|0:a,Xt=a=a-(f>>>0<13927)|0,Ar=a,fa=y=65536|q,Pa=de,za=(a=de)<<1,Ha=y=y<<1|a>>>31,ls=y,Ts=a=ps(Xt,P=0,y,0),Lt=y=X,Ft=r<<1,ot=a=s<<1|r>>>31,ye=y=0,Xt=(0|i)==(0|Xt)&(m=f-13927|0)>>>0<f>>>0|i>>>0>Xt>>>0,i=(0|i)==(0|Be)&f>>>0<ae>>>0|i>>>0<Be>>>0,a=e[M+120>>2],y=f=e[M+124>>2]<<1|a>>>31,y=(a=(P=Mr>>>31|0)+(a=a<<1|pt>>>31)|0)>>>0<P>>>0?y+1|0:y,P=(f=a)>>>0>(a=a+i|0)>>>0?y+1|0:y,P=(i=a)>>>0>(a=a+Xt|0)>>>0?P+1|0:P,i=a-1|0,y=ps(ot,ye,Xt=P-!a|0,Be=0),f=X+Lt|0,pt=(0|Lt)==(0|(f=(a=y+Ts|0)>>>0<y>>>0?f+1|0:f))&a>>>0<Ts>>>0|f>>>0<Lt>>>0,Mr=i,i=ps(i,y=0,$r=(Fa=s>>>31|0)|de<<1,Lt=0),y=X+f|0,P=0,ae=y=i>>>0>(de=i+a|0)>>>0?y+1|0:y,P=(i=a=(0|y)==(0|f)&a>>>0>de>>>0|f>>>0>y>>>0)>>>0>(a=a+pt|0)>>>0?1:P,i=ps(ls,ye,Xt,Be),y=X+P|0,pt=a=i+a|0,a=a>>>0<i>>>0?y+1|0:y,i=ps(ls,ye,Mr,Lt),q=X,f=i,i=ps($r,Lt,Xt,Be),y=X+q|0,i=y=i>>>0>(P=f+i|0)>>>0?y+1|0:y,a=a+(y=(0|q)==(0|y)&f>>>0>P>>>0|y>>>0<q>>>0)|0,pt=q=pt+i|0,q=a=q>>>0<i>>>0?a+1|0:a,y=P+ae|0,i=y=(a=(i=0)+de|0)>>>0<i>>>0?y+1|0:y,f=(0|y)==(0|ae)&a>>>0<de>>>0|y>>>0<ae>>>0,y=q,P=f,Hs=f=f+pt|0,P=y=P>>>0>f>>>0?y+1|0:y,pt=a,q=a,de=i,Ts=m,a=ps(m,0,$r,Lt),f=X,i=a,m=ps(Ar,qe,ot,qe),y=X+f|0,m=(0|f)==(0|(y=(a=a+m|0)>>>0<m>>>0?y+1|0:y))&a>>>0<i>>>0|f>>>0>y>>>0,f=y,i=ps(Mr,Lt,$s=-2&Ft,0),y=X+y|0,i=y=i>>>0>(ae=i+a|0)>>>0?y+1|0:y,a=(0|y)==(0|f)&a>>>0>ae>>>0|f>>>0>y>>>0,f=0,a=((m=a+m|0)>>>0<a>>>0?1:f)+de|0,y=P,m=a=(q=m+q|0)>>>0<m>>>0?a+1|0:a,f=a=(0|a)==(0|de)&q>>>0<pt>>>0|a>>>0<de>>>0,Ya=a=a+Hs|0,pt=y=f>>>0>a>>>0?y+1|0:y,a=ps(ls,ye,Ts,qe),Hs=X,ls=a,f=ps(Xt,Be,$s,qe),y=X+Hs|0,de=a=a+f|0,P=a+(ye=ps(Ar,qe,$r,Lt))|0,a=(f=a>>>0<f>>>0?y+1|0:y)+X|0,a=P>>>0<ye>>>0?a+1|0:a,Be=P,ye=P+(y=ps(ot,qe,Mr,Lt))|0,P=X+a|0,$r=(0|a)==(0|(P=y>>>0>ye>>>0?P+1|0:P))&ye>>>0<Be>>>0|a>>>0>P>>>0,y=((a=(a=(a=(0|a)==(0|f)&de>>>0>Be>>>0|a>>>0<f>>>0)+(y=(0|f)==(0|Hs)&de>>>0<ls>>>0|f>>>0<Hs>>>0)|0)+$r|0)|(Mr=0))+m|0,de=y=(f=P)>>>0>(Be=f+q|0)>>>0?y+1|0:y,a=(0|m)==(0|y)&q>>>0>Be>>>0|m>>>0>y>>>0,y=pt,f=a,Mr=a=a+Ya|0,m=y=f>>>0>a>>>0?y+1|0:y,a=ps(Ar,qe,$s,qe),Ar=X,q=a,f=ps(ot,qe,Ts,qe),y=X+Ar|0,f=(0|(y=(a=a+f|0)>>>0<f>>>0?y+1|0:y))==(0|Ar)&a>>>0<q>>>0|y>>>0<Ar>>>0,q=y,a=y+ae|0,y=(f|(pt=0))+i|0,q=(0|i)==(0|(y=a>>>0<q>>>0?y+1|0:y))&a>>>0<ae>>>0|i>>>0>y>>>0,P=(f=y)+(y=ye)|0,y=0,y=((i=a=(0|f)==(0|(P=(ae=(ye=0)+a|0)>>>0<ye>>>0?P+1|0:P))&a>>>0>ae>>>0|f>>>0>P>>>0)>>>0>(a=a+q|0)>>>0?1:y)+de|0,P=m,i=y=(i=a)>>>0>(a=a+Be|0)>>>0?y+1|0:y,m=P=(m=f=(0|de)==(0|y)&a>>>0<Be>>>0|y>>>0<de>>>0)>>>0>(f=f+Mr|0)>>>0?P+1|0:P,(0|P)==131071|P>>>0<131071?(Pa=za|Fa,fa=Lt|Ha,tn(M+80|0,a,i,f,m,o,d,Yr,Tr),ye=P=e[M+84>>2],y=r<<17,de=(s=(ae=0)-(q=e[M+88>>2])|0)-(P=!!(P|(r=e[M+80>>2])))|0,q=(y-(e[M+92>>2]+(q>>>0>ae>>>0)|0)|0)-(s>>>0<P>>>0)|0,ae=0-r|0,ye=0-(!!(0|r)+ye|0)|0,r=ga+16382|0):(tn(M+96|0,a=(1&i)<<31|a>>>1,i=f<<31|i>>>1,f=(1&m)<<31|f>>>1,m=m>>>1|0,o,d,Yr,Tr),ot=de=e[M+100>>2],de=(ae=0-(Ft=e[M+104>>2])|0)-(q=!!(de|(P=e[M+96>>2])))|0,q=((r<<16)-(e[M+108>>2]+(ye>>>0<Ft>>>0)|0)|0)-(q>>>0>ae>>>0)|0,ae=0-P|0,ye=0-(!!(0|P)+ot|0)|0,Ft=r,ot=s,r=ga+16383|0),(0|r)>=32767)Mt|=2147418112,r=0,s=0;else{if((0|r)>0)P=q<<1|de>>>31,de=de<<1|ye>>>31,q=P,Ft=f,ot=65535&m|r<<16,P=ye<<1|ae>>>31,m=ae<<1;else{if((0|r)<=-113){r=0,s=0;break e}cs(M- -64|0,a,i,f,m,1-r|0),Sa(M+48|0,Ft,ot,Pa,fa,r+112|0),tn(M+32|0,o,d,Yr,Tr,a=e[M+64>>2],i=e[M+68>>2],Ft=e[M+72>>2],ot=e[M+76>>2]),r=e[M+40>>2],ae=(s=e[M+56>>2])-(de=r<<1|(P=e[M+36>>2])>>>31)|0,q=e[M+60>>2]-((e[M+44>>2]<<1|r>>>31)+(s>>>0<de>>>0)|0)|0,y=(r=e[M+32>>2])<<1,de=ae-(r=(0|(f=P<<1|r>>>31))==(0|(m=e[M+52>>2]))&y>>>0>(s=e[M+48>>2])>>>0|f>>>0>m>>>0)|0,q=q-(r>>>0>ae>>>0)|0,P=m-((s>>>0<y>>>0)+f|0)|0,m=s-y|0}r=m,tn(M+16|0,o,d,Yr,Tr,3,0,0,0),tn(M,o,d,Yr,Tr,5,0,0,0),f=P+(s=0)|0,f=m>>>0>(r=r+(y=1&a)|0)>>>0?f+1|0:f,m=r,d=(0|d)==(0|f)&r>>>0>o>>>0|d>>>0<f>>>0,P=q,r=(0|s)==(0|f)&r>>>0<y>>>0|s>>>0>f>>>0,y=i,s=y=(s=r=(r=(0|(P=r>>>0>(o=r+de|0)>>>0?P+1|0:P))==(0|Tr))&(0|o)==(0|Yr)?d:r&o>>>0>Yr>>>0|P>>>0>Tr>>>0)>>>0>(r=r+a|0)>>>0?y+1|0:y,a=(0|i)==(0|y)&r>>>0<a>>>0|i>>>0>y>>>0,y=ot,y=(i=a)>>>0>(a=a+Ft|0)>>>0?y+1|0:y,d=a,q=(0|(i=e[M+20>>2]))==(0|f)&ue[M+16>>2]<m>>>0|i>>>0<f>>>0,i=e[M+28>>2],i=y>>>0<2147418112&((0|(a=e[M+24>>2]))==(0|o)&(0|i)==(0|P)?q:(0|i)==(0|P)&a>>>0<o>>>0|i>>>0<P>>>0),a=s,y=(s=r=(0|s)==(0|(a=(q=i)>>>0>(i=r+i|0)>>>0?a+1|0:a))&r>>>0>i>>>0|s>>>0>a>>>0)>>>0>(r=r+d|0)>>>0?y+1|0:y,d=r,f=(0|(s=e[M+4>>2]))==(0|f)&ue[M>>2]<m>>>0|s>>>0<f>>>0,s=e[M+12>>2],s=P=(s=r=y>>>0<2147418112&((0|(r=e[M+8>>2]))==(0|o)&(0|s)==(0|P)?f:(0|s)==(0|P)&r>>>0<o>>>0|s>>>0<P>>>0))>>>0>(r=r+i|0)>>>0?a+1|0:a,i=(0|a)==(0|P)&r>>>0<i>>>0|a>>>0>P>>>0,a=y,o=i,qe|=i=i+d|0,Mt|=a=o>>>0>i>>>0?a+1|0:a}}e[t>>2]=r,e[t+4>>2]=s,e[t+8>>2]=qe,e[t+12>>2]=Mt,pe=M+336|0}function Cs(t,r,s,a,i){var o,d,f,m=0,M=0,y=0,P=0,q=0,ae=0,de=0,ye=0,Be=0,qe=0,ot=0,pt=0,Mt=0,Ft=0,Lt=0,Xt=0,Ar=0,Mr=0,Tr=0,Yr=0,$r=0;if(pe=d=pe-80|0,f=e[s+8>>2],!i|!B[s+4>>1]||(e[i+8>>2]=0),o=wr(a,0,152),e[o+44>>2]=u[f+14|0],e[o+40>>2]=u[f+15|0],a=B[f+8>>1]){for(a=e[34459]+(a<<1)|0,qe=256&r,ot=s+32|0,Ft=s-32|0,Lt=s- -64|0,Xt=s+96|0,Ar=s+-64|0,Mr=s-28|0,Tr=1&r,Yr=s-24|0,pt=e[30450];;){m=15&(q=(r=B[a>>1])>>>8|0);e:{t:{s:{n:{i:{c:{A:{d:{l:{o:{p:{b:switch(0|(y=r>>>12|0)){case 10:break A;case 9:break d;case 6:break l;case 2:case 3:break o;case 1:break p;case 0:break b;case 11:case 12:case 13:case 14:case 15:break c;default:break i}M=255&r;b:{m:{C:switch(0|m){case 13:if(M)break m;m=a,r=0;break b;case 0:switch(m=a,M-1|0){case 1:break e;case 0:break t}e[d+20>>2]=GA(d+75|0,e[f>>2]),e[d+16>>2]=r,ba(pt,85851,d+16|0);break e;case 5:if(u[e[144464+(u[s+34|0]<<2)>>2]+11|0]!=2)break e;e[o+20>>2]=M;break e;case 12:break C;default:break n}e[o+44>>2]=e[o+44>>2]+(r<<24>>31&-256|M);break e}g[o+132|0]=u[a+3|0],m=a+2|0,g[o+133|0]=u[0|m],r=2,M>>>0<3||(g[o+134|0]=u[a+5|0],m=a+4|0,g[o+135|0]=u[0|m],r=4,M>>>0<5||(g[o+136|0]=u[a+7|0],m=a+6|0,g[o+137|0]=u[0|m],r=6,M>>>0<7||(g[o+138|0]=u[a+9|0],m=a+8|0,g[o+139|0]=u[0|m],r=8,M>>>0<9||(g[o+140|0]=u[a+11|0],m=a+10|0,g[o+141|0]=u[0|m],r=10,M>>>0<11||(g[o+142|0]=u[a+13|0],m=a+12|0,g[o+143|0]=u[0|m],r=12,M>>>0<13||(g[o+144|0]=u[a+15|0],m=a+14|0,g[o+145|0]=u[0|m],r=14,M>>>0<15||(g[o+146|0]=u[a+17|0],m=a+16|0,g[o+147|0]=u[0|m],r=16)))))))}g[132+(r+o|0)|0]=0,M=de;break t}if(!t|m>>>0>7||(y=s,u[e[144464+(u[s+2|0]<<2)>>2]+11|0]!=2&&(y=ot,u[e[144464+(u[s+34|0]<<2)>>2]+11|0]!=2))||!(1&(m=e[t+56>>2]))&&16&u[0|s])break e;M=15&u[y+3|0],M=2&m&&u[y+6|0]<=M>>>0?4:M;p:{b:{m:{C:switch((m=7&q)-3|0){case 1:break b;case 0:break C;default:break m}if(M>>>0>3)break p;break e}if(e[102832+(m<<2)>>2]>(0|M))break p;break e}if(u[y+6|0]>M>>>0)break e}e[o+8>>2]=255&r,M=1;break s}if((57344&r)==8192){for($r=e[32972],q=1,Mt=0;;){P=255&r,m=(ae=4095&r)>>>8|0;o:if(ae>>>0<=3583){(0|(M=(m>>>0)%7|0))==6&&(M=B[a+2>>1]),Be=0,m=s;p:{b:{m:switch(0|M){case 6:if(y=0,B[s+36>>1]|B[s+68>>1])break o;case 3:m=Lt;break b;case 9:if(y=0,B[s+36>>1]|B[s+68>>1])break o;if(m=Xt,!B[s+100>>1])break p;break o;case 7:if(y=0,B[s+36>>1])break o;for(M=1;;){if(u[e[144464+(u[2+(m=(M<<5)+s|0)|0]<<2)>>2]+11|0]==2)break b;if(B[4+(((M=M+1|0)<<5)+s|0)>>1])break}break o;case 5:if(y=0,B[s+4>>1])break o;case 0:Be=1,m=Ft;break b;case 4:if(y=0,B[s+36>>1])break o;case 2:m=ot;break b;case 8:if(y=0,!i)break o;if(Be=1,e[(m=i)+8>>2])break p;break o;case 10:break m;default:break b}if(y=0,B[s+4>>1]|B[Mr>>1])break o;Be=1,m=Ar;break p}b:switch(0|M){case 0:case 5:break b;default:break p}m=(u[m+2|0]==1?-32:0)+m|0}if(qe?(M=e[144464+(u[m+2|0]<<2)>>2],e[m+8>>2]=M):M=e[m+8>>2],ae>>>0<=1791){if(y=1,e[e[144464+(P<<2)>>2]>>2]==e[M>>2])break o;if(!(!Be|u[M+11|0]!=2)){y=(0|P)==u[M+13|0];break o}y=(0|P)==u[M+12|0];break o}P=31&ae,y=0;p:switch(ae>>>5&7){case 0:y=(0|P)==u[M+11|0];break o;case 1:y=(0|P)==(15&B[M+6>>1]);break o;case 2:y=e[M+4>>2]>>>P&1;break o;case 4:break p;default:break o}p:switch(0|P){case 0:case 1:case 2:case 3:case 4:if(u[e[144464+(u[m+2|0]<<2)>>2]+11|0]!=2){if(u[e[144464+(u[m+34|0]<<2)>>2]+11|0]!=2)break o;m=m+32|0}M=15&u[m+3|0],M=!t|!(2&u[t+56|0])?M:u[m+6|0]<=M>>>0?4:M;b:{switch(P-3|0){case 1:y=u[m+6|0]<=M>>>0;break o;case 0:if(y=1,M>>>0<=3)break b;break o}if(y=1,e[102832+(P<<2)>>2]>(0|M))break o}y=0;break o;case 17:if(!u[M+11|0]){y=1;break o}y=(32&u[s+1|0])>>>5|0;break o;case 18:y=B[m+4>>1]!=0;break o;case 19:if(y=1,B[m+36>>1])break o;y=!u[e[m+40>>2]+11|0];break o;case 9:if(B[m+4>>1])break o;for(;;){if(y=!!(0|(M=12&u[m-29|0])),M)break o;if(B[4+(m=m-32|0)>>1])break}break o;case 10:y=u[M+11|0]!=2;break o;case 11:for(;;){if(y=!!(0|(M=B[m+36>>1])),M)break o;if(M=m,m=m+32|0,u[e[M+40>>2]+11|0]==2)break}break o;case 12:if(y=1,(254&u[M+11|0])==2)break o;y=(16&u[M+4|0])>>>4|0;break o;case 13:for(;y=(u[e[m+8>>2]+11|0]==2)+y|0,M=B[m+4>>1],m=m-32|0,!M;);y=(0|y)==1;break o;case 14:for(;y=(u[e[m+8>>2]+11|0]==2)+y|0,M=B[m+4>>1],m=m-32|0,!M;);y=(0|y)==2;break o;case 16:break p;default:break o}y=(16&u[0|m])>>>4|0}else if(y=0,(0|m)==15){p:switch(P-1|0){case 0:y=Tr;break o;case 1:break p;default:break o}y=e[$r+132>>2]!=0}o:if(1970>>>(m=(M=65535&r)>>>12|0)&1)m=g[m+102848|0];else{switch(0|m){case 0:if(m=1,(3840&M)!=3328)break o;m=1+(1+(255&M)>>>1|0)|0;break o;case 6:m=(M>>>9&7)-5>>>0<2?12:1;break o;case 2:case 3:m=(0|(m=3840&M))==3328||(0|m)==1536?2:1;break o}m=4,(M=B[a+4>>1])>>>0>61439||(m=(0|M)==2?3:2)}if(a=((m=B[(a=(m<<1)+a|0)>>1]==3)<<1)+a|0,m^=y,q=Mt?m|q:m&q,Mt=4096&r,(57344&(r=B[a>>1]))!=8192)break}if(!(1&q))if((63488&r)!=26624){o:if(1970>>>(m=r>>>12|0)&1)m=g[m+102848|0];else{switch(0|m){case 0:if(m=1,(3840&r)!=3328)break o;m=1+(1+(255&r)>>>1|0)|0;break o;case 6:m=(r>>>9&7)-5>>>0<2?12:1;break o;case 2:case 3:m=(0|(r&=3840))==3328||(0|r)==1536?2:1;break o}m=4,(r=B[a+4>>1])>>>0>61439||(m=(0|r)==2?3:2)}a=(((65024&B[(r=(m<<1)+a|0)>>1])==24576)<<1)+r|0}else a=((255&r)<<1)+a|0}m=a-2|0,M=de;break t}l:switch(m>>>1|0){case 0:a=(((255&r)<<1)+a|0)-2|0;break e;case 5:e[o>>2]=2|e[o>>2],((r=u[e[s+40>>2]+12|0])-28&255)>>>0<=5&&(m=B[4+(r=((r<<2)+a|0)-112|0)>>1],r=B[r+2>>1],e[o+96>>2]=r>>>4<<24>>24,e[o+76>>2]=(15&r)<<18|m<<2),a=a+24|0;break e;case 6:break l;default:break e}((r=u[e[Yr>>2]+13|0])-28&255)>>>0<=5&&(m=B[4+(r=((r<<2)+a|0)-112|0)>>1],r=B[r+2>>1],e[o+100>>2]=r>>>4<<24>>24,e[o+80>>2]=(15&r)<<18|m<<2),a=a+24|0;break e}r=B[(a=a+2|0)>>1]|r<<16&983040;d:switch(m-1|0){case 0:if((0|ye)>9)break e;e[(d+32|0)+(ye<<2)>>2]=a,a=(e[34459]+(r<<1)|0)-2|0,ye=ye+1|0;break e;case 1:e[o+124>>2]=r;break e;case 2:break d;default:break e}e[o+128>>2]=r;break e}e[108+(m=(((0|m)!=1)<<3)+o|0)>>2]=B[a+2>>1]|(255&r)<<16,r=B[a+4>>1]<<16,a=a+6|0,e[m+112>>2]=r|B[a>>1];break e}if(M=B[(m=a+2|0)>>1],ae=r>>>4|0,e[88+(q=((P=y-11|0)<<2)+o|0)>>2]=255&ae,e[q+68>>2]=r<<18&3932160|M<<2,(0|(a=B[a+4>>1]))==2){a=m;break e}if(M=r>>>0<=53247?a>>>0>61439?2:1:de-((0|P)==4)|0,y-13>>>0>1)break t;e[q+88>>2]=ae<<24>>24;break t}e[d+4>>2]=GA(d+75|0,e[f>>2]),e[d>>2]=r,ba(pt,85851,d);break e}e[4+((m<<2)+o|0)>>2]=M,M=qe&&(0|m)==1?1:de}m=a}(0|M)!=1|(0|ye)<=0?(a=m,de=M):(a=e[(d+32|0)+((ye=ye-1|0)<<2)>>2],de=0)}if(a=a+2|0,(0|de)==1)break}!i|u[s+17|0]!=2||(t=e[s+4>>2],e[i>>2]=e[s>>2],e[i+4>>2]=t,t=e[s+28>>2],e[i+24>>2]=e[s+24>>2],e[i+28>>2]=t,t=e[s+20>>2],e[i+16>>2]=e[s+16>>2],e[i+20>>2]=t,t=e[s+12>>2],e[i+8>>2]=e[s+8>>2],e[i+12>>2]=t),g[s+23|0]=e[o+44>>2],(t=e[o+68>>2])?(e[s+24>>2]=t,t=o+88|0):(e[s+24>>2]=e[o+72>>2],t=o+92|0),e[s+28>>2]=e[t>>2]}pe=d+80|0}function Ks(t,r,s,a,i,o){var d,f=0,m=0,M=0,y=0,P=0,q=0,ae=0,de=0,ye=0,Be=0,qe=0,ot=0,pt=0,Mt=0,Ft=0,Lt=0,Xt=0,Ar=0;pe=d=pe-848|0;e:if(!(!e[t+104>>2]|8&u[i+2|0]|e[47202]==193)){for(e[a>>2]=0,e[33272]=0,e[33274]=o,g[d+192|0]=0,e[33273]=d+192;y=(o=y)+1|0,g[0|(ot=r+o|0)]-48>>>0<10;);e[56798]=0,Lt=d+188|0,q=-2147483648,pe=qe=pe-16|0;t:if(f=u[0|r]){P=r;s:{for(;;){if(!((0|(f=f<<24>>24))==32|f-9>>>0<5))break s;if(f=u[P+1|0],P=P+1|0,!f)break}break t}s:switch((f=u[0|P])-43|0){case 0:case 2:break s;default:break t}ye=(0|f)==45?-1:0,P=P+1|0}else P=r;for(;f=-48,(((ae=g[0|P])-48&255)>>>0<10||(f=-87,(ae-97&255)>>>0<26||(f=-55,!((ae-65&255)>>>0>25))))&&!((0|(ae=f+ae|0))>=10);)tn(qe,10,0,0,0,de,Be,0,0),f=1,e[qe+8>>2]|e[qe+12>>2]||(Mt=ps(de,Be,10,0),(0|(Ft=X))==-1&~ae>>>0<Mt>>>0||(f=Ft,Be=(de=ae+Mt|0)>>>0<ae>>>0?f+1|0:f,pt=1,f=M)),P=P+1|0,M=f;Lt&&(e[Lt>>2]=pt?P:r);t:{s:{if(M)e[56798]=68,de=-2147483648,Be=0;else if(!Be&de>>>0<2147483648)break s;if(!ye){e[56798]=68,q=2147483647;break t}if(!(!Be&de>>>0<=2147483648)){e[56798]=68;break t}}q=(ye^de)-ye|0}if(pe=qe+16|0,ye=q,!(e[56798]|e[d+188>>2]==(0|r))){t:{s:{n:{if(!(!((0|(ae=64&u[t+109|0]?4:3))!=(0|o)|e[t+124>>2]!=g[r-2|0])&g[r-3|0]-48>>>0<10)){i:{if(e[t+124>>2]!=32){if(!(16&u[t+105|0]))break n;if((0|o)==3)break i;break n}if((0|o)!=3)break n}if(4&u[i+2|0]|g[r-2|0]-48>>>0>=10)break n}g[133104]=0,g[d+288|0]=0,Xt=1;break s}if(g[133104]=0,e[33275]=0,g[d+288|0]=0,Ar=1,pt=0,u[0|r]==48)break t}pt=hs(t,r,ot,i,0)}u[0|ot]!=46|g[r+y|0]-48>>>0<10|1&g[i+13|0]|g[ot+2|0]-48>>>0<10||(g[0|ot]=0);t:if(!pt||(Mt=1,e[t+212>>2]==26741)){if(q=d+256|0,e[d+844>>2]=q,m=y,64&u[i+1|0]&&(g[d+256|0]=45,q=d+256|1,e[d+844>>2]=q,m=o+2|0),P=u[r+m|0]){for(;!((255&P)==32|(0|m)>28)&&(f=e[d+844>>2],e[d+844>>2]=f+1,g[0|f]=P,P=u[(m=m+1|0)+r|0]););q=e[d+844>>2]}if(g[0|q]=0,Mt=1,f=g[d+256|0]){if(!(M=e[t+136>>2])||Ta(d+256|0,M)){if(f-48>>>0<10||(e[d+176>>2]=d+256,Br(f=d+800|0,88653,d+176|0),!Nr(t,f,133104)))break t;e[a>>2]=128|e[a>>2],e[d+160>>2]=d+256,Br(f=d+800|0,88773,d+160|0),Nr(t,f,133116),Mt=0}pt=2}}Lt=e[i>>2],g[d+352|0]=0,g[d+624|0]=0;t:{s:{n:if(!(!Ar|u[0|r]!=48||(0|(f=g[r+1|0]))==32|(0|f)==e[t+128>>2])){i:{if((0|o)==2){if(u[r+3|0]!=58|g[r+5|0]-48>>>0>=10||!((0|(f=g[r+7|0]))==32|f-9>>>0<5))break i;break n}if((0|o)>3)break s}if(u[0|r]==48&&!((0|(f=o-1|0))<=0))for(m=0;;){if(Nr(t,88875,zr(M=d+288|0)+M|0),u[(m=m+1|0)+r|0]!=48)break n;if(!((0|f)>(0|m)))break}}n:{i:{if(!((0|(f=g[0|ot]))==32&&16&u[t+105|0])){if(Ft=2,de=o+2|0,(0|f)==e[t+124>>2])break i;Be=1,q=0,f=0;break n}Ft=1,de=o+2|0}if(4&u[i+14|0])q=1,f=0,Be=1;else for(f=0,P=1,m=o,Be=1;;){M=f,f=P,P=(qe=m+Ft|0)+r|0,m=0;i:{for(;;){if(q=1,!(g[m+P|0]-48>>>0>=10)){if((0|ae)!=(0|(m=m+1|0)))continue;break i}break}f=M;break n}if(g[P+ae|0]-48>>>0<10){f=M;break n}if(m=0,g[P-1|0]-48>>>0<10){f=M;break n}i:{for(;;){if(u[(m+qe|0)+r|0]==48){if((0|ae)!=(0|(m=m+1|0)))continue;break i}break}Be=0}if((0|(M=g[(m=ae+qe|0)+r|0]))!=e[t+124>>2]&(!(16&u[t+105|0])|(0|M)!=32))break n;if(de=m+2|0,4&u[2+(K(P=f+1|0,12)+i|0)|0])break}}m=!ye;n:if(!(!Be|!(64&u[1+(K(f,12)+i|0)|0])|e[t+212>>2]!=26741)){i:switch(u[0|(M=r+de|0)]-97|0){case 0:case 4:break i;default:break n}i:{c:{A:{d:switch((P=u[M+1|0])-116|0){case 6:break n;case 1:case 2:case 3:case 4:case 5:break c;case 0:break d;default:break A}if(u[M+2|0]!=116)break i;break n}if((0|P)==32)break n}if(!(!!((0|ye)%1e3|0)&(0|f)!=1)&&(0|P)==108)break n}e[33274]=1|e[33274]}de=32768&Lt,m&=Xt;n:if(e[t+128>>2]!=g[0|ot]|g[r+y|0]-48>>>0>=10){i:{if(!m){if(m=0,M=1,!((0|f)>0&q))break i;ye=(y=hn(t,ye,f,Be,d+624|0))?0:ye,m=!!(0|y),P=0;break n}m=1,ye=0,e[33275]==1&&(e[d+144>>2]=f+1,Br(y=d+800|0,89026,d+144|0),Nr(t,y,d+688|0)||(e[d+128>>2]=f,Br(y=d+800|0,89026,d+128|0),Nr(t,y,d+624|0)))}M=1,P=0}else Nr(t,88882,d+624|0),M=0,P=256;q=de?2:pt;n:{if(f|u[d+624|0]|u[0|ot]!=46){if(f)break n}else Nr(t,89192,d+624|0);if(e[d+844>>2]=r,g[r+1|0]-48>>>0<10)for(;y=e[d+844>>2],e[d+844>>2]=y+1,g[y+2|0]-48>>>0<10;);if(g[e[d+844>>2]-1|0]-48>>>0>=10||(e[d+416>>2]=e[d+844>>2]-1,ma(t,d+416|0,d+192|0,a,4,i)&&(e[33272]=2)),u[d+192|0]|u[e[d+844>>2]]==48||ma(t,d+844|0,d+192|0,a,4,i)&&(e[33272]=1),Ar){if(!q&M&&(e[d+112>>2]=ye,Br(i=d+800|0,89214,d+112|0),Nr(t,i,s)))break t;if(1&g[t+110|0]){for(y=r;(32|u[0|y])!=32;)y=y+1|0;e[d+416>>2]=y,u[y+1|0]==37&&(Nr(t,89328,s),i=zr(s),g[e[d+416>>2]+1|0]=32,s=s+i|0)}}}xn(t,ye,d+416|0,m,f,q|P|Xt),!(2&u[t+109|0])|(0|f)<=0?(e[d+60>>2]=15,e[d- -64>>2]=d+624,e[d+56>>2]=d+416,e[d+52>>2]=d+352,e[d+48>>2]=d+288,Br(s,89415,d+48|0)):(e[d+88>>2]=15,e[d+96>>2]=d+416,e[d+92>>2]=d+352,e[d+84>>2]=d+624,e[d+80>>2]=d+288,Br(s,89346,d+80|0));n:if(!M)for(;;){for(o=o+1|0,M=0;M=(y=M)+1|0,g[(f=o+y|0)+r|0]-48>>>0<10;);i=2;i:{c:{A:{d:{l:{o:switch((M=57344&e[t+104>>2])-8192>>>13|0){case 6:break c;case 2:break A;case 0:case 4:case 5:break d;case 1:break l;case 3:break o;default:break i}i=5}if((0|(M=u[0|(m=r+o|0)]))==48)for(;Nr(t,88875,f=d+688|0),Ca(s,f),y=y-1|0,(0|(M=u[0|(m=(o=o+1|0)+r|0)]))==48;);if((0|i)<(0|y)|(M<<24>>24)-48>>>0>=10)break i;i=d+688|0,xn(t,Xi(m),i,0,0,0),Ca(s,i),o=o+y|0;break i}if(xn(t,Xi(i=r+o|0),d+416|0,0,0,0),!((0|M)==8192&u[0|i]!=48)){if(e[d+16>>2]=y,Br(i=d+800|0,89508,d+16|0),!Nr(t,i,d+688|0))break i;Ca((0|M)==49152?s:d+416|0,d+688|0)}Ca(s,d+416|0),o=f;break i}if((0|y)>4||u[0|(i=r+o|0)]==48)break i;xn(t,o=Xi(i),i=d+688|0,0,0,0),Ca(s,i),o=f;break i}if(!((0|y)<=1))for(;;){if(e[d+32>>2]=g[r+o|0],Br(i=d+800|0,89575,d+32|0),!Nr(t,i,d+688|0))break i;if(Ca(s,d+688|0),o=o+1|0,!((0|(y=y-1|0))>1))break}}i:if(!((M=u[0|(y=r+o|0)])-48>>>0>=10||zr(s)>>>0>=190))for(;;){if(i=d+688|0,Ba(t,g[0|y]-48|0,0,2,i),f=zr(s),e[d>>2]=15,e[d+4>>2]=i,Br(s+f|0,89594,d),(M=u[0|(y=(o=o+1|0)+r|0)])-48>>>0>=10)break i;if(!(zr(s)>>>0<=189))break}if(Nr(t,89678,d+688|0)&&Ca(s,d+688|0),e[t+128>>2]!=(0|M)|g[1+(r+o|0)|0]-48>>>0>=10)break n;Nr(t,88882,i=d+688|0),Ca(s,i)}if(!(i=u[0|s])|(0|i)==21||(i=Ir(d+184|0,r=1+(r+o|0)|0),o=e[d+184>>2],!(2&u[t+106|0])|(0|o)!=32||(Ir(d+184|0,r+i|0),o=e[d+184>>2]),Di(o)|Be||(t=zr(s)+s|0,g[0|t]=11,g[t+1|0]=0)),e[a>>2]=-2147483648|e[a>>2],e[33275]=e[33275]-1,m=1,Mt)break e;e[33264]=1;break e}e[a>>2]=-129&e[a>>2],m=0;break e}m=1}}return pe=d+848|0,m}function is(t,r,s,a){var i,o,d=0,f=0,m=0,M=0,y=0,P=0,q=0,ae=0,de=0,ye=0,Be=0,qe=0,ot=0,pt=0,Mt=0,Ft=0,Lt=0,Xt=0,Ar=0,Mr=0,Tr=0;if(pe=i=pe-416|0,pt=B[s+8>>1],de=u[s+10|0],64&(o=e[s>>2])){for(e[s>>2]=-65&o,g[199388]=1,m=e[47202],q=e[49846],y=e[47352],P=e[47351],M=e[47350];;){d=(f=e[198304+(P<<2)>>2])>>8;e:{t:switch((31&f)-9|0){case 0:m=d;break e;case 4:q=d;break e;case 3:break t;default:break e}y=f>>>0>=256?d+y|0:0}if(!(!(128&f)&(0|M)>(0|(P=P+1|0))))break}e[47352]=y,e[47351]=P,e[49846]=q,e[47202]=m}q=0;e:if(!((0|(d=e[49572]))>997)){if(1048576&o||!u[0|r])u[199388]&&(e[49572]=d+1,g[199388]=0,e[(t=190288+(d<<3)|0)>>2]=983042,e[t+4>>2]=0),g[189088]=0;else if(!((0|d)>990)){(0|(d=e[t+8224>>2]))>0&&(e[t+8224>>2]=d-1),m=512&o?a:a+4|0,y=(240&e[47202])==16,(qe=2&o)&&((0|(f=e[47200]))<3||(0|(d=e[47350]))>243||(u[199388]&&(e[(P=198300+(d<<2)|0)>>2]=-129&e[P>>2]),e[47350]=d+1,g[199388]=1,Mt=(0|f)==3?20:f,e[198304+(d<<2)>>2]=Mt<<8|193)),M=y?m:a;t:{s:{if(!(8&o)){for(;a=u[(d=ae)+r|0],g[d+(i+240|0)|0]=a,223&a&&(ae=d+1|0,d>>>0<160););if(g[i+66|0]=0,ae=i- -64|2,q=at(e[47192],r,s,ae),e[i+412>>2]=q,!(4096&q))break s;ds(r,i+240|0,d);break e}n:if(En(r,87276,3))Vn(r,189088,i+240|0);else{if(P=0,223&(d=u[0|(ae=r+3|0)]))for(;g[(i+240|0)+P|0]=Fs(d<<24>>24),P=P+1|0,223&(d=u[0|(ae=ae+1|0)]););g[(a=i+240|0)+P|0]=0,d=0;i:if(!((0|(s=e[34461]))<=0)){for(;;){if(!Ta(a,K(d,44)+137856|0)){e[34457]=d;break i}if((0|s)==(0|(d=d+1|0)))break}d=s}if((0|(s=(0|s)==(0|d)?-1:d))<=0)break n;gn(s),g[189090]=0,g[189089]=s,g[189088]=21}q=-2147483648,e[i+412>>2]=-2147483648,a=-1;break t}if(!(!(8388608&q)|8&u[s+12|0])){for(pe=y=pe-208|0,P=e[t+60>>2],f=r;a=f,f=f+1|0,u[0|a]!=32;);Ir(y+204|0,f);s:if(Di(e[y+204>>2])){m=Hr(y,189088),f=(!(256&P)|(Be=Vt(t,f,s+12|0,0))>>>15)&!(67108864&Be)&u[189088]!=21;n:{i:{if(512&P){if(!(f&!(16&u[s+12|0])))break i;break n}if(f)break n}Hr(189088,m);break s}if(g[0|a]=45,e[s>>2]=-2&e[s>>2],q=0,f=189088,ye=Vt(e[47192],r,s,0),e[i+412>>2]=ye,!((0|P)<=0)&&(m=u[189088])){for(;q=(u[e[144464+(m<<2)>>2]+11|0]==2)+q|0,m=u[0|(f=f+1|0)];);if(!((31&P)>=(0|q))){g[0|a]=32,e[i+412>>2]=Vt(e[47192],r,s,0);break s}}e[i+412>>2]=128|(ye||Be),e[33264]=1}pe=y+208|0}if(a=-1,u[189088]==21){if(P=Hr(i+16|0,132848),y=e[i+412>>2],f=ds(r,i+240|0,d),m=i- -64|1,(0|(a=vA(u[189089]?189089:87315,188772,189296)))<0||(e[s>>2]=4194304|e[s>>2],u[i+66|0]?(I[i+64>>1]=8192,y=Vt(e[47193],m,s,0)):y=at(e[47193],f,s,ae)),u[189088]==21&&(d=ds(f,i+240|0,d),(0|(a=vA(u[189089]?189089:87315,188772,189296)))<0||(e[s>>2]=4194304|e[s>>2],u[i+66|0]?(I[i+64>>1]=8192,y=Vt(e[47193],m,s,0)):y=at(e[47193],d,s,ae)),q=4096,u[189088]==21))break e;e[i+412>>2]=y,(0|a)>=0||(g[189090]=0,I[94544]=3341,(0|a)==-1&&(Hr(132848,P),gn(e[e[32972]+60>>2]),a=e[e[32972]+60>>2]))}q=e[i+412>>2],128&o||(M=268435456&q&&(0|M)<=1?1:M,!(256&q)|528&o|e[t+8224>>2]|2&u[s-11|0]||(e[t+8224>>2]=3,M=(0|M)<=4?4:M)),M=(0|M)<=0&&e[49846]>2?1:M}if(s=u[199388],!((0|M)<=0|(0|(ae=e[49572]))>990)){e[49572]=ae+1,f=1&s,s=0,I[(d=190288+(ae<<3)|0)>>1]=f?2:0,g[d+7|0]=0,g[d+3|0]=0,f=M>>>0>1,g[d+2|0]=f?9:11,I[d+4>>1]=0,e[t+8236>>2]=0;t:if(!(!(d=f?M-2|0:0)|(0|(ae=e[49572]))>990))for(m=t+8236|0;;){if(e[49572]=ae+1,I[(f=190288+(ae<<3)|0)>>1]=0,g[f+7|0]=0,g[f+3|0]=0,y=d>>>0>1,g[f+2|0]=y?9:11,I[f+4>>1]=0,e[m>>2]=0,ae=e[49572],(0|(d=y?d-2|0:0))<=0)break t;if(!((0|ae)<991))break}e[t+8228>>2]=0,e[t+8232>>2]=0}g[199388]=1&s,!qe|e[47200]!=1||(e[49572]=ae+2,g[199388]=0,I[(d=190288+(ae<<3)|0)>>1]=1&s?2:0,g[d+7|0]=0,I[d+2>>1]=10,I[d+4>>1]=0,I[d+12>>1]=0,e[d+8>>2]=1179648,g[d+15|0]=0,1&o&&aa(g[r+1|0])&&(s=u[199388],g[199388]=0,r=e[49572],e[49572]=r+2,I[(r=190288+(r<<3)|0)>>1]=s?2:0,g[r+7|0]=0,I[r+2>>1]=10,I[r+4>>1]=0,I[r+12>>1]=0,e[r+8>>2]=1179648,g[r+15|0]=0)),d=de>>>0<31;t:if(!((0|a)<0))if(r=e[49572],s=u[190290+((M=r-1|0)<<3)|0],u[189088]!=9|u[189089]!=21)(0|s)!=21&&(f=u[199388],g[199388]=0,g[7+(s=190288+(r<<3)|0)|0]=0,I[s+2>>1]=21,I[s+4>>1]=0,I[s>>1]=f?2:0,M=r),e[49572]=M+1,g[190295+(M<<3)|0]=a;else{if((0|s)!=21)break t;e[49572]=M}r=2047&pt,s=(d?de:31)<<11,y=(Ft=128&o)?u[e[144464+(u[189088]<<2)>>2]+11|0]?189088:189089:189088,(M=u[0|y])|!(1&g[199388])||(M=23,g[0|y]=23,g[y+1|0]=0),Lt=r|s,m=e[49572];t:if(M)if((0|m)>994)r=0;else for(Mr=((-1610612736&q)==-2147483648)<<4,pt=Lt+1|0,Tr=t+8233|0,r=0,f=1,Be=0,Xt=1,de=-1,qe=-1,d=0;;){P=y+1|0;s:{if((0|(ye=255&M))!=255){if(s=e[144464+(ye<<2)>>2])break s;e[i>>2]=ye,pe=s=pe-16|0,e[s+12>>2]=i,Fi(132552,87474,i),pe=s+16|0,m=e[49572]}if(!(M=u[0|P]))break t;if(y=P,(0|m)<995)continue;break t}s:if((0|(ot=255&M))!=21)if((0|(y=u[s+11|0]))!=1){switch(s=pt,ot-12|0){case 8:g[3+(s=190288+((de=m-1|0)<<3)|0)|0]=f,I[s>>1]=4|B[s>>1],s=d;break s;case 0:I[(s=190280+(m<<3)|0)>>1]=8|B[s>>1],s=d;break s;case 10:q|=16384,e[i+412>>2]=q,s=d;break s;case 3:break s}ye=u[199388],g[199388]=0,g[7+(s=190288+(ot=m<<3)|0)|0]=0,g[s+2|0]=M,I[s+4>>1]=d,d=(ye?2:0)|Mr,I[s>>1]=d,(0|y)==2?((0|f)>=4&&(g[189076]=1),(0|de)<0||(0|(r=m-1|0))!=(0|de)&&(g[190291+(r<<3)|0]=f),I[s>>1]=4|d,Ar=(r=(0|f)>(0|qe))?m:Ar,qe=r?f:qe,d=1,Be&&(g[s+7|0]=Be),de=m,Be=0,r=f):(!Xt|!(64&u[0|Tr])||(I[s>>1]=8|d),d=f),m=m+1|0,e[49572]=m,g[ot+190291|0]=r,s=0,Xt=0,f=d}else{if(!B[s+8>>1]){f=u[s+14|0],s=d;break s}if((0|de)<0){s=d,Be=ye;break s}g[190295+(de<<3)|0]=M,s=d}else e[(s=190288+(m<<3)|0)>>2]=1376256,I[s+4>>1]=0,g[s+7|0]=u[y+1|0],e[49572]=m+1,gn(u[y+1|0]),P=y+2|0,m=e[49572],s=d;if(!(M=u[0|P]))break t;if(y=P,d=s,!((0|m)<995))break}else r=0;131072&o&&(s=m+1|0,e[49572]=s,f=u[199388],g[199388]=0,g[7+(d=190288+(m<<3)|0)|0]=0,I[d+2>>1]=27,I[d+4>>1]=0,I[d>>1]=f?2:0,m=s),Ft||(I[190292+(ae<<3)>>1]=Lt),e[t+8228>>2]=0,u[e[144464+(u[190282+(m<<3)|0]<<2)>>2]+11|0]!=2|(0|r)<4||(e[t+8228>>2]=1),(0|a)>=0&&(Hr(132848,i+16|0),gn(e[e[32972]+60>>2]),s=u[199388],g[199388]=0,a=e[49572],I[(r=190288+(a<<3)|0)>>1]=s?2:0,I[r+2>>1]=21,I[r+4>>1]=0,g[r+7|0]=e[e[32972]+60>>2],m=a+1|0,e[49572]=m),(0|Mt)>0&&(g[199388]=0,e[49572]=m+1,e[(r=190288+(m<<3)|0)>>2]=655362,s=e[47350],e[47350]=s+1,g[r+7|0]=0,I[r+4>>1]=0,e[198304+(s<<2)>>2]=Mt<<8|225),1024&q&&(I[(r=190288+(Ar<<3)|0)>>1]=64|B[r>>1]),e[t+8232>>2]=q}}return pe=i+416|0,q}function wn(t,r,s,a,i){var o=0,d=0,f=0,m=0,M=0,y=0,P=0,q=0,ae=0,de=0,ye=0,Be=0,qe=0,ot=0,pt=0,Mt=0,Ft=0,Lt=0,Xt=0,Ar=0,Mr=0,Tr=0,Yr=0,$r=0;e:if(r){if(qe=i<<4,d=(r=e[33268])+s|0,!((0|r)<=0||(o=u[0|(m=qe+129360|0)],P=u[m+1|0]-o<<8,P=(0|r)!=1?(0|P)/(0|r)|0:P,(0|s)>=(0|d))))for(q=P>>>0>255,ye=P>>>8|0,o<<=8,m=0-P>>>8|0,Mt=(0|P)<=0,r=s;Mt?(M=(y=(y=(0|(f=(0|(f=e[101024+(g[K(r,6)+t|0]<<2)>>2]))<(0|m)?m:f))>=18?18:f)+(f=(0|(f=(0|(o=o+P|0))/256|0))>0?f:0)|0)>>>0>=254?254:y,f=f>>>0>=254?254:f):(f=K(r,6)+t|0,g[f+2|0]=q|u[f+2|0],f=(y=(0|(f=(0|o)/256|0))>0?f:0)>>>0>=254?254:y,M=(y=y+ye|0)>>>0>=254?254:y,o=o+P|0),y=K(r,6)+t|0,g[y+5|0]=f,g[y+4|0]=M,(0|d)!=(0|(r=r+1|0)););if(2&u[188785]?(m=e[33271],e[33270]=m):m=e[33270],ye=(q=u[3+(o=129360+(r=i<<4)|0)|0])-(f=u[o+2|0])<<8,Mt=e[o+4>>2],(0|s)>0?(Lt=101056,ot=5,y=(0|ye)/(u[r+129368|0]-1|0)|0):(Lt=e[12+(r=r+129360|0)>>2],ot=u[r+10|0],y=0),(0|d)<(0|m)){for(P=(0|s)<=0,Be=((r=ye>>31)^ye)-r|0,ae=129360+(i<<4)|0,f<<=8,Ft=q<<8,q=0;;){t:{if(M=K(d,6)+t|0,!(!(1&P)&(0|(o=g[0|M]))<4)){s=0,r=d;s:if(1&((0|o)==5|P)){for(;(0|(y=g[K(r,6)+t|0]))<=6&&(s=((0|y)>3)+s|0,(0|m)!=(0|(r=r+1|0))););if(de=0,(0|(pt=(0|(r=u[ae+8|0]))>(0|s)?s:r))<2){y=0,q=f;break s}y=(0|ye)/(pt-1|0)|0,q=f}else(0|pt)>0?q=y+q|0:(q=Ft+(K(Be,g[de+Lt|0])>>6)|0,(0|ot)>(0|(de=de+1|0))||(Lt=e[ae+12>>2],de=0));if(pt=pt-1|0,!((0|o)<4)){g[0|M]=6,s=(r=(0|(r=(0|q)/256|0))>0?r:0)+(((s=(o=e[Mt+(o<<2)>>2])>>31)^o)-s|0)|0;break t}}(0|o)!=3?(r=(0|q)/256|0,(63&u[M-6|0])>>>0>=3?(s=(o=e[Mt+(o<<2)>>2])>>31,s=(r=(0|(r=r-g[ae+9|0]|0))>0?r:0)+((s^o)-s|0)|0):s=(r=(0|r)>0?r:0)+(((s=(o=e[Mt+(o<<2)>>2])>>31)^o)-s|0)|0):s=(r=(0|(r=(0|q)/256|0))>0?r:0)+(((s=(o=e[Mt+12>>2])>>31)^o)-s|0)|0}if(g[M+5|0]=r>>>0>=254?254:r,P=0,r=(0|s)>0?s:0,g[M+4|0]=r>>>0>=254?254:r,g[M+2|0]=u[M+2|0]|o>>>31,(0|m)==(0|(d=d+1|0)))break}d=m}if(!(u[133068]||((268435455&i)==3&&(r=K(d,6)+t|0,g[r+2|0]=2|u[r+2|0]),e[33269]?(r=u[5+(o=100768+(i<<4)|0)|0],f=o+3|0,s=u[o+4|0]-r|0):(r=u[2+(s=100768+(i<<4)|0)|0],f=qe+100768|0,s=u[s+1|0]-r|0),o=K(d,6)+t|0,g[o+5|0]=r>>>0>=254?254:r,g[o+2|0]=u[o+2|0]|s>>>31,r=(y=r)+(((r=s>>31)^s)-r|0)|0,g[o+4|0]=r>>>0>=254?254:r,s=K(m,6)+t|0,g[s+1|0]=u[0|f],r=d+1|0,u[0|s]==4&&(g[0|s]=6),(0|(s=a-r|0))<=0||(i=u[12+(d=100768+(i<<4)|0)|0],d=u[d+13|0]-i<<8,d=(0|s)!=1?(0|d)/(0|s)|0:d,(0|r)>=(0|a)))))for(y=d>>>0>255,P=d>>>8|0,s=i<<8,i=0-d>>>8|0,q=(0|d)<=0;q?(f=(m=(f=(0|(o=(0|i)>(0|(o=e[101024+(g[K(r,6)+t|0]<<2)>>2]))?i:o))>=18?18:o)+(o=(0|(o=(0|(s=s+d|0))/256|0))>0?o:0)|0)>>>0>=254?254:m,m=o>>>0>=254?254:o):(o=K(r,6)+t|0,g[o+2|0]=y|u[o+2|0],m=(o=(0|(o=(0|s)/256|0))>0?o:0)>>>0>=254?254:o,f=(o=o+P|0)>>>0>=254?254:o,s=s+d|0),o=K(r,6)+t|0,g[o+5|0]=m,g[o+4|0]=f,(0|a)!=(0|(r=r+1|0)););}else{if(r=(ot=e[34455])+K(i,68)|0,d=u[r+24|0],m=u[r+25|0],o=(r=e[33268])+s|0,!((0|r)<=0||(M=m-d<<8,M=(0|r)!=1?(0|M)/(0|r)|0:M,(0|s)>=(0|o))))for(y=M>>>0>255,P=M>>>8|0,r=d<<8,m=0-M>>>8|0,q=(0|M)<=0;q?(d=(d=(ye=(0|(d=(0|(d=e[101024+(g[K(s,6)+t|0]<<2)>>2]))<(0|m)?m:d))>=18?18:d)+(f=(0|(d=(0|(r=r+M|0))/256|0))>0?d:0)|0)>>>0>=254?254:d,f=f>>>0>=254?254:f):(d=K(s,6)+t|0,g[d+2|0]=y|u[d+2|0],f=(d=(0|(d=(0|r)/256|0))>0?d:0)>>>0>=254?254:d,d=(d=d+P|0)>>>0>=254?254:d,r=r+M|0),ye=K(s,6)+t|0,g[ye+5|0]=f,g[ye+4|0]=d,(0|o)!=(0|(s=s+1|0)););2&u[188785]?(s=e[33271],e[33270]=s):s=e[33270],m=s,r=ot+K(i,68)|0;t:if((0|(P=u[r+33|0]))!=255)for(;;){if((0|(m=m-1|0))<(0|o)){m=s;break t}if(!(g[K(m,6)+t|0]<4))break}if((0|s)>(0|o)){for(Tr=((d=(Ar=(q=u[r+32|0])-(M=u[0|(f=r+31|0)])<<8)>>31)^Ar)-d|0,Ft=(0|(r=u[0|(y=r+30|0)]))==255,ye=P<<8,Mt=M<<8,Yr=q<<8,qe=ot+K(i,68)|0,$r=(0|r)!=255,q=0,P=0,r=1,M=0;;){t:{if(ae=K(o,6)+t|0,!(!(1&r)&(0|(Be=g[0|ae]))<4)){s:if(1&((0|Be)==5|r)){n:if($r){if(Xt=1,r=0,d=y,!((0|m)<=(0|(M=o+1|0)))){for(;;){if(d=y,(0|(P=g[K(M,6)+t|0]))>6)break n;if(r=((0|P)>3)+r|0,(0|m)==(0|(M=M+1|0)))break}d=y}}else{if(r=0,M=o,d=f,(0|m)<=(0|o))break n;for(;;){if(d=f,(0|(P=g[K(M,6)+t|0]))>6)break n;if(r=((0|P)>3)+r|0,(0|m)==(0|(M=M+1|0)))break}d=f}if(P=u[0|d]<<8,Mr=0,(0|(M=(0|r)<(0|(d=u[qe+34|0]))?r:d))<2){Lt=0;break s}Lt=(0|Ar)/(M-1|0)|0}else(0|o)!=(0|m)?Xt?(Ft=1,M=M+1|0,Xt=0,P=Mt):(0|M)>0?(P=P+Lt|0,Xt=0):(Xt=0,P=(K(g[16+(qe+Mr|0)|0],Tr)>>6)+Yr|0,Mr=(0|(r=Mr+1|0))<u[qe+35|0]?r:0):(Ft=2,P=ye);if(M=M-1|0,!((0|Be)<4)){r=d=o+1|0;s:if(!((0|s)<=(0|o)))for(;;){if(g[K(r,6)+t|0]>1)break s;if(!((0|s)>=(0|(r=r+1|0))))break}g[0|ae]=6,g[ae+1|0]=u[qe+26|0],q=0,de=u[qe+27|0],o=(0|(o=(0|P)/256|0))>0?o:0,g[ae+5|0]=o>>>0>=254?254:o,o=o+de|0,g[ae+4|0]=o>>>0>=254?254:o,pt=r-d|0;break t}}if((0|Be)>=2){r=d=o+1|0;s:if(!((0|s)<=(0|o)))for(;;){if(g[K(r,6)+t|0]>1)break s;if(!((0|s)>=(0|(r=r+1|0))))break}q=0,o=(0|(o=(0|P)/256|0))>0?o:0,g[ae+5|0]=o>>>0>=254?254:o,de=e[100976+(Be<<2)>>2],g[ae+2|0]=u[ae+2|0]|de>>>31,o=(0|(o=(Be=o)+(((o=de>>31)^de)-o|0)|0))>0?o:0,g[ae+4|0]=o>>>0>=254?254:o,pt=r-d|0}else(0|pt)<=1?(de=g[36+(qe+Ft|0)|0],r=0):(de=g[36+(r=qe+Ft|0)|0],r=(g[r+39|0]-de|0)/(pt-1|0)|0),d=e[100976+(Be<<2)>>2],g[ae+2|0]=u[ae+2|0]|d>>>31,r=(0|(r=(((0|P)/256|0)+de|0)+K(r,q)|0))>0?r:0,g[ae+5|0]=r>>>0>=254?254:r,r=(0|(r=r+(((Be=d)^(d>>=31))-d|0)|0))>0?r:0,g[ae+4|0]=r>>>0>=254?254:r,q=q+1|0,d=o+1|0}if(r=0,(0|s)==(0|(o=d)))break}o=s}if(u[133068]||(d=K(o,6)+t|0,e[33269]?(f=ot+K(i,68)|0,r=u[f+47|0],m=u[f+46|0]-r|0,f=f+45|0):(f=ot+K(i,68)|0,r=u[f+44|0],m=u[f+43|0]-r|0,f=f+42|0),f=u[0|f],y=(((y=m>>31)^m)-y|0)+r|0,g[d+4|0]=y>>>0>=254?254:y,g[d+5|0]=r>>>0>=254?254:r,r=K(o,6)+t|0,g[r+2|0]=u[r+2|0]|m>>>31,s=K(s,6)+t|0,g[s+1|0]=f,r=o+1|0,u[0|s]==4&&(g[0|s]=6),(0|(s=a-r|0))<=0)||(d=ot+K(i,68)|0,i=u[d+48|0],d=u[d+49|0]-i<<8,d=(0|s)!=1?(0|d)/(0|s)|0:d,(0|r)>=(0|a)))break e;for(y=d>>>0>255,P=d>>>8|0,s=i<<8,i=0-d>>>8|0,q=(0|d)<=0;q?(f=(m=(f=(0|(o=(0|i)>(0|(o=e[101024+(g[K(r,6)+t|0]<<2)>>2]))?i:o))>=18?18:o)+(o=(0|(o=(0|(s=s+d|0))/256|0))>0?o:0)|0)>>>0>=254?254:m,m=o>>>0>=254?254:o):(o=K(r,6)+t|0,g[o+2|0]=y|u[o+2|0],m=(o=(0|(o=(0|s)/256|0))>0?o:0)>>>0>=254?254:o,f=(o=o+P|0)>>>0>=254?254:o,s=s+d|0),o=K(r,6)+t|0,g[o+5|0]=m,g[o+4|0]=f,(0|a)!=(0|(r=r+1|0)););}}function oa(){var t,r=0,s=0,a=0,i=0,o=0,d=0,f=0,m=0,M=0,y=0,P=0,q=0,ae=0,de=0,ye=0;if((0|(t=e[36455]))!=(0|(m=e[36454]))){e:if(!((0|(ae=e[36427]))<0|(0|m)==(0|ae))){s=P=e[8+(216192+((M=ae)<<4)|0)>>2];t:{for(;;){if((a=e[(d=216192+((M=(0|(a=M-1|0))<0?169:a)<<4)|0)>>2])-5>>>0<2)break t;s:{if((0|a)<=4){if(e[d+12>>2]!=(0|s))break t;if(a=B[d+4>>1],e[d+12>>2]=P,s=e[d+8>>2],16&(r=B[s>>1]))break s;for(ye=32&r?(K(a,12)>>>0)/10|0:a,i=0,a=s,f=0;;){r=B[s>>1];n:if(!(f>>>0<3&&8&r)){if(r=r<<16>>16,(0|(de=(y=I[2+((q=f<<1)+s|0)>>1])-(o=I[2+(q=P+q|0)>>1])|0))>(0|(y=(0|K(ye,(0|K(e[200944+(f<<2)>>2],(0|de)>0?y+(o<<1)|0:(y<<1)+o|0))/3e3|0))/256|0)))i||((0|r)<0?a=s:(a=0,r=(0|(r=e[44469]+1|0))<=169?r:0,e[44469]=r,(r=177888+(i=r<<6)|0)&&(a=B[s+4>>1]|B[s+6>>1]<<16,o=B[s>>1]|B[s+2>>1]<<16,I[r>>1]=o,I[r+2>>1]=o>>>16,I[r+4>>1]=a,I[r+6>>1]=a>>>16,a=B[s+60>>1]|B[s+62>>1]<<16,o=B[s+56>>1]|B[s+58>>1]<<16,I[r+56>>1]=o,I[r+58>>1]=o>>>16,I[r+60>>1]=a,I[r+62>>1]=a>>>16,a=B[s+52>>1]|B[s+54>>1]<<16,o=B[s+48>>1]|B[s+50>>1]<<16,I[r+48>>1]=o,I[r+50>>1]=o>>>16,I[r+52>>1]=a,I[r+54>>1]=a>>>16,a=B[s+44>>1]|B[s+46>>1]<<16,o=B[s+40>>1]|B[s+42>>1]<<16,I[r+40>>1]=o,I[r+42>>1]=o>>>16,I[r+44>>1]=a,I[r+46>>1]=a>>>16,a=B[s+36>>1]|B[s+38>>1]<<16,o=B[s+32>>1]|B[s+34>>1]<<16,I[r+32>>1]=o,I[r+34>>1]=o>>>16,I[r+36>>1]=a,I[r+38>>1]=a>>>16,a=B[s+28>>1]|B[s+30>>1]<<16,o=B[s+24>>1]|B[s+26>>1]<<16,I[r+24>>1]=o,I[r+26>>1]=o>>>16,I[r+28>>1]=a,I[r+30>>1]=a>>>16,a=B[s+20>>1]|B[s+22>>1]<<16,o=B[s+16>>1]|B[s+18>>1]<<16,I[r+16>>1]=o,I[r+18>>1]=o>>>16,I[r+20>>1]=a,I[r+22>>1]=a>>>16,a=B[s+12>>1]|B[s+14>>1]<<16,o=B[s+8>>1]|B[s+10>>1]<<16,I[r+8>>1]=o,I[r+10>>1]=o>>>16,I[r+12>>1]=a,I[r+14>>1]=a>>>16,g[i+177904|0]=0,I[r>>1]=32768|B[r>>1],a=r))),r=y+B[q+2>>1]|0;else{if((0-y|0)<=(0|de))break n;i||((0|r)<0?a=s:(a=0,r=(0|(r=e[44469]+1|0))<=169?r:0,e[44469]=r,(r=177888+(i=r<<6)|0)&&(a=B[s+4>>1]|B[s+6>>1]<<16,o=B[s>>1]|B[s+2>>1]<<16,I[r>>1]=o,I[r+2>>1]=o>>>16,I[r+4>>1]=a,I[r+6>>1]=a>>>16,a=B[s+60>>1]|B[s+62>>1]<<16,o=B[s+56>>1]|B[s+58>>1]<<16,I[r+56>>1]=o,I[r+58>>1]=o>>>16,I[r+60>>1]=a,I[r+62>>1]=a>>>16,a=B[s+52>>1]|B[s+54>>1]<<16,o=B[s+48>>1]|B[s+50>>1]<<16,I[r+48>>1]=o,I[r+50>>1]=o>>>16,I[r+52>>1]=a,I[r+54>>1]=a>>>16,a=B[s+44>>1]|B[s+46>>1]<<16,o=B[s+40>>1]|B[s+42>>1]<<16,I[r+40>>1]=o,I[r+42>>1]=o>>>16,I[r+44>>1]=a,I[r+46>>1]=a>>>16,a=B[s+36>>1]|B[s+38>>1]<<16,o=B[s+32>>1]|B[s+34>>1]<<16,I[r+32>>1]=o,I[r+34>>1]=o>>>16,I[r+36>>1]=a,I[r+38>>1]=a>>>16,a=B[s+28>>1]|B[s+30>>1]<<16,o=B[s+24>>1]|B[s+26>>1]<<16,I[r+24>>1]=o,I[r+26>>1]=o>>>16,I[r+28>>1]=a,I[r+30>>1]=a>>>16,a=B[s+20>>1]|B[s+22>>1]<<16,o=B[s+16>>1]|B[s+18>>1]<<16,I[r+16>>1]=o,I[r+18>>1]=o>>>16,I[r+20>>1]=a,I[r+22>>1]=a>>>16,a=B[s+12>>1]|B[s+14>>1]<<16,o=B[s+8>>1]|B[s+10>>1]<<16,I[r+8>>1]=o,I[r+10>>1]=o>>>16,I[r+12>>1]=a,I[r+14>>1]=a>>>16,g[i+177904|0]=0,I[r>>1]=32768|B[r>>1],a=r))),r=B[q+2>>1]-y|0}i=1,I[2+((f<<1)+a|0)>>1]=r,e[d+8>>2]=a}if((0|(f=f+1|0))==6)break}P=a}if((0|m)!=(0|M))continue;break t}break}P=s}for(a=0;;){if((s=e[(M=216192+(ae<<4)|0)>>2])-5>>>0<2)break e;if((0|s)<=4){if(s=e[M+8>>2],r=B[M+4>>1],a){if((0|s)!=(0|a))break e;e[M+8>>2]=P}else P=s;if(16&(a=B[P>>1]))break e;for(q=32&a?(K(r,6)>>>0)/5|0:r,i=0,s=a=e[M+12>>2],f=0;;){t:{s:if((0|(m=(d=I[2+((r=f<<1)+a|0)>>1])-(r=I[2+(y=r+P|0)>>1])|0))>(0|(d=(0|K(q,(0|K(e[200944+(f<<2)>>2],(0|m)>0?d+(r<<1)|0:(d<<1)+r|0))/3e3|0))/256|0))){if(!i){if(I[a>>1]<0){s=a,r=r+d|0;break s}s=(0|(s=e[44469]+1|0))<=169?s:0,e[44469]=s,i=B[a+20>>1]|B[a+22>>1]<<16,r=16+(s=177888+(s<<6)|0)|0,m=B[a+16>>1]|B[a+18>>1]<<16,I[r>>1]=m,I[r+2>>1]=m>>>16,I[r+4>>1]=i,I[r+6>>1]=i>>>16,r=B[a+4>>1]|B[a+6>>1]<<16,i=B[a>>1]|B[a+2>>1]<<16,I[s>>1]=i,I[s+2>>1]=i>>>16,I[s+4>>1]=r,I[s+6>>1]=r>>>16,r=B[a+12>>1]|B[a+14>>1]<<16,i=B[a+8>>1]|B[a+10>>1]<<16,I[s+8>>1]=i,I[s+10>>1]=i>>>16,I[s+12>>1]=r,I[s+14>>1]=r>>>16,r=B[a+28>>1]|B[a+30>>1]<<16,i=B[a+24>>1]|B[a+26>>1]<<16,I[s+24>>1]=i,I[s+26>>1]=i>>>16,I[s+28>>1]=r,I[s+30>>1]=r>>>16,r=B[a+36>>1]|B[a+38>>1]<<16,i=B[a+32>>1]|B[a+34>>1]<<16,I[s+32>>1]=i,I[s+34>>1]=i>>>16,I[s+36>>1]=r,I[s+38>>1]=r>>>16,r=B[a+44>>1]|B[a+46>>1]<<16,i=B[a+40>>1]|B[a+42>>1]<<16,I[s+40>>1]=i,I[s+42>>1]=i>>>16,I[s+44>>1]=r,I[s+46>>1]=r>>>16,r=B[a+52>>1]|B[a+54>>1]<<16,i=B[a+48>>1]|B[a+50>>1]<<16,I[s+48>>1]=i,I[s+50>>1]=i>>>16,I[s+52>>1]=r,I[s+54>>1]=r>>>16,r=B[a+60>>1]|B[a+62>>1]<<16,i=B[a+56>>1]|B[a+58>>1]<<16,I[s+56>>1]=i,I[s+58>>1]=i>>>16,I[s+60>>1]=r,I[s+62>>1]=r>>>16,g[s+16|0]=0,I[s>>1]=32768|B[s>>1],r=B[y+2>>1]}r=r+d|0}else{if((0|m)>=(0-d|0))break t;i||(I[a>>1]<0?s=a:(s=(0|(s=e[44469]+1|0))<=169?s:0,e[44469]=s,i=B[a+20>>1]|B[a+22>>1]<<16,r=16+(s=177888+(s<<6)|0)|0,m=B[a+16>>1]|B[a+18>>1]<<16,I[r>>1]=m,I[r+2>>1]=m>>>16,I[r+4>>1]=i,I[r+6>>1]=i>>>16,r=B[a+4>>1]|B[a+6>>1]<<16,i=B[a>>1]|B[a+2>>1]<<16,I[s>>1]=i,I[s+2>>1]=i>>>16,I[s+4>>1]=r,I[s+6>>1]=r>>>16,r=B[a+12>>1]|B[a+14>>1]<<16,i=B[a+8>>1]|B[a+10>>1]<<16,I[s+8>>1]=i,I[s+10>>1]=i>>>16,I[s+12>>1]=r,I[s+14>>1]=r>>>16,r=B[a+28>>1]|B[a+30>>1]<<16,i=B[a+24>>1]|B[a+26>>1]<<16,I[s+24>>1]=i,I[s+26>>1]=i>>>16,I[s+28>>1]=r,I[s+30>>1]=r>>>16,r=B[a+36>>1]|B[a+38>>1]<<16,i=B[a+32>>1]|B[a+34>>1]<<16,I[s+32>>1]=i,I[s+34>>1]=i>>>16,I[s+36>>1]=r,I[s+38>>1]=r>>>16,r=B[a+44>>1]|B[a+46>>1]<<16,i=B[a+40>>1]|B[a+42>>1]<<16,I[s+40>>1]=i,I[s+42>>1]=i>>>16,I[s+44>>1]=r,I[s+46>>1]=r>>>16,r=B[a+52>>1]|B[a+54>>1]<<16,i=B[a+48>>1]|B[a+50>>1]<<16,I[s+48>>1]=i,I[s+50>>1]=i>>>16,I[s+52>>1]=r,I[s+54>>1]=r>>>16,r=B[a+60>>1]|B[a+62>>1]<<16,i=B[a+56>>1]|B[a+58>>1]<<16,I[s+56>>1]=i,I[s+58>>1]=i>>>16,I[s+60>>1]=r,I[s+62>>1]=r>>>16,g[s+16|0]=0,I[s>>1]=32768|B[s>>1],r=B[y+2>>1])),r=r-d|0}i=1,I[2+((f<<1)+s|0)>>1]=r,e[M+12>>2]=s}if((0|(f=f+1|0))==6)break}P=s}if((0|t)==(0|(ae=(0|(s=ae+1|0))<=169?s:0)))break}}e[36454]=t}}function Ea(t,r){var s,a,i=0,o=0,d=0,f=0,m=0,M=0,y=0,P=0,q=0,ae=0,de=0,ye=0,Be=0,qe=0,ot=0,pt=0,Mt=0,Ft=0,Lt=0,Xt=0,Ar=0,Mr=0,Tr=0;pe=s=pe-48|0,oe(+t),o=0|R(1),i=0|R(0),a=o;e:{t:{s:{if((m=2147483647&o)>>>0<=1074752122){if((1048575&o)==598523)break s;if(m>>>0<=1073928572){if((0|a)>0|(0|a)>=0){f=(t+=-1.5707963267341256)+-6077100506506192e-26,G[r>>3]=f,G[r+8>>3]=t-f-6077100506506192e-26,o=1;break e}f=(t+=1.5707963267341256)+6077100506506192e-26,G[r>>3]=f,G[r+8>>3]=t-f+6077100506506192e-26,o=-1;break e}if((0|a)>0|(0|a)>=0){f=(t+=-3.1415926534682512)+-12154201013012384e-26,G[r>>3]=f,G[r+8>>3]=t-f-12154201013012384e-26,o=2;break e}f=(t+=3.1415926534682512)+12154201013012384e-26,G[r>>3]=f,G[r+8>>3]=t-f+12154201013012384e-26,o=-2;break e}if(m>>>0<=1075594811){if(m>>>0<=1075183036){if((0|m)==1074977148)break s;if((0|a)>0|(0|a)>=0){f=(t+=-4.712388980202377)+-18231301519518578e-26,G[r>>3]=f,G[r+8>>3]=t-f-18231301519518578e-26,o=3;break e}f=(t+=4.712388980202377)+18231301519518578e-26,G[r>>3]=f,G[r+8>>3]=t-f+18231301519518578e-26,o=-3;break e}if((0|m)==1075388923)break s;if((0|a)>0|(0|a)>=0){f=(t+=-6.2831853069365025)+-2430840202602477e-25,G[r>>3]=f,G[r+8>>3]=t-f-2430840202602477e-25,o=4;break e}f=(t+=6.2831853069365025)+2430840202602477e-25,G[r>>3]=f,G[r+8>>3]=t-f+2430840202602477e-25,o=-4;break e}if(m>>>0>1094263290)break t}i=(Mt=(f=t+-1.5707963267341256*(P=.6366197723675814*t+6755399441055744-6755399441055744))-(ae=6077100506506192e-26*P))<-.7853981633974483,o=ve(P)<2147483648?~~P:-2147483648,i?(o=o-1|0,ae=6077100506506192e-26*(P+=-1),f=t+-1.5707963267341256*P):Mt>.7853981633974483&&(o=o+1|0,ae=6077100506506192e-26*(P+=1),f=t+-1.5707963267341256*P),t=f-ae,G[r>>3]=t,oe(+t),i=0|R(1),R(0),((d=m>>>20|0)-(i>>>20&2047)|0)<17||(ae=f,t=(f-=t=6077100506303966e-26*P)-(ae=20222662487959506e-37*P-(ae-f-t)),G[r>>3]=t,oe(+t),i=0|R(1),R(0),(d-(i>>>20&2047)|0)<50||(ae=f,t=(f-=t=20222662487111665e-37*P)-(ae=84784276603689e-45*P-(ae-f-t)),G[r>>3]=t)),G[r+8>>3]=f-t-ae;break e}if(m>>>0>=2146435072)t-=t,G[r>>3]=t,G[r+8>>3]=t,o=0;else{for(Q(0,0|i),Q(1,1048575&a|1096810496),t=+J(),o=0,i=1;d=(s+16|0)+(o<<3)|0,f=+(0|(o=ve(t)<2147483648?~~t:-2147483648)),G[d>>3]=f,t=16777216*(t-f),o=1,d=i,i=0,d;);for(G[s+32>>3]=t,o=2;o=(i=o)-1|0,G[(s+16|0)+(i<<3)>>3]==0;);if(Ft=s+16|0,d=0,pe=M=pe-560|0,m=K(pt=(0|(m=((o=(m>>>20|0)-1046|0)-3|0)/24|0))>0?m:0,-24)+o|0,((de=e[28105])+(y=(qe=i+1|0)-1|0)|0)>=0)for(o=de+qe|0,i=pt-y|0;G[(M+320|0)+(d<<3)>>3]=(0|i)<0?0:+e[112432+(i<<2)>>2],i=i+1|0,(0|o)!=(0|(d=d+1|0)););for(Be=m-24|0,o=0,d=(0|de)>0?de:0,ye=(0|qe)<=0;;){if(ye)t=0;else for(q=o+y|0,i=0,t=0;t=G[(i<<3)+Ft>>3]*G[(M+320|0)+(q-i<<3)>>3]+t,(0|qe)!=(0|(i=i+1|0)););if(G[(o<<3)+M>>3]=t,i=(0|o)==(0|d),o=o+1|0,i)break}Mr=47-m|0,Lt=48-m|0,Tr=m-25|0,o=de;t:{for(;;){if(t=G[(o<<3)+M>>3],i=0,d=o,!(q=(0|o)<=0))for(;ye=(M+480|0)+(i<<2)|0,y=ve(f=5960464477539063e-23*t)<2147483648?~~f:-2147483648,y=ve(t=-16777216*(f=+(0|y))+t)<2147483648?~~t:-2147483648,e[ye>>2]=y,t=G[((d=d-1|0)<<3)+M>>3]+f,(0|o)!=(0|(i=i+1|0)););t=Li(t,Be),t+=-8*nt(.125*t),t-=+(0|(ye=ve(t)<2147483648?~~t:-2147483648));s:{n:{i:{if(Xt=(0|Be)<=0){if(Be)break i;y=e[476+((o<<2)+M|0)>>2]>>23}else ot=d=(o<<2)+M|0,d=(y=e[d+476>>2])-((i=y>>Lt)<<Lt)|0,e[ot+476>>2]=d,ye=i+ye|0,y=d>>Mr;if((0|y)<=0)break s;break n}if(y=2,!(t>=.5)){y=0;break s}}if(i=0,d=0,!q)for(;Ar=e[(ot=(M+480|0)+(i<<2)|0)>>2],q=16777215,d||(q=16777216,Ar)?(e[ot>>2]=q-Ar,d=1):d=0,(0|o)!=(0|(i=i+1|0)););n:if(!Xt){i=8388607;i:switch(0|Tr){case 1:i=4194303;break;case 0:break i;default:break n}e[476+(q=(o<<2)+M|0)>>2]=e[q+476>>2]&i}ye=ye+1|0,(0|y)==2&&(t=1-t,y=2,d&&(t-=Li(1,Be)))}if(t!=0)break;if(d=0,!((0|de)>=(0|(i=o)))){for(;d=e[(M+480|0)+((i=i-1|0)<<2)>>2]|d,(0|i)>(0|de););if(d){for(m=Be;m=m-24|0,!e[(M+480|0)+((o=o-1|0)<<2)>>2];);break t}}for(i=1;d=i,i=i+1|0,!e[(M+480|0)+(de-d<<2)>>2];);for(d=o+d|0;;){if(y=o+qe|0,o=o+1|0,G[(M+320|0)+(y<<3)>>3]=e[112432+(pt+o<<2)>>2],i=0,t=0,(0|qe)>0)for(;t=G[(i<<3)+Ft>>3]*G[(M+320|0)+(y-i<<3)>>3]+t,(0|qe)!=(0|(i=i+1|0)););if(G[(o<<3)+M>>3]=t,!((0|o)<(0|d)))break}o=d}(t=Li(t,24-m|0))>=16777216?(Be=(M+480|0)+(o<<2)|0,i=ve(f=5960464477539063e-23*t)<2147483648?~~f:-2147483648,d=ve(t=-16777216*+(0|i)+t)<2147483648?~~t:-2147483648,e[Be>>2]=d,o=o+1|0):(i=ve(t)<2147483648?~~t:-2147483648,m=Be),e[(M+480|0)+(o<<2)>>2]=i}if(t=Li(1,m),!((0|o)<0)){for(i=o;d=i,G[(i<<3)+M>>3]=t*+e[(M+480|0)+(i<<2)>>2],i=i-1|0,t*=5960464477539063e-23,d;);if(q=0,!((0|o)<0))for(m=(0|de)>0?de:0,d=o;;){for(Be=m>>>0<q>>>0?m:q,de=o-d|0,i=0,t=0;t=G[115200+(i<<3)>>3]*G[(i+d<<3)+M>>3]+t,qe=(0|i)!=(0|Be),i=i+1|0,qe;);if(G[(M+160|0)+(de<<3)>>3]=t,d=d-1|0,i=(0|o)!=(0|q),q=q+1|0,!i)break}}if(t=0,(0|o)>=0)for(i=o;d=i,i=i-1|0,t+=G[(M+160|0)+(d<<3)>>3],d;);if(G[s>>3]=y?-t:t,t=G[M+160>>3]-t,i=1,(0|o)>0)for(;t+=G[(M+160|0)+(i<<3)>>3],d=(0|i)!=(0|o),i=i+1|0,d;);G[s+8>>3]=y?-t:t,pe=M+560|0,o=7&ye,t=G[s>>3],(0|a)<0?(G[r>>3]=-t,G[r+8>>3]=-G[s+8>>3],o=0-o|0):(G[r>>3]=t,G[r+8>>3]=G[s+8>>3])}}return pe=s+48|0,o}function gr(){var t=0,r=0,s=0,a=0,i=0,o=0,d=0,f=0,m=0,M=0,y=0,P=0,q=0,ae=0,de=0,ye=0,Be=0,qe=0,ot=0,pt=0,Mt=0,Ft=0,Lt=0,Xt=0,Ar=0,Mr=0,Tr=0,Yr=0,$r=0,ls=0,Ts=0,Hs=0,$s=0,ga=0,fa=0,Pa=0,Fa=0,za=0,Ha=0,Ya=0,Ja=0,sn=0,vn=0,si=0,Ii=0,zi=0;e[55925]=0,t=e[56772],e[56772]=t+1,s=e[55961],q=e[55922],de=Uo(39.89822670059037*(r=+(0|t))),M=Uo(22.30530784048753*r),r=+(0|q)/50*(+(0|s)/100)*(Uo(14.765485471872028*r)+(de+M))*10,t=ve(r)<2147483648?~~r:-2147483648,e[56607]=t+e[56607];e:if(!(e[55923]<=0)){for(;;){for(s=ps(e[33209],0,1103515245,0),t=X,t=AA(s=s+12345|0,t=s>>>0<12345?t+1|0:t),e[33209]=t,t=8191+((t>>>0)%16383|0)|0,e[55929]=t,ls=+(0|t),r=.75*G[28387]+ls,G[28387]=r,Ts=(0|(t=e[55924]))>(0|(Lt=e[55928]))?.5*r:r,fa=(i=.033*+e[56652])>0?1-i:1,s=e[56650]<<2,Mr=(0|(Ar=e[55921]))==1&&(0|s)>263?263:s,Pa=111136+((Hs=e[56651])<<1)|0,Fa=111136+((Tr=e[56658])<<1)|0,za=(0|Tr)>0,$s=e[55918],Ha=K($s,40),Ya=e[55925],Ja=G[27967],ga=e[56607],r=G[27979],Be=G[27969],f=G[27970],Yr=e[56780],pt=e[56654],P=G[27976],ae=G[27972],qe=G[28388],ot=G[28389],q=e[55927],a=G[28383],y=e[55926],Mt=e[55956],sn=G[27975],M=G[28131],o=G[28130],d=G[28123],ye=G[28121],m=G[28122],Xt=G[28120],Ft=G[28119],vn=G[28129],si=G[28128],Ii=G[28127],zi=yn(0*G[27968]),$r=0;;){de=o;t:{s:switch(Ar-1|0){case 0:qe=0,o=ye*d,d=m,m=a=o+(Ft*(qe=(0|t)<=2?G[111312+(t<<3)>>3]:qe)+Xt*d);break t;case 1:if(a=0,(0|t)>=(0|q)){ot=0;break t}o=G[27965]-G[27966],G[27965]=o,a=.028*(ot=o+ot);break t;case 2:if(!y){Mt=100,a=0;break t}Mt=100,s=ve(o=+(0|t)/+(0|y)*100)<2147483648?~~o:-2147483648,a=+I[110928+((0|s)%100<<1)>>1],a=r*((+I[110928+((s+1|0)%100<<1)>>1]-a)*(o-+(0|s))+a);break t;case 3:break s;default:break t}y?(Mt=256,s=ve(o=+(0|t)/+(0|y)*256)<2147483648?~~o:-2147483648,a=+I[111344+((0|s)%256<<1)>>1],a=r*((+I[111344+((s+1|0)%256<<1)>>1]-a)*(o-+(0|s))+a)):(Mt=256,a=0)}if((0|t)>=(0|y)&&((0|ga)>0?(t=(0|Ha)/(0|ga)|0,P=0,ae=0,ae=Tr>>>0<=87?.001*+I[Fa>>1]:ae,P=Hs>>>0<=87?.001*+I[Pa>>1]*.1:P,Lt=t>>za,q=(0|(s=(y=(t-1|0)<=(0|Mr))?t-2|0:Mr))<=40?40:s,o=+I[111776+((q=y||(0|s)<40?q:Mr)<<1)>>1],G[27966]=o,ye=o,o=+(0|q),G[27965]=ye*o*.333,pt=(0|(s=t-q|0))>(0|pt)?pt:s,Yr=0-(s=(0|Yr)<0?0-pt|0:pt)|0,Ft=(o*=.00833)*o,Ft*=1-(Xt=(ye=(o=ys(Ja*+((0|$s)/(0|q)|0)))*zi)+ye)-(ye=o*-o),t=(0|(y=t+s|0))!=4):(e[55930]=0,e[55931]=0,e[55932]=0,e[55933]=0,Lt=4,P=0,ae=0,y=4,t=0),f=(t|=!Ya)?i:f,Be=t?fa:Be,t=0),t=t+1|0,o=a=vn*M+(Ii*a+si*de),M=de,(0|($r=$r+1|0))==4)break}if(e[55926]=y,e[55956]=Mt,e[55924]=t,G[28383]=a,e[55927]=q,G[28389]=ot,G[28388]=qe,G[27972]=ae,G[27976]=P,e[55928]=Lt,e[56654]=pt,e[56780]=Yr,G[27970]=f,G[27969]=Be,G[28122]=m,G[28120]=Xt,G[28119]=Ft,G[28123]=d,G[28121]=ye,G[28131]=M,G[28130]=a,(0|Ar)==5&&(a=6e3*((r=+(0|t)/+(0|y))+r+-1),G[28383]=a),r=a*Be+G[28384]*f,G[28383]=r,G[28384]=r,(0|t)<(0|q)&&(r=P*ls+r,G[28383]=r),f=Ts*G[27974],de=r*G[27973]+f,M=0,e[55916]!=2&&(M=G[27987],m=G[27986],G[27987]=m,r=f+r*ae,G[27986]=r,f=G[28059],d=G[28058],G[28059]=d,r=f*G[28057]+(G[28055]*(M*G[27985]+(G[27983]*r+m*G[27984]))+d*G[28056]),G[28058]=r,M=G[28049],f=G[28051],m=G[28048],d=G[28047],i=G[28050],G[28051]=i,r=M*f+(d*r+m*i),G[28050]=r,M=G[28043],f=G[28041],m=G[28040],d=G[28039],i=G[28042],G[28043]=i,r=f*M+(d*r+m*i),G[28042]=r,M=G[28035],f=G[28033],m=G[28032],d=G[28031],i=G[28034],G[28035]=i,r=f*M+(d*r+m*i),G[28034]=r,M=G[28027],f=G[28025],m=G[28024],d=G[28023],i=G[28026],G[28027]=i,r=f*M+(d*r+m*i),G[28026]=r,M=G[28019],f=G[28017],m=G[28016],d=G[28015],i=G[28018],G[28019]=i,r=f*M+(d*r+m*i),G[28018]=r,M=G[28011],f=G[28009],m=G[28008],d=G[28007],i=G[28010],G[28011]=i,r=f*M+(d*r+m*i),G[28010]=r,M=G[28003],f=G[28001],m=G[28e3],d=G[27999],i=G[28002],G[28003]=i,r=f*M+(d*r+m*i),G[28002]=r,M=G[27995],f=G[27993],m=G[27992],d=G[27991],i=G[27994],G[27995]=i,M=f*M+(d*r+m*i),G[27994]=M),r=G[28385],G[28385]=de,f=G[28075],m=G[28074],G[28075]=m,d=G[28067],i=G[28066],G[28067]=i,f=f*G[28073]+(G[28071]*de+m*G[28072]),G[28074]=f,m=d*G[28065]+(G[28063]*de+i*G[28064]),G[28066]=m,d=G[28081],i=G[28083],o=G[28079],a=G[28080],P=G[28082],G[28083]=P,de=d*i+(o*(r=sn*Ts+de-r)+a*P),G[28082]=de,d=G[28091],i=G[28089],o=G[28087],a=G[28088],P=G[28090],G[28091]=P,d=i*d+(o*r+a*P),G[28090]=d,i=G[28099],o=G[28097],a=G[28095],P=G[28096],ae=G[28098],G[28099]=ae,i=o*i+(a*r+P*ae),G[28098]=i,o=G[28107],a=G[28105],P=G[28103],ae=G[28104],Be=G[28106],G[28107]=Be,o=a*o+(P*r+ae*Be),G[28106]=o,a=G[28115],P=G[28113],ae=G[28111],Be=G[28112],qe=G[28114],G[28115]=qe,a=P*a+(ae*r+Be*qe),G[28114]=a,P=G[28139],ae=G[28137],Be=G[28136],qe=G[28135],ot=G[27971],ye=G[28138],G[28139]=ye,r=ae*P+(qe*(r*ot-(a-(o-(i-(d-(de-(M+f+m)))))))+Be*ye),G[28138]=r,r=G[27977]*(r*+e[50779]),a=+(0|(t=ve(r)<2147483648?~~r:-2147483648)),(0|(t=e[50776]))<e[50773]&&(y=t+1|0,s=e[50772],(q=e[50774])?(e[50776]=y,t=K(q,g[t+s|0])):(q=u[t+s|0],s=g[s+y|0],e[50776]=t+2,t=q|s<<8),a+=+((0|K(e[50775],(0|K(t,e[50780]))/1024|0))/40|0)),(0|(t=e[55962]))<=63&&(e[55962]=t+1,a=a*+(0|t)*.015625),(0|(t=e[55963]))<=0||(t=t-1|0,e[55963]=t,a=a*+(0|t)*.015625,t||(e[55962]=0)),s=(t=e[51293])+1|0,e[51293]=s,y=K(I[205184+(t<<1)>>1],e[50755])>>8,t=ve(a)<2147483648?~~a:-2147483648,(0|s)>=5500&&(e[51293]=0),s=e[51290],e[51290]=s+1,t=(0|(t=(0|(t=t+y|0))<=-32768?-32768:t))>=32767?32767:t,g[0|s]=t,s=e[51290],e[51290]=s+1,g[0|s]=t>>>8,y=(s=e[51292])+1|0,e[51292]=y,I[205184+(s<<1)>>1]=t,(0|y)>=5500&&(e[51292]=0),y=1,e[56606]=e[56606]+1,ue[54046]<e[51290]+2>>>0)break e;if(t=e[55925]+1|0,e[55925]=t,!((0|t)<e[55923]))break}y=0}return y}function Wr(t,r,s,a,i,o,d){var f,m,M,y=0,P=0,q=0,ae=0,de=0,ye=0,Be=0,qe=0,ot=0,pt=0,Mt=0,Ft=0,Lt=0,Xt=0,Ar=0,Mr=0,Tr=0;pe=f=pe-80|0,e[f+76>>2]=r,M=f+55|0,m=f+56|0;e:{t:{s:{n:{i:for(;;){if(q=r,(2147483647^qe)<(0|y))break n;qe=y+qe|0;c:{A:{d:{if(P=u[0|(y=q)])for(;;){l:{o:if(r=255&P){if((0|r)!=37)break l;for(P=y;;){if(u[P+1|0]!=37){r=P;break o}if(y=y+1|0,de=u[P+2|0],P=r=P+2|0,(0|de)!=37)break}}else r=y;if((0|(y=y-q|0))>(0|(Ar=2147483647^qe)))break n;if(t&&rn(t,q,y),y)continue i;e[f+76>>2]=r,y=r+1|0,ot=-1,u[r+2|0]!=36|g[r+1|0]-48>>>0>=10||(ot=g[r+1|0]-48|0,Ft=1,y=r+3|0),e[f+76>>2]=y,ye=0;o:if((r=(P=g[0|y])-32|0)>>>0>31)Be=y;else if(Be=y,75913&(r=1<<r))for(;;){if(Be=y+1|0,e[f+76>>2]=Be,ye|=r,(r=(P=g[y+1|0])-32|0)>>>0>=32)break o;if(y=Be,!(75913&(r=1<<r)))break}o:if((0|P)!=42){if((0|(pt=al(f+76|0)))<0)break n;P=e[f+76>>2]}else{if(u[Be+2|0]!=36|g[Be+1|0]-48>>>0>=10){if(Ft)break d;if(P=Be+1|0,!t){e[f+76>>2]=P,Ft=0,pt=0;break o}r=e[s>>2],e[s>>2]=r+4,Ft=0,r=e[r>>2]}else e[((g[Be+1|0]<<2)+i|0)-192>>2]=10,P=Be+3|0,Ft=1,r=e[((g[Be+1|0]<<3)+a|0)-384>>2];if(e[f+76>>2]=P,pt=r,(0|r)>=0)break o;pt=0-pt|0,ye|=8192}if(y=0,ae=-1,u[0|P]==46)if(u[P+1|0]!=42)e[f+76>>2]=P+1,ae=al(f+76|0),r=e[f+76>>2],Xt=1;else{if(u[P+3|0]!=36|g[P+2|0]-48>>>0>=10){if(Ft)break d;r=P+2|0,ae=0,t&&(P=e[s>>2],e[s>>2]=P+4,ae=e[P>>2])}else e[((g[P+2|0]<<2)+i|0)-192>>2]=10,r=P+4|0,ae=e[((g[P+2|0]<<3)+a|0)-384>>2];e[f+76>>2]=r,Xt=~ae>>>31|0}else r=P,Xt=0;for(;;){if(Mt=y,Be=28,de=r,(y=g[0|r])-123>>>0<4294967238)break s;if(r=de+1|0,!((y=u[123983+(y+K(Mt,58)|0)|0])-1>>>0<8))break}e[f+76>>2]=r;o:{p:{if((0|y)!=27){if(!y)break s;if((0|ot)>=0){e[(ot<<2)+i>>2]=y,y=e[4+(P=(ot<<3)+a|0)>>2],e[f+64>>2]=e[P>>2],e[f+68>>2]=y;break p}if(!t)break c;yr(f- -64|0,y,s,d);break o}if((0|ot)>=0)break s}if(y=0,!t)continue i}P=-65537&ye,ye=8192&ye?P:ye,ot=0,Lt=84065,Be=m;o:{p:{b:{m:{C:{h:{M:{I:{x:{N:{V:{W:{E:{_:{T:{switch(y=g[0|de],(y=Mt&&(15&y)==3?-33&y:y)-88|0){case 11:break o;case 9:case 13:case 14:case 15:break p;case 27:break M;case 12:case 17:break N;case 23:break V;case 0:case 32:break W;case 24:break E;case 22:break _;case 29:break T;case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 10:case 16:case 18:case 19:case 20:case 21:case 25:case 26:case 28:case 30:case 31:break A}switch(y-65|0){case 0:case 4:case 5:case 6:break p;case 2:break C;case 1:case 3:break A}if((0|y)==83)break h;break A}P=e[f+64>>2],de=e[f+68>>2],Lt=84065;break x}y=0;_:switch(255&Mt){case 0:case 1:case 6:e[e[f+64>>2]>>2]=qe;continue i;case 2:q=e[f+64>>2],e[q>>2]=qe,e[q+4>>2]=qe>>31;continue i;case 3:I[e[f+64>>2]>>1]=qe;continue i;case 4:g[e[f+64>>2]]=qe;continue i;case 7:break _;default:continue i}q=e[f+64>>2],e[q>>2]=qe,e[q+4>>2]=qe>>31;continue i}ae=ae>>>0<=8?8:ae,ye|=8,y=120}if(q=m,Mr=32&y,(P=e[f+64>>2])|(de=e[f+68>>2]))for(;g[0|(q=q-1|0)]=Mr|u[124512+(15&P)|0],Tr=!de&P>>>0>15|!!(0|de),Mt=de,de=de>>>4|0,P=(15&Mt)<<28|P>>>4,Tr;);if(!(e[f+64>>2]|e[f+68>>2])|!(8&ye))break I;Lt=84065+(y>>>4|0)|0,ot=2;break I}if(y=m,de=q=e[f+68>>2],q|(P=e[f+64>>2]))for(;g[0|(y=y-1|0)]=7&P|48,Mt=!de&P>>>0>7|!!(0|de),de=(q=de)>>>3|0,P=(7&q)<<29|P>>>3,Mt;);if(q=y,!(8&ye))break I;ae=(0|(y=m-q|0))<(0|ae)?ae:y+1|0;break I}P=e[f+64>>2],de=y=e[f+68>>2],(0|y)<0?(de=q=0-(de+!!(0|P)|0)|0,P=0-P|0,e[f+64>>2]=P,e[f+68>>2]=q,ot=1,Lt=84065):2048&ye?(ot=1,Lt=84066):Lt=(ot=1&ye)?84067:84065}q=Ti(P,de,m)}if((0|ae)<0&&Xt)break n;if(ye=Xt?-65537&ye:ye,!(ae|!!((y=e[f+64>>2])|(P=e[f+68>>2])))){q=m,ae=0;break A}ae=(0|(y=!(y|P)+(m-q|0)|0))<(0|ae)?ae:y;break A}if(Be=(y=(y=lo(q=(y=e[f+64>>2])||84639,0,de=ae>>>0>=2147483647?2147483647:ae))?y-q|0:de)+q|0,(0|ae)>=0){ye=P,ae=y;break A}if(ye=P,ae=y,u[0|Be])break n;break A}if(ae){P=e[f+64>>2];break m}y=0,mn(t,32,pt,0,ye);break b}e[f+12>>2]=0,e[f+8>>2]=e[f+64>>2],P=f+8|0,e[f+64>>2]=P,ae=-1}y=0;m:{for(;;){if(!(q=e[P>>2]))break m;if(!((q=(0|(de=kA(f+4|0,q)))<0)|de>>>0>ae-y>>>0)){if(P=P+4|0,ae>>>0>(y=y+de|0)>>>0)continue;break m}break}if(q)break t}if(Be=61,(0|y)<0)break s;if(mn(t,32,pt,y,ye),y)for(Be=0,P=e[f+64>>2];;){if(!(q=e[P>>2])||(Be=(q=kA(f+4|0,q))+Be|0)>>>0>y>>>0)break b;if(rn(t,f+4|0,q),P=P+4|0,!(y>>>0>Be>>>0))break}else y=0}mn(t,32,pt,y,8192^ye),y=(0|y)<(0|pt)?pt:y;continue i}if((0|ae)<0&&Xt)break n;if(Be=61,(0|(y=0|os[0|o](t,G[f+64>>3],pt,ae,ye,y)))>=0)continue i;break s}g[f+55|0]=e[f+64>>2],ae=1,q=M,ye=P;break A}P=u[y+1|0],y=y+1|0}if(t)break e;if(!Ft)break c;for(y=1;;){if(t=e[(y<<2)+i>>2]){if(yr((y<<3)+a|0,t,s,d),qe=1,(0|(y=y+1|0))!=10)continue;break e}break}if(qe=1,y>>>0>=10)break e;for(;;){if(e[(y<<2)+i>>2])break d;if((0|(y=y+1|0))==10)break}break e}Be=28;break s}if((0|(P=(0|ae)>(0|(de=Be-q|0))?ae:de))>(2147483647^ot))break n;if(Be=61,(0|Ar)<(0|(y=(0|(ae=P+ot|0))<(0|pt)?pt:ae)))break s;mn(t,32,y,ae,ye),rn(t,Lt,ot),mn(t,48,y,ae,65536^ye),mn(t,48,P,de,0),rn(t,q,de),mn(t,32,y,ae,8192^ye);continue}break}qe=0;break e}Be=61}e[56798]=Be}qe=-1}return pe=f+80|0,qe}function vr(t,r,s,a,i,o,d,f,m){var M,y,P,q=0,ae=0,de=0,ye=0,Be=0,qe=0,ot=0,pt=0,Mt=0,Ft=0,Lt=0,Xt=0,Ar=0,Mr=0,Tr=0,Yr=0,$r=0,ls=0,Ts=0,Hs=0,$s=0,ga=0,fa=0,Pa=0,Fa=0,za=0,Ha=0,Ya=0,Ja=0,sn=0,vn=0;pe=M=pe-96|0,Lt=65535&m,Be=-2147483648&(i^m),Yr=ot=65535&i;e:{if(!((y=m>>>16&32767)-32767>>>0>4294934529&(P=i>>>16&32767)-32767>>>0>=4294934530)){if(q=a,!(!a&(0|(pt=Mt=2147483647&i))==2147418112?!(r|s):pt>>>0<2147418112)){de=a,Be=32768|i;break e}if(!(!(i=f)&(0|(qe=Mt=2147483647&m))==2147418112?!(o|d):qe>>>0<2147418112)){de=f,Be=32768|m,r=o,s=d;break e}if(!(r|q|2147418112^pt|s)){if(!(i|o|d|qe)){Be=2147450880,r=0,s=0;break e}Be|=2147418112,r=0,s=0;break e}if(!(i|o|2147418112^qe|d)){if(i=r|q,a=s|pt,r=0,s=0,!(a|i)){Be=2147450880;break e}Be|=2147418112;break e}if(!(r|q|s|pt)){r=0,s=0;break e}if(!(i|o|d|qe)){r=0,s=0;break e}(0|pt)==65535|pt>>>0<65535&&(Mt=(q=!(a|ot))<<6,i=Re(m=q?r:a)+32|0,Sa(M+80|0,r,s,a,ot,(m=Mt+((0|(m=Re(q?s:ot)))==32?i:m)|0)-15|0),Ft=16-m|0,a=e[M+88>>2],Yr=e[M+92>>2],s=e[M+84>>2],r=e[M+80>>2]),qe>>>0>65535||(ot=(m=!(f|Lt))<<6,q=Re(i=m?o:f)+32|0,Sa(M- -64|0,o,d,f,Lt,(i=ot+((0|(i=Re(m?d:Lt)))==32?q:i)|0)-15|0),Ft=16+(Ft-i|0)|0,f=e[M+72>>2],Lt=e[M+76>>2],o=e[M+64>>2],d=e[M+68>>2])}if(i=o,o=d<<15|o>>>17,za=s,Mt=ps(Xt=-32768&(m=i<<15),i=0,s,0),Tr=i=X,Ha=o,pt=r,r=ps(o,0,r,0),o=X+i|0,s=r>>>0>(m=r+Mt|0)>>>0?o+1|0:o,q=0,r=ps(pt,ae,Xt,ae),i=(o=m)+X|0,ot=i=r>>>0>(qe=q+r|0)>>>0?i+1|0:i,Ya=(0|o)==(0|i)&q>>>0>qe>>>0|i>>>0<o>>>0,Ja=a,Ar=ps(Xt,ae,a,0),sn=X,r=ps(za,ae,Ha,ae),q=X+sn|0,q=r>>>0>(Mr=r+Ar|0)>>>0?q+1|0:q,r=Lt<<15|f>>>17,a=ps($r=f<<15|d>>>17,0,pt,ae),o=X+q|0,Ts=o=a>>>0>(ls=a+Mr|0)>>>0?o+1|0:o,o=(a=(0|s)==(0|Tr)&m>>>0<Mt>>>0|s>>>0<Tr>>>0)+o|0,Lt=o=s>>>0>(Hs=s+ls|0)>>>0?o+1|0:o,d=Hs,s=o,Yr=ps(Xt,ae,$s=65536|Yr,ye),vn=X,a=ps(Ja,de,Ha,ae),i=X+vn|0,m=i=a>>>0>(ga=a+Yr|0)>>>0?i+1|0:i,r=ps(fa=-2147483648|r,0,pt,ae),o=X+i|0,o=r>>>0>(Pa=r+ga|0)>>>0?o+1|0:o,r=ps($r,de,za,ae),Fa=o,o=o+X|0,Mt=r>>>0>(Tr=r+Pa|0)>>>0?o+1|0:o,i=s+Tr|0,o=Xt=(r=0)>>>0>(pt=r+d|0)>>>0?i+1|0:i,s=(r=pt+Ya|0)>>>0<pt>>>0?o+1|0:o,Ft=((P+y|0)+Ft|0)-16383|0,a=ps(fa,de,za,ae),f=X,i=ps($s,de,Ha,ae),o=X+f|0,ye=(0|f)==(0|(o=i>>>0>(d=i+a|0)>>>0?o+1|0:o))&a>>>0>d>>>0|o>>>0<f>>>0,f=o,i=ps($r,de,Ja,de),o=X+o|0,i=o=(a=i+d|0)>>>0<i>>>0?o+1|0:o,d=(0|o)==(0|f)&a>>>0<d>>>0|o>>>0<f>>>0,o=0,o=(f=d)>>>0>(d=d+ye|0)>>>0?1:o,f=d,d=ps(fa,de,$s,de),o=X+o|0,Ya=f=f+d|0,d=d>>>0>f>>>0?o+1|0:o,f=a,ae=i,i=(0|q)==(0|sn)&Ar>>>0>Mr>>>0|q>>>0<sn>>>0,o=0,i=((ye=q=(0|q)==(0|Ts)&Mr>>>0>ls>>>0|q>>>0>Ts>>>0)>>>0>(q=i+q|0)>>>0?1:o)+ae|0,o=d,ye=i=(a=a+q|0)>>>0<q>>>0?i+1|0:i,Ar=a,i=a=(0|i)==(0|ae)&a>>>0<f>>>0|i>>>0<ae>>>0,q=a=a+Ya|0,d=o=i>>>0>a>>>0?o+1|0:o,i=ps($r,de,$s,de),ae=X,a=ps(fa,de,Ja,de),o=X+ae|0,a=o=a>>>0>(f=a+i|0)>>>0?o+1|0:o,i=(o=(0|ae)==(0|o)&i>>>0>f>>>0|o>>>0<ae>>>0)+d|0,d=i=a>>>0>(Mr=a+q|0)>>>0?i+1|0:i,o=f+ye|0,i=o=(a=(i=0)+Ar|0)>>>0<i>>>0?o+1|0:o,f=(0|ye)==(0|o)&a>>>0<Ar>>>0|o>>>0<ye>>>0,o=d,o=(d=f+(ae=Mr)|0)>>>0<f>>>0?o+1|0:o,Ar=d,f=a,q=i,i=(a=(a=(a=(0|m)==(0|vn)&Yr>>>0>ga>>>0|m>>>0<vn>>>0)+(m=(0|m)==(0|Fa)&ga>>>0>Pa>>>0|m>>>0>Fa>>>0)|0)+(i=(0|Mt)==(0|Fa)&Tr>>>0<Pa>>>0|Mt>>>0<Fa>>>0)|0)+q|0,o=d=o,q=d=(f=(0|(i=(a=m=(ye=Mt)+f|0)>>>0<ye>>>0?i+1|0:i))==(0|q)&f>>>0>a>>>0|i>>>0<q>>>0)+Ar|0,d=o=f>>>0>d>>>0?o+1|0:o,f=a,o=0,m=i,i=i+((ae=ye=(0|Lt)==(0|Xt)&pt>>>0<Hs>>>0|Lt>>>0>Xt>>>0)>>>0>(ye=ye+((0|Lt)==(0|Ts)&ls>>>0>Hs>>>0|Lt>>>0<Ts>>>0)|0)>>>0?1:o)|0,o=d,m=o=(d=f=(0|(i=(a=a+ye|0)>>>0<ye>>>0?i+1|0:i))==(0|m)&a>>>0<f>>>0|i>>>0<m>>>0)>>>0>(f=f+q|0)>>>0?o+1|0:o,65536&o?Ft=Ft+1|0:(q=ot>>>31|0,o=m<<1|f>>>31,f=f<<1|i>>>31,m=o,o=i<<1|a>>>31,a=a<<1|s>>>31,i=o,o=ot<<1|qe>>>31,qe<<=1,ot=o,o=s<<1|r>>>31,r=r<<1|q,s=o|(d=0)),(0|Ft)>=32767)Be|=2147418112,r=0,s=0;else{t:{if((0|Ft)<=0){if((d=1-Ft|0)>>>0<=127){Sa(M+48|0,qe,ot,r,s,o=Ft+127|0),Sa(M+32|0,a,i,f,m,o),cs(M+16|0,qe,ot,r,s,d),cs(M,a,i,f,m,d),qe=e[M+32>>2]|e[M+16>>2]|!!(e[M+48>>2]|e[M+56>>2]|e[M+52>>2]|e[M+60>>2]),ot=e[M+36>>2]|e[M+20>>2],r=e[M+40>>2]|e[M+24>>2],s=e[M+44>>2]|e[M+28>>2],a=e[M>>2],i=e[M+4>>2],d=e[M+8>>2],o=e[M+12>>2];break t}r=0,s=0;break e}d=f,o=65535&m|Ft<<16}de|=d,Be|=o,(!r&(0|s)==-2147483648?!(qe|ot):(0|s)>0|(0|s)>=0)?r|qe|-2147483648^s|ot?(r=a,s=i):(q=Be,Be=(a=(0|(o=i))==(0|(s=(s=r=1&a)>>>0>(r=r+a|0)>>>0?o+1|0:o))&r>>>0<a>>>0|s>>>0<o>>>0)>>>0>(de=a+de|0)>>>0?q+1|0:q):(a=(0|i)==(0|(s=(r=a+1|0)?i:i+1|0))&r>>>0<a>>>0|s>>>0<i>>>0,i=Be,Be=(de=a+de|0)>>>0<a>>>0?i+1|0:i)}}e[t>>2]=r,e[t+4>>2]=s,e[t+8>>2]=de,e[t+12>>2]=Be,pe=M+96|0}function Es(t,r,s,a,i,o,d){var f,m=0,M=0,y=0,P=0,q=0,ae=0,de=0,ye=0,Be=0,qe=0,ot=0,pt=0,Mt=0,Ft=0,Lt=0;pe=f=pe-480|0,e[f+476>>2]=0,e[f+456>>2]=0,e[f+460>>2]=0,e[f+448>>2]=0,e[f+452>>2]=0,e[f+440>>2]=0,e[f+444>>2]=0,e[f+432>>2]=0,e[f+436>>2]=0,m=0;e:if(e[t+684>>2]){for(de=d?e[d>>2]:de;y=u[r+m|0],g[(f+112|0)+m|0]=y,M=m+1|0,y&&(y=m>>>0<158,m=M,y););if(g[M+(f+112|0)|0]=0,!((qe=268435456&o)|!(8&e[47197]))){M=0;t:if(223&(y=u[0|r]))for(m=0;;){if(g[(f+272|0)+m|0]=y,!(223&(y=u[(M=m+1|0)+r|0])))break t;if(P=m>>>0<118,m=M,!P)break}g[(m=f+272|0)+M|0]=0,e[f+48>>2]=m,ba(e[47195],(0|o)>=0?87019:86877,f+48|0)}e[f+464>>2]=r,e[t+8208>>2]=0,e[t+8212>>2]=0,i&&(g[0|i]=0);t:{s:if(223&(m=u[0|r]))for(ot=536870912&o,pt=4096&o,Mt=f+105|0,M=r,y=0;;){P=Ir(f+476|0,M),Be=!!(0|aa(e[f+476>>2]))+Be|0,ae=u[7668+(m=(q=255&m)+t|0)|0];n:if(!((ye=e[f+476>>2])-48>>>0<10|ye-2406>>>0<10)|(Be?u[t+170|0]:0)){i:if((y=e[f+476>>2]-e[t+600>>2]|0)>>>0>127||!(y=e[6192+((y<<2)+t|0)>>2])){if(ae){for(ye=5168+((q<<2)+t|0)|0,ae=ae+(m=u[m+7924|0])|0,Ft=q|u[M+1|0]<<8,y=0;e[7184+(M=(m<<2)+t|0)>>2]==(0|Ft)&&(e[f+472>>2]=e[f+464>>2],sr(t,f+472|0,r,2,e[M+6704>>2],f+432|0,o,de),(0|(M=e[f+432>>2]))>0&&(M=M+35|0,e[f+432>>2]=M),y=1,sr(t,f+464|0,r,1,e[ye>>2],f+448|0,o,de),e[f+448>>2]>(0|M)||(M=e[f+444>>2],e[f+456>>2]=e[f+440>>2],e[f+460>>2]=M,M=e[f+436>>2],e[f+448>>2]=e[f+432>>2],e[f+452>>2]=M,e[f+464>>2]=e[f+472>>2])),ae>>>0>(m=m+1|0)>>>0;);if(y)break i}c:{A:{if(!(m=e[5168+((q<<2)+t|0)>>2])){if(sr(t,f+464|0,r,0,e[t+5168>>2],f+448|0,o,de),e[f+448>>2])break c;if(16&u[188808])break A;if(y=Ir(f+468|0,q=(M=e[f+464>>2])-1|0),m=e[f+468>>2],!(e[t+600>>2]<=0|(0|m)>577)){if(zo(m)){e[f+32>>2]=21,Br(s,87049,f+32|0);break t}m=e[f+468>>2]}if((0|m)==57384&&((0|(ae=e[t+92>>2]))<=e[47352]||(e[47352]=ae)),ho(m)&&((0|(m=e[t+72>>2]))<=e[47352]||(e[47352]=m)),!((ae=(m=e[f+468>>2])-192|0)>>>0>413)&&(ae=u[ae+94240|0])&&(y=y-1|0,!(u[M-2|0]==32&u[y+M|0]==32))){for(e[f+472>>2]=q,g[0|q]=ae;P=u[(m=M)+y|0],g[0|m]=P,M=m+1|0,(0|P)!=32;);if((0|y)>0&&wr(m,32,y),e[t+24>>2]&&!((0|DA(94222,e[f+468>>2]))<=0)){e[f+464>>2]=q,y=0;break n}y=0,g[0|s]=0,e[f+464>>2]=r,e[t+8208>>2]=0,e[t+8212>>2]=0;break n}if(!(m=Gn(m))||(0|(M=e[m+4>>2]))==e[t+600>>2])break A;if((0|M)==e[t+188>>2]){e[f+4>>2]=Al(f- -64|0,e[t+192>>2]),e[f>>2]=21,Br(s,87218,f);break t}if(!(4&u[m+16|0]))break A;e[f+20>>2]=Al(f- -64|0,e[m+12>>2]),e[f+16>>2]=21,Br(s,87218,f+16|0);break t}if(sr(t,f+464|0,r,1,m,f+448|0,o,de),e[f+448>>2])break c}A:if(!((m=e[f+476>>2])-768>>>0<112)){if(aa(m)){if(g[(P+e[f+464>>2]|0)-1|0]<33&(0|Be)<=1)break A;if(g[0|s]=0,!d)break s;e[d>>2]=4096|e[d>>2];break s}Gr(t,e[f+476>>2],-1,f+272|0,0),u[f+272|0]&&(e[f+448>>2]=1,e[f+452>>2]=f+272)}e[f+464>>2]=(P+e[f+464>>2]|0)-1;break i}e[t+288>>2]=0}else sr(t,f+464|0,r,P,y,f+448|0,o,de);if(M=(m=e[f+452>>2])||86135,e[f+452>>2]=M,y=0,!(e[f+448>>2]<=0)){if(m=1|e[f+456>>2],(0|o)<0)break e;if(!(u[0|M]!=21|pt)){Hr(s,M);break t}if(!(!(8&e[47197])|qe))i:if(m=e[47195],(0|(P=e[m+76>>2]))>=0&(!P|e[56823]!=(-1073741825&P)))q=e[(P=m+76|0)>>2],e[P>>2]=q||1073741823,e[m+80>>2]==10||(0|(q=e[m+20>>2]))==e[m+16>>2]?tl(m):(e[m+20>>2]=q+1,g[0|q]=10),e[P>>2]=0;else{if(e[m+80>>2]!=10&&(0|(P=e[m+20>>2]))!=e[m+16>>2]){e[m+20>>2]=P+1,g[0|P]=10;break i}tl(m)}if(P=-32769&(m=e[f+456>>2]),e[f+456>>2]=P,!(!i|!P|(1024&m?ot:0))){t=e[f+464>>2],Hr(i,M),m=P|(Lt=(s=t)-ds(r,t=f+112|0,zr(t))|0,(1151&m)==1024?Lt:0);break e}(m=e[f+460>>2])&&(g[0|m]=69),Un(t,s,a,M)}}else g[f+104|0]=95,ds(Mt,M,P),m=1,g[105+(f+P|0)|0]=0,Nr(t,f+104|0,f- -64|0),y-1>>>0<=4294967293&&(m=zr(m=f- -64|0)+m|0,g[0|m]=11,g[m+1|0]=0,m=0),Un(t,s,a,f- -64|0),e[f+464>>2]=M+P,y=m;if(M=e[f+464>>2],!(223&(m=u[0|M])))break}ds(r,t=f+112|0,zr(t))}m=0}return pe=f+480|0,m}function pn(t,r){var s,a=0,i=0,o=0,d=0,f=0,m=0,M=0,y=0,P=0,q=0,ae=0,de=0,ye=0,Be=0,qe=0,ot=0,pt=0,Mt=0,Ft=0,Lt=0,Xt=0,Ar=0;pe=s=pe-2976|0,e[r>>2]=1,a=e[t+20>>2],e[(f=s+2960|0)>>2]=e[t+16>>2],e[f+4>>2]=a,a=e[t+12>>2],e[(f=s+2952|0)>>2]=e[t+8>>2],e[f+4>>2]=a,a=e[t+4>>2],e[s+2944>>2]=e[t>>2],e[s+2948>>2]=a,e[50303]||_r();e:if(t=e[s+2948>>2],u[0|t]&&t||((t=e[s+2944>>2])||(t=(t=e[s+2952>>2])||85055,e[s+2944>>2]=t),na(a=s+80|0,t,60),Eo(a,0),!(o=Rs(201216,a))||(e[s+2948>>2]=e[o+4>>2]+1,u[s+2958|0]|u[s+2956|0]|u[s+2957|0]))){Be=s+1536|0,pe=de=pe-336|0;t:if(!(!(t=e[4+(ye=s+2944|0)>>2])|!u[0|t])){if((0|(qe=zr(t)))>=0){for(a=qe>>>0>=79?79:qe,y=1;t=Fs(g[e[ye+4>>2]+i|0]),g[(de+256|0)+i|0]=t,y=((255&t)==45)+y|0,t=(0|a)!=(0|i),i=i+1|0,t;);if((0|y)!=1)break t}y=1}if((0|(P=e[50303]))<=0)e[Be>>2]=0,t=0;else{for(f=(0|y)>=0;;){M=e[201216+(Mt<<2)>>2];t:if(En(e[M+8>>2],88032,3)){if((t=e[ye+4>>2])&&En(t,91687,3)){if(f){t=100;s:if(y){if(a=0,i=e[M+4>>2],!(ot=u[0|i])){if(!En(de+256|0,90013,9))break s;break t}for(;;){for(Ft=1,m=i+1|0,pt=1,Lt=0,i=0;(0|i)<(0|qe)&&(0|(t=g[(de+256|0)+i|0]))!=45||(t=0),Lt=((q=(0|(ae=u[i+m|0]))==45)&!!(0|(pt=(q?0:ae)<<24>>24==(0|t)?pt:0)))+Lt|0,i=i+1|0,Ft=q+Ft|0,ae;);if(i=i+m|0,(q=pt+Lt|0)&&(a=(0|(t=K((m=(0|(t=y-q|0))<=0?5:5-t|0)-((0|(t=Ft-q|0))>0?t:0)|0,100)-(ot<<24>>24<<1)|0))>(0|a)?t:a),!(ot=u[0|i]))break}if(!(t=a))break t}(a=e[ye>>2])&&(t=Ta(a,e[M>>2])?Ta(a,e[M+8>>2])?t:t+400|0:t+500|0),((i=u[ye+12|0])-1&255)>>>0>1||((a=u[M+12|0])-1&255)>>>0>1||(t=(0|a)!=(0|i)?t-50|0:t+50|0),i=u[ye+13|0],t=u[M+12|0]!=2|i>>>0>12?t:u[M+13|0]>12?t+5|0:t,(a=u[M+13|0])&&((a=((i?K(i,100):3e3)>>>0)/(a>>>0)|0)>>>0<=99&&(a=1e4/(a>>>0)|0),t=(m=t)+((t=5-(((a-100&65535)>>>0)/10|0)|0)>>31&t)|0,t=i?t+10|0:t),t=(0|t)<=1?1:t}else{if(En(e[M+8>>2],de+256|0,qe))break t;t=100}e[Be+(d<<2)>>2]=M,e[M+16>>2]=t}else e[Be+(d<<2)>>2]=M;d=d+1|0}if((0|P)==(0|(Mt=Mt+1|0)))break}e[Be+(d<<2)>>2]=0,t=0,d&&(pi(Be,d,8),t=d)}if(pe=de+336|0,y=t,t||(e[r>>2]=0,t=Rs(201216,85055),e[s+1536>>2]=t,y=!!(0|t)),r=u[s+2957|0],f=2,(0|(t=u[s+2956|0]))!=2&&(f=2,(r-1&255)>>>0<12||(Ar=(0|t)!=1,f=(0|t)==1)),P=(d=e[132136+(f<<2)>>2])+(ae=r>>>0<60)|0,t=0,(0|y)>0)for(a=0;;){o=e[(s+1536|0)+(Xt<<2)>>2];t:{s:{n:{if(Ar){if(ae||(r=0,a))break s}else{if(r=u[o+12|0],a|ae)break n;r=(0|r)!=(0|f)}if(i=0,r|u[o+13|0]<60)break t;break s}if((0|r)!=(0|f)){i=a;break t}}e[(s+80|0)+(a<<2)>>2]=o,i=a+1|0}t:if(u[o+15|0]){if(q=0,r=t,a=i,!((0|t)>11))for(;;){if((i=u[0|P])||(P=d,i=u[0|d]),t=e[o+12>>2],m=K(r,24)+202624|0,e[m+8>>2]=e[o+8>>2],e[m+12>>2]=t,t=e[o+4>>2],e[m>>2]=e[o>>2],e[m+4>>2]=t,t=e[o+20>>2],e[m+16>>2]=e[o+16>>2],e[m+20>>2]=t,g[m+14|0]=i,e[(s+80|0)+(a<<2)>>2]=m,P=P+1|0,a=a+1|0,t=r+1|0,(q=q+1|0)>>>0>=u[o+15|0])break t;if(i=(0|r)<11,r=t,!i)break}}else a=i;if((0|(Xt=Xt+1|0))==(0|y))break}else{if(!o)break e;a=0}t:if(!(!(i=u[0|P])|(0|t)>=12))for(;;){if(r=e[o+12>>2],d=K(t,24)+202624|0,e[d+8>>2]=e[o+8>>2],e[d+12>>2]=r,r=e[o+4>>2],e[d>>2]=e[o>>2],e[d+4>>2]=r,r=e[o+20>>2],e[d+16>>2]=e[o+16>>2],e[d+20>>2]=r,g[d+14|0]=i,e[(s+80|0)+(a<<2)>>2]=d,a=a+1|0,!(i=u[0|(P=P+1|0)]))break t;if(r=(0|t)<11,t=t+1|0,!r)break}a?(t=e[(s+80|0)+(u[s+2958|0]%(0|a)<<2)>>2],(r=u[t+14|0])?(g[202976]=0,e[s+48>>2]=47,Br(s+2971|0,91351,s+48|0),g[s+2971|0]=0,r>>>0<=9?(e[s+20>>2]=r,e[s+16>>2]=s+2971,Br(202976,91378,s+16|0)):(e[s+36>>2]=r-10,e[s+32>>2]=s+2971,Br(202976,91503,s+32|0)),t=e[t+8>>2],e[s+4>>2]=202976,e[s>>2]=t,t=202912,Br(202912,87760,s)):t=e[t+8>>2]):t=0}else{if(t=e[o+8>>2],!u[202976])break e;e[s+64>>2]=t,e[s+68>>2]=202976,t=202912,Br(202912,87760,s- -64|0)}return pe=s+2976|0,t}function Ba(t,r,s,a,i){var o,d,f=0,m=0,M=0,y=0,P=0,q=0,ae=0;pe=o=pe-464|0,g[o+432|0]=0,g[o+368|0]=0,g[o+304|0]=0,g[o+292|0]=0,P=(0|r)/10|0,f=e[33273];e:{if(!(d=2&a)|e[33272]!=2){ae=32&a?113:111,y=1&a,q=r-K(P,10)|0;t:{s:{n:{i:{c:{A:{d:{l:if(u[0|f])f=0;else{o:{if(8&a){if(e[o+288>>2]=r,Br(m=o+452|0,91198,o+288|0),f=Nr(t,m,o+304|0)){m=0;break l}e[o+272>>2]=r,Br(m=o+452|0,91314,o+272|0),f=Nr(t,m,o+304|0),m=0}else{if(!y)break o;if(M=Hr(o+432|0,133104),4&a){if(e[o+260>>2]=ae,e[o+256>>2]=r,Br(m=o+452|0,91324,o+256|0),f=Nr(t,m,o+304|0),u[133116]&&f)break d;if(m=f,f)break l}e[o+244>>2]=ae,e[o+240>>2]=r,Br(m=o+452|0,91384,o+240|0),m=f=Nr(t,m,o+304|0)}if(f)break l}o:{if(d){if(!(1&g[133096]))break o;e[o+208>>2]=r,Br(f=o+452|0,91498,o+208|0),f=Nr(t,f,o+304|0)}else M=e[t+108>>2],e[o+224>>2]=r,Br(f=o+452|0,(0|s)>=2?91700:(262144&M)>>>18|0?91534:91700,o+224|0),f=Nr(t,f,o+304|0);if(f)break l}!y|!(32&u[t+109|0])?(e[o+192>>2]=r,Br(f=o+452|0,91766,o+192|0),f=Nr(t,f,o+304|0)):f=0}if(!(16&a)|(0|r)>9)break c;f=m;break A}if(Hr(M,133116),!(16&a)|(0|r)>9)break i}Nr(t,88875,o+368|0);break s}if(!f)break n;f=m}g[o+368|0]=0;break s}n:if(y&&(e[o+180>>2]=ae,e[o+176>>2]=P,Br(f=o+452|0,91846,o+176|0),Nr(t,f,o+368|0))){if(m=1,!q|!(16&u[t+109|0]))break n;Ca(o+368|0,133104)}else m||(e[o+160>>2]=P,Br(m=o+452|0,512&a?91936:92016,o+160|0),Nr(t,m,o+368|0),m=0);if(f=q,u[o+368|0]||(f=q,16&u[t+106|0]&&(e[o+144>>2]=254&P,Br(f=o+452|0,92016,o+144|0),Nr(t,f,o+368|0),f=(0|r)%20|0)),g[o+304|0]=0,P=f,(0|f)<=0)f=m;else{if(d&&(f=e[33273],u[0|f])){Hr(o+304|0,f),g[o+432|0]=0,M=y;break t}if(M=0,8&a&&(e[o+128>>2]=P,Br(a=o+452|0,91314,o+128|0),M=Nr(t,a,o+304|0)),!y|16&u[t+104|0]||(e[o+116>>2]=ae,e[o+112>>2]=P,Br(a=o+452|0,91384,o+112|0),m=(M=Nr(t,a,o+304|0))?1:m),f=m,!M){n:{if(!d|!(1&e[33274])){if(!(16&u[t+104|0])&&d)break n;m=e[t+108>>2],e[o+96>>2]=P,Br(a=o+452|0,(0|s)>=2?91700:(262144&m)>>>18|0?91534:91700,o+96|0),s=Nr(t,a,o+304|0)}else e[o+80>>2]=P,Br(s=o+452|0,91498,o+80|0),s=Nr(t,s,o+304|0);if(s)break s}e[o+64>>2]=P,Br(s=o+452|0,91766,o- -64|0),Nr(t,s,o+304|0)}}}M=y,u[o+432|0]|f|!y||((0|r)<20|(16&u[t+104|0]?0:q)||(Nr(t,92162,o+432|0),M=1,!u[o+432|0]))&&(Nr(t,92205,o+432|0),M=1)}if(!(!(s=g[o+304|0])|!(48&(r=e[t+104>>2]))|!u[o+368|0])){if(Nr(t,90824,o+292|0),!M|!(8&u[t+109|0])||(g[o+292|0]=0),16&u[t+104|0]){e[o+28>>2]=o+432,e[o+24>>2]=o+368,e[o+20>>2]=o+292,e[o+16>>2]=o+304,Br(i,91059,o+16|0),a=1;break e}e[o+12>>2]=o+432,e[o+8>>2]=o+304,e[o+4>>2]=o+292,e[o>>2]=o+368,Br(i,91059,o),a=1;break e}512&r&&(!s|(0|(r=zr(o+368|0)-1|0))<0||(f=u[e[144464+(g[0|(r=r+(o+368|0)|0)]<<2)>>2]+11|0]!=2,(0|(a=u[e[144464+(s<<2)>>2]+11|0]))==1&&(a=u[e[144464+(g[o+305|0]<<2)>>2]+11|0]),f|(255&a)!=2||(g[0|r]=0))),!(8&u[t+110|0])|!u[o+432|0]?(e[o+56>>2]=o+432,e[o+52>>2]=o+304,e[o+48>>2]=o+368,Br(i,92282,o+48|0)):(e[o+36>>2]=o+304,e[o+32>>2]=o+368,(0|(r=Br(i,90368,o+32|0)))>0&&(r=u[e[144464+(u[(s=r-1|0)+i|0]<<2)>>2]+11|0]==2?s:r),Hr(r+i|0,o+432|0))}else Hr(i,f);a=0}e:if(268435456&(t=e[t+104>>2])){if((0|zr(i))<=0)break e;for(r=0,t=0;u[0|(s=t+i|0)]==6&&(r&&(g[0|s]=5),r=1),t=t+1|0,(0|zr(i))>(0|t););}else if(256&t&&(r=0,!((0|(t=(y=zr(i))-1|0))<0))){if(t)for(q=-2&y,f=0;u[0|(m=t+i|0)]==6?(s=1,r&&(g[0|m]=5)):s=r,u[0|(m=m-1|0)]==6?(r=1,s&&(g[0|m]=5)):r=s,t=t-2|0,(0|q)!=(0|(f=f+2|0)););1&y&&(!r|u[0|(t=t+i|0)]!=6||(g[0|t]=5))}return pe=o+464|0,a}function In(t,r,s,a){var i,o,d=0,f=0,m=0,M=0,y=0,P=0,q=0;if(pe=i=pe-352|0,g[i+304|0]=0,g[i+224|0]=0,g[i+64|0]=0,m=e[e[47192]+292>>2],q=Ir(i+348|0,r),(1048320&(d=e[i+348>>2]))==57344&&(d&=255,e[i+348>>2]=d),2&a&&Pi(d)&&Nr(t,85437,i+304|0),d=No(e[i+348>>2],t),e[i+348>>2]=d,P=1&a,Gr(t,d,g[0|(o=r+q|0)],i+224|0,P),!(r=u[i+224|0])){e:if((r=ol(e[i+348>>2]))&&(e[i+348>>2]=16383&r,4&a)){switch(1073741823&(r>>=14)){case 0:case 3:break e}Nr(t,r=e[131232+(r<<2)>>2],i+304|0),u[i+304|0]||(g[i+306|0]=mo(84744),y=r,r=i+304|3,Nr(e[47194],y,r),u[i+307|0]&&(I[i+304>>1]=5385,r=zr(r)+(i+304|0)|0,g[r+5|0]=0,g[r+4|0]=m,g[r+3|0]=21))}Gr(t,e[i+348>>2],g[0|o],i+224|0,P),r=u[i+224|0]}e:{t:{if(r&=255){if((0|r)!=21)break t;Hr(s,i+224|0),q=0;break e}if(r=1632,!((0|(d=e[i+348>>2]))<1632)){for(M=103360;;){if((0|d)>=(r+10|0)){if(!(r=e[(M=M+4|0)>>2]))break t;if((0|r)<=(0|d))continue;break t}break}(0|(r=48+(d-r|0)|0))<=0||Gr(t,r,0,i+224|0,P)}}t:{s:{n:{i:{if(r=Gn(e[i+348>>2])){if(d=e[r+4>>2],!r|1&(M=e[r+16>>2])||(f=e[47192],e[f+600>>2]==(0|d)|e[f+188>>2]==(0|d)|e[f+184>>2]==(0|d)||(g[i+144|0]=0,Nr(f,e[r>>2],i- -64|0)?(0|(f=e[47192]))!=(0|t)&&(m=e[t+292>>2],Hr(i+144|0,i- -64|0),g[i+66|0]=e[f+292>>2]):(g[i+66|0]=mo(84744),Nr(e[47194],e[r>>2],i+144|0)),u[i+144|0]&&(I[i+64>>1]=5385,Hr(3|(f=i- -64|0),y=i+144|0),f=zr(y)+f|0,g[f+5|0]=0,g[f+4|0]=m,g[f+3|0]=21))),u[i+224|0])break t;if(!d||(m=e[47192],e[m+188>>2]!=(0|d)))break i;r=e[m+192>>2];break s}if(u[i+224|0])break t;M=0,d=0;break n}if((r=e[r+12>>2])&&!(2&M))break s}r=25966}if((e[t+212>>2]==(0|r)&(0|r)!=27503||(g[i+226|0]=mo(Al(i+47|0,r)),(r=e[47194])&&((0|(m=e[i+348>>2]))>55215||(0|(f=m-44032|0))<0?Gr(r,m,g[0|o],i+224|3,P):(g[i+52|0]=32,r=y=i+53|0,m-50500>>>0>=588&&(r=ia(4352+((f>>>0)/588|0)|0,y)+y|0),ia(4449+(((m=(f>>>0)/28|0)>>>0)%21|0)|0,r),ia(4519+(f-K(m,28)|0)|0,r+3|0),g[r+6|0]=32,g[r+7|0]=0,g[i+227|0]=0,r=i+224|3,Es(e[47194],y,r,77,0,0,0),ns(e[47194],r,0,-1,0)),r=i+224|3,u[i+227|0]==21&&(g[i+226|0]=mo(i+224|4),Gr(e[47194],e[i+348>>2],g[0|o],r,P)),gn(e[e[32972]+60>>2]),u[i+227|0]&&(I[i+224>>1]=5385,r=zr(r)+(i+224|0)|0,g[r+3|0]=21,P=e[t+292>>2],g[r+5|0]=0,g[r+4|0]=P)),!u[i+224|0]))&&(16&M||(Di(e[i+348>>2])&&Nr(e[47192],85683,i+224|0),u[i+224|0]||(La(e[i+348>>2])||Nr(e[47192],85778,i+224|0),u[i+224|0]||Vn(85992,i+224|0,0))),!(8&M)||4&a)){if(r=e[i+348>>2],(0|d)!=10240?(e[i+32>>2]=r,Br(i+52|0,86013,i+32|0)):(d=i+52|0,1&r&&(g[i+52|0]=49,d=i+53|0),2&r&&(g[0|d]=50,d=d+1|0),4&r&&(g[0|d]=51,d=d+1|0,r=e[i+348>>2]),8&r&&(g[0|d]=52,d=d+1|0,r=e[i+348>>2]),16&r&&(g[0|d]=53,d=d+1|0,r=e[i+348>>2]),32&r&&(g[0|d]=54,d=d+1|0,r=e[i+348>>2]),64&r&&(g[0|d]=55,d=d+1|0,r=e[i+348>>2]),128&r&&(g[0|d]=56,d=d+1|0),g[0|d]=0),r=i+224|0,M=u[i+52|0])for(d=i+52|0;r=zr(r)+r|0,g[0|r]=23,r=r+1|0,Gr(e[47192],M<<24>>24,0,r,1),(a=u[0|r])&&(0|a)!=21||(0|(a=g[0|d]))<97||Vn(e[130860+((255&a)<<2)>>2],r,0),M=u[0|(d=d+1|0)];);r=zr(r)+r|0,g[0|r]=9,g[r+1|0]=0}}r=zr(s),2&u[t+144|0]?(e[i+16>>2]=255,e[i+28>>2]=i+304,e[i+24>>2]=i+224,e[i+20>>2]=i- -64,Br(i+144|0,86210,i+16|0)):(e[i>>2]=255,e[i+12>>2]=i+224,e[i+8>>2]=i+304,e[i+4>>2]=i- -64,Br(i+144|0,86210,i)),zr(i+144|0)+r>>>0>199||Hr(r+s|0,i+144|0)}return pe=i+352|0,q}function ln(t,r,s,a,i,o,d){var f,m=0,M=0,y=0,P=0,q=0,ae=0,de=0,ye=0,Be=0,qe=0,ot=0,pt=0,Mt=0,Ft=0,Lt=0,Xt=0,Ar=0,Mr=0,Tr=0,Yr=0,$r=0,ls=0;pe=f=pe-528|0,qe=d?e[d>>2]:0,Xt=e[i+4>>2];e:{t:{if(e[t+220>>2]>0){na(M=f+352|0,r,160),pe=ae=pe-176|0,ye=1-(de=e[t+220>>2])|0,Be=e[t+224>>2],ot=e[t+216>>2],P=M;s:{n:{for(;;){if(pt=Ir(ae+172|0,P),m=e[ae+172>>2]){if((0|m)<(0|de)|(0|m)>(0|ot))break n;if(Be){if((0|(m=g[Be+(m-de|0)|0]))<=0)break n}else m=m+ye|0;if(P=P+pt|0,g[q+ae|0]=m,m=160,(0|(q=q+1|0))!=160)continue}else m=q;break}if(Be=0,g[m+ae|0]=0,ye=g[0|ae],e[ae+172>>2]=ye,ye){for(Ar=2+(ot-de|0)|0,de=m=ae;;){ot=m+1|0;i:{if((pt=e[t+8180>>2])&&(q=0,!((0|(P=I[pt>>1]))>(0|(Ft=(g[0|ot]<<8)+ye|0)))))for(;;){if((0|P)==(0|Ft)){ye=q+Ar|0,e[ae+172>>2]=ye,m=m+2|0;break i}if(!((0|Ft)>=(0|(P=I[pt+((q=q+1|0)<<1)>>1]))))break}m=ot}if(Mt=63&ye|Mt<<6,(0|(q=Be+6|0))<8?Be=q:(Be=Be-2|0,g[0|de]=Mt>>Be,de=de+1|0),ye=g[0|m],e[ae+172>>2]=ye,!ye)break}(0|Be)<=0||(g[0|de]=Mt<<8-Be,de=de+1|0)}else de=ae;g[0|de]=0,ds(M,ae,m=de-ae|0),de=64|m;break s}de=zr(M)}pe=ae+176|0,ae=M}else de=zr(r),ae=r;if(M=u[0|ae]){for(m=0,q=ae;y=1023&(y=(y<<3)+M|0)^y>>>8,m=m+1|0,M=u[0|(q=q+1|0)];);m=m+y&1023}else m=0;if(y=e[692+((m<<2)+t|0)>>2]){if(m=u[0|y])break t;m=0;break e}if(m=0,!i)break e;e[i>>2]=0;break e}for(pt=1073741824&Xt,Ft=2048&o,Xt=512&qe,Ar=65536&qe,Mr=1&qe,Tr=2&qe,qe=8&o,Yr=1024&o,ot=4&o,$r=63&de,ls=t+8233|0;;){o=(255&m)+y|0;t:{s:if((127&(m=u[y+1|0]))==(0|de)&&!En(ae,y+2|0,$r)){y=2+((63&m)+y|0)|0;n:{if(m<<24>>24<0)Be=0,g[0|a]=0;else{if((0|(Be=zr(y)))>=160)break n;Hr(a,y),y=1+(y+Be|0)|0}if(M=0,o>>>0<=y>>>0)m=s,P=0;else{q=0,P=0;i:{for(;;){y=(m=y)+1|0;c:if((m=u[0|m])>>>0>=100){if(ye=e[t+320>>2],m>>>0>=132){q|=ye>>>m-132&1;break c}q|=!(ye>>>m-100&1)}else{if(m>>>0>=81){ye=m-80|0,Mt=o-y|0;A:if(d)for(m=0;;){if(Lt=K(m,12)+d|0,!u[Lt+10|0])break A;if(q=!!(12&u[Lt+1|0])|q,Lt=(0|m)!=(0|ye),m=m+1|0,!Lt)break}if(sl(s,y,Mt)|1&q)break s;e[33264]=ye,m=s+Mt|0,P|=128,y=o;break i}m>>>0>=65?(P=15&m|-16&P,P=12&~m?P:512|P):m>>>0>=32?M|=1<<m-32:P|=1<<m}if(!(o>>>0>y>>>0))break}if(m=s,1&q)break t}if(65536&M&&!ot||Yr&&49152&M)break t}if(ot&&(16384&M||!qe&&32768&M)||(Tr?0:512&M)|(Mr?0:1024&M)|(Ar?0:33554432&P)||!(!(131072&M)|ue[e[47192]+8204>>2]<=m>>>0|pt)|(Xt?0:262144&M)|(8&u[e[47192]+8242|0]?0:8192&M)||16&M&&(!e[t+8184>>2]&(!qe|!e[t+8192>>2])||!(!qe|e[t+212>>2]!=25966)&&2097152&e[t+8232>>2])||(e[t+8188>>2]?0:64&M)|(!e[t+8196>>2]|Ft?32&M:0)||!(!(65536&P)|e[t+212>>2]!=26741|128&u[0|ls])|(e[47192]!=(0|t)?524288&M:0))break t;i:{c:{A:{if(!i){if(!Be)break A;break i}if(e[i+4>>2]=M,e[i>>2]=1073741824|P,Be)break c}if(m=0,!(8&u[188788]))break e;yA(i,t=f+272|0),e[f>>2]=r,e[f+4>>2]=t,ba(e[47195],89330,f);break e}e[i>>2]=-1073741824|P}if(8&u[188788]&&(Lr(a,f- -64|0),u[e[47192]+172|0]==(P>>>29&1)&&(!d|!(128&P)?(e[f+48>>2]=r,ba(e[47195],89426,f+48|0)):(ds(t=f+352|0,a=s,s=m-s|0),g[351+(s+f|0)|0]=0,e[f+32>>2]=r,e[f+36>>2]=t,ba(e[47195],89397,f+32|0)),yA(i,t=f+272|0),r=e[47195],e[f+16>>2]=f- -64,e[f+20>>2]=t,ba(r,89534,f+16|0))),u[Ir(f- -64|0,ae)+ae|0]|!i||aa(e[f+64>>2]))break e;e[i>>2]=134217728|e[i>>2];break e}Me(89236,86634,2467,94846),be()}y=o}if(!(m=u[0|y]))break}m=0}return pe=f+528|0,m}function hn(t,r,s,a,i){var o,d=0,f=0;pe=o=pe-304|0,g[o+278|0]=0;e:{if((0|r)>0&&(1&a&&(2&a&&(e[o+164>>2]=s,e[o+160>>2]=r,Br(d=o+290|0,89701,o+160|0),d=Nr(t,d,o+224|0))||1&g[133096]&&(e[o+148>>2]=s,e[o+144>>2]=r,Br(d=o+290|0,89757,o+144|0),d=Nr(t,d,o+224|0))||(e[o+132>>2]=s,e[o+128>>2]=r,Br(d=o+290|0,89894,o+128|0),d=Nr(t,d,o+224|0)))||(e[o+116>>2]=s,e[o+112>>2]=r,Br(d=o+290|0,89974,o+112|0),d=Nr(t,d,o+224|0))))break e;if((0|(f=(0|r)%100|0))>=20&&Nr(t,90022,o+278|0),1&a){if(2&a){d=f-11|0;t:{s:{n:switch((448&e[e[47192]+108>>2])-64>>>6|0){case 0:if(d>>>0<9)break s;if(a=90418,(0|(d=(0|r)%10|0))==1)break t;if(d-2>>>0>=3)break s;a=90453;break t;case 1:if(r-2>>>0>=3)break s;a=90453;break t;case 2:if(d>>>0<9|((0|r)%10|0)-2>>>0>=3)break s;a=90453;break t;case 3:if(a=90508,d>>>0<9)break t;a=(a=(0|r)%10|0)?(0|a)==1?90453:90586:90508;break t;case 4:break n;default:break s}if(!(d>>>0<9)){if(a=90537,(0|(d=(0|r)%10|0))==1)break t;if(!(d-2>>>0>=3)){a=90453;break t}}}a=90586}if(e[o+100>>2]=s,e[o+96>>2]=a,Br(a=o+290|0,90058,o+96|0),d=0,Nr(t,a,o+224|0))break e}if(a=f-11|0,1&g[133096]){t:{s:{n:switch((448&e[e[47192]+108>>2])-64>>>6|0){case 0:if(a>>>0<9)break s;if(d=90418,(0|(f=(0|r)%10|0))==1)break t;if(f-2>>>0>=3)break s;d=90453;break t;case 1:if(r-2>>>0>=3)break s;d=90453;break t;case 2:if(a>>>0<9|((0|r)%10|0)-2>>>0>=3)break s;d=90453;break t;case 3:if(d=90508,a>>>0<9)break t;d=(d=(0|r)%10|0)?(0|d)==1?90453:90586:90508;break t;case 4:break n;default:break s}if(!(a>>>0<9)){if(d=90537,(0|(f=(0|r)%10|0))==1)break t;if(!(f-2>>>0>=3)){d=90453;break t}}}d=90586}if(e[o+84>>2]=s,e[o+80>>2]=d,Br(f=o+290|0,90110,o+80|0),d=0,Nr(t,f,o+224|0))break e}t:{s:{n:switch((448&e[e[47192]+108>>2])-64>>>6|0){case 0:if(a>>>0<9)break s;if(d=90418,(0|(f=(0|r)%10|0))==1)break t;if(f-2>>>0>=3)break s;d=90453;break t;case 1:if(r-2>>>0>=3)break s;d=90453;break t;case 2:if(a>>>0<9|((0|r)%10|0)-2>>>0>=3)break s;d=90453;break t;case 3:if(d=90508,a>>>0<9)break t;d=(d=(0|r)%10|0)?(0|d)==1?90453:90586:90508;break t;case 4:break n;default:break s}if(!(a>>>0<9)){if(d=90537,(0|(f=(0|r)%10|0))==1)break t;if(!(f-2>>>0>=3)){d=90453;break t}}}d=90586}if(e[o+68>>2]=s,e[o+64>>2]=d,Br(f=o+290|0,90139,o- -64|0),d=0,Nr(t,f,o+224|0))break e}else a=f-11|0;t:{s:{n:switch((448&e[e[47192]+108>>2])-64>>>6|0){case 0:if(a>>>0<9)break s;if(d=90418,(0|(a=(0|r)%10|0))==1)break t;if(a-2>>>0>=3)break s;d=90453;break t;case 1:if(r-2>>>0>=3)break s;d=90453;break t;case 2:if(a>>>0<9|((0|r)%10|0)-2>>>0>=3)break s;d=90453;break t;case 3:if(d=90508,a>>>0<9)break t;d=(a=(0|r)%10|0)?(0|a)==1?90453:90586:90508;break t;case 4:break n;default:break s}if(!(a>>>0<9)){if(d=90537,(0|(a=(0|r)%10|0))==1)break t;if(!(a-2>>>0>=3)){d=90453;break t}}}d=90586}e[o+52>>2]=s,e[o+48>>2]=d,Br(a=o+290|0,90218,o+48|0),d=0,Nr(t,a,o+224|0)||((0|s)<4||(e[o+32>>2]=s-1,Br(a=o+290|0,89026,o+32|0),Nr(t,a,o+176|0)||(Nr(t,90273,o+224|0),e[33275]=3)),u[o+224|0]||(e[o+16>>2]=r,Br(a=o+290|0,90303,o+16|0),(d=Nr(t,a,o+224|0))||Nr(t,90347,o+224|0),e[33275]=2))}return e[o+4>>2]=o+224,e[o>>2]=o+278,Br(i,90368,o),pe=o+304|0,!((0|r)!=1|(0|s)!=1)&&(r=1,32&u[t+106|0])||(r=d),r}function kn(t,r,s,a){var i,o=0,d=0,f=0,m=0,M=0,y=0,P=0;pe=i=pe+-64|0,I[i+48>>1]=0,e[i+40>>2]=0,e[i+44>>2]=0,e[i+32>>2]=0,e[i+36>>2]=0,e[i+24>>2]=0,e[i+28>>2]=0,e[i+16>>2]=0,e[i+20>>2]=0,e[i+8>>2]=0,e[i+12>>2]=0,e[i>>2]=0,e[i+4>>2]=0,o=r;e:{for(;;){t:{s:{if((0|(d=u[0|o]))!=69){if((0|d)!=32)break s;if(a&&(g[ds(d=a,r,a=(0|(a=o-r|0))>=159?159:a)+a|0]=0),a=63&s)break t;break e}g[0|o]=101}o=o+1|0;continue}break}if(1&s){t:if((o=o-1|0)>>>0<r>>>0)d=a;else for(d=a;;){if((192&u[0|o])!=128)break t;if(d=d+1|0,!((o=o-1|0)>>>0>=r>>>0))break}f=a-1|0}else f=a,d=a;if((0|a)!=1)for(;;){a=f;t:if(!((o=o-1|0)>>>0<r>>>0))for(;;){if((192&u[0|o])!=128)break t;if(d=d+1|0,!((o=o-1|0)>>>0>=r>>>0))break}t:if(!((o=o-1|0)>>>0<r>>>0))for(;;){if((192&u[0|o])!=128)break t;if(d=d+1|0,!((o=o-1|0)>>>0>=r>>>0))break}if(f=a-2|0,!((0|a)>2))break}if((0|d)<=0)f=0;else{if(m=3&(f=(a=(r=d-1|0)>>>0>=48?48:r)+1|0),r=0,d=0,a>>>0>=3)for(P=-4&f,a=0;M=o+d|0,g[d+i|0]=u[0|M],g[0|M]=32,M=(y=1|d)+o|0,g[i+y|0]=u[0|M],g[0|M]=32,M=(y=2|d)+o|0,g[i+y|0]=u[0|M],g[0|M]=32,M=(y=3|d)+o|0,g[i+y|0]=u[0|M],g[0|M]=32,d=d+4|0,(0|P)!=(0|(a=a+4|0)););if(m)for(;a=o+d|0,g[d+i|0]=u[0|a],g[0|a]=32,d=d+1|0,(0|m)!=(0|(r=r+1|0)););}}if(g[i+f|0]=0,m=65520&s,!(512&s)|u[0|(a=o-1|0)]!=105||(g[0|a]=121),d=4|m,256&s){e:{t:{s:{if((0|(r=e[t+212>>2]))!=25966){if((0|r)!=28268)break s;if(g[0|a]<0||128&(r=g[0|(f=o-2|0)]))break e;if(m=e[t+632>>2])r=!!(0|Ra(m,r));else{if((0|(m=e[t+600>>2]))>0&&(r=r-m|0)-1>>>0>254)break e;r=128&u[344+(t+r|0)|0]}if(!r)break e;if(r=g[0|a],m=e[t+612>>2])r=!!(0|Ra(m,r));else{n:{if((0|(m=e[t+600>>2]))>0){if((r=r-m|0)-1>>>0<255)break n;break e}if((0|r)<0)break e}r=4&u[344+(t+r|0)|0]}if(!r)break e;r=g[o-3|0];n:{if(m=e[t+632>>2])r=!!(0|Ra(m,r));else{i:{if((0|(m=e[t+600>>2]))>0){if((r=r-m|0)-1>>>0<255)break i;break n}if((0|r)<0)break n}r=128&u[344+(t+r|0)|0]}if(r)break e}g[0|o]=u[0|a],g[0|a]=u[0|f],g[o+1|0]=32;break e}if(f=g[o-2|0],r=e[t+632>>2])r=!!(0|Ra(r,f));else{n:{if((0|(r=e[t+600>>2]))>0){if((f=f-r|0)-1>>>0<255)break n;break t}if((0|f)<0)break t}r=128&u[344+(t+f|0)|0]}if(!r)break t;if(f=g[0|a],r=e[t+608>>2])r=!!(0|Ra(r,f));else{if((0|(r=e[t+600>>2]))>0){if((f=f-r|0)-1>>>0>=255)break t}else if((0|f)<0)break t;r=2&u[344+(t+f|0)|0]}if(!r)break t;d=En(87771,o-3|0,3)?20|m:d;break e}d=e[t+204>>2]?20|m:d;break e}(u[0|a]==99||(f=u[1+(r=o-2|0)|0]<<8,(u[0|r]|f)==29554|(f|u[0|r])==29289||(u[0|(r=o-2|0)]|u[r+1|0]<<8)==29301||!En(88115,o-3|0,3)||(u[0|(r=o-2|0)]|u[r+1|0]<<8)==29550|u[0|a]==117||!En(88384,o-5|0,5)||(u[0|(r=o-4|0)]|u[r+1|0]<<8|u[r+2|0]<<16|u[r+3|0]<<24)==1735287154||(u[0|r]|u[r+1|0]<<8|u[r+2|0]<<16|u[r+3|0]<<24)==1735549292))&&(d=20|m)}16&d&&(ia(e[t+204>>2],o),8&u[188788]&&zA(88683,6,e[47195]))}return e[t+8184>>2]|!(2048&s)||(e[t+8184>>2]=1),B[i>>1]!=115&&En(i,88850,3)||(d|=8),pe=i- -64|0,u[0|i]==39?65531&d:d}function sa(t,r,s,a,i,o,d,f,m){var M,y=0,P=0,q=0,ae=0,de=0,ye=0,Be=0,qe=0,ot=0,pt=0;pe=M=pe-112|0,y=2147483647&m;e:{if(q=!(r|s),(a|(P=2147483647&i)?P-2147418112>>>0<2147549184:q)||!(!f&(0|(de=y-2147418112|0))==-2147418112?o|d:(0|de)==-2147418112&!!(0|f)|de>>>0>2147549184)){if(!(!a&(0|P)==2147418112?q:P>>>0<2147418112)){f=a,m=32768|i,o=r,d=s;break e}if(!(!f&(0|y)==2147418112?!(o|d):y>>>0<2147418112)){m|=32768;break e}if(!(r|a|2147418112^P|s)){ae=a,f=(a=!(r^o|a^f|s^d|i^m^-2147483648))?0:ae,m=a?2147450880:i,o=a?0:r,d=a?0:s;break e}if(!(o|f|2147418112^y|d))break e;if(!(r|a|s|P)){if(o|f|d|y)break e;o&=r,d&=s,f&=a,m&=i;break e}if(!(o|f|d|y)){o=r,d=s,f=a,m=i;break e}}P=(q=qe=(ae=(0|y)==(0|P))&(0|a)==(0|f)?(0|s)==(0|d)&r>>>0<o>>>0|s>>>0<d>>>0:ae&a>>>0<f>>>0|y>>>0>P>>>0)?o:r,de=q?d:s,ot=ae=q?m:i,q=q?f:a,Be=65535&ae,a=qe?a:f,pt=i=qe?i:m,ae=i>>>16&32767,(ye=ot>>>16&32767)||(m=i=!(q|Be),y=i?P:q,f=i<<=6,Sa(M+96|0,P,de,q,Be,(i=i+((0|(m=Re(m?de:Be)))==32?Re(y)+32|0:m)|0)-15|0),q=e[M+104>>2],Be=e[M+108>>2],de=e[M+100>>2],ye=16-i|0,P=e[M+96>>2]),o=qe?r:o,d=qe?s:d,f=a,m=65535&pt,ae||(i=r=!(f|m),y=r?o:f,s=r<<=6,Sa(M+80|0,o,d,f,m,(r=r+((0|(i=Re(i?d:m)))==32?Re(y)+32|0:i)|0)-15|0),ae=16-r|0,f=e[M+88>>2],m=e[M+92>>2],d=e[M+84>>2],o=e[M+80>>2]),s=m<<3|f>>>29,r=f<<3|d>>>29,s|=524288,f=q<<3|de>>>29,m=Be<<3|q>>>29,qe=ot^pt,i=d<<3|o>>>29,a=o<<3,(0|ae)!=(0|ye)&&((o=ye-ae|0)>>>0>127?(r=0,s=0,i=0,a=1):(Sa(M- -64|0,a,i,r,s,128-o|0),cs(M+48|0,a,i,r,s,o),r=e[M+56>>2],s=e[M+60>>2],i=e[M+52>>2],a=e[M+48>>2]|!!(e[M+64>>2]|e[M+72>>2]|e[M+68>>2]|e[M+76>>2]))),q=a,y=i,ae=f,Be=524288|m,i=de<<3|P>>>29,de=P<<3,P=i;t:if((0|qe)<0){if(o=0,d=0,f=0,m=0,!(q^de|r^ae|y^P|s^Be))break e;if(a=de-q|0,i=P-((q>>>0>de>>>0)+y|0)|0,f=(o=ae-r|0)-(d=(0|y)==(0|P)&q>>>0>de>>>0|y>>>0>P>>>0)|0,m=r=(Be-((r>>>0>ae>>>0)+s|0)|0)-(o>>>0<d>>>0)|0,r>>>0>524287)break t;o=r=!(f|m),d=r?a:f,s=r<<=6,Sa(M+32|0,a,i,f,m,r=(r=r+((0|(o=Re(o?i:m)))==32?Re(d)+32|0:o)|0)-12|0),ye=ye-r|0,f=e[M+40>>2],m=e[M+44>>2],a=e[M+32>>2],i=e[M+36>>2]}else i=y+P|0,o=(0|y)==(0|(i=(a=q+de|0)>>>0<de>>>0?i+1|0:i))&a>>>0<q>>>0|i>>>0<y>>>0,y=s+Be|0,y=(r=r+ae|0)>>>0<ae>>>0?y+1|0:y,1048576&(m=(f=r+o|0)>>>0<r>>>0?y+1|0:y)&&(a=1&q|(1&i)<<31|a>>>1,i=f<<31|i>>>1,ye=ye+1|0,f=(1&m)<<31|f>>>1,m=m>>>1|0);if(s=0,P=-2147483648&ot,(0|ye)>=32767)f=s,m=2147418112|P,o=0,d=0;else if(ae=0,(0|ye)>0?ae=ye:(Sa(M+16|0,a,i,f,m,ye+127|0),cs(M,a,i,f,m,1-ye|0),a=e[M>>2]|!!(e[M+16>>2]|e[M+24>>2]|e[M+20>>2]|e[M+28>>2]),i=e[M+4>>2],f=e[M+8>>2],m=e[M+12>>2]),de=7&a,a=(0|(r=f<<29|i>>>3))==(0|(d=(a=(7&i)<<29|a>>>3)>>>0>(o=(de>>>0>4)+a|0)>>>0?r+1|0:r))&a>>>0>o>>>0|r>>>0>d>>>0,r=s|(7&m)<<29|f>>>3,m=P|m>>>3&65535|ae<<16,m=r>>>0>(f=a+r|0)>>>0?m+1|0:m,(0|de)!=4){if(!de)break e}else y=d+(r=0)|0,m=(r=(0|r)==(0|(d=(a=o)>>>0>(o=o+(s=1&o)|0)>>>0?y+1|0:y))&s>>>0>o>>>0|r>>>0>d>>>0)>>>0>(f=r+f|0)>>>0?m+1|0:m}e[t>>2]=o,e[t+4>>2]=d,e[t+8>>2]=f,e[t+12>>2]=m,pe=M+112|0}function tr(t){var r=0,s=0,a=0,i=0,o=0,d=0,f=0;e:if(t|=0){o=(a=t-8|0)+(t=-8&(r=e[t-4>>2]))|0;t:if(!(1&r)){if(!(3&r)||(a=a-(r=e[a>>2])|0)>>>0<ue[57156])break e;if(t=t+r|0,e[57157]==(0|a)){if(!(3&~(r=e[o+4>>2])))return e[57154]=t,e[o+4>>2]=-2&r,e[a+4>>2]=1|t,void(e[t+a>>2]=t)}else{if(r>>>0<=255){if(i=e[a+8>>2],r=r>>>3|0,(0|(s=e[a+12>>2]))==(0|i)){e[57152]=e[57152]&dn(-2,r);break t}e[i+12>>2]=s,e[s+8>>2]=i;break t}if(f=e[a+24>>2],(0|a)==(0|(r=e[a+12>>2])))if((s=e[(i=a+20|0)>>2])||(s=e[(i=a+16|0)>>2])){for(;d=i,(s=e[(i=(r=s)+20|0)>>2])||(i=r+16|0,s=e[r+16>>2]););e[d>>2]=0}else r=0;else s=e[a+8>>2],e[s+12>>2]=r,e[r+8>>2]=s;if(!f)break t;i=e[a+28>>2];s:{if(e[(s=228912+(i<<2)|0)>>2]==(0|a)){if(e[s>>2]=r,r)break s;e[57153]=e[57153]&dn(-2,i);break t}if(e[f+(e[f+16>>2]==(0|a)?16:20)>>2]=r,!r)break t}if(e[r+24>>2]=f,(s=e[a+16>>2])&&(e[r+16>>2]=s,e[s+24>>2]=r),!(s=e[a+20>>2]))break t;e[r+20>>2]=s,e[s+24>>2]=r}}if(!(a>>>0>=o>>>0)&&1&(r=e[o+4>>2])){t:{if(!(2&r)){if(e[57158]==(0|o)){if(e[57158]=a,t=e[57155]+t|0,e[57155]=t,e[a+4>>2]=1|t,e[57157]!=(0|a))break e;return e[57154]=0,void(e[57157]=0)}if(e[57157]==(0|o))return e[57157]=a,t=e[57154]+t|0,e[57154]=t,e[a+4>>2]=1|t,void(e[t+a>>2]=t);t=(-8&r)+t|0;s:if(r>>>0<=255){if(i=e[o+8>>2],r=r>>>3|0,(0|(s=e[o+12>>2]))==(0|i)){e[57152]=e[57152]&dn(-2,r);break s}e[i+12>>2]=s,e[s+8>>2]=i}else{if(f=e[o+24>>2],(0|o)==(0|(r=e[o+12>>2])))if((s=e[(i=o+20|0)>>2])||(s=e[(i=o+16|0)>>2])){for(;d=i,(s=e[(i=(r=s)+20|0)>>2])||(i=r+16|0,s=e[r+16>>2]););e[d>>2]=0}else r=0;else s=e[o+8>>2],e[s+12>>2]=r,e[r+8>>2]=s;if(f){i=e[o+28>>2];n:{if(e[(s=228912+(i<<2)|0)>>2]==(0|o)){if(e[s>>2]=r,r)break n;e[57153]=e[57153]&dn(-2,i);break s}if(e[f+(e[f+16>>2]==(0|o)?16:20)>>2]=r,!r)break s}e[r+24>>2]=f,(s=e[o+16>>2])&&(e[r+16>>2]=s,e[s+24>>2]=r),(s=e[o+20>>2])&&(e[r+20>>2]=s,e[s+24>>2]=r)}}if(e[a+4>>2]=1|t,e[t+a>>2]=t,e[57157]!=(0|a))break t;return void(e[57154]=t)}e[o+4>>2]=-2&r,e[a+4>>2]=1|t,e[t+a>>2]=t}if(t>>>0<=255)return r=228648+(-8&t)|0,(s=e[57152])&(t=1<<(t>>>3))?t=e[r+8>>2]:(e[57152]=t|s,t=r),e[r+8>>2]=a,e[t+12>>2]=a,e[a+12>>2]=r,void(e[a+8>>2]=t);i=31,t>>>0<=16777215&&(i=62+((t>>>38-(r=Re(t>>>8|0))&1)-(r<<1)|0)|0),e[a+28>>2]=i,e[a+16>>2]=0,e[a+20>>2]=0,d=228912+(i<<2)|0;t:{s:{if((s=e[57153])&(r=1<<i)){for(i=t<<((0|i)!=31?25-(i>>>1|0):0),r=e[d>>2];;){if(s=r,(-8&e[r+4>>2])==(0|t))break s;if(r=i>>>29|0,i<<=1,!(r=e[16+(d=s+(4&r)|0)>>2]))break}e[d+16>>2]=a,e[a+24>>2]=s}else e[57153]=r|s,e[d>>2]=a,e[a+24>>2]=d;e[a+12>>2]=a,e[a+8>>2]=a;break t}t=e[s+8>>2],e[t+12>>2]=a,e[s+8>>2]=a,e[a+24>>2]=0,e[a+12>>2]=s,e[a+8>>2]=t}t=e[57160]-1|0,e[57160]=t||-1}}}function Qr(t,r,s){var a,i=0,o=0,d=0,f=0,m=0,M=0,y=0,P=0,q=0,ae=0,de=0,ye=0;pe=a=pe-176|0;e:{if(32&r)ae=s-((0|s)>1)|0;else{o=es(t,93302);t:{s:{n:{if((0|r)!=2){if(o)break n;r=0;break e}if(ae=s+1|0,P=56+(de=K(s,76)+133152|0)|0,q=es(t,89360),d=es(t,93318),f=es(t,93426),m=es(t,93499),o)break s;break t}ae=s+1|0,P=56+(de=K(s,76)+133152|0)|0,m=0}for(t=0,M=(0|(i=e[o-4>>2]))!=34?(0|i)==39?i:0:i,ye=K(s,76)+133208|0;;){if(i=t,!(t=e[o>>2]))break t;s:{if(!M){if((0|t)==32|t-9>>>0<5)break t;if((0|t)!=47)break s;break t}if((0|i)!=92&&(0|t)==(0|M))break t}if(o=o+4|0,!((0|(y=ia(t,y+ye|0)+y|0))<16))break}}M=0,g[y+P|0]=0,y=K(s,76)+133168|0,o=0;t:if(q)for(t=0,P=(0|(i=e[q-4>>2]))!=34?(0|i)==39?i:0:i;;){if(i=t,!(t=e[q>>2]))break t;s:{if(!P){if((0|t)==32|t-9>>>0<5)break t;if((0|t)!=47)break s;break t}if((0|i)!=92&&(0|t)==(0|P))break t}if(q=q+4|0,!((0|(o=ia(t,o+y|0)+o|0))<36))break}if(g[o+y|0]=0,!(!d|e[d>>2]-48>>>0>=10)){for(;M=(e[d>>2]+K(M,10)|0)-48|0,e[(d=d+4|0)>>2]-48>>>0<10;);(0|M)<=0||(M=M-1|0)}if(i=K(s,76)+133152|0,e[i+4>>2]=M,t=0,o=0,!(!f|e[f>>2]-48>>>0>=10))for(;o=(e[f>>2]+K(o,10)|0)-48|0,e[(f=f+4|0)>>2]-48>>>0<10;);e[i+12>>2]=o,o=K(s,76)+133152|0;t:{s:if(m){for(;s=g[t+93099|0],(i=e[(t<<2)+m>>2])&&(t=t+1|0,(0|s)==(0|i)););n:{i:switch(i-34|0){case 0:case 5:break i;default:break n}if(!s){t=0;break t}}for(t=0;s=g[t+93116|0],(i=e[(t<<2)+m>>2])&&(t=t+1|0,(0|s)==(0|i)););n:{i:switch(i-34|0){case 0:case 5:break i;default:break n}if(!s){t=1;break t}}for(t=0;s=g[t+93197|0],(i=e[(t<<2)+m>>2])&&(t=t+1|0,(0|s)==(0|i)););n:switch(i-34|0){case 0:case 5:break n;default:break s}if(!s){t=2;break t}}t=3}e[o+8>>2]=e[131156+(t<<3)>>2],e[de>>2]=r}if(Hr(137776,133168),s=Hr(a+96|0,133208),g[a+157|0]=e[33291],g[a+156|0]=e[33290],t=e[33289],e[a+152>>2]=0,g[a+158|0]=t,(0|ae)>0)for(d=0;;){if(f=1,r=K(d,76)+133152|0,u[0|(t=r+16|0)]&&Rs(0,t)&&(Hr(137776,t),f=0,g[0|s]=0,g[a+158|0]=0,I[a+156>>1]=0),u[0|(t=r+56|0)]){m=Hr(s,t),i=e[33679];t:if(u[0|(t=i)])for(;;){if(!Ta(t=t+1|0,m)){Hr(m,i+1|0);break t}if(t=1+(zr(t)+t|0)|0,!u[0|t])break}f&&(g[137776]=0)}if((t=e[r+8>>2])&&(g[a+156|0]=t),(t=e[r+12>>2])&&(g[a+157|0]=t),(t=e[r+4>>2])&&(g[a+158|0]=t),(0|ae)==(0|(d=d+1|0)))break}e[a+148>>2]=s,e[a+144>>2]=137776,(t=pn(a+144|0,a+172|0))?di(t,43)||(r=u[a+156|0],!u[134672]|((0|r)!=u[134724]?r:0)||(e[a>>2]=t,e[a+4>>2]=134672,Br(r=a+16|0,93533,a),t=137776,na(137776,r,40))):t=92003,r=0,Ta(t,134784)&&(Hr(134784,t),r=131072)}return pe=a+176|0,r}function jr(t,r){var s,a=0,i=0,o=0,d=0,f=0;s=t+r|0;e:{t:if(!(1&(a=e[t+4>>2]))){if(!(3&a))break e;r=(a=e[t>>2])+r|0;s:{if((0|(t=t-a|0))!=e[57157]){if(a>>>0<=255){if(o=e[t+8>>2],a=a>>>3|0,(0|(i=e[t+12>>2]))!=(0|o))break s;e[57152]=e[57152]&dn(-2,a);break t}if(f=e[t+24>>2],(0|(a=e[t+12>>2]))==(0|t))if((i=e[(o=t+20|0)>>2])||(i=e[(o=t+16|0)>>2])){for(;d=o,(i=e[(o=(a=i)+20|0)>>2])||(o=a+16|0,i=e[a+16>>2]););e[d>>2]=0}else a=0;else i=e[t+8>>2],e[i+12>>2]=a,e[a+8>>2]=i;if(!f)break t;o=e[t+28>>2];n:{if(e[(i=228912+(o<<2)|0)>>2]==(0|t)){if(e[i>>2]=a,a)break n;e[57153]=e[57153]&dn(-2,o);break t}if(e[f+(e[f+16>>2]==(0|t)?16:20)>>2]=a,!a)break t}if(e[a+24>>2]=f,(i=e[t+16>>2])&&(e[a+16>>2]=i,e[i+24>>2]=a),!(i=e[t+20>>2]))break t;e[a+20>>2]=i,e[i+24>>2]=a;break t}if(3&~(a=e[s+4>>2]))break t;return e[57154]=r,e[s+4>>2]=-2&a,e[t+4>>2]=1|r,void(e[s>>2]=r)}e[o+12>>2]=i,e[i+8>>2]=o}t:{if(!(2&(a=e[s+4>>2]))){if(e[57158]==(0|s)){if(e[57158]=t,r=e[57155]+r|0,e[57155]=r,e[t+4>>2]=1|r,e[57157]!=(0|t))break e;return e[57154]=0,void(e[57157]=0)}if(e[57157]==(0|s))return e[57157]=t,r=e[57154]+r|0,e[57154]=r,e[t+4>>2]=1|r,void(e[t+r>>2]=r);r=(-8&a)+r|0;s:if(a>>>0<=255){if(o=e[s+8>>2],a=a>>>3|0,(0|(i=e[s+12>>2]))==(0|o)){e[57152]=e[57152]&dn(-2,a);break s}e[o+12>>2]=i,e[i+8>>2]=o}else{if(f=e[s+24>>2],(0|s)==(0|(a=e[s+12>>2])))if((o=e[(i=s+20|0)>>2])||(o=e[(i=s+16|0)>>2])){for(;d=i,(o=e[(i=(a=o)+20|0)>>2])||(i=a+16|0,o=e[a+16>>2]););e[d>>2]=0}else a=0;else i=e[s+8>>2],e[i+12>>2]=a,e[a+8>>2]=i;if(f){o=e[s+28>>2];n:{if(e[(i=228912+(o<<2)|0)>>2]==(0|s)){if(e[i>>2]=a,a)break n;e[57153]=e[57153]&dn(-2,o);break s}if(e[f+(e[f+16>>2]==(0|s)?16:20)>>2]=a,!a)break s}e[a+24>>2]=f,(i=e[s+16>>2])&&(e[a+16>>2]=i,e[i+24>>2]=a),(i=e[s+20>>2])&&(e[a+20>>2]=i,e[i+24>>2]=a)}}if(e[t+4>>2]=1|r,e[t+r>>2]=r,e[57157]!=(0|t))break t;return void(e[57154]=r)}e[s+4>>2]=-2&a,e[t+4>>2]=1|r,e[t+r>>2]=r}if(r>>>0<=255)return a=228648+(-8&r)|0,(i=e[57152])&(r=1<<(r>>>3))?r=e[a+8>>2]:(e[57152]=r|i,r=a),e[a+8>>2]=t,e[r+12>>2]=t,e[t+12>>2]=a,void(e[t+8>>2]=r);o=31,r>>>0<=16777215&&(o=62+((r>>>38-(a=Re(r>>>8|0))&1)-(a<<1)|0)|0),e[t+28>>2]=o,e[t+16>>2]=0,e[t+20>>2]=0,d=228912+(o<<2)|0;t:{if((i=e[57153])&(a=1<<o)){for(o=r<<((0|o)!=31?25-(o>>>1|0):0),a=e[d>>2];;){if(i=a,(-8&e[a+4>>2])==(0|r))break t;if(a=o>>>29|0,o<<=1,!(a=e[16+(d=i+(4&a)|0)>>2]))break}e[d+16>>2]=t,e[t+24>>2]=i}else e[57153]=a|i,e[d>>2]=t,e[t+24>>2]=d;return e[t+12>>2]=t,void(e[t+8>>2]=t)}r=e[i+8>>2],e[r+12>>2]=t,e[i+8>>2]=t,e[t+24>>2]=0,e[t+12>>2]=i,e[t+8>>2]=r}}function Vs(t){var r=0,s=0,a=0,i=0,o=0,d=0,f=0,m=0,M=0,y=0,P=0,q=0,ae=0;if(!(r=g[88105]))return t;if(t=di(t,r)){if(!u[88106])return t;if(u[t+1|0]){if(!u[88107]){i=!!(0|(s=u[t+1|0]));e:if(s&&(0|(r=s|u[0|t]<<8))!=(0|(f=u[88106]|u[88105]<<8)))for(s=t+1|0;;){if(i=!!(0|(a=u[(t=s)+1|0])),!a)break e;if(s=t+1|0,(0|f)==(0|(r=a|r<<8&65280)))break}return i?t:0}if(u[t+2|0]){if(!u[88108]){s=t+2|0,i=!!(0|(r=u[t+2|0]));e:if(r&&(0|(r=u[t+1|0]<<16|u[0|t]<<24|r<<8))!=(0|(f=u[88106]<<16|u[88105]<<24|u[88107]<<8)))for(;;){if(t=s+1|0,i=!!(0|(a=u[s+1|0])),!a)break e;if(s=t,(0|f)==(0|(r=(r|a)<<8)))break}else t=s;return i?t-2|0:0}if(u[t+3|0]){if(!u[88109]){s=t+3|0,i=!!(0|(r=u[t+3|0]));e:if(r&&(0|(r=r|u[t+1|0]<<16|u[0|t]<<24|u[t+2|0]<<8))!=(0|(f=(t=u[88105]|u[88106]<<8|u[88107]<<16|u[88108]<<24)<<24|(65280&t)<<8|t>>>8&65280|t>>>24)))for(;;){if(t=s+1|0,i=!!(0|(a=u[s+1|0])),!a)break e;if(s=t,(0|f)==(0|(r=a|r<<8)))break}else t=s;return i?t-3|0:0}f=t,pe=m=pe-1056|0,e[(t=m+1048|0)>>2]=0,e[t+4>>2]=0,e[(t=m+1040|0)>>2]=0,e[t+4>>2]=0,e[m+1032>>2]=0,e[m+1036>>2]=0,e[m+1024>>2]=0,e[m+1028>>2]=0;e:{t:{s:{n:{if(r=u[88105]){for(;;){if(!u[o+f|0])break t;if(o=o+1|0,e[((255&r)<<2)+m>>2]=o,e[(t=(m+1024|0)+(r>>>3&28)|0)>>2]=e[t>>2]|1<<r,!(r=u[o+88105|0]))break}if(t=1,M=-1,o>>>0>1)break n}else M=-1,t=1;d=-1,s=1;break s}for(a=1,r=1;;){n:if((0|(d=u[88105+(r+M|0)|0]))!=(0|(i=u[t+88105|0])))i>>>0<d>>>0?(a=t-M|0,s=t,r=1):(M=s,s=s+1|0,a=1,r=1);else{if((0|r)==(0|a)){s=s+a|0,r=1;break n}r=r+1|0}if(!(o>>>0>(t=s+r|0)>>>0))break}if(s=1,d=-1,o>>>0<=1)t=a;else{for(t=0,i=1,r=1;;){n:if((0|(P=u[88105+(r+d|0)|0]))!=(0|(y=u[s+88105|0])))y>>>0>P>>>0?(i=s-d|0,t=s,r=1):(d=t,t=t+1|0,i=1,r=1);else{if((0|r)==(0|i)){t=t+i|0,r=1;break n}r=r+1|0}if(!(o>>>0>(s=t+r|0)>>>0))break}t=a,s=i}}for(r=t,En(88105,(a=(t=d+1>>>0>M+1>>>0)?s:r)+88105|0,P=(y=t?d:M)+1|0)?(a=((t=~y+o|0)>>>0<y>>>0?y:t)+1|0,i=0):i=o-a|0,ae=o-1|0,q=63|o,d=0,t=f;;){if(!(f-t>>>0>=o>>>0))if(s=lo(f,0,q)){if(f=s,s-t>>>0<o>>>0)break t}else f=f+q|0;s=u[t+ae|0],r=o;s:{if(e[(m+1024|0)+(s>>>3&28)>>2]>>>s&1)if((0|(s=e[(s<<2)+m>>2]))==(0|o)){n:{if(M=u[(s=(r=P)>>>0>d>>>0?r:d)+88105|0])for(;;){if(u[t+s|0]!=(255&M))break n;if(!(M=u[88105+(s=s+1|0)|0]))break}for(;;){if(r>>>0<=d>>>0)break e;if(u[88105+(r=r-1|0)|0]!=u[t+r|0])break}r=a,d=i;break s}r=s-y|0}else r=(s=o-s|0)>>>0>d>>>0?s:d;d=0}t=t+r|0}}t=0}pe=m+1056|0,s=t}}}}return s}function xn(t,r,s,a,i,o){var d,f,m,M,y=0,P=0,q=0;if(pe=d=pe-560|0,g[d+448|0]=0,g[d+144|0]=0,g[d+120|0]=0,m=34&o,f=r-K(P=(0|r)/100|0,100)|0,1&(M=64&u[t+106|0]?(0|r)>999|o:0)|(0|r)>99){e:{t:{s:{if(!(!m|f)){if(!Nr(t,90606,d+304|0))break s;break e}if(f)break t}if(Nr(t,90691,d+304|0))break e}Nr(t,90725,d+304|0)}y=o,(0|r)<1e3||(y=o,!(8&u[t+105|0])|r-2e3>>>0<4294967196&&(g[d+208|0]=0,hn(t,y=(P>>>0)/10|0,a=16384&e[t+108>>2]?0:i+1|0,!((r>>>0)%1e3|0)|m,d+272|0)||Ba(t,y,i,e[t+212>>2]==28012?520:(0|a)<4?(e[t+108>>2]>>>a&1)<<3:0,d+208|0),2&u[t+109|0]?(e[d+108>>2]=15,e[d+100>>2]=15,e[d+104>>2]=d+208,e[d+96>>2]=d+272,Br(d+144|0,90761,d+96|0)):(e[d+92>>2]=15,e[d+84>>2]=15,e[d+88>>2]=d+272,e[d+80>>2]=d+208,Br(d+144|0,90761,d+80|0)),a=1,1&(!!(0|(P=P-K(y,10)|0))|M)||(g[d+304|0]=0),y=1|o)),g[d+208|0]=0;e:if(!(~M&(0|P)<=0))if(!(4&u[t+106|0])|!(1&y|u[d+144|0])||Nr(t,90824,d+120|0),!m|(16&u[t+109|0]?0:f)||(e[d+64>>2]=P,Br(a=d+548|0,90875,d- -64|0),q=Nr(t,a,d+208|0),!(4096&e[t+108>>2])|(0|f)<=0||Ca(d+208|0,133104)),a=1,1&(~M|!!(0|P))){t:{s:{n:{i:{if(!(131072&e[t+108>>2])||1&y|(0|P)!=1){if(f|q||(e[d+48>>2]=P,Br(a=d+548|0,90985,d+48|0),q=Nr(t,a,d+208|0)),q||(e[d+32>>2]=P,Br(a=d+548|0,91027,d+32|0),Nr(t,a,d+208|0)))break i;if((0|P)!=1)break s;break n}if(!q)break n}g[d+304|0]=0;break t}if(a=1,4&u[t+105|0])break e}Ba(t,P,i,0,d+208|0)}a=1}else Nr(t,88875,d+208|0);e[d+28>>2]=d+304,e[d+24>>2]=d+208,e[d+20>>2]=d+120,e[d+16>>2]=d+144,Br(d+448|0,91059,d+16|0)}else y=o;g[d+132|0]=0;e:{t:{if((0|f)>0)16&u[t+109|0]&&2&y||(!(1&y)|i&&(0|r)<=100||!(64&(a=e[t+104>>2]))&(!(8388608&a)|f>>>0>9)||Nr(t,90824,d+132|0),!(1&y|u[d+144|0])|!(524288&e[t+104>>2])|P||Nr(t,90824,d+132|0)),g[d+336|0]=0;else if(g[d+336|0]=0,!f&a)break t;if(i?(o=e[t+108>>2],r=(0|i)<4?(o>>>i&1)<<3:0):(a=m?3:2,r=32&o|((0|r)<100?1&y?a:4|a:a),o=e[t+108>>2]),r=(0|i)==1&&e[t+212>>2]==28012?520|r:r,1048576&o&&(a=16|r,r=(0|P)>0||1&y?a:r),!Ba(t,f,i,256&y|r,d+336|0)|!(128&u[t+104|0]))break e;g[d+132|0]=0;break e}u[133104]&&((0|(t=zr(d+448|0)))<=0||u[447+(t=t+d|0)|0]==10&&(g[t+447|0]=0),Hr(d+336|0,133104))}e[d+8>>2]=15,e[d+12>>2]=d+336,e[d+4>>2]=d+132,e[d>>2]=d+448,Br(s,91101,d),pe=d+560|0}function Ss(t){var r,s,a,i=0,o=0,d=0,f=0,m=0,M=0,y=0,P=0,q=0,ae=0,de=0,ye=0;for(i=e[32972],e[i+64>>2]=290816,e[i+68>>2]=4104,e[i+96>>2]=0,e[i+100>>2]=0,e[i+120>>2]=90,e[i+124>>2]=100,e[i+112>>2]=64,e[i+116>>2]=256,e[i+104>>2]=5,e[i+108>>2]=0,e[i+84>>2]=100,e[i+88>>2]=64,o=e[50754],e[i+132>>2]=0,e[i+136>>2]=0,e[i+128>>2]=o,e[i+140>>2]=0,e[i+144>>2]=0,e[i+148>>2]=0,e[i+152>>2]=0,e[i+156>>2]=0,e[i+160>>2]=0,e[36435]=450,e[i+92>>2]=2,e[50870]=0,e[50871]=0,e[50872]=0,e[50873]=0,e[50880]=0,e[50881]=0,e[50882]=0,e[50883]=0,e[50890]=0,e[50891]=0,e[50892]=0,e[50893]=0,d=-3.141592653589793/+e[50754],G[25429]=d,m=-2*d,G[25430]=m,r=(d=ys(200*d))*-d,G[25434]=r,G[25439]=r,G[25444]=r,d=(m=d*yn(2e3*m))+m,G[25433]=d,G[25438]=d,G[25443]=d,m=1-d-r,G[25432]=m,G[25437]=m,G[25442]=m,e[50902]=0,e[50903]=0,e[50900]=0,e[50901]=0,G[25449]=r,G[25448]=d,e[50912]=0,e[50913]=0,G[25447]=m,e[50910]=0,e[50911]=0,G[25454]=r,G[25453]=d,e[50922]=0,e[50923]=0,G[25452]=m,e[50920]=0,e[50921]=0,G[25459]=r,G[25458]=d,e[50932]=0,e[50933]=0,G[25457]=m,e[50930]=0,e[50931]=0,G[25464]=r,G[25463]=d,G[25462]=m,e[50942]=0,e[50943]=0,e[50940]=0,e[50941]=0,G[25469]=r,G[25468]=d,G[25467]=m,e[50952]=0,e[50953]=0,e[50950]=0,e[50951]=0,G[25474]=r,G[25473]=d,G[25472]=m,s=e[32972],o=0;I[236+(M=(o<<1)+s|0)>>1]=256,I[M+164>>1]=256,i=u[o+105376|0]<<1,I[M+254>>1]=i,I[M+182>>1]=i,I[M+200>>1]=u[o+105385|0]<<1,e[308+(i=(f=o<<2)+s|0)>>2]=e[f+105408>>2],e[i+272>>2]=0,I[M+218>>1]=0,e[f+200944>>2]=(0|K(e[f+105456>>2],22050))/e[50754],(0|(o=o+1|0))!=9;);for(ae=e[32961],o=0,a=s+344|0;;){if(i=y,P=ae,M=o,(0|(y=e[(o=131840+(f=o<<2)|0)>>2]))==-1&&(y=8e3,e[o>>2]=8e3,M&&(e[131840+(4|f)>>2]=e[f+131836>>2])),ae=e[131840+(4|f)>>2],!((0|i)>=(0|(y=(0|y)/8|0))||(0|(q=y-i|0))<=0||(f=i+1|0,o=i,1&q&&(g[344+(i+s|0)|0]=(0|P)>=255?255:P,o=f),(0|f)==(0|y))))for(de=ae-P|0;f=((0|K(o-i|0,de))/(0|q)|0)+P|0,g[o+a|0]=(0|f)>=255?255:f,ye=((0|K((f=o+1|0)-i|0,de))/(0|q)|0)+P|0,g[f+a|0]=(0|ye)>=255?255:ye,(0|y)!=(0|(o=o+2|0)););if(o=M+2|0,!(M>>>0<10))break}o=e[32972],e[o+80>>2]=232,e[o+72>>2]=256,e[o+76>>2]=238,t||(e[49848]=0),I[o+200>>1]=(0|K(I[o+200>>1],105))/100}function Ls(t,r,s){var a,i=0,o=0,d=0,f=0,m=0,M=0,y=0,P=0;pe=a=pe-288|0,(0|r)!=132848&&Vr(132848,r,40),(0|(i=t+228|0))!=(0|r)&&Vr(i,r,40),e[a+88>>2]=r,e[a+84>>2]=47,e[a+80>>2]=137584,Br(i=a+96|0,84089,a+80|0),o=ci(i),(i=e[t+688>>2])&&(tr(i),e[t+688>>2]=0),i=qr(a+96|0,84577);e:if((0|o)>0&&i)if(s=Fr(o),e[t+688>>2]=s,s)if(M=Ri(s,o,i),Za(i),M>>>0<=1032)e[a+16>>2]=a+96,ba(e[30450],85164,a+16|0),s=2;else if(i=e[t+688>>2],s=e[i+4>>2],!((0|(o=e[i>>2]))!=1024|(0|s)<=0)&(0|s)<134217729){i=s+i|0,e[t+684>>2]=i,P=wr(t+5168|0,0,1024),wr(t+7664|0,0,260),wr(t+7924|0,255,256),wr(t+4788|0,0,380),wr(t+6192|0,0,512);t:if((0|(s=u[0|i]))!=7)for(;;){if((0|(o=255&s))!=6){if(!o)break t;o=e[t+684>>2],e[a+72>>2]=s<<24>>24,e[a+64>>2]=132848,e[a+68>>2]=i-o,ba(e[30450],88950,a- -64|0);break}s:{n:{i:{c:{A:switch((o=u[0|(s=i+1|0)])-18|0){case 0:break c;case 2:break A;default:break i}for(s=4+(-4&s)|0,e[t+180>>2]=s;s=(i=s)+1|0,!OA(i););for(;o=u[0|i],s=i,i=i+1|0,(0|o)!=7;);break s}if(s=i+3|0,(0|(i=((0|(i=g[i+2|0]))<65?191:-65)+i|0))>94)break n;e[4788+((i<<2)+t|0)>>2]=s;break n}switch(s=1+((f=zr(s))+s|0)|0,0|f){case 1:e[5168+((o<<2)+t|0)>>2]=s;break n;case 0:e[P>>2]=s;break n}f=u[i+2|0],(0|o)!=1?(i=e[t+7664>>2],u[0|(y=7924+(d=t+o|0)|0)]==255&&(g[0|y]=i),g[0|(d=d+7668|0)]=u[0|d]+1,e[6704+(d=(i<<2)+t|0)>>2]=s,e[t+7664>>2]=i+1,e[d+7184>>2]=o|f<<8):e[6188+((f<<2)+t|0)>>2]=s}if(u[0|s]!=7)for(;s=1+(zr(s)+s|0)|0,u[0|s]!=7;);}s=u[0|(i=s+1|0)]}for(i=e[t+688>>2]+8|0;;){for(e[692+((s=m<<2)+t|0)>>2]=i;o=u[0|i];)i=i+o|0;for(i=i+1|0,e[692+((4|s)+t|0)>>2]=i;s=u[0|i];)i=s+i|0;if(i=i+1|0,(0|(m=m+2|0))==1024)break}s=0,(0|(t=e[t+324>>2]))<=0|t>>>0<=M>>>0||(e[a+48>>2]=r,ba(e[30450],85519,a+48|0))}else e[a+40>>2]=s,e[a+36>>2]=o,e[a+32>>2]=a+96,ba(e[30450],85349,a+32|0),s=2;else Za(i),s=3;else{if(s||(e[a>>2]=a+96,ba(e[30450],84963,a)),s=1,!i)break e;Za(i)}return pe=a+288|0,s}function Xa(t){var r,s=0,a=0;for(r=wr(t+344|0,0,256),g[t+364|0]=1,g[t+356|0]=1,g[t+357|0]=1,g[t+358|0]=1,g[t+359|0]=1,g[t+360|0]=1,g[t+361|0]=1,g[t+362|0]=1,g[t+363|0]=1,g[t+348|0]=1,g[t+349|0]=1,g[t+350|0]=1,g[t+351|0]=1,g[t+352|0]=1,g[t+353|0]=1,g[t+354|0]=1,g[t+355|0]=1,g[t+431|0]=3,g[t+429|0]=3,g[t+430|0]=3,g[t+406|0]=3,g[t+407|0]=3,g[t+408|0]=3,g[t+409|0]=3,g[t+410|0]=3,g[t+411|0]=3,g[t+412|0]=3,g[t+413|0]=3,g[t+414|0]=3,g[t+415|0]=3,g[t+416|0]=3,g[t+417|0]=3,g[t+418|0]=3,g[t+419|0]=3,g[t+420|0]=3,g[t+421|0]=3,g[t+440|0]=3,g[t+441|0]=3,g[t+442|0]=3,g[t+443|0]=3,a=21;g[344+(s=t+a|0)|0]=4|u[s+344|0],(0|(s=a+1|0))!=58;)g[0|(s=s+r|0)]=4|u[0|s],g[2+(s=a+r|0)|0]=4|u[s+2|0],g[s+3|0]=4|u[s+3|0],a=a+4|0;g[t+346|0]=4|u[t+346|0],g[t+347|0]=4|u[t+347|0],g[t+432|0]=4|u[t+432|0],g[t+433|0]=4|u[t+433|0],g[t+434|0]=4|u[t+434|0],g[t+435|0]=4|u[t+435|0],g[t+436|0]=4|u[t+436|0],g[t+437|0]=4|u[t+437|0],g[t+438|0]=4|u[t+438|0],g[t+439|0]=4|u[t+439|0],g[t+467|0]=4|u[t+467|0],g[t+468|0]=4|u[t+468|0],g[t+470|0]=4|u[t+470|0],g[t+471|0]=4|u[t+471|0],g[t+348|0]=64|u[t+348|0],g[t+349|0]=64|u[t+349|0],g[t+350|0]=64|u[t+350|0],g[t+351|0]=64|u[t+351|0],g[t+352|0]=64|u[t+352|0],g[t+353|0]=64|u[t+353|0],g[t+354|0]=64|u[t+354|0],g[t+355|0]=64|u[t+355|0],g[t+356|0]=64|u[t+356|0],g[t+357|0]=64|u[t+357|0],g[t+358|0]=64|u[t+358|0],g[t+359|0]=64|u[t+359|0],g[t+360|0]=64|u[t+360|0],g[t+361|0]=64|u[t+361|0],g[t+362|0]=64|u[t+362|0],g[t+363|0]=64|u[t+363|0],g[t+364|0]=64|u[t+364|0],g[t+406|0]=64|u[t+406|0],g[t+407|0]=64|u[t+407|0],g[t+408|0]=64|u[t+408|0],g[t+409|0]=64|u[t+409|0],g[t+410|0]=64|u[t+410|0],g[t+411|0]=64|u[t+411|0],g[t+412|0]=64|u[t+412|0],g[t+413|0]=64|u[t+413|0],g[t+414|0]=64|u[t+414|0],g[t+415|0]=64|u[t+415|0],g[t+416|0]=64|u[t+416|0],g[t+417|0]=64|u[t+417|0],g[t+418|0]=64|u[t+418|0],g[t+419|0]=64|u[t+419|0],g[t+420|0]=64|u[t+420|0],g[t+440|0]=64|u[t+440|0],g[t+441|0]=64|u[t+441|0],g[t+429|0]=64|u[t+429|0],g[t+430|0]=64|u[t+430|0],g[t+431|0]=64|u[t+431|0],g[t+442|0]=64|u[t+442|0],g[t+443|0]=64|u[t+443|0],e[t+40>>2]=1,e[t+204>>2]=e[t+600>>2]+77}function _a(t,r,s,a,i,o,d,f,m){var M,y=0,P=0,q=0,ae=0,de=0,ye=0,Be=0,qe=0,ot=0,pt=0;pe=M=pe-128|0;e:{t:{if(rr(o,d,f,m,0,0,0,0)){P=65535&m;s:n:{if((0|(ae=m>>>16&32767))!=32767){if(y=4,ae)break n;y=o|f|d|P?3:2;break s}y=!(o|f|d|P)}if((0|(de=32767&(ot=i>>>16|0)))!=32767&&y)break t}vr(M+16|0,r,s,a,i,o,d,f,m),Gs(M,r=e[M+16>>2],a=e[M+20>>2],i=e[M+24>>2],s=e[M+28>>2],r,a,i,s),a=e[M+8>>2],i=e[M+12>>2],f=e[M>>2],m=e[M+4>>2];break e}if(ae=f,(0|rr(r,s,y=a,ye=2147483647&i,o,d,f,q=2147483647&m))<=0){if(rr(r,s,y,ye,o,d,ae,q)){f=r,m=s;break e}vr(M+112|0,r,s,a,i,0,0,0,0),a=e[M+120>>2],i=e[M+124>>2],f=e[M+112>>2],m=e[M+116>>2]}else{if(Be=m>>>16&32767,de?(m=s,f=r):(vr(M+96|0,r,s,y,ye,0,0,0,1081540608),y=e[M+104>>2],ye=f=e[M+108>>2],de=(f>>>16|0)-120|0,m=e[M+100>>2],f=e[M+96>>2]),Be||(vr(M+80|0,o,d,ae,q,0,0,0,1081540608),ae=e[M+88>>2],q=o=e[M+92>>2],Be=(o>>>16|0)-120|0,d=e[M+84>>2],o=e[M+80>>2]),qe=ae,pt=65535&q|65536,ye=65535&ye|65536,(0|de)>(0|Be)){for(;;){if(ae=(q=y-qe|0)-(P=(0|d)==(0|m)&o>>>0>f>>>0|d>>>0>m>>>0)|0,(0|(P=(ye-((y>>>0<qe>>>0)+pt|0)|0)-(P>>>0>q>>>0)|0))>0|(0|P)>=0){if(y=f,!((f=f-o|0)|ae|(m=m-((o>>>0>y>>>0)+d|0)|0)|P)){vr(M+32|0,r,s,a,i,0,0,0,0),a=e[M+40>>2],i=e[M+44>>2],f=e[M+32>>2],m=e[M+36>>2];break e}P=P<<1|ae>>>31,y=ae<<1|m>>>31}else P=ye<<1|y>>>31,y=y<<1|m>>>31;if(ye=P,P=m<<1|f>>>31,f<<=1,m=P,!((0|(de=de-1|0))>(0|Be)))break}de=Be}if(ae=(q=y-qe|0)-(P=(0|d)==(0|m)&o>>>0>f>>>0|d>>>0>m>>>0)|0,q=P=(ye-((y>>>0<qe>>>0)+pt|0)|0)-(P>>>0>q>>>0)|0,(0|P)<0)ae=y,q=ye;else if(y=f,!((f=f-o|0)|ae|(m=m-((o>>>0>y>>>0)+d|0)|0)|q)){vr(M+48|0,r,s,a,i,0,0,0,0),a=e[M+56>>2],i=e[M+60>>2],f=e[M+48>>2],m=e[M+52>>2];break e}if((0|q)==65535|q>>>0<65535)for(;r=m>>>31|0,de=de-1|0,ye=m<<1|f>>>31,f<<=1,m=ye,s=r,r=q<<1|ae>>>31,ae=s|ae<<1,q=r,r>>>0<65536;);r=32768&ot,(0|de)<=0?(vr(M- -64|0,f,m,ae,65535&q|(r|de+120)<<16,0,0,0,1065811968),a=e[M+72>>2],i=e[M+76>>2],f=e[M+64>>2],m=e[M+68>>2]):(a=ae,i=65535&q|(r|de)<<16)}}e[t>>2]=f,e[t+4>>2]=m,e[t+8>>2]=a,e[t+12>>2]=i,pe=M+128|0}function Tn(t,r,s){var a,i,o=0,d=0,f=0,m=0,M=0,y=0,P=0,q=0,ae=0;if(pe=a=pe-1040|0,(0|(d=rl(t,589824,0)))>=0&&((o=ea(1,2072))?e[o+8>>2]=d:(ht(0|d),o=0)),i=o,o){e:if(o=xA(i))for(ae=e[30450],q=(a+96|0)+r|0;;){if((0|(d=e[50303]))>=348){e[a+4>>2]=350,e[a>>2]=d+1,ba(ae,91860,a);break e}if(u[o+19|0]!=46)if(e[a+88>>2]=o+19,e[a+84>>2]=47,e[a+80>>2]=t,Br(o=a+96|0,91924,a+80|0),(0|(o=ci(o)))!=-31){if(!((0|o)<=0)&&(P=qr(a+96|0,85712))){f=0,g[a+832|0]=0,g[a+752|0]=0,e[a+360>>2]=0,e[a+356>>2]=4,M=0;t:for(;;){for(y=299-M|0;gs(a+912|0,120,P);){o=a+912|0;s:{if(u[a+912|0]!=35){n:if(!((0|(o=zr(a+912|0)-1|0))<=0))for(;;){if(!((0|(d=g[0|(m=(a+912|0)+o|0)]))==32|d-9>>>0<5))break n;if(g[0|m]=0,!((0|(o=o-1|0))>0))break}if(!(o=Vs(a+912|0)))break s}g[0|o]=0}o=a+912|0;s:if(d=u[a+912|0])for(;;){if(La(d<<24>>24))break s;if(!(d=u[0|(o=o+1|0)]))break}if(g[0|o]=0,u[a+912|0]){o=o+1|0;s:switch(Si(131904,a+912|0)-1|0){case 0:for(;d=o,o=o+1|0,(0|(m=g[0|d]))==32|m-9>>>0<5;);na(a+832|0,d,80);continue;case 1:if(g[a+672|0]=0,e[a+364>>2]=5,d=a+672|0,e[a+16>>2]=d,e[a+20>>2]=a+364,lr(o,86237,a+16|0),(d=zr(d)+2|0)>>>0>=y>>>0)continue;g[0|(o=(a+368|0)+M|0)]=e[a+364>>2],Hr(o+1|0,a+672|0),f=f+1|0,M=d+M|0;continue t;case 2:if(e[a+52>>2]=a+360,e[a+48>>2]=a+752,lr(o,86237,a+48|0),!s)continue;e[a+32>>2]=q,ba(ae,92042,a+32|0);continue;case 5:break s;default:continue}e[a+64>>2]=a+356,lr(o,87268,a- -64|0)}}break}g[(a+368|0)+M|0]=0,d=Si(132112,a+752|0),f?(m=zr(q)+M|0,y=ds((f=ea(28+(zr(a+832|0)+m|0)|0,1))+24|0,a+368|0,o=M+1|0),e[f+4>>2]=y,o=Hr(o+y|0,q),e[f>>2]=o,e[f+8>>2]=o,u[a+832|0]&&(e[f>>2]=Hr(2+(m+y|0)|0,a+832|0)),o=e[a+360>>2],g[f+14|0]=0,g[f+12|0]=d,g[f+13|0]=o,g[f+15|0]=e[a+356>>2],Za(P),o=e[50303],e[50303]=o+1,e[201216+(o<<2)>>2]=f):Za(P)}}else Tn(a+96|0,r,s);if(!(o=xA(i)))break}ul(e[i+8>>2]),tr(i)}pe=a+1040|0}function Ms(t,r){var s,a=0,i=0,o=0,d=0,f=0,m=0,M=0,y=0,P=0;pe=s=pe-352|0;e:if(t||(t=e[136284+(r<<4)>>2])){u[0|t]!=47&&(e[s+12>>2]=t,e[s+4>>2]=47,e[s+8>>2]=47,e[s>>2]=137584,Br(t=s+16|0,84114,s)),g[s+240|0]=0;t:{s:{if(a=qr(t,84577)){if((0|Qo(a,20))==-1)break t;if(o=fo(a),i=fo(a),f=fo(a),!((0|o)!=65537|(0|i)!=e[50754])&(0|f)==i<<1)break s;Za(a),I[s+256>>1]=u[84864]|u[84865]<<8,t=u[84852]|u[84853]<<8|u[84854]<<16|u[84855]<<24,e[s+240>>2]=u[84848]|u[84849]<<8|u[84850]<<16|u[84851]<<24,e[s+244>>2]=t,t=u[84860]|u[84861]<<8|u[84862]<<16|u[84863]<<24,e[s+248>>2]=u[84856]|u[84857]<<8|u[84858]<<16|u[84859]<<24,e[s+252>>2]=t,pe=o=pe-16|0;n:{if((a=zr(t=s+240|0))>>>0>=6&&!En(f=(t+a|0)-6|0,84274,6)){for(M=100;;){for(m=0,pe=a=pe-16|0,u[227196]||(g[227197]=gt(),g[227196]=1),P=+xe(),ve(d=P/1e3)<9223372036854776e3?(y=ve(d)>=1?~~(d>0?Ke(nt(23283064365386963e-26*d),4294967295):Ct(23283064365386963e-26*(d-+(~~d>>>0>>>0))))>>>0:0,i=~~d>>>0):(y=-2147483648,i=0),e[a>>2]=i,e[a+4>>2]=y,d=1e3*(P-(+(ps(i,y,1e3,0)>>>0)+4294967296*+(0|X)))*1e3,i=ve(d)<2147483648?~~d:-2147483648,e[a+8>>2]=i,i=f+(a>>>4|0)^K(e[a+8>>2],65537);g[f+m|0]=65+(15&i|i<<1&32),i=i>>>5|0,(0|(m=m+1|0))!=6;);if(pe=a+16|0,e[o>>2]=384,(0|(a=rl(t,194,o)))>=0)break n;if(M=M-1|0,e[56798]!=20||!M)break}ds(f,84274,6)}else e[56798]=28;a=-1}pe=o+16|0,(0|a)<0||ul(a)}if(!(a=qr(t,84577))){t=bi(0,e[56798],t);break e}}if((0|(o=ci(t)))<0){Za(a),t=bi(0,0-o|0,t);break e}if((0|Qo(a,0))==-1){r=e[56798],Za(a),t=bi(0,r,t);break e}if(!(i=Ma(e[(f=136280+(r<<4)|0)>>2],o))){Za(a),t=48;break e}if((0|Ri(i,o,a))!=(0|o)){r=e[56798],Za(a),u[s+240|0]&&SA(s+240|0),tr(i),t=bi(0,r,t);break e}Za(a),u[s+240|0]&&SA(s+240|0),e[136276+(r<<4)>>2]=(u[i+40|0]|u[i+41|0]<<8|u[i+42|0]<<16|u[i+43|0]<<24)/2,e[f>>2]=i,t=0;break e}r=e[56798],Za(a),t=bi(0,r,t)}else t=28;return pe=s+352|0,t}function Mi(t,r,s,a,i,o){var d,f=0,m=0,M=0,y=0,P=0,q=0,ae=0,de=0,ye=0,Be=0,qe=0,ot=0,pt=0,Mt=0;for(g[0|s]=1,d=1&o,pt=1,ye=-1,Be=-1,y=1,o=r;;){Mt=ot-2|0,qe=P,ae=Be;e:{t:{for(;;){if(!(q=u[0|o])){Be=ae,P=qe;break e}if(o=o+1|0,de=e[144464+(q<<2)>>2]){s:{if((0|(f=u[de+11|0]))!=1){if(16&u[de+6|0]|(0|f)!=2)break s;g[0|(P=s+y|0)]=ye,f=(0|ye)<4|(0|ae)>(0|ye),!(2&u[de+4|0])|!d|(0|ye)>=0||(g[0|P]=1),P=f?qe:y,Be=f?ae:ye,ye=-1,y=y+1|0;break t}if(!B[de+8>>1]){f=0,M=y;n:if((0|q)!=8)f=u[de+14|0],e[i>>2]&&f>>>0>=4||(ae=(0|f)<(0|ae)?ae:f,ye=f);else{for(;;){if(q=f,M=M-1|0,e[i>>2]|(0|M)<=0||(0|(de=g[0|(m=s+M|0)]))>3)break n;if(f=q+1|0,!(de>>>0<2))break}if(g[0|m]=4,qe=(0|ae)<4?M:qe,ae=(0|ae)<=4?4:ae,M>>>0<2)break n;if(de=3&(M=~q+ot|0),f=1,Mt-q>>>0>=3)for(q=-4&M,M=0;u[0|(m=s+f|0)]==4&&(g[0|m]=3),u[m+1|0]==4&&(g[m+1|0]=3),u[m+2|0]==4&&(g[m+2|0]=3),u[m+3|0]==4&&(g[m+3|0]=3),f=f+4|0,(0|q)!=(0|(M=M+4|0)););if(m=0,!de)break n;for(;u[0|(q=s+f|0)]==4&&(g[0|q]=3),f=f+1|0,(0|de)!=(0|(m=m+1|0)););}if(pt)continue;break e}}break}}Be=ae,P=qe,(0|q)==20&&(g[s+y|0]=d&&(0|ye)<0?1:ye,y=y+1|0)}if(g[0|r]=q,ot=y-1|0,r=r+1|0,pt=(0|y)<99)continue}break}g[s+y|0]=1,g[0|r]=0;e:if((0|(r=e[i>>2]))>0)Be=4,(0|r)>=(0|y)&&(e[i>>2]=ot,r=ot),g[r+s|0]=4,P=e[i>>2];else if((0|Be)==5&&(Be=4,!((0|y)<2))){if(o=1,ae=1&(r=y-1|0),(0|y)!=2)for(qe=-2&r,M=0;;){m=4;t:{s:{n:switch(u[0|(r=(f=o)+s|0)]-4|0){case 1:break s;case 0:break n;default:break t}m=2&u[t+14|0]?1:3,f=P}g[0|r]=m,P=f}m=4;t:{s:{n:switch(u[0|(r=(f=o+1|0)+s|0)]-4|0){case 1:break s;case 0:break n;default:break t}m=2&u[t+14|0]?1:3,f=P}g[0|r]=m,P=f}if(o=o+2|0,(0|qe)==(0|(M=M+2|0)))break}if(ae){m=4;t:{s:switch(u[0|(r=s+o|0)]-4|0){case 1:break t;case 0:break s;default:break e}m=2&u[t+14|0]?1:3,o=P}g[0|r]=m,P=o}}return e[i>>2]=P,e[a>>2]=y,Be}function Ma(t,r){var s,a,i=0,o=0,d=0,f=0,m=0,M=0,y=0,P=0,q=0;if(!t)return Fr(r);if(r>>>0>=4294967232)return e[56798]=48,0;s=r>>>0<11?16:r+11&-8,d=-8&(a=e[4+(f=t-8|0)>>2]);e:if(3&a){m=d+f|0;t:if(d>>>0>=s>>>0){if((o=d-s|0)>>>0<16)break t;e[f+4>>2]=1&a|s|2,e[4+(i=f+s|0)>>2]=3|o,e[m+4>>2]=1|e[m+4>>2],jr(i,o)}else if(e[57158]!=(0|m))if(e[57157]!=(0|m)){if(2&(o=e[m+4>>2])||(y=d+(-8&o)|0)>>>0<s>>>0)break e;q=y-s|0;s:if(o>>>0<=255){if(d=e[m+8>>2],i=o>>>3|0,(0|(o=e[m+12>>2]))==(0|d)){e[57152]=e[57152]&dn(-2,i);break s}e[d+12>>2]=o,e[o+8>>2]=d}else{if(P=e[m+24>>2],(0|(M=e[m+12>>2]))==(0|m))if((i=e[(d=m+20|0)>>2])||(i=e[(d=m+16|0)>>2])){for(;o=d,M=i,(i=e[(d=i+20|0)>>2])||(d=M+16|0,i=e[M+16>>2]););e[o>>2]=0}else M=0;else i=e[m+8>>2],e[i+12>>2]=M,e[M+8>>2]=i;if(P){o=e[m+28>>2];n:{if(e[(i=228912+(o<<2)|0)>>2]==(0|m)){if(e[i>>2]=M,M)break n;e[57153]=e[57153]&dn(-2,o);break s}if(e[(e[P+16>>2]==(0|m)?16:20)+P>>2]=M,!M)break s}e[M+24>>2]=P,(i=e[m+16>>2])&&(e[M+16>>2]=i,e[i+24>>2]=M),(i=e[m+20>>2])&&(e[M+20>>2]=i,e[i+24>>2]=M)}}q>>>0<=15?(e[f+4>>2]=1&a|y|2,e[4+(i=f+y|0)>>2]=1|e[i+4>>2]):(e[f+4>>2]=1&a|s|2,e[4+(o=f+s|0)>>2]=3|q,e[4+(i=f+y|0)>>2]=1|e[i+4>>2],jr(o,q))}else{if((o=d+e[57154]|0)>>>0<s>>>0)break e;(i=o-s|0)>>>0>=16?(e[f+4>>2]=1&a|s|2,e[4+(d=f+s|0)>>2]=1|i,e[(o=o+f|0)>>2]=i,e[o+4>>2]=-2&e[o+4>>2]):(e[f+4>>2]=o|1&a|2,e[4+(i=o+f|0)>>2]=1|e[i+4>>2],i=0,d=0),e[57157]=d,e[57154]=i}else{if((d=d+e[57155]|0)>>>0<=s>>>0)break e;e[f+4>>2]=1&a|s|2,i=d-s|0,e[4+(o=f+s|0)>>2]=1|i,e[57155]=i,e[57158]=o}i=f}else{if(s>>>0<256||d>>>0>=s+4>>>0&&(i=f,d-s>>>0<=e[57272]<<1>>>0))break e;i=0}return i?i+8|0:(f=Fr(r))?(ds(f,t,r>>>0>(i=(3&(i=e[t-4>>2])?-4:-8)+(-8&i)|0)>>>0?i:r),tr(t),f):0}function Jn(){var t,r,s=0,a=0;return t=On(12),e[t>>2]=22050,r=On(432),e[(a=r)+4>>2]=0,e[a+8>>2]=0,e[a>>2]=132304,e[a+32>>2]=0,e[a+12>>2]=0,e[a+16>>2]=0,e[a+20>>2]=0,e[a+24>>2]=0,wr(a+40|0,0,376),e[a+420>>2]=0,e[a+424>>2]=-1,g[a+416|0]=1,s=wr(On(408),0,408),e[a+28>>2]=s,g[s+8|0]=1,e[t+4>>2]=a,s=On(1096),e[s+8>>2]=22050,e[s+4>>2]=22050,e[s>>2]=132352,e[s+64>>2]=22050,e[s+56>>2]=0,e[s+60>>2]=0,e[s+32>>2]=0,e[s+36>>2]=0,e[s+24>>2]=22050,e[s+16>>2]=0,e[s+20>>2]=0,e[s+40>>2]=0,e[s+44>>2]=0,g[s+48|0]=0,e[s+128>>2]=0,e[s+132>>2]=0,I[s+96>>1]=0,e[s+72>>2]=22050,e[s+136>>2]=0,e[s+140>>2]=0,I[s+168>>1]=0,e[s+144>>2]=22050,e[s+200>>2]=0,e[s+204>>2]=0,e[s+208>>2]=0,e[s+212>>2]=0,e[s+216>>2]=22050,I[s+240>>1]=0,e[s+280>>2]=0,e[s+284>>2]=0,e[s+272>>2]=0,e[s+276>>2]=0,e[s+288>>2]=22050,I[s+312>>1]=0,e[s+344>>2]=0,e[s+348>>2]=0,e[s+352>>2]=0,e[s+356>>2]=0,e[s+360>>2]=22050,I[s+384>>1]=0,e[s+416>>2]=0,e[s+420>>2]=0,e[s+424>>2]=0,e[s+428>>2]=0,e[s+432>>2]=22050,I[s+456>>1]=0,e[s+488>>2]=0,e[s+492>>2]=0,e[s+496>>2]=0,e[s+500>>2]=0,e[s+504>>2]=22050,I[s+528>>1]=1,e[s+560>>2]=0,e[s+564>>2]=0,e[s+568>>2]=0,e[s+572>>2]=0,I[s+600>>1]=0,e[s+576>>2]=22050,e[s+640>>2]=0,e[s+644>>2]=0,e[s+632>>2]=0,e[s+636>>2]=0,I[s+680>>1]=0,e[s+656>>2]=22050,e[s+648>>2]=22050,e[s+720>>2]=0,e[s+724>>2]=0,e[s+712>>2]=0,e[s+716>>2]=0,I[s+752>>1]=0,e[s+728>>2]=22050,e[s+792>>2]=0,e[s+796>>2]=0,e[s+784>>2]=0,e[s+788>>2]=0,I[s+824>>1]=0,e[s+800>>2]=22050,e[s+864>>2]=0,e[s+868>>2]=0,e[s+856>>2]=0,e[s+860>>2]=0,e[s+872>>2]=22050,I[s+896>>1]=0,e[s+936>>2]=0,e[s+940>>2]=0,e[s+928>>2]=0,e[s+932>>2]=0,I[s+968>>1]=0,e[s+944>>2]=22050,e[s+1008>>2]=0,e[s+1012>>2]=0,e[s+1e3>>2]=0,e[s+1004>>2]=0,I[s+1040>>1]=0,e[s+1016>>2]=22050,e[s+1088>>2]=0,e[(a=s+1080|0)>>2]=0,e[a+4>>2]=0,e[(a=s+1072|0)>>2]=0,e[a+4>>2]=0,e[t+8>>2]=s,os[e[e[s>>2]+4>>2]](s,r),t}function $n(t,r,s){var a=0,i=0,o=0,d=0,f=0,m=0,M=0,y=0,P=0,q=0,ae=0;e:if(P=e[50759]){if(a=e[50980],i=K(a,80)+222176|0,(0|(m=(0|(i=(0|(i=(e[i+12>>2]+e[i>>2]|0)/(0|t)|0))<(0|(y=((0|K(e[50754],19))/40<<16)/(0|t)|0))?i:y))>=399?399:i))>=0&&(wr(r,0,4+(m<<2)|0),a=e[50980]),(0|a)>=0)for(q=e[50801];;){if(o=K(d,80)+222176|0,e[o+4>>2]&&(f=e[o>>2])){if(ae=f+e[o+12>>2]|0,a=1+((f-e[o+8>>2]|0)/(0|t)|0)|0,(0|f)>(0|(a=K(i=(0|a)<=1?1:a,t))))for(;e[(M=(i<<2)+r|0)>>2]=e[M>>2]+K(e[o+4>>2],u[((f-a|0)/(e[o+8>>2]>>8)|0)+q|0]),i=i+1|0,(0|f)>(0|(a=t+a|0)););if(!((0|a)>=(0|ae)))for(;e[(M=(i<<2)+r|0)>>2]=e[M>>2]+K(e[o+4>>2],u[((a-f|0)/(e[o+12>>2]>>8)|0)+q|0]),i=i+1|0,(0|ae)>(0|(a=t+a|0)););}if(!((0|(d=d+1|0))<=e[50980]))break}if(i=1,!((0|(o=65536e3/(0|t)|0))<=0||(0|(a=K(e[55565],10)))<=0))for(o=(0|a)/(0|o)|0;e[(f=(i<<2)+r|0)>>2]=e[f>>2]+a,i=i+1|0,(0|(a=a-o|0))>0;);if((0|d)<=8)for(;i=203216+(a=d<<2)|0,o=K(d,80)+222176|0,f=e[o+4>>2]>>14,e[i>>2]=(0|K(K(f,f),5))/2,s?a=e[a+203264>>2]:(f=a+203264|0,a=e[o>>2]/(0|t)|0,e[f>>2]=a),(0|a)>=(0|y)&&(e[i>>2]=0),(0|(d=d+1|0))!=9;);if(i=0,(0|m)>=0)for(a=0;o=e[(d=(a<<2)+r|0)>>2]>>15,o=K(o,o)>>8,e[d>>2]=o,(0|i)<=524287999&&(e[d>>2]=K(o,u[344+((i>>19)+P|0)|0])>>13),i=t+i|0,d=(0|a)!=(0|m),a=a+1|0,d;);if(e[r+4>>2]=(0|K(e[r+4>>2],u[203300]?6:10))/8,1&s)for(t=e[50826],a=1;;){if(e[203312+(s=a<<2)>>2]=e[r+s>>2]-e[t+s>>2]>>3,(0|(s=a+1|0))==30)break e;e[203312+(s<<=2)>>2]=e[r+s>>2]-e[t+s>>2]>>3,a=a+2|0}}else m=1;return m}function Ei(t,r,s,a){var i,o=0,d=0;pe=i=pe-176|0,g[0|t]=0,I[i+80>>1]=24320,e[i+104>>2]=0,e[i+108>>2]=0,g[82+(ia(s,o=i+80|2)+i|0)|0]=0;e:{t:{if(!a){if(a=i+80|1,e[i+12>>2]=a,ma(r,i+12|0,i+16|0,i+104|0,0,0)||(e[i+12>>2]=o,ma(r,i+12|0,i+16|0,i+104|0,0,0)||(g[i+81|0]=32,Es(r,o,i+16|0,60,0,0,0))),(s=u[i+16|0])&&(0|s)!=21)break t;s:{if(e[r+212>>2]!=25966){if(vA(85719,188772,189296),g[i+81|0]=95,e[i+12>>2]=a,ma(e[47193],i+12|0,i+16|0,i+104|0,0,0)||(e[i+12>>2]=o,ma(e[47193],i+12|0,i+16|0,i+104|0,0,0)),u[i+16|0])break s;gn(e[e[32972]+60>>2]),s=u[i+16|0]}if(255&s)break t;r=u[87124]|u[87125]<<8|u[87126]<<16|u[87127]<<24,s=u[87120]|u[87121]<<8|u[87122]<<16|u[87123]<<24,g[0|t]=s,g[t+1|0]=s>>>8,g[t+2|0]=s>>>16,g[t+3|0]=s>>>24,g[t+4|0]=r,g[t+5|0]=r>>>8,g[t+6|0]=r>>>16,g[t+7|0]=r>>>24,g[t+16|0]=u[87136],r=u[87132]|u[87133]<<8|u[87134]<<16|u[87135]<<24,s=u[87128]|u[87129]<<8|u[87130]<<16|u[87131]<<24,g[t+8|0]=s,g[t+9|0]=s>>>8,g[t+10|0]=s>>>16,g[t+11|0]=s>>>24,g[t+12|0]=r,g[t+13|0]=r>>>8,g[t+14|0]=r>>>16,g[t+15|0]=r>>>24;break e}a=i+16|0,o=i+104|0,pe=s=pe-112|0,(d=e[47193])?(ns(d,a,o,-1,0),Lr(o=a,a=s+48|0),r=e[r+212>>2],g[s+43|0]=r>>>24,g[0|(d=(o=s+43|0)+(r>>>0>16777215)|0)]=r>>>16,g[0|(d=d+!!(16711680&r)|0)]=r>>>8,g[0|(d=d+!!(65280&r)|0)]=r,g[d+!!(255&r)|0]=0,e[s+16>>2]=85719,e[s+24>>2]=o,e[s+20>>2]=a,Br(t,85662,s+16|0)):(ns(r,a,o,-1,0),Lr(a,r=s+48|0),e[s>>2]=r,Br(t,85451,s)),pe=s+112|0,gn(e[e[32972]+60>>2]);break e}if(e[i+12>>2]=o,ma(r,i+12|0,i+16|0,i+104|0,0,0),!u[i+16|0])break e}ns(s=r,r=i+16|0,i+104|0,-1,0),Lr(s=r,r=i+112|0),e[i>>2]=r,Br(t,85451,i)}return pe=i+176|0,t}function Pn(t,r){var s,a=0,i=0,o=0,d=0,f=0,m=0,M=0,y=0,P=0,q=0,ae=0,de=0,ye=0,Be=0,qe=0,ot=0,pt=0,Mt=0;if(pe=s=pe-112|0,e[s+72>>2]=-1,e[(a=s- -64|0)>>2]=-1,e[a+4>>2]=-1,e[s+56>>2]=-1,e[s+60>>2]=-1,e[s+48>>2]=-1,e[s+52>>2]=-1,e[s+40>>2]=-1,e[s+44>>2]=-1,e[s+32>>2]=-1,e[s+36>>2]=-1,e[s+24>>2]=-1,e[s+28>>2]=-1,e[s+16>>2]=-1,e[s+20>>2]=-1,(0|r)>0){for(o=e[s+72>>2],d=e[s+68>>2],f=e[s+64>>2],m=e[s+60>>2],M=e[s+56>>2],y=e[s+52>>2],P=e[s+48>>2],q=e[s+44>>2],ae=e[s+40>>2],de=e[s+36>>2],ye=e[s+32>>2],Be=e[s+28>>2],qe=e[s+24>>2],ot=e[s+20>>2],pt=e[s+16>>2];i=o,o=(0|(o=e[60+(a=134912+(Mt<<6)|0)>>2]))<0?i:o,i=d,d=(0|(d=e[a+56>>2]))<0?i:d,i=f,f=(0|(f=e[a+52>>2]))<0?i:f,i=m,m=(0|(m=e[a+48>>2]))<0?i:m,i=M,M=(0|(M=e[a+44>>2]))<0?i:M,i=y,y=(0|(y=e[a+40>>2]))<0?i:y,i=P,P=(0|(P=e[a+36>>2]))<0?i:P,i=q,q=(0|(q=e[a+32>>2]))<0?i:q,i=ae,ae=(0|(ae=e[a+28>>2]))<0?i:ae,i=de,de=(0|(de=e[a+24>>2]))<0?i:de,i=ye,ye=(0|(ye=e[a+20>>2]))<0?i:ye,i=Be,Be=(0|(Be=e[a+16>>2]))<0?i:Be,i=qe,qe=(0|(qe=e[a+12>>2]))<0?i:qe,i=ot,ot=(0|(ot=e[a+8>>2]))<0?i:ot,pt=(0|(a=e[a+4>>2]))<0?pt:a,(0|(Mt=Mt+1|0))!=(0|r););e[s+72>>2]=o,e[s+68>>2]=d,e[s+64>>2]=f,e[s+60>>2]=m,e[s+56>>2]=M,e[s+52>>2]=y,e[s+48>>2]=P,e[s+44>>2]=q,e[s+40>>2]=ae,e[s+36>>2]=de,e[s+32>>2]=ye,e[s+28>>2]=Be,e[s+24>>2]=qe,e[s+20>>2]=ot,e[s+16>>2]=pt}for(r=0;;){if((0|(a=e[(o=r<<2)+(s+16|0)>>2]))!=e[(o=o+134848|0)>>2]){g[s+80|0]=0;e:{t:switch(r-1|0){case 4:e[47201]=a-1;break e;case 5:e[47200]=a;break e;case 0:case 1:case 2:case 3:case 11:break t;default:break e}e[s+4>>2]=a,e[s>>2]=1,e[s+8>>2]=g[r+102812|0],Br(s+80|0,91942,s)}e[o>>2]=a,a=s+80|0,Hr(e[t>>2]+189424|0,a),e[t>>2]=e[t>>2]+zr(a)}if((0|(r=r+1|0))==15)break}pe=s+112|0}function Dn(t){var r,s,a,i=0,o=0,d=0,f=0;for(i=17,e[t+328>>2]=17,e[t+224>>2]=0,e[t+216>>2]=1105,e[t+220>>2]=1072,e[t+600>>2]=1056,e[t+8180>>2]=105296,d=wr(t+344|0,0,256),g[t+393|0]=1,g[t+365|0]=1,g[t+360|0]=1,g[t+545|0]=1,g[t+529|0]=1,g[t+391|0]=1,g[t+379|0]=1,g[t+374|0]=1,g[t+489|0]=1,g[t+487|0]=1,g[t+398|0]=1,g[t+387|0]=1,g[t+388|0]=2,g[t+389|0]=1,g[t+390|0]=1,g[t+385|0]=2,g[t+383|0]=2,g[t+368|0]=1,g[t+369|0]=2,o=104224;g[0|(i=i+d|0)]=4|u[0|i],i=d+u[o+1|0]|0,g[0|i]=4|u[0|i],i=d+u[o+2|0]|0,g[0|i]=4|u[0|i],i=u[0|(o=o+3|0)],(0|o)!=104251;);g[t+386|0]=8|u[t+386|0],g[t+382|0]=8|u[t+382|0],g[t+384|0]=8|u[t+384|0],g[t+369|0]=16|u[t+369|0],g[t+370|0]=16|u[t+370|0],g[t+371|0]=16|u[t+371|0],o=u[t+361|0],d=u[t+362|0],i=u[t+363|0],f=u[t+364|0],r=u[t+366|0],s=u[t+367|0],g[t+372|0]=16|u[t+372|0],g[t+373|0]=16|u[t+373|0],g[t+375|0]=16|u[t+375|0],g[t+376|0]=16|u[t+376|0],g[t+377|0]=16|u[t+377|0],g[t+378|0]=16|u[t+378|0],g[t+380|0]=16|u[t+380|0],g[t+381|0]=16|u[t+381|0],g[t+383|0]=16|u[t+383|0],g[t+385|0]=16|u[t+385|0],a=u[t+388|0],g[t+367|0]=48|s,g[t+366|0]=40|r,g[t+364|0]=48|f,g[t+363|0]=48|i,g[t+362|0]=48|d,g[t+361|0]=48|o,g[t+388|0]=80|a,o=u[t+390|0],d=u[t+391|0],i=u[t+393|0],g[t+360|0]=128|u[t+360|0],f=u[t+365|0],g[t+393|0]=192|i,g[t+365|0]=128|f,g[t+368|0]=128|u[t+368|0],g[t+374|0]=128|u[t+374|0],g[t+379|0]=128|u[t+379|0],g[t+387|0]=128|u[t+387|0],i=u[t+389|0],g[t+391|0]=192|d,g[t+390|0]=192|o,g[t+389|0]=128|i,g[t+529|0]=128|u[t+529|0],g[t+545|0]=128|u[t+545|0],g[t+489|0]=128|u[t+489|0],g[t+487|0]=128|u[t+487|0],g[t+398|0]=128|u[t+398|0]}function ma(t,r,s,a,i,o){var d,f=0,m=0,M=0,y=0,P=0,q=0;pe=d=pe-192|0,f=P=e[r>>2];e:{t:{for(;m=1,(0|(M=g[0|f]))>=0||(m=2,M>>>0<4294967264||(m=M>>>0<4294967280?3:4)),!(u[0|(M=m+f|0)]!=32|u[M+1|0]!=46);){if(y-160>>>0<4294967135)break t;ds((q=d+32|0)+y|0,f,m),g[(m=m+y|0)+q|0]=46,f=M+3|0,y=m+1|0}if(y){for(m=0;M=m,m=m+1|0,223&u[f+M|0];);if(!(1+(q=M+y|0)>>>0>160)&&(ds((m=d+32|0)+y|0,f,M),g[m+q|0]=0,ln(t,m,f,s,a,i,o))){e[a>>2]=128|e[a>>2],e[33264]=y,t=1;break e}}}for(f=0;;){if(P=(m=P)+1|0,223&(m=u[0|m]))if(!f|(0|m)!=46|g[31+(f+d|0)|0]-48>>>0>=10){if(g[(d+32|0)+f|0]=m,m=159,(0|(f=f+1|0))!=159)continue}else m=f;else m=f;break}g[(f=d+32|0)+m|0]=0,f=ln(t,f,P,s,a,i,o);t:if(8&u[a+3|0]){if(!Ta(s,M=t+268|0)){if(M=e[t+288>>2]+1|0,e[t+288>>2]=M,(0|M)<4)break t;g[0|s]=0;break t}na(M,s,20),e[t+288>>2]=1}else e[t+288>>2]=0;t:{if(!f){if(f=0,8&u[a+5|0]&&(M=Ir(d+28|0,f=d+32|u[d+32|0]==95),qt(t,e[d+28>>2],s),f=f+M|0),!(m>>>0<2|f)){if(g[0|s]=0,!(16&i&&u[0|(f=31+(m+d|0)|0)]==101)&&(!(4096&i)||u[0|(f=(m=(d+32|0)+m|0)-1|0)]!=u[m-2|0]))break t;g[0|f]=0,f=ln(t,d+32|0,P,s,a,i,o)}if(!f)break t}if(y=e[a>>2],u[t+172|0]&&(y^=536870912,e[a>>2]=y),t=1,!(536870912&y))break e;2&i&&(I[66448]=8192,e[d+16>>2]=s,Br(132898,87470,d+16|0),t=e[r>>2],e[r>>2]=132898,8&u[188788]&&(ds(r=d+32|0,a=t,t=f-t|0),g[t+r|0]=0,e[d+4>>2]=132898,t=e[47195],e[d>>2]=r,ba(t,87652,d)))}g[0|s]=0,t=0}return pe=d+192|0,t}function Bi(t,r){var s=0,a=0,i=0;s=31&t;e:{t:{s:{if((0|(t&=96))==96)t=-1;else{if((0|t)!=64)break s;t=1}if(s>>>0>=15)break e;r=e[203136+(s<<2)>>2]+K(t,r)|0;break t}if(s>>>0>=15)break e}t=e[105616+(a=s<<2)>>2],e[a+203136>>2]=(0|r)>=0?(0|t)>(0|r)?r:t:0}e:{t:{s:{n:{i:switch(s-1|0){case 5:if(!(t=e[50759]))break t;e[54728]=e[50982],r=e[50979],s=e[50978],wr(205184,0,11e3),e[51293]=0,r=(s=(i=(0|(a=e[50789]))>0)?130:(0|s)>=5499?5499:s)?i?a:(0|r)>=100?100:r:0,e[50755]=r,s=(0|K(s,e[50754]))/1e3|0,e[51292]=s,e[54729]=(0|r)>20?s<<1:r?s:0,e[33037]=(0|K(500-r|0,(0|K(u[e[50797]+105596|0],(0|K(e[50787],55))/100|0))/16|0))/500;break n;case 0:break i;case 2:case 12:break e;case 4:break s;default:break t}if(!(t=e[50759]))break t}return r=256,(0|(s=(0|(s=e[50785]))>=101?101:s))>=51&&(r=256+(((K(s,25)-1250&65535)>>>0)/50|0)|0),I[t+164>>1]=(0|K(I[t+236>>1],r))/256,I[t+166>>1]=(0|K(I[t+238>>1],r))/256,I[t+168>>1]=(0|K(I[t+240>>1],r))/256,I[t+170>>1]=(0|K(I[t+242>>1],r))/256,I[t+172>>1]=(0|K(I[t+244>>1],r))/256,I[t+174>>1]=(0|K(I[t+246>>1],r))/256,t=e[50790],I[102e3]=(0|K(I[102036],K(t,-3)+256|0))/256,void(I[101999]=(0|K(I[102035],K(t,-6)+256|0))/256)}e[50759]&&(e[54728]=e[50982],t=e[50979],r=e[50978],wr(205184,0,11e3),e[51293]=0,t=(r=(a=(0|(s=e[50789]))>0)?130:(0|r)>=5499?5499:r)?a?s:(0|t)>=100?100:t:0,e[50755]=t,r=(0|K(r,e[50754]))/1e3|0,e[51292]=r,e[54729]=(0|t)>20?r<<1:t?r:0,e[33037]=(0|K(500-t|0,(0|K(u[e[50797]+105596|0],(0|K(e[50787],55))/100|0))/16|0))/500)}return}e[33037]=(0|K(u[e[50797]+105596|0],(0|K(e[50787],55))/100|0))/16}function Vn(t,r,s){var a=0,i=0,o=0,d=0,f=0,m=0,M=0,y=0,P=0,q=0;s&&(e[s>>2]=0);e:{t:if(!((0|(a=g[0|t]))<0)){for(;;){if((0|(o=255&a))==32|o-9>>>0<5){if((0|(a=g[0|(t=t+1|0)]))>=0)continue;break t}break}if(!(255&a))break e}for(;;){if((0|(a=m=255&a))==32|a-9>>>0<5)break e;if((0|m)!=124||(0|(a=u[0|(o=t+1|0)]))==124){t:{if((0|(P=e[36115]))>=2){for(a=1,o=-1,M=0;;){s:if(!(!(y=e[144464+(a<<2)>>2])|u[y+11|0]==15)){f=e[y>>2];n:{i:{if(m>>>0>=33){if(q=0,d=0,(255&f)==(0|m)&&(d=1,(i=u[t+1|0])>>>0<33|(0|i)!=(f>>>8&255)||(d=2,(i=u[t+2|0])>>>0<33|(0|i)!=(f>>>16&255)||(d=(i=(i=u[t+3|0])>>>0>32&(0|i)==(f>>>24|0))?4:3,q=0-i|0))),(0|o)>=(0|d))break s;if(i=4,!(1&q))break i;break n}if(d=0,(0|o)>=0)break s}if(f>>>((i=d)<<3)&255)break s}M=u[y+10|0],o=i}if((0|P)==(0|(a=a+1|0)))break}if(M)break t}return s&&Ir(s,t),void(g[0|r]=0)}g[0|r]=M,t=((0|o)<=1?1:o)+t|0,r=o=r+1|0;t:if((0|M)==21){s:if((0|(i=u[0|t]))==32|i-9>>>0<5)a=o;else if(a=o,i)for(;;){if(g[0|a]=Fs(i),a=a+1|0,(0|(i=u[0|(t=t+1|0)]))==32|i-9>>>0<5)break s;if(!i)break}if(g[0|a]=0,!i){if(r=a,Ta(o,85593))break t;return void(g[0|o]=0)}g[0|a]=124,r=a+1|0}a=u[0|t]}else t=o;if(!(255&a))break}}g[0|r]=0}function Sn(t,r){var s=0,a=0,i=0,o=0,d=0;e:{t:{s:{n:{i:switch((0|(s=e[t+4>>2]))==e[t+104>>2]?s=Pt(t):(e[t+4>>2]=s+1,s=u[0|s]),s-43|0){case 0:case 2:break i;default:break n}if(o=(0|s)==45,d=!r,(0|(s=e[t+4>>2]))==e[t+104>>2]?s=Pt(t):(e[t+4>>2]=s+1,s=u[0|s]),d|(r=s-58|0)>>>0>4294967285)break s;if(e[t+116>>2]<0)break t;e[t+4>>2]=e[t+4>>2]-1;break t}r=s-58|0}if(!(r>>>0<4294967286)){if((r=s-48|0)>>>0<10){for(;i=(0|(a=(a=K(a,10)+s|0)-48|0))<214748364,(0|(r=e[t+4>>2]))==e[t+104>>2]?s=Pt(t):(e[t+4>>2]=r+1,s=u[0|r]),i&(r=s-48|0)>>>0<=9;);i=a>>31}s:if(!(r>>>0>=10))for(;;){if(r=(a=ps(a,i,10,0))+s|0,s=X,s=r>>>0<a>>>0?s+1|0:s,a=r-48|0,i=s-(r>>>0<48)|0,(0|(r=e[t+4>>2]))==e[t+104>>2]?s=Pt(t):(e[t+4>>2]=r+1,s=u[0|r]),(r=s-48|0)>>>0>9)break s;if(!(a>>>0<2061584302&(0|i)<=21474836|(0|i)<21474836))break}if(r>>>0<10)for(;(0|(r=e[t+4>>2]))==e[t+104>>2]?r=Pt(t):(e[t+4>>2]=r+1,r=u[0|r]),r-48>>>0<10;);(0|(r=e[t+116>>2]))>0|(0|r)>=0&&(e[t+4>>2]=e[t+4>>2]-1),t=a,a=o?0-t|0:t,i=o?0-(!!(0|t)+i|0)|0:i;break e}}if(i=-2147483648,!(e[t+116>>2]<0))return e[t+4>>2]=e[t+4>>2]-1,X=-2147483648,0}return X=i,a}function cn(t){var r=0,s=0,a=0,i=0;if(e[36432]=110,e[36433]=100,e[36434]=450,e[36430]=5,r=e[203136+((0|t)==2?32:8)>>2],a=e[32972],(0|(s=e[a+84>>2]))>0&&(r=(0|K(r,s))/100|0),s=(0|r)>=359?359:r,s=(0|(r=(0|r)>=450?450:r))>399?6:(0|r)>379?7:u[((0|s)<=80?80:s)+101856|0],1&t&&(e[32526]=(0|K(s,e[a+72>>2]))/256,e[32527]=(0|K(s,e[a+76>>2]))/256,e[32528]=(0|K(s,e[a+80>>2]))/256,s>>>0>7||(i=s-1|0,e[32528]=i,e[32526]=s,e[32527]=i)),2&t){t=e[a+72>>2];e:{t:{s:{n:{i:{c:{A:{d:{if((0|r)>=351)a=r-350|0,e[36432]=85-(((255&a)>>>0)/3|0)&255,a=60-(a>>>3|0)|0;else{if((0|r)<251)break d;a=r-250|0,e[36432]=110-(a>>>2|0),a=110-(a>>>1|0)|0}if(e[36433]=a,t=(0|K(t,s))/256|0,e[36431]=110+((0|K(t,150))/128|0),r>>>0<=349)break A;if(s=r-350|0,e[36431]=u[s+102224|0],r>>>0<390)break i;if(e[36434]=450+((r+112<<24>>24)/-2<<24>>24),r>>>0<441)break c;e[36434]=860-r,t=12;break t}t=(0|K(t,s))/256|0,e[36431]=(0|r)>=170?110+((0|K(t,150))/128|0)|0:128+((t<<7)/130|0)|0}t=(t<<8)/115|0;break t}if(t=12,r>>>0>430)break t;if(t=13,r>>>0<=400)break n;break t}if(t=(t<<8)/115|0,e[36428]=t,r>>>0<375)break s}t=14;break t}if((0|r)<351)break e;t=u[s+102336|0]}e[36428]=t}e[36429]=(0|t)<=16?16:t}}function ei(t,r,s){var a,i,o,d;a=.000244140625*+e[50767],G[s>>3]=a,G[s+40>>3]=.015625*+e[t+112>>2],G[s+48>>3]=.015625*+e[t+276>>2],G[s+56>>3]=.00390625*+(0|K(I[t+166>>1],I[r+4>>1]))+ +I[t+220>>1],G[s+64>>3]=.00390625*+(0|K(I[t+168>>1],I[r+6>>1]))+ +I[t+222>>1],G[s+72>>3]=.00390625*+(0|K(I[t+170>>1],I[r+8>>1]))+ +I[t+224>>1],G[s+80>>3]=.00390625*+(0|K(I[t+172>>1],I[r+10>>1]))+ +I[t+226>>1],G[s+88>>3]=.00390625*+(0|K(I[t+174>>1],I[r+12>>1]))+ +I[t+228>>1],i=I[t+230>>1],o=I[t+176>>1],d=I[r+14>>1],e[s+112>>2]=0,e[s+116>>2]=1080623104,e[s+104>>2]=0,e[s+108>>2]=1081032704,G[s+96>>3]=.00390625*+(0|K(o,d))+ +(0|i),u[r+40|0]?(e[s+184>>2]=0,e[s+188>>2]=1072693248,G[s+104>>3]=u[r+40|0]<<1):(e[s+184>>2]=0,e[s+188>>2]=0),G[s+120>>3]=.00390625*+I[t+202>>1]*+(u[r+35|0]<<1),G[s+128>>3]=.00390625*+I[t+204>>1]*+(u[r+36|0]<<1),G[s+136>>3]=.00390625*+I[t+206>>1]*+(u[r+37|0]<<1),r=u[r+38|0],t=I[t+208>>1],e[s+176>>2]=0,e[s+180>>2]=1079574528,e[s+160>>2]=0,e[s+164>>2]=1083129856,e[s+152>>2]=0,e[s+156>>2]=1083129856,e[s+352>>2]=0,e[s+356>>2]=1072693248,e[s+168>>2]=0,e[s+172>>2]=1079574528,G[s+144>>3]=.00390625*+(0|t)*+(r<<1),t=e[50779],G[s+368>>3]=a,G[s+360>>3]=+(0|t)/100*3}function ti(t){var r=0;fe(t,or(t));e:{t:{s:{n:{i:{c:{A:{d:{l:{o:{if((0|(t=-1048576&X))<268435455|(0|t)<=268435455){p:{b:{if((0|t)<33554431|(0|t)<=33554431){if((0|t)<8388607|(0|t)<=8388607){if(r=524328,!0&(0|t)==-2147483648)break e;if(0|(0|t)!=-2143289344)break t;return 557096}if(!0&(0|t)==8388608)break b;if(0|(0|t)!=16777216)break t;return 524358}if((0|t)>71303167)break p;if(!0&(0|t)==33554432)break s;if(0|(0|t)!=67108864)break t}return 266270}if(!0&(0|t)==71303168)break o;if(!0&(0|t)==134217728)break n;if(0|(0|t)!=138412032)break t;return 294942}if((0|t)<542113791|(0|t)<=542113791){if((0|t)<536870911|(0|t)<=536870911){if(!0&(0|t)==268435456)break i;if(0|(0|t)!=272629760)break t;return 299028}if(!0&(0|t)==536870912)break A;if(!0&(0|t)==538968064)break c;if(0|(0|t)!=541065216)break t;return 569389}if((0|t)<1075838975|(0|t)<=1075838975){if(!0&(0|t)==542113792)break o;if(0|(0|t)!=1073741824)break t;return 532520}if(!0&(0|t)==1075838976)break d;if(!0&(0|t)==1077936128)break l;if(0|(0|t)!=1078984704)break t}return 299038}return 565288}return 1581096}return 536621}return 1585197}return 266260}return 262174}return 2396190}r=16384}return r}function ri(t,r,s,a,i,o){var d,f,m=0,M=0,y=0,P=0;if(f=8388607&t,M=e[34456],m=u[0|(t=f+M|0)]|u[t+1|0]<<8){d=!(y=u[t+2|0]),t=e[36434]<<d,(0|s)<=0?s=m:(s=(0|K(e[50754],s))/1e3<<d,t=(0|t)<(0|(P=(0|K(s,t))/(0|m)|0))?P:t),i=(0|i)>0?(0|K(s,i))/256|0:s,s=(0|K(i,e[36431]))/256|0,s=(0|t)<(0|(s=(4&a)>>>2|0&&(0|s)>(0|i)?i:s))?s:t,y||(m=m>>>1|0,s=(0|s)/2|0);e:if(!((0|o)<0)){if(a=f+4|0,256&r)t=e[50758],e[36439]=t,e[(r=216192+(t<<4)|0)>>2]=7,e[r+8>>2]=a+M,e[r+4>>2]=m<<16|s,o=y|o<<8;else{if(t=e[50758],e[36439]=t,e[(t=216192+(t<<4)|0)>>2]=6,o=y|o<<8,e[t+12>>2]=o,e[t+8>>2]=a+M,M=t,t=K(r=m>>>2|0,3),i=(0|s)>(0|m),e[M+4>>2]=i?t:s,M=e[50758]+1|0,e[50758]=(0|M)<=169?M:0,(0|t)<(0|(s=i?s-t|0:0)))for(i=r<<1,y=a+(y?r:i)|0;r=e[50758],e[36439]=r,e[(r=216192+(r<<4)|0)>>2]=6,e[r+4>>2]=i,e[r+12>>2]=o,e[r+8>>2]=y+e[34456],r=e[50758]+1|0,e[50758]=(0|r)<=169?r:0,(0|t)<(0|(s=s-i|0)););if((0|s)<=0)break e;t=e[50758],e[36439]=t,e[(r=216192+(t<<4)|0)>>2]=6,e[r+4>>2]=s,e[r+8>>2]=e[34456]+(a+(m-s<<d)|0)}e[12+(216192+(t<<4)|0)>>2]=o,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0}}}function ds(t,r,s){var a,i=0,o=0;if(s>>>0>=512)return _t(0|t,0|r,0|s),t;a=t+s|0;e:if(3&(t^r))if(a>>>0<4)s=t;else if((i=a-4|0)>>>0<t>>>0)s=t;else for(s=t;g[0|s]=u[0|r],g[s+1|0]=u[r+1|0],g[s+2|0]=u[r+2|0],g[s+3|0]=u[r+3|0],r=r+4|0,i>>>0>=(s=s+4|0)>>>0;);else{t:if(3&t)if(s)for(s=t;;){if(g[0|s]=u[0|r],r=r+1|0,!(3&(s=s+1|0)))break t;if(!(s>>>0<a>>>0))break}else s=t;else s=t;if(!((i=-4&a)>>>0<64||(o=i+-64|0)>>>0<s>>>0))for(;e[s>>2]=e[r>>2],e[s+4>>2]=e[r+4>>2],e[s+8>>2]=e[r+8>>2],e[s+12>>2]=e[r+12>>2],e[s+16>>2]=e[r+16>>2],e[s+20>>2]=e[r+20>>2],e[s+24>>2]=e[r+24>>2],e[s+28>>2]=e[r+28>>2],e[s+32>>2]=e[r+32>>2],e[s+36>>2]=e[r+36>>2],e[s+40>>2]=e[r+40>>2],e[s+44>>2]=e[r+44>>2],e[s+48>>2]=e[r+48>>2],e[s+52>>2]=e[r+52>>2],e[s+56>>2]=e[r+56>>2],e[s+60>>2]=e[r+60>>2],r=r- -64|0,o>>>0>=(s=s- -64|0)>>>0;);if(s>>>0>=i>>>0)break e;for(;e[s>>2]=e[r>>2],r=r+4|0,i>>>0>(s=s+4|0)>>>0;);}if(s>>>0<a>>>0)for(;g[0|s]=u[0|r],r=r+1|0,(0|a)!=(0|(s=s+1|0)););return t}function ys(t){var r=0,s=0,a=0,i=0,o=0,d=0,f=0,m=0;oe(+t),r=0|R(1),R(0);e:{if((a=(r=r>>>20&2047)-969|0)>>>0<63)m=r;else{if((0|a)<0)return t+1;if(!(r>>>0<1033)){if(oe(+t),a=0|R(1),s=0,!(0|R(0))&(0|a)==-1048576)break e;return r>>>0>=2047?t+1:(0|a)<0?(G[8+(r=pe-16|0)>>3]=12882297539194267e-247,12882297539194267e-247*G[r+8>>3]):(G[8+(r=pe-16|0)>>3]=3105036184601418e216,3105036184601418e216*G[r+8>>3])}}if(s=G[14409],o=(s=(t=(s=(i=G[14408]*t+s)-s)*G[14411]+(s*G[14410]+t))*t)*s*(t*G[14415]+G[14414]),s*=t*G[14413]+G[14412],oe(+i),R(1),f=0|R(0),t=o+(s+(G[115376+(a=f<<4&2032)>>3]+t)),d=e[(a=a+115384|0)>>2],r=(f<<13)+(r=e[a+4>>2])|0,r=(a=(a=d)+(d=0)|0)>>>0<d>>>0?r+1|0:r,!m)return-2147483648&f?(Q(0,0|a),Q(1,r+1071644672|0),(t=(i=(s=+J())*t)+s)<1&&(e[8+(r=pe-16|0)>>2]=0,e[r+12>>2]=1048576,G[r+8>>3]=22250738585072014e-324*G[r+8>>3],t=(t=(o=t+1)+(i+(s-t)+(t+(1-o)))+-1)==0?0:t),t*=22250738585072014e-324):(Q(0,0|a),Q(1,r-1058013184|0),t=5486124068793689e288*((s=+J())*t+s)),t;Q(0,0|a),Q(1,0|r),s=(s=+J())*t+s}return s}function qr(t,r){var s,a=0,i=0,o=0,d=0;pe=s=pe-16|0;e:{if(di(84270,g[0|r])){if(i=2,di(r,43)||(i=u[0|r]!=114),i=di(r,120)?128|i:i,o=i=di(r,101)?524288|i:i,d=64|i,o=(0|(i=u[0|r]))==114?o:d,o=(0|i)==119?512|o:o,e[s>>2]=438,e[s+4>>2]=0,(t=0|Se(-100,0|t,32768|((0|i)==97?1024|o:o),0|s))>>>0>=4294963201&&(e[56798]=0-t,t=-1),(0|t)<0)break e;pe=i=pe-32|0;t:{s:{if(di(84270,g[0|r])){if(a=Fr(1176))break s}else e[56798]=28;r=0;break t}wr(a,0,144),di(r,43)||(e[a>>2]=u[0|r]==114?8:4),u[0|r]==97?(1024&(r=0|ze(0|t,3,0))||(r|=1024,e[i+16>>2]=r,e[i+20>>2]=r>>31,ze(0|t,4,i+16|0)),r=128|e[a>>2],e[a>>2]=r):r=e[a>>2],e[a+80>>2]=-1,e[a+48>>2]=1024,e[a+60>>2]=t,e[a+44>>2]=a+152,8&r||(e[i>>2]=i+24,e[i+4>>2]=0,0|ft(0|t,21523,0|i)||(e[a+80>>2]=10)),e[a+40>>2]=10,e[a+36>>2]=11,e[a+32>>2]=12,e[a+12>>2]=13,u[227205]||(e[a+76>>2]=-1),e[a+56>>2]=e[56816],(r=e[56816])&&(e[r+52>>2]=a),e[56816]=a,r=a}if(pe=i+32|0,a=r)break e;ht(0|t)}else e[56798]=28;a=0}return pe=s+16|0,a}function pi(t,r,s){var a,i=0,o=0,d=0,f=0,m=0;if(d=t,pe=a=pe-208|0,e[a+8>>2]=1,e[a+12>>2]=0,f=r<<2){for(e[a+16>>2]=4,e[a+20>>2]=4,r=4,i=4,o=2;t=r,r=(i+4|0)+r|0,e[(a+16|0)+(o<<2)>>2]=r,o=o+1|0,i=t,r>>>0<f>>>0;);if((t=(d+f|0)-4|0)>>>0<=d>>>0)o=0,r=1,t=0;else{for(o=1,r=1;3&~o?(ue[(a+16|0)+((i=r-1|0)<<2)>>2]>=t-d>>>0?Js(d,s,a+8|0,r,0,a+16|0):$A(d,s,r,a+16|0),(0|r)!=1?(aA(a+8|0,i),r=1):(aA(a+8|0,1),r=0)):($A(d,s,r,a+16|0),go(a+8|0,2),r=r+2|0),o=1|(i=e[a+8>>2]),e[a+8>>2]=o,t>>>0>(d=d+4|0)>>>0;);o=i>>>0>1,t=e[a+12>>2]!=0}if(Js(d,s,a+8|0,r,0,a+16|0),o|(0|r)!=1|t)for(;(0|r)<=1?(go(i=a+8|0,t=eA(i)),o=e[a+8>>2],t=t+r|0):(aA(i=a+8|0,2),e[a+8>>2]=7^e[a+8>>2],go(i,1),Js((m=d-4|0)-e[(f=a+16|0)+((t=r-2|0)<<2)>>2]|0,s,i,r-1|0,1,f),aA(i,1),o=1|e[a+8>>2],e[a+8>>2]=o,Js(m,s,i,t,1,f)),r=t,d=d-4|0,e[a+12>>2]|(0|r)!=1|(0|o)!=1;);}pe=a+208|0}function Ai(t,r,s,a){var i,o=0,d=0,f=0;pe=i=pe-32|0,f=o=2147483647&a,d=o-1006698496|0;e:if(0|(o=o-1140785152|0)>>>0>d>>>0){if(o=s<<4|r>>>28,s=a<<4|s>>>28,(0|(r&=268435455))==134217728&!!(0|t)|r>>>0>134217728){d=s+1073741824|0,d=(o=o+1|0)?d:d+1|0;break e}if(d=s+1073741824|0,t|(0|r)!=134217728)break e;d=(t=1&o)>>>0>(o=t+o|0)>>>0?d+1|0:d}else(!s&(0|f)==2147418112?!(t|r):f>>>0<2147418112)?(o=0,d=2146435072,f>>>0>1140785151||(d=0,(f=f>>>16|0)>>>0<15249||(Sa(i+16|0,t,r,s,o=65535&a|65536,f-15233|0),cs(i,t,r,s,o,15361-f|0),o=(r=e[i+8>>2])<<4,r=e[i+12>>2]<<4|r>>>28,s=e[i>>2],f=d=e[i+4>>2],o|=d>>>28,d=r,(0|(t=268435455&f))==134217728&!!(0|(r=s|!!(e[i+16>>2]|e[i+24>>2]|e[i+20>>2]|e[i+28>>2])))|t>>>0>134217728?d=(o=o+1|0)?d:d+1|0:r|(0|t)!=134217728||(d=(t=o)>>>0>(o=o+(1&o)|0)>>>0?d+1|0:d)))):(o=s<<4|r>>>28,d=524287&(t=a<<4|s>>>28)|2146959360);return pe=i+32|0,Q(0,0|o),Q(1,-2147483648&a|d),+J()}function hi(t){var r,s=0,a=0,i=0,o=0,d=0;if(oe(+t),d=0|R(1),i=0|R(0),(0|(o=d>>>20&2047))==2047)return(t*=1)/t;if(!(a=i<<1)&(0|(s=d<<1|i>>>31))==2145386496|s>>>0<2145386496)return!a&(0|s)==2145386496?0*t:t;if(o)s=1048575&d|1048576;else{if(o=0,a=i<<12,(0|(s=d<<12|i>>>20))>0|(0|s)>=0)for(;o=o-1|0,s=s<<1|a>>>31,a<<=1,(0|s)>0|(0|s)>=0;);a=31&(s=1-o|0),(63&s)>>>0>=32?(s=i<<a,i=0):(s=(1<<a)-1&i>>>32-a|d<<a,i<<=a)}if(a=i,(0|o)>1023){for(;;){if(!((0|(i=s+-1048576|0))<0||(s=i)|a))return 0*t;if(s=s<<1|a>>>31,a<<=1,!((0|(o=o-1|0))>1023))break}o=1023}if(!((0|(i=s+-1048576|0))<0||(s=i)|a))return 0*t;if((0|s)==1048575|s>>>0<1048575)for(;o=o-1|0,i=s>>>0<524288,s=s<<1|a>>>31,a<<=1,i;);return r=-2147483648&d,(0|o)>0?s=s+-1048576|o<<20:(i=1-o|0,d=s,o=a,a=31&i,(63&i)>>>0>=32?(s=0,a=d>>>a|0):(s=d>>>a|0,a=((1<<a)-1&d)<<32-a|o>>>a)),Q(0,0|a),Q(1,s|r),+J()}function Wn(t,r,s,a,i){var o,d=0,f=0;pe=o=pe-160|0;e:{t:{s:{n:switch((d=u[r+10|0])-15|0){case 6:break s;case 0:break n;default:break t}g[0|t]=0;break e}e[o>>2]=K(u[s+7|0],44)+137856,Br(t,86002,o),t=zr(t)+t|0;break e}if(a){if(g[o+140|0]=0,s?Cs(0,0,s,o+8|0,0):Po(d,o+8|0),s=o+140|0,d=u[o+140|0]){if((0|d)==32){g[0|t]=0;break e}224&(d=d<<24>>24)||(i&&(e[i>>2]=d),s=o+141|0)}if(!((0|(i=zr(s)))<=0)){t=Hr(t,s)+i|0,g[0|t]=0;break e}}i=0;t:if(!(!(s=255&(d=e[r>>2]))|(0|s)==47)){if(a){if((0|(f=255&d))==95)break t;s:{n:{if((0|f)==35){if(f=3,u[r+11|0]!=2)break n;break t}if((f=s-32|0)>>>0>95)break s}s=B[93952+(f<<1)>>1]}i=ia(s,t)}else g[0|t]=d,i=1;for(;;){if(!(s=255&(d>>=8))|(0|s)==47)break t;if(a){if((0|s)==35&u[r+11|0]==2)break t;if(s-48>>>0<10)continue;(f=s-32|0)>>>0<=95&&(s=B[93952+(f<<1)>>1]),i=ia(s,t+i|0)+i|0}else g[t+i|0]=d,i=i+1|0}}g[0|(t=t+i|0)]=0}return pe=o+160|0,t}function Gn(t){var r,s=0;r=t,s=131280;e:{t:{if(!((0|t)<=1023||(s=131300,t>>>0<1328||(s=131320,t>>>0<1424||(s=131340,t>>>0<1536||(s=131360,t>>>0<1792||(s=131380,t>>>0<1872||(s=131400,t>>>0<2432||(s=131420,t>>>0<2560||(s=131440,t>>>0<2688||(s=131460,t>>>0<2816||(s=131480,t>>>0<2944||(s=131500,t>>>0<3072||(s=131520,t>>>0<3200||(s=131540,t>>>0<3328||(s=131560,t>>>0<3456||(s=131580,t>>>0<3584||(s=131600,t>>>0<3712||(s=131620,t>>>0<3840||(s=131640,t>>>0<4096||(s=131660,t>>>0<4256||(s=131680,t>>>0<4352||(s=131700,t>>>0<4608||(s=131720,t>>>0<5024||(s=131740,t>>>0<10496||(s=131760,t>>>0<12544||(s=131780,t>>>0<40960))))))))))))))))))))))))))){if(t>>>0>=55296)break t;s=131800}if((0|r)>=B[(t=s)+8>>1])break e}t=0}return t}function qt(t,r,s){var a,i=0,o=0,d=0,f=0;pe=a=pe-208|0,g[a+80|0]=0;e:{if((i=r-224|0)>>>0<=158)r=101072+(i<<1)|0;else{if((r=r-592|0)>>>0>88)break e;r=101392+(r<<1)|0}if(r=B[r>>1]){if(d=r<<16>>16,f=(i=63&r)>>>0>37?i+59|0:I[101584+(i<<1)>>1],i=r>>>6|0,(0|d)<0)i=59+(63&i)|0,r=r>>>12&7;else{if(!(o=31&i))break e;i=0,r=r>>>11&15}(o=Nr(t,e[129920+(o<<3)>>2],a+112|0))&&il(t,f,a+176|0)&&(r&&4096&Nr(t,e[129920+(r<<3)>>2],a+80|0)&&(s=zr(r=Hr(s,a+80|0)),g[a+80|0]=0,s=r+s|0),i?(il(r=t,i,t=a+144|0),e[a+68>>2]=a+80,e[a- -64>>2]=t,e[a+60>>2]=6,e[a+52>>2]=23,e[a+56>>2]=a+176,e[a+48>>2]=a+112,Br(s,84101,a+48|0)):(0|d)<0?Hr(s,a+176|0):1&e[t+144>>2]|4096&o?(e[a+36>>2]=23,e[a+40>>2]=6,e[a+44>>2]=a+176,e[a+32>>2]=a+112,Br(s,84430,a+32|0)):(e[a+16>>2]=23,e[a+8>>2]=23,e[a>>2]=4,e[a+12>>2]=a+112,e[a+4>>2]=a+176,Br(s,84802,a)))}}pe=a+208|0}function Qe(){Fo(),e[55928]=0,e[55926]=0,e[55927]=0,e[55924]=0,e[56244]=0,e[56245]=0,e[56246]=0,e[56247]=0,e[56260]=0,e[56261]=0,e[56262]=0,e[56263]=0,e[56276]=0,e[56277]=0,e[56278]=0,e[56279]=0,e[55974]=0,e[55975]=0,e[55972]=0,e[55973]=0,e[55988]=0,e[55989]=0,e[55990]=0,e[55991]=0,e[56004]=0,e[56005]=0,e[56006]=0,e[56007]=0,e[56020]=0,e[56021]=0,e[56022]=0,e[56023]=0,e[56036]=0,e[56037]=0,e[56038]=0,e[56039]=0,e[56052]=0,e[56053]=0,e[56054]=0,e[56055]=0,e[56068]=0,e[56069]=0,e[56070]=0,e[56071]=0,e[56086]=0,e[56087]=0,e[56084]=0,e[56085]=0,e[56102]=0,e[56103]=0,e[56100]=0,e[56101]=0,e[56118]=0,e[56119]=0,e[56116]=0,e[56117]=0,e[56134]=0,e[56135]=0,e[56132]=0,e[56133]=0,e[56150]=0,e[56151]=0,e[56148]=0,e[56149]=0,e[56166]=0,e[56167]=0,e[56164]=0,e[56165]=0,e[56182]=0,e[56183]=0,e[56180]=0,e[56181]=0,e[56198]=0,e[56199]=0,e[56196]=0,e[56197]=0,e[56214]=0,e[56215]=0,e[56212]=0,e[56213]=0,e[56230]=0,e[56231]=0,e[56228]=0,e[56229]=0}function ut(t,r){var s=0,a=0,i=0,o=0,d=0,f=0,m=0,M=0,y=0,P=0;e:{if((0|(o=e[t+4>>2]))==e[t>>2])if((d=e[t+8>>2])>>>0<(s=e[t+12>>2])>>>0)s=(i=(1+(s-d>>2)|0)/2<<2)+d|0,(0|o)!=(0|d)&&(ir(s=s-(a=d-o|0)|0,o,a),o=e[t+8>>2]),e[t+4>>2]=s,e[t+8>>2]=i+o;else{if((a=(0|s)==(0|o)?1:s-o>>1)>>>0>=1073741824)break e;if(y=(m=On(s=a<<2))+s|0,f=s=(a+3&-4)+m|0,(0|o)!=(0|d)){if(P=-4&(d=d-o|0),i=s,a=o,d=1+((M=d-4|0)>>>2|0)&7)for(f=0;e[i>>2]=e[a>>2],a=a+4|0,i=i+4|0,(0|d)!=(0|(f=f+1|0)););if(f=s+P|0,!(M>>>0<28))for(;e[i>>2]=e[a>>2],e[i+4>>2]=e[a+4>>2],e[i+8>>2]=e[a+8>>2],e[i+12>>2]=e[a+12>>2],e[i+16>>2]=e[a+16>>2],e[i+20>>2]=e[a+20>>2],e[i+24>>2]=e[a+24>>2],e[i+28>>2]=e[a+28>>2],a=a+32|0,(0|f)!=(0|(i=i+32|0)););}e[t+12>>2]=y,e[t+8>>2]=f,e[t+4>>2]=s,e[t>>2]=m,o&&(tr(o),s=e[t+4>>2])}else s=o;return e[s-4>>2]=e[r>>2],void(e[t+4>>2]=e[t+4>>2]-4)}Oo(),be()}function wt(t,r,s){var a=0,i=0,o=0,d=0,f=0,m=0,M=0,y=0,P=0;e:{t:{s:{n:{i:{c:{A:{d:{l:{if(r){if(!s)break l;break d}return Ut=(r=t)-K(t=(t>>>0)/(s>>>0)|0,s)|0,Pe=0,X=0,t}if(!t)break A;break c}if(!((a=s-1|0)&s))break i;o=0-(d=(Re(s)+33|0)-Re(r)|0)|0;break s}return Ut=0,Pe=r-K(t=(r>>>0)/0|0,0)|0,X=0,t}if((a=32-Re(r)|0)>>>0<31)break n;break t}if(Ut=t&a,Pe=0,(0|s)==1)break e;return s=31&(a=eo(s)),(63&a)>>>0>=32?t=r>>>s|0:(i=r>>>s|0,t=((1<<s)-1&r)<<32-s|t>>>s),X=i,t}d=a+1|0,o=63-a|0}if(a=31&(i=63&d),i>>>0>=32?(i=0,f=r>>>a|0):(i=r>>>a|0,f=((1<<a)-1&r)<<32-a|t>>>a),a=31&(o&=63),o>>>0>=32?(r=t<<a,t=0):(r=(1<<a)-1&t>>>32-a|r<<a,t<<=a),d)for(y=(0|(a=s-1|0))==-1?-1:0;m=i<<1|f>>>31,f=(i=f<<1|r>>>31)-(M=s&(o=y-(m+(i>>>0>a>>>0)|0)>>31))|0,i=m-(i>>>0<M>>>0)|0,r=r<<1|t>>>31,t=P|t<<1,P=m=1&o,d=d-1|0;);return Ut=f,Pe=i,X=r<<1|t>>>31,m|t<<1}Ut=t,Pe=r,t=0,r=0}return X=r,t}function tt(t,r){var s=0,a=0,i=0,o=0,d=0,f=0,m=0,M=0,y=0,P=0;e:{if((0|(s=e[t+8>>2]))==e[t+12>>2])if((a=e[t+4>>2])>>>0>(d=e[t>>2])>>>0)i=ir((o=(1+(a-d>>2)|0)/-2<<2)+a|0,a,s=s-a|0)+s|0,e[t+8>>2]=i,e[t+4>>2]=o+e[t+4>>2];else{if((o=(0|s)==(0|d)?1:s-d>>1)>>>0>=1073741824)break e;if(y=(f=On(i=o<<2))+i|0,i=o=(-4&o)+f|0,(0|s)!=(0|a)){if(P=-4&(s=s-a|0),M=1+((m=s-4|0)>>>2|0)&7)for(i=0,s=o;e[s>>2]=e[a>>2],a=a+4|0,s=s+4|0,(0|M)!=(0|(i=i+1|0)););else s=o;if(i=o+P|0,!(m>>>0<28))for(;e[s>>2]=e[a>>2],e[s+4>>2]=e[a+4>>2],e[s+8>>2]=e[a+8>>2],e[s+12>>2]=e[a+12>>2],e[s+16>>2]=e[a+16>>2],e[s+20>>2]=e[a+20>>2],e[s+24>>2]=e[a+24>>2],e[s+28>>2]=e[a+28>>2],a=a+32|0,(0|i)!=(0|(s=s+32|0)););}e[t+12>>2]=y,e[t+8>>2]=i,e[t+4>>2]=o,e[t>>2]=f,d&&(tr(d),i=e[t+8>>2])}else i=s;return e[i>>2]=e[r>>2],void(e[t+8>>2]=e[t+8>>2]+4)}Oo(),be()}function Ae(t,r){var s,a=0,i=0,o=0,d=0,f=0;i=189088,pe=s=pe-320|0,e[s+312>>2]=0,o=Mi(t,d=Hr(s+112|0,189088),s,s+316|0,s+312|0,0),a=e[s+316>>2];e:if((0|r)<=3){if((0|a)<2)break e;if(o=3&(r=a-1|0),t=1,a-2>>>0>=3)for(f=-4&r,r=0;g[0|(a=t+s|0)]>=4&&(g[0|a]=3),g[1+(a=t+s|0)|0]>=4&&(g[a+1|0]=3),g[a+2|0]>=4&&(g[a+2|0]=3),g[a+3|0]>=4&&(g[a+3|0]=3),t=t+4|0,(0|f)!=(0|(r=r+4|0)););if(!o)break e;for(r=0;g[0|(a=t+s|0)]>=4&&(g[0|a]=3),t=t+1|0,(0|o)!=(0|(r=r+1|0)););}else if(t=1,!((0|a)<=1)){for(;;){if((0|o)>g[0|(f=t+s|0)]){if((0|a)!=(0|(t=t+1|0)))continue;break e}break}g[0|f]=r}if(t=u[0|d])for(r=1;a=e[144464+((255&t)<<2)>>2],u[a+11|0]!=2|16&u[a+6|0]||(o=255&(a=g[r+s|0]),(0|a)<2&&o||(g[0|i]=u[o+94151|0],i=i+1|0,t=u[0|d]),r=r+1|0),g[0|i]=t,i=i+1|0,t=u[0|(d=d+1|0)];);g[0|i]=0,pe=s+320|0}function Ge(t){var r=0,s=0,a=0,i=0,o=0,d=0;s=r=e[(t|=0)>>2],e[t>>2]=r+1;e:{t:{s:{n:{i:{c:{A:switch(((o=u[0|r])>>>4|0)-8|0){case 0:case 1:case 2:case 3:break t;case 7:break i;case 6:break c;case 4:case 5:break A;default:break e}if((a=r+2|0)>>>0>=(i=e[t+4>>2])>>>0)break n;if(e[t>>2]=a,(192&(s=u[s+1|0]))!=128)break s;return 63&s|o<<6&1984}if((a=r+3|0)>>>0>=(i=e[t+4>>2])>>>0)break n;if(s=r+2|0,e[t>>2]=s,(192&(r=u[r+1|0]))!=128){a=s;break s}if(e[t>>2]=a,(192&(s=u[0|s]))!=128)break s;return 63&s|(63&r|o<<6&960)<<6}if(!((i=e[t+4>>2])>>>0<=(s=r+4|0)>>>0)){if(a=r+2|0,e[t>>2]=a,(192&(i=u[r+1|0]))!=128||(a=r+3|0,e[t>>2]=a,(192&(d=u[r+2|0]))!=128)||(e[t>>2]=s,r=u[0|a],a=s,(192&r)!=128))break s;return 0|((t=63&r|d<<6&4032|(63&i|o<<6&960)<<12)>>>0>=1114112?65533:t)}}e[t>>2]=i;break t}e[t>>2]=a-1}o=65533}return 0|o}function at(t,r,s,a){var i,o,d=0,f=0,m=0,M=0,y=0,P=0;if(pe=i=pe-432|0,!(!a|!(536870912&(o=Vt(t,r,s,a))))&&(I[i+48>>1]=8192,a=Hr(i+48|2,a),u[0|a])){for(m=i+224|0,d=1,M=200;;){if(Ir(i+44|0,a),r=Pi(e[i+44>>2]),f=e[s>>2],r?(e[s>>2]=2|f,ia(Fs(e[i+44>>2]),a)):e[s>>2]=-3&f,P=e[33264],Vt(t,a,s,0),1&d?(e[i+16>>2]=189088,f=mi(m,M,84130,i+16|0)):(e[i+32>>2]=15,e[i+36>>2]=189088,f=mi(m,M,84434,i+32|0)),d=(r=e[33264])+1|0,e[33264]=d,r>>>0<=2147483646){for(;;)if(r=a,a=a+1|0,(0|(y=g[0|r]))==32|y-9>>>0<5){for(;r=(a=r)+1|0,(0|(y=g[0|a]))==32|y-9>>>0<5;);if(d=d-1|0,e[33264]=d,!((0|d)>0))break}}if(m=m+f|0,e[33264]=P,!(u[0|a]&&(d=0,(0|(M=M-f|0))>1)))break}(i+224|0)!=(0|m)&&(e[i>>2]=i+224,mi(189088,200,84130,i))}return pe=i+432|0,o}function Le(t,r,s,a,i,o,d,f){var m,M;m=e[32972],M=e[m+116>>2],I[t+8>>1]=B[t+8>>1]+o,o=32&f?0-o|0:o,I[t+10>>1]=o+B[t+10>>1],I[t+12>>1]=o+B[t+12>>1],a=(0|a)>(0|(o=((o=(0|K(r,M))/256|0)-(r=I[t+6>>1])|0)/2|0))?o:a,I[t+6>>1]=((0|s)<(0|a)?a:s)+r;e:{t:switch(i-1|0){case 0:r=(0|(r=235-(s=I[t+4>>1])|0))<=-100?-100:r,I[t+4>>1]=((0|r)>=-60?-60:r)+s;break e;case 1:r=(0|(r=(0|(r=235-(s=I[t+4>>1])|0))<=-300?-300:r))>=-150?-150:r,I[t+4>>1]=r+s,I[t+2>>1]=r+B[t+2>>1];break e;case 2:break t;default:break e}r=(0|(r=(0|(r=100-(s=I[t+4>>1])|0))<=-400?-400:r))>-300?-400:r,I[t+4>>1]=r+s,I[t+2>>1]=r+B[t+2>>1]}e[m+132>>2]||(g[t+20|0]=(K(u[t+20|0],d)>>>0)/100,g[t+21|0]=(K(u[t+21|0],d)>>>0)/100,g[t+22|0]=(K(u[t+22|0],d)>>>0)/100,g[t+23|0]=(K(u[t+23|0],d)>>>0)/100,g[t+24|0]=(K(u[t+24|0],d)>>>0)/100,g[t+25|0]=(K(u[t+25|0],d)>>>0)/100)}function vt(t){var r,s=0,a=0,i=0,o=0;pe=r=pe-48|0;e:{if(t){u[0|t]||(t=Vi(84285),u[0|t]&&t||(t=Vi(121696),u[0|t]&&t||(t=Vi(84614),u[0|t]&&t||(t=84891))));t:{for(;;){if(!(!(a=u[t+s|0])|(0|a)==47)){if(i=23,(0|(s=s+1|0))!=23)continue;break t}break}i=s}a=84891;t:{s:{if(s=u[0|t],(u[t+i|0]|(0|s)==46||(a=t,(0|s)==67))&&!u[a+1|0]||!Ta(a,84891)||!Ta(a,85136)){if(s=121652,u[a+1|0]==46)break s;t=0;break t}if(s=e[56851])for(;;){if(!Ta(a,s+8|0))break s;if(!(s=e[s+32>>2]))break}(t=Fr(36))&&(s=e[30414],e[t>>2]=e[30413],e[t+4>>2]=s,ds(s=t+8|0,a,i),g[s+i|0]=0,e[t+32>>2]=e[56851],e[56851]=t),s=t||121652}t=s}if((0|t)==-1)break e;e[56809]=t}else t=e[56809];o=t?t+8|0:84309}return pe=r+48|0,o}function Pt(t){var r=0,s=0,a=0,i=0,o=0,d=0,f=0,m=0,M=0;m=!!((r=e[t+112>>2])|(a=e[t+116>>2])),i=r,d=r=(o=e[t+4>>2])-(f=e[t+44>>2])|0,s=r+e[t+120>>2]|0,r=e[t+124>>2]+(r>>31)|0;e:{if(!(((0|(r=s>>>0<d>>>0?r+1|0:r))>=(0|a)&s>>>0>=i>>>0|(0|r)>(0|a))&m)){if((0|(m=sA(t)))>=0)break e;o=e[t+4>>2],f=e[t+44>>2]}return e[t+112>>2]=-1,e[t+116>>2]=-1,e[t+104>>2]=o,a=(d=s)+(s=f-o|0)|0,r=(s>>31)+r|0,e[t+120>>2]=a,e[t+124>>2]=s>>>0>a>>>0?r+1|0:r,-1}return r=(a=s+1|0)?r:r+1|0,o=e[t+4>>2],f=e[t+8>>2],d=i=e[t+116>>2],i|(s=e[t+112>>2])&&(i=s-a|0,(0|(s=d-(r+(s>>>0<a>>>0)|0)|0))>=(0|(d=(M=f-o|0)>>31))&i>>>0>=M>>>0|(0|s)>(0|d)||(f=i+o|0)),e[t+104>>2]=f,a=(i=(s=e[t+44>>2])-o|0)+a|0,r=(i>>31)+r|0,e[t+120>>2]=a,e[t+124>>2]=a>>>0<i>>>0?r+1|0:r,s>>>0>=o>>>0&&(g[o-1|0]=m),m}function ir(t,r,s){var a=0,i=0;e:if((0|t)!=(0|r)){if(r-(i=t+s|0)>>>0<=0-(s<<1)>>>0)return ds(t,r,s);if(a=3&(t^r),t>>>0<r>>>0){if(a)a=t;else{if(3&t)for(a=t;;){if(!s)break e;if(g[0|a]=u[0|r],r=r+1|0,s=s-1|0,!(3&(a=a+1|0)))break}else a=t;if(!(s>>>0<=3))for(;e[a>>2]=e[r>>2],r=r+4|0,a=a+4|0,(s=s-4|0)>>>0>3;);}if(s)for(;g[0|a]=u[0|r],a=a+1|0,r=r+1|0,s=s-1|0;);}else{if(!a){if(3&i)for(;;){if(!s)break e;if(g[0|(a=(s=s-1|0)+t|0)]=u[r+s|0],!(3&a))break}if(!(s>>>0<=3))for(;e[(s=s-4|0)+t>>2]=e[r+s>>2],s>>>0>3;);}if(!s)break e;for(;g[(s=s-1|0)+t|0]=u[r+s|0],s;);}}return t}function yr(t,r,s,a){switch(r-9|0){case 0:return r=e[s>>2],e[s>>2]=r+4,void(e[t>>2]=e[r>>2]);case 6:return r=e[s>>2],e[s>>2]=r+4,r=I[r>>1],e[t>>2]=r,void(e[t+4>>2]=r>>31);case 7:return r=e[s>>2],e[s>>2]=r+4,e[t>>2]=B[r>>1],void(e[t+4>>2]=0);case 8:return r=e[s>>2],e[s>>2]=r+4,r=g[0|r],e[t>>2]=r,void(e[t+4>>2]=r>>31);case 9:return r=e[s>>2],e[s>>2]=r+4,e[t>>2]=u[0|r],void(e[t+4>>2]=0);case 16:return r=e[s>>2]+7&-8,e[s>>2]=r+8,void(G[t>>3]=G[r>>3]);case 17:os[0|a](t,s);default:return;case 1:case 4:case 14:return r=e[s>>2],e[s>>2]=r+4,r=e[r>>2],e[t>>2]=r,void(e[t+4>>2]=r>>31);case 2:case 5:case 11:case 15:return r=e[s>>2],e[s>>2]=r+4,e[t>>2]=e[r>>2],void(e[t+4>>2]=0);case 3:case 10:case 12:case 13:}r=e[s>>2]+7&-8,e[s>>2]=r+8,s=e[r+4>>2],e[t>>2]=e[r>>2],e[t+4>>2]=s}function hr(t,r,s,a,i,o){var d;pe=d=pe-80|0;e:if((0|o)>=16384){if(vr(d+32|0,r,s,a,i,0,0,0,2147352576),a=e[d+40>>2],i=e[d+44>>2],r=e[d+32>>2],s=e[d+36>>2],o>>>0<32767){o=o-16383|0;break e}vr(d+16|0,r,s,a,i,0,0,0,2147352576),o=((0|o)>=49149?49149:o)-32766|0,a=e[d+24>>2],i=e[d+28>>2],r=e[d+16>>2],s=e[d+20>>2]}else(0|o)>-16383||(vr(d- -64|0,r,s,a,i,0,0,0,7471104),a=e[d+72>>2],i=e[d+76>>2],r=e[d+64>>2],s=e[d+68>>2],o>>>0>4294934644?o=o+16269|0:(vr(d+48|0,r,s,a,i,0,0,0,7471104),o=((0|o)<=-48920?-48920:o)+32538|0,a=e[d+56>>2],i=e[d+60>>2],r=e[d+48>>2],s=e[d+52>>2]));vr(d,r,s,a,i,0,0,0,o+16383<<16),r=e[d+12>>2],e[t+8>>2]=e[d+8>>2],e[t+12>>2]=r,r=e[d+4>>2],e[t>>2]=e[d>>2],e[t+4>>2]=r,pe=d+80|0}function xr(t,r){var s,a,i=0;pe=s=pe+-64|0,i=e[t>>2],a=e[i-4>>2],i=e[i-8>>2],e[s+32>>2]=0,e[s+36>>2]=0,e[s+40>>2]=0,e[s+44>>2]=0,e[s+48>>2]=0,e[s+52>>2]=0,g[s+55|0]=0,g[s+56|0]=0,g[s+57|0]=0,g[s+58|0]=0,g[s+59|0]=0,g[s+60|0]=0,g[s+61|0]=0,g[s+62|0]=0,e[s+24>>2]=0,e[s+28>>2]=0,e[s+20>>2]=0,e[s+16>>2]=125084,e[s+12>>2]=t,e[s+8>>2]=r,t=t+i|0,i=0;e:if(ui(a,r,0))e[s+56>>2]=1,os[e[e[a>>2]+20>>2]](a,s+8|0,t,t,1,0),i=e[s+32>>2]==1?t:0;else{os[e[e[a>>2]+24>>2]](a,s+8|0,t,1,0);t:switch(e[s+44>>2]){case 0:i=e[s+48>>2]==1&&e[s+36>>2]==1&&e[s+40>>2]==1?e[s+28>>2]:0;break e;case 1:break t;default:break e}e[s+32>>2]!=1&&e[s+48>>2]|e[s+36>>2]!=1|e[s+40>>2]!=1||(i=e[s+24>>2])}return pe=s- -64|0,i}function Gr(t,r,s,a,i){var o,d,f=0;pe=o=pe-80|0,I[o+72>>1]=0,e[o+64>>2]=0,e[o+68>>2]=0,g[0|a]=0,f=ia(r,d=2|(f=o- -64|0))+f|0,g[f+2|0]=32;e:if((0|s)!=-1)r>>>0>=33&&!La(r)?(g[f+3|0]=(0|s)==32?32:31,g[o+65|0]=95,Nr(t,o- -64|1,o+16|0)||(g[o+65|0]=32,Nr(t,d,o+16|0)||Es(t,d,o+16|0,40,0,268435456,0)),u[o+16|0]||qt(t,r,o+16|0),r=Hr(a,o+16|0),!(s=u[0|r])|(0|s)==21||(e[o+56>>2]=0,e[o+60>>2]=0,ns(t,r,o+56|0,-1,1&i))):(e[o>>2]=r,Br(r=o- -64|1,85485,o),Nr(t,r,a));else{if(Nr(t,d,a)||(g[o+65|0]=95,Nr(t,o- -64|1,o+16|0)|e[t+212>>2]==25966))break e;mo(85055),Nr(e[47194],d,o+16|0)&&(g[0|a]=21,g[a+1|0]=0),gn(e[e[32972]+60>>2])}pe=o+80|0}function wr(t,r,s){var a=0,i=0,o=0,d=0;if(s&&(g[0|t]=r,g[(a=t+s|0)-1|0]=r,!(s>>>0<3||(g[t+2|0]=r,g[t+1|0]=r,g[a-3|0]=r,g[a-2|0]=r,s>>>0<7||(g[t+3|0]=r,g[a-4|0]=r,s>>>0<9||(i=(a=0-t&3)+t|0,r=K(255&r,16843009),e[i>>2]=r,e[(s=(a=s-a&-4)+i|0)-4>>2]=r,a>>>0<9||(e[i+8>>2]=r,e[i+4>>2]=r,e[s-8>>2]=r,e[s-12>>2]=r,a>>>0<25||(e[i+24>>2]=r,e[i+20>>2]=r,e[i+16>>2]=r,e[i+12>>2]=r,e[s-16>>2]=r,e[s-20>>2]=r,e[s-24>>2]=r,e[s-28>>2]=r,(s=a-(d=4&i|24)|0)>>>0<32))))))))for(a=ps(r,0,1,1),o=X,r=i+d|0;e[r+24>>2]=a,e[r+28>>2]=o,e[r+16>>2]=a,e[r+20>>2]=o,e[r+8>>2]=a,e[r+12>>2]=o,e[r>>2]=a,e[r+4>>2]=o,r=r+32|0,(s=s-32|0)>>>0>31;);return t}function _r(){var t,r=0,s=0,a=0,i=0,o=0;if(pe=t=pe-208|0,(0|(a=e[50303]))>0)for(;(i=e[(s=201216+(r<<2)|0)>>2])&&(tr(i),e[s>>2]=0),(0|a)!=(0|(r=r+1|0)););if(e[50303]=0,e[t+16>>2]=137584,e[t+20>>2]=47,Br(r=t+32|0,87827,t+16|0),Tn(r,zr(r)+1|0,0),e[t+4>>2]=47,e[t>>2]=137584,Br(r,87933,t),Tn(r,zr(r)+1|0,1),r=e[50303],e[201216+(s=r<<2)>>2]=0,s=Ma(a=e[50741],s+4|0)){if(e[50741]=s,pi(201216,r,7),a=e[50741],s=0,r=e[50304])for(i=0;o=e[r+4>>2],u[0|o]&&Ta(o+1|0,86589)&&En(e[r+8>>2],88032,3)&&(e[(s<<2)+a>>2]=r,s=s+1|0),r=e[201216+((i=i+1|0)<<2)>>2];);e[(s<<2)+a>>2]=0}return pe=t+208|0,a}function gs(t,r,s){var a=0,i=0,o=0,d=0;if(o=r-1|0,(0|r)>=2){r=t;e:{for(;;){t:{s:{if((0|(a=e[s+4>>2]))!=(0|(i=e[s+8>>2]))){if((d=lo(a,10,i-a|0))?i=1+(d-(a=e[s+4>>2])|0)|0:(a=e[s+4>>2],i=e[s+8>>2]-a|0),ds(r,a,a=i>>>0<o>>>0?i:o),i=a+e[s+4>>2]|0,e[s+4>>2]=i,r=r+a|0,d||!(o=o-a|0))break t;if((0|i)!=e[s+8>>2]){e[s+4>>2]=i+1,a=u[0|i];break s}}if(!((0|(a=sA(s)))>=0)){if(a=0,(0|t)==(0|r))break e;if(16&u[0|s])break t;break e}}if(g[0|r]=a,r=r+1|0,(255&a)!=10&&(o=o-1|0))continue}break}t?(g[0|r]=0,a=t):a=0}}else if(r=e[s+72>>2],e[s+72>>2]=r-1|r,!o)return g[0|t]=0,t;return a}function Xr(t){var r=0,s=0,a=0,i=0,o=0,d=0,f=0,m=0;if(r=K(t,44),(0|(t=e[r+137896>>2]))>0&&Xr(t-1|0),t=e[36115],!((0|(r=e[36+(s=r+137856|0)>>2]))<=0)){if(i=e[s+32>>2],f=1&r,(0|r)!=1)for(m=-2&r,s=0;r=u[10+(o=(a=s<<4)+i|0)|0],e[144464+(r<<2)>>2]=o,(0|t)>=(0|r)?r=t:wr(144464+((t=t+1|0)<<2)|0,0,r-t<<2),t=u[10+(a=(16|a)+i|0)|0],e[144464+(t<<2)>>2]=a,(0|t)<=(0|r)?t=r:wr(144464+((r=r+1|0)<<2)|0,0,t-r<<2),s=s+2|0,(0|m)!=(0|(d=d+2|0)););else s=0;f&&(r=u[10+(s=(s<<4)+i|0)|0],e[144464+(r<<2)>>2]=s,(0|t)>=(0|r)||(wr(144464+((t=t+1|0)<<2)|0,0,r-t<<2),t=r))}e[36115]=t}function hs(t,r,s,a,i){var o,d=0,f=0,m=0;pe=o=pe-16|0;e:if(1&g[t+106|0]&&(d=u[0|s],!(!(1&g[a+2|0])&(0|d)!=46||256&(m=e[a+12>>2])|!(!(2&m)||i)||(Ir(o+12|0,(0|d)!=46?s:s+2|0),!(d=u[0|s])|!u[s+1|0])))){if(!(!(m=e[o+12>>2])|2&u[a+2|0])){if(!aa(m))break e;d=u[0|s]}(0|d)==46&&(g[0|s]=32),f=2,e[t+212>>2]!=26741|i||(s=aa(e[o+12>>2])?at(t,s+2|0,0,0):0,128&u[t+8233|0]&&(!(!(i=e[o+12>>2])|2&u[a+2|0])&i-48>>>0>=10||(f=0)),f=32768&s?0:f,131072&s&&(f=163840&e[t+8232>>2]?34:u[r-2|0]!=45?f:0))}return pe=o+16|0,f}function Bs(t,r,s,a,i){var o,d=0,f=0;if(pe=o=pe-208|0,e[o+204>>2]=s,wr(s=o+160|0,0,40),e[o+200>>2]=e[o+204>>2],(0|Wr(0,r,o+200|0,o+80|0,s,a,i))<0)i=-1;else{e[t+76>>2],d=e[t>>2],e[t+72>>2]<=0&&(e[t>>2]=-33&d);e:{t:{if(e[t+48>>2]){if(e[t+16>>2])break t}else e[t+48>>2]=80,e[t+28>>2]=0,e[t+16>>2]=0,e[t+20>>2]=0,f=e[t+44>>2],e[t+44>>2]=o;if(s=-1,BA(t))break e}s=Wr(t,r,o+200|0,o+80|0,o+160|0,a,i)}f&&(os[e[t+36>>2]](t,0,0),e[t+48>>2]=0,e[t+44>>2]=f,e[t+28>>2]=0,r=e[t+20>>2],e[t+16>>2]=0,e[t+20>>2]=0,s=r?s:-1),r=t,t=e[t>>2],e[r>>2]=t|32&d,i=32&t?-1:s}return pe=o+208|0,i}function Or(t,r,s,a){var i,o=0,d=0,f=0,m=0,M=0,y=0,P=0;if(pe=i=pe-208|0,d=u[0|r])for(;g[o+i|0]=d,m=((255&d)==6&(0|f)!=21)+m|0,f=d<<24>>24,d=u[(o=o+1|0)+r|0];);if(g[o+i|0]=0,o=u[0|i])for(y=m-2|0,f=0,P=(0|a)<2,d=0;;){e:{t:if((255&o)!=6|P|(0|d)==21){if((0|(a=255&o))==255){if(!M|(0|s)<2)break e;a=s>>>0>2?11:(0|f)%3|0?23:11}d=a,a=f}else{if(o=f+1|0,u[t+169|0]){d=(0|o)>1?5:6,a=o;break t}if(d=6,a=m,(0|o)==(0|m))break t;d=(0|o)%3|0||(0|f)==(0|y)?5:6,a=o}f=a,g[0|r]=d,r=r+1|0}if(!(o=u[(M=M+1|0)+i|0]))break}(0|s)>=2&&(g[0|r]=11,r=r+1|0),g[0|r]=0,pe=i+208|0}function Kt(t,r){var s=0;s=0,t&&(s=e[50754],s=(t=(t=(0|K(e[145712+(r?12:((0|t)>199)<<2)>>2],t))/256|0)>>>0>(r=e[36430])>>>0?t:r)>>>0<=89999?(K(t,s)>>>0)/1e3|0:(K(t,(0|s)/25|0)>>>0)/40|0),(0|(t=e[36440]))<=0||(0|(r=e[36424]))<0||(e[4+(r=216192+(r<<4)|0)>>2]||(e[r+4>>2]=t),e[36440]=0),e[36426]=0,e[36439]=-1,e[36455]=e[50758],oa(),e[36427]=-1,t=216192+(e[50758]<<4)|0,e[t>>2]=5,e[t+4>>2]=s,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0,e[36426]=0,e[36438]&&(e[36438]=0,t=216192+(e[50758]<<4)|0,e[t>>2]=14,e[t+4>>2]=0,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0)}function rr(t,r,s,a,i,o,d,f){var m,M=0,y=0,P=0;M=1,m=y=2147483647&a;e:if(!((P=(0|y)==2147418112)&!s?t|r:P&!!(0|s)|y>>>0>2147418112)&&!((P=(0|(y=2147483647&f))==2147418112)&!d?i|o:P&!!(0|d)|y>>>0>2147418112)){if(!(t|i|s|d|r|o|y|m))return 0;if((0|(M=a&f))>0|(0|M)>=0){if(M=-1,(0|s)==(0|d)&(0|a)==(0|f)?(0|r)==(0|o)&t>>>0<i>>>0|r>>>0<o>>>0:s>>>0<d>>>0&(0|a)<=(0|f)|(0|a)<(0|f))break e;return!!(t^i|s^d|r^o|a^f)}M=-1,((0|s)==(0|d)&(0|a)==(0|f)?(0|r)==(0|o)&t>>>0>i>>>0|r>>>0>o>>>0:s>>>0>d>>>0&(0|a)>=(0|f)|(0|a)>(0|f))||(M=!!(t^i|s^d|r^o|a^f))}return M}function Lr(t,r){var s=0,a=0,i=0,o=0;for(s=u[85836]|u[85837]<<8,g[0|r]=s,g[r+1|0]=s>>>8,g[r+2|0]=u[85838];;)if(i=u[0|t],t=s=t+1|0,(0|i)!=255){if(!i)break;if(!(a=e[144464+(i<<2)>>2]))continue;if(u[a+11|0]==1&&(o=u[a+14|0],!(B[a+8>>1]|o>>>0>4))){if(o>>>0<2)continue;g[0|r]=u[o+93943|0],r=r+1|0;continue}if(255&(t=e[a>>2]))for(;g[0|r]=t,r=r+1|0,a=65280&t,t=t>>>8|0,a;);if(t=s,(0|i)!=21||(32|(s=g[0|t]))-97>>>0>=26)continue;for(;g[0|r]=s,r=r+1|0,(32|(s=g[0|(t=t+1|0)]))-97>>>0<26;);}g[0|r]=0}function Rs(t,r){var s,a,i=0,o=0,d=0;pe=s=pe-112|0,t||(e[50303]||_r(),t=201216),na(i=s+16|0,r,40),e[s>>2]=47,e[s+4>>2]=i,Br(r=s- -64|0,87599,s),a=zr(r),d=-1;e:{t:{s:{if(o=e[t>>2]){r=0,i=-1;n:{for(;;){if(Hn(s+16|0,e[o>>2])){if(Hn(s+16|0,o=e[o+8>>2])?d=Hn(s- -64|0,o+(zr(o)-a|0)|0)?d:r:i=r,o=e[((r=r+1|0)<<2)+t>>2])continue;break n}break}if((0|r)>=0)break t;r=(0|i)<0?d:i;break s}if((0|(r=i))>=0)break s}r=d}if(i=0,(0|r)<0)break e}i=e[(r<<2)+t>>2]}return pe=s+112|0,i}function Ws(t,r){var s,a,i=0,o=0,d=0,f=0,m=0;pe=s=pe-16|0,oe(+r),a=0|R(1),o=0|R(0),(0|(d=(i=2147483647&a)-1048576|0))==2145386495|d>>>0<2145386495?(f=o<<28,d=i>>>4|0,i=(15&i)<<28|o>>>4,o=d+1006632960|0):(0|i)==2146435072|i>>>0>2146435072?(f=o<<28,i=(15&a)<<28|o>>>4,o=a>>>4|2147418112):i|o?(Sa(s,o,d=i,0,0,(i=i?Re(i):Re(o)+32|0)+49|0),m=e[s>>2],f=e[s+4>>2],d=15372-i<<16,i=e[s+8>>2],o=d|65536^e[s+12>>2]):(i=0,o=0),e[t>>2]=m,e[t+4>>2]=f,e[t+8>>2]=i,e[t+12>>2]=-2147483648&a|o,pe=s+16|0}function Vr(t,r,s){var a=0,i=0;e:{t:{s:{if(!(3&((i=t)^r))){a=!!(0|s);n:if(!(!(3&r)|!s))for(;;){if(a=u[0|r],g[0|i]=a,!a)break e;if(i=i+1|0,a=!!(0|(s=s-1|0)),!(3&(r=r+1|0)))break n;if(!s)break}if(!a)break t;if(!u[0|r])break e;if(!(s>>>0<4))for(;;){if(~(a=e[r>>2])&a-16843009&-2139062144)break s;if(e[i>>2]=a,i=i+4|0,r=r+4|0,!((s=s-4|0)>>>0>3))break}}if(!s)break t}for(;;){if(a=u[0|r],g[0|i]=a,!a)break e;if(i=i+1|0,r=r+1|0,!(s=s-1|0))break}}s=0}return wr(i,0,s),t}function Js(t,r,s,a,i,o){var d,f=0,m=0,M=0;pe=d=pe-240|0,f=e[s>>2],e[d+232>>2]=f,s=e[s+4>>2],e[d>>2]=t,e[d+236>>2]=s,M=1;e:{t:{s:{if(s|(0|f)!=1){for(f=t;;){if((0|wi(s=f-e[(m=(a<<2)+o|0)>>2]|0,t,r))<=0){s=f;break s}n:{if(!((0|a)<2|i)&&(i=e[m-8>>2],(0|wi(m=f-4|0,s,r))>=0||(0|wi(m-i|0,s,r))>=0))break n;if(e[(M<<2)+d>>2]=s,go(f=d+232|0,i=eA(f)),M=M+1|0,a=a+i|0,i=0,f=s,e[d+236>>2]|e[d+232>>2]!=1)continue;break t}break}s=f;break t}s=t}if(i)break e}ji(d,M),$A(s,r,a,o)}pe=d+240|0}function qs(t,r){var s=0;e[4+(134912+(s=t<<2)|0)>>2]=r,e[s+136192>>2]=r,s=28;e:{t:{s:switch(t-1|0){case 0:e[50792]=r,e[50786]=r,cn(3);break t;case 1:e[50787]=r,e[33037]=(0|K(u[e[50797]+105596|0],(0|K(e[50787],55))/100|0))/16;break t;case 2:t=(0|r)>=99?99:r,e[50785]=(0|t)>0?t:0;break t;case 3:e[50788]=(0|r)>=99?99:r;break t;case 12:e[47268]=r;break t;case 6:e[47205]=r;break t;case 9:break t;case 8:break s;default:break e}(t=255&r)&&(e[e[47192]+152>>2]=t),e[47196]=r}s=0}return s}function es(t,r){var s=0,a=0,i=0;e:if(e[t>>2])for(;;){if(La(e[t-4>>2])){if(a=0,(0|(s=g[0|r]))==e[t>>2])for(;(0|(s=g[(a=a+1|0)+r|0]))==e[(t=t+4|0)>>2];);if(!s){for(;r=t,t=t+4|0,La(e[r>>2]););for(i=r+((e[r>>2]==61)<<2)|0;i=(t=i)+4|0,La(e[t>>2]););switch((r=e[t>>2])-34|0){case 0:case 5:break e}return La(r)||e[t>>2]==47?102808:t}}if(!e[(t=t+4|0)>>2])break}return i}function _s(t,r,s,a){var i,o,d=0,f=0,m=0;return!u[t+25|0]|G[t+8>>3]!=s|G[t+16>>3]!=a?(G[t+16>>3]=a,G[t+8>>3]=s,a=(d=ys(-3.141592653589793/(f=+e[t>>2])*a))*-d,G[t+48>>3]=a,d*=yn(-6.283185307179586/f*s),d+=d,G[t+40>>3]=d,f=1-d-a,G[t+32>>3]=f,!(m=u[t+24|0])|s==0||(f=1/f,G[t+32>>3]=f,a*=s=-f,G[t+48>>3]=a,d*=s,G[t+40>>3]=d,m=1)):(m=u[t+24|0],a=G[t+48>>3],d=G[t+40>>3],f=G[t+32>>3]),g[t+25|0]=1,s=G[t+64>>3],i=G[t+56>>3],G[t+64>>3]=i,o=r,r=a*s+(f*r+d*i),G[t+56>>3]=m?o:r,r}function Rr(t,r,s,a,i){var o,d=0,f=0,m=0,M=0;if((o=e[34388])&&!((0|(f=e[34436]))>=(e[34393]-2|0))){if(e[34436]=f+1,d=K(f,36)+o|0,e[d>>2]=t,e[d+4>>2]=e[34437],M=e[34438],e[d+12>>2]=r>>>24,e[d+8>>2]=16777215&r,e[d+24>>2]=M,r=e[50754],i=e[34439]+((i-e[34392]|0)/2|0)|0,e[d+20>>2]=i,r=ve(m=1e3*+(0|i)/+(0|r))<2147483648?~~m:-2147483648,e[d+16>>2]=r,t-3>>>0<=1)return void(e[28+(K(f,36)+o|0)>>2]=e[33282]+s);r=28+(K(f,36)+o|0)|0,e[r>>2]=s,(0|t)==7&&(e[r+4>>2]=a)}}function cs(t,r,s,a,i,o){var d=0,f=0,m=0,M=0;64&o?(r=31&(s=o+-64|0),(63&s)>>>0>=32?(s=0,r=i>>>r|0):(s=i>>>r|0,r=((1<<r)-1&i)<<32-r|a>>>r),a=0,i=0):o&&(m=a,d=31&(f=64-o|0),(63&f)>>>0>=32?(f=m<<d,M=0):(f=(1<<d)-1&m>>>32-d|i<<d,M=m<<d),m=r,r=31&o,(63&o)>>>0>=32?(d=0,r=s>>>r|0):(d=s>>>r|0,r=((1<<r)-1&s)<<32-r|m>>>r),r|=M,s=d|f,d=a,a=31&o,(63&o)>>>0>=32?(f=0,a=i>>>a|0):(f=i>>>a|0,a=((1<<a)-1&i)<<32-a|d>>>a),i=f),e[t>>2]=r,e[t+4>>2]=s,e[t+8>>2]=a,e[t+12>>2]=i}function Da(t){var r=0,s=0;if(!t){if(e[33174]&&(r=Da(e[33174])),e[33136]&&(r=Da(e[33136])|r),t=e[56816])for(;e[t+20>>2]!=e[t+28>>2]&&(r=Da(t)|r),t=e[t+56>>2];);return r}return e[t+76>>2],e[t+20>>2]==e[t+28>>2]||(os[e[t+36>>2]](t,0,0),e[t+20>>2])?((0|(r=e[t+8>>2]))!=(0|(s=e[t+4>>2]))&&(r=s-r|0,os[e[t+40>>2]](t,r,r>>31,1)),r=0,e[t+28>>2]=0,e[t+16>>2]=0,e[t+20>>2]=0,e[t+4>>2]=0,e[t+8>>2]=0):r=-1,r}function Us(t,r){var s=0,a=0,i=0,o=0,d=0;if((192&(s=u[0|r]))==128)for(;(192&(s=u[0|(r=r-1|0)]))==128;);e:if(128&(s=s<<24>>24)){if(a=1,(0|(i=224&s))!=192)if((240&s)!=224){if(a=3,(248&s)!=240){s&=255,a=0;break e}}else a=2,d=1;s=u[a+93846|0]&s,(o=u[r+1|0])?(s=63&o|s<<6,(0|i)!=192&&((i=u[r+2|0])?(s=63&i|s<<6,d||((r=u[r+3|0])?s=63&r|s<<6:a=2)):a=1)):a=0}return e[t>>2]=s,a+1|0}function Ua(t,r,s,a){var i,o=0,d=0;return pe=i=pe-224|0,t?(e[i>>2]=137584,e[i+4>>2]=47,e[i+8>>2]=r,Br(r=i+16|0,85430,i),(0|(o=ci(r)))<0?r=bi(a,0-o|0,i+16|0):(r=qr(i+16|0,85659))?((d=e[t>>2])&&tr(d),o?(d=Fr(o),e[t>>2]=d,d?(0|Ri(d,o,r))==(0|o)?(Za(r),r=0,s&&(e[s>>2]=o)):(s=e[56798],Za(r),tr(e[t>>2]),e[t>>2]=0,r=bi(a,s,i+16|0)):(Za(r),r=48)):(r=0,e[t>>2]=0)):r=bi(a,e[56798],i+16|0)):r=28,pe=i+224|0,r}function Ir(t,r){var s=0,a=0,i=0,o=0,d=0;if((192&(s=u[0|r]))==128)for(;(192&(s=u[0|(r=r+1|0)]))==128;);e:if(128&(s=s<<24>>24)){if(a=1,(0|(i=224&s))!=192)if((240&s)!=224){if(a=3,(248&s)!=240){s&=255,a=0;break e}}else a=2,d=1;s=u[a+93846|0]&s,(o=u[r+1|0])?(s=63&o|s<<6,(0|i)!=192&&((i=u[r+2|0])?(s=63&i|s<<6,d||((r=u[r+3|0])?s=63&r|s<<6:a=2)):a=1)):a=0}return e[t>>2]=s,a+1|0}function Sa(t,r,s,a,i,o){var d=0,f=0,m=0;64&o?(a=r,r=31&(i=o+-64|0),(63&i)>>>0>=32?(i=a<<r,a=0):(i=(1<<r)-1&a>>>32-r|s<<r,a<<=r),r=0,s=0):o&&(d=a,a=31&o,(63&o)>>>0>=32?(f=d<<a,m=0):(f=(1<<a)-1&d>>>32-a|i<<a,m=d<<a),d=r,a=31&(i=64-o|0),(63&i)>>>0>=32?(i=0,r=s>>>a|0):(i=s>>>a|0,r=((1<<a)-1&s)<<32-a|d>>>a),a=m|r,i|=f,r=31&o,(63&o)>>>0>=32?(f=d<<r,r=0):(f=(1<<r)-1&d>>>32-r|s<<r,r=d<<r),s=f),e[t>>2]=r,e[t+4>>2]=s,e[t+8>>2]=a,e[t+12>>2]=i}function or(t){var r=0;return t>>>0<=55295?r=u[e[125552+(t>>>6&67108860)>>2]+(255&t)|0]:(r=4,t>>>0<57344||(t>>>0<63488?r=3:t>>>0<=195327?r=u[e[126416+(t-63488>>>6&67108860)>>2]+(255&t)|0]:(r=2,t>>>0<917504||(t>>>0<=918015?r=u[e[128476+(t-917504>>>6&67108860)>>2]+(255&t)|0]:t>>>0<983040||(t>>>0<1048574?r=3:t>>>0<1048576||(r=3,t>>>0<1114110||(r=t>>>0<1114112?2:5))))))),255&r}function ss(t,r){var s=0,a=0,i=0,o=0,d=0,f=0,m=0,M=0,y=0;if(!((0|(s=e[33709]))<=0)){if(i=(0|t)>31?t-32|0:t,t=0,s>>>0>=4)for(y=-4&s;f=2|t,m=1|t,a=e[134912+((d=3|t)<<6)>>2]==(0|i)?d:e[134912+(f<<6)>>2]==(0|i)?f:e[134912+(m<<6)>>2]==(0|i)?m:e[134912+(t<<6)>>2]==(0|i)?t:a,t=t+4|0,(0|y)!=(0|(o=o+4|0)););if(o=3&s)for(;a=e[134912+(t<<6)>>2]==(0|i)?t:a,t=t+1|0,(0|o)!=(0|(M=M+1|0)););(0|a)<=0||(e[33709]=a,s=a)}Pn(r,s)}function qA(t){var r,s=0,a=0,i=0;for(pe=r=pe-96|0,na(r,t,60),Eo(r,1);i=Fs(g[0|(a=r+s|0)]),g[0|a]=i,s=s+1|0,255&i;);e[r+92>>2]=0,e[r+84>>2]=0,e[r+88>>2]=0,e[r+76>>2]=0,e[r+80>>2]=0,e[r+72>>2]=t;e:{t:{s:{if(nr(r,1)){if(u[202976])break s;break t}if(e[50303]||_r(),s=268437247,!(t=Rs(201216,r))||!nr(e[t+8>>2],0))break e;if(!u[202976])break t}nr(202976,2)}rA(e[32972]),e[r+76>>2]=e[32972]+40,Bo(r+72|0,202976),s=0}return pe=r+96|0,s}function kA(t,r){if(!t)return 0;e:{t:{if(t){if(r>>>0<=127)break t;if(e[e[56841]>>2]){if(r>>>0<=2047){g[t+1|0]=63&r|128,g[0|t]=r>>>6|192,t=2;break e}if(!((-8192&r)!=57344&r>>>0>=55296)){g[t+2|0]=63&r|128,g[0|t]=r>>>12|224,g[t+1|0]=r>>>6&63|128,t=3;break e}if(r-65536>>>0<=1048575){g[t+3|0]=63&r|128,g[0|t]=r>>>18|240,g[t+2|0]=r>>>6&63|128,g[t+1|0]=r>>>12&63|128,t=4;break e}}else if((-128&r)==57216)break t;e[56798]=25,t=-1}else t=1;break e}g[0|t]=r,t=1}return t}function XA(t){var r=0,s=0,a=0,i=0;if(e[t+20>>2]=0,(a=(s=e[t+8>>2])-(r=e[t+4>>2])|0)>>>0>=9)for(;tr(e[r>>2]),r=e[t+4>>2]+4|0,e[t+4>>2]=r,(a=(s=e[t+8>>2])-r|0)>>>0>8;);switch(i=512,(a>>>2|0)-1|0){case 1:i=1024;case 0:e[t+16>>2]=i}if((0|r)!=(0|s)){for(;tr(e[r>>2]),(0|s)!=(0|(r=r+4|0)););(0|(r=e[t+8>>2]))!=(0|(s=e[t+4>>2]))&&(e[t+8>>2]=r+(3+(s-r|0)&-4))}(t=e[t>>2])&&tr(t)}function lo(t,r,s){var a=0,i=0;a=!!(0|s);e:{t:{s:if(!(!(3&t)|!s))for(i=255&r;;){if((0|i)==u[0|t])break t;if(a=!!(0|(s=s-1|0)),!(3&(t=t+1|0)))break s;if(!s)break}if(!a)break e;if(!(u[0|t]==(255&r)|s>>>0<4))for(a=K(255&r,16843009);;){if(~(i=a^e[t>>2])&i-16843009&-2139062144)break t;if(t=t+4|0,!((s=s-4|0)>>>0>3))break}if(!s)break e}for(r&=255;;){if((0|r)==u[0|t])return t;if(t=t+1|0,!(s=s-1|0))break}}return 0}function ws(t,r){var s=0,a=0;e:{if(a=255&r){if(3&t)for(;;){if(!(s=u[0|t])|(0|s)==(255&r))break e;if(!(3&(t=t+1|0)))break}t:if(!(~(s=e[t>>2])&s-16843009&-2139062144))for(a=K(a,16843009);;){if(~(s^=a)&s-16843009&-2139062144)break t;if(s=e[t+4>>2],t=t+4|0,s-16843009&~s&-2139062144)break}for(;(a=u[0|(s=t)])&&(t=s+1|0,(0|a)!=(255&r)););return s}return zr(t)+t|0}return t}function ZA(t,r,s,a,i){var o,d=0,f=0;f=-1;e:if(!(((d=(0|(o=2147483647&a))==2147418112)&!s?t|r:d&!!(0|s)|o>>>0>2147418112)||(d=2147483647&i)>>>0>2147418112&(0|d)!=2147418112)){if(!(t|s|d|o|r))return 0;if((0|(d=a&i))>0|(0|d)>=0){if((!!(0|s)|(0|a)!=(0|i))&(0|a)<(0|i))break e;return!!(t|s|a^i|r)}(!s&(0|a)==(0|i)?t|r:!!(0|s)&(0|a)>=(0|i)|(0|a)>(0|i))||(f=!!(t|s|a^i|r))}return f}function Eo(t,r){var s,a=0;pe=s=pe+-64|0,g[202976]=0,e[s+48>>2]=47,Br(s+59|0,91351,s+48|0),r||(g[s+59|0]=0);e:{t:{if(t&&(t=di(t,43))){if(g[0|t]=0,g[0|(t=t+1|0)]-48>>>0>=10)break t;a=Xi(t)}if((0|a)<=0)break e;if(a>>>0<=9){e[s+4>>2]=a,e[s>>2]=s+59,Br(202976,91378,s);break e}e[s+20>>2]=a-10,e[s+16>>2]=s+59,Br(202976,91503,s+16|0);break e}e[s+36>>2]=t,e[s+32>>2]=s+59,Br(202976,85425,s+32|0)}pe=s- -64|0}function Mn(t){var r,s=0,a=0,i=0;pe=r=pe-80|0,s=pn(t,r+12|0),e[r+12>>2]?(na(a=r+16|0,s,60),s=0,Eo(a,1),!nr(a,0)|!u[202976]||nr(202976,2),rA(e[32972]),Bo(t,86012)):s=268437247,pe=r+80|0;e:{t:{s:{n:{if((0|s)<=268437502){if(!s)break e;if((0|s)==268436479)break t;if((0|s)!=268437247)break n;return 2}if((0|s)==268437503|(0|s)==268437759)break s;if((0|s)==268439295)break e}return-1}return 2}i=1}return i}function tn(t,r,s,a,i,o,d,f,m){var M,y,P;m=ps(r,s,f,m),f=X,i=ps(a,i,o,d),a=X+f|0,f=i>>>0>(m=i+m|0)>>>0?a+1|0:a,M=d,y=s,d=(s=ps(d,i=0,s,a=0))+m|0,m=X+f|0,P=d,s=s>>>0>d>>>0?m+1|0:m,d=ps(o,0,r,0),f=X,a=ps(o,m=0,y,a),o=X+m|0,o=a>>>0>(f=f+a|0)>>>0?o+1|0:o,a=s,o=o>>>0>(m=o+P|0)>>>0?a+1|0:a,s=ps(r,0,M,i)+f|0,i=X,f=(i=s>>>0<f>>>0?i+1|0:i)+m|0,m=o,e[t+8>>2]=f,e[t+12>>2]=i>>>0>f>>>0?m+1|0:m,e[t>>2]=d,e[t+4>>2]=s}function Hr(t,r){var s=0,a=0;e:{if(3&((a=t)^r))s=u[0|r];else{if(3&r)for(;;){if(s=u[0|r],g[0|a]=s,!s)break e;if(a=a+1|0,!(3&(r=r+1|0)))break}if(!(~(s=e[r>>2])&s-16843009&-2139062144))for(;e[a>>2]=s,s=e[r+4>>2],a=a+4|0,r=r+4|0,!(s-16843009&~s&-2139062144););}if(g[0|a]=s,255&s)for(;s=u[r+1|0],g[a+1|0]=s,a=a+1|0,r=r+1|0,s;);}return t}function yn(t){var r,s=0,a=0;pe=r=pe-16|0,oe(+t),a=0|R(1),R(0);e:if((a&=2147483647)>>>0<=1072243195){if(s=1,a>>>0<1044816030)break e;s=zn(t,0)}else if(s=t-t,!(a>>>0>=2146435072)){switch(3&Ea(t,r)){case 0:s=zn(G[r>>3],G[r+8>>3]);break e;case 1:s=-Wi(G[r>>3],G[r+8>>3],1);break e;case 2:s=-zn(G[r>>3],G[r+8>>3]);break e}s=Wi(G[r>>3],G[r+8>>3],1)}return pe=r+16|0,s}function Un(t,r,s,a){var i=0,o=0,d=0;if(!((zr(a)+zr(r)|0)>=(0|s))){for(d=e[36115],s=a;i=u[0|s];)if(s=s+1|0,!((0|i)>=(0|d))){e:{t:switch(i=e[144464+(i<<2)>>2],u[i+11|0]-1|0){case 1:break e;case 0:break t;default:continue}o=u[i+14|0]<4|o;continue}1&(u[i+4|0]>>>1|o)||(e[t+8212>>2]=e[t+8212>>2]+1),e[t+8208>>2]=e[t+8208>>2]+1,o=0}r&&Ca(r,a)}}function Uo(t){var r,s=0;pe=r=pe-16|0,oe(+t),s=0|R(1),R(0);e:if((s&=2147483647)>>>0<=1072243195){if(s>>>0<1045430272)break e;t=Wi(t,0,0)}else if(s>>>0>=2146435072)t-=t;else{switch(3&Ea(t,r)){case 0:t=Wi(G[r>>3],G[r+8>>3],1);break e;case 1:t=zn(G[r>>3],G[r+8>>3]);break e;case 2:t=-Wi(G[r>>3],G[r+8>>3],1);break e}t=-zn(G[r>>3],G[r+8>>3])}return pe=r+16|0,t}function Ho(t){var r=0;e[t+296>>2]=303173648,e[t+300>>2]=370677780,r=e[26341],e[t+304>>2]=e[26340],e[t+308>>2]=r,r=e[26343],e[t+312>>2]=e[26342],e[t+316>>2]=r,Dn(t),e[t+56>>2]=2,e[t+36>>2]=3,e[t+40>>2]=1074,g[t+168|0]=5,e[t+132>>2]=32,e[t+104>>2]=1032,e[t+108>>2]=66,e[t+8>>2]=5,e[t+12>>2]=32,g[t+365|0]=64|u[t+365|0],g[t+368|0]=64|u[t+368|0],g[t+396|0]=64|u[t+396|0],g[t+399|0]=64|u[t+399|0]}function Ni(t,r,s){var a=0,i=0,o=0;e:{if(!(a=e[s+16>>2])){if(BA(s))break e;a=e[s+16>>2]}if(a-(o=e[s+20>>2])>>>0<r>>>0)return 0|os[e[s+36>>2]](s,t,r);t:if(e[s+80>>2]<0)a=0;else{for(i=r;;){if(!(a=i)){a=0;break t}if(u[(i=a-1|0)+t|0]==10)break}if((i=0|os[e[s+36>>2]](s,t,a))>>>0<a>>>0)break e;t=t+a|0,r=r-a|0,o=e[s+20>>2]}ds(o,t,r),e[s+20>>2]=e[s+20>>2]+r,i=r+a|0}return i}function Yo(t){var r,s=0,a=0;e:{if((0|(r=e[34064]))>0)for(;;){if((a=e[136284+(s<<4)>>2])&&!Ta(t,a)){if(e[136276+(s<<4)>>2])return s;if(a=-1,Ms(0,s))break e;return s}if((0|r)==(0|(s=s+1|0)))break}a=-1,Ms(t,r)||(s=Ma(e[12+(136272+(e[34064]<<4)|0)>>2],zr(t)+1|0),a=e[34064],e[12+(136272+(a<<4)|0)>>2]=s,Hr(s,t),e[34064]=a+1)}return a}function yA(t,r){var s,a=0,i=0,o=0,d=0;for(pe=s=pe-16|0,g[0|r]=0,(a=15&e[t>>2])&&(r=(i=zr(r=Hr(r,co(128496,64|a))))+r|0),a=8;;){e:{t:{if(a>>>0<=29){if(e[t>>2]>>>a&1)break t;break e}if(!(e[t+4>>2]>>>a-32&1)|a>>>0<32)break e}(0|(i=(d=zr(o=co(128496,a))+1|0)+i|0))>=80||(e[s>>2]=o,Br(r,84439,s),r=r+d|0)}if((0|(a=a+1|0))==64)break}pe=s+16|0}function Dl(t,r,s){var a,i=0,o=0,d=0;if(pe=a=pe-16|0,u[0|t]){for(d=e[30450];;)if(o=t,t=t+1|0,!((0|(i=g[0|o]))==32|i-9>>>0<5)){for((0|(i=Xi(o)))>0&&((0|i)<32?e[r>>2]=e[r>>2]|1<<i:(o=co(129568,s),e[a+4>>2]=i,e[a>>2]=o,ba(d,84902,a)),o=t);o=(t=o)+1|0,(i=g[0|t])-48>>>0<10|(32|i)-97>>>0<26;);if(!i)break}}pe=a+16|0}function Fn(t,r,s){var a=0,i=0,o=0,d=0;e:if(r&&!((0|(i=s-4|0))<=0))for(o=(0|(s=e[r-4>>2]))!=34?(0|s)==39?s:0:s,s=0;;){if(d=s,!(s=e[r>>2]))break e;t:{if(!o){if((0|s)==32|s-9>>>0<5)break e;if((0|s)!=47)break t;break e}if((0|d)!=92&&(0|s)==(0|o))break e}if(r=r+4|0,!((0|i)>(0|(a=ia(s,t+a|0)+a|0))))break}return g[t+a|0]=0,a}function aa(t){var r=0;e:if(!Di(t)){r=0;t:if(!(t>>>0<768)){if(t-2305>>>0<=1270){if((124&t)>>>0<100)break e;if(r=1,DA(93850,t))break t;return t-3450>>>0<6}if((0|t)==1541|t-1456>>>0<19|(0|t)==1648||(0|(r=-256&t))==10240|(0|r)==4352|t-3904>>>0<125|t>>>0<880)break e;r=1,t-1611>>>0<20||(r=t-12353>>>0<30400)}return r}return 1}function Bo(t,r){var s=0;t?((s=e[t+4>>2])&&Hr(133208,s),(s=e[t>>2])&&na(133168,s,40),e[33289]=u[t+14|0],e[33291]=u[t+13|0],e[33290]=u[t+12|0],na(134672,u[0|r]!=33|u[r+1|0]!=118?r:(u[r+2|0]==47?3:0)+r|0,40),t=e[50298],e[33678]=e[50297],e[33679]=t,t=e[50302],e[33682]=e[50301],e[33683]=t,t=e[50300],e[33680]=e[50299],e[33681]=t):wr(133152,0,76)}function To(t,r,s,a){g[t+53|0]=1;e:if(e[t+4>>2]==(0|s)){g[t+52|0]=1;t:{if(!(s=e[t+16>>2])){if(e[t+36>>2]=1,e[t+24>>2]=a,e[t+16>>2]=r,(0|a)!=1)break e;if(e[t+48>>2]==1)break t;break e}if((0|r)==(0|s)){if((0|(s=e[t+24>>2]))==2&&(e[t+24>>2]=a,s=a),e[t+48>>2]!=1)break e;if((0|s)==1)break t;break e}e[t+36>>2]=e[t+36>>2]+1}g[t+54|0]=1}}function _n(t,r){var s=0,a=0,i=0,o=0,d=0;e:if(s=e[r>>2])for(;;){a=0;t:if(t){for(;d=g[a+s|0],(i=e[(a<<2)+t>>2])&&(a=a+1|0,(0|d)==(0|i)););s:switch(i-34|0){case 0:case 5:break s;default:break t}if(!d)break e}if(!(s=e[((o=o+1|0)<<3)+r>>2]))break}return e[4+((o<<3)+r|0)>>2]}function Li(t,r){e:if((0|r)>=1024){if(t*=898846567431158e293,r>>>0<2047){r=r-1023|0;break e}t*=898846567431158e293,r=((0|r)>=3069?3069:r)-2046|0}else(0|r)>-1023||(t*=2004168360008973e-307,r>>>0>4294965304?r=r+969|0:(t*=2004168360008973e-307,r=((0|r)<=-2960?-2960:r)+1938|0));return Q(0,0),Q(1,r+1023<<20),t*+J()}function mi(t,r,s,a){var i,o,d,f=0;return pe=o=pe-16|0,e[o+12>>2]=a,pe=i=pe-160|0,d=r?t:i+158|0,e[i+144>>2]=d,f=-1,t=r-1|0,e[i+148>>2]=t>>>0<=r>>>0?t:0,t=wr(i,0,144),e[t+76>>2]=-1,e[t+36>>2]=17,e[t+80>>2]=-1,e[t+44>>2]=t+159,e[t+84>>2]=t+144,(0|r)<0?e[56798]=61:(g[0|d]=0,f=Bs(t,s,a,15,16)),pe=t+160|0,pe=o+16|0,f}function Hn(t,r){var s=0,a=0,i=0;e:if(s=u[0|t])for(;;){if(!(a=u[0|r])){i=s;break e}if((0|s)!=(0|a)&&(0|(a=s-65>>>0<26?32|s:s))!=(0|((s=u[0|r])-65>>>0<26?32|s:s))){i=u[0|t];break e}if(r=r+1|0,s=u[t+1|0],t=t+1|0,!s)break}return(i=(t=255&i)-65>>>0<26?32|t:t)-((t=u[0|r])-65>>>0<26?32|t:t)|0}function Ri(t,r,s){var a=0,i=0;if(a=e[s+72>>2],e[s+72>>2]=a-1|a,(0|(a=e[s+4>>2]))==(0|(i=e[s+8>>2]))?a=r:(ds(t,a,a=r>>>0>(a=i-a|0)>>>0?a:r),e[s+4>>2]=a+e[s+4>>2],t=t+a|0,a=r-a|0),a)for(;;){if(Xo(s)||!(i=0|os[e[s+32>>2]](s,t,a)))return r-a|0;if(t=t+i|0,!(a=a-i|0))break}return r}function Xi(t){for(var r=0,s=0,a=0,i=0;t=(r=t)+1|0,(0|(s=g[0|r]))==32|s-9>>>0<5;);e:{t:{s:switch((s=g[0|r])-43|0){case 0:break t;case 2:break s;default:break e}i=1}s=g[0|t],r=t}if(s-48>>>0<10)for(;a=48+(K(a,10)-g[0|r]|0)|0,t=g[r+1|0],r=r+1|0,t-48>>>0<10;);return i?a:0-a|0}function JA(t,r){var s,a,i,o=0;return pe=s=pe-32|0,e[r>>2]=0,e[r+4>>2]=0,e[(o=a=r+24|0)>>2]=0,e[o+4>>2]=0,e[(o=i=r+16|0)>>2]=0,e[o+4>>2]=0,e[(o=r+8|0)>>2]=0,e[o+4>>2]=0,e[s+28>>2]=r+28,e[s+24>>2]=a,e[s+20>>2]=r+20,e[s+16>>2]=i,e[s+12>>2]=r+12,e[s+8>>2]=o,e[s+4>>2]=r+4,e[s>>2]=r,t=lr(t,84553,s),pe=s+32|0,t}function _A(t){var r=0,s=0,a=0;if((r=u[0|t])&&((s=u[t+1|0])?(s=r|s<<8,(r=u[t+2|0])&&(s|=r<<16,(t=u[t+3|0])&&(s|=t<<24))):s=r),(0|(r=e[36115]))>0)for(t=0;;){if(!(!(a=e[144464+(t<<2)>>2])|e[a>>2]!=(0|s)))return u[a+10|0];if((0|r)==(0|(t=t+1|0)))break}return 0}function $A(t,r,s,a){var i,o=0,d=0,f=0,m=0,M=0;pe=i=pe-240|0,e[i>>2]=t,f=1;e:if(!((0|s)<2))for(o=t;;){if((0|wi(t,d=(o=o-4|0)-e[((m=s-2|0)<<2)+a>>2]|0,r))>=0&&(0|wi(t,o,r))>=0)break e;if(M=d,o=(d=(0|wi(d,o,r))>=0)?M:o,e[(f<<2)+i>>2]=o,f=f+1|0,!((0|(s=d?s-1|0:m))>1))break}ji(i,f),pe=i+240|0}function Br(t,r,s){var a,i,o,d=0;return pe=i=pe-16|0,e[i+12>>2]=s,pe=a=pe-160|0,ds(o=a+8|0,124528,144),e[a+52>>2]=t,e[a+28>>2]=t,d=(d=-2-t|0)>>>0>2147483647?2147483647:d,e[a+56>>2]=d,t=t+d|0,e[a+36>>2]=t,e[a+24>>2]=t,t=Fi(o,r,s),d&&(r=e[a+28>>2],g[r-((0|r)==e[a+24>>2])|0]=0),pe=a+160|0,pe=i+16|0,t}function ji(t,r){var s,a=0,i=0,o=0,d=0,f=0;if(a=4,pe=s=pe-256|0,(0|r)>=2)for(e[(f=(r<<2)+t|0)>>2]=s;;){for(o=a>>>0>=256?256:a,ds(e[f>>2],e[t>>2],o),i=0;d=(i<<2)+t|0,i=i+1|0,ds(e[d>>2],e[(i<<2)+t>>2],o),e[d>>2]=e[d>>2]+o,(0|r)!=(0|i););if(!(a=a-o|0))break}pe=s+256|0}function Nr(t,r,s){var a,i=0;return pe=a=pe-96|0,e[a+88>>2]=0,e[a+92>>2]=1073741824,e[a+84>>2]=r,r=ma(t,a+84|0,s,a+88|0,2,0),536870912&(i=e[a+88>>2])?(r=e[47202],e[47202]=0,g[a+2|0]=32,I[a>>1]=8192,na(i=3|a,e[a+84>>2],77),t=at(t,i,0,0),Hr(s,189088),e[47202]=r):t=r?i:0,pe=a+96|0,t}function vA(t,r,s){var a=0,i=0,o=0;i=Zi(t),a=e[r>>2];e:{t:if((0|i)>=0){if(a){if(!Ta(t,s))break t;(o=e[a+688>>2])&&tr(o),tr(a),e[r>>2]=0}e[r>>2]=He(t),t=Hr(s,t),Ls(s=e[r>>2],s+228|0,0)&&(gn(e[e[32972]+60>>2]),g[0|t]=0,i=-1),a=e[r>>2],e[a+292>>2]=i}else if(!a)break e;g[a+268|0]=0}return i}function Ko(t){var r=0,s=0;return(0|(r=e[t+76>>2]))>=0&(!r|e[56823]!=(-1073741825&r))?(s=e[(r=t+76|0)>>2],e[r>>2]=s||1073741823,(0|(s=e[t+4>>2]))==e[t+8>>2]?t=sA(t):(e[t+4>>2]=s+1,t=u[0|s]),e[r>>2]=0,t):(0|(r=e[t+4>>2]))!=e[t+8>>2]?(e[t+4>>2]=r+1,u[0|r]):sA(t)}function En(t,r,s){var a=0,i=0;e:{t:{if(s>>>0>=4){if(3&(t|r))break t;for(;;){if(e[t>>2]!=e[r>>2])break t;if(r=r+4|0,t=t+4|0,!((s=s-4|0)>>>0>3))break}}if(!s)break e}for(;;){if((0|(a=u[0|t]))==(0|(i=u[0|r]))){if(r=r+1|0,t=t+1|0,s=s-1|0)continue;break e}break}return a-i|0}return 0}function Ga(t,r){var s,a=0,i=0,o=0;pe=s=pe-16|0,r?(Sa(s,i=((a=r>>31)^r)-a|0,0,0,0,(a=Re(i))+81|0),i=0+e[s+8>>2]|0,a=(65536^e[s+12>>2])+(16414-a<<16)|0,o=-2147483648&r|(a=i>>>0<o>>>0?a+1|0:a),a=e[s+4>>2],r=e[s>>2]):r=0,e[t>>2]=r,e[t+4>>2]=a,e[t+8>>2]=i,e[t+12>>2]=o,pe=s+16|0}function Vi(t){var r,s=0,a=0,i=0;if((0|(s=ws(t,61)))==(0|t))return 0;e:if(!u[(r=s-t|0)+t|0]&&(s=e[56800])&&(a=e[s>>2])){for(;;){if(sl(t,a,r)||(a=e[s>>2]+r|0,u[0|a]!=61)){if(a=e[s+4>>2],s=s+4|0,a)continue;break e}break}i=a+1|0}return i}function Zi(t){var r=0,s=0;e:if(!((0|(s=e[34461]))<=0)){for(;;){if(!Ta(t,K(r,44)+137856|0)){e[34457]=r;break e}if((0|s)==(0|(r=r+1|0)))break}return-1}return(t=(0|r)==(0|s))?-1:((0|(t=t?-1:r))!=e[36114]&&(e[36115]=0,Xr(t),e[36114]=t,e[36115]=e[36115]+1),r)}function qo(t,r,s,a){var i=0,o=0;e:if((32|u[0|r])!=32){if(i=((0|a)>2)<<1,o=In(t,r,s,i=(0|a)>1?4|i:i),u[0|s]!=21)for(i|=1,r=r+o|0,o=1;;){if((32|u[0|r])==32)break e;if(r=In(t,r,s,i)+r|0,o=o+1|0,u[0|s]==21)break}return Hr(189088,s),0}return Or(t,s,a,o),r}function ia(t,r){var s,a=0,i=0,o=0;if(t>>>0<=127)return g[0|r]=t,1;if(t>>>0>=1114112)return g[0|r]=32,1;for(a=K(s=t>>>0<2048?1:t>>>0<65536?2:3,6),g[0|r]=u[s+93842|0]|t>>>a;a=a-6|0,g[(i=i+1|0)+r|0]=t>>>a&63|128,(0|(o=o+1|0))!=(0|s););return s+1|0}function xA(t){var r=0,s=0;e:{if((0|(r=e[t+12>>2]))>=e[t+16>>2]){if(r=0,(0|(s=0|$e(e[t+8>>2],t+24|0,2048)))<=0){if(!s|(0|s)==-44)break e;return e[56798]=0-s,0}e[t+16>>2]=s}s=r,r=t+r|0,e[t+12>>2]=s+B[r+40>>1],s=e[r+36>>2],e[t>>2]=e[r+32>>2],e[t+4>>2]=s,r=r+24|0}return r}function el(t,r){var s,a=0;if(a=e[t+632>>2])return!!(0|Ra(a,r));e:{t:{if((0|(s=e[t+600>>2]))>0){if(a=0,(r=r-s|0)-1>>>0<255)break t;break e}if((a=r-192|0)>>>0<=413)return 128&u[344+(u[a+94240|0]+t|0)|0];if(a=0,r>>>0>255)break e}a=128&u[344+(t+r|0)|0]}return a}function Wi(t,r,s){var a,i,o;return o=(a=t*t)*(a*a)*(158969099521155e-24*a-25050760253406863e-24)+(a*(27557313707070068e-22*a-.0001984126982985795)+.00833333333332249),i=a*t,s?t-(a*(.5*r-o*i)-r+.16666666666666632*i):i*(a*o-.16666666666666632)+t}function Ji(t,r){var s,a=0,i=0,o=0;pe=s=pe-16|0,r?(Sa(s,a=r,0,0,0,(r=Re(r))+81|0),a=0+e[s+8>>2]|0,r=(65536^e[s+12>>2])+(16414-r<<16)|0,o=i>>>0>a>>>0?r+1|0:r,i=e[s+4>>2],r=e[s>>2]):r=0,e[t>>2]=r,e[t+4>>2]=i,e[t+8>>2]=a,e[t+12>>2]=o,pe=s+16|0}function tl(t){var r,s=0;pe=r=pe-16|0,g[r+15|0]=10;e:{if(!(s=e[t+16>>2])){if(BA(t))break e;s=e[t+16>>2]}(0|s)==(0|(s=e[t+20>>2]))|e[t+80>>2]==10?os[e[t+36>>2]](t,r+15|0,1):(e[t+20>>2]=s+1,g[0|s]=10)}pe=r+16|0}function Xo(t){var r,s=0;return s=e[t+72>>2],e[t+72>>2]=s-1|s,e[t+20>>2]!=e[t+28>>2]&&os[e[t+36>>2]](t,0,0),e[t+28>>2]=0,e[t+16>>2]=0,e[t+20>>2]=0,4&(s=e[t>>2])?(e[t>>2]=32|s,-1):(r=e[t+44>>2]+e[t+48>>2]|0,e[t+8>>2]=r,e[t+4>>2]=r,s<<27>>31)}function $i(t){var r=0;e:{t:{s:{n:{if((0|(t=qA(t)))<=268437502){if(!t)break e;if((0|t)==268436479)break t;if((0|t)!=268437247)break n;return 2}if((0|t)==268437503|(0|t)==268437759)break s;if((0|t)==268439295)break e}return-1}return 2}r=1}return r}function zr(t){var r=0,s=0,a=0;e:{if(3&(r=t))for(;;){if(!u[0|r])break e;if(!(3&(r=r+1|0)))break}for(;s=r,r=r+4|0,!(~(a=e[s>>2])&a-16843009&-2139062144););for(;s=(r=s)+1|0,u[0|r];);}return r-t|0}function li(t,r,s){var a,i=0,o=0,d=0;e[t+112>>2]=r,e[t+116>>2]=s,a=e[t+4>>2],i=e[t+44>>2]-a|0,e[t+120>>2]=i,e[t+124>>2]=i>>31,i=e[t+8>>2],r|s&&((0|s)>=(0|(d=(o=i-a|0)>>31))&r>>>0>=o>>>0|(0|s)>(0|d)||(i=r+a|0)),e[t+104>>2]=i}function Zo(t,r){var s,a,i=0;if(oe(+t),s=0|R(1),a=0|R(0),(0|(i=s>>>20&2047))!=2047){if(!i)return t==0?i=0:(t=Zo(18446744073709552e3*t,r),i=e[r>>2]+-64|0),e[r>>2]=i,t;e[r>>2]=i-1022,Q(0,0|a),Q(1,-2146435073&s|1071644672),t=+J()}return t}function zn(t,r){var s,a,i=0;return(a=1-(i=.5*(s=t*t)))+(1-a-i+(s*(s*(s*(2480158728947673e-20*s-.001388888888887411)+.0416666666666666)+(i=s*s)*i*(s*(-11359647557788195e-27*s+2087572321298175e-24)-27557314351390663e-23))-t*r))}function Ti(t,r,s){var a=0,i=0;if(r)for(;s=s-1|0,i=t,t=bo(t,r,10),a=X,g[0|s]=i-ps(t,a,10,0)|48,i=r>>>0>9,r=a,i;);if(t)for(;r=(t>>>0)/10|0,g[0|(s=s-1|0)]=t-K(r,10)|48,a=t>>>0>9,t=r,a;);return s}function Jo(t,r){var s=0,a=0,i=0;e:if(t){for(;i=g[r+s|0],(a=e[(s<<2)+t>>2])&&(s=s+1|0,(0|i)==(0|a)););t:switch(a-34|0){case 0:case 5:break t;default:break e}if(!i)return 0}return 1}function rl(t,r,s){var a,i=0;return pe=a=pe-16|0,!(64&r)&&(i=0,4259840&~r)||(e[a+12>>2]=s+4,i=e[s>>2]),e[a>>2]=i,e[a+4>>2]=0,(t=0|Se(-100,0|t,32768|r,0|a))>>>0>=4294963201&&(e[56798]=0-t,t=-1),pe=a+16|0,t}function sl(t,r,s){var a=0,i=0,o=0;if(!s)return 0;e:if(a=u[0|t]){for(;;){if((i=u[0|r])&&!(!(s=s-1|0)|(0|a)!=(0|i))){if(r=r+1|0,a=u[t+1|0],t=t+1|0,a)continue;break e}break}o=a}return(255&o)-u[0|r]|0}function Po(t,r){var s,a=0;pe=a=pe-128|0,a=wr(a,0,128),g[a+98|0]=9,g[a+66|0]=9,g[a+34|0]=t,I[a+68>>1]=1,s=e[36125],e[a+104>>2]=s,e[a+72>>2]=s,e[a+40>>2]=e[144464+(t<<2)>>2],g[a+2|0]=9,e[a+8>>2]=s,Cs(0,0,a+32|0,r,0),pe=a+128|0}function al(t){var r=0,s=0,a=0;if(g[e[t>>2]]-48>>>0>=10)return 0;for(;a=e[t>>2],s=-1,r>>>0<=214748364&&(s=(0|(s=g[0|a]-48|0))>(2147483647^(r=K(r,10)))?-1:s+r|0),e[t>>2]=a+1,r=s,g[a+1|0]-48>>>0<10;);return r}function nl(t,r){var s=0;if(!(!t|e[t>>2]-48>>>0>=10)){if(e[t>>2]-48>>>0<10)for(;s=(e[t>>2]+K(s,10)|0)-48|0,e[(t=t+4|0)>>2]-48>>>0<10;);(0|r)==1&&(s=(0|Fs(e[t>>2]))==115?K(s,1e3):s)}return s}function La(t){var r=0;r=1;e:{switch(0|or(t)){case 30:if(r=0,(0|t)==160|(0|t)==8199|(0|t)==8239)break e;return 1;case 0:if(t-9>>>0<5)return 1;if((0|t)==133)break e;break;case 28:case 29:break e}r=0}return r}function il(t,r,s){var a,i=0;return pe=a=pe-16|0,g[a+6|0]=0,g[a+7|0]=95,i=ia(i=r,r=a+8|0)+a|0,g[i+8|0]=32,g[i+9|0]=0,Nr(t,a+7|0,s)||(g[a+7|0]=32,Nr(t,r,s)||Es(t,r,s,20,0,0,0)),pe=a+16|0,g[0|s]}function ol(t){var r=0,s=0;s=170;e:if(!((0|t)<170))for(;;){if((0|t)==(0|s))return B[101616+(r<<1|2)>>1];if((2147483646&(r=r+2|0))==124)break e;if(!((0|(s=B[101616+(r<<1)>>1]))<=(0|t)))break}return 0}function ps(t,r,s,a){var i,o,d,f,m=0,M=0;return f=K(m=s>>>16|0,M=t>>>16|0),m=(65535&(M=((d=K(i=65535&s,o=65535&t))>>>16|0)+K(M,i)|0))+K(m,o)|0,X=(K(r,s)+f|0)+K(t,a)+(M>>>16)+(m>>>16)|0,65535&d|m<<16}function Fs(t){var r=0,s=0,a=0,i=0;for(r=2778;;){if((0|(s=e[1040+((a=(r+i|0)/2|0)<<4)>>2]))==(0|t))return(r=e[1048+(a<<4)>>2])||t;if(!((0|(i=(s=t>>>0>s>>>0)?a+1|0:i))<=(0|(r=s?r:a-1|0))))break}return t}function MA(t){var r=0,s=0,a=0,i=0;for(r=2778;;){if((0|(s=e[1040+((a=(r+i|0)/2|0)<<4)>>2]))==(0|t))return(r=e[1044+(a<<4)>>2])||t;if(!((0|(i=(s=t>>>0>s>>>0)?a+1|0:i))<=(0|(r=s?r:a-1|0))))break}return t}function ci(t){var r,s=0;return pe=r=pe-112|0,(t=0|Ne(0|t,0|r))>>>0>=4294963201&&(e[56798]=0-t,t=-1),s=0-e[56798]|0,t||(s=-31,(61440&e[r+12>>2])!=16384&&(s=e[r+40>>2])),pe=r+112|0,s}function EA(t,r,s){var a;if(!(a=e[t+16>>2]))return e[t+36>>2]=1,e[t+24>>2]=s,void(e[t+16>>2]=r);e:{if((0|r)==(0|a)){if(e[t+24>>2]!=2)break e;return void(e[t+24>>2]=s)}g[t+54|0]=1,e[t+24>>2]=2,e[t+36>>2]=e[t+36>>2]+1}}function mn(t,r,s,a,i){var o;if(pe=o=pe-256|0,!(73728&i|(0|s)<=(0|a))){if(wr(o,255&r,(s=(a=s-a|0)>>>0<256)?a:256),!s)for(;rn(t,o,256),(a=a-256|0)>>>0>255;);rn(t,o,a)}pe=o+256|0}function bi(t,r,s){var a=0;e:{if(t){if(a=e[t>>2]){tr(e[a+4>>2]),a=e[t>>2];break e}if(a=Fr(16),e[t>>2]=a,a)break e;r=48}return r}return e[a>>2]=0,e[a+4>>2]=iA(s),t=e[t>>2],e[t+8>>2]=0,e[t+12>>2]=0,r}function Za(t){var r=0,s=0;Da(t),os[e[t+12>>2]](t),1&g[0|t]||((r=e[t+52>>2])&&(e[r+56>>2]=e[t+56>>2]),(s=e[t+56>>2])&&(e[s+52>>2]=r),e[56816]==(0|t)&&(e[56816]=s),tr(e[t+96>>2]),tr(t))}function Pi(t){var r=0,s=0;r=1;e:{t:{s:{n:switch((s=or(t))-9|0){case 1:break e;case 6:case 18:break s;case 0:break n;default:break t}return(0|Fs(t))!=(0|t)}return fe(t,s)>>>15&1}r=0}return r}function Do(t){var r,s,a,i=0,o=0;if(a=zr(t)+1|0,i=e[33282],(0|(s=(r=e[33287])+a|0))>=e[33286]){if(!(i=Ma(i,o=s+1e3|0)))return-1;e[33286]=o,e[33282]=i}return ds(i+r|0,t,a),e[33287]=s,r}function BA(t){var r=0;return r=e[t+72>>2],e[t+72>>2]=r-1|r,8&(r=e[t>>2])?(e[t>>2]=32|r,-1):(e[t+4>>2]=0,e[t+8>>2]=0,r=e[t+44>>2],e[t+28>>2]=r,e[t+20>>2]=r,e[t+16>>2]=r+e[t+48>>2],0)}function So(t,r,s,a){e:if(t){t:switch(r+2|0){case 0:return void(g[0|t]=s);case 1:return void(I[t>>1]=s);case 2:case 3:return void(e[t>>2]=s);case 5:break t;default:break e}e[t>>2]=s,e[t+4>>2]=a}}function Go(t,r,s,a,i,o,d,f,m){var M;pe=M=pe-16|0,sa(M,r,s,a,i,o,d,f,-2147483648^m),a=e[M>>2],s=e[M+4>>2],r=e[M+12>>2],e[t+8>>2]=e[M+8>>2],e[t+12>>2]=r,e[t>>2]=a,e[t+4>>2]=s,pe=M+16|0}function Ta(t,r){var s=0,a=0;e:if(!(!(s=u[0|t])|(0|s)!=(0|(a=u[0|r]))))for(;;){if(a=u[r+1|0],!(s=u[t+1|0]))break e;if(r=r+1|0,t=t+1|0,(0|s)!=(0|a))break}return s-a|0}function co(t,r){var s=0,a=0,i=0;if(!(s=e[t>>2]))return 84399;if(e[t+4>>2]!=(0|r))for(;;){if(!(s=e[(a=t+8|0)>>2]))return 84399;if(i=t,t=a,e[i+12>>2]==(0|r))break}return s}function $o(t,r,s){var a=0,i=0,o=0;e:if(s){for(;;){if(!(!(a=e[r>>2])|!(i=e[t>>2])|(0|a)!=(0|i))){if(r=r+4|0,t=t+4|0,s=s-1|0)continue;break e}break}o=i-a|0}return o}function un(t){var r,s=0,a=0;if((0|(r=e[36115]))>0)for(;;){if(!(!(a=e[144464+(s<<2)>>2])|e[a>>2]!=(0|t)))return u[a+10|0];if((0|r)==(0|(s=s+1|0)))break}return 0}function uo(t){var r,s;return(t=(r=e[33175])+(s=t+7&-8)|0)>>>0<=r>>>0&&s||t>>>0>ce.byteLength/65536<<16>>>0&&!(0|rt(0|t))?(e[56798]=48,-1):(e[33175]=t,r)}function Ci(t){var r=0;e:if(!((r=or(t))>>>0>27)){if(!(1<<r&134259072)){if((0|r)==6)return 1;if((0|r)!=9)break e;return(0|MA(t))!=(0|t)}return fe(t,r)>>>14&1}return 0}function Al(t,r){var s=0;return g[0|t]=r>>>24,g[0|(s=(r>>>0>16777215)+t|0)]=r>>>16,g[0|(s=s+!!(16711680&r)|0)]=r>>>8,g[0|(s=s+!!(65280&r)|0)]=r,g[s+!!(255&r)|0]=0,t}function TA(t,r){e:if((0|(t=qs(t,r)))<=268437502){if(!t|(0|t)==268436479|(0|t)!=268437247)break e;return}}function eA(t){var r=0;return r=e[t>>2]-1|0,(r=g[121600+(K(0-r&r,124511785)>>>27|0)|0])||(t=e[t+4>>2],r=(t=g[121600+(K(0-t&t,124511785)>>>27|0)|0])?t+32|0:0),r}function tA(t){var r=0,s=0,a=0;e:{if(!((r=or(t))>>>0>27)){if(s=1,116672&(a=1<<r))break e;if(134227968&a)return fe(t,r)>>>10&1}s=0}return s}function Di(t){var r=0,s=0,a=0;e:{if(!((r=or(t))>>>0>27)){if(s=1,34752&(a=1<<r))break e;if(134227968&a)return fe(t,r)>>>10&1}s=0}return s}function Fo(){var t,r=0;(t=e[56797])&&((r=e[t+8>>2])&&os[e[e[r>>2]+12>>2]](r),(r=e[t+4>>2])&&os[e[e[r>>2]+16>>2]](r),tr(t)),e[56797]=0,e[56797]=Jn()}function ea(t,r){var s=0;return t&&(s=ps(t,0,r,0),(t|r)>>>0<65536||(s=X?-1:s)),!(t=Fr(s))|!(3&u[t-4|0])||wr(t,0,s),t}function PA(t,r){var s,a;a=e[130128+(r-K(s=(0|r)/100|0,100)<<2)>>2],e[t+100>>2]=a,e[t+96>>2]=a,r+99>>>0>=199&&(e[t+100>>2]=e[130128+(s<<2)>>2])}function rA(t){var r=0;(r=Fr(1344))&&(t=ds(r,t,1344),r=216192+(e[50758]<<4)|0,e[r>>2]=11,e[r+8>>2]=t,t=e[50758]+1|0,e[50758]=(0|t)<=169?t:0)}function Si(t,r){var s=0;e:if(s=e[t>>2])for(;;){if(r&&!Ta(r,s))break e;if(!(s=e[(t=t+8|0)>>2]))break}return e[t+4>>2]}function sA(t){var r,s=0;return pe=r=pe-16|0,s=-1,Xo(t)||(0|os[e[t+32>>2]](t,r+15|0,1))==1&&(s=u[r+15|0]),pe=r+16|0,s}function Ra(t,r){var s=0,a=0;if(r){for(;a=t,(s=e[t>>2])&&(t=a+4|0,(0|r)!=(0|s)););return s?a:0}return(ll(t)<<2)+t|0}function DA(t,r){var s=0,a=0;if(s=B[t>>1])for(;;){if(a=a+1|0,(0|r)==(0|s))return a;if(!(s=B[(a<<1)+t>>1]))break}return 0}function aA(t,r){var s=0,a=0;r>>>0<=31?(a=e[t>>2],s=t+4|0):(r=r-32|0,s=t),s=e[s>>2],e[t>>2]=a<<r,e[t+4>>2]=s<<r|a>>>32-r}function go(t,r){var s=0,a=0;s=e[t+4>>2],r>>>0<=31?a=e[t>>2]:(r=r-32|0,a=s,s=0),e[t+4>>2]=s>>>r,e[t>>2]=s<<32-r|a>>>r}function On(t){var r=0;t=t||1;e:{for(;;){if(r=Fr(t))break e;if(!(r=e[57276]))break;os[0|r]()}bt(),be()}return r}function zo(t){return t>>>0<=131071?u[117424+(t>>>3&31|u[117424+(t>>>8|0)|0]<<5)|0]>>>(7&t)&1:t>>>0<196606}function nA(t,r,s,a,i,o,d,f,m){e[t>>2]=r,e[t+4>>2]=s,e[t+8>>2]=a,e[t+12>>2]=65535&i|(m>>>16&32768|i>>>16&32767)<<16}function ui(t,r,s){return s?(0|t)==(0|r)?1:!Ta(e[t+4>>2],e[r+4>>2]):e[t+4>>2]==e[r+4>>2]}function SA(t){var r=0;(0|(r=0|Et(-100,0|t,0)))==-31&&(r=0|it(0|t)),r>>>0>=4294963201&&(e[56798]=0-r)}function Oo(){var t;t=Fr(84)+80|0,e[t>>2]=125420,e[t>>2]=125380,e[t>>2]=125400,Wt(0|t,125512,9),be()}function fo(t){var r,s;return r=Ko(t),s=Ko(t),Ko(t)<<16&16711680|s<<8&65280|255&r|Ko(t)<<24}function po(t){var r=0;return t?(r=1,t-9472>>>0<160|t-65529>>>0<7||(r=La(t)),r):0}function Qo(t,r){var s;return s=r>>31,e[t+76>>2],function(a,i,o){return e[a+20>>2]!=e[a+28>>2]&&(os[e[a+36>>2]](a,0,0),!e[a+20>>2])||(e[a+28>>2]=0,e[a+16>>2]=0,e[a+20>>2]=0,os[e[a+40>>2]](a,i,o,0),(0|X)<0)?-1:(e[a+4>>2]=0,e[a+8>>2]=0,e[a>>2]=-17&e[a>>2],0)}(t,r,s)}function ll(t){var r=0,s=0;for(s=t;s=(r=s)+4|0,e[r>>2];);return r-t>>2}function GA(t,r){return g[0|t]=r,g[t+4|0]=0,g[t+3|0]=r>>>24,g[t+2|0]=r>>>16,g[t+1|0]=r>>>8,t}function dn(t,r){var s=0;return(-1>>>(s=31&r)&t)<<s|((s=t)&-1<<(t=0-r&31))>>>t}function No(t,r){var s=0;return(0|t)==73&&(s=305,u[r+173|0])||(s=Fs(t)),s}function gn(t){e[36114]!=(0|t)&&(e[36115]=0,Xr(t),e[36114]=t,e[36115]=e[36115]+1)}function FA(t){return t?e[34460]+t|0:(zA(85328,20,e[30450]),e[32320])}function iA(t){var r,s;return(s=Fr(r=zr(t)+1|0))?ds(s,t,r):0}function Yn(){var t;e[33287]=0,(t=e[33282])&&(tr(t),e[33286]=0,e[33282]=0)}function ba(t,r,s){var a;pe=a=pe-16|0,e[a+12>>2]=s,Fi(t,r,s),pe=a+16|0}function zA(t,r,s){e[s+76>>2],t=Ni(t,r,s)}function Gi(t,r){return r?t<<24|(65280&t)<<8|t>>>8&65280|t>>>24:t}function ho(t){return t-8212>>>0>=12?DA(93856,t):1}function cl(t){var r=0;t&&((r=e[t+688>>2])&&tr(r),tr(t))}function oA(t){return(0|t)<=127?di(87712,t):0}function OA(t){return!(t=u[0|t]?1:En(t,t+1|0,3))}function ul(t){(t=(0|(t=0|ht(0|t)))!=27?t:0)&&(e[56798]=t)}function wi(t,r,s){return t|=0,r|=0,0|os[0|(s|=0)](t,r)}function di(t,r){return t=ws(t,r),u[0|t]==(255&r)?t:0}function AA(t,r){return wt(t,r,2147483647),X=Pe,Ut}function eo(t){return t?31-Re(t-1^t)|0:32}function rn(t,r,s){32&u[0|t]||Ni(r,s,t)}function na(t,r,s){g[(Vr(t,r,s)+s|0)-1|0]=0}function mo(t){return vA(t,188776,189328)}function dl(t,r){r|=0,e[8+(t|=0)>>2]=r}function Fi(t,r,s){return Bs(t,r,s,0,0)}function Ui(t){return e[12+(t|=0)>>2]}function Hi(t){return e[16+(t|=0)>>2]}function QA(t){return e[20+(t|=0)>>2]}function bn(t){return e[8+(t|=0)>>2]}function NA(t){return e[4+(t|=0)>>2]}function gl(t){return e[(t|=0)>>2]}function bo(t,r,s){return wt(t,r,s)}function Lo(t){(t|=0)&&tr(t)}function Ca(t,r){Hr(zr(t)+t|0,r)}function lA(t){return 0|t}function cA(t){return 0}function to(t){tr(t|=0)}function fl(t){}U(w=u,1024,""),U(w,45536,"HhYWFhgWFhYXExYaFhIWFg4ODg4ODg4ODg4WFhoaGhYWCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoXFhMZERkGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBhcaExo="),U(w,45664,""),U(w,81428,"ggAAAAAAAAIAAAAAAAAAAgAAAAAAAAAC"),U(w,81475,"AgAAAAAAACAAAAAAAAAAIA=="),U(w,81506,"IA=="),U(w,81522,"IAAAAAAAAAAg"),U(w,81618,"IA=="),U(w,81634,"IA=="),U(w,81650,"IAAAAAAAAAAg"),U(w,81682,"IAAAAAAAAAAgAAAAAAAAACAAAAAAAIAAAAAAAAAAgA=="),U(w,81728,"gAAAAAAAAACAAAAAAAAAAIA="),U(w,81760,"gAAAAAAAAACA"),U(w,81904,"gAAAAAAAAACAAAAAAAAAAIAAAAAAAAAAgAAAAAAAAACAAAAAAAAAAAAU"),U(w,81961,"FAAAAAAAAAAU"),U(w,81985,"FAAAAAAAAAAE"),U(w,82009,"BAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABA="),U(w,82097,"EAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABA="),U(w,82169,"EAAAAAAAAAAQAAAAAAAAABAAAAAAAACA"),U(w,82224,"gAAAAAAAAACA"),U(w,82272,"gAAAAAAAAACAAAAAAAAAAIAAAAAAAAAAgAAAAAAAAACAAAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABA=="),U(w,82353,"BAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABA=="),U(w,82393,"BAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAQAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAABAAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABA=="),U(w,82625,"BAAAAAAAAAAE"),U(w,82649,"BAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAQAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABA=="),U(w,83033,"BAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABA=="),U(w,83097,"BAAAAAAAAAAE"),U(w,83121,"BAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAQAAAEAAAAAFAAAAQAAAAgEAAABAAAAAQQAAAAAAAACBAAAAAAAAAgEAAAAAAAAAAQAAAAAAAAABAAAAQAAAAgEAAAAAAAAAQQAAAAAAAAARAAAAAAAAAAEAAAAAAAAAAQA=="),U(w,83288,"QA=="),U(w,83303,"AkAAAAAAAAAQQAAAEAAAAIBAAAAAAAAACEA="),U(w,83352,"QAAAAAAAABBAAAAQAAAAgAAg"),U(w,83379,"gAAAAABAAACQggAAIEAAAJAAAAAAAAAAgAAAAABAAACQggAAIEAAAJCCAAAgAAAAgAAAAAAAAACAAAAAAAAAAIAAAAAAQAAAkIIAACBAAACQggAAIEAAAJCCAAAgQAAAkAAAAEBAAACQAAAAYEAAAJCCAABgQAAAkIIAACBAAACQggAAIEAAAJCCAAAgQAAAkIIAACBAAACQggAAIAAAAIAAAAAEAAAAAAAAAIAAAAAAAAAACAAAAAAAAAAEAAAAAAAAACAAAAAAAAAAQAAAAAAAAACAAAAAAAAAAIAAAAAAAAAAAkAAAAAAAAAQQAAAEAAAAIBAAAAAAAAABEAAAAAAAAAIAAAAgIIAAAAAAACAgAAAAAAAAIAAAAAAAAAAgIYAAAAAAACAhgAAAAAAAICAAAAAAAAAgIAAAAAAAACAggAAAAAAAICAAAAAAAAAgIAAAAAAAACAgAAAAAAAAICAAAAAAAAAgJIAAACAAACAggAAAIAAAICCAAAAAAAAgIIAAAAAAACAggAAAIAAAICCAAAAAAAAgIIAAAAAAACAggAAAAAAAICAAAAAAAAAgIAAAAAAAACAggAAAAAAAICGAAAAAAAAgIIAAAAAAACAhgAAAAAAAICCAAAAAAAAgIIAAAAAAACAggAAAAAAAICCAAAAAAAAgIAAAAAAAACAggAAAAAAAICAAAAAAAAAgIIAAAAAAACAggAAAAAAAICCAAAAAAAAgIAAAAAAAACAggAAAAAAAICGAAAAAAAAgJIAAAAAAACAhgAAAAAAAICAAAAAAAAAgIAAAAAAAACAhg=="),U(w,83999,""),U(w,93904,"ICAgICAgICAgICYlKyNTRFpBTCEgQD9KTktWP1RYP1dBQkNIRkdZPT0sLCcqICAAIAAhACIAsAIkACUA5gDIAigAKQB+AisAzAItAC4ALwBSAjEAMgBcAjQANQA2ADcAdQI5ANACsgI8AD0APgCUAlkCUQKyA+cA8ABbAkYAYgInAWoCXwJLAGsCcQJLAVQCpgNjAoACgwK4A4oCjAJTAccD+ACSAioDXABdAF4AXwBgAGEAYgBjAGQAZQBmAGECaABpAGoAawBsAG0AbgBvAHAAcQByAHMAdAB1AHYAdwB4AHkAegB7AHwAfQADA38APT0sLCcnAAMCBAUGBxoAAAAAAQECAwMEBQYHBwgJCgsAAAEBAgIDAwQFBgcHCAkKAAABAgMDAwQFBgcHBwgJClNldFdvcmRTdHJlc3MA5ADrAO8A9gD8AP8AAAAAAAAAYWFhYWFhYWNlZWVlaWlpaWRub29vb28Ab3V1dXV5dHNhYWFhYWFhY2VlZWVpaWlpZG5vb29vbwBvdXV1dXl0eWFhYWFhYWNjY2NjY2NjZGRkZGVlZWVlZWVlZWVnZ2dnZ2dnZ2hoaGhpaWlpaWlpaWlpaWlqamtra2xsbGxsbGxsbGxubm5ubm5ubm5vb29vb29vb3JycnJycnNzc3Nzc3NzdHR0dHR0dXV1dXV1dXV1dXV1d3d5eXl6enp6enpzYmJiYgAAb2NjZGRkZGRlZWVmZmdnaGlpa2tsbG1ubm9vb29vcHB5AABzc3R0dHR1dXV2eXl6enp6enp6AAAAd3R0dGtkZGRsbGxubm5hYWlpb291dXV1dXV1dXV1ZWFhYWFhYWdnZ2dra29vb296empkZGRnZ3d3bm5hYWFhb29hYWFhZWVlZWlpaWlvb29vcnJycnV1dXVzc3R0eXloaG5kb296emFhZWVvb29vb29vb3l5bG50amRxYWNjbHRzegAAYnV2ZWVqanFxcnJ5eWFhYWJvY2RkZWVlZWVl"),U(w,94846,"TG9va3VwRGljdDIAAAAAAAAAgACBAIIAgwCEAIUAhgCHAIgAiQCKAIsAjACNAI4AjwCQAJEAkgCTAJQAlQCWAJcAmACZAJoAmwCcAJ0AngCfAKAAoQCiAKMApAClAKYApwCoAKkAqgCrAKwArQCuAK8AsACxALIAswC0ALUAtgC3ALgAuQC6ALsAvAC9AL4AvwDAAMEAwgDDAMQAxQDGAMcAyADJAMoAywDMAM0AzgDPANAA0QDSANMA1ADVANYA1wDYANkA2gDbANwA3QDeAN8A4ADhAOIA4wDkAOUA5gDnAOgA6QDqAOsA7ADtAO4A7wDwAPEA8gDzAPQA9QD2APcA+AD5APoA+wD8AP0A/gD/AIAAgQCCAIMAhACFAIYAhwCIAIkAigCLAIwAjQCOAI8AkACRAJIAkwCUAJUAlgCXAJgAmQCaAJsAnACdAJ4AnwCgAAQB2AJBAaQAPQFaAacAqABgAV4BZAF5Aa0AfQF7AbAABQHbAkIBtAA+AVsBxwK4AGEBXwFlAXoB3QJ+AXwBVAHBAMIAAgHEADkBBgHHAAwByQAYAcsAGgHNAM4ADgEQAUMBRwHTANQAUAHWANcAWAFuAdoAcAHcAN0AYgHfAFUB4QDiAAMB5AA6AQcB5wANAekAGQHrABsB7QDuAA8BEQFEAUgB8wD0AFEB9gD3AFkBbwH6AHEB/AD9AGMB2QKAAIEAggCDAIQAhQCGAIcAiACJAIoAiwCMAI0AjgCPAJAAkQCSAJMAlACVAJYAlwCYAJkAmgCbAJwAnQCeAJ8AoAAmAdgCowCkAP3/JAGnAKgAMAFeAR4BNAGtAP3/ewGwACcBsgCzALQAtQAlAbcAuAAxAV8BHwE1Ab0A/f98AcAAwQDCAP3/xAAKAQgBxwDIAMkAygDLAMwAzQDOAM8A/f/RANIA0wDUACAB1gDXABwB2QDaANsA3ABsAVwB3wDgAOEA4gD9/+QACwEJAecA6ADpAOoA6wDsAO0A7gDvAP3/8QDyAPMA9AAhAfYA9wAdAfkA+gD7APwAbQFdAdkCgACBAIIAgwCEAIUAhgCHAIgAiQCKAIsAjACNAI4AjwCQAJEAkgCTAJQAlQCWAJcAmACZAJoAmwCcAJ0AngCfAKAABAE4AVYBpAAoATsBpwCoAGABEgEiAWYBrQB9Aa8AsAAFAdsCVwG0ACkBPAHHArgAYQETASMBZwFKAX4BSwEAAcEAwgDDAMQAxQDGAC4BDAHJABgBywAWAc0AzgAqARABRQFMATYB1ADVANYA1wDYAHIB2gDbANwAaAFqAd8AAQHhAOIA4wDkAOUA5gAvAQ0B6QAZAesAFwHtAO4AKwERAUYBTQE3AfQA9QD2APcA+ABzAfoA+wD8AGkBawHZAoAAgQCCAIMAhACFAIYAhwCIAIkAigCLAIwAjQCOAI8AkACRAJIAkwCUAJUAlgCXAJgAmQCaAJsAnACdAJ4AnwCgAAEEAgQDBAQEBQQGBAcECAQJBAoECwQMBK0ADgQPBBAEEQQSBBMEFAQVBBYEFwQYBBkEGgQbBBwEHQQeBB8EIAQhBCIEIwQkBCUEJgQnBCgEKQQqBCsELAQtBC4ELwQwBDEEMgQzBDQENQQ2BDcEOAQ5BDoEOwQ8BD0EPgQ/BEAEQQRCBEMERARFBEYERwRIBEkESgRLBEwETQROBE8EFiFRBFIEUwRUBFUEVgRXBFgEWQRaBFsEXASnAF4EXwSAAIEAggCDAIQAhQCGAIcAiACJAIoAiwCMAI0AjgCPAJAAkQCSAJMAlACVAJYAlwCYAJkAmgCbAJwAnQCeAJ8AoAD9//3//f+kAP3//f/9//3//f/9//3/DAatAP3//f/9//3//f/9//3//f/9//3//f/9//3/Gwb9//3//f8fBv3/IQYiBiMGJAYlBiYGJwYoBikGKgYrBiwGLQYuBi8GMAYxBjIGMwY0BjUGNgY3BjgGOQY6Bv3//f/9//3//f9ABkEGQgZDBkQGRQZGBkcGSAZJBkoGSwZMBk0GTgZPBlAGUQZSBv3//f/9//3//f/9//3//f/9//3//f/9//3/gACBAIIAgwCEAIUAhgCHAIgAiQCKAIsAjACNAI4AjwCQAJEAkgCTAJQAlQCWAJcAmACZAJoAmwCcAJ0AngCfAKAAGCAZIKMArCCvIKYApwCoAKkAegOrAKwArQD9/xUgsACxALIAswCEA4UDhgO3AIgDiQOKA7sAjAO9AI4DjwOQA5EDkgOTA5QDlQOWA5cDmAOZA5oDmwOcA50DngOfA6ADoQP9/6MDpAOlA6YDpwOoA6kDqgOrA6wDrQOuA68DsAOxA7IDswO0A7UDtgO3A7gDuQO6A7sDvAO9A74DvwPAA8EDwgPDA8QDxQPGA8cDyAPJA8oDywPMA80DzgP9/4AAgQCCAIMAhACFAIYAhwCIAIkAigCLAIwAjQCOAI8AkACRAJIAkwCUAJUAlgCXAJgAmQCaAJsAnACdAJ4AnwCgAP3/ogCjAKQApQCmAKcAqACpANcAqwCsAK0ArgCvALAAsQCyALMAtAC1ALYAtwC4ALkA9wC7ALwAvQC+AP3//f/9//3//f/9//3//f/9//3//f/9//3//f/9//3//f/9//3//f/9//3//f/9//3//f/9//3//f/9//3//f8XINAF0QXSBdMF1AXVBdYF1wXYBdkF2gXbBdwF3QXeBd8F4AXhBeIF4wXkBeUF5gXnBegF6QXqBf3//f8OIA8g/f+AAIEAggCDAIQAhQCGAIcAiACJAIoAiwCMAI0AjgCPAJAAkQCSAJMAlACVAJYAlwCYAJkAmgCbAJwAnQCeAJ8AoAChAKIAowCkAKUApgCnAKgAqQCqAKsArACtAK4ArwCwALEAsgCzALQAtQC2ALcAuAC5ALoAuwC8AL0AvgC/AMAAwQDCAMMAxADFAMYAxwDIAMkAygDLAMwAzQDOAM8AHgHRANIA0wDUANUA1gDXANgA2QDaANsA3AAwAV4B3wDgAOEA4gDjAOQA5QDmAOcA6ADpAOoA6wDsAO0A7gDvAB8B8QDyAPMA9AD1APYA9wD4APkA+gD7APwAMQFfAf8AgACBAIIAgwCEAIUAhgCHAIgAiQCKAIsAjACNAI4AjwCQAJEAkgCTAJQAlQCWAJcAmACZAJoAmwCcAJ0AngCfAKAABAESASIBKgEoATYBpwA7ARABYAFmAX0BrQBqAUoBsAAFARMBIwErASkBNwG3ADwBEQFhAWcBfgEVIGsBSwEAAcEAwgDDAMQAxQDGAC4BDAHJABgBywAWAc0AzgDPANAARQFMAdMA1ADVANYAaAHYAHIB2gDbANwA3QDeAN8AAQHhAOIA4wDkAOUA5gAvAQ0B6QAZAesAFwHtAO4A7wDwAEYBTQHzAPQA9QD2AGkB+ABzAfoA+wD8AP0A/gA4AYAAgQCCAIMAhACFAIYAhwCIAIkAigCLAIwAjQCOAI8AkACRAJIAkwCUAJUAlgCXAJgAmQCaAJsAnACdAJ4AnwCgAAEOAg4DDgQOBQ4GDgcOCA4JDgoOCw4MDg0ODg4PDhAOEQ4SDhMOFA4VDhYOFw4YDhkOGg4bDhwOHQ4eDh8OIA4hDiIOIw4kDiUOJg4nDigOKQ4qDisOLA4tDi4OLw4wDjEOMg4zDjQONQ42DjcOOA45DjoO/f/9//3//f8/DkAOQQ5CDkMORA5FDkYORw5IDkkOSg5LDkwOTQ5ODk8OUA5RDlIOUw5UDlUOVg5XDlgOWQ5aDlsO/f/9//3//f+AAIEAggCDAIQAhQCGAIcAiACJAIoAiwCMAI0AjgCPAJAAkQCSAJMAlACVAJYAlwCYAJkAmgCbAJwAnQCeAJ8AoAAdIKIAowCkAB4gpgCnANgAqQBWAasArACtAK4AxgCwALEAsgCzABwgtQC2ALcA+AC5AFcBuwC8AL0AvgDmAAQBLgEAAQYBxADFABgBEgEMAckAeQEWASIBNgEqATsBYAFDAUUB0wBMAdUA1gDXAHIBQQFaAWoB3AB7AX0B3wAFAS8BAQEHAeQA5QAZARMBDQHpAHoBFwEjATcBKwE8AWEBRAFGAfMATQH1APYA9wBzAUIBWwFrAfwAfAF+ARkggACBAIIAgwCEAIUAhgCHAIgAiQCKAIsAjACNAI4AjwCQAJEAkgCTAJQAlQCWAJcAmACZAJoAmwCcAJ0AngCfAKAAAh4DHqMACgELAQoepwCAHqkAgh4LHvIerQCuAHgBHh4fHiABIQFAHkEetgBWHoEeVx6DHmAe8x6EHoUeYR7AAMEAwgDDAMQAxQDGAMcAyADJAMoAywDMAM0AzgDPAHQB0QDSANMA1ADVANYAah7YANkA2gDbANwA3QB2Ad8A4ADhAOIA4wDkAOUA5gDnAOgA6QDqAOsA7ADtAO4A7wB1AfEA8gDzAPQA9QD2AGse+AD5APoA+wD8AP0AdwH/AIAAgQCCAIMAhACFAIYAhwCIAIkAigCLAIwAjQCOAI8AkACRAJIAkwCUAJUAlgCXAJgAmQCaAJsAnACdAJ4AnwCgAKEAogCjAKwgpQBgAacAYQGpAKoAqwCsAK0ArgCvALAAsQCyALMAfQG1ALYAtwB+AbkAugC7AFIBUwF4Ab8AwADBAMIAwwDEAMUAxgDHAMgAyQDKAMsAzADNAM4AzwDQANEA0gDTANQA1QDWANcA2ADZANoA2wDcAN0A3gDfAOAA4QDiAOMA5ADlAOYA5wDoAOkA6gDrAOwA7QDuAO8A8ADxAPIA8wD0APUA9gD3APgA+QD6APsA/AD9AP4A/wCAAIEAggCDAIQAhQCGAIcAiACJAIoAiwCMAI0AjgCPAJAAkQCSAJMAlACVAJYAlwCYAJkAmgCbAJwAnQCeAJ8AoAAEAQUBQQGsIB4gYAGnAGEBqQAYAqsAeQGtAHoBewGwALEADAFCAX0BHSC2ALcAfgENARkCuwBSAVMBeAF8AcAAwQDCAAIBxAAGAcYAxwDIAMkAygDLAMwAzQDOAM8AEAFDAdIA0wDUAFAB1gBaAXAB2QDaANsA3AAYARoC3wDgAOEA4gADAeQABwHmAOcA6ADpAOoA6wDsAO0A7gDvABEBRAHyAPMA9ABRAfYAWwFxAfkA+gD7APwAGQEbAv8AgACBAIIAgwCEAIUAhgCHAIgAiQCKAIsAjACNAI4AjwCQAJEAkgCTAJQAlQCWAJcAmACZAJoAmwCcAJ0AngCfAKAABAEFAUEBrCAeIGABpwBhAakAGAKrAHkBrQB6AXsBsACxAAwBQgF9AR0gtgC3AH4BDQEZArsAUgFTAXgBfAHAAMEAwgACAcQABgHGAMcAyADJAMoAywDMAM0AzgDPABABQwHSANMA1ABQAdYAWgFwAdkA2gDbANwAGAEaAt8A4ADhAOIAAwHkAAcB5gDnAOgA6QDqAOsA7ADtAO4A7wARAUQB8gDzAPQAUQH2AFsBcQH5APoA+wD8ABkBGwL/AP3//f/9//3//f/9//3//f/9//3//f/9//3//f/9//3//f/9//3//f/9//3//f/9//3//f/9//3//f/9//3//f/9/wEJAgkDCQUJBgkHCQgJCQkKCQsJDgkPCRAJDQkSCRMJFAkRCRUJFgkXCRgJGQkaCRsJHAkdCR4JHwkgCSEJIgkjCSQJJQkmCScJKAkpCSoJKwksCS0JLgkvCV8JMAkxCTIJMwk0CTUJNgk3CTgJOQkgAD4JPwlACUEJQglDCUYJRwlICUUJSglLCUwJSQlNCTwJZAn9//3//f/9//3/IAAwADEAMgAzADQANQA2ADcAOAA5AP3//f/9//3//f8CAAAAAAAAAAEAAAADAAAA//36+Pb08vDu7Oro5uTi4N7c2tjW1NLQzszKyMbEwsC+vLq4trSysK6sqqimpKKgnpyamJaUkpCOjIqIhoSCgH58enh2dHJwbmxqaGZkYmBeXFpYVlRSUE5MSkhGREJAPjw6ODY0MjAuLCooJiQiIB4cGhgWFBIQDgwKCAYEAgAAAgQGCAoMDhASFBYYGhweICIkJigqLC4wMjQ2ODo8PkBCREZISkxOUFJUVlhaXF5gYmRmaGpsbnBydHZ4enx+gIKEhoiKjI6QkpSWmJqcnqCipKaoqqyusLK0tri6vL7AwsTGyMrMztDS1NbY2tze4OLk5ujq7O7w8vT2+Pr9///06uDWzMO6saifl4+Hf3hxamNcVlBKRD85NC8rJiIeGhcTEA0LCAYEAgEAAAAAAAAAAQIDBAUHCAoMDhATFRcaHR8iJSgsLjAyNDY5Oz1AQkVHSkxPUVRXWl1fYmVoa25xdHh7foGFiIuPkpaZnaCkqKyvs7e7v8PHy8/T19vgz8zJxsPAvbm0sKunopyXkoyGgXt1b2ljXVdQSkQ+ODMtJyIcFxINCAQCAgEAAAAAAAEBAgMEBQcICgwNDxIUFhkbHiEkJyotMDQ2ODo8P0FDRkhLTVBSVVhaXWBjZmlsb3J1eHt+gYWIi4+SlpmdoKSorK+zt7u/w8fLz9PX2+D/+fTu6eTf2tXQy8bBvbizr6qmoZ2ZlZCMiISAfXl1cW5qZ2NgXVlWU1BNSkdEQT48OTc0Mi8tKygmJCIgHhwaGRcVFBIRDw4NDAoJCAcGBQUEAwICAQE="),U(w,99845,"AQECAgMEBAUGBwgJCgsMDg8QEhMVFxgaHB4g0M7NzMrIx8XDwcC9u7i1s7CtqqejoJ2ZlpKPi4eEgHx4dHBtaWVhXVlVUU1KRkI+Ozc0MS8tKigmJCIgHhwaGRcVFBIRDw4NDAoJCAcGBQUEAwICAQE="),U(w,99973,"AQECAgMEBAUGBwgJCgsMDg8QEhMVFxgaHB4gmJmZmpydn6Gkp6mssLO2ur7BxcnN0dTY3N/j5urt8PL19/n7/P3+/v////////79+/r49vPx7uzp5uTg3drX09DMyMTAvLi0sKyno5+alpGNiIR/e3ZybWllYFxYVFBMSERAPDk1Mi8rKCYjIB0aFxUSDw0KCAcFAwIBAAAAAAD+///////+/fz6+Pb08e7r6OXh3trW0s3JxL+6trCrpqGclpGLhoB7dW9qZF9ZVE9JRD86NTArJiIdGRURDQoHBAMBAAAAAAAAAAABAQIEBQcJCw0QEhUYGx4iJSktMTU6PkNITFFXW15iZWhrbnF0dnh7fH6AgYKDg4SEg4OCgXJycXFwb21samhmZGFfXFpXVFFOS0hFQj87ODUyLywpJiMgHRsYFhQSEA4MCwoJCAcHBwcHBgUFBQUFBQUFBQYHBwgJCgwNDxASFBYYGx0gIyYpLC8zNzs/Q0dMUVZbYGVqb3R5f4SJj5Wboaets7rAx87V3OPq8fX3+vz9/v///v79/fz7+/r6+fj49/f29vX09PPz8vLx8PDv7u7t7Ovq6uno5+bl5OPi4eDe3dzb2djW1dPS0M7My8nHxcPAvry5t7Wyr62qp6ShnpqXlJCNiYWBfXl1cW1oZGFeW1dUUU1KRkNAPDk1Mi4qJyMfHBgUEQ0LCQcFBAMCAQAAAAAAAAAAAQEBAgIDAwQEBQYGBwgICQoLDAwNDg8QERITFBYXGBkbHB0fICIjJSYoKSstLzAyNDY4Ojw+QEJER0lLTlBSVVdaXV9iZWdqbXBzdnl8f4KGiYyQk5aanaCjpqmsr7K1uLu+wcTHys3Q09bZ3N/i5Ofp7O7w8vT2+Pr7/X9/f4CBg4SHiYyPkpaZnaGlqq6yt7vAxcnN0tba3uLm6u3w8/X4+vv8/f7+/fz7+ff08Ozn4tzVzsa9tKmekoiCfXdybGZgWlROSUI8NzItKCQfGxgUEQ4MCQcGBQQEBAQFBggKDRAUGB0jKS83PkdQWmRwfIOFiIqMjo+RkpOTAEAIAEYSAAAAAAAAGAwAAARQEgZOFgAAAAAAACI0AAAEWBYGUhYAAAAAAAAiQAAAAFwIAFxQAAAAAAAATAgBAABWBABeQgAAAAAAACIKAAAAPgoAPhQAAAAAAAAcEAAABEQSBkQWAAAAAAAAHiwAAAZAEABCIAAAAAAAACASAAACRC4AKiAAAAAAAAAuOgAABE4YBkgWAAAAAAAAKjQAAARYIgBAIAAAAAAAAC5SAAAAOAwAOBQAAAAAAAAYDAAAAEYSAEYYAAAAAAAAIBQAAAkAAAAJAAAAEAAAABAAAAAQAAAAFwAAADcAAAAgAAAAACgYCAAKNCAUCgYmGA4EAAYAAAAHAAAACQAAAAkAAAAUAAAAFAAAABQAAAAZAAAA5iAUCA=="),U(w,101072,"ZgNmAWYCpgSmAiYEpoooAmoDagFqAqoCbgNuAW4CrgIpALMEdAN0AXQCtAS0AgAAdAR6A3oBegK6An4BOQC+AgAApgMAAKYBAADmAwAAaAEAAGgCAAAoAwAA6AEAAOkBAABpBAAAqgMAAKoBAAAqAwAA6gMAAOoBAABsAgAArAEAACwDAAAsAgAAbQIAAG0EAACuBAAArgMAAK4BAADuAwAALgAAAO6LAABvAgAAMAIwAAAAcQEAADECAADxAQAAMQMAAHEEAABzAQAAMwIAAPMBMwAAADMAAAC0AwAAtAEAAPQCAAC0igAAdwEAADcCAAD3AQAAeAEAAHgCAAA4AgAA+AEAADkCAAD5AQAAeQQAALoEAAC6AwAAugEAADoEAAD6AgAA+gMAAHwCAAB+AgAAAAB/AQAAPwMAAP8BOACmAAEAgQBnBQAAKAEpBWkF6gAAAEIFAADDAEMdAADvBGwFLABsAAQAAACtAG0FAADuBAUAbgCxBPEEMQXxj7IAAAByBQAAMwVzAPQEtJoAAAgAtwCOADcVAAA3BQAAzQB3ALcIOAUAAG8FyQAJAbkAOQX6BAoAewW7ALwAvgB+AD8FPwEAAAsBAADMAIwAAAAAAGcAAABsDW0ALwGwAHEAdgVMBEwc6Y8AAOnPOY4AADnO"),U(w,101586,"sQNZAlsCswO5A1MByQPGA4MCxQOSApQCfgJ8AgAAqgBhgLIAMoCzADOAuQAxgLoAb4CwAmiAsQJmgrICaoCzAnKAtAJ5grUCe4K2AoGCtwJ3gLgCeYDAApSCwQKVguACY4LhAmyA4gJzgOMCeIBwIDCAcSBpgHQgNIB1IDWAdiA2gHcgN4B4IDiAeSA5gHogK4B7IC2AfCA9gH0gKIB+ICmAfyBugIAgMECBIDFAgiAyQIMgM0CEIDRAhSA1QIYgNkCHIDdAiCA4QIkgOUCKICtAiyAtQIwgPUCNIChAjiApQJAgYUCRIGVAkiBvQJMgeECUIFlClSBoQJYga0CXIGxAmCBtQJkgbkCaIHBAmyBzQJwgdEAAAAAAaXhjbXZsZA=="),U(w,101888,"AQAAAAoAAABkAAAA6AMAAAUAAAAyAAAA9AEAAAAXCgkYExgY"),U(w,101936,"///////9+fXy7uvo5OHe2tjV0s/MycbEwb+8ure1s7CurKmopaOhn56bmZiWlJKRj42LiYiHhYOCgX9+fHt6eHd2dXNycXBvbm1ramloZ2ZlZGNiYWBfXl1cW1pZWVhXVlVUU1JSUVBQT05NTExLS0pJSEdHRkVFRENDQkJBQEA/Pj49PTw7Ozo6OTk4ODc2NjU1NDQ0MzIyMTEwMC8vLi4uLS0sLCwrKyopKCgoJycnJiYmJSUlJCQjIyMjIiIiISEhICAfHx8eHh4dHR0dHBwbGxsbGhoaGhkZGRgYGBgXFxcXFhYWFRUVFRQUFBQTExMSEhERERAQEBAQEA8PDw8ODg4NDQ0MDAwMCwsLCwoKCgkJCQgICAAAAAAAAAAAeHl4d3d2dnV0dHNycXBwb29ubWxrampoZ2dmZmZlZWNiYmFgYF9eXVtaW1pZWFZVVlVVVFJRUE9NTk5MTUtLSklHSEZFRUVDQUA/Pz89PTs7Ozo4OTo4NjU0NDU0NDIwLy8tLi0="),U(w,102336,"FhYWFhYWFhUVFRUUFBMTEhEQDw8PDw8PDwAAAAAAAABkeGRpZG5uZF9kaXhpbn2Ch3N9ZGl4S2RLaXhVS2RpeFVpX3N4ZF9kbnhfaWRzeGRkZGl4ZGlfc3huX2RpeGRpaXp9bmlkaXhkaWl6fW5pZGl4X2lkc3huZGRkeGRkZGRkZGRk"),U(w,102480,"ZJZkaW5zbm5uZGmWaW59h4xzh2RpllppWnqHZFpkaZZkaWR6h2RkZGmWZGlpc4duaWRplmRpaXqCeH1kaZZkaW56fXNuZGmWZGlpeod4aWRplmRpaXOHbmlkZGRkZGRkZGRkZA=="),U(w,102592,"bnhkbm5ubm5ubm54ZG5ubm5ubm5ueGRuZG5ubmRubnhkbm5ubm5ubm54ZG5ubm5ubm5ueGRubm5ubm5ubnhkbm5ubm5ubm54ZG5ubm5ubm5ueGRubm5ubm5ubnhkbm5ubm5ubg=="),U(w,102708,"rwAAAGQAAAAyAAAAMg=="),U(w,102744,"ZA=="),U(w,102764,"MjIoRlpkZGRGboeWZGRLZHiWAAAAAAAABwAAAA4AAAAVAAAAKAAAAFAAAAAAAAAAAFNBUFIAQwAAAAAARgAAAAAAAAABAAAAAgAAAAQAAAAPAAAAAAEAAAEBAAEBAgQAAAAAAPMAEAEAAQABAAEAAQAB8ADwAPA="),U(w,102898,"QABaAG4AgACPAJwAqQC1AMAAygDUAN0A5gDvAPcAAAEHAQ8BFgEeASUBLAEyATkBQAFGAUwBUgFYAV4BZAFqAW8BdQF6AYABhQGKAY8BlAGZAZ4BowGoAa0BsgG2AbsBwAHEAckBzQHRAdYB2gHeAeMB5wHrAe8B8wH3AfsBAAIDAgcCCwIPAhMCFwIbAh8CIgImAioCLQIxAjUCOAI8AkACQwJHAkoCTgJRAlQCWAJbAl8CYgJlAmkCbAJvAnMCdgJ5AnwCgAKDAoYCiQKMAo8CkgKWApkCnAKfAqICpQKoAqsCrgKxArQCtwK6Ar0CwALCAsUCyALLAs4C0QLUAtYC2QLcAt8C4gLkAucC6gLtAu8C8gL1AvcC+gL9AgADAgMFAwcDCgMNAw8DEgMVAxcDGgMcAx8DIQMkAycDKQMsAy4DMQMzAzYDOAM7Az0DQANCA0QDRwNJA0wDTgNRA1MDVQNYA1oDXQNfA2EDZANmA2gDawNtA28DcgN0A3YDeQN7A30DgAOCA4QDhgMAAAGqAqytAwQFsLGys7S0tgYHCLkJCrwMDQ4PEBESYWJjZGVmZ2hpamtsbW5vcHFyc3R1"),U(w,103360,"YAYAAPAGAABmCQAA5gkAAGYKAADmCgAAZgsAAOYLAABmDAAA5gwAAGYNAABQDgAA0A4AACAPAABAEAAAkBA="),U(w,103440,"5gDmAOYA5gAAAAAA5gDmAL4AqgC+AMgAAAAAAL4A8AC+AL4A0gDSAAAAAADSANIAyADIANIA0gAAAAAA5gDmAOYA5gDwAPAAAAAAAAQBBAGqAIwA3ADcAAAAAAD6AA4BoACMAMgAjAAAAAAA8ACgALQAtADSANIAAAAAAOYA8ACqANwAtAC0AAAAAAD6AA4BlgCCAMgAyAAAAAAADgEOAbYAjADcANwAAAAAAPgAEwGbALQA0gDSAAAAAAAOASwBwwMAAAAAAABsAAAAAAAAAKAAkQCbAJYAAAAAAMgA9QAnAAAAtwAAAAAAAADCugAAyADIAMgAyAAAAAAA0gDmAAABAgMEBQYHCAkKCwwNDg8QERITFBUWFxgZGgAAAAAAABscHR4fICEiIyQlJicoKSorAAAs"),U(w,103790,"LQAAAAAAAAAu"),U(w,103816,"Lw=="),U(w,103833,"MAAAAAAAMQ=="),U(w,103856,"Mg=="),U(w,103868,"MwAAAK0AAQBABgEADCAtAAAAAAC+AL4A0gDSAAAAAADmAPoAoACWAMgAyAAAAAAA+gAEAbkAwwDDAL4AAAAAANIA3AD6AMgA+gD6AAAAAAD6APoAMjM0Njk6PD0+P0BBQkNERkdJSktMTU5PUFFSU1RWAACWAIwAtAC0AAAAAADIAMgAbA=="),U(w,104016,"oADIALQAtAAAAAAA3ADwALQAoADIAMgAAAAAAPAA+gBjAAAAZgAAAGgAAABrAAAAcAAAAHQAAAB4AAAA/g=="),U(w,104096,"oACMAJYApQAAAAAA2gAxAZEAkQCqAKAAAAAAAEoBXgEuAAAALAAAACcAAADIAg=="),U(w,104160,"MTIzNTY3OTo7PD4/QEFCREVGR0hJSktMTU5PUFFSU1RW"),U(w,104208,"vgC0AOYA5gAAAAAA+gD6ABESExQWFxkaGxwdHyAhIiQlJicoKSosc3uDmwAAAAAAtAC0AL4AtAAAAAAA5gDwALQAtAC0AKAAAAAAAOYAtABABAAAMAQAADUEAAA4BAAAOQQAAD4EAABDBAAASwQAAE0EAABOBAAATwQAAFAEAABRBAAAVgQAAFcEAABdBAAAXgQ="),U(w,104368,"tACgAMgAyAAAAAAA3ADmAKAAhwDSANIAAAAAAAQBGAGgAIwAyADIAAAAAADcAOYAyADIAMgAyAAAAAAAyADIAKAAvgCvAK8AAAAAAMgA0gCqAHMA0gDwAAAAAAAEARgBqgCqALQAtAAAAAAA8AAEAZYAtADIAMgAAAAAANIA+gCWAJYAtAC0AAAAAAAsASwBoACHANwA3AAAAAAA+gAYAaAAqgDIAMgAAAAAAEABVAG0AKAA8ADwAAAAAAAEAQQBvgC0AMgA5gAAAAAA8AD6AJYAlgC0ALQA0gDmAOYA8ABhAAAA4AAAAOEAAACjHgAA4wAAAKEeAAADAQAAsR4AAK8eAACzHgAAtR4AALceAADiAAAApx4AAKUeAACpHgAAqx4AAK0eAABlAAAA6AAAAOkAAAC7HgAAvR4AALkeAADqAAAAwR4AAL8eAADDHgAAxR4AAMceAABpAAAA7AAAAO0AAADJHgAAKQEAAMseAABvAAAA8gAAAPMAAADPHgAA9QAAAM0eAAD0AAAA0x4AANEeAADVHgAA1x4AANkeAAChAQAA3R4AANseAADfHgAA4R4AAOMeAAB1AAAA+QAAAPoAAADnHgAAaQEAAOUeAACwAQAA6x4AAOkeAADtHgAA7x4AAPEeAAB5AAAA8x4AAP0AAAD3HgAA+R4AAPUe"),U(w,104896,"5gCWAOYA5gDmAAAA8AD6AAAAAAAnAAAAAAAAAAABAgM="),U(w,104945,"AQIDBAUGBwgJCgsMDQ4PEBESExQVFhcYGRo="),U(w,105072,"GxwdAAAeHyAhIiMkACUmAAAAACcAACgAKQAqACsAAAAAAAAsAC0ALgAAAAAALwAAADAAAAAAAAAAMQ=="),U(w,105170,"MgAz"),U(w,105195,"NAAAAAAANQA2"),U(w,105226,"NwA4ADkArQABAAwgAQ=="),U(w,105249,"AQIDAAQAAQIDAAQFBgIDAAQFBwEDAAQICQoDAAAICAoDAAALCwsLAAAMDAwMAAAMAQ4BEwEBAw8DDgYRBgMJAQsPCwEMCQwBDgYOCQ4ODg8OHA4DDxEPEg8PEBEQAREGEQkRDxETEiAS/38AAAAAlgCMANwA3AAAAAAABAEYAYKAeHRkZICAgIyAgKCrq4CAgA=="),U(w,105412,"yAAAAMgAAACQAQAAkAEAAJABAABYAgAAWAIAAFgC"),U(w,105456,"8AAAAKoAAACqAAAAqgAAAKoAAACqAAAAqgAAAKoAAACqAAAAAQIMAw0EDgULAAAAAQIDBAUGAAAAAAAACwwNDg=="),U(w,105540,"MgAAAK8AAABkAAAAMg=="),U(w,105568,"rw=="),U(w,105596,"EBAKEBY="),U(w,105620,"/38AANAHAAAsAQAAYwAAAGMAAABjAAAAAAAAANAH"),U(w,105668,"BA=="),U(w,105680,"QEFCQ0RFRkdISUpLTE1OT1BRUlNUVldYWVtcXV5gYWJkZWdoaWtsbm9xc3R2d3l7fH6AgoSFh4mLjY+Rk5WXmZueoKKkp6mrrrCztbi6vb/CxcfKzdDT1tnc3+Ll6Ozv8vb5/P7/"),U(w,105792,"//7+/v7+/v7+/v39/f38/Pz7+/v6+vn5+Pj39/b19fTz8/Lx7+3r6efl4+Hf3drY1dPQzcvIxcK/u7i1sq6rp6OgnJiUkIyIhH97d3JuaWRgXltYVlNRTkxKR0VCQD48OTc1MzEvLCooJiQiIB4dGxkXFRMSEA4MCwkHBgQDAQ=="),U(w,106064,"//7+/v7+/f38+/v6+fj39vX08vHv7uzq6efl4+Hf3NrY1dPRz83LycfFw8G/vbu5t7SysK2rqaakoZ+cmpeUko+MioeEgX57eHZzcGxpZmNgX11bWlhWVVNSUE9NTEpJSEZFRENCQD8+PTw7Ojk4Nzc2NTQ0MzIyMTAwLy8uLi4tLS0sLCwsLCwsKysrKywrKiopKCgnJiYlJCQjIyIhISAgHx4eHR0cHBsaGhkZGBgXFxYWFRUUFBMTEhISEREQEA8PDw4ODQ0NDAwLCwsKCgoJCQkICAgHBwcHBgYGBQUFBQQEBAQEAwMDAwICAgICAgEBAQEBAQ=="),U(w,106341,"RvIpAC8ALwBF8ikALwAuAEXyKAAuAC0ANPIoAC0tLAA08igAKysrADTyKAAqKioANPIoACkpKQA08igAAOf/zv+1/5z/g/9q/1H/N/8e/wX/7P7T/rr+of6I/m/+Vf48/iP+Cv7x/dj9v/2m/Y39dP1b/UL9Kf0Q/ff83vzF/Kz8k/x6/GH8SPwv/Bb8/fvk+8v7svuZ+4D7Z/tP+zb7HfsE++v60vq6+qH6iPpv+lf6Pvol+g369Pnb+cP5qvmR+Xn5YPlH+S/5Fvn++OX4zfi0+Jz4g/hr+FP4Ovgi+Ar48ffZ98H3qPeQ93j3YPdH9y/3F/f/9uf2z/a39p/2h/Zv9lf2P/Yn9g/29/Xf9cf1sPWY9YD1aPVR9Tn1IfUK9fL02/TD9Kz0lPR99GX0TvQ29B/0CPTw89nzwvOr85TzfPNl807zN/Mg8wnz8vLb8sTyrvKX8oDyafJS8jzyJfIO8vjx4fHL8bTxnvGH8XHxW/FE8S7xGPEB8evw1fC/8Knwk/B98GfwUfA78CXwEPD67+Tvzu+576Pvje9472LvTe847yLvDe/47uLuze647qPuju557mTuT+467iXuEO777eft0u297antlO2A7WvtV+1C7S7tGu0F7fHs3ezJ7LXsoeyN7HnsZexR7D3sKuwW7ALs7+vb68jrtOuh643reutn61TrQest6xrrB+v06uLqz+q86qnqluqE6nHqX+pM6jrqJ+oV6gPq8One6czpuumo6ZbphOly6WHpT+k96SzpGukI6ffo5ujU6MPosuig6I/ofuht6FzoS+g76CroGegI6Pjn5+fX58bntuel55Xnhed152XnVedF5zXnJecV5wXn9ubm5tfmx+a45qjmmeaK5nvma+Zc5k3mPuYw5iHmEuYD5vXl5uXY5cnlu+Wt5Z7lkOWC5XTlZuVY5UrlPOUv5SHlE+UG5fjk6+Te5NDkw+S25KnknOSP5ILkdeRo5FzkT+RD5DbkKuQd5BHkBeT54+3j4ePV48njveOx46XjmuOO44Pjd+Ns42HjVuNL4z/jNOMq4x/jFOMJ4//i9OLq4t/i1eLK4sDituKs4qLimOKO4oTie+Jx4mfiXuJU4kviQuI54i/iJuId4hTiDOID4vrh8eHp4eDh2OHQ4cfhv+G34a/hp+Gf4Zfhj+GI4YDheOFx4WrhYuFb4VThTeFG4T/hOOEx4SrhJOEd4RbhEOEK4QPh/eD34PHg6+Dl4N/g2eDU4M7gyeDD4L7guOCz4K7gqeCk4J/gmuCV4JHgjOCH4IPgfuB64HbgcuBu4GrgZuBi4F7gWuBX4FPgT+BM4EngReBC4D/gPOA54DbgM+Ax4C7gK+Ap4CfgJOAi4CDgHuAc4BrgGOAW4BTgEuAR4A/gDuAN4AvgCuAJ4AjgB+AG4AXgBeAE4APgA+AC4ALgAuAC4ALgAeAC4ALgAuAC4ALgA+AD4ATgBeAF4AbgB+AI4AngCuAL4A3gDuAP4BHgEuAU4BbgGOAa4BzgHuAg4CLgJOAn4CngK+Au4DHgM+A24DngPOA/4ELgReBJ4EzgT+BT4FfgWuBe4GLgZuBq4G7gcuB24HrgfuCD4IfgjOCR4JXgmuCf4KTgqeCu4LPguOC+4MPgyeDO4NTg2eDf4OXg6+Dx4Pfg/eAD4QrhEOEW4R3hJOEq4THhOOE/4UbhTeFU4VvhYuFq4XHheOGA4Yjhj+GX4Z/hp+Gv4bfhv+HH4dDh2OHg4enh8eH64QPiDOIU4h3iJuIv4jniQuJL4lTiXuJn4nHie+KE4o7imOKi4qzituLA4sri1eLf4uri9OL/4gnjFOMf4yrjNOM/40vjVuNh42zjd+OD447jmuOl47HjvePJ49Xj4ePt4/njBeQR5B3kKuQ25EPkT+Rc5GjkdeSC5I/knOSp5Lbkw+TQ5N7k6+T45AblE+Uh5S/lPOVK5VjlZuV05YLlkOWe5a3lu+XJ5djl5uX15QPmEuYh5jDmPuZN5lzma+Z75ormmeao5rjmx+bX5ubm9uYF5xXnJec150XnVedl53XnheeV56XntufG59fn5+f45wjoGegq6DvoS+hc6G3ofuiP6KDosujD6NTo5uj36AjpGuks6T3pT+lh6XLphOmW6ajpuunM6d7p8OkD6hXqJ+o66kzqX+px6oTqluqp6rzqz+ri6vTqB+sa6y3rQetU62freuuN66HrtOvI69vr7+sC7BbsKuw97FHsZex57I3soey17Mns3ezx7AXtGu0u7ULtV+1r7YDtlO2p7b3t0u3n7fvtEO4l7jruT+5k7nnuju6j7rjuze7i7vjuDe8i7zjvTe9i73jvje+j77nvzu/k7/rvEPAl8DvwUfBn8H3wk/Cp8L/w1fDr8AHxGPEu8UTxW/Fx8YfxnvG08cvx4fH48Q7yJfI88lLyafKA8pfyrvLE8tvy8vIJ8yDzN/NO82XzfPOU86vzwvPZ8/DzCPQf9Db0TvRl9H30lPSs9MP02/Ty9Ar1IfU59VH1aPWA9Zj1sPXH9d/19/UP9if2P/ZX9m/2h/af9rf2z/bn9v/2F/cv90f3YPd495D3qPfB99n38fcK+CL4OvhT+Gv4g/ic+LT4zfjl+P74Fvkv+Uf5YPl5+ZH5qvnD+dv59PkN+iX6PvpX+m/6iPqh+rr60vrr+gT7Hfs2+0/7Z/uA+5n7svvL++T7/fsW/C/8SPxh/Hr8k/ys/MX83vz3/BD9Kf1C/Vv9dP2N/ab9v/3Y/fH9Cv4j/jz+Vf5v/oj+of66/tP+7P4F/x7/N/9R/2r/g/+c/7X/zv/n/wAAGQAyAEsAZAB9AJYArwDJAOIA+wAUAS0BRgFfAXgBkQGrAcQB3QH2AQ8CKAJBAloCcwKMAqUCvgLXAvACCQMiAzsDVANtA4YDnwO4A9ED6gMDBBwENQROBGcEgASZBLEEygTjBPwEFQUuBUYFXwV4BZEFqQXCBdsF8wUMBiUGPQZWBm8GhwagBrkG0QbqBgIHGwczB0wHZAd9B5UHrQfGB94H9gcPCCcIPwhYCHAIiAigCLkI0QjpCAEJGQkxCUkJYQl5CZEJqQnBCdkJ8QkJCiEKOQpQCmgKgAqYCq8KxwrfCvYKDgslCz0LVAtsC4MLmwuyC8oL4Qv4CxAMJww+DFUMbAyEDJsMsgzJDOAM9wwODSUNPA1SDWkNgA2XDa4NxA3bDfINCA4fDjUOTA5iDnkOjw6lDrwO0g7oDv8OFQ8rD0EPVw9tD4MPmQ+vD8UP2w/wDwYQHBAyEEcQXRBzEIgQnhCzEMgQ3hDzEAgRHhEzEUgRXRFyEYcRnBGxEcYR2xHwEQUSGRIuEkMSVxJsEoASlRKpEr4S0hLmEvsSDxMjEzcTSxNfE3MThxObE68TwxPWE+oT/hMRFCUUOBRMFF8UcxSGFJkUrBS/FNMU5hT5FAwVHhUxFUQVVxVqFXwVjxWhFbQVxhXZFesV/RUQFiIWNBZGFlgWahZ8Fo4WnxaxFsMW1BbmFvgWCRcaFywXPRdOF2AXcReCF5MXpBe1F8UX1hfnF/gXCBgZGCkYOhhKGFsYaxh7GIsYmxirGLsYyxjbGOsY+xgKGRoZKRk5GUgZWBlnGXYZhRmVGaQZsxnCGdAZ3xnuGf0ZCxoaGigaNxpFGlMaYhpwGn4ajBqaGqgathrEGtEa3xrtGvoaCBsVGyIbMBs9G0obVxtkG3EbfhuLG5gbpBuxG70byhvWG+Mb7xv7GwccExwfHCscNxxDHE8cWxxmHHIcfRyJHJQcnxyqHLUcwRzMHNYc4RzsHPccAR0MHRYdIR0rHTYdQB1KHVQdXh1oHXIdfB2FHY8dmR2iHawdtR2+Hccd0R3aHeMd7B30Hf0dBh4PHhceIB4oHjAeOR5BHkkeUR5ZHmEeaR5xHngegB6IHo8elh6eHqUerB6zHroewR7IHs8e1h7cHuMe6h7wHvYe/R4DHwkfDx8VHxsfIR8nHywfMh83Hz0fQh9IH00fUh9XH1wfYR9mH2sfbx90H3kffR+CH4Yfih+OH5Iflh+aH54foh+mH6kfrR+xH7Qftx+7H74fwR/EH8cfyh/NH88f0h/VH9cf2R/cH94f4B/iH+Qf5h/oH+of7B/uH+8f8R/yH/Mf9R/2H/cf+B/5H/of+x/7H/wf/R/9H/4f/h/+H/4f/h//H/4f/h/+H/4f/h/9H/0f/B/7H/sf+h/5H/gf9x/2H/Uf8x/yH/Ef7x/uH+wf6h/oH+Yf5B/iH+Af3h/cH9kf1x/VH9Ifzx/NH8ofxx/EH8Efvh+7H7cftB+xH60fqR+mH6Ifnh+aH5Yfkh+OH4ofhh+CH30feR90H28fax9mH2EfXB9XH1IfTR9IH0IfPR83HzIfLB8nHyEfGx8VHw8fCR8DH/0e9h7wHuoe4x7cHtYezx7IHsEeuh6zHqwepR6eHpYejx6IHoAeeB5xHmkeYR5ZHlEeSR5BHjkeMB4oHiAeFx4PHgYe/R30Hewd4x3aHdEdxx2+HbUdrB2iHZkdjx2FHXwdch1oHV4dVB1KHUAdNh0rHSEdFh0MHQEd9xzsHOEc1hzMHMEctRyqHJ8clByJHH0cchxmHFscTxxDHDccKxwfHBMcBxz7G+8b4xvWG8obvRuxG6QbmBuLG34bcRtkG1cbShs9GzAbIhsVGwgb+hrtGt8a0RrEGrYaqBqaGowafhpwGmIaUxpFGjcaKBoaGgsa/RnuGd8Z0BnCGbMZpBmVGYUZdhlnGVgZSBk5GSkZGhkKGfsY6xjbGMsYuxirGJsYixh7GGsYWxhKGDoYKRgZGAgY+BfnF9YXxRe1F6QXkxeCF3EXYBdOFz0XLBcaFwkX+BbmFtQWwxaxFp8WjhZ8FmoWWBZGFjQWIhYQFv0V6xXZFcYVtBWhFY8VfBVqFVcVRBUxFR4VDBX5FOYU0xS/FKwUmRSGFHMUXxRMFDgUJRQRFP4T6hPWE8MTrxObE4cTcxNfE0sTNxMjEw8T+xLmEtISvhKpEpUSgBJsElcSQxIuEhkSBRLwEdsRxhGxEZwRhxFyEV0RSBEzER4RCBHzEN4QyBCzEJ4QiBBzEF0QRxAyEBwQBhDwD9sPxQ+vD5kPgw9tD1cPQQ8rDxUP/w7oDtIOvA6lDo8OeQ5iDkwONQ4fDggO8g3bDcQNrg2XDYANaQ1SDTwNJQ0ODfcM4AzJDLIMmwyEDGwMVQw+DCcMEAz4C+ELyguyC5sLgwtsC1QLPQslCw4L9grfCscKrwqYCoAKaApQCjkKIQoJCvEJ2QnBCakJkQl5CWEJSQkxCRkJAQnpCNEIuQigCIgIcAhYCD8IJwgPCPYH3gfGB60HlQd9B2QHTAczBxsHAgfqBtEGuQagBocGbwZWBj0GJQYMBvMF2wXCBakFkQV4BV8FRgUuBRUF/ATjBMoEsQSZBIAEZwROBDUEHAQDBOoD0QO4A58DhgNtA1QDOwMiAwkD8ALXAr4CpQKMAnMCWgJBAigCDwL2Ad0BxAGrAZEBeAFfAUYBLQEUAfsA4gDJAK8AlgB9AGQASwAyABkAMAAAADAAAABAAAAAUAAAAJAAAACgAAAAsAAAAMAAAACAm7XL3Ojt7Obczr+wo5iQjIuMj5KUlZKMg3hpWUk8MSopLTZEVml9j5+qsbKtpJaHeGlcU09PVV5reoiWoquwsa6ooJiRi4iJjZSdqLK7wMG9tKWSfGNKMh4OBQIFDx4wRFltf4yWnJ+fnZuZmZyhqbO/ytXc4N7YzLumj3dgSzouKCkvOkhZanqGkJSVkYmAdWtiXFpcYWl0gIqUmp6dmJCGfHFoYmBja3iIm6/C0t/m5+LXxrKchG9bS0A5Nzg9Q0pQVFZVUk1IQj8+QUlWZ3yTq8PZ6vb8+/Tn1cCqlIBxZF1aXGFocHd9f397dGthV05IRkhOWWZ1hJOfp6uqpJmLe2pbTkZDRU1aa3+SprjFz9PSzcS5raGWjomHh4qNkZKRjIR4aFVBLhwOBQEFDx80TWiBmrDBzdPT0Mi/taukn5ydoKWqrrGwq6OWh3ZjUUI2Ly0xOkhZa36OnKaqqaOYintsXVJKSEpQWmd1gi0AAAAmAAAALQAAAC0AAAA3AAAALQ=="),U(w,110928,"yv5w/hICZAHgAFkAFwD2/8b/8P/NAVcCGAK9AgIDXQLxAc0BMAKUAW4A4ACDAGgAn/+bABYBZv9z+6r94QJ9ALD9KQALAAn/9v9BAFwAUADQ/kcApwD//3oA6QChANX/FgHfAeUBlwEKAYoChgBQAOwARAAEAQ0BswA1AIwAEwElASgBaAABAZgANwG2AAcB9QB9ADoBjAAsAMsA5gAV/+L+FwBrAFwApf8mANABuwGwAGIA8Pxv9p346/vA+Ur6mPoT+0v8Jv0="),U(w,111162,"BgAHAAgACQAKAAsADQAOABAAEgAUABYAGQAcACAAIwAoAC0AMwA5AEAARwBQAFoAZQByAIAAjgCfALMAygDjAAABHAE+AWcBlQHHAQACOAJ+As8CcQOPAwAEcQT8BJ4FVgYfBwAI4Qj4CTsLrAw9DgAQwxHwE3cWWBl7HAAghSPfJ+4ssDL2OABArkekUIVbZmYzc/9/"),U(w,111324,"qMtoQQAAAACoy2jBAAAAAAAAAAAXCtQJkglQCQ8JzgiPCE8IEwjVB5oHYgcoB/MGvgaLBloGKwb9BdMFqQWBBVwFOAUWBfcE1wS7BKAEhgRuBFcEQQQtBBkEBwT1A+QD1APFA7YDqAOZA40DfwNxA2UDVwNLAz4DMgMkAxgDCwP+AvIC5ALYAssCvgKxAqQClwKLAn0CcgJkAlkCTAJAAjQCKAIcAhICBQL7AfAB5QHbAdABxgG7AbIBqAGeAZQBigGBAXcBbgFjAVsBUAFIAT0BNAErASABGAENAQQB+gDwAOcA3ADUAMgAwAC1AKwAoQCYAI4AhQB7AHEAaQBeAFYATABDADkAMQAnAB4AFgALAAQA+//y/+n/4P/X/87/xP+7/7L/qf+g/5X/jf+C/3r/cP9m/1z/Uv9J/z//Nf8r/yL/F/8O/wT/+v7x/uf+3f7T/sr+wP62/q3+o/6b/pD+h/59/nP+av5f/lb+TP5C/jj+Lf4j/hn+Df4D/vf97P3h/dX9yf29/bH9pf2Y/Yz9f/1z/Wb9Wf1M/T/9M/0k/Rn9Cv3//PH85fzY/Mz8vvyz/KT8mPyL/H78cfxi/FX8Rfw4/Cb8GfwG/Pb74vvQ+7r7pfuO+3b7XPtB+yT7Bvvl+sT6n/p5+lP6KPr++dD5oflw+Tz5CfnR+Jr4YPgm+Oj3q/ds9yz36/aq9mj2Jvbj9bAEdgRABA4E3wO0A4sDZQNBAx8DAAPiAsYCqwKSAnoCZAJOAjoCJwIVAgMC8wHjAdQBxgG4AasBnwGTAYcBfAFyAWgBXgFVAUwBQwE7ATMBLAEkAR0BFgEQAQkBAwH9APcA8gDtAOcA4gDdANkA1ADQAMwAxwDDAMAAvAC4ALQAsQCuAKoApwCkAKEAngCbAJkAlgCTAJEAjgCMAIkAhwCFAIMAgAB+AHwAegB4AHcAdQBzAHEAbwBuAGwAagBpAGcAZgBkAGMAYQBgAF8AXQBcAFsAWgBYAFcAVgBVAFQAUwBSAFAATwBOAE0ATABLAEsASgBJAEgARwBGAEUARABEAEMAQgBBAEAAQAA/AD4APQA9ADwAOwA7ADoAOQA5ADgAOAA3ADcANgA2ADUANQA0ADQAMwAzADIAMgAxADEAMAAwAC8ALwAuAC4ALQAtACwALAArACsAKgAqACkAKQApACkAKAAoACcAJwAmACYAJgAmACUAJQAkACQAJAAkACMAIwAjACMAIgAiACEAIQAhACEAIAAgACAAIAAfAB8AHwAfAB4AHgAeAB4AHQAdAB0AHQAcABwAHAAcABsAGwAxNkZyYW1lTWFuYWdlckltcGwAMTJGcmFtZU1hbmFnZXIAMjNTcGVlY2hXYXZlR2VuZXJhdG9ySW1wbAAxOVNwZWVjaFdhdmVHZW5lcmF0b3IAMTNXYXZlR2VuZXJhdG9y"),U(w,112416,"AwAAAAQAAAAEAAAABgAAAIP5ogBETm4A/CkVANFXJwDdNPUAYtvAADyZlQBBkEMAY1H+ALveqwC3YcUAOm4kANJNQgBJBuAACeouAByS0QDrHf4AKbEcAOg+pwD1NYIARLsuAJzphAC0JnAAQX5fANaROQBTgzkAnPQ5AItfhAAo+b0A+B87AN7/lwAPmAUAES/vAApaiwBtH20Az342AAnLJwBGT7cAnmY/AC3qXwC6J3UA5evHAD178QD3OQcAklKKAPtr6gAfsV8ACF2NADADVgB7/EYA8KtrACC8zwA29JoA46kdAF5hkQAIG+YAhZllAKAUXwCNQGgAgNj/ACdzTQAGBjEAylYVAMmocwB74mAAa4zAABnERwDNZ8MACejcAFmDKgCLdsQAphyWAESv3QAZV9EApT4FAAUH/wAzfj8AwjLoAJhP3gC7fTIAJj3DAB5r7wCf+F4ANR86AH/yygDxhx0AfJAhAGokfADVbvoAMC13ABU7QwC1FMYAwxmdAK3EwgAsTUEADABdAIZ9RgDjcS0Am8aaADNiAAC00nwAtKeXADdV1QDXPvYAoxAYAE12/ABknSoAcNerAGN8+AB6sFcAFxXnAMBJVgA71tkAp4Q4ACQjywDWincAWlQjAAAfuQDxChsAGc7fAJ8x/wBmHmoAmVdhAKz7RwB+f9gAImW3ADLoiQDmv2AA78TNAGw2CQBdP9QAFt7XAFg73gDem5IA0iIoACiG6ADiWE0AxsoyAAjjFgDgfcsAF8BQAPMdpwAY4FsALhM0AIMSYgCDSAEA9Y5bAK2wfwAe6fIASEpDABBn0wCq3dgArl9CAGphzgAKKKQA05m0AAam8gBcd38Ao8KDAGE8iACKc3gAr4xaAG/XvQAtpmMA9L/LAI2B7wAmwWcAVcpFAMrZNgAoqNIAwmGNABLJdwAEJhQAEkabAMRZxADIxUQATbKRAAAX8wDUQ60AKUnlAP3VEAAAvvwAHpTMAHDO7gATPvUA7PGAALPnwwDH+CgAkwWUAMFxPgAuCbMAC0XzAIgSnACrIHsALrWfAEeSwgB7Mi8ADFVtAHKnkABr5x8AMcuWAHkWSgBBeeIA9N+JAOiUlwDi5oQAmTGXAIjtawBfXzYAu/0OAEiatABnpGwAcXJCAI1dMgCfFbgAvOUJAI0xJQD3dDkAMAUcAA0MAQBLCGgALO5YAEeqkAB05wIAvdYkAPd9pgBuSHIAnxbvAI6UpgC0kfYA0VNRAM8K8gAgmDMA9Ut+ALJjaADdPl8AQF0DAIWJfwBVUikAN2TAAG3YEAAySDIAW0x1AE5x1ABFVG4ACwnBACr1aQAUZtUAJwedAF0EUAC0O9sA6nbFAIf5FwBJa30AHSe6AJZpKQDGzKwArRRUAJDiagCI2YkALHJQAASkvgB3B5QA8zBwAAD8JwDqcagAZsJJAGTgPQCX3YMAoz+XAEOU/QANhowAMUHeAJI5nQDdcIwAF7fnAAjfOwAVNysAXICgAFqAkwAQEZIAD+jYAGyArwDb/0sAOJAPAFkYdgBipRUAYcu7AMeJuQAQQL0A0vIEAEl1JwDrtvYA2yK7AAoUqgCJJi8AZIN2AAk7MwAOlBoAUTqqAB2jwgCv7a4AXCYSAG3CTQAtepwAwFaXAAM/gwAJ8PYAK0CMAG0xmQA5tAcADCAVANjDWwD1ksQAxq1LAE7KpQCnN80A5qk2AKuSlADdQmgAGWPeAHaM7wBoi1IA/Ns3AK6hqwDfFTEAAK6hAAz72gBkTWYA7QW3ACllMABXVr8AR/86AGr5uQB1vvMAKJPfAKuAMABmjPYABMsVAPoiBgDZ5B0APbOkAFcbjwA2zQkATkLpABO+pAAzI7UA8KoaAE9lqADSwaUACz8PAFt4zQAj+XYAe4sEAIkXcgDGplMAb27iAO/rAACbSlgAxNq3AKpmugB2z88A0QIdALHxLQCMmcEAw613AIZI2gD3XaAAxoD0AKzwLwDd7JoAP1y8ANDebQCQxx8AKtu2AKMlOgAAr5oArVOTALZXBAApLbQAS4B+ANoHpwB2qg4Ae1mhABYSKgDcty0A+uX9AInb/gCJvv0A5HZsAAap/AA+gHAAhW4VAP2H/wAoPgcAYWczACoYhgBNveoAs+evAI9tbgCVZzkAMb9bAITXSAAw3xYAxy1DACVhNQDJcM4AMMu4AL9s/QCkAKIABWzkAFrdoAAhb0cAYhLSALlchABwYUkAa1bgAJlSAQBQVTcAHtW3ADPxxAATbl8AXTDkAIUuqQAdssMAoTI2AAi3pADqsdQAFvchAI9p5AAn/3cADAOAAI1ALQBPzaAAIKWZALOi0wAvXQoAtPlCABHaywB9vtAAm9vBAKsXvQDKooEACGpcAC5VFwAnAFUAfxTwAOEHhgAUC2QAlkGNAIe+3gDa/SoAayW2AHuJNAAF8/4Aub+eAGhqTwBKKqgAT8RaAC34vADXWpgA9MeVAA1NjQAgOqYApFdfABQ/sQCAOJUAzCABAHHdhgDJ3rYAv2D1AE1lEQABB2sAjLCsALLA0ABRVUgAHvsOAJVywwCjBjsAwEA1AAbcewDgRcwATin6ANbKyADo80EAfGTeAJtk2ADZvjEApJfDAHdY1ABp48UA8NoTALo6PABGGEYAVXVfANK99QBuksYArC5dAA5E7QAcPkIAYcSHACn96QDn1vMAInzKAG+RNQAI4MUA/9eNAG5q4gCw/cYAkwjBAHxddABrrbIAzW6dAD5yewDGEWoA98+pAClz3wC1yboAtwBRAOKyDQB0uiQA5X1gAHTYigANFSwAgRgMAH5mlAABKRYAn3p2AP39vgBWRe8A2X42AOzZEwCLurkAxJf8ADGoJwDxbsMAlMU2ANioVgC0qLUAz8wOABKJLQBvVzQALFaJAJnO4wDWILkAa16qAD4qnAARX8wA/QtKAOH0+wCOO20A4oYsAOnUhAD8tKkA7+7RAC41yQAvOWEAOCFEABvZyACB/AoA+0pqAC8c2ABTtIQATpmMAFQizAAqVdwAwMbWAAsZlgAacLgAaZVkACZaYAA/Uu4AfxEPAPS1EQD8y/UANLwtADS87gDoXcwA3V5gAGeOmwCSM+8AyRe4AGFYmwDhV7wAUYPGANg+EADdcUgALRzdAK8YoQAhLEYAWfPXANl6mACeVMAAT4b6AFYG/ADlea4AiSI2ADitIgBnk9wAVeiqAIImOADK55sAUQ2kAJkzsQCp1w4AaQVIAGWy8AB/iKcAiEyXAPnRNgAhkrMAe4JKAJjPIQBAn9wA3EdVAOF0OgBn60IA/p3fAF7UXwB7Z6QAuqx6AFX2ogAriCMAQbpVAFluCAAhKoYAOUeDAInj5gDlntQASftAAP9W6QAcD8oAxVmKAJT6KwDTwcUAD8XPANtargBHxYYAhUNiACGGOwAseZQAEGGHACpMewCALBoAQ78SAIgmkAB4PIkAqMTkAOXbewDEOsIAJvTqAPdnigANkr8AZaMrAD2TsQC9fAsApFHcACfdYwBp4d0AmpQZAKgplQBozigACe20AESfIABOmMoAcIJjAH58IwAPuTIAp/WOABRW5wAh8QgAtZ0qAG9+TQClGVEAtfmrAILf1gCW3WEAFjYCAMQ6nwCDoqEAcu1tADmNegCCuKkAazJcAEYnWwAANO0A0gB3APz0VQABWU0A4HGA"),U(w,115203,"QPsh+T8AAAAALUR0PgAAAICYRvg8AAAAYFHMeDsAAACAgxvwOQAAAEAgJXo4AAAAgCKC4zYAAAAAHfNpNf6CK2VHFWdAAAAAAAAAOEMAAPr+Qi52vzo7nrya9wy9vf3/////3z88VFVVVVXFP5ErF89VVaU/F9CkZxERgT8AAAAAAADIQu85+v5CLuY/JMSC/72/zj+19AzXCGusP8xQRtKrsoM/hDpOm+DXVT8="),U(w,115390,"8D9uv4gaTzubPDUz+6k99u8/XdzYnBNgcbxhgHc+muzvP9FmhxB6XpC8hX9u6BXj7z8T9mc1UtKMPHSFFdOw2e8/+o75I4DOi7ze9t0pa9DvP2HI5mFO92A8yJt1GEXH7z+Z0zNb5KOQPIPzxso+vu8/bXuDXaaalzwPiflsWLXvP/zv/ZIatY4890dyK5Ks7z/RnC9wPb4+PKLR0zLso+8/C26QiTQDarwb0/6vZpvvPw69LypSVpW8UVsS0AGT7z9V6k6M74BQvMwxbMC9iu8/FvTVuSPJkbzgLamumoLvP69VXOnj04A8UY6lyJh67z9Ik6XqFRuAvHtRfTy4cu8/PTLeVfAfj7zqjYw4+WrvP79TEz+MiYs8dctv61tj7z8m6xF2nNmWvNRcBITgW+8/YC86PvfsmjyquWgxh1TvP504hsuC54+8Hdn8IlBN7z+Nw6ZEQW+KPNaMYog7Ru8/fQTksAV6gDyW3H2RST/vP5SoqOP9jpY8OGJ1bno47z99SHTyGF6HPD+msk/OMe8/8ucfmCtHgDzdfOJlRSvvP14IcT97uJa8gWP14d8k7z8xqwlt4feCPOHeH/WdHu8/+r9vGpshPbyQ2drQfxjvP7QKDHKCN4s8CwPkpoUS7z+Py86JkhRuPFYvPqmvDO8/tquwTXVNgzwVtzEK/gbvP0x0rOIBQoY8MdhM/HAB7z9K+NNdOd2PPP8WZLII/O4/BFuOO4Cjhrzxn5JfxfbuP2hQS8ztSpK8y6k6N6fx7j+OLVEb+AeZvGbYBW2u7O4/0jaUPujRcbz3n+U02+fuPxUbzrMZGZm85agTwy3j7j9tTCqnSJ+FPCI0Ekym3u4/imkoemASk7wcgKwERdruP1uJF0iPp1i8Ki73IQrW7j8bmklnmyx8vJeoUNn10e4/EazCYO1jQzwtiWFgCM7uP+9kBjsJZpY8VwAd7UHK7j95A6Ha4cxuPNA8wbWixu4/MBIPP47/kzze09fwKsPuP7CvervOkHY8Jyo21dq/7j934FTrvR2TPA3d/ZmyvO4/jqNxADSUj7ynLJ12srnuP0mjk9zM3oe8QmbPotq27j9fOA+9xt54vIJPnVYrtO4/9lx77EYShrwPkl3KpLHuP47X/RgFNZM82ie1Nkev7j8Fm4ovt5h7PP3Hl9QSre4/CVQc4uFjkDwpVEjdB6vuP+rGGVCFxzQ8t0ZZiiap7j81wGQr5jKUPEghrRVvp+4/n3aZYUrkjLwJ3Ha54aXuP6hN7zvFM4y8hVU6sH6k7j+u6SuJeFOEvCDDzDRGo+4/WFhWeN3Ok7wlIlWCOKLuP2QZfoCqEFc8c6lM1FWh7j8oIl6/77OTvM07f2aeoO4/grk0h60Sary/2gt1EqDuP+6pbbjvZ2O8LxplPLKf7j9RiOBUPdyAvISUUfl9n+4/zz5afmQfeLx0X+zodZ/uP7B9i8BK7oa8dIGlSJqf7j+K5lUeMhmGvMlnQlbrn+4/09QJXsuckDw/Xd5PaaDuPx2lTbncMnu8hwHrcxSh7j9rwGdU/eyUPDLBMAHtoe4/VWzWq+HrZTxiTs8286LuP0LPsy/FoYi8Eho+VCek7j80NzvxtmmTvBPOTJmJpe4/Hv8ZOoRegLytxyNGGqfuP25XcthQ1JS87ZJEm9mo7j8Aig5bZ62QPJlmitnHqu4/tOrwwS+3jTzboCpC5azuP//nxZxgtmW8jES1FjKv7j9EX/NZg/Z7PDZ3FZmuse4/gz0epx8Jk7zG/5ELW7TuPykebIu4qV285cXNsDe37j9ZuZB8+SNsvA9SyMtEuu4/qvn0IkNDkrxQTt6fgr3uP0uOZtdsyoW8ugfKcPHA7j8nzpEr/K9xPJDwo4KRxO4/u3MK4TXSbTwjI+MZY8juP2MiYiIExYe8ZeVde2bM7j/VMeLjhhyLPDMtSuyb0O4/Fbu809G7kbxdJT6yA9XuP9Ix7pwxzJA8WLMwE57Z7j+zWnNuhGmEPL/9eVVr3u4/tJ2Ol83fgrx689O/a+PuP4czy5J3Gow8rdNamZ/o7j/62dFKj3uQvGa2jSkH7u4/uq7cVtnDVbz7FU+4ovPuP0D2pj0OpJC8OlnljXL57j80k6049NZovEde+/J2/+4/NYpYa+LukbxKBqEwsAXvP83dXwrX/3Q80sFLkB4M7z+smJL6+72RvAke11vCEu8/swyvMK5uczycUoXdmxnvP5T9n1wy4448etD/X6sg7z+sWQnRj+CEPEvRVy7xJ+8/ZxpOOK/NYzy15waUbS/vP2gZkmwsa2c8aZDv3CA37z/StcyDGIqAvPrDXVULP+8/b/r/P12tj7x8iQdKLUfvP0mpdTiuDZC88okNCIdP7z+nBz2mhaN0PIek+9wYWO8/DyJAIJ6RgryYg8kW42DvP6ySwdVQWo48hTLbA+Zp7z9LawGsWTqEPGC0AfMhc+8/Hz60ByHVgrxfm3szl3zvP8kNRzu5Kom8KaH1FEaG7z/TiDpgBLZ0PPY/i+cukO8/cXKdUezFgzyDTMf7UZrvP/CR048S94+82pCkoq+k7z99dCPimK6NvPFnji1Ir+8/CCCqQbzDjjwnWmHuG7rvPzLrqcOUK4Q8l7prNyvF7z/uhdExqWSKPEBFblt20O8/7eM75Lo3jrwUvpyt/dvvP53NkU07iXc82JCegcHn7z+JzGBBwQVTPPFxjyvC8+8/EhETFBUWFxgZGhscHR4fICERIiMkESUmJygpKissES0uLxAQMBAQEBAQEBAxMjMQNDUQEBERERERERERERERERERERERERERERERERE2ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERNxERERE4ETk6Ozw9PhERERERERERERERERERERERERERERERERERERERERERERERERERERERERE/EBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEUBBEUJDREVGR0hJShFLTE1OT1BREFJTVFVWV1hZWltcXRBeX2AQERERYWJjEBAQEBAQEBAQEBERERFkEBAQEBAQEBAQEBAQEBAQERFlEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQERFmZxAQaGkREREREREREREREREREREREREREREREWoREWsQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEWxtEBAQEBAQEBAQbhAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQb3BxchAQEBAQEBAQc3R1EBAQEBB2dxAQEBB4EBB5EBAQEBAQEBAQEBAQEBA="),U(w,117968,"//////////////////////////////////////////8AAAAAAAAAAP7//wf+//8HAAAAAAAEIAT//3////9//////////////////////////////////8P/AwAfUA=="),U(w,118072,"IAAAAAAA37xA1///+////////////7///////////////////////wP8///////////////////////////+////fwL//////wEAAAAA/7+2AP///4cHAAAA/wf//////////v/D////////////////7x/+4f+fAAD///////8A4P///////////////wMA//////8HMAT////8/x8AAP///wH/BwAAAAAAAP//3z8AAPD/+AP////////////v/9/h/8///v/vn/n///3F459ZgLDP/wMQ7of5///9bcOHGQJewP8/AO6/+////e3jvxsBAM//AB7un/n///3t458ZwLDP/wIA7Mc91hjH/8PHHYEAwP8AAO/f/f///f/j3x1gB8//AADv3/3///3v498dYEDP/wYA79/9/////+ffXfCAz/8A/Oz/f/z///svf4Bf/8D/DAD+/////3//Bz8g/wMAAAAA1vf//6///ztfIP/zAAAAAAEAAAD/AwAA//7///8f/v8D///+////HwAAAAAAAAAA////////f/n/A////////////z//////vyD///////f///////////89fz3//////z3/////PX89/3//////////Pf//////////BwAAAAD//wAA/////////////z8//v//////////////////////////////////////////////////////////n////v//B////////////8f/Af/fDwD//w8A//8PAP/fDQD////////P//8BgBD/AwAAAAD/A///////////////Af//////B///////////PwD///9//w//AcD/////Px8A//////8P////A/8DAAAAAP///w//////////f/7/HwD/A/8DgA=="),U(w,118768,"////////7//vD/8DAAAAAP//////8////////7//AwD///////9/AP/j//////8//wH//////+cAAAAAAN5vBP///////////////////////////////wAAAACA/x8A//8/P/////8/P/+q////P////////99f3B/PD/8f3B8="),U(w,118910,"AoAAAP8f"),U(w,118928,"hPwvPlC9//PgQwAA//////8B"),U(w,118982,"wP///////wMAAP//////f///////f/////////////////////8feAwA/////78g/////////4AAAP//fwB/f39/f39/f/////8AAAAAAIA="),U(w,119088,"4AAAAP4DPh/+////////////f+D+//////////////fg///////+/////////////38AAP///wcAAAAAAAD///////////////////////////////8/"),U(w,119184,"////////////////////////////////////////AAD//////////////////////x8AAAAAAAAAAP//////P/8f////DwAA//////9/8I///////////////////wAAAACA//z////////////////5////////fAAAAAAAgP+//////wAAAP///////w8A//////////8vAP8DAAD86P//////B/////8HAP///x/////////3/wCA/wP///9/////////fwD/P/8D//9//P////////9/BQAAOP//PAB+fn4Af3////////f/AP///////////////////wf/A///////////////////////////DwD//3/4//////8P/////////////////z//////////////////AwAAAAB/APjg//1/X9v/////////////////AwAAAPj///////////////8/AAD///////////z///////8AAAAAAP8P"),U(w,119582,"3/////////////////////8fAAD/A/7//wf+//8HwP////////////9//Pz8HAAAAAD/7///f///t/8//z8AAAAA////////////////////BwAAAAAAAAAA////////Hw=="),U(w,119712,"////H////////wEAAAAAAP////8A4P///wf//////wf///8//////w//PgAAAAAA/////////////////////////z//A/////8P/////w///////wD///////8P"),U(w,119824,"////////fwD//z8A/w=="),U(w,119856,"P/3/////v5H//z8A//9/AP///38AAAAAAAAAAP//NwD//z8A////AwAAAAAAAAAA/////////8AAAAAAAAAAAG/w7/7//z8AAAAAAP///x////8fAAAAAP/+//8fAAAA////////PwD//z8A//8HAP//Aw=="),U(w,119984,"////////////AQAAAAAAAP///////wcA////////BwD//////wD/Aw=="),U(w,120048,"////H4AA//8/"),U(w,120076,"//9/AP//////////PwAAAMD/AAD8////////AQAA////Af8D////////x/9wAP////9HAP//////////HgD/FwAAAAD///v///+fQAAAAAAAAAAAf73/v/8B/////////wH/A++f+f///e3jnxmB4A8="),U(w,120208,"//////////+7B/+DAAAAAP//////////swD/Aw=="),U(w,120256,"////////P38AAAA/AAAAAP////////9/EQD/AwAAAAD///////8/Af8DAAAAAAAA////5/8H/wM="),U(w,120336,"/////////wE="),U(w,120356,"////////////AwCA"),U(w,120388,"//z///////waAAAA////////538AAP///////////yAAAAAA/////////wH//f////9/fwEA/wMAAPz////8///+fw=="),U(w,120464,"f/v/////f7TLAP8Dv/3///9/ewH/Aw=="),U(w,120524,"//9/AP////////////////////////8D"),U(w,120560,"/////////////////38AAP///////////////////////////////w8="),U(w,120624,"//////9/"),U(w,120656,"//////////9/"),U(w,120688,"/////////wH///9//wM="),U(w,120714,"////PwAA////////AAAPAP8D+P//4P//"),U(w,120760,"//////////8="),U(w,120784,"////////////h/////////+A//8AAAAAAAAAAAsAAAD/////////////////////////////////////////AP///////////////////////////////////////wcA////fwAAAAAAAAcA8AD/////////////////////////////////////////////////////////////////D/////////////////8H/x//Af9D"),U(w,120976,"/////////////9///////////99k3v/r7/////////+/59/f////e1/8/f//////////////////////////////////////////////////////P/////3///f////3///f////3///f////3/////9/////f//98////////9////52wc="),U(w,121136,"//////8fgD//Qw=="),U(w,121192,"//////8P/wP///////////////////////////////8fAAAAAAAAAP//////////jwj/Aw=="),U(w,121264,"7////5b+9wqE6paqlvf3Xv/7/w/u+/8P"),U(w,121302,"////A////wP///8D"),U(w,121328,"/////////////////////////////////////////////////////////////////wABAgMEBQYHCAn/////////CgsMDQ4PEBESExQVFhcYGRobHB0eHyAhIiP///////8KCwwNDg8QERITFBUWFxgZGhscHR4fICEiI/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////8="),U(w,121601,"ARcCHRgTAx4bGQsUCAQNHxYcEhoKBwwVEQkGEAUPDt4SBJUAAAAA////////////////INsBABQAAABDLlVURi04"),U(w,121696,"TENfQ1RZUEUAAAAATENfTlVNRVJJQwAATENfVElNRQAAAAAATENfQ09MTEFURQAATENfTU9ORVRBUlkATENfTUVTU0FHRVM="),U(w,121776,"Qy5VVEYtOA=="),U(w,121800,"MAUCAE5vIGVycm9yIGluZm9ybWF0aW9uAElsbGVnYWwgYnl0ZSBzZXF1ZW5jZQBEb21haW4gZXJyb3IAUmVzdWx0IG5vdCByZXByZXNlbnRhYmxlAE5vdCBhIHR0eQBQZXJtaXNzaW9uIGRlbmllZABPcGVyYXRpb24gbm90IHBlcm1pdHRlZABObyBzdWNoIGZpbGUgb3IgZGlyZWN0b3J5AE5vIHN1Y2ggcHJvY2VzcwBGaWxlIGV4aXN0cwBWYWx1ZSB0b28gbGFyZ2UgZm9yIGRhdGEgdHlwZQBObyBzcGFjZSBsZWZ0IG9uIGRldmljZQBPdXQgb2YgbWVtb3J5AFJlc291cmNlIGJ1c3kASW50ZXJydXB0ZWQgc3lzdGVtIGNhbGwAUmVzb3VyY2UgdGVtcG9yYXJpbHkgdW5hdmFpbGFibGUASW52YWxpZCBzZWVrAENyb3NzLWRldmljZSBsaW5rAFJlYWQtb25seSBmaWxlIHN5c3RlbQBEaXJlY3Rvcnkgbm90IGVtcHR5AENvbm5lY3Rpb24gcmVzZXQgYnkgcGVlcgBPcGVyYXRpb24gdGltZWQgb3V0AENvbm5lY3Rpb24gcmVmdXNlZABIb3N0IGlzIGRvd24ASG9zdCBpcyB1bnJlYWNoYWJsZQBBZGRyZXNzIGluIHVzZQBCcm9rZW4gcGlwZQBJL08gZXJyb3IATm8gc3VjaCBkZXZpY2Ugb3IgYWRkcmVzcwBCbG9jayBkZXZpY2UgcmVxdWlyZWQATm8gc3VjaCBkZXZpY2UATm90IGEgZGlyZWN0b3J5AElzIGEgZGlyZWN0b3J5AFRleHQgZmlsZSBidXN5AEV4ZWMgZm9ybWF0IGVycm9yAEludmFsaWQgYXJndW1lbnQAQXJndW1lbnQgbGlzdCB0b28gbG9uZwBTeW1ib2xpYyBsaW5rIGxvb3AARmlsZW5hbWUgdG9vIGxvbmcAVG9vIG1hbnkgb3BlbiBmaWxlcyBpbiBzeXN0ZW0ATm8gZmlsZSBkZXNjcmlwdG9ycyBhdmFpbGFibGUAQmFkIGZpbGUgZGVzY3JpcHRvcgBObyBjaGlsZCBwcm9jZXNzAEJhZCBhZGRyZXNzAEZpbGUgdG9vIGxhcmdlAFRvbyBtYW55IGxpbmtzAE5vIGxvY2tzIGF2YWlsYWJsZQBSZXNvdXJjZSBkZWFkbG9jayB3b3VsZCBvY2N1cgBTdGF0ZSBub3QgcmVjb3ZlcmFibGUAUHJldmlvdXMgb3duZXIgZGllZABPcGVyYXRpb24gY2FuY2VsZWQARnVuY3Rpb24gbm90IGltcGxlbWVudGVkAE5vIG1lc3NhZ2Ugb2YgZGVzaXJlZCB0eXBlAElkZW50aWZpZXIgcmVtb3ZlZABEZXZpY2Ugbm90IGEgc3RyZWFtAE5vIGRhdGEgYXZhaWxhYmxlAERldmljZSB0aW1lb3V0AE91dCBvZiBzdHJlYW1zIHJlc291cmNlcwBMaW5rIGhhcyBiZWVuIHNldmVyZWQAUHJvdG9jb2wgZXJyb3IAQmFkIG1lc3NhZ2UARmlsZSBkZXNjcmlwdG9yIGluIGJhZCBzdGF0ZQBOb3QgYSBzb2NrZXQARGVzdGluYXRpb24gYWRkcmVzcyByZXF1aXJlZABNZXNzYWdlIHRvbyBsYXJnZQBQcm90b2NvbCB3cm9uZyB0eXBlIGZvciBzb2NrZXQAUHJvdG9jb2wgbm90IGF2YWlsYWJsZQBQcm90b2NvbCBub3Qgc3VwcG9ydGVkAFNvY2tldCB0eXBlIG5vdCBzdXBwb3J0ZWQATm90IHN1cHBvcnRlZABQcm90b2NvbCBmYW1pbHkgbm90IHN1cHBvcnRlZABBZGRyZXNzIGZhbWlseSBub3Qgc3VwcG9ydGVkIGJ5IHByb3RvY29sAEFkZHJlc3Mgbm90IGF2YWlsYWJsZQBOZXR3b3JrIGlzIGRvd24ATmV0d29yayB1bnJlYWNoYWJsZQBDb25uZWN0aW9uIHJlc2V0IGJ5IG5ldHdvcmsAQ29ubmVjdGlvbiBhYm9ydGVkAE5vIGJ1ZmZlciBzcGFjZSBhdmFpbGFibGUAU29ja2V0IGlzIGNvbm5lY3RlZABTb2NrZXQgbm90IGNvbm5lY3RlZABDYW5ub3Qgc2VuZCBhZnRlciBzb2NrZXQgc2h1dGRvd24AT3BlcmF0aW9uIGFscmVhZHkgaW4gcHJvZ3Jlc3MAT3BlcmF0aW9uIGluIHByb2dyZXNzAFN0YWxlIGZpbGUgaGFuZGxlAFJlbW90ZSBJL08gZXJyb3IAUXVvdGEgZXhjZWVkZWQATm8gbWVkaXVtIGZvdW5kAFdyb25nIG1lZGl1bSB0eXBlAE11bHRpaG9wIGF0dGVtcHRlZABSZXF1aXJlZCBrZXkgbm90IGF2YWlsYWJsZQBLZXkgaGFzIGV4cGlyZWQAS2V5IGhhcyBiZWVuIHJldm9rZWQAS2V5IHdhcyByZWplY3RlZCBieSBzZXJ2aWNl"),U(w,123730,"pQJbAPABtQWMBSUBgwYdA5QE/wDHAzEDCwa8AY8BfwPKBCsA2gavAEIDTgPcAQ4EFQChBg0BlAILAjgGZAK8Av8CXQPnBAsHzwLLBe8F2wXhAh4GRQKFAIICbANvBPEA8wMYBdkA2gNMBlQCewGdA70EAABRABUCuwCzA20A/wGFBC8F+QQ4AGUBRgGfALcGqAFzAlMB"),U(w,123928,"IQQAAAAAAAAAAC8C"),U(w,123960,"NQRHBFYE"),U(w,123982,"oAQ="),U(w,124002,"RgVgBW4FYQYAAM8BAAAAAAAAAADJBukG+QYeBzkHSQdeBw=="),U(w,124048,"GQAKABkZGQAAAAAFAAAAAAAACQAAAAALAAAAAAAAAAAZABEKGRkZAwoHAAEACQsYAAAJBgsAAAsABhkAAAAZGRk="),U(w,124129,"DgAAAAAAAAAAGQAKDRkZGQANAAACAAkOAAAACQAOAAAO"),U(w,124187,"DA=="),U(w,124199,"EwAAAAATAAAAAAkMAAAAAAAMAAAM"),U(w,124245,"EA=="),U(w,124257,"DwAAAAQPAAAAAAkQAAAAAAAQAAAQ"),U(w,124303,"Eg=="),U(w,124315,"EQAAAAARAAAAAAkSAAAAAAASAAASAAAaAAAAGhoa"),U(w,124370,"GgAAABoaGgAAAAAAAAk="),U(w,124419,"FA=="),U(w,124431,"FwAAAAAXAAAAAAkUAAAAAAAUAAAU"),U(w,124477,"Fg=="),U(w,124489,"FQAAAAAVAAAAAAkWAAAAAAAWAAAWAAAwMTIzNDU2Nzg5QUJDREVG"),U(w,124564,"EQ=="),U(w,124604,"//////////8="),U(w,124672,"0XSeAFedvSqAcFIP//8+JwoAAABkAAAA6AMAABAnAACghgEAQEIPAICWmAAA4fUFGAAAADUAAABxAAAAa////877//+Sv///AAAAAAAAAAACAADAAwAAwAQAAMAFAADABgAAwAcAAMAIAADACQAAwAoAAMALAADADAAAwA0AAMAOAADADwAAwBAAAMARAADAEgAAwBMAAMAUAADAFQAAwBYAAMAXAADAGAAAwBkAAMAaAADAGwAAwBwAAMAdAADAHgAAwB8AAMAAAACzAQAAwwIAAMMDAADDBAAAwwUAAMMGAADDBwAAwwgAAMMJAADDCgAAwwsAAMMMAADDDQAA0w4AAMMPAADDAAAMuwEADMMCAAzDAwAMwwQADNsAAAAAIAAAAAkAAAAKAAAADQAAAAsAAAAMAAAAhQAAAAAgAAABIAAAAiAAAAMgAAAEIAAABSAAAAYgAAAIIAAACSAAAAogAAAoIAAAKSAAAF8gAAAAMAAAAAAAAE4xMF9fY3h4YWJpdjExNl9fc2hpbV90eXBlX2luZm9FAAAAAGjpAQB46AEAZOoBAE4xMF9fY3h4YWJpdjExN19fY2xhc3NfdHlwZV9pbmZvRQAAAGjpAQCo6AEAnOgBAE4xMF9fY3h4YWJpdjExN19fcGJhc2VfdHlwZV9pbmZvRQAAAGjpAQDY6AEAnOgBAE4xMF9fY3h4YWJpdjExOV9fcG9pbnRlcl90eXBlX2luZm9FAGjpAQAI6QEA/OgBAAAAAADM6AEAFAAAABUAAAAWAAAAFwAAABgAAAAZAAAAGgAAABsAAAAAAAAAsOkBABQAAAAcAAAAFgAAABcAAAAYAAAAHQAAAB4AAAAfAAAATjEwX19jeHhhYml2MTIwX19zaV9jbGFzc190eXBlX2luZm9FAAAAAGjpAQCI6QEAzOgBAAAAAAAg6gEACQAAACAAAAAhAAAAAAAAAEjqAQAJAAAAIgAAACMAAAAAAAAACOoBAAkAAAAkAAAAJQAAAFN0OWV4Y2VwdGlvbgAAAABA6QEA+OkBAFN0OWJhZF9hbGxvYwAAAABo6QEAEOoBAAjqAQBTdDIwYmFkX2FycmF5X25ld19sZW5ndGgAAAAAaOkBACzqAQAg6gEAU3Q5dHlwZV9pbmZvAAAAAEDpAQBU6gE="),U(w,125552,"wLEAAMCyAADAswAAwLQAAMC1AADAtgAAwLcAAMC4AADAuQAAwLoAAMC7AADAvAAAwL0AAMC+AADAvwAAwMAAAMDBAADAwgAAwMMAAMDEAADAxQAAwMIAAMDGAADAxwAAwMgAAMDJAADAygAAwMsAAMDMAADAzQAAwM4AAMDPAADA0AAAwNEAAMDSAADA0wAAwNQAAMDVAADA1gAAwNcAAMDYAADA2QAAwNIAAMDaAADA2wAAwNwAAMDdAADA3gAAwN8AAMDgAADA4QAAwNgAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADA4gAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwOMAAMDkAADAwgAAwMIAAMDCAADA5QAAwMIAAMDmAADA5wAAwOgAAMDpAADA6gAAwOsAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADA7AAAwO0AAMDCAADA7gAAwO8AAMDCAADA8AAAwPEAAMDyAADA8wAAwPQAAMD1AADA9gAAwPcAAMD4AADAwgAAwPkAAMD6AADA+wAAwPwAAMD9AADA/gAAwP8AAMAAAQDAAQEAwAIBAMADAQDABAEAwAUBAMAGAQDABwEAwAgBAMAJAQDACgEAwAsBAMAMAQDACwEAwA0BAMAOAQDADwEAwAsBAMDCAADAwgAAwMIAAMAQAQDAEQEAwBIBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDAwgAAwMIAAMDCAADAwgAAwBMBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMDCAADAwgAAwBQBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMDCAADAwgAAwBUBAMAWAQDACwEAwAsBAMAXAQDAGAEAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAGQEAwMIAAMDCAADAGgEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMDCAADAGwEAwBwBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMAdAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwB4BAMAfAQDAIAEAwCEBAMAiAQDAIwEAwCQBAMAlAQDA2AAAwNgAAMAmAQDACwEAwAsBAMALAQDACwEAwAsBAMAnAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwCgBAMApAQDACwEAwAsBAMAqAQDACwEAwCsBAMALAQDALAEAwC0BAMAuAQDALwEAwNgAAMDYAADAMAEAwDEBAMAyAQDAMwEAwDQBAMALAQDACwEAwAsBAMALAQDACwEAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMA1AQDAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwDYBAMA3AQDAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAOAEAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMA5AQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDAwgAAwMIAAMA6AQDAOwEAwDwB"),U(w,128496,"oVcBAEEAAADdVwEAQgAAACZYAQBDAAAAa1gBAEQAAADSWAEARQAAABNZAQBGAAAAfFkBAEcAAACEWQEASAAAADBaAQBJAAAAZ1oBAEoAAADuWgEASwAAAC5bAQBMAAAAcVsBAE0AAADZWwEATgAAAGtcAQBPAAAAh1wBAAgAAADcXAEACQAAAB9dAQAKAAAAZ10BAAsAAACVXQEADAAAAMpdAQANAAAAD14BAA4AAAAqXgEADwAAAIZeAQAPAAAAvV4BABAAAABDXwEAEQAAAH1fAQASAAAAq18BABMAAADZXwEAFAAAAAVgAQAVAAAAMGABABcAAABgYAEAGAAAAHlgAQAZAAAAtWABABsAAADdYAEAHAAAAPBgAQAdAAAAI2EBACAAAABEYQEAIQAAAG9hAQAiAAAAnWEBACMAAADRYQEAJAAAAPNhAQAlAAAAFWIBACYAAABZYgEAKAAAAH1iAQApAAAArmIBACoAAADoYgEAKwAAADVjAQAtAAAAb2MBAC4AAACnYwEALwAAAOZjAQAwAAAAeGQBADEAAACdZAEAMgAAAM9kAQAzAAAA/mQBAGQAAABgZQEAyAAAAN1lAQDJAAAAAAAAAP////8iZgEAAQAAAD5mAQACAAAABVUBAAMAAADNZgEAEQAAADRnAQASAAAAg2cBABMAAAD7ZwEAFAAAADtoAQAVAAAATGgBABYAAAB0aAEAEQAAALdoAQAhAAAAymgBACIAAAD+aAEAIwAAAEtpAQAkAAAAaWkBACUAAACfaQEAJgAAAOJpAQAhAAAAAAAAAP////8AAAAAAAAAACYAAAAAAAAAAQAAAJByAQABAAAAkHMBAAEAAACQdAEAAQAAAJB1AQABAAAAkHYBAAEAAACQdwEAAQAAAJB4AQABAAAAkHkBAAEAAACQegEAAQAAAJB7AQABAAAAkHwBAAEAAACQfQEAAQAAAJB+AQABAAAAkH8BAAEAAACQgAEAAQAAAJCBAQABAAAAkIIBAAUAAAAAAAAABg=="),U(w,129280,"oIMBAKCDAQAghAEAIIQBAKCEAQAghQEAoIUBACCGAQCghgEAoIYBACCHAQAghwEAoIcBAKCHAQAgiAEAIIgBAKCIAQCgiAEAIIkBACCJAQAuOU4ycIoBAAMHBQCQigEALjlOLnCKAQADBwUAkIoBAC45Ti5wigEAAwcFAJCKAQAuOVoycIoBAAMJBQCVigEALjlOMnCKAQADBwUAkIoBAC45SjdwigEABAcFAJqKAQAuOUo3cIoBAAQHBQCaigEALjlKN3CKAQAEBwUAmooBAC45TjJwigEAAwcFAJCKAQAuOU4ucIoBAAMHBQCQigEALjlOMnCKAQADBwUAkIoBACIpKSBwigEAAwcFAJqKAQAuOTcycIoBAAMHBQCaigEAo1MBABABAAAAVAEADAEAANJUAQARAQAAClUBACMAAAB/VQEAGwAAADRWAQAVAAAAxVYBAAABAAABVwEAAgEAAE1XAQADAQAAvVcBAAQBAAD7VwEABQEAAE5YAQATAAAAkVgBAB4AAADVWAEAFwAAAF9ZAQAaAAAAkVkBABkAAAD0WQEAGAAAADhaAQAdAAAAzloBABwAAAAPWwEAFgAAADdbAQAU"),U(w,129744,"Q1gBABABAACIWAEADAEAAPNYAQARAQAAM1kBACMAAACHWQEAGwAAAOBZAQAVAAAAQloBAAABAACcWgEAAgEAAABbAQADAQAAT1sBAAQBAACnWwEABQEAAEhcAQATAAAAc1wBAB4AAADEXAEAFwAAABVdAQAaAAAAXV0BABkAAACIXQEAGAAAANJdAQAdAAAABF4BABwAAAAvXgEAFgAAAF9eAQAU"),U(w,129920,"u08BAAEAAABcUAEAAAAAAM9QAQAAAAAAOFIBAAAAAABBUwEAAAAAAIFTAQAAAAAA+1MBAAAAAADnVAEAAAAAACVVAQAAAAAAiVUBAAAAAABUVgEAAAAAAPxWAQAAAAAADlcBAAAAAABIVwEAAAAAAKdXAQAAAAAA9lcBAAAAAAA3WAEAAAAAAKNYAQAAAAAA6FgBAAAAAAAuWQEAAAAAAH9ZAQAAAAAA61kBAAAAAAD/////g00BAIIAAAB5AAAAdg=="),U(w,130128,"4I8BAOCPAQBQkAEAwJABAMCQAQDAkAEAAQAAANQKAwCMCgMAROcC"),U(w,130176,"I0sBAAEAAAAAAAAA/////1dMAQABAAAA+0wBAAIAAADGTQEAAwAAAAAAAAD/////Vk4BAAAAAADSTgEAAQAAALJPAQACAAAAGFABABQAAAAAAAAA/////wAAAAAAAAAAt1ABABIAAABNUgEAFAAAAN5SAQAkAAAAhlMBAEAAAAARVAEAwQAAAAAAAAD/////q1QBAAEAAAAAAAAA/////1dMAQAAAAAAGVUBAAEAAACRVQEAAgAAAENWAQADAAAA31YBAAQAAAAgVwEABQAAAAAAAAD/////AAAAAAAAAABXTAEAAQAAAIlXAQACAAAAr1cBAAMAAADfVgEABAAAACBXAQAFAAAAAAAAAP////8AAAAAClgBADxYAQAYUAEAqFgB"),U(w,130480,"8l8BAAEAAAA5YAEAAgAAAFhgAQADAAAAgWABAAQAAACwYAEABQAAANNgAQAGAAAABWEBAAcAAAAqYQEACAAAAFFhAQAJAAAAdmEBAAoAAACQYQEACwAAAMNhAQAMAAAA+WEBAA0AAAAuYgEADgAAAE5iAQAPAAAAhmIBAA8AAADUYgEADwAAABljAQAPAAAAP2MBAA8AAACkYwEABwAAANpjAQAHAAAAO2QBAAcAAACEZAEABwAAAK9kAQAHAAAAw2QBAA4AAADnZAEADgAAAAplAQAQAAAA9GUBABAAAAArZgEAEAAAAN9WAQAQAAAAbmYBABAAAADBZgEAEA=="),U(w,130752,"f20BAD4AAACjbQEAPOAAAM1tAQAmAAAA1G0BACIAAAA6bgEAIAAAAHhuAQAnAAAAAAAAAP////8AAAAAAAAAAGNnAQBkAAAAxWcBAAAAAAAJaAEAHgAAAEJoAQBBAAAAQ1YBAGQAAACGaAEAlgAAAKVoAQDmAAAAAAAAAP////9jZwEAZAAAAL5oAQA8AAAA6WgBAFAAAABDVgEAZAAAABJpAQB9AAAAUmkBAKAAAAAAAAAA/////wAAAAAAAAAAY2cBAGQAAACUaQEARgAAAN5pAQBVAAAAQ1YBAGQAAAAoagEAbgAAAGdqAQB4AAAAAAAAAP////8AAAAAAAAAAGNnAQBkAAAAlGkBABQAAADeaQEAMgAAAENWAQBkAAAAKGoBAIwAAABnagEAtAAAAAAAAAD/////"),U(w,131076,"QP8BAAD/AQCA/wEAwP8B"),U(w,131104,"wmoBACDgAAALawEACeAAAEFrAQBf4AAAe2sBACI="),U(w,131152,"q2sBAAEAAAC8awEAAgAAAA1sAQAD"),U(w,131184,"+EwBAMJNAQBTTgEACU8BAOVPAQBkUAEA2lABAGdSAQDyUgEA1FMBAGFUAQ=="),U(w,131236,"iFIBADlTAQAAAAAAnlMBAGRUAQDwVAEAL1UBAJpVAQBQVgE="),U(w,131280,"Y1IBAIADAACAA/8DbGUAAAcAAAA0UwEAIAQAAAAELwUAAAAAAAAAAHNTAQAwBQAAMAWPBXloAAAEAAAAG1QBAJAFAACQBf8FAAAAAAAAAAC3VAEAAAYAAAAG/wYAAAAAAAAAACpVAQAABwAAAAdPBwAAAAAAAAAAllUBAAAJAAAACX8JaWgAAAQAAAA/VgEAgAkAAIAJ/wluYgAABAAAANZWAQAACgAAAAp/CmFwAAAEAAAAClcBAIAKAACACv8KdWcAAAQAAABfVwEAAAsAAAALfwsAAAAAAAAAAM5XAQCACwAAgAv/C2F0AAAEAAAAD1gBAAAMAAAADH8MZXQAAAAAAAAsWAEAgAwAAIAM/wxuawAABAAAAJ9YAQAADQAAAA1/DWxtAAAEAAAA5FgBAIANAACADf8NaXMAAAQAAAA8WQEAAA4AAAAOfw4AAAAAAAAAAJtZAQCADgAAgA7/DgAAAAAAAAAA8FkBAAAPAAAAD/8PAAAAAAAAAAA0WgEAABAAAAAQnxAAAAAAAAAAANlaAQCgEAAAoBD/EGFrAAAEAAAAGFsBAAARAAAAEf8Rb2sAAAQAAABKWwEAABIAAAASnxMAAAAAAAAAALlbAQAAKAAAACj/KAAAAAAQAAAAWlwBAEAwAABAMP8wAAAAAAgAAACDXAEAADEAAAAx/58AAAAACAAAABhbAQAApwAAAKf/129rAAAM"),U(w,131840,"WAIAAKoAAACwBAAAhwAAANAHAABuAAAAuAsAAG4AAAD/////"),U(w,131888,"qAsD"),U(w,131904,"mF4BAAEAAAA4XwEAAgAAAGFfAQADAAAAnV8BAAYAAADCXwEACQAAAPhfAQAKAAAAJ2ABAAQAAABNYAEABQAAAI1gAQAkAAAAq2ABAAsAAADVYAEADAAAAPZgAQANAAAAFmEBAA4AAABMYQEADwAAAGdhAQAQAAAAlmEBABEAAAC7YQEAEgAAAAJiAQAfAAAAG2IBACUAAABIYgEAIAAAAJJiAQAhAAAAzmIBACIAAADwYgEABwAAAC5jAQAI"),U(w,132112,"jmMBAAEAAAC8YwEAAgAAAAAAAAABAAAAFJwBACCcAQAsnAEAPAAAABo="),U(w,132163,"AgMFCAsOEhYbICUrMTc+RUxTWmJpcXmAiJCYn6autbzCyc/V2uDk6e3w9Pb5+/z9/f39/Pv59vTw7enk4NrVz8nCvLWupp+YkIiAeXFpYlpTTEU+NzErJSAbFhIOCwgFAwI="),U(w,132288,"QAAAAAABAAAAAAAA7AQCACcAAAAoAAAAKQAAACoAAAArAAAAQOkBAMO2AQBo6QEAsLYBAOQEAgAAAAAAJAUCACwAAAAtAAAALgAAAC8AAABA6QEAArcBAGjpAQDstgEAEAUCAGjpAQDStgEAGAUCAAU="),U(w,132412,"DQ=="),U(w,132436,"CwAAAAoAAADoeAM="),U(w,132460,"Ag=="),U(w,132476,"//////////8="),U(w,132544,"MAUCAAAAAAAF"),U(w,132564,"MA=="),U(w,132588,"CwAAADEAAAD4eAMAAAQ="),U(w,132612,"AQ=="),U(w,132628,"/////wo="),U(w,132696,"yAUCAAB/BA==");var Co,os=(Co=[null,function(t){var r,s=0;return s=e[(t|=0)>>2],e[t>>2]=s+1,s=255&(r=g[0|s]),(0|r)<0&&(s=B[(e[t+12>>2]+(s<<1)|0)-256>>1]),0|s},cA,function(t){var r,s;return r=e[(t|=0)>>2],s=e[r>>2],e[t>>2]=r+4,0|s},function(t){var r=0,s=0;return r=e[(t|=0)>>2],(0|(s=Ge(t)))==65533&&(e[t>>2]=r+1,e[t+8>>2]=1,s=255&(r=g[0|r]),(0|r)>=0||(s=B[(e[t+12>>2]+(s<<1)|0)-256>>1])),0|s},Ge,function(t){var r,s,a=0;return(a=e[4+(t|=0)>>2])>>>0<=(s=(r=e[t>>2])+1|0)>>>0?(e[t>>2]=a,65533):(e[t>>2]=s,a=u[0|r],e[t>>2]=r+2,a|u[r+1|0]<<8)},function(t,r){var s,a,i;return r|=0,t=e[(t|=0)>>2],s=e[t+4>>2],a=e[r>>2],(r=Ta(s+1|0,(i=e[a+4>>2])+1|0))||(r=g[0|s]-g[0|i]|0)||(r=Ta(e[t>>2],e[a>>2])),0|r},function(t,r){var s;return t|=0,r=e[(r|=0)>>2],s=e[t>>2],(t=e[r+16>>2]-e[s+16>>2]|0)||(t=Ta(e[s>>2],e[r>>2])),0|t},lA,function(t,r,s,a){var i;return r|=0,s|=0,a|=0,pe=i=pe-16|0,(t=0|Je(e[60+(t|=0)>>2],0|r,0|s,255&a,i+8|0))?(e[56798]=t,t=-1):t=0,pe=i+16|0,X=t?-1:e[i+12>>2],0|(t?-1:e[i+8>>2])},function(t,r,s){r|=0,s|=0;var a,i=0,o=0,d=0,f=0,m=0,M=0;pe=a=pe-32|0,i=e[28+(t|=0)>>2],e[a+16>>2]=i,d=e[t+20>>2],e[a+28>>2]=s,e[a+24>>2]=r,r=d-i|0,e[a+20>>2]=r,d=r+s|0,m=2;e:{t:{r=a+16|0,(i=0|et(e[t+60>>2],0|r,2,a+12|0))?(e[56798]=i,i=-1):i=0;s:{if(i)i=r;else for(;;){if((0|(o=e[a+12>>2]))==(0|d))break s;if((0|o)<0){i=r;break t}if(f=o-((M=(f=e[r+4>>2])>>>0<o>>>0)?f:0)|0,e[(i=(M<<3)+r|0)>>2]=f+e[i>>2],e[(r=(M?12:4)+r|0)>>2]=e[r>>2]-f,d=d-o|0,r=i,m=m-M|0,(o=0|et(e[t+60>>2],0|r,0|m,a+12|0))?(e[56798]=o,o=-1):o=0,o)break}if((0|d)!=-1)break t}r=e[t+44>>2],e[t+28>>2]=r,e[t+20>>2]=r,e[t+16>>2]=r+e[t+48>>2],t=s;break e}e[t+28>>2]=0,e[t+16>>2]=0,e[t+20>>2]=0,e[t>>2]=32|e[t>>2],t=0,(0|m)!=2&&(t=s-e[i+4>>2]|0)}return pe=a+32|0,0|t},function(t,r,s){t|=0,r|=0,s|=0;var a,i=0,o=0,d=0;pe=a=pe-32|0,e[a+16>>2]=r,i=e[t+48>>2],e[a+20>>2]=s-!!(0|i),o=e[t+44>>2],e[a+28>>2]=i,e[a+24>>2]=o;e:{t:{if((i=0|zt(e[t+60>>2],a+16|0,2,a+12|0))?(e[56798]=i,i=-1):i=0,i)r=32;else{if((0|(i=e[a+12>>2]))>0)break t;r=i?32:16}e[t>>2]=r|e[t>>2];break e}d=i,(o=e[a+20>>2])>>>0>=i>>>0||(i=e[t+44>>2],e[t+4>>2]=i,e[t+8>>2]=i+(d-o|0),e[t+48>>2]&&(e[t+4>>2]=i+1,g[(r+s|0)-1|0]=u[0|i]),d=s)}return pe=a+32|0,0|d},function(t){return 0|ht(e[60+(t|=0)>>2])},wi,function(t,r,s,a,i,o){t|=0,r=+r,s|=0,a|=0,i|=0,o|=0;var d,f=0,m=0,M=0,y=0,P=0,q=0,ae=0,de=0,ye=0,Be=0,qe=0,ot=0,pt=0,Mt=0,Ft=0,Lt=0,Xt=0,Ar=0;pe=d=pe-560|0,e[d+44>>2]=0,oe(+r),f=0|R(1),R(0),(0|f)<0?(ot=1,Xt=84997,oe(+(r=-r)),f=0|R(1),R(0)):2048&i?(ot=1,Xt=85e3):(Xt=(ot=1&i)?85003:84998,Ar=!ot);e:if(2146435072&~f){Mt=d+16|0;t:{s:{n:{if(r=Zo(r,d+44|0),(r+=r)!=0){if(f=e[d+44>>2],e[d+44>>2]=f-1,(0|(Ft=32|o))!=97)break n;break t}if((0|(Ft=32|o))==97)break t;P=e[d+44>>2],q=(0|a)<0?6:a;break s}P=f-29|0,e[d+44>>2]=P,r*=268435456,q=(0|a)<0?6:a}for(m=Be=(d+48|0)+((0|P)>=0?288:0)|0;a=r<4294967296&r>=0?~~r>>>0:0,e[m>>2]=a,m=m+4|0,(r=1e9*(r-+(a>>>0)))!=0;);if((0|P)<=0)a=P,f=m,M=Be;else for(M=Be,a=P;;){if(de=(0|a)>=29?29:a,!(M>>>0>(f=m-4|0)>>>0)){for(a=0;y=e[f>>2],Lt=a,a=31&de,(63&de)>>>0>=32?(ae=y<<a,a=0):(ae=(1<<a)-1&y>>>32-a,a=y<<a),y=ae+ye|0,a=bo(Lt=Lt+a|0,a>>>0>Lt>>>0?y+1|0:y,1e9),e[f>>2]=Lt-ps(a,X,1e9,0),M>>>0<=(f=f-4|0)>>>0;);a&&(e[(M=M-4|0)>>2]=a)}for(;M>>>0<(f=m)>>>0&&!e[(m=f-4|0)>>2];);if(a=e[d+44>>2]-de|0,e[d+44>>2]=a,m=f,!((0|a)>0))break}if((0|a)<0)for(pt=1+((q+25>>>0)/9|0)|0,ye=(0|Ft)==102;;){if(ae=(0|(a=0-a|0))>=9?9:a,f>>>0<=M>>>0)m=e[M>>2];else{for(de=1e9>>>ae|0,y=~(-1<<ae),a=0,m=M;Lt=a,a=e[m>>2],e[m>>2]=Lt+(a>>>ae|0),a=K(de,a&y),(m=m+4|0)>>>0<f>>>0;);m=e[M>>2],a&&(e[f>>2]=a,f=f+4|0)}if(a=ae+e[d+44>>2]|0,e[d+44>>2]=a,M=(!m<<2)+M|0,f=f-(m=ye?Be:M)>>2>(0|pt)?m+(pt<<2)|0:f,!((0|a)<0))break}if(a=0,!(f>>>0<=M>>>0||(a=K(Be-M>>2,9),m=10,(y=e[M>>2])>>>0<10)))for(;a=a+1|0,y>>>0>=(m=K(m,10))>>>0;);if((0|(m=(q-((0|Ft)!=102?a:0)|0)-((0|Ft)==103&!!(0|q))|0))<(K(f-Be>>2,9)-9|0)){if(P=((((0|P)<0?4:292)+d|0)+((y=(0|(de=m+9216|0))/9|0)<<2)|0)-4048|0,m=10,(0|(ae=de-K(y,9)|0))<=7)for(;m=K(m,10),(0|(ae=ae+1|0))!=8;);if(!(!(ye=(de=e[P>>2])-K(m,pt=(de>>>0)/(m>>>0)|0)|0)&(0|(y=P+4|0))==(0|f))&&(!(1&pt)&&(r=9007199254740992,!(1&g[P-4|0])|(0|m)!=1e9|M>>>0>=P>>>0)||(r=9007199254740994),qe=(0|f)==(0|y)?1:1.5,qe=(y=m>>>1|0)>>>0>ye>>>0?.5:(0|y)==(0|ye)?qe:1.5,u[0|Xt]!=45|Ar||(qe=-qe,r=-r),y=de-ye|0,e[P>>2]=y,r+qe!=r)){if(a=m+y|0,e[P>>2]=a,a>>>0>=1e9)for(;e[P>>2]=0,(P=P-4|0)>>>0<M>>>0&&(e[(M=M-4|0)>>2]=0),a=e[P>>2]+1|0,e[P>>2]=a,a>>>0>999999999;);if(a=K(Be-M>>2,9),m=10,!((y=e[M>>2])>>>0<10))for(;a=a+1|0,y>>>0>=(m=K(m,10))>>>0;);}f=f>>>0>(m=P+4|0)>>>0?m:f}for(;y=f,!(de=f>>>0<=M>>>0)&&!e[(f=y-4|0)>>2];);if((0|Ft)==103){if(q=((f=(0|(m=q||1))>(0|a)&(0|a)>-5)?~a:-1)+m|0,o=(f?-1:-2)+o|0,!(P=8&i)){if(f=-9,!de&&(P=e[y-4>>2])&&(ae=10,f=0,!((P>>>0)%10|0))){for(;m=f,f=f+1|0,!((P>>>0)%((ae=K(ae,10))>>>0)|0););f=~m}m=K(y-Be>>2,9),(-33&o)!=70?(P=0,q=(0|(f=(0|(f=((a+m|0)+f|0)-9|0))>0?f:0))>(0|q)?q:f):(P=0,q=(0|(f=(0|(f=(f+m|0)-9|0))>0?f:0))>(0|q)?q:f)}}else P=8&i;if(ae=-1,(0|((de=P|q)?2147483645:2147483646))<(0|q))break e;if(ye=1+(!!(0|de)+q|0)|0,(0|(m=-33&o))!=70){if((Mt-(f=Ti(((f=a>>31)^a)-f|0,0,Mt))|0)<=1)for(;g[0|(f=f-1|0)]=48,(Mt-f|0)<2;);if(g[0|(pt=f-2|0)]=o,g[f-1|0]=(0|a)<0?45:43,(0|(f=Mt-pt|0))>(2147483647^ye))break e}else{if((2147483647^ye)<(0|a))break e;f=(0|a)>0?a:0}if((0|(a=f+ye|0))>(2147483647^ot))break e;mn(t,32,s,ye=a+ot|0,i),rn(t,Xt,ot),mn(t,48,s,ye,65536^i);s:{n:{i:{if((0|m)==70){for(a=8|(o=d+16|0),P=9|o,M=m=M>>>0>Be>>>0?Be:M;;){f=Ti(e[M>>2],0,P);c:if((0|m)==(0|M))(0|f)==(0|P)&&(g[d+24|0]=48,f=a);else{if(d+16>>>0>=f>>>0)break c;for(;g[0|(f=f-1|0)]=48,d+16>>>0<f>>>0;);}if(rn(t,f,P-f|0),!(Be>>>0>=(M=M+4|0)>>>0))break}if(de&&rn(t,85998,1),(0|q)<=0|M>>>0>=y>>>0)break i;for(;;){if((f=Ti(e[M>>2],0,P))>>>0>d+16>>>0)for(;g[0|(f=f-1|0)]=48,d+16>>>0<f>>>0;);if(rn(t,f,(0|q)>=9?9:q),f=q-9|0,y>>>0<=(M=M+4|0)>>>0)break n;if(a=(0|q)>9,q=f,!a)break}break n}c:if(!((0|q)<0))for(Be=M>>>0<y>>>0?y:M+4|0,a=8|(o=d+16|0),y=9|o,m=M;;){(0|y)==(0|(f=Ti(e[m>>2],0,y)))&&(g[d+24|0]=48,f=a);A:if((0|m)==(0|M))rn(t,f,1),f=f+1|0,P|q&&rn(t,85998,1);else{if(d+16>>>0>=f>>>0)break A;for(;g[0|(f=f-1|0)]=48,d+16>>>0<f>>>0;);}if(rn(t,f,(0|(o=y-f|0))>(0|q)?q:o),q=q-o|0,Be>>>0<=(m=m+4|0)>>>0)break c;if(!((0|q)>=0))break}mn(t,48,q+18|0,18,0),rn(t,pt,Mt-pt|0);break s}f=q}mn(t,48,f+9|0,9,0)}mn(t,32,s,ye,8192^i),ae=(0|s)<(0|ye)?ye:s;break e}if(P=(o<<26>>31&9)+Xt|0,!(a>>>0>11)){for(f=12-a|0,qe=16;qe*=16,f=f-1|0;);r=u[0|P]!=45?r+qe-qe:-(qe+(-r-qe))}for((0|Mt)==(0|(f=Ti(((f=e[d+44>>2])^(m=f>>31))-m|0,0,Mt)))&&(g[d+15|0]=48,f=d+15|0),Be=2|ot,M=32&o,m=e[d+44>>2],g[0|(q=f-2|0)]=o+15,g[f-1|0]=(0|m)<0?45:43,f=8&i,m=d+16|0;o=m,y=ve(r)<2147483648?~~r:-2147483648,g[0|m]=M|u[y+124512|0],!((0|a)>0|f)&(r=16*(r-+(0|y)))==0|((m=o+1|0)-(d+16|0)|0)!=1||(g[o+1|0]=46,m=o+2|0),r!=0;);ae=-1,(2147483645-(o=(f=Mt-q|0)+Be|0)|0)<(0|a)||(mn(t,32,s,o=(a=!a||((M=m-(d+16|0)|0)-2|0)>=(0|a)?M=m-(d+16|0)|0:a+2|0)+o|0,i),rn(t,P,Be),mn(t,48,s,o,65536^i),rn(t,d+16|0,M),mn(t,48,a-M|0,0,0),rn(t,q,f),mn(t,32,s,o,8192^i),ae=(0|s)<(0|o)?o:s)}else mn(t,32,s,f=ot+3|0,-65537&i),rn(t,Xt,ot),a=32&o,rn(t,r!=r?a?85596:85774:a?85247:85460,3),mn(t,32,s,f,8192^i),ae=(0|s)<(0|f)?f:s;return pe=d+560|0,0|ae},function(t,r){var s;t|=0,s=r|=0,r=e[r>>2]+7&-8,e[s>>2]=r+16,G[t>>3]=Ai(e[r>>2],e[r+4>>2],e[r+8>>2],e[r+12>>2])},function(t,r,s){r|=0,s|=0;var a,i,o=0,d=0;return a=e[84+(t|=0)>>2],d=e[a+4>>2],i=e[t+28>>2],(o=(o=e[t+20>>2]-i|0)>>>0>d>>>0?d:o)&&(ds(e[a>>2],i,o),e[a>>2]=o+e[a>>2],d=e[a+4>>2]-o|0,e[a+4>>2]=d),o=e[a>>2],(d=s>>>0>d>>>0?d:s)&&(ds(o,r,d),o=d+e[a>>2]|0,e[a>>2]=o,e[a+4>>2]=e[a+4>>2]-d),g[0|o]=0,r=e[t+44>>2],e[t+28>>2]=r,e[t+20>>2]=r,0|s},function(t,r,s){s|=0;var a,i,o=0;return ds(r|=0,a=e[84+(t|=0)>>2],s=s>>>0>(o=(i=lo(a,0,o=s+256|0))?i-a|0:o)>>>0?o:s),r=a+o|0,e[t+84>>2]=r,e[t+8>>2]=r,e[t+4>>2]=s+a,0|s},function(t,r,s){r|=0,s|=0;var a,i=0,o=0,d=0;i=e[84+(t|=0)>>2],a=e[i>>2]?i:84412,i=0;e:if(e[t+48>>2])for(;;){if(!(o=e[(i<<2)+a>>2]))break e;if(g[e[t+44>>2]+i|0]=(0|o)>=128?64:o,!((i=i+1|0)>>>0<ue[t+48>>2]))break}return o=e[t+44>>2],e[t+4>>2]=o,e[t+84>>2]=(i<<2)+a,e[t+8>>2]=i+o,!s|!i||(e[t+4>>2]=o+1,g[0|r]=u[0|o],d=1),0|d},lA,to,fl,fl,function(t,r,s){s|=0;var a,i=0;return pe=a=pe+-64|0,i=1,ui(t|=0,r|=0,0)||(i=0,r&&(i=0,(r=xr(r,125132))&&(wr(4|(i=a+8|0),0,52),e[a+56>>2]=1,e[a+20>>2]=-1,e[a+16>>2]=t,e[a+8>>2]=r,os[e[e[r>>2]+28>>2]](r,i,e[s>>2],1),(0|(t=e[a+32>>2]))==1&&(e[s>>2]=e[a+24>>2]),i=(0|t)==1))),pe=a- -64|0,0|i},function(t,r,s,a,i,o){s|=0,a|=0,i|=0,o|=0,ui(t|=0,e[8+(r|=0)>>2],o)&&To(r,s,a,i)},function(t,r,s,a,i){if(s|=0,a|=0,i|=0,ui(t|=0,e[8+(r|=0)>>2],i))e[r+28>>2]==1|e[r+4>>2]!=(0|s)||(e[r+28>>2]=a);else e:if(ui(t,e[r>>2],i)){if(!(e[r+16>>2]!=(0|s)&e[r+20>>2]!=(0|s))){if((0|a)!=1)break e;return void(e[r+32>>2]=1)}e[r+20>>2]=s,e[r+32>>2]=a,e[r+40>>2]=e[r+40>>2]+1,e[r+36>>2]!=1|e[r+24>>2]!=2||(g[r+54|0]=1),e[r+44>>2]=4}},function(t,r,s,a){s|=0,a|=0,ui(t|=0,e[8+(r|=0)>>2],0)&&EA(r,s,a)},to,function(t,r,s,a,i,o){s|=0,a|=0,i|=0,o|=0,ui(t|=0,e[8+(r|=0)>>2],o)?To(r,s,a,i):(t=e[t+8>>2],os[e[e[t>>2]+20>>2]](t,r,s,a,i,o))},function(t,r,s,a,i){if(s|=0,a|=0,i|=0,ui(t|=0,e[8+(r|=0)>>2],i))e[r+28>>2]==1|e[r+4>>2]!=(0|s)||(e[r+28>>2]=a);else e:{if(ui(t,e[r>>2],i)){if(!(e[r+16>>2]!=(0|s)&e[r+20>>2]!=(0|s))){if((0|a)!=1)break e;return void(e[r+32>>2]=1)}e[r+32>>2]=a;t:if(e[r+44>>2]!=4){if(I[r+52>>1]=0,t=e[t+8>>2],os[e[e[t>>2]+20>>2]](t,r,s,s,1,i),u[r+53|0]){if(e[r+44>>2]=3,!u[r+52|0])break t;break e}e[r+44>>2]=4}if(e[r+20>>2]=s,e[r+40>>2]=e[r+40>>2]+1,e[r+36>>2]!=1|e[r+24>>2]!=2)break e;return void(g[r+54|0]=1)}t=e[t+8>>2],os[e[e[t>>2]+24>>2]](t,r,s,a,i)}},function(t,r,s,a){s|=0,a|=0,ui(t|=0,e[8+(r|=0)>>2],0)?EA(r,s,a):(t=e[t+8>>2],os[e[e[t>>2]+28>>2]](t,r,s,a))},to,function(t){return 84787},to,function(t){return 85058},to,function(t){return 84147},function(t){var r;return r=t|=0,t=e[t>>2],e[r>>2]=t+1,0|((0|(t=g[0|t]))<0?65533:255&t)},function(t,r,s,a,i,o){t|=0,r|=0,s|=0,a|=0,i|=0,o|=0;var d,f=0,m=0,M=0,y=0,P=0,q=0,ae=0,de=0;if(d=On(408),e[d+4>>2]=a,e[d>>2]=s,r?(ds(d+16|0,r,376),G[d+392>>3]=(G[r+368>>3]-G[r>>3])/+(s>>>0),r=0):r=1,e[d+400>>2]=i,g[d+8|0]=r,o){if(s=e[t+24>>2])for(r=e[t+20>>2],a=e[t+8>>2];(i=e[e[(r>>>8&16777212)+a>>2]+((1023&r)<<2)>>2])&&(tr(i),s=e[t+24>>2],a=e[t+8>>2],r=e[t+20>>2]),r=r+1|0,e[t+20>>2]=r,s=s-1|0,e[t+24>>2]=s,r>>>0>=2048&&(tr(e[a>>2]),a=e[t+8>>2]+4|0,e[t+8>>2]=a,r=e[t+20>>2]-1024|0,e[t+20>>2]=r,s=e[t+24>>2]),s;);r=e[t+28>>2],e[t+420>>2]=e[r>>2],(s=e[t+32>>2])&&(g[r+8|0]=u[s+8|0],ds(r+16|0,t+40|0,376),(r=e[t+32>>2])&&tr(r),e[t+32>>2]=0)}if(s=(a=e[t+24>>2])+e[t+20>>2]|0,i=e[t+12>>2],(0|s)==(0|((0|(r=e[t+8>>2]))!=(0|i)?(i-r<<8)-1:0))){pe=f=pe-32|0;e:{t:{s:{n:{if((r=e[16+(o=t+4|0)>>2])>>>0>=1024){if(e[o+16>>2]=r-1024,r=e[o+4>>2],q=e[r>>2],i=r+4|0,e[o+4>>2]=i,(0|(r=e[o+8>>2]))==e[o+12>>2])if((m=e[o>>2])>>>0<i>>>0)s=ir((a=(1+(i-m>>2)|0)/-2<<2)+i|0,i,r=r-i|0)+r|0,e[o+8>>2]=s,e[o+4>>2]=a+e[o+4>>2];else{if((s=(0|r)==(0|m)?1:r-m>>1)>>>0>=1073741824)break n;if(ae=(a=s<<2)+(M=On(a))|0,s=a=M+(-4&s)|0,(0|r)!=(0|i)){if(de=-4&(r=r-i|0),P=1+((y=r-4|0)>>>2|0)&7)for(s=0,r=a;e[r>>2]=e[i>>2],i=i+4|0,r=r+4|0,(0|P)!=(0|(s=s+1|0)););else r=a;if(s=a+de|0,!(y>>>0<28))for(;e[r>>2]=e[i>>2],e[r+4>>2]=e[i+4>>2],e[r+8>>2]=e[i+8>>2],e[r+12>>2]=e[i+12>>2],e[r+16>>2]=e[i+16>>2],e[r+20>>2]=e[i+20>>2],e[r+24>>2]=e[i+24>>2],e[r+28>>2]=e[i+28>>2],i=i+32|0,(0|s)!=(0|(r=r+32|0)););}e[o+12>>2]=ae,e[o+8>>2]=s,e[o+4>>2]=a,e[o>>2]=M,m&&(tr(m),s=e[o+8>>2])}else s=r;e[s>>2]=q,e[o+8>>2]=e[o+8>>2]+4;break e}if((m=(i=e[o+8>>2])-e[o+4>>2]>>2)>>>0<(a=(r=e[o+12>>2])-(s=e[o>>2])|0)>>2>>>0){if((0|r)!=(0|i)){e[f+8>>2]=On(4096),tt(o,f+8|0);break e}if(e[f+8>>2]=On(4096),ut(o,f+8|0),r=e[o+4>>2],q=e[r>>2],i=r+4|0,e[o+4>>2]=i,(0|(r=e[o+8>>2]))==e[o+12>>2])if((m=e[o>>2])>>>0<i>>>0)s=ir((a=(1+(i-m>>2)|0)/-2<<2)+i|0,i,r=r-i|0)+r|0,e[o+8>>2]=s,e[o+4>>2]=a+e[o+4>>2];else{if((s=(0|r)==(0|m)?1:r-m>>1)>>>0>=1073741824)break n;if(ae=(a=s<<2)+(M=On(a))|0,s=a=M+(-4&s)|0,(0|r)!=(0|i)){if(de=-4&(r=r-i|0),P=1+((y=r-4|0)>>>2|0)&7)for(s=0,r=a;e[r>>2]=e[i>>2],i=i+4|0,r=r+4|0,(0|P)!=(0|(s=s+1|0)););else r=a;if(s=a+de|0,!(y>>>0<28))for(;e[r>>2]=e[i>>2],e[r+4>>2]=e[i+4>>2],e[r+8>>2]=e[i+8>>2],e[r+12>>2]=e[i+12>>2],e[r+16>>2]=e[i+16>>2],e[r+20>>2]=e[i+20>>2],e[r+24>>2]=e[i+24>>2],e[r+28>>2]=e[i+28>>2],i=i+32|0,(0|s)!=(0|(r=r+32|0)););}e[o+12>>2]=ae,e[o+8>>2]=s,e[o+4>>2]=a,e[o>>2]=M,m&&(tr(m),s=e[o+8>>2])}else s=r;e[s>>2]=q,e[o+8>>2]=e[o+8>>2]+4;break e}if(e[f+24>>2]=o+12,!((r=(0|r)==(0|s)?1:a>>1)>>>0>=1073741824)){if(r=On(s=r<<2),e[f+8>>2]=r,a=r+(m<<2)|0,e[f+16>>2]=a,e[f+20>>2]=r+s,e[f+12>>2]=a,e[f+4>>2]=On(4096),tt(f+8|0,f+4|0),(0|(i=e[o+8>>2]))==e[o+4>>2]){r=i;break t}for(;ut(f+8|0,i=i-4|0),e[o+4>>2]!=(0|i););break s}}Oo(),be()}r=e[o+8>>2]}s=e[o>>2],e[o>>2]=e[f+8>>2],e[f+8>>2]=s,e[o+4>>2]=e[f+12>>2],e[f+12>>2]=i,e[o+8>>2]=e[f+16>>2],e[f+16>>2]=r,a=e[o+12>>2],e[o+12>>2]=e[f+20>>2],e[f+20>>2]=a,(0|r)!=(0|i)&&(e[f+16>>2]=r+(3+(i-r|0)&-4)),s&&tr(s)}pe=f+32|0,s=(a=e[t+24>>2])+e[t+20>>2]|0,r=e[t+8>>2]}e[e[r+(s>>>8&16777212)>>2]+((1023&s)<<2)>>2]=d,e[t+24>>2]=a+1},function(t){var r=0,s=0,a=0,i=0,o=0,d=0,f=0,m=0,M=0;s=e[420+(t|=0)>>2]+1|0,e[t+420>>2]=s;e:{if(r=e[t+32>>2]){if(s>>>0>(f=e[r+4>>2])>>>0){(s=e[t+28>>2])&&(tr(s),r=e[t+32>>2]),e[t+32>>2]=0,e[t+28>>2]=r;break e}for(o=t+40|0,d=r+16|0,m=e[t+28>>2]+16|0,M=+(s>>>0)/+(f>>>0),r=0;;){if(a=G[(s=r<<3)+d>>3],i=G[s+m>>3],G[s+o>>3]=a==a?(a-i)*M+i:i,(0|(s=1|r))==47)break e;a=G[(s<<=3)+d>>3],i=G[s+m>>3],G[s+o>>3]=a==a?(a-i)*M+i:i,r=r+2|0}}if(r=e[t+28>>2],s>>>0>ue[r>>2]){if(o=e[t+24>>2]){if(g[t+416|0]=0,d=e[t+8>>2],s=e[t+20>>2],r=e[e[d+(s>>>8&16777212)>>2]+((1023&s)<<2)>>2],e[t+32>>2]=r,e[t+24>>2]=o-1,s=s+1|0,e[t+20>>2]=s,s>>>0>=2048&&(tr(e[d>>2]),e[t+8>>2]=e[t+8>>2]+4,e[t+20>>2]=e[t+20>>2]-1024,r=e[t+32>>2]),u[r+8|0])ds(r+16|0,e[t+28>>2]+16|0,376),r=e[t+32>>2],e[r+368>>2]=0,e[r+372>>2]=0,a=G[t+40>>3],e[r+392>>2]=0,e[r+396>>2]=0,G[r+16>>3]=a;else if(s=e[t+28>>2],u[s+8|0]&&(ds(s+16|0,r+16|0,376),r=e[t+28>>2],e[r+368>>2]=0,e[r+372>>2]=0,!(r=e[t+32>>2])))break e;(0|(s=e[r+400>>2]))!=-1&&(e[t+424>>2]=s),e[t+420>>2]=0,G[r+16>>3]=G[r+392>>3]*+ue[r+4>>2]+G[r+16>>3];break e}g[t+416|0]=1}else a=G[r+392>>3]+G[t+40>>3],G[t+40>>3]=a,G[r+16>>3]=a}return 0|(u[t+416|0]?0:t+40)},function(t){return e[424+(t|=0)>>2]},function(t){var r=0;return e[(t|=0)>>2]=132304,(r=e[t+28>>2])&&tr(r),(r=e[t+32>>2])&&tr(r),XA(t+4|0),0|t},function(t){var r=0;e[(t|=0)>>2]=132304,(r=e[t+28>>2])&&tr(r),(r=e[t+32>>2])&&tr(r),XA(t+4|0),tr(t)},function(t,r,s){r|=0,s|=0;var a=0,i=0,o=0,d=0,f=0,m=0,M=0,y=0,P=0,q=0,ae=0,de=0,ye=0,Be=0,qe=0,ot=0,pt=0,Mt=0,Ft=0;if(!e[1088+(t|=0)>>2])return 0;e:if(r){for(M=t+648|0,m=t- -64|0;;){if(a=e[t+1088>>2],!(a=0|os[e[e[a>>2]+4>>2]](a)))break e;if(i=hi(G[t+32>>3]+G[a+16>>3]/+e[t+24>>2]),G[t+32>>3]=i,i=Uo(6.283185307179586*i),i=hi(G[t+16>>3]+G[a>>3]*(.06*i*G[a+8>>3]+1)/+e[t+8>>2]),G[t+16>>3]=i,f=ps(e[56848],e[56849],1284865837,1481765933),o=X,o=(f=f+1|0)?o:o+1|0,e[56848]=f,e[56849]=o,d=.75*G[t+40>>3]+ +(o>>>1|0)/2147483647,G[t+40>>3]=d,y=G[a+24>>3],o=i>=G[a+32>>3],g[t+48|0]=o,d=(q=y)*(y=.2*d),d=_s(m+512|0,_s(m+440|0,i=G[a+352>>3]*(y*G[a+48>>3]+G[a+40>>3]*(i+i+-1+(o?d:.01*d)))*.5,G[a+104>>3],G[a+168>>3]),G[a+112>>3],G[a+176>>3]),d=_s(m+8|0,_s(m+80|0,_s(m+152|0,_s(m+224|0,_s(m+296|0,_s(m+368|0,d==d?(d-i)*G[a+184>>3]+i:i,G[a+96>>3],G[a+160>>3]),G[a+88>>3],G[a+152>>3]),G[a+80>>3],G[a+144>>3]),G[a+72>>3],G[a+136>>3]),G[a+64>>3],G[a+128>>3]),G[a+56>>3],G[a+120>>3]),f=ps(e[56848],e[56849],1284865837,1481765933),o=X,o=(f=f+1|0)?o:o+1|0,e[56848]=f,e[56849]=o,i=.75*G[t+56>>3]+ +(o>>>1|0)/2147483647,G[t+56>>3]=i,o=(P<<1)+s|0,y=_s(M+8|0,i=G[a+352>>3]*(G[a+192>>3]*(.3*i))*.5,G[a+200>>3],G[a+248>>3]),ae=G[a+296>>3],de=_s(M+80|0,i,G[a+208>>3],G[a+256>>3]),ye=G[a+304>>3],Be=_s(M+152|0,i,G[a+216>>3],G[a+264>>3]),qe=G[a+312>>3],ot=_s(M+224|0,i,G[a+224>>3],G[a+272>>3]),pt=G[a+320>>3],Mt=_s(M+296|0,i,G[a+232>>3],G[a+280>>3]),Ft=G[a+328>>3],q=d,d=(_s(M+368|0,i,G[a+240>>3],G[a+288>>3])-i)*G[a+336>>3]+(Ft*(Mt-i)+(pt*(ot-i)+(qe*(Be-i)+(ye*(de-i)+(ae*(y-i)+0))))),i=(q+(i==i?(i-d)*G[a+344>>3]+d:d))*G[a+360>>3]*4e3,a=(0|(a=ve(i)<2147483648?~~i:-2147483648))>=32e3?32e3:a,I[o>>1]=(0|a)<=-32e3?-32e3:a,(0|(P=P+1|0))==(0|r))break}P=r}return 0|(r>>>0>P>>>0?P:r)},function(t,r){r|=0,e[1088+(t|=0)>>2]=r},lA,to,cA,function(t,r,s,a){return X=0,0}],Co.grow=function(t){var r=this.length;return this.length=this.length+t,r},Co.set=function(t,r){this[t]=r},Co.get=function(t){return this[t]},Co);return{v:function(){var t,r=0;pe=t=pe-16|0,0|Tt(t+12|0,t+8|0)||(r=Fr(4+(e[t+12>>2]<<2)|0),e[56800]=r,r&&(!(r=Fr(e[t+8>>2]))||(e[e[56800]+(e[t+12>>2]<<2)>>2]=0,0|It(e[56800],0|r)))&&(e[56800]=0)),pe=t+16|0,e[56841]=227236,e[56823]=42},w:Lo,x:gl,y:function(t,r){r|=0,e[(t|=0)>>2]=r},z:function(t,r){return r|=0,g[e[4+(t|=0)>>2]+r|0]},A:bn,B:dl,C:function(t){return u[12+(t|=0)|0]},D:function(t,r){r|=0,g[12+(t|=0)|0]=r},E:function(t){return u[13+(t|=0)|0]},F:function(t,r){r|=0,g[13+(t|=0)|0]=r},G:function(t){return u[14+(t|=0)|0]},H:function(t,r){r|=0,g[14+(t|=0)|0]=r},I:function(t){return u[15+(t|=0)|0]},J:function(t,r){r|=0,g[15+(t|=0)|0]=r},K:Hi,L:function(t,r){r|=0,e[16+(t|=0)>>2]=r},M:QA,N:function(t,r){r|=0,e[20+(t|=0)>>2]=r},O:Lo,P:gl,Q:NA,R:bn,S:Ui,T:Hi,U:QA,V:function(t){return e[24+(t|=0)>>2]},W:Lo,X:function(){var t,r=0,s=0,a=0,i=0,o=0,d=0,f=0,m=0,M=0,y=0,P=0,q=0,ae=0,de=0,ye=0,Be=0,qe=0,ot=0,pt=0,Mt=0,Ft=0,Lt=0,Xt=0;if(t=On(20),e[t+16>>2]=0,e[t+8>>2]=175,e[t+12>>2]=50,!(r=e[33208])){pe=r=(pe=pt=pe-16|0)-80|0;e:{if((s=Vi(84292))&&(e[r+32>>2]=s,mi(137584,160,85959,r+32|0),(0|ci(137584))==-31||(e[r+16>>2]=s,mi(137584,160,86031,r+16|0),(0|ci(137584))==-31)))break e;(s=Vi(84619))&&(e[r>>2]=s,mi(137584,160,85959,r),(0|ci(137584))==-31)||(s=u[84826]|u[84827]<<8|u[84828]<<16|u[84829]<<24,e[34396]=u[84822]|u[84823]<<8|u[84824]<<16|u[84825]<<24,e[34397]=s,I[68804]=u[84846]|u[84847]<<8,s=u[84842]|u[84843]<<8|u[84844]<<16|u[84845]<<24,e[34400]=u[84838]|u[84839]<<8|u[84840]<<16|u[84841]<<24,e[34401]=s,s=u[84834]|u[84835]<<8|u[84836]<<16|u[84837]<<24,e[34398]=u[84830]|u[84831]<<8|u[84832]<<16|u[84833]<<24,e[34399]=s)}if(pe=r+80|0,e[pt+12>>2]=0,i=pt+12|0,pe=f=pe-16|0,e[f+12>>2]=22050,vt(85144)||vt(85315)||vt(85473)||vt(85698),P=f+12|0,pe=o=pe-16|0,e[o+12>>2]=0,!((r=Ua(137832,84262,0,i))||(r=Ua(137836,84420,0,i))||(r=Ua(137840,84813,0,i))||(r=Ua(137820,85016,o+12|0,i))))if(e[34454]=ue[o+12>>2]/68,s=e[34460],e[34456]=s,s&&(0|(M=u[0|s]|u[s+1|0]<<8|u[s+2|0]<<16|u[s+3|0]<<24))==83969){if(q=u[s+4|0]|u[s+5|0]<<8|u[s+6|0]<<16|u[s+7|0]<<24,s=e[34458],de=u[0|s],e[34461]=de,de)for(r=s+4|0,M=0;a=K(M,44)+137856|0,i=u[0|r],e[a+36>>2]=i,e[a+40>>2]=u[r+1|0],d=u[r+8|0]|u[r+9|0]<<8|u[r+10|0]<<16|u[r+11|0]<<24,s=u[r+4|0]|u[r+5|0]<<8|u[r+6|0]<<16|u[r+7|0]<<24,g[0|a]=s,g[a+1|0]=s>>>8,g[a+2|0]=s>>>16,g[a+3|0]=s>>>24,g[a+4|0]=d,g[a+5|0]=d>>>8,g[a+6|0]=d>>>16,g[a+7|0]=d>>>24,d=u[r+16|0]|u[r+17|0]<<8|u[r+18|0]<<16|u[r+19|0]<<24,s=u[r+12|0]|u[r+13|0]<<8|u[r+14|0]<<16|u[r+15|0]<<24,g[a+8|0]=s,g[a+9|0]=s>>>8,g[a+10|0]=s>>>16,g[a+11|0]=s>>>24,g[a+12|0]=d,g[a+13|0]=d>>>8,g[a+14|0]=d>>>16,g[a+15|0]=d>>>24,d=u[r+24|0]|u[r+25|0]<<8|u[r+26|0]<<16|u[r+27|0]<<24,s=u[r+20|0]|u[r+21|0]<<8|u[r+22|0]<<16|u[r+23|0]<<24,g[a+16|0]=s,g[a+17|0]=s>>>8,g[a+18|0]=s>>>16,g[a+19|0]=s>>>24,g[a+20|0]=d,g[a+21|0]=d>>>8,g[a+22|0]=d>>>16,g[a+23|0]=d>>>24,d=u[r+32|0]|u[r+33|0]<<8|u[r+34|0]<<16|u[r+35|0]<<24,s=u[r+28|0]|u[r+29|0]<<8|u[r+30|0]<<16|u[r+31|0]<<24,g[a+24|0]=s,g[a+25|0]=s>>>8,g[a+26|0]=s>>>16,g[a+27|0]=s>>>24,g[a+28|0]=d,g[a+29|0]=d>>>8,g[a+30|0]=d>>>16,g[a+31|0]=d>>>24,s=r+36|0,e[a+32>>2]=s,r=s+(i<<4)|0,(0|de)!=(0|(M=M+1|0)););(0|de)<=e[34457]&&(e[34457]=0),r=0,P&&(e[P>>2]=q)}else e:{t:{if(i){if(s=e[i>>2]){tr(e[s+4>>2]),r=e[i>>2];break t}if(r=Fr(16),e[i>>2]=r,r)break t;r=48}else r=268436223;break e}e[r>>2]=1,e[r+4>>2]=iA(137584),s=e[i>>2],e[s+12>>2]=83969,e[s+8>>2]=M,r=268436223}if(pe=o+16|0,s=r,!r){if(P=e[f+12>>2],e[50754]=P,e[50759]=0,e[50760]=134217728/(0|P),e[50762]=0,e[50763]=0,e[50765]=2147483647,e[50781]=100,e[50779]=32,e[50761]=(P<<6)/(0|P),r=e[26385],e[50784]=e[26384],e[50785]=r,r=e[26387],e[50786]=e[26386],e[50787]=r,r=e[26389],e[50788]=e[26388],e[50789]=r,r=e[26391],e[50790]=e[26390],e[50791]=r,r=e[26393],e[50792]=e[26392],e[50793]=r,r=e[26395],e[50794]=e[26394],e[50795]=r,r=e[26397],e[50796]=e[26396],e[50797]=r,e[50798]=e[26398],q=(0|(r=(0|(i=K(P,60)))/12800|0))>=128?128:r,e[50799]=q,e[50800]=(0|q)/2,!((0|P)==22050|(0|i)<12800)){if(P=1&(r=(0|q)<=1?1:q),qe=+(0|q),M=0,(0|q)>=2)for(q=2147483646&r,r=0;ye=M+132160|0,m=127*(1-yn(6.283185307179586*+(0|M)/qe)),ae=ve(m)<2147483648?~~m:-2147483648,g[0|ye]=ae,ye=132160+(i=1|M)|0,m=127*(1-yn(6.283185307179586*+(0|i)/qe)),ae=ve(m)<2147483648?~~m:-2147483648,g[0|ye]=ae,M=M+2|0,(0|q)!=(0|(r=r+2|0)););P&&(r=M+132160|0,m=127*(1-yn(6.283185307179586*+(0|M)/qe)),ye=ve(m)<2147483648?~~m:-2147483648,g[0|r]=ye)}if(e[50801]=105792,e[56797]=Jn(),e[55964]=38,e[55921]=1,e[55918]=22050,e[56606]=0,e[55960]=110928,e[55958]=0,e[55959]=1074266112,e[55956]=100,e[55922]=20,e[55923]=220,e[55916]=1,e[55917]=0,Fo(),e[56244]=0,e[56245]=0,e[55928]=0,e[55926]=0,e[55927]=0,e[55924]=0,e[56246]=0,e[56247]=0,e[56260]=0,e[56261]=0,e[56262]=0,e[56263]=0,e[56276]=0,e[56277]=0,e[56278]=0,e[56279]=0,e[55974]=0,e[55975]=0,e[55972]=0,e[55973]=0,qe=-3.141592653589793/+(0|(r=e[55918])),G[27967]=qe,i=(0|K(r,630))/1e4|0,e[55920]=i,r=(0|K(r,950))/1e4|0,e[55919]=r,m=-2*qe,G[27968]=m,qe=(Lt=ys(qe*+(0|i)))*-Lt,G[28129]=qe,m=Lt*yn(m*+(0|r)),m+=m,G[28128]=m,G[28127]=1-m-qe,e[55990]=0,e[55991]=0,e[55988]=0,e[55989]=0,e[56006]=0,e[56007]=0,e[56004]=0,e[56005]=0,e[56022]=0,e[56023]=0,e[56020]=0,e[56021]=0,e[56038]=0,e[56039]=0,e[56036]=0,e[56037]=0,e[56054]=0,e[56055]=0,e[56052]=0,e[56053]=0,e[56070]=0,e[56071]=0,e[56068]=0,e[56069]=0,e[56086]=0,e[56087]=0,e[56084]=0,e[56085]=0,e[56102]=0,e[56103]=0,e[56100]=0,e[56101]=0,e[56118]=0,e[56119]=0,e[56116]=0,e[56117]=0,e[56134]=0,e[56135]=0,e[56132]=0,e[56133]=0,e[56150]=0,e[56151]=0,e[56148]=0,e[56149]=0,e[56166]=0,e[56167]=0,e[56164]=0,e[56165]=0,e[56182]=0,e[56183]=0,e[56180]=0,e[56181]=0,e[56198]=0,e[56199]=0,e[56196]=0,e[56197]=0,e[56214]=0,e[56215]=0,e[56212]=0,e[56213]=0,e[56230]=0,e[56231]=0,e[56228]=0,e[56229]=0,e[56639]=59,e[56640]=59,e[56629]=0,e[56630]=59,e[56619]=89,e[56620]=160,e[56609]=280,e[56610]=688,e[56611]=1064,e[56621]=70,e[56631]=59,e[56612]=2806,e[56613]=3260,e[56622]=160,e[56623]=200,e[56632]=59,e[56633]=59,e[56641]=89,e[56642]=149,e[56643]=200,e[56644]=200,e[56634]=59,e[56635]=59,e[56624]=200,e[56625]=500,e[56614]=3700,e[56615]=6500,e[56645]=500,e[56646]=0,e[56616]=7e3,e[56626]=500,e[56636]=0,e[56647]=0,e[56637]=0,e[56627]=500,e[56617]=8e3,e[56669]=89,e[56648]=0,e[56638]=0,e[56628]=89,e[56618]=280,e[56657]=62,e[56655]=0,e[56656]=0,e[56653]=50,e[56654]=0,e[56651]=0,e[56652]=0,e[56649]=0,e[56650]=40,e[56607]=1e3,e[56608]=59,pe=o=pe-416|0,e[o+16>>2]=137584,e[o+20>>2]=47,e[o+24>>2]=85952,Br(r=o+240|0,85699,o+16|0),d=qr(r,86034)){if(gs(o+240|0,170,d))for(P=5|(r=o+240|0),q=10|r;u[o+240|0]!=47&&(e[o+240>>2]!=1701736308?En(o+240|0,86614,9)||(e[o+4>>2]=o+32,e[o>>2]=o+239,(0|lr(q,86829,o))==2&&(i=e[34064],e[(de=136272+(i<<4)|0)>>2]=g[o+239|0],r=iA(o+32|0),e[34064]=i+1,e[de+12>>2]=r,e[de+4>>2]=0)):(pe=r=pe-48|0,e[32960]=-1,e[32961]=-1,e[32970]=-1,e[32971]=-1,e[32968]=-1,e[32969]=-1,e[32966]=-1,e[32967]=-1,e[32964]=-1,e[32965]=-1,e[32962]=-1,e[32963]=-1,e[r+36>>2]=131876,e[r+32>>2]=131872,e[r+28>>2]=131868,e[r+24>>2]=131864,e[r+20>>2]=131860,e[r+16>>2]=131856,e[r+12>>2]=131852,e[r+8>>2]=131848,e[r+4>>2]=131844,e[r>>2]=131840,lr(P,84222,r),pe=r+48|0)),gs(o+240|0,170,d););Za(d)}pe=o+416|0,e[50297]=0,e[50298]=0,e[50301]=0,e[50302]=0,e[50299]=0,e[50300]=0,Bo(0,85698),e[36425]=0,e[36424]=0,e[36426]=0,e[36427]=-1,Yn(),Ss(0),a=e[25690],e[34062]=a,y=e[25689],o=e[25688],e[34060]=o,e[34061]=y,Be=e[25687],d=e[25686],e[34058]=d,e[34059]=Be,ot=e[25685],de=e[25684],e[34056]=de,e[34057]=ot,Mt=e[25683],P=e[25682],e[34054]=P,e[34055]=Mt,Ft=e[25681],q=e[25680],e[34052]=q,e[34053]=Ft,ae=e[25679],i=e[25678],e[34050]=i,e[34051]=ae,ye=e[25677],r=e[25676],e[34048]=r,e[34049]=ye,e[33729]=r,e[33730]=ye,e[33731]=i,e[33732]=ae,e[33733]=q,e[33734]=Ft,e[33735]=P,e[33736]=Mt,e[33737]=de,e[33738]=ot,e[33739]=d,e[33740]=Be,e[33741]=o,e[33742]=y,e[33743]=a,qs(1,175),qs(2,100),qs(6,e[47200]),qs(5,e[47201]),qs(7,0),e[47198]=0,e[47197]=0,m=+xe()/1e3,i=ps(r=ve(m)<9223372036854776e3?~~m>>>0:0,0,1103515245,0),r=X,r=(i=i+12345|0)>>>0<12345?r+1|0:r,e[33209]=AA(i,r)}if(pe=f+16|0,s){ye=e[30450],Mt=e[pt+12>>2],f=48+(y=pe-560|0)|0,pe=a=(pe=y)-16|0;e:{switch(0|dn(s-268435967|0,24)){case 0:na(f,84133,512);break e;case 1:na(f,84580,512);break e;case 2:na(f,84747,512);break e;case 3:na(f,85084,512);break e;case 4:na(f,85251,512);break e;case 5:na(f,85380,512);break e;case 6:na(f,85607,512);break e;case 7:na(f,85722,512);break e;case 8:na(f,85913,512);break e;case 9:na(f,86046,512);break e;case 10:na(f,86153,512);break e;case 11:na(f,86678,512);break e;case 12:na(f,86773,512);break e;case 14:na(f,86958,512);break e;case 15:na(f,87071,512);break e}if(1879048192&s)e[a>>2]=s,mi(f,512,87182,a);else{if(M=0,o=B[123728+((s>>>0<=153?s:0)<<1)>>1]+121804|0,s=e[e[56841]+20>>2]){Ft=e[s+4>>2],Be=e[s>>2],ot=e[Be>>2]+1794895138|0,ae=Gi(e[Be+8>>2],ot),i=Gi(e[Be+12>>2],ot),r=Gi(e[Be+16>>2],ot);t:if(!(Ft>>>2>>>0<=ae>>>0||3&(r|i)|(s=Ft-(ae<<2)|0)>>>0<=i>>>0|r>>>0>=s>>>0))for(P=r>>>2|0,q=i>>>2|0;;){if(de=Gi(e[(s=((r=(i=(d=ae>>>1|0)+Xt|0)<<1)+q<<2)+Be|0)>>2],ot),(s=Gi(e[s+4>>2],ot))>>>0>=Ft>>>0|de>>>0>=Ft-s>>>0|u[(s+de|0)+Be|0])break t;if(!(s=Ta(o,s+Be|0))){if(r=Gi(e[(s=(r+P<<2)+Be|0)>>2],ot),(s=Gi(e[s+4>>2],ot))>>>0>=Ft>>>0|r>>>0>=Ft-s>>>0)break t;M=u[(r+s|0)+Be|0]?0:s+Be|0;break t}if((0|ae)==1)break t;ae=(s=(0|s)<0)?d:ae-d|0,Xt=s?Xt:i}}if((s=zr(r=M||o))>>>0>=512){ds(f,r,511),g[f+511|0]=0;break e}ds(f,r,s+1|0)}}pe=a+16|0;e:if(Mt){t:switch(e[Mt>>2]){case 0:e[y+16>>2]=e[Mt+4>>2],e[y+20>>2]=y+48,ba(ye,87384,y+16|0);break e;case 1:break t;default:break e}r=e[Mt+12>>2],s=e[Mt+8>>2],e[y+36>>2]=e[Mt+4>>2],X=s,e[y+40>>2]=r,e[y+44>>2]=X,e[y+32>>2]=y+48,ba(ye,87521,y+32|0)}else e[y>>2]=y+48,ba(ye,87700,y);pe=y+560|0,(0|pt)!=-12&&(s=e[pt+12>>2])&&(tr(e[s+4>>2]),tr(e[pt+12>>2]),e[pt+12>>2]=0)}s=e[24806],e[34389]=0,e[32538]=s,s=(1e3+((s=K(e[50754],100))-((0|s)%1e3|0)|0)|0)/500|0,e[34390]=s,s=Ma(e[34391],s),e[34392]=s,s&&(e[34391]=s,e[34393]=40,(s=Ma(e[34388],1440))&&(e[34388]=s)),e[47198]=0,pe=pt+16|0,r=e[50754],e[33208]=r}return e[t+4>>2]=r,e[t>>2]=_r(),0|t},Y:function(t,r,s){t|=0,r|=0,s|=0,e[34440]=s,TA(3,e[t+12>>2]),TA(1,e[t+8>>2]),(t=e[t+16>>2])?Mn(t):$i(1024),ct(r),e[34440]=0},Z:function(t,r,s){return t|=0,r|=0,s|=0,e[34440]=0,(t=qr(s,1032))?(e[47195]=t,e[47197]=130,t||(e[47195]=e[30450]),ct(r),e[47195]=0,e[47197]=0,e[47195]=e[30450],Za(t),0):-1},_:function(t){return 36},$:function(t,r,s){var a;return t|=0,r|=0,pe=a=pe-32|0,(s|=0)?(e[a+24>>2]=0,e[a+28>>2]=0,e[a+16>>2]=0,e[a+20>>2]=0,e[a+12>>2]=s,e[a+8>>2]=r,g[a+21|0]=0,r=Mn(a+8|0)):r=$i(r),e[t+16>>2]=201188,pe=a+32|0,0|r},aa:function(t,r,s,a){var i;return t|=0,r|=0,pe=i=pe-32|0,(s|=0)|(a|=0)?(e[i+24>>2]=0,e[i+28>>2]=0,e[i+16>>2]=0,e[i+20>>2]=0,e[i+12>>2]=s,e[i+8>>2]=r,g[i+22|0]=0,g[i+20|0]=a,r=Mn(i+8|0)):r=$i(r),e[t+16>>2]=201188,pe=i+32|0,0|r},ba:function(t,r,s,a,i){var o;return t|=0,r|=0,pe=o=pe-32|0,(a|=0)|(i|=0)|(s|=0)?(e[o+24>>2]=0,e[o+28>>2]=0,e[o+16>>2]=0,e[o+20>>2]=0,e[o+12>>2]=s,e[o+8>>2]=r,g[o+21|0]=i,g[o+20|0]=a,r=Mn(o+8|0)):r=$i(r),e[t+16>>2]=201188,pe=o+32|0,0|r},ca:function(t,r,s,a,i,o){var d;return t|=0,r|=0,pe=d=pe-32|0,(a|=0)|(i|=0)|(o|=0)|(s|=0)?(e[d+24>>2]=0,e[d+28>>2]=0,e[d+16>>2]=0,e[d+20>>2]=0,e[d+12>>2]=s,e[d+8>>2]=r,g[d+22|0]=o,g[d+21|0]=i,g[d+20|0]=a,r=Mn(d+8|0)):r=$i(r),e[t+16>>2]=201188,pe=d+32|0,0|r},da:function(t,r){return r|=0,e[e[(t|=0)>>2]+(r<<2)>>2]},ea:function(t,r,s){r|=0,s|=0,e[e[(t|=0)>>2]+(r<<2)>>2]=s},fa:NA,ga:bn,ha:dl,ia:Ui,ja:function(t,r){r|=0,e[12+(t|=0)>>2]=r},ka:Lo,la:function(){return 0},ma:function(){return 1},na:function(){return 2},oa:function(){return 3},pa:function(){return 4},qa:function(){return 5},ra:function(){return 6},sa:function(){return 7},ta:function(){return 8},ua:os,va:function(){return 227192},wa:tr,xa:Fr,ya:function(t){return(t|=0)?0|!!(0|xr(t,125228)):0}}}(A)}(k)},instantiate:function(T,k){return{then:function(A){var w=new P2.Module(T);A({instance:new P2.Instance(w,k)})}}},RuntimeError:Error};typeof P2!="object"&&pd("no native wasm support detected");var Op=!1;function cp(T,k){T||pd(k)}var IA,x2,If,Wa,xi,Qp,Np,xp=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0;function v2(T,k,A){for(var w=k+A,F=k;T[F]&&!(F>=w);)++F;if(F-k>16&&T.buffer&&xp)return xp.decode(T.subarray(k,F));for(var Y="";k<F;){var U=T[k++];if(128&U){var H=63&T[k++];if((224&U)!=192){var z=63&T[k++];if((U=(240&U)==224?(15&U)<<12|H<<6|z:(7&U)<<18|H<<12|z<<6|63&T[k++])<65536)Y+=String.fromCharCode(U);else{var N=U-65536;Y+=String.fromCharCode(55296|N>>10,56320|1023&N)}}else Y+=String.fromCharCode((31&U)<<6|H)}else Y+=String.fromCharCode(U)}return Y}function M2(T,k){return T?v2(x2,T,k):""}function bp(T,k,A,w){if(!(w>0))return 0;for(var F=A,Y=A+w-1,U=0;U<T.length;++U){var H=T.charCodeAt(U);if(H>=55296&&H<=57343&&(H=65536+((1023&H)<<10)|1023&T.charCodeAt(++U)),H<=127){if(A>=Y)break;k[A++]=H}else if(H<=2047){if(A+1>=Y)break;k[A++]=192|H>>6,k[A++]=128|63&H}else if(H<=65535){if(A+2>=Y)break;k[A++]=224|H>>12,k[A++]=128|H>>6&63,k[A++]=128|63&H}else{if(A+3>=Y)break;k[A++]=240|H>>18,k[A++]=128|H>>12&63,k[A++]=128|H>>6&63,k[A++]=128|63&H}}return k[A]=0,A-F}function Lp(T){for(var k=0,A=0;A<T.length;++A){var w=T.charCodeAt(A);w<=127?k++:w<=2047?k+=2:w>=55296&&w<=57343?(k+=4,++A):k+=3}return k}var gd,up=At.INITIAL_MEMORY||16777216;gd=(hp=At.wasmMemory?At.wasmMemory:new P2.Memory({initial:up/65536,maximum:up/65536})).buffer,At.HEAP8=IA=new Int8Array(gd),At.HEAP16=If=new Int16Array(gd),At.HEAP32=Wa=new Int32Array(gd),At.HEAPU8=x2=new Uint8Array(gd),At.HEAPU16=new Uint16Array(gd),At.HEAPU32=xi=new Uint32Array(gd),At.HEAPF32=Qp=new Float32Array(gd),At.HEAPF64=Np=new Float64Array(gd),up=hp.buffer.byteLength;var Mp=[],Rp=[],Ep=[],jp=!1;function Vp(T){Rp.unshift(T)}var Zs,oi,jd=0,Mg=null;function Wp(T){jd++,At.monitorRunDependencies&&At.monitorRunDependencies(jd)}function Up(T){if(jd--,At.monitorRunDependencies&&At.monitorRunDependencies(jd),jd==0&&Mg){var k=Mg;Mg=null,k()}}function pd(T){throw At.onAbort&&At.onAbort(T),T2(T="Aborted("+T+")"),Op=!0,T+=". Build with -sASSERTIONS for more info.",new P2.RuntimeError(T)}function sh(T){this.name="ExitStatus",this.message="Program terminated with exit("+T+")",this.status=T}function dp(T){for(;T.length>0;)T.shift()(At)}function ah(T,k="i8"){switch(k.endsWith("*")&&(k="*"),k){case"i1":case"i8":return IA[0|T];case"i16":return If[T>>1];case"i32":case"i64":return Wa[T>>2];case"float":return Qp[T>>2];case"double":return Np[T>>3];case"*":return xi[T>>2];default:pd("invalid type for getValue: "+k)}return null}function nh(T){this.excPtr=T,this.ptr=T-24,this.set_type=function(k){xi[this.ptr+4>>2]=k},this.get_type=function(){return xi[this.ptr+4>>2]},this.set_destructor=function(k){xi[this.ptr+8>>2]=k},this.get_destructor=function(){return xi[this.ptr+8>>2]},this.set_refcount=function(k){Wa[this.ptr>>2]=k},this.set_caught=function(k){k=k?1:0,IA[this.ptr+12|0]=k},this.get_caught=function(){return IA[this.ptr+12|0]!=0},this.set_rethrown=function(k){k=k?1:0,IA[this.ptr+13|0]=k},this.get_rethrown=function(){return IA[this.ptr+13|0]!=0},this.init=function(k,A){this.set_adjusted_ptr(0),this.set_type(k),this.set_destructor(A),this.set_refcount(0),this.set_caught(!1),this.set_rethrown(!1)},this.add_ref=function(){var k=Wa[this.ptr>>2];Wa[this.ptr>>2]=k+1},this.release_ref=function(){var k=Wa[this.ptr>>2];return Wa[this.ptr>>2]=k-1,k===1},this.set_adjusted_ptr=function(k){xi[this.ptr+16>>2]=k},this.get_adjusted_ptr=function(){return xi[this.ptr+16>>2]},this.get_exception_ptr=function(){if(Y1(this.get_type()))return xi[this.excPtr>>2];var k=this.get_adjusted_ptr();return k!==0?k:this.excPtr}}var fn={isAbs:T=>T.charAt(0)==="/",splitPath:T=>/^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/.exec(T).slice(1),normalizeArray:(T,k)=>{for(var A=0,w=T.length-1;w>=0;w--){var F=T[w];F==="."?T.splice(w,1):F===".."?(T.splice(w,1),A++):A&&(T.splice(w,1),A--)}if(k)for(;A;A--)T.unshift("..");return T},normalize:T=>{var k=fn.isAbs(T),A=T.substr(-1)==="/";return(T=fn.normalizeArray(T.split("/").filter(w=>!!w),!k).join("/"))||k||(T="."),T&&A&&(T+="/"),(k?"/":"")+T},dirname:T=>{var k=fn.splitPath(T),A=k[0],w=k[1];return A||w?(w&&(w=w.substr(0,w.length-1)),A+w):"."},basename:T=>{if(T==="/")return"/";var k=(T=(T=fn.normalize(T)).replace(/\/$/,"")).lastIndexOf("/");return k===-1?T:T.substr(k+1)},join:function(){var T=Array.prototype.slice.call(arguments);return fn.normalize(T.join("/"))},join2:(T,k)=>fn.normalize(T+"/"+k)},kd={resolve:function(){for(var T="",k=!1,A=arguments.length-1;A>=-1&&!k;A--){var w=A>=0?arguments[A]:je.cwd();if(typeof w!="string")throw new TypeError("Arguments to path.resolve must be strings");if(!w)return"";T=w+"/"+T,k=fn.isAbs(w)}return(k?"/":"")+(T=fn.normalizeArray(T.split("/").filter(F=>!!F),!k).join("/"))||"."},relative:(T,k)=>{function A(N){for(var D=0;D<N.length&&N[D]==="";D++);for(var R=N.length-1;R>=0&&N[R]==="";R--);return D>R?[]:N.slice(D,R-D+1)}T=kd.resolve(T).substr(1),k=kd.resolve(k).substr(1);for(var w=A(T.split("/")),F=A(k.split("/")),Y=Math.min(w.length,F.length),U=Y,H=0;H<Y;H++)if(w[H]!==F[H]){U=H;break}var z=[];for(H=U;H<w.length;H++)z.push("..");return(z=z.concat(F.slice(U))).join("/")}};function Hp(T,k,A){var w=Lp(T)+1,F=new Array(w),Y=bp(T,F,0,F.length);return k&&(F.length=Y),F}var Rd={ttys:[],init:function(){},shutdown:function(){},register:function(T,k){Rd.ttys[T]={input:[],output:[],ops:k},je.registerDevice(T,Rd.stream_ops)},stream_ops:{open:function(T){var k=Rd.ttys[T.node.rdev];if(!k)throw new je.ErrnoError(43);T.tty=k,T.seekable=!1},close:function(T){T.tty.ops.fsync(T.tty)},fsync:function(T){T.tty.ops.fsync(T.tty)},read:function(T,k,A,w,F){if(!T.tty||!T.tty.ops.get_char)throw new je.ErrnoError(60);for(var Y=0,U=0;U<w;U++){var H;try{H=T.tty.ops.get_char(T.tty)}catch{throw new je.ErrnoError(29)}if(H===void 0&&Y===0)throw new je.ErrnoError(6);if(H==null)break;Y++,k[A+U]=H}return Y&&(T.node.timestamp=Date.now()),Y},write:function(T,k,A,w,F){if(!T.tty||!T.tty.ops.put_char)throw new je.ErrnoError(60);try{for(var Y=0;Y<w;Y++)T.tty.ops.put_char(T.tty,k[A+Y])}catch{throw new je.ErrnoError(29)}return w&&(T.node.timestamp=Date.now()),Y}},default_tty_ops:{put_char:function(T,k){k===null||k===10?(wf(v2(T.output,0)),T.output=[]):k!=0&&T.output.push(k)},fsync:function(T){T.output&&T.output.length>0&&(wf(v2(T.output,0)),T.output=[])}},default_tty1_ops:{put_char:function(T,k){k===null||k===10?(T2(v2(T.output,0)),T.output=[]):k!=0&&T.output.push(k)},fsync:function(T){T.output&&T.output.length>0&&(T2(v2(T.output,0)),T.output=[])}}};function Yp(T){pd()}var da={ops_table:null,mount:function(T){return da.createNode(null,"/",16895,0)},createNode:function(T,k,A,w){if(je.isBlkdev(A)||je.isFIFO(A))throw new je.ErrnoError(63);da.ops_table||(da.ops_table={dir:{node:{getattr:da.node_ops.getattr,setattr:da.node_ops.setattr,lookup:da.node_ops.lookup,mknod:da.node_ops.mknod,rename:da.node_ops.rename,unlink:da.node_ops.unlink,rmdir:da.node_ops.rmdir,readdir:da.node_ops.readdir,symlink:da.node_ops.symlink},stream:{llseek:da.stream_ops.llseek}},file:{node:{getattr:da.node_ops.getattr,setattr:da.node_ops.setattr},stream:{llseek:da.stream_ops.llseek,read:da.stream_ops.read,write:da.stream_ops.write,allocate:da.stream_ops.allocate,mmap:da.stream_ops.mmap,msync:da.stream_ops.msync}},link:{node:{getattr:da.node_ops.getattr,setattr:da.node_ops.setattr,readlink:da.node_ops.readlink},stream:{}},chrdev:{node:{getattr:da.node_ops.getattr,setattr:da.node_ops.setattr},stream:je.chrdev_stream_ops}});var F=je.createNode(T,k,A,w);return je.isDir(F.mode)?(F.node_ops=da.ops_table.dir.node,F.stream_ops=da.ops_table.dir.stream,F.contents={}):je.isFile(F.mode)?(F.node_ops=da.ops_table.file.node,F.stream_ops=da.ops_table.file.stream,F.usedBytes=0,F.contents=null):je.isLink(F.mode)?(F.node_ops=da.ops_table.link.node,F.stream_ops=da.ops_table.link.stream):je.isChrdev(F.mode)&&(F.node_ops=da.ops_table.chrdev.node,F.stream_ops=da.ops_table.chrdev.stream),F.timestamp=Date.now(),T&&(T.contents[k]=F,T.timestamp=F.timestamp),F},getFileDataAsTypedArray:function(T){return T.contents?T.contents.subarray?T.contents.subarray(0,T.usedBytes):new Uint8Array(T.contents):new Uint8Array(0)},expandFileStorage:function(T,k){var A=T.contents?T.contents.length:0;if(!(A>=k)){k=Math.max(k,A*(A<1048576?2:1.125)>>>0),A!=0&&(k=Math.max(k,256));var w=T.contents;T.contents=new Uint8Array(k),T.usedBytes>0&&T.contents.set(w.subarray(0,T.usedBytes),0)}},resizeFileStorage:function(T,k){if(T.usedBytes!=k)if(k==0)T.contents=null,T.usedBytes=0;else{var A=T.contents;T.contents=new Uint8Array(k),A&&T.contents.set(A.subarray(0,Math.min(k,T.usedBytes))),T.usedBytes=k}},node_ops:{getattr:function(T){var k={};return k.dev=je.isChrdev(T.mode)?T.id:1,k.ino=T.id,k.mode=T.mode,k.nlink=1,k.uid=0,k.gid=0,k.rdev=T.rdev,je.isDir(T.mode)?k.size=4096:je.isFile(T.mode)?k.size=T.usedBytes:je.isLink(T.mode)?k.size=T.link.length:k.size=0,k.atime=new Date(T.timestamp),k.mtime=new Date(T.timestamp),k.ctime=new Date(T.timestamp),k.blksize=4096,k.blocks=Math.ceil(k.size/k.blksize),k},setattr:function(T,k){k.mode!==void 0&&(T.mode=k.mode),k.timestamp!==void 0&&(T.timestamp=k.timestamp),k.size!==void 0&&da.resizeFileStorage(T,k.size)},lookup:function(T,k){throw je.genericErrors[44]},mknod:function(T,k,A,w){return da.createNode(T,k,A,w)},rename:function(T,k,A){if(je.isDir(T.mode)){var w;try{w=je.lookupNode(k,A)}catch{}if(w)for(var F in w.contents)throw new je.ErrnoError(55)}delete T.parent.contents[T.name],T.parent.timestamp=Date.now(),T.name=A,k.contents[A]=T,k.timestamp=T.parent.timestamp,T.parent=k},unlink:function(T,k){delete T.contents[k],T.timestamp=Date.now()},rmdir:function(T,k){var A=je.lookupNode(T,k);for(var w in A.contents)throw new je.ErrnoError(55);delete T.contents[k],T.timestamp=Date.now()},readdir:function(T){var k=[".",".."];for(var A in T.contents)T.contents.hasOwnProperty(A)&&k.push(A);return k},symlink:function(T,k,A){var w=da.createNode(T,k,41471,0);return w.link=A,w},readlink:function(T){if(!je.isLink(T.mode))throw new je.ErrnoError(28);return T.link}},stream_ops:{read:function(T,k,A,w,F){var Y=T.node.contents;if(F>=T.node.usedBytes)return 0;var U=Math.min(T.node.usedBytes-F,w);if(U>8&&Y.subarray)k.set(Y.subarray(F,F+U),A);else for(var H=0;H<U;H++)k[A+H]=Y[F+H];return U},write:function(T,k,A,w,F,Y){if(!w)return 0;var U=T.node;if(U.timestamp=Date.now(),k.subarray&&(!U.contents||U.contents.subarray)){if(Y)return U.contents=k.subarray(A,A+w),U.usedBytes=w,w;if(U.usedBytes===0&&F===0)return U.contents=k.slice(A,A+w),U.usedBytes=w,w;if(F+w<=U.usedBytes)return U.contents.set(k.subarray(A,A+w),F),w}if(da.expandFileStorage(U,F+w),U.contents.subarray&&k.subarray)U.contents.set(k.subarray(A,A+w),F);else for(var H=0;H<w;H++)U.contents[F+H]=k[A+H];return U.usedBytes=Math.max(U.usedBytes,F+w),w},llseek:function(T,k,A){var w=k;if(A===1?w+=T.position:A===2&&je.isFile(T.node.mode)&&(w+=T.node.usedBytes),w<0)throw new je.ErrnoError(28);return w},allocate:function(T,k,A){da.expandFileStorage(T.node,k+A),T.node.usedBytes=Math.max(T.node.usedBytes,k+A)},mmap:function(T,k,A,w,F){if(!je.isFile(T.node.mode))throw new je.ErrnoError(43);var Y,U,H=T.node.contents;if(2&F||H.buffer!==IA.buffer){if((A>0||A+k<H.length)&&(H=H.subarray?H.subarray(A,A+k):Array.prototype.slice.call(H,A,A+k)),U=!0,!(Y=Yp()))throw new je.ErrnoError(48);IA.set(H,Y)}else U=!1,Y=H.byteOffset;return{ptr:Y,allocated:U}},msync:function(T,k,A,w,F){return da.stream_ops.write(T,k,0,w,A,!1),0}}},je={root:null,mounts:[],devices:{},streams:[],nextInode:1,nameTable:null,currentPath:"/",initialized:!1,ignorePermissions:!0,ErrnoError:null,genericErrors:{},filesystems:null,syncFSRequests:0,lookupPath:(T,k={})=>{if(!(T=kd.resolve(T)))return{path:"",node:null};if((k=Object.assign({follow_mount:!0,recurse_count:0},k)).recurse_count>8)throw new je.ErrnoError(32);for(var A=T.split("/").filter(N=>!!N),w=je.root,F="/",Y=0;Y<A.length;Y++){var U=Y===A.length-1;if(U&&k.parent)break;if(w=je.lookupNode(w,A[Y]),F=fn.join2(F,A[Y]),je.isMountpoint(w)&&(!U||U&&k.follow_mount)&&(w=w.mounted.root),!U||k.follow)for(var H=0;je.isLink(w.mode);){var z=je.readlink(F);if(F=kd.resolve(fn.dirname(F),z),w=je.lookupPath(F,{recurse_count:k.recurse_count+1}).node,H++>40)throw new je.ErrnoError(32)}}return{path:F,node:w}},getPath:T=>{for(var k;;){if(je.isRoot(T)){var A=T.mount.mountpoint;return k?A[A.length-1]!=="/"?A+"/"+k:A+k:A}k=k?T.name+"/"+k:T.name,T=T.parent}},hashName:(T,k)=>{for(var A=0,w=0;w<k.length;w++)A=(A<<5)-A+k.charCodeAt(w)|0;return(T+A>>>0)%je.nameTable.length},hashAddNode:T=>{var k=je.hashName(T.parent.id,T.name);T.name_next=je.nameTable[k],je.nameTable[k]=T},hashRemoveNode:T=>{var k=je.hashName(T.parent.id,T.name);if(je.nameTable[k]===T)je.nameTable[k]=T.name_next;else for(var A=je.nameTable[k];A;){if(A.name_next===T){A.name_next=T.name_next;break}A=A.name_next}},lookupNode:(T,k)=>{var A=je.mayLookup(T);if(A)throw new je.ErrnoError(A,T);for(var w=je.hashName(T.id,k),F=je.nameTable[w];F;F=F.name_next){var Y=F.name;if(F.parent.id===T.id&&Y===k)return F}return je.lookup(T,k)},createNode:(T,k,A,w)=>{var F=new je.FSNode(T,k,A,w);return je.hashAddNode(F),F},destroyNode:T=>{je.hashRemoveNode(T)},isRoot:T=>T===T.parent,isMountpoint:T=>!!T.mounted,isFile:T=>(61440&T)==32768,isDir:T=>(61440&T)==16384,isLink:T=>(61440&T)==40960,isChrdev:T=>(61440&T)==8192,isBlkdev:T=>(61440&T)==24576,isFIFO:T=>(61440&T)==4096,isSocket:T=>!(49152&~T),flagModes:{r:0,"r+":2,w:577,"w+":578,a:1089,"a+":1090},modeStringToFlags:T=>{var k=je.flagModes[T];if(k===void 0)throw new Error("Unknown file open mode: "+T);return k},flagsToPermissionString:T=>{var k=["r","w","rw"][3&T];return 512&T&&(k+="w"),k},nodePermissions:(T,k)=>je.ignorePermissions||(!k.includes("r")||292&T.mode)&&(!k.includes("w")||146&T.mode)&&(!k.includes("x")||73&T.mode)?0:2,mayLookup:T=>je.nodePermissions(T,"x")||(T.node_ops.lookup?0:2),mayCreate:(T,k)=>{try{return je.lookupNode(T,k),20}catch{}return je.nodePermissions(T,"wx")},mayDelete:(T,k,A)=>{var w;try{w=je.lookupNode(T,k)}catch(Y){return Y.errno}var F=je.nodePermissions(T,"wx");if(F)return F;if(A){if(!je.isDir(w.mode))return 54;if(je.isRoot(w)||je.getPath(w)===je.cwd())return 10}else if(je.isDir(w.mode))return 31;return 0},mayOpen:(T,k)=>T?je.isLink(T.mode)?32:je.isDir(T.mode)&&(je.flagsToPermissionString(k)!=="r"||512&k)?31:je.nodePermissions(T,je.flagsToPermissionString(k)):44,MAX_OPEN_FDS:4096,nextfd:(T=0,k=je.MAX_OPEN_FDS)=>{for(var A=T;A<=k;A++)if(!je.streams[A])return A;throw new je.ErrnoError(33)},getStream:T=>je.streams[T],createStream:(T,k,A)=>{je.FSStream||(je.FSStream=function(){this.shared={}},je.FSStream.prototype={},Object.defineProperties(je.FSStream.prototype,{object:{get:function(){return this.node},set:function(F){this.node=F}},isRead:{get:function(){return(2097155&this.flags)!=1}},isWrite:{get:function(){return!!(2097155&this.flags)}},isAppend:{get:function(){return 1024&this.flags}},flags:{get:function(){return this.shared.flags},set:function(F){this.shared.flags=F}},position:{get:function(){return this.shared.position},set:function(F){this.shared.position=F}}})),T=Object.assign(new je.FSStream,T);var w=je.nextfd(k,A);return T.fd=w,je.streams[w]=T,T},closeStream:T=>{je.streams[T]=null},chrdev_stream_ops:{open:T=>{var k=je.getDevice(T.node.rdev);T.stream_ops=k.stream_ops,T.stream_ops.open&&T.stream_ops.open(T)},llseek:()=>{throw new je.ErrnoError(70)}},major:T=>T>>8,minor:T=>255&T,makedev:(T,k)=>T<<8|k,registerDevice:(T,k)=>{je.devices[T]={stream_ops:k}},getDevice:T=>je.devices[T],getMounts:T=>{for(var k=[],A=[T];A.length;){var w=A.pop();k.push(w),A.push.apply(A,w.mounts)}return k},syncfs:(T,k)=>{typeof T=="function"&&(k=T,T=!1),je.syncFSRequests++,je.syncFSRequests>1&&T2("warning: "+je.syncFSRequests+" FS.syncfs operations in flight at once, probably just doing extra work");var A=je.getMounts(je.root.mount),w=0;function F(U){return je.syncFSRequests--,k(U)}function Y(U){if(U)return Y.errored?void 0:(Y.errored=!0,F(U));++w>=A.length&&F(null)}A.forEach(U=>{if(!U.type.syncfs)return Y(null);U.type.syncfs(U,T,Y)})},mount:(T,k,A)=>{var w,F=A==="/",Y=!A;if(F&&je.root)throw new je.ErrnoError(10);if(!F&&!Y){var U=je.lookupPath(A,{follow_mount:!1});if(A=U.path,w=U.node,je.isMountpoint(w))throw new je.ErrnoError(10);if(!je.isDir(w.mode))throw new je.ErrnoError(54)}var H={type:T,opts:k,mountpoint:A,mounts:[]},z=T.mount(H);return z.mount=H,H.root=z,F?je.root=z:w&&(w.mounted=H,w.mount&&w.mount.mounts.push(H)),z},unmount:T=>{var k=je.lookupPath(T,{follow_mount:!1});if(!je.isMountpoint(k.node))throw new je.ErrnoError(28);var A=k.node,w=A.mounted,F=je.getMounts(w);Object.keys(je.nameTable).forEach(U=>{for(var H=je.nameTable[U];H;){var z=H.name_next;F.includes(H.mount)&&je.destroyNode(H),H=z}}),A.mounted=null;var Y=A.mount.mounts.indexOf(w);A.mount.mounts.splice(Y,1)},lookup:(T,k)=>T.node_ops.lookup(T,k),mknod:(T,k,A)=>{var w=je.lookupPath(T,{parent:!0}).node,F=fn.basename(T);if(!F||F==="."||F==="..")throw new je.ErrnoError(28);var Y=je.mayCreate(w,F);if(Y)throw new je.ErrnoError(Y);if(!w.node_ops.mknod)throw new je.ErrnoError(63);return w.node_ops.mknod(w,F,k,A)},create:(T,k)=>(k=k!==void 0?k:438,k&=4095,k|=32768,je.mknod(T,k,0)),mkdir:(T,k)=>(k=k!==void 0?k:511,k&=1023,k|=16384,je.mknod(T,k,0)),mkdirTree:(T,k)=>{for(var A=T.split("/"),w="",F=0;F<A.length;++F)if(A[F]){w+="/"+A[F];try{je.mkdir(w,k)}catch(Y){if(Y.errno!=20)throw Y}}},mkdev:(T,k,A)=>(A===void 0&&(A=k,k=438),k|=8192,je.mknod(T,k,A)),symlink:(T,k)=>{if(!kd.resolve(T))throw new je.ErrnoError(44);var A=je.lookupPath(k,{parent:!0}).node;if(!A)throw new je.ErrnoError(44);var w=fn.basename(k),F=je.mayCreate(A,w);if(F)throw new je.ErrnoError(F);if(!A.node_ops.symlink)throw new je.ErrnoError(63);return A.node_ops.symlink(A,w,T)},rename:(T,k)=>{var A,w,F=fn.dirname(T),Y=fn.dirname(k),U=fn.basename(T),H=fn.basename(k);if(A=je.lookupPath(T,{parent:!0}).node,w=je.lookupPath(k,{parent:!0}).node,!A||!w)throw new je.ErrnoError(44);if(A.mount!==w.mount)throw new je.ErrnoError(75);var z,N=je.lookupNode(A,U),D=kd.relative(T,Y);if(D.charAt(0)!==".")throw new je.ErrnoError(28);if((D=kd.relative(k,F)).charAt(0)!==".")throw new je.ErrnoError(55);try{z=je.lookupNode(w,H)}catch{}if(N!==z){var R=je.isDir(N.mode),Q=je.mayDelete(A,U,R);if(Q)throw new je.ErrnoError(Q);if(Q=z?je.mayDelete(w,H,R):je.mayCreate(w,H))throw new je.ErrnoError(Q);if(!A.node_ops.rename)throw new je.ErrnoError(63);if(je.isMountpoint(N)||z&&je.isMountpoint(z))throw new je.ErrnoError(10);if(w!==A&&(Q=je.nodePermissions(A,"w")))throw new je.ErrnoError(Q);je.hashRemoveNode(N);try{A.node_ops.rename(N,w,H)}catch(J){throw J}finally{je.hashAddNode(N)}}},rmdir:T=>{var k=je.lookupPath(T,{parent:!0}).node,A=fn.basename(T),w=je.lookupNode(k,A),F=je.mayDelete(k,A,!0);if(F)throw new je.ErrnoError(F);if(!k.node_ops.rmdir)throw new je.ErrnoError(63);if(je.isMountpoint(w))throw new je.ErrnoError(10);k.node_ops.rmdir(k,A),je.destroyNode(w)},readdir:T=>{var k=je.lookupPath(T,{follow:!0}).node;if(!k.node_ops.readdir)throw new je.ErrnoError(54);return k.node_ops.readdir(k)},unlink:T=>{var k=je.lookupPath(T,{parent:!0}).node;if(!k)throw new je.ErrnoError(44);var A=fn.basename(T),w=je.lookupNode(k,A),F=je.mayDelete(k,A,!1);if(F)throw new je.ErrnoError(F);if(!k.node_ops.unlink)throw new je.ErrnoError(63);if(je.isMountpoint(w))throw new je.ErrnoError(10);k.node_ops.unlink(k,A),je.destroyNode(w)},readlink:T=>{var k=je.lookupPath(T).node;if(!k)throw new je.ErrnoError(44);if(!k.node_ops.readlink)throw new je.ErrnoError(28);return kd.resolve(je.getPath(k.parent),k.node_ops.readlink(k))},stat:(T,k)=>{var A=je.lookupPath(T,{follow:!k}).node;if(!A)throw new je.ErrnoError(44);if(!A.node_ops.getattr)throw new je.ErrnoError(63);return A.node_ops.getattr(A)},lstat:T=>je.stat(T,!0),chmod:(T,k,A)=>{var w;if(!(w=typeof T=="string"?je.lookupPath(T,{follow:!A}).node:T).node_ops.setattr)throw new je.ErrnoError(63);w.node_ops.setattr(w,{mode:4095&k|-4096&w.mode,timestamp:Date.now()})},lchmod:(T,k)=>{je.chmod(T,k,!0)},fchmod:(T,k)=>{var A=je.getStream(T);if(!A)throw new je.ErrnoError(8);je.chmod(A.node,k)},chown:(T,k,A,w)=>{var F;if(!(F=typeof T=="string"?je.lookupPath(T,{follow:!w}).node:T).node_ops.setattr)throw new je.ErrnoError(63);F.node_ops.setattr(F,{timestamp:Date.now()})},lchown:(T,k,A)=>{je.chown(T,k,A,!0)},fchown:(T,k,A)=>{var w=je.getStream(T);if(!w)throw new je.ErrnoError(8);je.chown(w.node,k,A)},truncate:(T,k)=>{if(k<0)throw new je.ErrnoError(28);var A;if(!(A=typeof T=="string"?je.lookupPath(T,{follow:!0}).node:T).node_ops.setattr)throw new je.ErrnoError(63);if(je.isDir(A.mode))throw new je.ErrnoError(31);if(!je.isFile(A.mode))throw new je.ErrnoError(28);var w=je.nodePermissions(A,"w");if(w)throw new je.ErrnoError(w);A.node_ops.setattr(A,{size:k,timestamp:Date.now()})},ftruncate:(T,k)=>{var A=je.getStream(T);if(!A)throw new je.ErrnoError(8);if(!(2097155&A.flags))throw new je.ErrnoError(28);je.truncate(A.node,k)},utime:(T,k,A)=>{var w=je.lookupPath(T,{follow:!0}).node;w.node_ops.setattr(w,{timestamp:Math.max(k,A)})},open:(T,k,A)=>{if(T==="")throw new je.ErrnoError(44);var w;if(A=A===void 0?438:A,A=64&(k=typeof k=="string"?je.modeStringToFlags(k):k)?4095&A|32768:0,typeof T=="object")w=T;else{T=fn.normalize(T);try{w=je.lookupPath(T,{follow:!(131072&k)}).node}catch{}}var F=!1;if(64&k)if(w){if(128&k)throw new je.ErrnoError(20)}else w=je.mknod(T,A,0),F=!0;if(!w)throw new je.ErrnoError(44);if(je.isChrdev(w.mode)&&(k&=-513),65536&k&&!je.isDir(w.mode))throw new je.ErrnoError(54);if(!F){var Y=je.mayOpen(w,k);if(Y)throw new je.ErrnoError(Y)}512&k&&!F&&je.truncate(w,0),k&=-131713;var U=je.createStream({node:w,path:je.getPath(w),flags:k,seekable:!0,position:0,stream_ops:w.stream_ops,ungotten:[],error:!1});return U.stream_ops.open&&U.stream_ops.open(U),!At.logReadFiles||1&k||(je.readFiles||(je.readFiles={}),T in je.readFiles||(je.readFiles[T]=1)),U},close:T=>{if(je.isClosed(T))throw new je.ErrnoError(8);T.getdents&&(T.getdents=null);try{T.stream_ops.close&&T.stream_ops.close(T)}catch(k){throw k}finally{je.closeStream(T.fd)}T.fd=null},isClosed:T=>T.fd===null,llseek:(T,k,A)=>{if(je.isClosed(T))throw new je.ErrnoError(8);if(!T.seekable||!T.stream_ops.llseek)throw new je.ErrnoError(70);if(A!=0&&A!=1&&A!=2)throw new je.ErrnoError(28);return T.position=T.stream_ops.llseek(T,k,A),T.ungotten=[],T.position},read:(T,k,A,w,F)=>{if(w<0||F<0)throw new je.ErrnoError(28);if(je.isClosed(T))throw new je.ErrnoError(8);if((2097155&T.flags)==1)throw new je.ErrnoError(8);if(je.isDir(T.node.mode))throw new je.ErrnoError(31);if(!T.stream_ops.read)throw new je.ErrnoError(28);var Y=F!==void 0;if(Y){if(!T.seekable)throw new je.ErrnoError(70)}else F=T.position;var U=T.stream_ops.read(T,k,A,w,F);return Y||(T.position+=U),U},write:(T,k,A,w,F,Y)=>{if(w<0||F<0)throw new je.ErrnoError(28);if(je.isClosed(T))throw new je.ErrnoError(8);if(!(2097155&T.flags))throw new je.ErrnoError(8);if(je.isDir(T.node.mode))throw new je.ErrnoError(31);if(!T.stream_ops.write)throw new je.ErrnoError(28);T.seekable&&1024&T.flags&&je.llseek(T,0,2);var U=F!==void 0;if(U){if(!T.seekable)throw new je.ErrnoError(70)}else F=T.position;var H=T.stream_ops.write(T,k,A,w,F,Y);return U||(T.position+=H),H},allocate:(T,k,A)=>{if(je.isClosed(T))throw new je.ErrnoError(8);if(k<0||A<=0)throw new je.ErrnoError(28);if(!(2097155&T.flags))throw new je.ErrnoError(8);if(!je.isFile(T.node.mode)&&!je.isDir(T.node.mode))throw new je.ErrnoError(43);if(!T.stream_ops.allocate)throw new je.ErrnoError(138);T.stream_ops.allocate(T,k,A)},mmap:(T,k,A,w,F)=>{if(2&w&&!(2&F)&&(2097155&T.flags)!=2)throw new je.ErrnoError(2);if((2097155&T.flags)==1)throw new je.ErrnoError(2);if(!T.stream_ops.mmap)throw new je.ErrnoError(43);return T.stream_ops.mmap(T,k,A,w,F)},msync:(T,k,A,w,F)=>T.stream_ops.msync?T.stream_ops.msync(T,k,A,w,F):0,munmap:T=>0,ioctl:(T,k,A)=>{if(!T.stream_ops.ioctl)throw new je.ErrnoError(59);return T.stream_ops.ioctl(T,k,A)},readFile:(T,k={})=>{if(k.flags=k.flags||0,k.encoding=k.encoding||"binary",k.encoding!=="utf8"&&k.encoding!=="binary")throw new Error('Invalid encoding type "'+k.encoding+'"');var A,w=je.open(T,k.flags),F=je.stat(T).size,Y=new Uint8Array(F);return je.read(w,Y,0,F,0),k.encoding==="utf8"?A=v2(Y,0):k.encoding==="binary"&&(A=Y),je.close(w),A},writeFile:(T,k,A={})=>{A.flags=A.flags||577;var w=je.open(T,A.flags,A.mode);if(typeof k=="string"){var F=new Uint8Array(Lp(k)+1),Y=bp(k,F,0,F.length);je.write(w,F,0,Y,void 0,A.canOwn)}else{if(!ArrayBuffer.isView(k))throw new Error("Unsupported data type");je.write(w,k,0,k.byteLength,void 0,A.canOwn)}je.close(w)},cwd:()=>je.currentPath,chdir:T=>{var k=je.lookupPath(T,{follow:!0});if(k.node===null)throw new je.ErrnoError(44);if(!je.isDir(k.node.mode))throw new je.ErrnoError(54);var A=je.nodePermissions(k.node,"x");if(A)throw new je.ErrnoError(A);je.currentPath=k.path},createDefaultDirectories:()=>{je.mkdir("/tmp"),je.mkdir("/home"),je.mkdir("/home/web_user")},createDefaultDevices:()=>{je.mkdir("/dev"),je.registerDevice(je.makedev(1,3),{read:()=>0,write:(T,k,A,w,F)=>w}),je.mkdev("/dev/null",je.makedev(1,3)),Rd.register(je.makedev(5,0),Rd.default_tty_ops),Rd.register(je.makedev(6,0),Rd.default_tty1_ops),je.mkdev("/dev/tty",je.makedev(5,0)),je.mkdev("/dev/tty1",je.makedev(6,0)),je.mkdir("/dev/shm"),je.mkdir("/dev/shm/tmp")},createSpecialDirectories:()=>{je.mkdir("/proc");var T=je.mkdir("/proc/self");je.mkdir("/proc/self/fd"),je.mount({mount:()=>{var k=je.createNode(T,"fd",16895,73);return k.node_ops={lookup:(A,w)=>{var F=+w,Y=je.getStream(F);if(!Y)throw new je.ErrnoError(8);var U={parent:null,mount:{mountpoint:"fake"},node_ops:{readlink:()=>Y.path}};return U.parent=U,U}},k}},{},"/proc/self/fd")},createStandardStreams:()=>{At.stdin?je.createDevice("/dev","stdin",At.stdin):je.symlink("/dev/tty","/dev/stdin"),At.stdout?je.createDevice("/dev","stdout",null,At.stdout):je.symlink("/dev/tty","/dev/stdout"),At.stderr?je.createDevice("/dev","stderr",null,At.stderr):je.symlink("/dev/tty1","/dev/stderr"),je.open("/dev/stdin",0),je.open("/dev/stdout",1),je.open("/dev/stderr",1)},ensureErrnoError:()=>{je.ErrnoError||(je.ErrnoError=function(T,k){this.node=k,this.setErrno=function(A){this.errno=A},this.setErrno(T),this.message="FS error"},je.ErrnoError.prototype=new Error,je.ErrnoError.prototype.constructor=je.ErrnoError,[44].forEach(T=>{je.genericErrors[T]=new je.ErrnoError(T),je.genericErrors[T].stack="<generic error, no stack>"}))},staticInit:()=>{je.ensureErrnoError(),je.nameTable=new Array(4096),je.mount(da,{},"/"),je.createDefaultDirectories(),je.createDefaultDevices(),je.createSpecialDirectories(),je.filesystems={MEMFS:da}},init:(T,k,A)=>{je.init.initialized=!0,je.ensureErrnoError(),At.stdin=T||At.stdin,At.stdout=k||At.stdout,At.stderr=A||At.stderr,je.createStandardStreams()},quit:()=>{je.init.initialized=!1;for(var T=0;T<je.streams.length;T++){var k=je.streams[T];k&&je.close(k)}},getMode:(T,k)=>{var A=0;return T&&(A|=365),k&&(A|=146),A},findObject:(T,k)=>{var A=je.analyzePath(T,k);return A.exists?A.object:null},analyzePath:(T,k)=>{try{T=(w=je.lookupPath(T,{follow:!k})).path}catch{}var A={isRoot:!1,exists:!1,error:0,name:null,path:null,object:null,parentExists:!1,parentPath:null,parentObject:null};try{var w=je.lookupPath(T,{parent:!0});A.parentExists=!0,A.parentPath=w.path,A.parentObject=w.node,A.name=fn.basename(T),w=je.lookupPath(T,{follow:!k}),A.exists=!0,A.path=w.path,A.object=w.node,A.name=w.node.name,A.isRoot=w.path==="/"}catch(F){A.error=F.errno}return A},createPath:(T,k,A,w)=>{T=typeof T=="string"?T:je.getPath(T);for(var F=k.split("/").reverse();F.length;){var Y=F.pop();if(Y){var U=fn.join2(T,Y);try{je.mkdir(U)}catch{}T=U}}return U},createFile:(T,k,A,w,F)=>{var Y=fn.join2(typeof T=="string"?T:je.getPath(T),k),U=je.getMode(w,F);return je.create(Y,U)},createDataFile:(T,k,A,w,F,Y)=>{var U=k;T&&(T=typeof T=="string"?T:je.getPath(T),U=k?fn.join2(T,k):T);var H=je.getMode(w,F),z=je.create(U,H);if(A){if(typeof A=="string"){for(var N=new Array(A.length),D=0,R=A.length;D<R;++D)N[D]=A.charCodeAt(D);A=N}je.chmod(z,146|H);var Q=je.open(z,577);je.write(Q,A,0,A.length,0,Y),je.close(Q),je.chmod(z,H)}return z},createDevice:(T,k,A,w)=>{var F=fn.join2(typeof T=="string"?T:je.getPath(T),k),Y=je.getMode(!!A,!!w);je.createDevice.major||(je.createDevice.major=64);var U=je.makedev(je.createDevice.major++,0);return je.registerDevice(U,{open:H=>{H.seekable=!1},close:H=>{w&&w.buffer&&w.buffer.length&&w(10)},read:(H,z,N,D,R)=>{for(var Q=0,J=0;J<D;J++){var oe;try{oe=A()}catch{throw new je.ErrnoError(29)}if(oe===void 0&&Q===0)throw new je.ErrnoError(6);if(oe==null)break;Q++,z[N+J]=oe}return Q&&(H.node.timestamp=Date.now()),Q},write:(H,z,N,D,R)=>{for(var Q=0;Q<D;Q++)try{w(z[N+Q])}catch{throw new je.ErrnoError(29)}return D&&(H.node.timestamp=Date.now()),Q}}),je.mkdev(F,Y,U)},forceLoadFile:T=>{if(T.isDevice||T.isFolder||T.link||T.contents)return!0;throw typeof XMLHttpRequest<"u"?new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread."):new Error("Cannot load without read() or XMLHttpRequest.")},createLazyFile:(T,k,A,w,F)=>{function Y(){this.lengthKnown=!1,this.chunks=[]}if(Y.prototype.get=function(R){if(!(R>this.length-1||R<0)){var Q=R%this.chunkSize,J=R/this.chunkSize|0;return this.getter(J)[Q]}},Y.prototype.setDataGetter=function(R){this.getter=R},Y.prototype.cacheLength=function(){var R=new XMLHttpRequest;if(R.open("HEAD",A,!1),R.send(null),!(R.status>=200&&R.status<300||R.status===304))throw new Error("Couldn't load "+A+". Status: "+R.status);var Q,J=Number(R.getResponseHeader("Content-length")),oe=(Q=R.getResponseHeader("Accept-Ranges"))&&Q==="bytes",be=(Q=R.getResponseHeader("Content-Encoding"))&&Q==="gzip",Ie=1048576;oe||(Ie=J);var ee=this;ee.setDataGetter(re=>{var ce=re*Ie,g=(re+1)*Ie-1;if(g=Math.min(g,J-1),ee.chunks[re]===void 0&&(ee.chunks[re]=((I,e)=>{if(I>e)throw new Error("invalid range ("+I+", "+e+") or no bytes requested!");if(e>J-1)throw new Error("only "+J+" bytes available! programmer error!");var u=new XMLHttpRequest;if(u.open("GET",A,!1),J!==Ie&&u.setRequestHeader("Range","bytes="+I+"-"+e),u.responseType="arraybuffer",u.overrideMimeType&&u.overrideMimeType("text/plain; charset=x-user-defined"),u.send(null),!(u.status>=200&&u.status<300||u.status===304))throw new Error("Couldn't load "+A+". Status: "+u.status);return u.response!==void 0?new Uint8Array(u.response||[]):Hp(u.responseText||"",!0)})(ce,g)),ee.chunks[re]===void 0)throw new Error("doXHR failed!");return ee.chunks[re]}),!be&&J||(Ie=J=1,J=this.getter(0).length,Ie=J,wf("LazyFiles on gzip forces download of the whole file when length is accessed")),this._length=J,this._chunkSize=Ie,this.lengthKnown=!0},typeof XMLHttpRequest<"u"){if(!rh)throw"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc";var U=new Y;Object.defineProperties(U,{length:{get:function(){return this.lengthKnown||this.cacheLength(),this._length}},chunkSize:{get:function(){return this.lengthKnown||this.cacheLength(),this._chunkSize}}});var H={isDevice:!1,contents:U}}else H={isDevice:!1,url:A};var z=je.createFile(T,k,H,w,F);H.contents?z.contents=H.contents:H.url&&(z.contents=null,z.url=H.url),Object.defineProperties(z,{usedBytes:{get:function(){return this.contents.length}}});var N={};function D(R,Q,J,oe,be){var Ie=R.node.contents;if(be>=Ie.length)return 0;var ee=Math.min(Ie.length-be,oe);if(Ie.slice)for(var re=0;re<ee;re++)Q[J+re]=Ie[be+re];else for(re=0;re<ee;re++)Q[J+re]=Ie.get(be+re);return ee}return Object.keys(z.stream_ops).forEach(R=>{var Q=z.stream_ops[R];N[R]=function(){return je.forceLoadFile(z),Q.apply(null,arguments)}}),N.read=(R,Q,J,oe,be)=>(je.forceLoadFile(z),D(R,Q,J,oe,be)),N.mmap=(R,Q,J,oe,be)=>{je.forceLoadFile(z);var Ie=Yp();if(!Ie)throw new je.ErrnoError(48);return D(R,IA,Ie,Q,J),{ptr:Ie,allocated:!0}},z.stream_ops=N,z},indexedDB:()=>window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB,DB_NAME:()=>"EM_FS_"+window.location.pathname,DB_VERSION:20,DB_STORE_NAME:"FILE_DATA",saveFilesToDB:(T,k,A)=>{k=k||(()=>{}),A=A||(()=>{});var w=je.indexedDB();try{var F=w.open(je.DB_NAME(),je.DB_VERSION)}catch(Y){return A(Y)}F.onupgradeneeded=()=>{wf("creating db"),F.result.createObjectStore(je.DB_STORE_NAME)},F.onsuccess=()=>{var Y=F.result.transaction([je.DB_STORE_NAME],"readwrite"),U=Y.objectStore(je.DB_STORE_NAME),H=0,z=0,N=T.length;function D(){z==0?k():A()}T.forEach(R=>{var Q=U.put(je.analyzePath(R).object.contents,R);Q.onsuccess=()=>{++H+z==N&&D()},Q.onerror=()=>{z++,H+z==N&&D()}}),Y.onerror=A},F.onerror=A},loadFilesFromDB:(T,k,A)=>{k=k||(()=>{}),A=A||(()=>{});var w=je.indexedDB();try{var F=w.open(je.DB_NAME(),je.DB_VERSION)}catch(Y){return A(Y)}F.onupgradeneeded=A,F.onsuccess=()=>{var Y=F.result;try{var U=Y.transaction([je.DB_STORE_NAME],"readonly")}catch(Q){return void A(Q)}var H=U.objectStore(je.DB_STORE_NAME),z=0,N=0,D=T.length;function R(){N==0?k():A()}T.forEach(Q=>{var J=H.get(Q);J.onsuccess=()=>{je.analyzePath(Q).exists&&je.unlink(Q),je.createDataFile(fn.dirname(Q),fn.basename(Q),J.result,!0,!0,!0),++z+N==D&&R()},J.onerror=()=>{N++,z+N==D&&R()}}),U.onerror=A},F.onerror=A}},jn={DEFAULT_POLLMASK:5,calculateAt:function(T,k,A){if(fn.isAbs(k))return k;var w;if(w=T===-100?je.cwd():jn.getStreamFromFD(T).path,k.length==0){if(!A)throw new je.ErrnoError(44);return w}return fn.join2(w,k)},doStat:function(T,k,A){try{var w=T(k)}catch(H){if(H&&H.node&&fn.normalize(k)!==fn.normalize(je.getPath(H.node)))return-54;throw H}Wa[A>>2]=w.dev,Wa[A+8>>2]=w.ino,Wa[A+12>>2]=w.mode,xi[A+16>>2]=w.nlink,Wa[A+20>>2]=w.uid,Wa[A+24>>2]=w.gid,Wa[A+28>>2]=w.rdev,oi=[w.size>>>0,(Zs=w.size,+Math.abs(Zs)>=1?Zs>0?(0|Math.min(+Math.floor(Zs/4294967296),4294967295))>>>0:~~+Math.ceil((Zs-+(~~Zs>>>0))/4294967296)>>>0:0)],Wa[A+40>>2]=oi[0],Wa[A+44>>2]=oi[1],Wa[A+48>>2]=4096,Wa[A+52>>2]=w.blocks;var F=w.atime.getTime(),Y=w.mtime.getTime(),U=w.ctime.getTime();return oi=[Math.floor(F/1e3)>>>0,(Zs=Math.floor(F/1e3),+Math.abs(Zs)>=1?Zs>0?(0|Math.min(+Math.floor(Zs/4294967296),4294967295))>>>0:~~+Math.ceil((Zs-+(~~Zs>>>0))/4294967296)>>>0:0)],Wa[A+56>>2]=oi[0],Wa[A+60>>2]=oi[1],xi[A+64>>2]=F%1e3*1e3,oi=[Math.floor(Y/1e3)>>>0,(Zs=Math.floor(Y/1e3),+Math.abs(Zs)>=1?Zs>0?(0|Math.min(+Math.floor(Zs/4294967296),4294967295))>>>0:~~+Math.ceil((Zs-+(~~Zs>>>0))/4294967296)>>>0:0)],Wa[A+72>>2]=oi[0],Wa[A+76>>2]=oi[1],xi[A+80>>2]=Y%1e3*1e3,oi=[Math.floor(U/1e3)>>>0,(Zs=Math.floor(U/1e3),+Math.abs(Zs)>=1?Zs>0?(0|Math.min(+Math.floor(Zs/4294967296),4294967295))>>>0:~~+Math.ceil((Zs-+(~~Zs>>>0))/4294967296)>>>0:0)],Wa[A+88>>2]=oi[0],Wa[A+92>>2]=oi[1],xi[A+96>>2]=U%1e3*1e3,oi=[w.ino>>>0,(Zs=w.ino,+Math.abs(Zs)>=1?Zs>0?(0|Math.min(+Math.floor(Zs/4294967296),4294967295))>>>0:~~+Math.ceil((Zs-+(~~Zs>>>0))/4294967296)>>>0:0)],Wa[A+104>>2]=oi[0],Wa[A+108>>2]=oi[1],0},doMsync:function(T,k,A,w,F){if(!je.isFile(k.node.mode))throw new je.ErrnoError(43);if(2&w)return 0;var Y=x2.slice(T,T+A);je.msync(k,Y,F,A,w)},varargs:void 0,get:function(){return jn.varargs+=4,Wa[jn.varargs-4>>2]},getStr:function(T){return M2(T)},getStreamFromFD:function(T){var k=je.getStream(T);if(!k)throw new je.ErrnoError(8);return k}},gp={};function Eg(){if(!Eg.strings){var T={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:mp||"./this.program"};for(var k in gp)gp[k]===void 0?delete T[k]:T[k]=gp[k];var A=[];for(var k in T)A.push(k+"="+T[k]);Eg.strings=A}return Eg.strings}var Bp=function(T,k,A,w){T||(T=this),this.parent=T,this.mount=T.mount,this.mounted=null,this.id=je.nextInode++,this.name=k,this.mode=A,this.node_ops={},this.stream_ops={},this.rdev=w};Object.defineProperties(Bp.prototype,{read:{get:function(){return!(365&~this.mode)},set:function(T){T?this.mode|=365:this.mode&=-366}},write:{get:function(){return!(146&~this.mode)},set:function(T){T?this.mode|=146:this.mode&=-147}},isFolder:{get:function(){return je.isDir(this.mode)}},isDevice:{get:function(){return je.isChrdev(this.mode)}}}),je.FSNode=Bp,je.staticInit(),At.FS_createPath=je.createPath,At.FS_createDataFile=je.createDataFile,At.FS_unlink=je.unlink,At.FS_createLazyFile=je.createLazyFile,At.FS_createDevice=je.createDevice;var ih={g:function(T,k,A,w){pd("Assertion failed: "+M2(T)+", at: "+[k?M2(k):"unknown filename",A,w?M2(w):"unknown function"])},u:function(T,k,A){throw new nh(T).init(k,A),T},d:function(T,k,A){jn.varargs=A;try{var w=jn.getStreamFromFD(T);switch(k){case 0:return(F=jn.get())<0?-28:je.createStream(w,F).fd;case 1:case 2:case 6:case 7:return 0;case 3:return w.flags;case 4:var F=jn.get();return w.flags|=F,0;case 5:return F=jn.get(),If[F+0>>1]=2,0;case 16:case 8:default:return-28;case 9:return Wa[H1()>>2]=28,-1}}catch(Y){if(je===void 0||!(Y instanceof je.ErrnoError))throw Y;return-Y.errno}},q:function(T,k,A){try{var w=jn.getStreamFromFD(T);w.getdents||(w.getdents=je.readdir(w.path));for(var F=280,Y=0,U=je.llseek(w,0,1),H=Math.floor(U/F);H<w.getdents.length&&Y+F<=A;){var z,N,D=w.getdents[H];if(D===".")z=w.node.id,N=4;else if(D==="..")z=je.lookupPath(w.path,{parent:!0}).node.id,N=4;else{var R=je.lookupNode(w.node,D);z=R.id,N=je.isChrdev(R.mode)?2:je.isDir(R.mode)?4:je.isLink(R.mode)?10:8}oi=[z>>>0,(Zs=z,+Math.abs(Zs)>=1?Zs>0?(0|Math.min(+Math.floor(Zs/4294967296),4294967295))>>>0:~~+Math.ceil((Zs-+(~~Zs>>>0))/4294967296)>>>0:0)],Wa[k+Y>>2]=oi[0],Wa[k+Y+4>>2]=oi[1],oi=[(H+1)*F>>>0,(Zs=(H+1)*F,+Math.abs(Zs)>=1?Zs>0?(0|Math.min(+Math.floor(Zs/4294967296),4294967295))>>>0:~~+Math.ceil((Zs-+(~~Zs>>>0))/4294967296)>>>0:0)],Wa[k+Y+8>>2]=oi[0],Wa[k+Y+12>>2]=oi[1],If[k+Y+16>>1]=280,IA[k+Y+18|0]=N,bp(D,x2,k+Y+19,256),Y+=F,H+=1}return je.llseek(w,H*F,0),Y}catch(Q){if(je===void 0||!(Q instanceof je.ErrnoError))throw Q;return-Q.errno}},h:function(T,k,A){jn.varargs=A;try{var w=jn.getStreamFromFD(T);switch(k){case 21509:case 21505:case 21510:case 21511:case 21512:case 21506:case 21507:case 21508:case 21523:case 21524:return w.tty?0:-59;case 21519:if(!w.tty)return-59;var F=jn.get();return Wa[F>>2]=0,0;case 21520:return w.tty?-28:-59;case 21531:return F=jn.get(),je.ioctl(w,k,F);default:return-28}}catch(Y){if(je===void 0||!(Y instanceof je.ErrnoError))throw Y;return-Y.errno}},e:function(T,k,A,w){jn.varargs=w;try{k=jn.getStr(k),k=jn.calculateAt(T,k);var F=w?jn.get():0;return je.open(k,A,F).fd}catch(Y){if(je===void 0||!(Y instanceof je.ErrnoError))throw Y;return-Y.errno}},o:function(T){try{return T=jn.getStr(T),je.rmdir(T),0}catch(k){if(je===void 0||!(k instanceof je.ErrnoError))throw k;return-k.errno}},n:function(T,k){try{return T=jn.getStr(T),jn.doStat(je.stat,T,k)}catch(A){if(je===void 0||!(A instanceof je.ErrnoError))throw A;return-A.errno}},p:function(T,k,A){try{return k=jn.getStr(k),k=jn.calculateAt(T,k),A===0?je.unlink(k):A===512?je.rmdir(k):pd("Invalid flags passed to unlinkat"),0}catch(w){if(je===void 0||!(w instanceof je.ErrnoError))throw w;return-w.errno}},i:function(){return!0},l:function(){pd("")},f:function(){return Date.now()},j:function(T,k,A){x2.copyWithin(T,k,k+A)},m:function(T){x2.length,pd("OOM")},r:function(T,k){var A=0;return Eg().forEach(function(w,F){var Y=k+A;xi[T+4*F>>2]=Y,function(U,H){for(var z=0;z<U.length;++z)IA[0|H++]=U.charCodeAt(z);IA[0|H]=0}(w,Y),A+=w.length+1}),0},s:function(T,k){var A=Eg();xi[T>>2]=A.length;var w=0;return A.forEach(function(F){w+=F.length+1}),xi[k>>2]=w,0},b:function(T){try{var k=jn.getStreamFromFD(T);return je.close(k),0}catch(A){if(je===void 0||!(A instanceof je.ErrnoError))throw A;return A.errno}},t:function(T,k,A,w){try{var F=function(Y,U,H){for(var z=0,N=0;N<H;N++){var D=xi[U>>2],R=xi[U+4>>2];U+=8;var Q=je.read(Y,IA,D,R,void 0);if(Q<0)return-1;if(z+=Q,Q<R)break}return z}(jn.getStreamFromFD(T),k,A);return xi[w>>2]=F,0}catch(Y){if(je===void 0||!(Y instanceof je.ErrnoError))throw Y;return Y.errno}},k:function(T,k,A,w,F){try{var Y=(z=A)+2097152>>>0<4194305-!!(H=k)?(H>>>0)+4294967296*z:NaN;if(isNaN(Y))return 61;var U=jn.getStreamFromFD(T);return je.llseek(U,Y,w),oi=[U.position>>>0,(Zs=U.position,+Math.abs(Zs)>=1?Zs>0?(0|Math.min(+Math.floor(Zs/4294967296),4294967295))>>>0:~~+Math.ceil((Zs-+(~~Zs>>>0))/4294967296)>>>0:0)],Wa[F>>2]=oi[0],Wa[F+4>>2]=oi[1],U.getdents&&Y===0&&w===0&&(U.getdents=null),0}catch(N){if(je===void 0||!(N instanceof je.ErrnoError))throw N;return N.errno}var H,z},c:function(T,k,A,w){try{var F=function(Y,U,H){for(var z=0,N=0;N<H;N++){var D=xi[U>>2],R=xi[U+4>>2];U+=8;var Q=je.write(Y,IA,D,R,void 0);if(Q<0)return-1;z+=Q}return z}(jn.getStreamFromFD(T),k,A);return xi[w>>2]=F,0}catch(Y){if(je===void 0||!(Y instanceof je.ErrnoError))throw Y;return Y.errno}},a:hp};(function(){var T,k={a:ih};function A(w,F){var Y=w.exports;At.asm=Y,At.asm.ua,Vp(At.asm.v),Up()}if(Wp(),At.instantiateWasm)try{return At.instantiateWasm(k,A)}catch(w){return T2("Module.instantiateWasm callback failed with error: "+w),!1}T=function(w){A(w.instance)},async function(){return[]}().then(function(w){return P2.instantiate(w,k)}).then(function(w){return w}).then(T,function(w){T2("failed to asynchronously prepare wasm: "+w),pd(w)})})(),At.___wasm_call_ctors=function(){return(At.___wasm_call_ctors=At.asm.v).apply(null,arguments)};var Kp=At._emscripten_bind_VoidPtr___destroy___0=function(){return(Kp=At._emscripten_bind_VoidPtr___destroy___0=At.asm.w).apply(null,arguments)},qp=At._emscripten_bind_espeak_VOICE_get_name_0=function(){return(qp=At._emscripten_bind_espeak_VOICE_get_name_0=At.asm.x).apply(null,arguments)},Xp=At._emscripten_bind_espeak_VOICE_set_name_1=function(){return(Xp=At._emscripten_bind_espeak_VOICE_set_name_1=At.asm.y).apply(null,arguments)},Zp=At._emscripten_bind_espeak_VOICE_get_languages_1=function(){return(Zp=At._emscripten_bind_espeak_VOICE_get_languages_1=At.asm.z).apply(null,arguments)},Jp=At._emscripten_bind_espeak_VOICE_get_identifier_0=function(){return(Jp=At._emscripten_bind_espeak_VOICE_get_identifier_0=At.asm.A).apply(null,arguments)},$p=At._emscripten_bind_espeak_VOICE_set_identifier_1=function(){return($p=At._emscripten_bind_espeak_VOICE_set_identifier_1=At.asm.B).apply(null,arguments)},e1=At._emscripten_bind_espeak_VOICE_get_gender_0=function(){return(e1=At._emscripten_bind_espeak_VOICE_get_gender_0=At.asm.C).apply(null,arguments)},t1=At._emscripten_bind_espeak_VOICE_set_gender_1=function(){return(t1=At._emscripten_bind_espeak_VOICE_set_gender_1=At.asm.D).apply(null,arguments)},r1=At._emscripten_bind_espeak_VOICE_get_age_0=function(){return(r1=At._emscripten_bind_espeak_VOICE_get_age_0=At.asm.E).apply(null,arguments)},s1=At._emscripten_bind_espeak_VOICE_set_age_1=function(){return(s1=At._emscripten_bind_espeak_VOICE_set_age_1=At.asm.F).apply(null,arguments)},a1=At._emscripten_bind_espeak_VOICE_get_variant_0=function(){return(a1=At._emscripten_bind_espeak_VOICE_get_variant_0=At.asm.G).apply(null,arguments)},n1=At._emscripten_bind_espeak_VOICE_set_variant_1=function(){return(n1=At._emscripten_bind_espeak_VOICE_set_variant_1=At.asm.H).apply(null,arguments)},i1=At._emscripten_bind_espeak_VOICE_get_xx1_0=function(){return(i1=At._emscripten_bind_espeak_VOICE_get_xx1_0=At.asm.I).apply(null,arguments)},o1=At._emscripten_bind_espeak_VOICE_set_xx1_1=function(){return(o1=At._emscripten_bind_espeak_VOICE_set_xx1_1=At.asm.J).apply(null,arguments)},A1=At._emscripten_bind_espeak_VOICE_get_score_0=function(){return(A1=At._emscripten_bind_espeak_VOICE_get_score_0=At.asm.K).apply(null,arguments)},l1=At._emscripten_bind_espeak_VOICE_set_score_1=function(){return(l1=At._emscripten_bind_espeak_VOICE_set_score_1=At.asm.L).apply(null,arguments)},c1=At._emscripten_bind_espeak_VOICE_get_spare_0=function(){return(c1=At._emscripten_bind_espeak_VOICE_get_spare_0=At.asm.M).apply(null,arguments)},u1=At._emscripten_bind_espeak_VOICE_set_spare_1=function(){return(u1=At._emscripten_bind_espeak_VOICE_set_spare_1=At.asm.N).apply(null,arguments)},d1=At._emscripten_bind_espeak_VOICE___destroy___0=function(){return(d1=At._emscripten_bind_espeak_VOICE___destroy___0=At.asm.O).apply(null,arguments)},g1=At._emscripten_bind_espeak_EVENT_get_type_0=function(){return(g1=At._emscripten_bind_espeak_EVENT_get_type_0=At.asm.P).apply(null,arguments)},f1=At._emscripten_bind_espeak_EVENT_get_unique_identifier_0=function(){return(f1=At._emscripten_bind_espeak_EVENT_get_unique_identifier_0=At.asm.Q).apply(null,arguments)},p1=At._emscripten_bind_espeak_EVENT_get_text_position_0=function(){return(p1=At._emscripten_bind_espeak_EVENT_get_text_position_0=At.asm.R).apply(null,arguments)},h1=At._emscripten_bind_espeak_EVENT_get_length_0=function(){return(h1=At._emscripten_bind_espeak_EVENT_get_length_0=At.asm.S).apply(null,arguments)},m1=At._emscripten_bind_espeak_EVENT_get_audio_position_0=function(){return(m1=At._emscripten_bind_espeak_EVENT_get_audio_position_0=At.asm.T).apply(null,arguments)},b1=At._emscripten_bind_espeak_EVENT_get_sample_0=function(){return(b1=At._emscripten_bind_espeak_EVENT_get_sample_0=At.asm.U).apply(null,arguments)},C1=At._emscripten_bind_espeak_EVENT_get_user_data_0=function(){return(C1=At._emscripten_bind_espeak_EVENT_get_user_data_0=At.asm.V).apply(null,arguments)},w1=At._emscripten_bind_espeak_EVENT___destroy___0=function(){return(w1=At._emscripten_bind_espeak_EVENT___destroy___0=At.asm.W).apply(null,arguments)},I1=At._emscripten_bind_eSpeakNGWorker_eSpeakNGWorker_0=function(){return(I1=At._emscripten_bind_eSpeakNGWorker_eSpeakNGWorker_0=At.asm.X).apply(null,arguments)},k1=At._emscripten_bind_eSpeakNGWorker_synth__2=function(){return(k1=At._emscripten_bind_eSpeakNGWorker_synth__2=At.asm.Y).apply(null,arguments)},y1=At._emscripten_bind_eSpeakNGWorker_synth_ipa__2=function(){return(y1=At._emscripten_bind_eSpeakNGWorker_synth_ipa__2=At.asm.Z).apply(null,arguments)},_1=At._emscripten_bind_eSpeakNGWorker_getSizeOfEventStruct__0=function(){return(_1=At._emscripten_bind_eSpeakNGWorker_getSizeOfEventStruct__0=At.asm._).apply(null,arguments)},v1=At._emscripten_bind_eSpeakNGWorker_set_voice_2=function(){return(v1=At._emscripten_bind_eSpeakNGWorker_set_voice_2=At.asm.$).apply(null,arguments)},x1=At._emscripten_bind_eSpeakNGWorker_set_voice_3=function(){return(x1=At._emscripten_bind_eSpeakNGWorker_set_voice_3=At.asm.aa).apply(null,arguments)},M1=At._emscripten_bind_eSpeakNGWorker_set_voice_4=function(){return(M1=At._emscripten_bind_eSpeakNGWorker_set_voice_4=At.asm.ba).apply(null,arguments)},E1=At._emscripten_bind_eSpeakNGWorker_set_voice_5=function(){return(E1=At._emscripten_bind_eSpeakNGWorker_set_voice_5=At.asm.ca).apply(null,arguments)},B1=At._emscripten_bind_eSpeakNGWorker_get_voices_1=function(){return(B1=At._emscripten_bind_eSpeakNGWorker_get_voices_1=At.asm.da).apply(null,arguments)},T1=At._emscripten_bind_eSpeakNGWorker_set_voices_2=function(){return(T1=At._emscripten_bind_eSpeakNGWorker_set_voices_2=At.asm.ea).apply(null,arguments)},P1=At._emscripten_bind_eSpeakNGWorker_get_samplerate_0=function(){return(P1=At._emscripten_bind_eSpeakNGWorker_get_samplerate_0=At.asm.fa).apply(null,arguments)},D1=At._emscripten_bind_eSpeakNGWorker_get_rate_0=function(){return(D1=At._emscripten_bind_eSpeakNGWorker_get_rate_0=At.asm.ga).apply(null,arguments)},S1=At._emscripten_bind_eSpeakNGWorker_set_rate_1=function(){return(S1=At._emscripten_bind_eSpeakNGWorker_set_rate_1=At.asm.ha).apply(null,arguments)},G1=At._emscripten_bind_eSpeakNGWorker_get_pitch_0=function(){return(G1=At._emscripten_bind_eSpeakNGWorker_get_pitch_0=At.asm.ia).apply(null,arguments)},F1=At._emscripten_bind_eSpeakNGWorker_set_pitch_1=function(){return(F1=At._emscripten_bind_eSpeakNGWorker_set_pitch_1=At.asm.ja).apply(null,arguments)},z1=At._emscripten_bind_eSpeakNGWorker___destroy___0=function(){return(z1=At._emscripten_bind_eSpeakNGWorker___destroy___0=At.asm.ka).apply(null,arguments)},O1=At._emscripten_enum_espeak_EVENT_TYPE_espeakEVENT_LIST_TERMINATED=function(){return(O1=At._emscripten_enum_espeak_EVENT_TYPE_espeakEVENT_LIST_TERMINATED=At.asm.la).apply(null,arguments)},Q1=At._emscripten_enum_espeak_EVENT_TYPE_espeakEVENT_WORD=function(){return(Q1=At._emscripten_enum_espeak_EVENT_TYPE_espeakEVENT_WORD=At.asm.ma).apply(null,arguments)},N1=At._emscripten_enum_espeak_EVENT_TYPE_espeakEVENT_SENTENCE=function(){return(N1=At._emscripten_enum_espeak_EVENT_TYPE_espeakEVENT_SENTENCE=At.asm.na).apply(null,arguments)},L1=At._emscripten_enum_espeak_EVENT_TYPE_espeakEVENT_MARK=function(){return(L1=At._emscripten_enum_espeak_EVENT_TYPE_espeakEVENT_MARK=At.asm.oa).apply(null,arguments)},R1=At._emscripten_enum_espeak_EVENT_TYPE_espeakEVENT_PLAY=function(){return(R1=At._emscripten_enum_espeak_EVENT_TYPE_espeakEVENT_PLAY=At.asm.pa).apply(null,arguments)},j1=At._emscripten_enum_espeak_EVENT_TYPE_espeakEVENT_END=function(){return(j1=At._emscripten_enum_espeak_EVENT_TYPE_espeakEVENT_END=At.asm.qa).apply(null,arguments)},V1=At._emscripten_enum_espeak_EVENT_TYPE_espeakEVENT_MSG_TERMINATED=function(){return(V1=At._emscripten_enum_espeak_EVENT_TYPE_espeakEVENT_MSG_TERMINATED=At.asm.ra).apply(null,arguments)},W1=At._emscripten_enum_espeak_EVENT_TYPE_espeakEVENT_PHONEME=function(){return(W1=At._emscripten_enum_espeak_EVENT_TYPE_espeakEVENT_PHONEME=At.asm.sa).apply(null,arguments)},U1=At._emscripten_enum_espeak_EVENT_TYPE_espeakEVENT_SAMPLERATE=function(){return(U1=At._emscripten_enum_espeak_EVENT_TYPE_espeakEVENT_SAMPLERATE=At.asm.ta).apply(null,arguments)},H1=At.___errno_location=function(){return(H1=At.___errno_location=At.asm.va).apply(null,arguments)};At._free=function(){return(At._free=At.asm.wa).apply(null,arguments)},At._malloc=function(){return(At._malloc=At.asm.xa).apply(null,arguments)};var kf,Y1=At.___cxa_is_pointer_type=function(){return(Y1=At.___cxa_is_pointer_type=At.asm.ya).apply(null,arguments)};function K1(T){function k(){kf||(kf=!0,At.calledRun=!0,Op||(jp=!0,At.noFSInit||je.init.initialized||je.init(),je.ignorePermissions=!1,dp(Rp),At.onRuntimeInitialized&&At.onRuntimeInitialized(),function(){if(At.postRun)for(typeof At.postRun=="function"&&(At.postRun=[At.postRun]);At.postRun.length;)A=At.postRun.shift(),Ep.unshift(A);var A;dp(Ep)}()))}jd>0||(function(){if(At.preRun)for(typeof At.preRun=="function"&&(At.preRun=[At.preRun]);At.preRun.length;)A=At.preRun.shift(),Mp.unshift(A);var A;dp(Mp)}(),jd>0||(At.setStatus?(At.setStatus("Running..."),setTimeout(function(){setTimeout(function(){At.setStatus("")},1),k()},1)):k()))}if(At.___start_em_js=132724,At.___stop_em_js=132822,At.addRunDependency=Wp,At.removeRunDependency=Up,At.FS_createPath=je.createPath,At.FS_createDataFile=je.createDataFile,At.FS_createLazyFile=je.createLazyFile,At.FS_createDevice=je.createDevice,At.FS_unlink=je.unlink,Mg=function T(){kf||K1(),kf||(Mg=T)},At.preInit)for(typeof At.preInit=="function"&&(At.preInit=[At.preInit]);At.preInit.length>0;)At.preInit.pop()();function Pl(){}function yf(T){return(T||Pl).__cache__}function E2(T,k){var A=yf(k),w=A[T];return w||((w=Object.create((k||Pl).prototype)).ptr=T,A[T]=w)}K1(),Pl.prototype=Object.create(Pl.prototype),Pl.prototype.constructor=Pl,Pl.prototype.__class__=Pl,Pl.__cache__={},At.WrapperObject=Pl,At.getCache=yf,At.wrapPointer=E2,At.castObject=function(T,k){return E2(T.ptr,k)},At.NULL=E2(0),At.destroy=function(T){if(!T.__destroy__)throw"Error: Cannot destroy object. (Did you create it yourself?)";T.__destroy__(),delete yf(T.__class__)[T.ptr]},At.compare=function(T,k){return T.ptr===k.ptr},At.getPointer=function(T){return T.ptr},At.getClass=function(T){return T.__class__};var An={buffer:0,size:0,pos:0,temps:[],needed:0,prepare:function(){if(An.needed){for(var T=0;T<An.temps.length;T++)At._free(An.temps[T]);An.temps.length=0,At._free(An.buffer),An.buffer=0,An.size+=An.needed,An.needed=0}An.buffer||(An.size+=128,An.buffer=At._malloc(An.size),cp(An.buffer)),An.pos=0},alloc:function(T,k){cp(An.buffer);var A,w=k.BYTES_PER_ELEMENT,F=T.length*w;return F=F+7&-8,An.pos+F>=An.size?(cp(F>0),An.needed+=F,A=At._malloc(F),An.temps.push(A)):(A=An.buffer+An.pos,An.pos+=F),A},copy:function(T,k,A){switch(A>>>=0,k.BYTES_PER_ELEMENT){case 2:A>>>=1;break;case 4:A>>>=2;break;case 8:A>>>=3}for(var w=0;w<T.length;w++)k[A+w]=T[w]}};function Ld(T){if(typeof T=="string"){var k=Hp(T),A=An.alloc(k,IA);return An.copy(k,IA,A),A}return T}function fd(){throw"cannot construct a VoidPtr, no constructor in IDL"}function us(){throw"cannot construct a espeak_VOICE, no constructor in IDL"}function ya(){throw"cannot construct a espeak_EVENT, no constructor in IDL"}function ta(){this.ptr=I1(),yf(ta)[this.ptr]=this}fd.prototype=Object.create(Pl.prototype),fd.prototype.constructor=fd,fd.prototype.__class__=fd,fd.__cache__={},At.VoidPtr=fd,fd.prototype.__destroy__=fd.prototype.__destroy__=function(){var T=this.ptr;Kp(T)},us.prototype=Object.create(Pl.prototype),us.prototype.constructor=us,us.prototype.__class__=us,us.__cache__={},At.espeak_VOICE=us,us.prototype.get_name=us.prototype.get_name=function(){var T=this.ptr;return M2(qp(T))},us.prototype.set_name=us.prototype.set_name=function(T){var k=this.ptr;An.prepare(),T=T&&typeof T=="object"?T.ptr:Ld(T),Xp(k,T)},Object.defineProperty(us.prototype,"name",{get:us.prototype.get_name,set:us.prototype.set_name}),us.prototype.get_languages=us.prototype.get_languages=function(T){var k=this.ptr;return T&&typeof T=="object"&&(T=T.ptr),Zp(k,T)},Object.defineProperty(us.prototype,"languages",{get:us.prototype.get_languages}),us.prototype.get_identifier=us.prototype.get_identifier=function(){var T=this.ptr;return M2(Jp(T))},us.prototype.set_identifier=us.prototype.set_identifier=function(T){var k=this.ptr;An.prepare(),T=T&&typeof T=="object"?T.ptr:Ld(T),$p(k,T)},Object.defineProperty(us.prototype,"identifier",{get:us.prototype.get_identifier,set:us.prototype.set_identifier}),us.prototype.get_gender=us.prototype.get_gender=function(){var T=this.ptr;return e1(T)},us.prototype.set_gender=us.prototype.set_gender=function(T){var k=this.ptr;T&&typeof T=="object"&&(T=T.ptr),t1(k,T)},Object.defineProperty(us.prototype,"gender",{get:us.prototype.get_gender,set:us.prototype.set_gender}),us.prototype.get_age=us.prototype.get_age=function(){var T=this.ptr;return r1(T)},us.prototype.set_age=us.prototype.set_age=function(T){var k=this.ptr;T&&typeof T=="object"&&(T=T.ptr),s1(k,T)},Object.defineProperty(us.prototype,"age",{get:us.prototype.get_age,set:us.prototype.set_age}),us.prototype.get_variant=us.prototype.get_variant=function(){var T=this.ptr;return a1(T)},us.prototype.set_variant=us.prototype.set_variant=function(T){var k=this.ptr;T&&typeof T=="object"&&(T=T.ptr),n1(k,T)},Object.defineProperty(us.prototype,"variant",{get:us.prototype.get_variant,set:us.prototype.set_variant}),us.prototype.get_xx1=us.prototype.get_xx1=function(){var T=this.ptr;return i1(T)},us.prototype.set_xx1=us.prototype.set_xx1=function(T){var k=this.ptr;T&&typeof T=="object"&&(T=T.ptr),o1(k,T)},Object.defineProperty(us.prototype,"xx1",{get:us.prototype.get_xx1,set:us.prototype.set_xx1}),us.prototype.get_score=us.prototype.get_score=function(){var T=this.ptr;return A1(T)},us.prototype.set_score=us.prototype.set_score=function(T){var k=this.ptr;T&&typeof T=="object"&&(T=T.ptr),l1(k,T)},Object.defineProperty(us.prototype,"score",{get:us.prototype.get_score,set:us.prototype.set_score}),us.prototype.get_spare=us.prototype.get_spare=function(){var T=this.ptr;return c1(T)},us.prototype.set_spare=us.prototype.set_spare=function(T){var k=this.ptr;T&&typeof T=="object"&&(T=T.ptr),u1(k,T)},Object.defineProperty(us.prototype,"spare",{get:us.prototype.get_spare,set:us.prototype.set_spare}),us.prototype.__destroy__=us.prototype.__destroy__=function(){var T=this.ptr;d1(T)},ya.prototype=Object.create(Pl.prototype),ya.prototype.constructor=ya,ya.prototype.__class__=ya,ya.__cache__={},At.espeak_EVENT=ya,ya.prototype.get_type=ya.prototype.get_type=function(){var T=this.ptr;return g1(T)},Object.defineProperty(ya.prototype,"type",{get:ya.prototype.get_type}),ya.prototype.get_unique_identifier=ya.prototype.get_unique_identifier=function(){var T=this.ptr;return f1(T)},Object.defineProperty(ya.prototype,"unique_identifier",{get:ya.prototype.get_unique_identifier}),ya.prototype.get_text_position=ya.prototype.get_text_position=function(){var T=this.ptr;return p1(T)},Object.defineProperty(ya.prototype,"text_position",{get:ya.prototype.get_text_position}),ya.prototype.get_length=ya.prototype.get_length=function(){var T=this.ptr;return h1(T)},Object.defineProperty(ya.prototype,"length",{get:ya.prototype.get_length}),ya.prototype.get_audio_position=ya.prototype.get_audio_position=function(){var T=this.ptr;return m1(T)},Object.defineProperty(ya.prototype,"audio_position",{get:ya.prototype.get_audio_position}),ya.prototype.get_sample=ya.prototype.get_sample=function(){var T=this.ptr;return b1(T)},Object.defineProperty(ya.prototype,"sample",{get:ya.prototype.get_sample}),ya.prototype.get_user_data=ya.prototype.get_user_data=function(){var T=this.ptr;return C1(T)},Object.defineProperty(ya.prototype,"user_data",{get:ya.prototype.get_user_data}),ya.prototype.__destroy__=ya.prototype.__destroy__=function(){var T=this.ptr;w1(T)},ta.prototype=Object.create(Pl.prototype),ta.prototype.constructor=ta,ta.prototype.__class__=ta,ta.__cache__={},At.eSpeakNGWorker=ta,ta.prototype.synth_=ta.prototype.synth_=function(T,k){var A=this.ptr;An.prepare(),T=T&&typeof T=="object"?T.ptr:Ld(T),k&&typeof k=="object"&&(k=k.ptr),k1(A,T,k)},ta.prototype.synth_ipa_=ta.prototype.synth_ipa_=function(T,k){var A=this.ptr;return An.prepare(),T=T&&typeof T=="object"?T.ptr:Ld(T),k=k&&typeof k=="object"?k.ptr:Ld(k),y1(A,T,k)},ta.prototype.getSizeOfEventStruct_=ta.prototype.getSizeOfEventStruct_=function(){var T=this.ptr;return _1(T)},ta.prototype.set_voice=ta.prototype.set_voice=function(T,k,A,w,F){var Y=this.ptr;return An.prepare(),T=T&&typeof T=="object"?T.ptr:Ld(T),k=k&&typeof k=="object"?k.ptr:Ld(k),A&&typeof A=="object"&&(A=A.ptr),w&&typeof w=="object"&&(w=w.ptr),F&&typeof F=="object"&&(F=F.ptr),A===void 0?v1(Y,T,k):w===void 0?x1(Y,T,k,A):F===void 0?M1(Y,T,k,A,w):E1(Y,T,k,A,w,F)},ta.prototype.get_voices=ta.prototype.get_voices=function(T){var k=this.ptr;return T&&typeof T=="object"&&(T=T.ptr),E2(B1(k,T),us)},ta.prototype.set_voices=ta.prototype.set_voices=function(T,k){var A=this.ptr;An.prepare(),T&&typeof T=="object"&&(T=T.ptr),k&&typeof k=="object"&&(k=k.ptr),T1(A,T,k)},Object.defineProperty(ta.prototype,"voices",{get:ta.prototype.get_voices,set:ta.prototype.set_voices}),ta.prototype.get_samplerate=ta.prototype.get_samplerate=function(){var T=this.ptr;return P1(T)},Object.defineProperty(ta.prototype,"samplerate",{get:ta.prototype.get_samplerate}),ta.prototype.get_rate=ta.prototype.get_rate=function(){var T=this.ptr;return D1(T)},ta.prototype.set_rate=ta.prototype.set_rate=function(T){var k=this.ptr;T&&typeof T=="object"&&(T=T.ptr),S1(k,T)},Object.defineProperty(ta.prototype,"rate",{get:ta.prototype.get_rate,set:ta.prototype.set_rate}),ta.prototype.get_pitch=ta.prototype.get_pitch=function(){var T=this.ptr;return G1(T)},ta.prototype.set_pitch=ta.prototype.set_pitch=function(T){var k=this.ptr;T&&typeof T=="object"&&(T=T.ptr),F1(k,T)},Object.defineProperty(ta.prototype,"pitch",{get:ta.prototype.get_pitch,set:ta.prototype.set_pitch}),ta.prototype.__destroy__=ta.prototype.__destroy__=function(){var T=this.ptr;z1(T)},function(){function T(){At.espeakEVENT_LIST_TERMINATED=O1(),At.espeakEVENT_WORD=Q1(),At.espeakEVENT_SENTENCE=N1(),At.espeakEVENT_MARK=L1(),At.espeakEVENT_PLAY=R1(),At.espeakEVENT_END=j1(),At.espeakEVENT_MSG_TERMINATED=V1(),At.espeakEVENT_PHONEME=W1(),At.espeakEVENT_SAMPLERATE=U1()}jp?T():Vp(T)}(),ta.prototype.list_voices=function(){for(var T,k=[],A=this.get_voices(T=0);A.ptr!=0;A=this.get_voices(++T)){let H=function(z){for(var N="",D=z,R=A.get_languages(D++);R!=0;)N+=String.fromCharCode(R),R=A.get_languages(D++);return N};for(var w={name:A.get_name(),identifier:A.get_identifier(),languages:[]},F=0,Y=A.get_languages(F);Y!=0;){var U={priority:Y,name:H(++F)};w.languages.push(U),F+=U.name.length+1,Y=A.get_languages(F)}k.push(w)}return k};var oh=["list_terminated","word","sentence","mark","play","end","msg_terminated","phoneme","samplerate"];ta.prototype.synthesize=function(T,k){var A=this.getSizeOfEventStruct_(),w=addFunction(function(F,Y,U){for(var H=new Float32Array(2*Y),z=0;z<Y;z++)H[2*z]=Math.max(-1,Math.min(1,ah(F+2*z,"i16")/32768)),H[2*z+1]=H[2*z];var N=[];for(F=U,ev=E2(F,ya);ev.get_type()!=At.espeakEVENT_LIST_TERMINATED;ev=E2(F+=A,ya))N.push({type:oh[ev.get_type()],text_position:ev.get_text_position(),word_length:ev.get_length(),audio_position:ev.get_audio_position()});return k(H,N)?1:0});this.synth_(T,w),removeFunction(w)},ta.prototype.synthesize_ipa=function(T,k){var A="espeak-ng-ipa-tmp-"+Math.random().toString().substring(2),w="",F=this.synth_ipa_(T,A);return F==0&&(w=je.readFile(A,{encoding:"utf8"})),je.unlink(A),{code:F,ipa:w}};const q1=new Promise(T=>{At.calledRun?T(new At.eSpeakNGWorker):At.onRuntimeInitialized=()=>T(new At.eSpeakNGWorker)}),Ah=["en"],lh=q1.then(T=>{const k=T.list_voices().map(({name:w,identifier:F,languages:Y})=>({name:w,identifier:F,languages:Y.filter(U=>Ah.includes(U.name.split("-")[0]))})).filter(w=>w.languages.length>0),A=new Set;for(const w of k){A.add(w.identifier);for(const F of w.languages)A.add(F.name)}return{voices:k,identifiers:A}});function ch(T){if(T.includes("."))return T;if(T.includes(":")){let[Y,U]=T.split(":").map(Number);return U===0?`${Y} o'clock`:U<10?`${Y} oh ${U}`:`${Y} ${U}`}let k=parseInt(T.slice(0,4),10);if(k<1100||k%1e3<10)return T;let A=T.slice(0,2),w=parseInt(T.slice(2,4),10),F=T.endsWith("s")?"s":"";if(k%1e3>=100&&k%1e3<=999){if(w===0)return`${A} hundred${F}`;if(w<10)return`${A} oh ${w}${F}`}return`${A} ${w}${F}`}function uh(T){const k=T[0]==="$"?"dollar":"pound";if(isNaN(Number(T.slice(1))))return`${T.slice(1)} ${k}s`;if(!T.includes(".")){let Y=T.slice(1)==="1"?"":"s";return`${T.slice(1)} ${k}${Y}`}const[A,w]=T.slice(1).split("."),F=parseInt(w.padEnd(2,"0"),10);return`${A} ${k}${A==="1"?"":"s"} and ${F} ${T[0]==="$"?F===1?"cent":"cents":F===1?"penny":"pence"}`}function dh(T){let[k,A]=T.split(".");return`${k} point ${A.split("").join(" ")}`}const gh=new RegExp(`(\\s*[${Tp=';:,.!?¡¿—…"«»“”(){}[]',Tp.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}]+\\s*)+`,"g");var Tp;async function fh(T,k="a",A=!0){A&&(T=function(H){return H.replace(/[‘’]/g,"'").replace(/«/g,"“").replace(/»/g,"”").replace(/[“”]/g,'"').replace(/\(/g,"«").replace(/\)/g,"»").replace(/、/g,", ").replace(/。/g,". ").replace(/！/g,"! ").replace(/，/g,", ").replace(/：/g,": ").replace(/；/g,"; ").replace(/？/g,"? ").replace(/[^\S \n]/g," ").replace(/  +/," ").replace(new RegExp("(?<=\\n) +(?=\\n)","g"),"").replace(/\bD[Rr]\.(?= [A-Z])/g,"Doctor").replace(/\b(?:Mr\.|MR\.(?= [A-Z]))/g,"Mister").replace(/\b(?:Ms\.|MS\.(?= [A-Z]))/g,"Miss").replace(/\b(?:Mrs\.|MRS\.(?= [A-Z]))/g,"Mrs").replace(/\betc\.(?! [A-Z])/gi,"etc").replace(/\b(y)eah?\b/gi,"$1e'a").replace(new RegExp("\\d*\\.\\d+|\\b\\d{4}s?\\b|(?<!:)\\b(?:[1-9]|1[0-2]):[0-5]\\d\\b(?!:)","g"),ch).replace(new RegExp("(?<=\\d),(?=\\d)","g"),"").replace(/[$£]\d+(?:\.\d+)?(?: hundred| thousand| (?:[bm]|tr)illion)*\b|[$£]\d+\.\d\d?\b/gi,uh).replace(/\d*\.\d+/g,dh).replace(new RegExp("(?<=\\d)-(?=\\d)","g")," to ").replace(new RegExp("(?<=\\d)S","g")," S").replace(new RegExp("(?<=[BCDFGHJ-NP-TV-Z])'?s\\b","g"),"'S").replace(new RegExp("(?<=X')S\\b","g"),"s").replace(/(?:[A-Za-z]\.){2,} [a-z]/g,z=>z.replace(/\./g,"-")).replace(new RegExp("(?<=[A-Z])\\.(?=[A-Z])","gi"),"-").trim()}(T));const w=function(H,z){const N=[];let D=0;for(const R of H.matchAll(z)){const Q=R[0];D<R.index&&N.push({match:!1,text:H.slice(D,R.index)}),Q.length>0&&N.push({match:!0,text:Q}),D=R.index+Q.length}return D<H.length&&N.push({match:!1,text:H.slice(D)}),N}(T,gh),F=k==="a"?"en-us":"en";let U=(await Promise.all(w.map(async({match:H,text:z})=>H?z:(await(async(N,D="en-us")=>{var J;const R=await q1,{identifiers:Q}=await lh;if(!Q.has(D))throw new Error(`Invalid language identifier: "${D}". Should be one of: ${Array.from(Q).toSorted().join(", ")}.`);return R.set_voice(D),((J=R.synthesize_ipa(N).ipa)==null?void 0:J.split(`
`).filter(oe=>oe.length>0))??[]})(z,F)).join(" ")))).join("").replace(/kəkˈoːɹoʊ/g,"kˈoʊkəɹoʊ").replace(/kəkˈɔːɹəʊ/g,"kˈəʊkəɹəʊ").replace(/ʲ/g,"j").replace(/r/g,"ɹ").replace(/x/g,"k").replace(/ɬ/g,"l").replace(new RegExp("(?<=[a-zɹː])(?=hˈʌndɹɪd)","g")," ").replace(/ z(?=[;:,.!?¡¿—…"«»“” ]|$)/g,"z");return k==="a"&&(U=U.replace(new RegExp("(?<=nˈaɪn)ti(?!ː)","g"),"di")),U.trim()}var yg={};const _g=Object.freeze({af_heart:{name:"Heart",language:"en-us",gender:"Female",traits:"❤️",targetQuality:"A",overallGrade:"A"},af_alloy:{name:"Alloy",language:"en-us",gender:"Female",targetQuality:"B",overallGrade:"C"},af_aoede:{name:"Aoede",language:"en-us",gender:"Female",targetQuality:"B",overallGrade:"C+"},af_bella:{name:"Bella",language:"en-us",gender:"Female",traits:"🔥",targetQuality:"A",overallGrade:"A-"},af_jessica:{name:"Jessica",language:"en-us",gender:"Female",targetQuality:"C",overallGrade:"D"},af_kore:{name:"Kore",language:"en-us",gender:"Female",targetQuality:"B",overallGrade:"C+"},af_nicole:{name:"Nicole",language:"en-us",gender:"Female",traits:"🎧",targetQuality:"B",overallGrade:"B-"},af_nova:{name:"Nova",language:"en-us",gender:"Female",targetQuality:"B",overallGrade:"C"},af_river:{name:"River",language:"en-us",gender:"Female",targetQuality:"C",overallGrade:"D"},af_sarah:{name:"Sarah",language:"en-us",gender:"Female",targetQuality:"B",overallGrade:"C+"},af_sky:{name:"Sky",language:"en-us",gender:"Female",targetQuality:"B",overallGrade:"C-"},am_adam:{name:"Adam",language:"en-us",gender:"Male",targetQuality:"D",overallGrade:"F+"},am_echo:{name:"Echo",language:"en-us",gender:"Male",targetQuality:"C",overallGrade:"D"},am_eric:{name:"Eric",language:"en-us",gender:"Male",targetQuality:"C",overallGrade:"D"},am_fenrir:{name:"Fenrir",language:"en-us",gender:"Male",targetQuality:"B",overallGrade:"C+"},am_liam:{name:"Liam",language:"en-us",gender:"Male",targetQuality:"C",overallGrade:"D"},am_michael:{name:"Michael",language:"en-us",gender:"Male",targetQuality:"B",overallGrade:"C+"},am_onyx:{name:"Onyx",language:"en-us",gender:"Male",targetQuality:"C",overallGrade:"D"},am_puck:{name:"Puck",language:"en-us",gender:"Male",targetQuality:"B",overallGrade:"C+"},am_santa:{name:"Santa",language:"en-us",gender:"Male",targetQuality:"C",overallGrade:"D-"},bf_emma:{name:"Emma",language:"en-gb",gender:"Female",traits:"🚺",targetQuality:"B",overallGrade:"B-"},bf_isabella:{name:"Isabella",language:"en-gb",gender:"Female",targetQuality:"B",overallGrade:"C"},bm_george:{name:"George",language:"en-gb",gender:"Male",targetQuality:"B",overallGrade:"C"},bm_lewis:{name:"Lewis",language:"en-gb",gender:"Male",targetQuality:"C",overallGrade:"D+"},bf_alice:{name:"Alice",language:"en-gb",gender:"Female",traits:"🚺",targetQuality:"C",overallGrade:"D"},bf_lily:{name:"Lily",language:"en-gb",gender:"Female",traits:"🚺",targetQuality:"C",overallGrade:"D"},bm_daniel:{name:"Daniel",language:"en-gb",gender:"Male",traits:"🚹",targetQuality:"C",overallGrade:"D"},bm_fable:{name:"Fable",language:"en-gb",gender:"Male",traits:"🚹",targetQuality:"B",overallGrade:"C"}}),fp=new Map;async function ph(T){if(fp.has(T))return fp.get(T);const k=new Float32Array(await async function(A){if(yg!=null&&yg.readFile){const H=typeof __dirname<"u"?__dirname:import.meta.dirname,z=yg.resolve(H,`../voices/${A}.bin`),{buffer:N}=await yg.readFile(z);return N}const w=`https://huggingface.co/onnx-community/Kokoro-82M-v1.0-ONNX/resolve/main/voices/${A}.bin`;let F;try{F=await caches.open("kokoro-voices");const H=await F.match(w);if(H)return await H.arrayBuffer()}catch(H){console.warn("Unable to open cache",H)}const Y=await fetch(w),U=await Y.arrayBuffer();if(F)try{await F.put(w,new Response(U,{headers:Y.headers}))}catch(H){console.warn("Unable to cache file",H)}return U}(T));return fp.set(T,k),k}class Cp{constructor(k,A){this.model=k,this.tokenizer=A}static async from_pretrained(k,{dtype:A="fp32",device:w=null,progress_callback:F=null}={}){const Y=th.from_pretrained(k,{progress_callback:F,dtype:A,device:w}),U=$1.from_pretrained(k,{progress_callback:F}),H=await Promise.all([Y,U]);return new Cp(...H)}get voices(){return _g}list_voices(){console.table(_g)}_validate_voice(k){if(!_g.hasOwnProperty(k))throw console.error(`Voice "${k}" not found. Available voices:`),console.table(_g),new Error(`Voice "${k}" not found. Should be one of: ${Object.keys(_g).join(", ")}.`)}async generate(k,{voice:A="af_heart",speed:w=1}={}){this._validate_voice(A);const F=A.at(0),Y=await fh(k,F),{input_ids:U}=this.tokenizer(Y,{truncation:!0}),H=256*Math.min(Math.max(U.dims.at(-1)-2,0),509),z=(await ph(A)).slice(H,H+256),N={input_ids:U,style:new yp("float32",z,[1,256]),speed:new yp("float32",[w],[1])},{waveform:D}=await this.model(N);return new eh(D.data,24e3)}}J1.backends.onnx.wasm.wasmPaths="/wasm/";let pp,mf=!1;const hh="onnx-community/Kokoro-82M-v1.0-ONNX";self.onmessage=async T=>{const{type:k,payload:A}=T.data;if(k==="init"){let{model_id:w,dtype:F}=A;w=w||hh,self.postMessage({status:"init:start"});try{pp=await Cp.from_pretrained(w,{dtype:F,device:navigator!=null&&navigator.gpu?"webgpu":"wasm"}),mf=!0,self.postMessage({status:"init:complete"})}catch(Y){mf=!1,self.postMessage({status:"init:error",error:Y.message})}}if(k==="generate"){if(!mf||!pp){self.postMessage({status:"generate:error",error:"TTS model not initialized"});return}const{text:w,voice:F}=A;self.postMessage({status:"generate:start"});try{const U=await(await pp.generate(w,{voice:F})).toBlob(),H=URL.createObjectURL(U);self.postMessage({status:"generate:complete",audioUrl:H})}catch(Y){self.postMessage({status:"generate:error",error:Y.message})}}k==="status"&&self.postMessage({status:"status:check",initialized:mf})};
//# sourceMappingURL=kokoro.worker-Cev3ZHQt.js.map
